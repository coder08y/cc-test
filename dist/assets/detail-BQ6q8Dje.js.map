{"version":3,"file":"detail-BQ6q8Dje.js","sources":["../../src/hooks/dlmm-position/useDlmmPosRemove.ts","../../src/hooks/position/useGetDlmmPositionDailyEarning.ts","../../src/store/dlmm-position/detail.ts"],"sourcesContent":["import { DlmmPosClosePositionParams, DlmmPosRemoveLiquidityParams, DlmmPreRemoveParams } from '@/types/dlmm'\nimport { getBatchBinInfo } from '@/utils/dlmm'\nimport { useSdk } from '@cetus/sdk-factory'\nimport { d } from '@cetusprotocol/common-sdk'\nimport {\n  CalculateRemoveLiquidityBothOption,\n  CalculateRemoveLiquidityOnlyOption,\n  ClosePositionOption,\n  RemoveLiquidityOption\n} from '@cetusprotocol/dlmm-sdk'\nimport { Transaction } from '@mysten/sui/transactions'\nimport useDlmmPosCollect from './useDlmmPosCollect'\n\nexport default function useDlmmPosRemove() {\n  const dlmmSdk = useSdk('dlmm')\n  const { collectRewardAndFeePayload } = useDlmmPosCollect()\n  const dlmmPreRemove = async (params: DlmmPreRemoveParams) => {\n    const { bins, activeId, fixAmountA, coinAmount, isOnlyA, tokenA, tokenB, isReverse } = params\n\n    const dlmmPosRemoveLiquidityParams: CalculateRemoveLiquidityBothOption | CalculateRemoveLiquidityOnlyOption = {\n      bins,\n      active_id: activeId,\n      coin_amount: coinAmount,\n      ...(isOnlyA !== undefined ? { is_only_a: isOnlyA } : { fix_amount_a: fixAmountA })\n    }\n    console.log('🚀🚀🚀 ~ useDlmmPosRemove.ts:11 ~ dlmmPreRemove ~ dlmmPosRemoveLiquidityParams:', dlmmPosRemoveLiquidityParams)\n\n    const binInfos = dlmmSdk?.Position.calculateRemoveLiquidityInfo(dlmmPosRemoveLiquidityParams)\n    console.log('🚀🚀🚀 ~ useDlmmPosRemove.ts:18 ~ preRemove ~ binInfos:', binInfos)\n    const coinAmountA = d(binInfos?.amount_a)\n      .div(10 ** tokenA?.decimals)\n      .toString()\n    const coinAmountB = d(binInfos?.amount_b)\n      .div(10 ** tokenB?.decimals)\n      .toString()\n\n    return {\n      displayCoinAmountA: isReverse ? coinAmountB : coinAmountA,\n      displayCoinAmountB: isReverse ? coinAmountA : coinAmountB,\n      coinAmountA,\n      coinAmountB,\n      binInfos\n    }\n  }\n\n  const getDlmmPosRemoveLiquidityPayload = (params: DlmmPosRemoveLiquidityParams, isAutoClaim: boolean) => {\n    const { dlmmPool, binInfos, coinTypeA, coinTypeB, positionId, slippage, rewardCoins, activeId, binStep, slideValue } = params\n\n    const { bins } = binInfos\n    const payloads: Transaction[] = []\n    console.log(bins, 'getDlmmPosRemoveLiquidityPayload bins')\n    if (bins.length > 1000) {\n      // 如果bins数量超过1000，分批处理\n      const batchSize = 1000\n      const totalBatches = Math.ceil(bins.length / batchSize)\n\n      for (let i = 0; i < totalBatches; i++) {\n        const batchBinInfo = getBatchBinInfo(bins, i, batchSize)\n\n        const parameter: RemoveLiquidityOption = {\n          pool_id: dlmmPool,\n          position_id: positionId,\n          bin_infos: batchBinInfo,\n          coin_type_a: coinTypeA,\n          coin_type_b: coinTypeB,\n          slippage,\n          reward_coins: [],\n          active_id: activeId,\n          collect_fee: false,\n          bin_step: binStep,\n          remove_percent: slideValue\n        }\n\n        const payload = dlmmSdk!.Position.removeLiquidityPayload(parameter)\n        payloads.push(payload)\n\n        let claimTx = null\n        if (i === totalBatches - 1 && isAutoClaim) {\n          claimTx = collectRewardAndFeePayload(\n            [\n              {\n                dlmmPool: parameter.pool_id,\n                positionId: parameter.position_id,\n                rewardCoins,\n                coinTypeA: parameter.coin_type_a,\n                coinTypeB: parameter.coin_type_b\n              }\n            ],\n            payload\n          )\n        }\n\n        console.log(`🚀🚀🚀 ~ useDlmmPosRemove.ts ~ getDlmmPosRemoveLiquidityPayload ~ batch ${i + 1}/${totalBatches} ~ parameter:`, parameter)\n      }\n    } else {\n      // 如果bins数量不超过1000，直接处理\n      const parameter: RemoveLiquidityOption = {\n        pool_id: dlmmPool,\n        position_id: positionId,\n        bin_infos: binInfos,\n        coin_type_a: coinTypeA,\n        coin_type_b: coinTypeB,\n        slippage,\n        reward_coins: isAutoClaim ? rewardCoins : [],\n        active_id: activeId,\n        collect_fee: isAutoClaim,\n        bin_step: binStep,\n        remove_percent: slideValue\n      }\n\n      console.log('🚀🚀🚀 ~ useDlmmPosRemove.ts ~ getDlmmPosRemoveLiquidityPayload ~ single batch ~ parameter:', parameter)\n\n      const payload = dlmmSdk!.Position.removeLiquidityPayload(parameter)\n      payloads.push(payload)\n    }\n\n    return payloads\n  }\n\n  const getDlmmPosClosePositionPayload = (params: DlmmPosClosePositionParams, txb?: Transaction) => {\n    const { dlmmPool, positionId, rewardCoins, coinTypeA, coinTypeB } = params\n    const dlmmPosClosePositionParams: ClosePositionOption = {\n      pool_id: dlmmPool,\n      position_id: positionId,\n      reward_coins: rewardCoins,\n      coin_type_a: coinTypeA,\n      coin_type_b: coinTypeB\n    }\n    const payload = dlmmSdk!.Position.closePositionPayload(dlmmPosClosePositionParams, txb)\n    console.log('🚀🚀🚀 ~ useDlmmPosRemove.ts:72 ~ getDlmmPosClosePositionPayload ~ payload:', payload)\n    return payload\n  }\n\n  return { dlmmPreRemove, getDlmmPosRemoveLiquidityPayload, getDlmmPosClosePositionPayload }\n}\n","import { DlmmPositionDailyEarningPath } from '@/apis/path'\nimport { aprProcessing } from '@/utils/api-data-utils'\nimport { useFetch } from '@cetus/hooks'\nimport { formatCurrency } from '@cetus/utils'\nimport { d } from '@cetusprotocol/common-sdk'\n\nexport default function useGetDlmmPositionDailyEarning() {\n  const { fetchByApi } = useFetch()\n  const getDlmmPositionDailyEarning = async (position_id: string, currentPoolTvl: string) => {\n    try {\n      const res = await fetchByApi(DlmmPositionDailyEarningPath, 'GET', {\n        position_id\n      })\n      console.log(res, 'getDlmmPositionDailyEarning')\n      if (res?.FeeA) {\n        const { FeeA, FeeB, Mining } = res\n        const { dailyExpansionFactorUSD: dailyExpansionFactorUSDFeeA } = FeeA\n        const { dailyExpansionFactorUSD: dailyExpansionFactorUSDFeeB } = FeeB\n        let dailyExpansionFactorUSDMining = d(0)\n        Mining.forEach((item: any) => {\n          dailyExpansionFactorUSDMining = d(item.dailyExpansionFactorUSD).add(dailyExpansionFactorUSDMining)\n        })\n        const totalDailyExpansionFactorUSD = d(dailyExpansionFactorUSDFeeA)\n          .add(d(dailyExpansionFactorUSDFeeB))\n          .add(dailyExpansionFactorUSDMining)\n          .toString()\n        if (currentPoolTvl !== undefined && d(currentPoolTvl).gt(0)) {\n          const apr = d(totalDailyExpansionFactorUSD).div(d(currentPoolTvl)).mul(365).toString()\n          const aprDisplay = aprProcessing(apr, true)\n          const dailyEarnUSDDisplay = formatCurrency(totalDailyExpansionFactorUSD, 2)\n          return { apr, aprDisplay, totalDailyExpansionFactorUSD, dailyEarnUSDDisplay, originResult: res }\n        }\n      }\n    } catch (error) {\n      console.log('🚀🚀🚀 ~ getDlmmPositionDailyEarning.ts:35 ~ getDlmmPositionDailyEarning ~ error:', error)\n      throw error\n    }\n  }\n  return { getDlmmPositionDailyEarning }\n}\n","import { PriceDataType } from '@/hooks/create-pool/useCreateDLMMPool'\nimport { d } from '@cetus/utils'\nimport { BinLiquidityInfo } from '@cetusprotocol/dlmm-sdk'\nimport { create, StateCreator } from 'zustand'\n\ninterface DlmmPositionDetailState {\n  binInfos: BinLiquidityInfo\n  setBinInfos: (data: BinLiquidityInfo) => void\n\n  currentPosDetailTab: string\n  setCurrentPosDetailTab: (value: string) => void\n\n  tokenAmountAfterA: string\n  setTokenAmountAfterA: (value: string) => void\n\n  tokenAmountAfterB: string\n  setTokenAmountAfterB: (value: string) => void\n\n  minPriceData: PriceDataType\n  maxPriceData: PriceDataType\n  setMinPriceData: (data: PriceDataType) => void\n  setMaxPriceData: (data: PriceDataType) => void\n\n  dlmmPosDetailDirect: boolean\n  setDlmmPosDetailDirect: (status: boolean) => void\n  showPositionSelectRange: boolean\n  setShowPositionSelectRange: (status: boolean) => void\n  resetDlmmPosDetail: () => void\n\n  isAutoClaim: boolean\n  setIsAutoClaim: (status: boolean) => void\n\n  preCalcError: 'amountTooSmall' | undefined\n  setPreCalcError: (type?: 'amountTooSmall') => void\n}\nconst store: StateCreator<DlmmPositionDetailState> = (set, get) => ({\n  preCalcError: undefined,\n  setPreCalcError: (type?: 'amountTooSmall') => {\n    set(() => ({\n      preCalcError: type\n    }))\n  },\n  binInfos: {} as BinLiquidityInfo,\n  setBinInfos: (data: BinLiquidityInfo) => {\n    set(() => ({\n      binInfos: data\n    }))\n  },\n\n  currentPosDetailTab: 'increase',\n  setCurrentPosDetailTab: (value: string) => {\n    set(() => ({\n      currentPosDetailTab: value\n    }))\n  },\n\n  tokenAmountAfterA: '',\n  tokenAmountAfterB: '',\n  setTokenAmountAfterA: (value: string) => {\n    set(() => ({\n      tokenAmountAfterA: d(value).lte(0) && value !== '' ? '0' : value\n    }))\n  },\n  setTokenAmountAfterB: (value: string) => {\n    set(() => ({\n      tokenAmountAfterB: d(value).lte(0) && value !== '' ? '0' : value\n    }))\n  },\n  minPriceData: {} as PriceDataType,\n  maxPriceData: {} as PriceDataType,\n  setMinPriceData: (data: PriceDataType) => {\n    set(() => ({\n      minPriceData: data\n    }))\n  },\n  setMaxPriceData: (data: PriceDataType) => {\n    set(() => ({\n      maxPriceData: data\n    }))\n  },\n  dlmmPosDetailDirect: true,\n  setDlmmPosDetailDirect: (status: boolean) => {\n    set(() => ({\n      dlmmPosDetailDirect: status\n    }))\n  },\n  showPositionSelectRange: true,\n  setShowPositionSelectRange: (status: boolean) => {\n    set(() => ({\n      showPositionSelectRange: status\n    }))\n  },\n  isAutoClaim: true,\n  setIsAutoClaim: (status: boolean) => {\n    set(() => ({\n      isAutoClaim: status\n    }))\n  },\n  resetDlmmPosDetail: () => {\n    set(() => ({\n      binInfos: {} as BinLiquidityInfo,\n      currentPosDetailTab: 'increase',\n      tokenAmountAfterA: '',\n      tokenAmountAfterB: '',\n      minPriceData: {} as PriceDataType,\n      maxPriceData: {} as PriceDataType,\n      dlmmPosDetailDirect: true,\n      showPositionSelectRange: true,\n      isAutoClaim: true,\n      preCalcError: undefined\n    }))\n  }\n})\n\nconst useDlmmPosDetailStore = create(store)\nexport default useDlmmPosDetailStore\n"],"names":["useDlmmPosRemove","dlmmSdk","useSdk","collectRewardAndFeePayload","useDlmmPosCollect","params","bins","activeId","fixAmountA","coinAmount","isOnlyA","tokenA","tokenB","isReverse","dlmmPosRemoveLiquidityParams","binInfos","coinAmountA","d","coinAmountB","isAutoClaim","dlmmPool","coinTypeA","coinTypeB","positionId","slippage","rewardCoins","binStep","slideValue","payloads","totalBatches","i","batchBinInfo","getBatchBinInfo","parameter","payload","txb","dlmmPosClosePositionParams","useGetDlmmPositionDailyEarning","fetchByApi","useFetch","position_id","currentPoolTvl","res","DlmmPositionDailyEarningPath","FeeA","FeeB","Mining","dailyExpansionFactorUSDFeeA","dailyExpansionFactorUSDFeeB","dailyExpansionFactorUSDMining","item","totalDailyExpansionFactorUSD","apr","aprDisplay","aprProcessing","dailyEarnUSDDisplay","formatCurrency","error","store","set","get","type","data","value","status","useDlmmPosDetailStore","create"],"mappings":"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"}