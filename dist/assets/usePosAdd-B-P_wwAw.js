import{f as B,a as I,r as L,d as k,s as g}from"./index-ihcskjKt.js";import{M as S}from"./msafe-BzcjPV-e.js";import{B as x}from"./cross-CbhIs7DK.js";function E(){const F=B("clmm"),b=B("farms"),{slippage:P}=I(),D=t=>{console.log("ðŸš€ ~ usePosAdd ~ params:",t);const{amount:s,tokenA:d,tokenB:m,isTokenA:c,lowerTick:l,upperTick:u,curSqrtPrice:p,isReverse:A,roundUp:f}=t,C=new x(s);console.log("ðŸš€ ~ usePosAdd ~ coinAmount:",P,p,C.toString());const{coin_amount_a:i,coin_amount_b:n,coin_amount_limit_a:_,coin_amount_limit_b:y,liquidity_amount:r}=L.estLiquidityAndCoinAmountFromOneAmounts(l,u,C,c,f,k(P).toNumber(),new x(p));console.log("ðŸš€ ~ usePosAdd ~ coinAmountA:",i.toString()),console.log("ðŸš€ ~ usePosAdd ~ coinAmountB:",n.toString());const o=d.decimals,e=m.decimals;return{coinAmountAOrigin:i.toString(),coinAmountBOrigin:n.toString(),displayCoinAmountA:A?g(n.toString(),e):g(i.toString(),o),displayCoinAmountB:A?g(i.toString(),o):g(n.toString(),e),coinAmountA:g(i.toString(),o),coinAmountB:g(n.toString(),e),tokenMaxA:_.toString(),tokenMaxB:y.toString(),liquidityAmount:r.toString()}},T=async t=>{console.log("ðŸš€ðŸš€ðŸš€ ~ usePosAdd.ts:83 ~ getClmmCreateAddData ~ getClmmCreateAddData:",T);const{poolAddress:s,coinTypeA:d,coinTypeB:m,fixAmountA:c,amountA:l,amountB:u,lowerTick:p,upperTick:A,currentSqrtPrice:f,posType:C,rewarderCoinTypes:i,posIndex:n,posId:_,farmsPoolId:y,isAutoClaim:r}=t,o={coin_type_a:d,coin_type_b:m,amount_a:l,amount_b:u,pool_id:s,fix_amount_a:c,slippage:k(P).toNumber(),is_open:!n,tick_lower:p,tick_upper:A,collect_fee:r?!!n:!1,rewarder_coin_types:r?i:[],pos_id:_||""},e={slippage:k(P).toNumber(),cur_sqrt_price:new x(f)},a=await F.Position.createAddLiquidityFixTokenPayload(o,e);console.log("ðŸš€ðŸš€ðŸš€ ~ usePosAdd.ts:123 ~ getClmmCreateAddData ~ tx:",a);const q={action:n?S.IncreaseLiquidity:S.OpenAndAddLiquidity,txbParams:{parameter:o,gasEstimateArg:e}};return console.log("ðŸš€ ~ getClmmCreateAddData ~ msafeParams:",q,a),{tx:a,msafeParams:q}},w=async t=>{const{poolAddress:s,coinTypeA:d,coinTypeB:m,fixAmountA:c,amountA:l,amountB:u,lowerTick:p,upperTick:A,currentSqrtPrice:f,posType:C,rewarderCoinTypes:i,posIndex:n,posId:_,farmsPoolId:y,isAutoClaim:r}=t;let o,e;if(_){const a={pool_id:y||"",coin_type_a:d,coin_type_b:m,position_nft_id:_,clmm_pool_id:s,amount_a:l,amount_b:u,collect_fee:r,collect_rewarder:!1,fix_amount_a:c,clmm_rewarder_types:r?i:[]};console.log("ðŸš€ ~ getFarmsCreateAddData ~ parameter:",a),o=await b.Farms.addLiquidityFixCoinPayload(a),e={action:S.FarmingIncreaseLiquidity,txbParams:a}}else{const a={pool_id:y||"",coin_type_a:d,coin_type_b:m,clmm_pool_id:s,amount_a:l,amount_b:u,fix_amount_a:c,tick_lower:p,tick_upper:A};console.log("ðŸš€ ~ getFarmsCreateAddData ~ parameter else:",a),o=await b.Farms.openPositionAddLiquidityStakePayload(a),console.log("ðŸš€ ~ getFarmsCreateAddData ~ tx:",o),e={action:S.FarmingOpenAndAddLiquidity,txbParams:a}}return console.log("ðŸš€ ~ getFarmsCreateAddData ~ msafeParams:",e,o),{tx:o,msafeParams:e}};return{preAdd:D,getAddTsPayload:t=>{console.log("ðŸš€ ~ getAddTsPayload ~ params:",t);const{posType:s}=t;return s==="clmm"?T(t):w(t)},getClmmCreateAddData:T,getFarmsCreateAddData:w}}export{E as u};
//# sourceMappingURL=usePosAdd-B-P_wwAw.js.map
