{"version":3,"file":"useGetPoolList-BxNmDN4c.js","sources":["../../src/hooks/pool/useGetPoolList.ts"],"sourcesContent":["import { StatsPoolsPath } from '@/apis/path'\nimport { PoolApiInfo } from '@/types'\nimport { formatCoinTypesParams } from '@/utils/pool'\nimport { useFetch } from '@cetus/hooks'\nimport envConfigs from '@cetus/types/src/config/envConfigs'\nimport { extractStructTagFromType, normalizeCoinType } from '@cetusprotocol/common-sdk'\nimport { GetPoolListParams } from './type'\nimport useWrapPoolData from './useWrapPoolData'\nimport { wrapGetPoolParams } from './utils'\n\nexport default function useGetPoolList() {\n  const { fetchByApi } = useFetch()\n  const { wrapPoolDataV2 } = useWrapPoolData()\n\n  const getPoolList = async (\n    params: GetPoolListParams\n  ): Promise<{\n    list: PoolApiInfo[]\n    total: number\n    isLocal?: boolean\n  }> => {\n    try {\n      const apiParams = { ...params }\n      const coinTypes = formatCoinTypesParams(params?.coin_type)\n      if (coinTypes) {\n        apiParams['coin_type'] = coinTypes\n      }\n      const wrapApiParams = wrapGetPoolParams(apiParams)\n\n      const res = await fetchByApi(StatsPoolsPath, 'POST', wrapApiParams)\n      if ((!res?.data?.list || res?.data?.list?.length === 0) && envConfigs.env === 'testnet') {\n        throw Error('testnet no data')\n      }\n\n      if (res?.data?.list) {\n        const poolList = res?.data?.list?.map((item: any) => {\n          return wrapPoolDataV2(item)\n        })\n        console.log('üöÄ ~ file: useGetPoolList.ts:42 ~ poolList ~ poolList:', poolList)\n\n        return {\n          list: poolList,\n          total: res?.data?.total\n        }\n      }\n    } catch (error) {\n      console.log('üöÄ ~ useGetPoolList ~ error:', error)\n\n      return await getLocalJsonPoolList(params)\n    }\n\n    return {\n      list: [],\n      total: 0\n    }\n  }\n\n  // Ëé∑ÂèñÊú¨Âú∞Json pool listÊï∞ÊçÆ\n  const getLocalJsonPoolList = async (\n    params: GetPoolListParams\n  ): Promise<{\n    list: PoolApiInfo[]\n    total: number\n    isLocal: boolean\n  }> => {\n    console.log('üöÄüöÄüöÄ ~ useGetPoolList.ts:136 ~ useGetPoolList ~ params:', params)\n    try {\n      console.log('üöÄ ~ useGetPoolList ~ envConfigs?.env:', envConfigs?.env)\n      const url = envConfigs?.env === 'testnet' ? '/data/pools-testnet.json' : '/data/pools.json'\n\n      const res = await fetch(url, { cache: 'no-cache' }).then(rsp => {\n        return rsp.json()\n      })\n      console.log(res, 'getLocalJsonPoolList')\n      if (res?.data?.list) {\n        const originList = res?.data?.list\n        let list = originList\n        // ÊîØÊåÅpoolÁ≠õÈÄâ\n        if (params?.pools) {\n          list = originList?.filter((item: any) => params?.pools && params?.pools[0]?.toLocaleLowerCase() == item?.pool.toLocaleLowerCase())\n        }\n\n        if (params?.pool) {\n          list = originList?.filter((item: any) => params?.pool && params?.pool?.toLocaleLowerCase() == item?.pool.toLocaleLowerCase())\n        }\n        console.log('üöÄüöÄüöÄ ~ useGetPoolList.ts:151 ~ useGetPoolList ~ list:', list)\n        console.log('üöÄüöÄüöÄ ~ useGetPoolList.ts:151 ~ useGetPoolList ~ originList:', originList)\n\n        // ÊîØÊåÅcoin_typeÁ≠õÈÄâ\n        if (params?.coin_type) {\n          const coinArr = params?.coin_type?.split(',')?.map(item => extractStructTagFromType(item).source_address)\n          list = originList?.filter((item: any) => {\n            const coinTypeA = extractStructTagFromType(item?.coinA?.coinType).source_address\n            const coinTypeB = extractStructTagFromType(item?.coinB?.coinType).source_address\n            if (coinArr?.length > 1 && coinArr.includes(coinTypeA) && coinArr.includes(coinTypeB)) {\n              return true\n            } else if (coinArr?.length === 1 && (coinArr.includes(coinTypeA) || coinArr.includes(coinTypeB))) {\n              return true\n            } else {\n              return false\n            }\n          })\n        }\n\n        // ÊîØÊåÅvaultsÁ≠õÈÄâ\n        if (params?.is_vaults) {\n          list = originList?.filter((item: any) => item?.is_vaults)\n        }\n\n        // ÊîØÊåÅfarmsÁ≠õÈÄâ\n        if (params?.has_farming && !params?.is_vaults && !params?.has_mining && !params?.no_incentives) {\n          list = originList?.filter((item: any) => item?.farmingRewarder && item?.farmingRewarder?.clmmPool)\n        }\n\n        // Ëµ∞Êú¨Âú∞Êï∞ÊçÆÊó∂ È°µÈù¢Âè™Ê∏≤Êüì40Êù°Êï∞ÊçÆ\n        const resultList = JSON.parse(JSON.stringify(list)).splice(0, 40)\n        console.log('üöÄ ~ useGetPoolList ~ resultList:', resultList)\n        const poolList = resultList?.map((item: any) => {\n          return wrapPoolDataV2(item, true)\n        })\n\n        console.log('getLocalJsonPoolList üöÄ ~ poolList ~ poolList:', poolList)\n\n        return {\n          list: poolList,\n          total: list?.length || 0,\n          isLocal: true\n        }\n      }\n    } catch (error) {\n      console.error('getLocalJsonPoolList Error:', error)\n    }\n\n    return {\n      list: [],\n      total: 0,\n      isLocal: false\n    }\n  }\n\n  const formatCoinAddress = (address: string) => {\n    return normalizeCoinType(address) === '0x2::sui::SUI'\n      ? '0x0000000000000000000000000000000000000000000000000000000000000002::sui::SUI'\n      : normalizeCoinType(address)\n  }\n\n  const getLocalJsonPoolAddress = async (from_type: string, to_type: string): Promise<string[]> => {\n    try {\n      const from = formatCoinAddress(from_type)\n      const to = formatCoinAddress(to_type)\n\n      const url = envConfigs.env === 'testnet' ? '/data/all-pools-testnet.json' : '/data/all-pools.json'\n      const res = await fetch(url).then(rsp => {\n        return rsp.json()\n      })\n      if (res) {\n        const poolList = res[`${from.toLocaleLowerCase()}-${to.toLocaleLowerCase()}`] || res[`${to.toLocaleLowerCase()}-${from.toLocaleLowerCase()}`]\n\n        console.log('üöÄ --------------------------------------------------üöÄ')\n        console.log(\n          'üöÄ ~ getLocalJsonPoolAddress ~ poolList:',\n          poolList,\n          `${from.toLocaleLowerCase()}-${to.toLocaleLowerCase()}`,\n          `${to.toLocaleLowerCase()}-${from.toLocaleLowerCase()}`\n        )\n        console.log('üöÄ --------------------------------------------------üöÄ')\n        return poolList as string[]\n      }\n    } catch (error) {\n      console.error('getLocalJsonPoolAddress Error:', error)\n    }\n\n    return []\n  }\n\n  return {\n    getPoolList,\n    getLocalJsonPoolList,\n    getLocalJsonPoolAddress,\n    wrapGetPoolParams\n  }\n}\n"],"names":["useGetPoolList","fetchByApi","useFetch","wrapPoolDataV2","useWrapPoolData","getPoolList","params","apiParams","coinTypes","formatCoinTypesParams","wrapApiParams","wrapGetPoolParams","res","StatsPoolsPath","_a","_c","_b","envConfigs","_d","poolList","_f","_e","item","_g","error","getLocalJsonPoolList","url","rsp","originList","list","coinArr","extractStructTagFromType","coinTypeA","coinTypeB","resultList","formatCoinAddress","address","normalizeCoinType","from_type","to_type","from","to"],"mappings":"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"}