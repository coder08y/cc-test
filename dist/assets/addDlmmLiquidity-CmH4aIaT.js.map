{"version":3,"file":"addDlmmLiquidity-CmH4aIaT.js","sources":["../../src/store/dlmm/addDlmmLiquidity.ts"],"sourcesContent":["import { Token } from '@cetus/types'\nimport { BinLiquidityInfo, MAX_BIN_ID, MIN_BIN_ID } from '@cetusprotocol/dlmm-sdk'\nimport { create, StateCreator } from 'zustand'\n\nexport type RangePriceType = {\n  tokenA: Token\n  tokenB: Token\n  binId: number\n  price: string\n  displayPrice: string | number\n  reversePrice: string\n  displayReversePrice: string | number\n  type: 'lower' | 'upper'\n  triggerFrom?: string\n  actionSource?: 'user' | 'system'\n  changeCount?: number\n}\n\ninterface AddLiquidityState {\n  fromAmount: string\n  setFromAmount: (value: string) => void\n  fromAmountValue: string\n  setFromAmountValue: (value: string) => void\n  toAmount: string\n  setToAmount: (value: string) => void\n  toAmountValue: string\n  setToAmountValue: (value: string) => void\n  liquidityAmount: string\n  setLiquidityAmount: (value: string) => void\n  byAmountIn: boolean\n  tokenMaxA: string\n  setTokenMaxA: (value?: string) => void\n  tokenMaxB: string\n  setTokenMaxB: (value?: string) => void\n  setByAmountIn: (value: boolean) => void\n  isTokenA: boolean\n  setIsTokenA: (value: boolean) => void\n  fromToken: Token | undefined\n  setFromToken: (token?: Token) => void\n  fromLoading: boolean\n  setFromLoading: (loading: boolean) => void\n  fromTokenLock: boolean\n  setFromTokenLock: (lock: boolean) => void\n  toToken: Token | undefined\n  setToToken: (token?: Token) => void\n  toLoading: boolean\n  setToLoading: (loading: boolean) => void\n  toTokenLock: boolean\n  setToTokenLock: (lock: boolean) => void\n  totalAmount: string | undefined\n  setTotalAmount: (value?: string) => void\n  addLiquidityInfo: BinLiquidityInfo | null\n  setAddLiquidityInfo: (value: BinLiquidityInfo | null) => void\n  resetAddLiquidity: () => void\n  confirmModalOpen: boolean\n  setConfirmModalOpen: (value: boolean) => void\n  nftOpen: boolean\n  setNftOpen: (value: boolean) => void\n  relatedPosId: string\n  setRelatedPosId: (value: string) => void\n  minPriceData: RangePriceType | null\n  setMinPriceData: (value: RangePriceType | null) => void\n  maxPriceData: RangePriceType | null\n  setMaxPriceData: (value: RangePriceType | null) => void\n  positionCount: number\n  setPositionCount: (value: number) => void\n  numBins: number | string\n  setNumBins: (value: number | string) => void\n  chartRefreshTrigger: number\n  setChartRefreshTrigger: () => void\n  preCalcError?: 'amountTooSmall'\n  setPreCalcError: (type?: 'amountTooSmall') => void\n  preCalcParams: any\n  setPreCalcParams: (value: any) => void\n  binIdRange: {\n    minBinId: number\n    maxBinId: number\n  }\n  setBinIdRange: (value: { minBinId: number; maxBinId: number }) => void\n}\n\nconst store: StateCreator<AddLiquidityState> = (set, get) => ({\n  binIdRange: {\n    minBinId: MIN_BIN_ID,\n    maxBinId: MAX_BIN_ID\n  },\n  setBinIdRange: (value: { minBinId: number; maxBinId: number }) => {\n    set(() => ({\n      binIdRange: value\n    }))\n  },\n  preCalcError: undefined,\n  setPreCalcError: (type?: 'amountTooSmall') => {\n    set(() => ({\n      preCalcError: type\n    }))\n  },\n  fromAmount: '',\n  setFromAmount: (value: string) => {\n    set(() => ({\n      fromAmount: value\n    }))\n  },\n  fromAmountValue: '',\n  setFromAmountValue: (value: string) => {\n    set(() => ({\n      fromAmountValue: value\n    }))\n  },\n  toAmount: '',\n  setToAmount: (value: string) => {\n    set(() => ({\n      toAmount: value\n    }))\n  },\n  toAmountValue: '',\n  setToAmountValue: (value: string) => {\n    set(() => ({\n      toAmountValue: value\n    }))\n  },\n  liquidityAmount: '',\n  setLiquidityAmount: (value: string) => {\n    set(() => ({\n      liquidityAmount: value\n    }))\n  },\n  tokenMaxA: '',\n  setTokenMaxA: (value?: string) => {\n    set(() => ({\n      tokenMaxA: value\n    }))\n  },\n  tokenMaxB: '',\n  setTokenMaxB: (value?: string) => {\n    set(() => ({\n      tokenMaxB: value\n    }))\n  },\n  byAmountIn: true,\n  setByAmountIn: (value: boolean) => {\n    set(() => ({\n      byAmountIn: value\n    }))\n  },\n\n  isTokenA: true,\n  setIsTokenA: (value: boolean) => {\n    set(() => ({\n      isTokenA: value\n    }))\n  },\n  fromToken: undefined,\n  setFromToken: (token?: Token) => {\n    set(() => ({\n      fromToken: token\n    }))\n  },\n  fromLoading: false,\n  setFromLoading: (loading: boolean) => {\n    set(() => ({\n      fromLoading: loading\n    }))\n  },\n  fromTokenLock: false,\n  setFromTokenLock: (lock: boolean) => {\n    set(() => ({\n      fromTokenLock: lock\n    }))\n  },\n  toToken: undefined,\n  setToToken: (token?: Token) => {\n    set(() => ({\n      toToken: token\n    }))\n  },\n  toLoading: false,\n  setToLoading: (loading: boolean) => {\n    set(() => ({\n      toLoading: loading\n    }))\n  },\n  toTokenLock: false,\n  setToTokenLock: (lock: boolean) => {\n    set(() => ({\n      toTokenLock: lock\n    }))\n  },\n  totalAmount: undefined,\n  setTotalAmount: (value?: string) => {\n    set(() => ({\n      totalAmount: value\n    }))\n  },\n  confirmModalOpen: false,\n  setConfirmModalOpen: (value: boolean) => {\n    set(() => ({\n      confirmModalOpen: value\n    }))\n  },\n  nftOpen: false,\n  setNftOpen: (value: boolean) => {\n    set(() => ({\n      nftOpen: value\n    }))\n  },\n  relatedPosId: '',\n  setRelatedPosId: (value: string) => {\n    set(() => ({\n      relatedPosId: value\n    }))\n  },\n  minPriceData: null,\n  setMinPriceData: (value: RangePriceType | null) => {\n    set(() => ({\n      minPriceData: value\n    }))\n  },\n  maxPriceData: null,\n  setMaxPriceData: (value: RangePriceType | null) => {\n    set(() => ({\n      maxPriceData: value\n    }))\n  },\n  positionCount: 0,\n  setPositionCount: (value: number) => {\n    set(() => ({\n      positionCount: value\n    }))\n  },\n  addLiquidityInfo: null,\n  setAddLiquidityInfo: (value: BinLiquidityInfo | null) => {\n    set(() => ({\n      addLiquidityInfo: value\n    }))\n  },\n  numBins: 0,\n  setNumBins: (value: number | string) => {\n    set(() => ({\n      numBins: value\n    }))\n  },\n\n  chartRefreshTrigger: 0,\n  setChartRefreshTrigger: () => {\n    set(() => ({\n      chartRefreshTrigger: get().chartRefreshTrigger + 1\n    }))\n  },\n  preCalcParams: null,\n  setPreCalcParams: (value: any) => {\n    set(state => ({\n      preCalcParams: { ...state.preCalcParams, ...value }\n    }))\n  },\n  resetAddLiquidity: () => {\n    set(() => ({\n      totalAmount: undefined,\n      fromTokenLock: false,\n      fromToken: undefined,\n      toTokenLock: false,\n      toToken: undefined,\n      fromAmount: '',\n      toAmount: '',\n      fromAmountValue: '',\n      toAmountValue: '',\n      liquidityAmount: '',\n      byAmountIn: true,\n      isTokenA: true,\n      relatedPosId: '',\n      minPriceData: null,\n      maxPriceData: null,\n      addLiquidityInfo: null,\n      positionCount: 0,\n      numBins: 0,\n      preCalcError: undefined,\n      binIdRange: {\n        minBinId: MIN_BIN_ID,\n        maxBinId: MAX_BIN_ID\n      }\n    }))\n  }\n})\n\nconst useAddDlmmLiquidityStore = create(store)\nexport default useAddDlmmLiquidityStore\n"],"names":["store","set","get","MIN_BIN_ID","MAX_BIN_ID","value","type","token","loading","lock","state","useAddDlmmLiquidityStore","create"],"mappings":"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"}