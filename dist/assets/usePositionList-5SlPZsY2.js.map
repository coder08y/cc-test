{"version":3,"file":"usePositionList-5SlPZsY2.js","sources":["../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/uniqBy.js","../../src/store/position/index.ts","../../src/constant/position-handle-mainnet.ts","../../src/hooks/position/useGetPosInfoList.ts","../../src/hooks/position/useGetPosVesting.ts","../../src/store/dlmm-position/index.ts","../../src/store/clmm/deposit.ts","../../src/hooks/clmm/useGetPriceRange.ts","../../src/hooks/dlmm-position/useGetDlmmPosFeeAndReward.ts","../../src/hooks/dlmm-position/useGetDlmmPosLiquiditys.ts","../../src/hooks/dlmm-position/useGetDlmmPosPool.ts","../../src/hooks/position/useGetFarmsPosRewards.ts","../../src/hooks/position/useGetPosApiPoolData.ts","../../src/hooks/position/useGetPosfees.ts","../../src/hooks/position/useGetPosLiquiditys.ts","../../src/hooks/position/useGetPosPools.ts","../../src/hooks/position/useGetPosRewards.ts","../../src/hooks/position/usePosHelper.ts","../../src/hooks/position/useWrapPosData.ts","../../src/hooks/position/usePositionList.ts"],"sourcesContent":["import baseIteratee from './_baseIteratee.js';\nimport baseUniq from './_baseUniq.js';\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nexport default uniqBy;\n","import { FrozenPools } from '@/constant/pool'\nimport { PoolApiInfo, PoolContractInfo, PosBaseInfo, PosFee, PosLiquidity, PosPoolsRelated, PosReward } from '@/types'\nimport { create, StateCreator } from 'zustand'\n\ninterface PositionState {\n  myPosYieldValue: string\n  setMyPosYieldValue: (data: string) => void\n  myClmmPosYieldValue: string\n  setMyClmmPosYieldValue: (data: string) => void\n  myDlmmPosYieldValue: string\n  setMyDlmmPosYieldValue: (data: string) => void\n  showPosListLength: {\n    clmm_position_count?: number\n    dlmm_position_count?: number\n  }\n  setShowPosListLength: (data: { clmm_position_count?: number; dlmm_position_count?: number }) => void\n\n  posBaseList: PosBaseInfo[]\n  setPosBaseList: (data: PosBaseInfo[]) => void\n  posBaseListLoading: boolean\n  setPosBaseListLoading: (value: boolean) => void\n\n  posAprMap: Record<string, string>\n  setPosAprMap: (data: Record<string, string>) => void\n\n  posBaseListGroupByPool: Record<string, PosBaseInfo & { list?: PosBaseInfo[] }>\n\n  posApiPoolData: Record<string, PoolApiInfo>\n  setPosApiPoolData: (data: Record<string, PoolApiInfo>) => void\n\n  fullRangePosBaseList: PosBaseInfo[]\n  setFullRangePosBaseList: (data: PosBaseInfo[]) => void\n  fullRangePosBaseListLoading: boolean\n  setFullRangePosBaseListLoading: (data: boolean) => void\n\n  posPoolsOriginalData: Record<string, PoolContractInfo>\n  setPosPoolOriginalData: (data: Record<string, PoolContractInfo>) => void\n\n  posPoolsRelatedData: Record<string, PosPoolsRelated>\n  setPosPoolsRelatedData: (data: Record<string, PosPoolsRelated>) => void\n  posPoolsRelatedDataLoading: boolean\n  setPosPoolsRelatedDataLoading: (value: boolean) => void\n\n  posPoolsRelatedDataGroupByPool: Record<string, any>\n\n  posLiquidityData: Record<string, any>\n  setPosLiquidityData: (data: Record<string, PosLiquidity>) => void\n  posLiquidityDataLoading: boolean\n  setPosLiquidityDataLoading: (value: boolean) => void\n\n  posRewardsData: Record<string, any>\n  setPosRewardsData: (data: Record<string, PosReward[]>) => void\n  posRewardsDataLoading: boolean\n  setPosRewardsDataLoading: (value: boolean) => void\n\n  farmsPosRewardsData: Record<string, any>\n  setFarmsPosRewardsData: (data: Record<string, PosReward[]>) => void\n  farmsPosRewardsDataLoading: boolean\n  setFarmsPosRewardsDataLoading: (value: boolean) => void\n\n  posFeeData: Record<string, any>\n  setPosFeeData: (data: Record<string, PosFee>) => void\n  posFeeDataLoading: boolean\n  setPosFeeDataLoading: (value: boolean) => void\n\n  currentPosBaseInfo: PosBaseInfo | null\n  setCurrentPosBaseInfo: (data: PosBaseInfo | null) => void\n  currentPosBaseInfoLoading: boolean\n  setCurrentPosBaseInfoLoading: (data: boolean) => void\n\n  poolRangeObj: any\n  setPoolRangeObj: (poolRangeObj: any) => void\n}\n\nconst store: StateCreator<PositionState> = (set, get) => ({\n  showPosListLength: {\n    clmm_position_count: 0,\n    dlmm_position_count: 0\n  },\n  setShowPosListLength: (data: { clmm_position_count?: number; dlmm_position_count?: number }) => {\n    set(() => ({\n      showPosListLength: data\n    }))\n  },\n  poolRangeObj: {},\n  setPoolRangeObj: (data: Record<string, any>) => {\n    console.log('🚀 ~ poolRangeObj:', data)\n    const originData = get().poolRangeObj\n    set(() => ({\n      poolRangeObj: { ...originData, ...data }\n    }))\n  },\n  posApiPoolData: {},\n  setPosApiPoolData: (data: Record<string, PoolApiInfo>) => {\n    const originData = get().posApiPoolData\n    set(() => ({\n      posApiPoolData: { ...originData, ...data }\n    }))\n  },\n  myPosYieldValue: '',\n  setMyPosYieldValue: (data: string) => {\n    set(() => ({\n      myPosYieldValue: data\n    }))\n  },\n  posAprMap: {},\n  setPosAprMap: (data: Record<string, string>) => {\n    const originData = get().posAprMap\n    set(() => ({\n      posAprMap: { ...originData, ...data }\n    }))\n  },\n  myClmmPosYieldValue: '',\n  setMyClmmPosYieldValue: (data: string) => {\n    set(() => ({\n      myClmmPosYieldValue: data\n    }))\n  },\n  myDlmmPosYieldValue: '',\n  setMyDlmmPosYieldValue: (data: string) => {\n    set(() => ({\n      myDlmmPosYieldValue: data\n    }))\n  },\n  posBaseList: [],\n  posBaseListGroupByPool: {},\n  setPosBaseList: (data: PosBaseInfo[]) => {\n    const groupedByClmmPool = data.reduce((result: any, item: PosBaseInfo) => {\n      if (!result[item.clmmPool]) {\n        result[item.clmmPool] = { list: [] }\n      }\n      if (!result[item.clmmPool]?.tokenA) {\n        result[item.clmmPool]['poolType'] = 'clmm'\n        result[item.clmmPool]['isReverse'] = item?.isReverse\n        result[item.clmmPool]['tokenA'] = item?.tokenA\n        result[item.clmmPool]['tokenB'] = item?.tokenB\n        result[item.clmmPool]['displayTokenA'] = item?.displayTokenA\n        result[item.clmmPool]['displayTokenB'] = item?.displayTokenB\n        result[item.clmmPool]['clmmPoolAddress'] = item.clmmPool\n        result[item.clmmPool]['isFrozen'] = FrozenPools.includes(item.clmmPool)\n      }\n      result[item.clmmPool]?.list?.push(item)\n      return result\n    }, {})\n    console.log('🚀 ~ file: index.ts:43 ~ groupedByClmmPool ~ groupedByClmmPool:', groupedByClmmPool)\n\n    set(() => ({\n      posBaseList: data,\n      posBaseListGroupByPool: groupedByClmmPool,\n      posBaseListIsLoading: false\n    }))\n  },\n  posBaseListLoading: true,\n  setPosBaseListLoading: (value: boolean) => {\n    set(() => ({\n      posBaseListLoading: value\n    }))\n  },\n  fullRangePosBaseList: [],\n  setFullRangePosBaseList: (data: PosBaseInfo[]) => {\n    set(() => ({\n      fullRangePosBaseList: data,\n      fullRangePosBaseListLoading: false\n    }))\n  },\n  fullRangePosBaseListLoading: true,\n  setFullRangePosBaseListLoading: (value: boolean) => {\n    set(() => ({\n      fullRangePosBaseListLoading: value\n    }))\n  },\n  posPoolsOriginalData: {},\n  setPosPoolOriginalData: (data: Record<string, PoolContractInfo>) => {\n    const originData = get().posPoolsOriginalData\n    set(() => ({\n      posPoolsOriginalData: { ...originData, ...data }\n    }))\n  },\n  posPoolsRelatedData: {},\n  posPoolsRelatedDataGroupByPool: {},\n  setPosPoolsRelatedData: (data: Record<string, PosPoolsRelated>) => {\n    const originData = get().posPoolsRelatedData\n    set(() => ({\n      posPoolsRelatedData: { ...originData, ...data },\n      posPoolsRelatedDataLoading: false\n    }))\n  },\n  posPoolsRelatedDataLoading: true,\n  setPosPoolsRelatedDataLoading: (value: boolean) => {\n    set(() => ({\n      posPoolsRelatedDataLoading: value\n    }))\n  },\n  posLiquidityData: {},\n  setPosLiquidityData: (data: Record<string, PosLiquidity>) => {\n    const originData = get().posLiquidityData\n    set(() => ({\n      posLiquidityData: { ...originData, ...data },\n      posLiquidityDataLoading: false\n    }))\n  },\n  posLiquidityDataLoading: true,\n  setPosLiquidityDataLoading: (value: boolean) => {\n    set(() => ({\n      posLiquidityDataLoading: value\n    }))\n  },\n  posRewardsData: {},\n  setPosRewardsData: (data: Record<string, PosReward[]>) => {\n    const originData = get().posRewardsData\n    set(() => ({\n      posRewardsData: { ...originData, ...data },\n      posRewardsDataLoading: false\n    }))\n  },\n  posRewardsDataLoading: true,\n  setPosRewardsDataLoading: (value: boolean) => {\n    set(() => ({\n      posRewardsDataLoading: value\n    }))\n  },\n  farmsPosRewardsData: {},\n  setFarmsPosRewardsData: (data: Record<string, PosReward[]>) => {\n    set(() => ({\n      farmsPosRewardsData: data,\n      farmsPosRewardsDataLoading: false\n    }))\n  },\n  farmsPosRewardsDataLoading: true,\n  setFarmsPosRewardsDataLoading: (value: boolean) => {\n    set(() => ({\n      farmsPosRewardsDataLoading: value\n    }))\n  },\n  posFeeData: {},\n  setPosFeeData: (data: Record<string, PosFee>) => {\n    const originData = get().posFeeData\n    set(() => ({\n      posFeeData: { ...originData, ...data },\n      posFeeDataLoading: false\n    }))\n  },\n  posFeeDataLoading: true,\n  setPosFeeDataLoading: (value: boolean) => {\n    set(() => ({\n      posFeeDataLoading: value\n    }))\n  },\n  currentPosBaseInfo: null,\n  setCurrentPosBaseInfo: (data: PosBaseInfo | null) => {\n    set(() => ({\n      currentPosBaseInfo: data,\n      currentPosBaseInfoLoading: false\n    }))\n  },\n  currentPosBaseInfoLoading: true,\n  setCurrentPosBaseInfoLoading: (value: boolean) => {\n    set(() => ({\n      currentPosBaseInfoLoading: value\n    }))\n  }\n})\n\nconst usePositionStore = create(store)\nexport default usePositionStore\n","import envConfigs from '@cetus/types/src/config/envConfigs'\n\nconst POS_HANDLE_MAINNET = {\n  '0xb8d7d9e66a60c239e7a60110efcf8de6c705580ed924d0dde141f4a0e2c90105': '0x0d1ca2097340c59348e3aacd2bd948ad638e7a3cd070f0fa589e6eb0d4a06e4f',\n  '0x871d8a227114f375170f149f7e9d45be822dd003eba225e83c05ac80828596bc': '0x858dace9b6058b2821785add787f0d9dbd5f8f0314d56beba68c3bffeeae4d7f',\n  '0xb8a67c149fd1bc7f9aca1541c61e51ba13bdded64c273c278e50850ae3bff073': '0x6c460bbfc763aae9d07bf87491cae60fcc408d22304c2d061753069468addec4',\n  '0xe01243f37f712ef87e556afb9b1d03d0fae13f96d324ec912daffc339dfdcbd2': '0xe63539aec3edbbac8d0e402e72caf1bb81568df77b33748e9edb71fc41b43fed',\n  '0x7df346f8ef98ad20869ff6d2fc7c43c00403a524987509091b39ce61dde00957': '0xf3ed97b9d25f7c1da96e10dda800578177dff83c0e4e30c1e88353d1fb837342',\n  '0x72f5c6eef73d77de271886219a2543e7c29a33de19a6c69c5cf1899f729c3f17': '0xa699b6c9380b07f5077ac5c5471ac5e0edffc409b8d94469c3cb6bf37671ad5a',\n  '0x2e041f3fd93646dcc877f783c1f2b7fa62d30271bdef1f21ef002cebf857bded': '0xe31200505ac97e6c4cc01f51035e5dcdf656f87f95ef97d76f86d7ed18fe5bba',\n  '0x3b13ac70030d587624e407bbe791160b459c48f1049e04269eb8ee731f5442b4': '0xd509e3b5f1ae0a71c0b98df889b6847400163fdf851b3e008842f6fe8b1153ab',\n  '0x0e809689d04d87f4bd4e660cd1b84bf5448c5a7997e3d22fc480e7e5e0b3f58d': '0xfb2f58369e2d80e8bf5a4f788a564b60ee10277002b33b194693531f122cc9dc',\n  '0xdcd762ad374686fa890fc4f3b9bbfe2a244e713d7bffbfbd1b9221cb290da2ed': '0xf3a384439b13b7a2d04c14a07cdb25d21da3286686d11c2b068e22c555a11039',\n  '0xe4ff047ec4e6cb5dec195c4c71bc435223bf0273f1473ab6a10cf6ad132bdda1': '0xa6140cbef16344d55fbde27f1aed8394bad8b42f2a629a2cfb5b53541be6088f',\n  '0x4c50ba9d1e60d229800293a4222851c9c3f797aa5ba8a8d32cc67ec7e79fec60': '0x69a006362d67d15fd4f3349019d693b11de60795949a71f1dd501420322b8321',\n  '0x6c545e78638c8c1db7a48b282bb8ca79da107993fcb185f75cedc1f5adb2f535': '0x27f42662b9a9d7a1a5f92302ac79740dd427a8e1ec56a087c23a8bb15b188906',\n  '0x43d4c9adc1d669ef85d557cf1d430f311dc4eb043a8e7b78e972c1f96ec2cd60': '0xf31887bdf7003017fd90508c3c81fe7dbbde2403857bb96887dc9d764e38c4aa',\n  '0x9e59de50d9e5979fc03ac5bcacdb581c823dbd27d63a036131e17b391f2fac88': '0x1c9183f05fe7b0814f6a6c386eb7c4e3377cde296a3e91f9ad7a0b7195054dc1',\n  '0xa528b26eae41bcfca488a9feaa3dca614b2a1d9b9b5c78c256918ced051d4c50': '0xd16b57796cc9c924321603c90e3020d3929328bd6c870ee474faf5dae0a8f2fa',\n  '0x0fea99ed9c65068638963a81587c3b8cafb71dc38c545319f008f7e9feb2b5f8': '0x77b4f91854e21f487e3fa3a3c9f37c19ded10996fd2dc6b240abe63732542c32',\n  '0xd6918afa64d432b84b48088d165b0dda0b7459463a7d66365f7ff890cae22d2d': '0x30d5ebb0ec81af337bdf1c359fa35dd73e8a52b43a84044f49ad958faf146156',\n  '0x40a372f9ee1989d76ceb8e50941b04468f8551d091fb8a5d7211522e42e60aaf': '0x8606c02c50519b385bdebf112b2c6374b4f92053c5362db872f3c7b313e4cbc4',\n  '0xb785e6eed355c1f8367c06d2b0cb9303ab167f8359a129bb003891ee54c6fce0': '0x3e44c07be647f199c42c84ab0c2a48181572a68dd5a73ea53ea1c73047076e8a',\n  '0xbec7ef988a9cf880b1e3d80260ad1e972e680f0f340fc87fd6f014d32b83e526': '0xde0a1e68143340dc1b6058e12aa4b677e210c983e329a7ac8317127a472db14c',\n  '0x1341467c5aca847aff459e07d6a777a6fbf7aa7b71ffd66cc2f4bdfda162add4': '0x6085865e596f37188b138004cb92bf0db3c7fb461383a0a497ddf3fce799c8a9',\n  '0xadaa4568dd61da3630c40d2d146db69e639946d22599ea4315d3d3ea01991f1a': '0x672d6a51c11abb590575c8d6708cb7e55f9283e0db966b1f1ef848787c619176',\n  '0x2fc6ee9183d0f1ca0d2dded02c416be6f4671bb82db55c26ce12b536812a4b8e': '0x5d5e3b407dd7c86f10e5898326ec719c128a009cc85d89387e475447fe721700',\n  '0xf26ad51dc0cf90a4c66ad82a24f66ecf9852547310d123147ed94d72f6c24865': '0xfa91644a90e71cea40cb1bb3e3d4ef787956087f5145a3d3144a607f4739eb86',\n  '0x7079378d20cb521acc9a77c0d69da0e4b65cc07b2a1666868c95444939c3929e': '0x4849723241f27fd37d67ed05d95baee775a64bb7b72d12b98d577ec81b9dfb7c',\n  '0x763f63cbada3a932c46972c6c6dcf1abd8a9a73331908a1d7ef24c2232d85520': '0x9889b692a11bcc8c3312127e5652ed84e7a7a5d54eb94d73708df7771e7b34a7',\n  '0xde265ef8645c680c71b33805de77ce5261a20c58397d83b3915bdbb3a7209d7e': '0xd42b919eef85718cba980b7fbcd3816dbaec4a213e085b7db9e11cb6ea66b6ae',\n  '0x9c3a06e2ca93d0a3b9bd35e6de2466f8382bc2a643c875a0aac9eb7db411ce48': '0x17e8f293d14d34b7d946317e0e8387b0814816602808e70f0836804e424919ff',\n  '0x2d79ad383127b41352030895b5c5e5228b54b2e26c9caddb71d04b928c6a4b33': '0x54581a8e98ff407b698e7d1c46d532847114f9418b0a22cb497e1facac5c4345',\n  '0xaa020ad81e1621d98d4fb82c4acb80dc064722f24ef828ab633bef50fc28268b': '0x2bbf13d6943bf66a3ea1305ab2073aef0081d322faec613e1616aa8e4a5f99ca',\n  '0xcf994611fd4c48e277ce3ffd4d4364c914af2c3cbb05f7bf6facd371de688630': '0xeb366035cfe1232c201ea1dbd39cdb11e9aa0752946c7937403a8331772732d7',\n  '0x68d16416770f9b73b0b1b45e118f6ea3a2910f548f942fe335824fd515cdff08': '0x1248aefd01397054f5baae0216d2a75fb205fd1290eb0334dda4d04cb7d6bd2a',\n  '0xa72776082624b0f5da55e385107fc0176114bfea5b281b880acae505a9bd1f1a': '0x0986ab31093d58b6da35fcdfb510a588cb91a1c1f67865328ea9901eea5abdbe',\n  '0x75b2698fc23040ab88d2018ccac4365aa1fab79f1f0c623882b68ce9b1403c50': '0xa3a546eb74ed390c2441ed405044366d89cab1ca71095cf1d0753ade9abf3e91',\n  '0x1efc96c99c9d91ac0f54f0ca78d2d9a6ba11377d29354c0a192c86f0495ddec7': '0x8d88fea0db84753855684f9bf44c6a43a738eb37ec60c7fefb2f1e1313f2b3fe',\n  '0x0254747f5ca059a1972cd7f6016485d51392a3fde608107b93bbaebea550f703': '0x9abb471a57c66773ea6f0683746d0476d65325433d182bcb147767af2a02921d',\n  '0xf45b01f23e9951e37733b76c8cc7d22dcd23141aa246a86e17595a7aca610e1d': '0x221e7cdc10487c9f138fca4ffcf1d7ea083e2c9c2ebc41fe7d559bc00a13333c',\n  '0x871cbd82b0f2301598930b14fb53e5a199f3d17de109a3554289c0248f48bd85': '0xe9d0364cf4ed5c6a0d5d0bc5f02165e30f035a34ae97d6abc161ef2d3bc8a29c',\n  '0xe83486bbbe7fcec540e98b4bccaf38897ac95b11d82d2e9e03ca1c27cc15d731': '0x489418f5e04525694ad5ba81dfd42656e2c96bb203d603afe22b7d83c0b37771',\n  '0x488411c4bc8646aaa865b5e778392d1498ba47dfdc625b6ffc70a68f52d9ff20': '0xcbc9aaf5ddbd428f9b3f8780ef8075a7d37a376068f172a1d4246a0c2f4305ef',\n  '0x3353c6ae880e383a7136b444d0af23eda0ca5ebc0d3a6dc48947f5870c5565ff': '0x0ef8a75fbf7b25313e7b710bf058716cc09c05fcd99e5e4d8f6b5e151ba2e6c6',\n  '0x040dc6a93bd4f26ea9507c70f19eb1a060fd5cb9c3718db372f4ae711ffbbb29': '0x097b6d26a864c5f58e2274215a723ec1bb600c5d8fabd3e79aab8c6932b6b94b',\n  '0xf81d070f24bd2518a28193fc081774654cd8ad145559fa1fa0d7471cb3eecb27': '0xee7e91964e3113bc0352fadc9608947cb05f74becb5cb8c49e577aec58ddcd4d',\n  '0x6bd72983b0b5a77774af8c77567bb593b418ae3cd750a5926814fcd236409aaa': '0xfa9af53c409fddafcc01d1b7e8f39763af159d69091783e3aea77013cb21d3c6',\n  '0x3e9332d5afc7549bfad40ea05692d06b0bd8b74d7e0b49f88fe22de921ae11c3': '0xba5ecaa8467f6aed5ed6ceb1a5e22a5e504b0045da52cf9d798c7ae64e45efd1',\n  '0x4af78a3e9e2d6cabca5da79c1e6bff4899566a421321fc3b5a619664017a60d6': '0x6b9e033e94fc454daca7a21e54642b630d37077eb1d886a372ba9500e8e3d7ef',\n  '0x2f47d887c4ca1640c48946676dc3ccb40025cdb0aa52f21d6b043568a7c39ffe': '0x661161ed003fd1cd50f52000de2876b73b6e9a632cbb622b939d38b8985accbd',\n  '0xc8d7a1503dc2f9f5b05449a87d8733593e2f0f3e7bffd90541252782e4d2ca20': '0x305866847f16ec900dc066e54664e4b0acd60115649de73586e544e2750658ae',\n  '0x7852612f5bf73613021f17353985fc186b3b224139c6a2576239132ba5a33b66': '0x202d3f97d97fbb7d3ea2f8ed9c526877b82044713e10e7ea6d289fc38a06bbc0',\n  '0x3ec8401520022aac67935188eb1f82c13cbbc949ab04692e5b62445d89b61c9f': '0x218b60a4d4f610c7587bcf7e19ecefe84f454ab09be796eff426899570ac0a29',\n  '0x59cf0d333464ad29443d92bfd2ddfd1f794c5830141a5ee4a815d1ef3395bf6c': '0x25dd6fc56f3ccba16b412ae2b0dc1290626f2a565507cbfb0369704d5e2bfb9c',\n  '0xea2e0020f3a6f0e2ac39264c8a1bf25f98c38ecdf2dc5880470400ba7cd0a236': '0xf3e351b4460a1dbe5023eb4c344ec68882fd96fc48be5190902ce8634eb1d2ae',\n  '0xea648440bd640d3530e8a5f02c0b56da82c2efe851156c39974b901bbb0eeab1': '0xdaa097d142ef64d4a3542cbc8cc3391729843c7abc5b003d3b300387b8dd9a84',\n  '0xbcf18ddb425dfc3207d57b83e8d105ef11b502a1b6072a8026e3716ac535b035': '0x3a8b10aab6dc312acd1ba633f0e6e57d54195273d0a9adde8a61e4d554721f7e',\n  '0xc905c9263609d6ea700ff6267978107336beab3df377d58a1c53f6e25b7630ee': '0x1e78674b889c610b82221f802c666c0dd9c6322e09efbb203316bf6bbaf51153',\n  '0x5c5e87f0adf458b77cc48e17a7b81a0e7bc2e9c6c609b67c0851ef059a866f3a': '0xe769c5b1acf5159a408a5c69a02e5d869d00321e4848cff634d2c7ff107b3cc3',\n  '0xe0c526aa27d1729931d0051a318d795ad0299998898e4287d9da1bf095b49658': '0x697ab7fdf33b58e300b3efe10f7674aa4d55d32ccbd4722e655708febfcd5b0a',\n  '0xa6275fa7e6b2bf96b841db41924d87d43f90e6992ce3593dca8180d99f20df58': '0x12e57ec10790ff9dfe0f9691c0352be1368fee7a1098cace43c657f650864414',\n  '0x1de5cc16141c21923bfca33db9bb6c604de5760e4498e75ecdfcf80d62fb5818': '0xb8dc29080987324820fdbae570da3bc287c0c1b93b4cbb9d47a090a6cb0c8b79',\n  '0xb0bec995132ba1db983152892735f704b6bad4e509456c95eb9f0a52d19eb96b': '0x870bc89f356b58d5e63cc2a5f67c2d40bcfaf13ee89c3aa17ed07f932a598429',\n  '0x8ebad96550ab6ccba7d0380731e0cc4676caa060f76d3e085d33438f64615d9c': '0x6e0367e84b25c6d47a20c641f98ce2c6cb0c2365328a1e7e12d0f743339fe124',\n  '0x13c529a112d2597dad0e07af108534090686aa376af63a799ab1b656bb443cfd': '0xfd4aa4c7e6d0d5fe0ffbf6535e073f944d95a32b09bb068aafe7e24c46abc56c',\n  '0x8443178757a844213bbc8d38ee5935eda3367764c8d88de7f558aef747787478': '0x67dd88d580c9d35a58986c3792f8a2719dcb1f905d03300c62ebed6ca7a3f92e',\n  '0x71a6226843a7fda7c7443dbbe6406bc4735204d55018c9accd2387f39430b9d6': '0xa120b43203c4b7569daae4e166daa0b18d594a605224137d36b41d8e310c09a1',\n  '0xfa4d7cfc50afb9813f2e29824dc2c8ffc8bccf384c5b9773cde6134b88f62ebb': '0x326bfe125bd12bcf538b754fe38240b88c237555f1708e13a2ce1b7fd09d88da',\n  '0xb89d930966681b5a6d6b37e0be5891f93c98cd33aeca94253cce960e3c3457d1': '0x4541ba81a369ecf5ff19676a0e80b07c382b18784f14e1ac238c1e82cd6728e4',\n  '0xe79efa7b95f6920dfc46ab38d0fae7419113d19e40e84b41abf8ddf3fd287ae1': '0xd5ed71c2a73dce8ac6f0890fba97b5d1b7e2893f0e9e0012a22f9eb7a35de6bd',\n  '0x6cd91ac6eab109dbefbad9693760f929d963c01b9ddba21d3584ca9de36402b5': '0x722698f98c46a4c7b4490bc3264e59edad2bcdf4d6f6e504bab93bf4f0d94de8',\n  '0x2c2bbe5623c66e9ddf39185d3ab5528493c904b89c415df991aeed73c2427aa9': '0x87880f0c56d93f46769d097f1f0f7f89ebb0d1579d87d798f5176b49562ef26b',\n  '0xe9053840c6b58ac21e045d1bb266ce892f96c9aec6c3761840c9704bd5c51764': '0xed65cdfc03d29f178d2ac9a86110944ec256cad4838668ebceabcae9f1507658',\n  '0x06bd46d0204b7faba458dc2342e08fc5008993d5bef84e0f1d87fa3e1728b319': '0x491eee4c905013d4ef4b98ca9ab22a3c8af34f6b13b3f26519dfae3f2a99e5c5',\n  '0xc27600a77c1c33702540fee64a529328a7cb7a6b91e94732c3e8f7abe04ebbe7': '0x1984b16cebdd6095ccaddb3b41ff7aecb7fd8a4eabf40e7460f2330f85ccf99c',\n  '0xefb30c2780bb10ffd4cf860049248dcc4b204927ca63c4c2e4d0ae5666a280d5': '0xa90b46274e7a8b01d0d073ec336299be2401533feaa602c50173c8cfa0def3ec',\n  '0xaa0657731ad4f99c6694dab2f9159d1bbfafaa7f1f889ebd2622c3c74e7037d4': '0x6ebe876ab47311b98ed71980e1884ce33b5ad8fcff29d2b299cdc7ff3c81155b',\n  '0x8b5fb2d256e083f71eca9e8b6f2e7f092f16f3ce54cb11ed17c817168ab726a4': '0x549657c26c6f5760e80097bc74a937df87578dfa7944157b96fa661890d728ba',\n  '0x960d673274597d9ac471044d4a94740dacd9e5039217397ea44cd9f994ff55de': '0xf7e267cb15effcafed06fa0287b647461c5322e5ca7aa4c97d9fd0440322fe49',\n  '0x98636fafb720e06b908f1837f9573539cd949576dfa540b0bc518c15da571330': '0x46e7a5765c5f66633d080f3fa604a4d885dc2eedc4b298a5d48d76011e89251c',\n  '0x6bd95ea11d8f932311d1b4e032de66dc61d3938cbb490216db4d2093c72be868': '0xda8cb496e91c5e34e10b7b8d8dcf09648c119c5f1db2f486ebad7b764219d11c',\n  '0x629c772bd3069ff72741ae74e1466f558387d24fb4295c84340e6d4d394b9bd1': '0x4c936e71a8c65b8a42c94d1c6eee3828279a48a63ad339eff7e1903deb422ef8',\n  '0x3f5871a18c0deeae9f740708ef8162e5f173bd93feae63897666738444e318f0': '0x553086d0f69f5f31e3a9b37936a37575f18fc03e83ba14897316f70054581b7a',\n  '0xa1aed8a0df6c9c65e3bdda376a27762cc3ed66ef5f2bac4fb3604e01050bef3f': '0x33b0f64a9b75937f896ee9a1a39165d5d366d097880aac3682d5dc3609b4e38a',\n  '0x127b7cf262607a0bc6e1035bed13883d342b0a0c04ce60fc51b5ffbdd03a6983': '0xfd802d06414418dd566931e8515633cf1c0b816103410c66889a738a2603b65c',\n  '0x313b7c579b95e8021bd2ab1d071ec18615c2f3e2f8da1f9f9e0f6d676b8bea66': '0xbf29f75f6576428460f45e4aff60009f65fe2c43321aad007d8f05fad834d7e1',\n  '0x8804e54e0e19a1fb2694102ae79dc42aafe36a669cd8ea659fce557ad93e7160': '0x9d6aa169e038eb8c40963c145d1256d7dd4f6e2125bb72a2d19fbcb5358948d3',\n  '0xfc6a11998f1acf1dd55acb58acd7716564049cfd5fd95e754b0b4fe9444f4c9d': '0x878ec499e0feffa47e6678f97e6a4251244dac1e0b50872fbcff1403bb92460d',\n  '0xda7347c3192a27ddac32e659c9d9cbed6f8c9d1344e605c71c8886d7b787d720': '0x2a80a685cb0f4298bfe3b966b74448ffb032c64a1f32070ddeb1be448d44c4c6',\n  '0x0fb4ad0e4c2c2b0a45d3f7bc5585cc9cea8486a63e4ef5cb768ddd9414fbb97a': '0x4d4b3beacd5b749a5a659c594f6fc1ac38fcb3b0a9352d3aca0b7c0c21491d1e',\n  '0x8be4b4c75f609b77af241996088f941c54232e21f30dca62bf1e880cb7bf8bed': '0xea653b8a083159b8f7895da473415809174528ee878781a33e6064cefc586517',\n  '0x7d44018fbc32f456b6d0122206041a2cc159bdde32911b4be94a4e5840890764': '0x56ec7dae9d4b5fca061e84820b8b7e05dd5fc343e998b27eb0b57928f84fdab9',\n  '0xa8593858a7dfb15abd4c995ed7f2ab2ffc4f18a6d953e982361bd0c7fa595463': '0x644d7ff4dfcf00a739535eab7dc9c187691491c13df7da56bf4430753b8a9356',\n  '0x96ec660396e8845f06c134fc3121ad4932fe31b2dc303a71a6b15bc25027b84d': '0x9547fa1cdd9e28a41b268a518de5f0eb0a6b2e4ed45f4deaa803b85ac6ba2ce7',\n  '0xa0c8805dcf3914555bbc309a8b0ee1dcf144c3ed2a26995d20d7a1ea55656353': '0x30c8bf20bdd0d8bde52068ab5c16c9feed7eedd724219888f00d5cffbac0de2f',\n  '0x7e610a7466f0b7dbf8cda4ba0fa0a652b87c53a1d1d0578ce808bc2cfd139fb6': '0xc16b5e785f55ae84222d805359ed791dfc2874a0769994917214ad56b500ea74',\n  '0x3d72450bd834bd243dc9f09f5dd2fcb00e4405fd43f753214a1d557f2c3982b8': '0xe1ac76d4c67ae0910916682fb31642816f5191e8ca316ef110508d291a94c7c5',\n  '0x2718b966172ae57e794758973c51bb107ac9916ac614e91f74cc99341bd177f0': '0xc61bea09bc62e3badc11b0c327cfe8c68b5be4fc1bf44490bba664b83c284a61',\n  '0x84fc1515fd3d2395b2d67b301dc2b60040e31af7e295f8731c84bd528733252f': '0x9e8cca612b8ff5bb003b9d10b913bfeec4c0016ff615b965b9d13f238f856306',\n  '0xa467d2dee561bca8e7b3f5f1622f0fa1cb672befae69a0d1b6dced941c858c4e': '0x10cc21a82b62e188c44edd00da150b9473f75f7d2b0851cfef871a835bc2bdb7',\n  '0xaa72bd551b25715b8f9d72f226fa02526bdf2e085a86faec7184230c5209bb6e': '0x1fbe9615e33d63dce8da6a4f4692b9414f2107251d5695c35dff91e3fb68db62',\n  '0x8e2dc135dfb0bdcc42639e3eef55deb75799b3a1397c1afa27836ef41d7e6db8': '0x19889c7fe17c8004acf1610d702a5a78a52982ef117fb50691c8f352ed06f715',\n  '0xb4b2b5b1ebbe992827e686bbd2ebca51711fa6b5d8e6013422c33d490d328ba0': '0xd1fd1509278aa3f674b2799fa91ec83dbf57ad0262f5459b088233404731f8fe',\n  '0x867434151a1f641e86832f068cb75a36d2a09cdb6ced5a840baec2ae940daed6': '0xab5949c52bf4598f25ab5e8fc21401d1b3d988a29f8c56037cfb8d496fe61c8c',\n  '0x3487e99bda85bd17360e2c32af208df69551e0673f920e8906404c32e9a47fa0': '0xf73ca75042253c9c1f4b102194a9afc87e4c45aa474778fa588cd1e18e191c07',\n  '0x2f63cf847e12234f62a41a9526cd6ad6a8dea9d59f968be5c5c671284fd17534': '0xb1aeefd94d317bdcf7c0e35ae6fcb8785006b70fd5c49304624e7bec5266ba3f',\n  '0x679b43a27741c65ea074048289968cfbb8457b4117a726cd044d153c42d7601d': '0xf1ebc583718dc79d094bbfc62bd6a56bd81efdda4636e157009c1fea5fda9e8b',\n  '0x94bcc20da0a5ebaf9c6459fd93006d41df526435c0a5fa3197be3bb1f04371f5': '0x3bbbac6128252bccc434c504bd5d078d91c2d641b994f97a8b6563daf55164a8',\n  '0x305edd2e13764c72d1b236f4b8a057ca24687ef9c2d3747c74470593f99c3987': '0xa19f9e1a022d1ef1e44f1f37bf63c2ff44e20e7a03d7da0b698c299f1376ece3',\n  '0xff573a42da9d286598c5d367100729463f458f353d18d19535df682a5763fc48': '0xf09dd897a44065bfb19ef1ae251282da953536b962487d5ab6e8eb5323a5514f',\n  '0x7249180ebceeaa0700c4f4851507e8c357930bb06f3dba041b8816c39d88e625': '0x21c0079798bbe9069a4935a27cec35d3f13dbca5cd5db4b1a4ea2e78254d09da',\n  '0xd48c14d90da5c64b4850671f8055b08d829cb62f786c617e342884207143d9c1': '0x54341c19a3dcbab64b73727f069fb44ca9787123bff15bfe4a1586ec0b2248f8',\n  '0x20739112ab4d916d05639f13765d952795d53b965d206dfaed92fff7729e29af': '0x4997ebf58931defb29ef3f47888402a9fa7ef2854591142e1a6faf04b0b8cbec',\n  '0x74463cbb0dc6787c3103a4ad799700564dda7b0e063e90a9a83536cdc72ed384': '0xf815cb47a7b955bdd6b54f4c048157f866e26f1ad029f49205f965153f9fc27c',\n  '0x40ceeed02e2e82d4f58e88b9524b33c362e00e17368037f4a47c3cf4c5f1df94': '0xae0e27cc9198eac38894c4f110b37244dbc60ef742f662b08ace607a9bb60fb3',\n  '0x433e4829d774433d5a2ba84e86e18683d0ad6ae57373942766c7dac2c574a649': '0x81fa45568add1cd4fb37f01b88c79d197db4bcccf58a9a833e93df9cd45ad3a0',\n  '0xcc4f0a4f6b5ce21a9a6c5261a2264b11eab8da463f5e00d53c427b348536f804': '0x95de17949ae292c3ac378b975319ea32e07bf0ed6cd6acd16ed6535ab3e26240',\n  '0x6aa304c66d16979e9b527460ff5a470cfbc08e1ecd388c2ac977fd061e96da88': '0xaf66064652987bfa91efbb83dc7930bdf11707bb7f9542c47d6c08d94e39a21a',\n  '0x78883f163d1b4404b87033f16e5c3df9c798c3989e13c83b40879c6f711c0f12': '0x34f65ca4cda5b1e98412eff8ca38ba96cc722e0b0904e748ed667ff6463de7f1',\n  '0xf60b75ace6bf73ddec04cc06aa73fceed01c448a9b36a14830f359ffeb230c61': '0x0bf2e892a0c03320625159a9b4e30dd61793cbf657c94cbbb710d624e593b76e',\n  '0x96658d5d747f38a25dfe30893610bef2dafe9e86d655dfe5abdf54a4d2f3b625': '0x6382181dccde0cd75accf5ada7110d4ceb1773c68b8cf3535c28c05b7c9398aa',\n  '0x14e0310184fed27ee638d0dc219b931a7251eb0b9d8a9fd81fd1addad1977c78': '0xc0f9d533c1e4b939069a47f66819b0bf0bd9280e488566f4cff9a88c16024cc6',\n  '0xddfa7f4eb426dfeb7669919cb0d3078e8a8fe0966041b39bcb707453cd6a4d01': '0x6acdf11f49e400b9eae38ff200d8ebea40c07c9031e013eed4c76c6a142ea7fc',\n  '0xe2bb58e489a71b78c9db08c694dac43f589b287290aa739a5c9ba1816cfa19c0': '0x12e31067d7e0538cc095031c0e2c7be2ab3aa2a8acfadeb5897e95d6cfd3335d',\n  '0x0f402fd55d9c481816edcc99c28857a149386f9f9d823cca0279144516d6603f': '0xca4e3557df9c4ec53f26cdf27387e24243a099fbd0995abfd9e8d010f521bbd5',\n  '0x012aba065a9a1508ec8a128d809a2422473b609fb8b8b6919713002a5aba8b50': '0x2d103c036f3107e21e5879ba8b9a32445b29f46555ab63268752815a9d6daa84',\n  '0xe808b91c57ce205b2774391a2adf5fdd8f797e2e725dee606c241f8aaa010058': '0x7187b9cc0e4a660f318f2d7094103c7fa32ee0444d033adff04e81421ee11383',\n  '0xc684af5e9d2f33fea17ced9fbf6a271f62e43daedcfdc5b998a9988ca4572e6a': '0x0c7eb3b5083eabb34a464c389e6226162473e0856ce93536a3e062022d4549d9',\n  '0x0bb40f4a0c74231e353cad444f95169eadeb76fe803f656140ebd360f5029095': '0x895540ac5bed944e89fb9a29be64b5aa6e38598b22daeb64fd7561753cf38224',\n  '0xaa57c66ba6ee8f2219376659f727f2b13d49ead66435aa99f57bb008a64a8042': '0xd59f1018c49fa301c3603c1e305a5a793d31b2577bdeebf9f7512268a4250b9a',\n  '0x005eda99b1c87bbdcdc8dcf715f9dd1a7a3e8d8c86233b5875f84f362ee31602': '0x060fb0fb55b95e1d498d67c61385ca03fcf6f2d5abd9a7f8165058b298750c71',\n  '0x4edb54baafdf02a2219b6c327c9acacd79280b9c98cdc1b2b23230de906fa421': '0xe7e4f34e07ece96e7e15a91294b567440ab6dd57e6decd67f97f8060e7c808f7',\n  '0x64ff55162588d22e453efa19b334805f19aeb6448c6193b792b4bbe002dc8004': '0x25ab9f86a0d6fe516caa5f7f5a6c058648ea95f96602066a66544724e50ea2b8',\n  '0xfd4ee717a486aeb0151deea95fc6eeac5d4505c4581804698f8468ecb79bec7e': '0x1bfa7f243405f591f3e96c2bb480e49f5cb7e1f9db119e3fea174c44d8de38a9',\n  '0x332777e0d433f261307b907a92b3fc64841d24373a7518d85dda102def2e0a66': '0x25299ae6cdb599b4d4b110356aab292b1c8edc50d396aaa5d361a6b97b2eb886',\n  '0x549a983b3b98ca4e77f17b42f62033c185a947c9c0827c68f0262f63fe189a7b': '0xef8c7170aecde22df810651c3da44a3744b38dee80aa4356cc937aabec475f1e',\n  '0x39a5f5bae62b3876fdd16cda76eebcd334e9da6f69b549ac2f48c384770136ee': '0x267222c9dbd9aa5fb27cd199e21ae4e489fe033f4692ed0e7a6570efb082b2da',\n  '0x9ac28369289dca759311bf4dbf82fe1b9a567b591d840536154d25023e57ace2': '0x1af44b94c2fc3774a73d238bae87370f6d45d143ecd29cde849e74531f350929',\n  '0xa063edd0ac9df821c82041e558d3ecfd3987d6e3904b460f17f39ee16643d7e5': '0xa9402110e5b1ebfb3f6d8fe4ed9e36fa9bf14da04662c1eed9c368559ed75c69',\n  '0x986219cc07c5db62524c9db22cf318c6676e071750d76ce6667372a719063bb1': '0x1d1e4ac454975395dee79803f1737574bf0ba83916aded1c51ec8de220a24813',\n  '0xf9107158e4945d6bbc321c7471e0b7c9854c2d3a1b04aaff6acaa50b8ea203d2': '0x54681e8e81a36e5e384e75e28311c7807a465bc896c9a94166387c555a895b7d',\n  '0x3d257271b793f24e79ff7018529dc6c511679232ee2753b3636734aef563516e': '0xc3265b2db2fb85bb4e4f9dc26a2d92df048a4dbdb55b53b4d2f730365dd25522',\n  '0x6c40c71d281704ee29cf1b9fada2c10ce4f2d7d374c283c79ae8d78ca6290762': '0xd0cfbb781057a8b347625b2f5e8b6d707e873e29c444fc25be62644b9bdac406',\n  '0xb2b55c12c12e6d870bacb894b2966679ac93fab01940e0db3fe95824c0d8e764': '0x15175d85fa9200679a5018dbe04fe43109c1606401b2e8e527eede2b4e9f7d12',\n  '0x7c9a2994b44da6ceb1ab15afbe353e02d43b2239e1c02beed7188fc9b456a246': '0x240c33b0ded680872aebc7de99aa7df4ac9712b4c7fa0d03f03df0da27672a66',\n  '0xeb5ffdadac3cd44d0aaf8c5c9d75d083ddbe93e1c9ebf151cdad334aafe1516c': '0xc3d636c1cb91ae2368bbd192365c6042cff7fd173bbbd3ebe5d87a870affc907',\n  '0x7cc275604cba6857b1a9a043ac2a9c26f229d3053b5b6e70d3147a8486fded51': '0x00079b388634cebd06c4c6a96b57d89d309ad64e2503153a0522b92d3006f9f7',\n  '0xc1f0f2389568b45c3f2ba83667dc24e1d580dc17cacf045c296e310e58e7cd46': '0x475d1ccbe6a0220edd4b105d65ae9637b76379f44c888364c01c7156ae4fedd4',\n  '0xdf74c23ff4516486c8a740c3208485883665a3f386455b37ef5715b3094d5ed8': '0x325d93cc25794640fc52cf46cbff792fd1d05df7718532f8019e190c7e98718b',\n  '0x62b08ffc066e372d72ed3a57b67cc95489a9159ea7947579b14db686355ad148': '0x2117131c67e4c52913c4cd05211866935dcf6f4479c572cac28f3132bc4963ff',\n  '0xfffdd8a3120d708c30c6e227e38580c89d06359998e8ceed41128322410d6082': '0x51041ec41298efc3075ae62d799cb3f052ef4dae841c9053eef3a39100d8ebfc',\n  '0x808794fdea283989a3e6aa07b0d4a85b25881d04c0f16daadf3b8fcc30ef65df': '0x679ab642cf515296d11273f0c734d48ecc088941413b77da10637b6082fb3674',\n  '0x300a0a681065c0df62a804ed7029ed16b77442237d91aafaf282dc7e19e02842': '0x6ec85a1aa6e7d6b7a0801db8b3702330cc6a067b34d0c5cb9ebbdeaee2c45151',\n  '0x4dd9caaf3775ece7a89355db76e3b1ca92481f69f791007119a33c8dc7da7886': '0x5f5f5f415205f4b8d62ff077fa30726b1d27764cc789c0216984750b21e377c9',\n  '0xb00ee12b3ba0ee2b7cfa14dfff92493990e656308edd611ccaba85d98fc948b8': '0xd244005469746820911b223425e02c22ea40032058804b1c961a211589b36002',\n  '0xfb630c8b176d7973a22833bb70705b5958399d6958f7af066fc58bc7aa7e0ffd': '0x065e85bbf444c128bc53fe2a4add5e5b72212bf51812e6f1af8675433b49d340',\n  '0x70311e41a7d62cea8b8730301b3e4e1218701efbdaf2e80fa7f3ea0fa279be87': '0xbbe19011b5e7b07f5b756c0c983250b0603c04dcfb2c9261a3ba50484bcfdd68',\n  '0xcbf70d4b8a4c7fb1487000f3ebd61dd31f20764ca058f5d9a48528dd4e4052be': '0x5f179374d4051bc0b3d96acab45a4e60cc90e796cf8f7967bf930adebc9ef2cb',\n  '0x881bd6abac111854a32d766530c86cdba0bc3bfdc7cbb7c129862468bcba9b5c': '0x54c9046a0355947e63c749d0e222b30c8adeb703b838343654be20c36da4565b',\n  '0xe509754924bc1db0840d5cd25b65ff980494b6e6648dc57f4174cfdab38f98fb': '0x1ecce28473d7194ec6bc3aa7ae90abc3b4b1538169487ecc52e471bc0d114196',\n  '0xce46effd43452c2e03d25995ab5edccf7039b96cf6e9d63a53d4d57d0a2672cb': '0x981d1d0f2148817f78a238a7080b9021bcd3a0e69a65df8051e2dd4c67ad45ee',\n  '0x25af557e5b608047c25b8fea6a15037bab0f75fe4a1235e48f63ca054ed2a0c6': '0xd1ecc611743e2f03e70acb005fb43092fc7e71625cc394051b9e1b792a4b68a4',\n  '0xf1744f0fb28e2ad0f2cff63535de4249ff03b4ba6bf12d84bf2bf23f0b5fe8d8': '0x0eb9bc7646237e21a448d7debdb1fd436818f895e8db648dbe253dc43d8c8f4e',\n  '0x5b0b24c27ccf6d0e98f3a8704d2e577de83fa574d3a9060eb8945eeb82b3e2df': '0x766f380080a1ed253ac595f28cd6dd8013e5d71f84d646dc15b69496207e7a00',\n  '0x0e3452726371a7e93daa67afb850524f032c04e084df9485a87b7a2f72370b5e': '0xfc1c4fb2b2f0142a222dd3b2185c73726dfcd8b3da80a79ae9891a1194818c6d',\n  '0x6130b20b7c5323f27d12a37d9a08c2efc0c029daa4e9d87017a87b78fdd73751': '0x4b2e403cacf6fbc9789464d8f49fa55cf4b2bb96e5841cb3c0a333927e85ce54',\n  '0x1a4850b5b44fe3b43082462dc075f353451c265bf05b6d285eb9f5b041274e94': '0x7335c1ad2608ba53d73adf07e415b821a0e268f7a73048501181ffb61bc02007',\n  '0x4813e8358eb276a55b681253ad2818c407edf26f4b6d8d39e355c3803229c46b': '0x06f5299ca628040ea517834496885cc4a46f7fd981d2e4628904adcae9df08d8',\n  '0x01506619fd093590d6ed47ef6ff292be70974239cf45e10e550c9b0eb125b186': '0xb8f4d2d70f5fbac3ec6b1b4b756fe54c3efd370ec67ec5dbccea9758eb5fe871',\n  '0x09bd43d6ae5f2d3c13350602136415d95554427e39f83f64f08e32539a6688d4': '0xb81e6ed76895a5a8c5f82136afb9a34e429a649034dc8612c070ffc865c73a7b',\n  '0x31fcc51d1042093780d8fd22f13a8ae9823bd661083b04fd392dd9d860f4c23a': '0x59163a5194c34a9820aa47a06a9c3095518e2a579ed00f2a2183f271da6196c6',\n  '0xa03214d9e9cdf8844019fcc621f6d2cab84f2f5c5546c779b58803d237934d1c': '0xa994249d66e372a94ab5c6f9c4ede2b9a2c8af19e79be184999e92a39d23f114',\n  '0x1e142b25b10035c40af0624d455dd4d959938c18af89a28b004f3da583478bc7': '0xe7727f2dc5b7177afb711c1f0232791a95eed375f75a42b1a8c5403e66e73b48',\n  '0x6923952b667c4c9364ecbdc5fe59dc55e645eb5f654f215745ff9da548dd5cff': '0x1edbd6189ef5ad820e6131166b94912d4544d1c804ac9764bb14219d25667623',\n  '0x5f3a79707c2721014c5757f5b9cb03e0ab171517104b831b00e1c3ec7f2aebfe': '0xd193b6b438bb65345c394fb2b17f90b94c4b88f09ec71708a886926a3d4a509b',\n  '0xb9190f66b171ce62c29614f90235d7127c6183215cb89bcd843097496c5bbb29': '0xda229ae22d41dae76942e784523af206165a81f0e65c281b9ed6379a74077f06',\n  '0x20f7502420ca46cf1f91786777edb997fd6731f5d1f725bb6ac763729b08b1b0': '0x45258ab7600cd7f6749cd33b0279ba35bdc88f526366b0a160e7c5af66aa29cb',\n  '0x10eb193f780e5d0ed288cb7a0b29cf8132bcdf5fe1f04f924a26cb3bddbedfe7': '0xae8d8f42a2db315813388a90419616b03cffce968cf6987f9799cbff5aae61f0',\n  '0x3ff1aa1fcd2a8227812ed5cb2032ded27840f6ac27008eff4525369ba33e08a9': '0x53891696905acfd851a411372e82567416280e3ac20dfeb5da219ff50952c388',\n  '0xdf0a039f0d87b0be07ffdf4230bed60017c3d4d939d92d4d085e17d26acb34a7': '0x23072b4539a72aa66a96db109c3f6506ee4ec17d782db2091427b6d818850ed8',\n  '0x5fc8de3d91652c61771b34e4aa7dce9d8fd8d837e06b465ef2df9b1d7741aa8b': '0x65c2ba10538b125e98c281b7870abd59fb1046f884a690f6327754582417ab62',\n  '0x7a82db9825a3a0456192940f42a0042b565ca8a75fc6bfeee3ce315199d532c9': '0xa8cb6f8dd1b5c9d749aa0c43e5131e28127676fd32dc4234cc5ea515bd196f51',\n  '0xae74d149e064bdd2ca0fb3f9dc32157d8653457875618eb6e75054a3949e9043': '0x26228d861125211db467a2f705efb976c88f1302597eee5537d38c8d583bbbcd',\n  '0xba201202145373c9da4a9f1c8c10eff1e8f7aebeb9d668500726c462c49d6c0b': '0x5bb811c51a86a2a7932babd47ce65958778799fc44cfad378f2615216ced3e2d',\n  '0xe305e85b1c9cd9361059585bcb11ee4410dd2f154e028f38a83ff5abb03f1f3b': '0x835103574bb07d34dda644b8845483c7020f7d6638171882081db8cc6f4bd1fc',\n  '0x9773de9af68e07dc46e5a058ce09f4d4a1f21af90bb035f848ce98f4ea9aa4e3': '0xb009521d2992d0ca7740c9a19e593326bcce75afe0591a625c230c25a13bd681',\n  '0x5f755af8da348ef9f00ad339a26e24491b99ebef7cb5431ba76432245db33db5': '0x5b5ff02e81281c72dd7be89e1efbb3bb5e17bbc2579c2363afa106fba4fc835c',\n  '0x2f432f20dc9d174b2e9492525af3015eab012dbed0df6518c33784d93cab5a08': '0x49a64fa7b9e168b041c6d0ec93a8fbc9a74bc4ee6a916114afa4daaa274a8cf6',\n  '0xb66478cf78eda91ff6b084fd934968087991b370bb89493eb6f24403c56c2003': '0xd03a2cd8d28ee8b1110977b7f4f5f2129e4a1da68c8ecbdaeb2e1ac6a9c1634b',\n  '0x77ec5b840d9a465dfaae8bb415682c0faeaa707247af4eec8c5ce8ee6e1314e6': '0x1e06e257e9a6af2dd001211b3f07f796264e86a007a58bbb6e74a5a00a6befc0',\n  '0x711dffb09ddbb285f1671311f6bf2b927ff4b58cbafc5a3a1035f846e7935186': '0x846db99316de9857bc86f48f2855447a4192fc7cd27cb65f9241a2c05ae6558a',\n  '0x0618ff963db90b5800d8aff18bd77e6606c2272e5381d045f890a4ca2520f716': '0x400a352fdaf0f5e138c2085080ea3d710c020cff4d03be79cf6d89d31bc09ec8',\n  '0xc05f3806a27fdc71d3bfde825ef23d459e254b6ca511a57f8ce501466a6bdb27': '0x2e7e5998c07168c83cf38e08890771ed09f5bc9a1661fbf9155cfaeadfa69e28',\n  '0xea18d910c4f7e5c850f1e730dfda8228d710962e50cc31ef28d211c54108e02a': '0x1ee13399c415085bf5da738bcb20a522443c7d90fb8e20910fe5ab4f79cc5535',\n  '0x27a14e0e3c5c616a9443b8a1a861c341c08a7cbbd472600f773d06c03ff1cba9': '0x78b1bd8743b6f192193118b99d30ce10e3fbddac8a5418eeda2172299fdadcb7',\n  '0x2ba92cbb0d1478983356d8f4aefe42f1f856178fe03d8271adc59d44b65235f3': '0xb1332f68deb78ef43a62950ed93ad0d43f63ca7d316d8ddc8d1bbd11dc9b78a5',\n  '0xe49ee5d89e63603a61b4d489ce2c9a555090a9560c7a884a74da8795699ae7a2': '0x77d0a353ba01afe86a64b1009bb627d856dbd110b2b4e349caea4270850ecfa7',\n  '0xbe59b69aa1ad4c36eeda019fe968df9ae7d6f72ac1b5117cefb95de1b12d97f9': '0xec4e2c94332e023dc497558d22ec1f0c15bed388a86de8ea2d44bcb1210122fa',\n  '0x696249f56a0b1fc64ac5762cbb9f31b71a4ce01c607151b0392df3f657df92ce': '0xc6d26ae405618506a92376c3a36437de8b052034b9b480533b5f174355c66548',\n  '0x8666262f9e00fac4a1afee7ef589a82380def3b84269e03b6a2ff990c9cfb058': '0x765a04eae382d6c29964f6091dbb851433c6625eeeb5ec1f7c0d4654692c9bed',\n  '0xebf3e4f099c57cd547491027c98076d61967d7f1a3cfa748531d71fbb7d59173': '0x368cafec6b3ff302f2761eb701e841d8979fc441c54b58ba4312792d73521a21',\n  '0x16fd3857f9c726d8f77da35f07e8b23635826f84a3dedcc15914d1277ceb9e31': '0xd3ef75ecf79ba1bc4d808ae241fb5e2ddd93eb88f64628073e7dcc542258df7c',\n  '0xde7eebd43c36d86a0ec5ae30d0329554faa8142c682b07d49b016d2d4330e85f': '0xd36503455add76d2c9f344c1d6ded51480b789114f621697664e7f19b8c58c20',\n  '0xdb36a73be4abfad79dc57e986f59294cd33f3c43bdf7cf265376f624be60cb18': '0xd66d064a073e95400da101b2f666566612b1b16ca063b7118e741b28f87af9bd',\n  '0x438374f7670df21b52f9789b482f84c362619ba5572a601453a963315607b89a': '0x7864d1fcb1356be1c1efec9352c2068d79e6763b5d9af07e3e45e80205b9d3c1',\n  '0x89364552f4f159aa2e6c6859d81703852317534ad99046f3dc0ba5c4e893196b': '0x2c22f73b6584e609c4520ef77b580c154ed9a679237c5776955242786c14c252',\n  '0x84de0897551f94b39473b1770d7eca2d8426666ad30b0ee57c828bff07eab9c5': '0x1141d2834a9d4d69a615b39b8311d9051378f80dadd3c62feee1ca4275c6eca5',\n  '0x1e88ea876090e70b997987f466de2026a2c4df1a5bda0fbc10f7404e2d11d41d': '0x6f8d67dae90597d61bb9749bdf31c027c9a2465eadef2a693364503a1b26b256',\n  '0x41d3769b75861e80daea5919a3989bbcbdc76c6390cee18f1c39b5e60cb034c9': '0xd521e00779208ef0b86680b96cc48bd436206071f0bb2faf904227fbcca80d2e',\n  '0x88dff9588e60fcb6770c8ce15e6ac888f60a1c4b6206a3933d0ec3b96bdf3f8e': '0x48ff17a02955867cc8e657aa10faf98030366271cb901c4506ca8303613b9d54',\n  '0x8049d009116269ac04ee14206b7afd8b64b5801279f85401ee4b39779f809134': '0x4666cafa01ff03be321103754373f4bd9c4727411fd8b2b6c66faa90f0881ec3',\n  '0x1d40b7c0d734e27784ffe9975ac690a8bb80c1bdb1192b660a74c9534be71ad7': '0xc77bc80a1d933d3672d85dad19cb428ffe7b8fd73b3e4c1a8380c86552428ce9',\n  '0x64efb764360d781860bbb9f2cca98f7882336bb14b8d16f031c764eba02dd00f': '0x9fa2c2aa4d744765d107deb01a4065a52a44218287516c9013a724289e18fd32',\n  '0x899df39337a3e2beac292c13c1db008bc71e1cf48fa3da00975b7420da2246ea': '0xdc23c03bfd867a16c96025d171143640dd002a095de8bd6498b7a570a6a2d6c1',\n  '0x5695d2e9b43f562a0b586e36a15a4203c3fa1993874d7e2a7253bc3a3aeaad71': '0xedbec14c3a4433d33619b22d004b9c47a52cc1d3313b7c98f87c739e50dbe3d0',\n  '0x89ab1144947f681cc439b4ff069841621e031c93b12b4dd794a59b486de56653': '0x1fa72cbee0d695cfd1b53484b585b1ccaa391860a390b83344c774f632e3ae89',\n  '0x81310e6c4c8726179312c185af0d504eb2cf86a2d1af78a3d362a1b497021c71': '0xfdc175e7efd140a3703c75b36d5c698872d440a9c40c9a080c4c062943e57eea',\n  '0x022a24897f57530401cf8f91fca1e07969ea1f513df4dcaa4886d91546f45e24': '0x7292e1407384046a1689e8c13e384ecd2a72d1ec27a1a0f6c51bf6f6a9c24ec1',\n  '0x806b868c87197bb4caa6f076a2661331156f6bed2b5510749803265adb7f6e0c': '0xae7387e8bc45b0a4fc642a6b4406180cd822dee0056273fe34d4c6630e128fa2',\n  '0xd8642c113cfac11073219b0edae99c87e87b8a1141877f31dfd5bf60cfea7c1f': '0x183d5ecb2af73993c84e8beaf43f25ca7644203d1ec235de0fdc887dd1c6fa59',\n  '0x3f25071773d3393370d65321cd7b4836ba1ee55eb9fdbd514ea71b7d935c5ce5': '0x17fdfe5273634e0b8d6666c217a21a9ad9f3e84a37c7e21bbe84a9ec4128e99b',\n  '0xc17e7110b0d331deddfeee45c969dd8abe96ddf1aaf201834e1aa27da0978e00': '0xbf53085c5c2743abdb6dfa137380ef5fdb84eafe1532c4a641391ca9ab0c8ae6',\n  '0x7bd1c6dfbcd75301d574a226b1e05316cfc647f88082e3b94c57ed736a74916c': '0xf559428cb82dfcf0e4ed242773c227e73b98f38ffcdc1ab3e172995ec5922aa8',\n  '0x6a8e33474c5bff5925de3575e14565d9c848241266aaf9703d5cb5c431152add': '0x2f69ba5e339195580611daf547ddf8a2b7744f8e5ee3eb128be19c4ee9a53cdf',\n  '0xa8bea2beb79f070e36ede281100f46f98654b998c22012cb592ca6b4e16b2fdd': '0xc03002987b9cca7dd565ebb44e763908926fea7e499c740d2b394d3e4999fe38',\n  '0xece004cb5e023bfa633ea5af72a60c40b24c76b9a30658dc0bb208aaa8fc20bc': '0x39053e1e6282fa4dc4a09c1c53d3c8c6f2b731fb5888168926e75c50681657e4',\n  '0x73cab69f2ebd6f6e00b05ffdd3c2e59c74922e51daf34f37b462007262998b97': '0x14efea91808aefad11266d36e1e5dca66c1763fd2f30c2804a4c8eb42ce39889',\n  '0xa5748192065e06913100a1f67bd8cf94f8b3a3bcf4d5169ceba5b50ec64b62f1': '0x2e9780f85f97d9fb3c1cf1f68bde85ba5eab2e819f7180bb36155af92206f8d3',\n  '0x3f8f868fd8e9fc6255f573f88183c845417b064d67725c5b4224dfc6410f5404': '0xf705447b81688ad82212069b926e9ba299add22cb3803f7993d8b1c37c628d63',\n  '0x744eb8f8ef80f26586894f147ff35c3cd3515f9d0ed5ed894425d43248dcf166': '0x285083a4a21a2bc54c00463cf57a926ae8d4cd4b966a2404a3f87ca44d17e24a',\n  '0xc210af547d6fb65af99ae4622f04a5b11f27d741be1d3740a460d3b02115f7ca': '0x7a6213da9571b60aafc1e18bb2b56deb0df91daf63d4683dae840d54c518d65c',\n  '0x007253cec36ada57676dee0716eb0f65bab66bd94fff6b835e7b33ba325aa9bb': '0x28e88798ba6b206f63c9fae756d86942b31dc1b2799faaed6591d529d632de09',\n  '0xc7e6ce902165cf3c132b4560e50721695674bb9b50d1da973ce23d1ae59986a2': '0xcfa68f6877f7969b0fef888cdb363ec1b8027fac69f41051d8907a266c7f0a15',\n  '0x531ca8db28611d1a4fca8306d6f97658034341513872f40ecefa90a52ab889b4': '0x83eb8d2f8ca7d8017b7f2fc4e42f31ead19506a530c66e84fa003b77401d8590',\n  '0x8b8608c1998ccd52e422fc7d1441cb6ab7098b8add8588b030ddc013f5ce153a': '0x4c2a610bb0f91018306d68a052a5ac926f8614ebbb318ad8ac3c7f4a67fbadb2',\n  '0x3d8606a40afb3cb662f7a6f6656507d7047345030db11cb7388d66c0725e1285': '0x405decaee7ec538ef6b0d39e8d75963d03714e98023be0795977c47b74a42c79',\n  '0x48187bdd4421d4e548bd2bb3140b0266e040bef35d83c4cfa5a0911ac000fc05': '0x050c6e38f3bacd141f71b63801ef6d683931cbaa3d27477f3e1bf8750228bf57',\n  '0xd22b04ec838c86ecfb929892496cf6d7e8e95e7b99bd387f799a09070a89e4a6': '0x814fed65467f84f47daf9f5ae2b36f787276ec7a6fe9847e785770ca5ceb035f',\n  '0x293dba0f38a7ba695a53b651dc4adc30cf66c7c549885b1f48690948a2c213e0': '0x54a49a89210fa50e00ff7581ed08478f66a90b04d32f667ff75b058203d13c35',\n  '0x63a61baa127f118955fd348d9f2423fbf5f568a0224d4c87b7729a90e692916b': '0xb94d271a70e16588f025e55c7e36763f0ede605ba37eb8dbf81d6ee8995179c0',\n  '0xbc50ba1c99c26c38104db839e601680fae3572071605d042e2dc662d1f8f6cdf': '0x0b592875585891e50112d9def2c85327ee95346d12d8dfe6162f04e322fdca08',\n  '0xdd099077af49a2fb66332be51c4d02134569c764706a2aa9a327e2afa90ea422': '0x295093f1f0d50f2009a8840c76c285f6a677ad82f5a3c9dce81f9677aab84c4c',\n  '0xd02c7f130a59ebb9feece7da9778320527c8a2de071a51a1e732ba56b4ce53b0': '0xd42182a523b7d8656ef5cd58934df53d90257b0c07b51da115e73e31334e637b',\n  '0x86637058013e0be85c12e22748e9cc3ea86904ff52931e64376f0020cf0e7456': '0x7318fe60013b32eb053296a10dc7db5bbafd69769ed11be7e277acae27093f25',\n  '0x474ce7b61b0ae75cad36aa9c59aa5ca8485c00b98fd1890db33b40ef2a5ba604': '0x9f96cdf9e52daa54e70cdb4aa8366ead31698f825598c4a62b4d27fe3cc0e973',\n  '0xe869743b94dbe17d0bbc03d4ffeeffd728843c32b70906de3eb21587a62f76ef': '0xb6ce3e57eaf520e8c45392b41bf2234d7522029c28d9c9eef5a358e18e3a702c',\n  '0xa2c7bc1b2b92064031c6ce9cfc4e2fa083c39ccb3f833b12785e41375383abf8': '0xd76a997453d73be49a84f57e769ef1a244e81c0a21f023dd297e15ca7f88f6fb',\n  '0x97133f21b76234274ef5f7590fe48d083881c5c459bdc76c73f785f262c23388': '0xe894f03b8e6d77a1bb6d78638b87f4f4bd3f8e095b86bd8c3de9ae7cc4bf415a',\n  '0xbda183c33f0055f865f642f3d848e378729893d31a6615add99d25bc21394d62': '0x4c44f5b7a0d3cc91a8de7aa697b730853603e47ed28bf73b1f419f5ce5a800e7',\n  '0x829a8582573ecddaa514ae6f90d498fb384c592faae528235936685ac9d3cdf4': '0x91f35e135c066de24776eba524ac9724320b2afa05fd81eac8cae7f58c57aa6a',\n  '0x8e648ee8cc227e8678cdb0b9925e97af0b79e5b367b0e8a709706db7e752e5cf': '0xf64ad5bcf713ac29684957af2717e487233c2887f3b343bb0dcbc6c248a73067',\n  '0x78cd9a603e23e55a61ba1c79abf384da0f9304621495425a6f37a3aee77dbefe': '0x2ae4f5cf875667387bd4e2b663ab72aec66c765c53a4136b595d391610342cf1',\n  '0x4968268448a49e3ff2298ad72df31ef75d121d07d47b2ab142f36ee354693284': '0x664a360bf5b9dd0d6efad58ca3bae91ae378ab6878c9a635bd291fa8562b8d43',\n  '0xf76905d623507c256ce49b2667c18e25a733a04161af9eeec7acbaa65c045e06': '0xf88ef537d12baa7d62998d0b786c28363de520a863e516662e66b71e1f5d8ad8',\n  '0xa0ab3f9f41f2b9de59773d54b2527175fcc0d1c52e80c7fbd75b550f6e7079ca': '0x818d2b2b3e51231a669de2e89c85911082b6b5b412e056a59f5ae2c608a82207',\n  '0x5da1180b2b6c465530d6bb8f6ef97f1bf4679860c3b3b4771a9a3fb69b22dbc6': '0x1bcdb9c015a291da95ae7e02873ad683c00cddc2863608739111f5dfd01cf6b2',\n  '0x4bd8968392cf0690ccc6b6a7c2ad1ab7a1f7dbb1c16a32d7e54e1533eed9b708': '0x227ecc04ca9f882121cfbf0231c8cf3c24005c3df843a6226888db0cd1a520a5',\n  '0x04d7dc303d0c7c381ba468da0b42ac57499aec62dd221e52496f7e2350009ee2': '0x5c17d1f02137c1e764611be1c6ec573ff1a6cd470240261d0179ccea02469344',\n  '0x75fe1d6ee1d1b8d1cb7a9622e4cd54e7271413201fecec8303a81312dbefc013': '0x7c588a61f4b6c69f9ac9bc3bc6b0ff09cf3380b952f33f04ae18b1b5afeb74f5',\n  '0x7e31fed11e94f3892cca5660f350cead76026ffeb251a53f16fd1ac0c2e355e8': '0x92ec7b4605ebf93f3b6763c45ad462e535c0cc8d0c9f9ad4d39e892932f7a927',\n  '0xdc32ad84f57302aad801b5bf7eac8a76860e5c71070b78a43a70423f80521159': '0x914c65375471cbd6cdfc9b38086fb778727216566f6f34186762cd800f71e493',\n  '0xaa048d2dfb6e663b2a55b1e4fcc84f2fff0d5d5a8ae9db1be185f6f0692a002d': '0x8c5893990e84adab051b7691f955e2ce0bfda779322314b45173b6dea9827020',\n  '0x063df8874bc0edf22e65f308f352452b1b48317d4c03a84d3a4acb4a1da1b659': '0x34be31e43c02a6c1c4f1724bb97f5d43bc5a75a990b8bf63f4dd7f9e47a6593e',\n  '0x075a472bdbb478df8d6a8ed51128712d3c7db67667cda94028865f129315ae28': '0xf2235951ba42fe7d139a80d830e398584f31ae92fa85211da894d7110c345b79',\n  '0xd45ae05afe00a595c9f1ad105e445a89de922d3dd77abd776d619dae6451c1da': '0x2b7ef62b254ee53870f61a4af0cf84995c2478c90343a6eb92176fcaa477809d',\n  '0x73e93d2a6e975dc1a2c4474c43f3f64f566e5d1687f417b760a06e9654209ec4': '0xcafb4be89c20b13eda3f66054a7d34b11f3eb6f46cce8dcc7aede0c0cd812020',\n  '0x3616012600e87547d4aaa974b39e24650a5071405652fcee6ceb1280b615d6c1': '0x27a1820df77fdf51cef96527fea5fbd193fd571f35609fed55a7c3ae2c048cf7'\n}\n\nconst POS_HANDLE_TESTNET = {\n  '0x3bb4c2bcb90efd0286de46c64df2c4a9251bac034a215b9412f35efc7baab454': '0xe8348049caba0647fa6c895555f9bef9872afc9f00cb8aae18f1338493833e27',\n  '0x84da70840bea67d388996976972afa41a5559c64513777daafbe24a384ec285f': '0xdfd3c28fc890881bb0b18713e7ab45625c6f68f16e4415d32b86a931202976b4',\n  '0xf5962c31df2eaf01d3665138f80c118757c422c53fdee7e0a1cad4dd8d07edda': '0x1e12d6bf066eeff1b3b17cec642e9c75b778e12a6692b2908e70046ad70018a0',\n  '0x403c7d9c1e959c029f61d970286eac8ad5bca2db2edba358585abf4dbd4ed3cd': '0xf0679c2fc40cac444586b47b42be64983c5f94ca01ce86b267b8388aa44cbde0'\n}\n\nconst POS_HANDLE = envConfigs.env === 'testnet' ? POS_HANDLE_TESTNET : POS_HANDLE_MAINNET\n\nexport { POS_HANDLE }\n","import { POS_HANDLE } from '@/constant/position-handle-mainnet'\nimport { PosBaseInfo } from '@/types'\nimport { useSdk } from '@cetus/sdk-factory'\nimport { PositionVesting } from '@cetusprotocol/sui-clmm-sdk'\n\nexport default function useGetPosInfoList() {\n  const clmmSdk = useSdk('clmm')\n\n  function toCamelCase(str: string) {\n    return str.replace(/_([a-z])/g, (_, letter) => letter.toUpperCase())\n  }\n\n  function parseObjectKeysToCamelCase(obj: any): any {\n    if (Array.isArray(obj)) {\n      return obj.map(parseObjectKeysToCamelCase)\n    } else if (obj !== null && typeof obj === 'object') {\n      return Object.entries(obj).reduce(\n        (acc, [key, value]) => {\n          const newKey = toCamelCase(key)\n          acc[newKey] = parseObjectKeysToCamelCase(value)\n          return acc\n        },\n        {} as Record<string, any>\n      )\n    }\n    return obj\n  }\n  // 从positon拿仓位信息（因为nft中裁剪过的仓位的liquidity无变化，但position中的liquitiy有变化）\n  const getPositionInfoList = async (posBaseList: PosBaseInfo[], vestingList: PositionVesting[], isFetchAll?: boolean) => {\n    try {\n      const posBaseObj = Object.fromEntries(posBaseList?.map((item: PosBaseInfo) => [item.posId, item]))\n      const vestingObj = Object.fromEntries(vestingList?.map(item => [item.position_id, item]))\n\n      const vestingListWithAddPool = vestingList.map(item => {\n        return {\n          ...item,\n          clmm_pool: posBaseObj?.[item?.position_id]?.clmmPool\n        }\n      })\n\n      const vestingGroupByPool: any = {}\n\n      // toDo: 临时调整\n      if (isFetchAll) {\n        for (let i = 0; i < posBaseList?.length; i++) {\n          const item = posBaseList[i]\n          if (vestingGroupByPool?.[item?.clmmPool]?.position_ids?.length > 0) {\n            vestingGroupByPool[item?.clmmPool].position_ids.push(item?.posId)\n          } else {\n            vestingGroupByPool[item?.clmmPool] = {\n              position_ids: [item?.posId],\n              position_handle: POS_HANDLE[item?.clmmPool]\n            }\n          }\n        }\n      } else {\n        for (let i = 0; i < vestingListWithAddPool?.length; i++) {\n          const item = vestingListWithAddPool[i]\n          if (vestingGroupByPool?.[item?.clmm_pool]?.position_ids?.length > 0) {\n            vestingGroupByPool[item?.clmm_pool].position_ids.push(item?.position_id)\n          } else {\n            vestingGroupByPool[item?.clmm_pool] = {\n              position_ids: [item?.position_id],\n              position_handle: POS_HANDLE[item?.clmm_pool]\n            }\n          }\n        }\n      }\n\n      console.log('🚀 ~ getPositionInfoList ~ vestingGroupByPool:', vestingGroupByPool)\n      const params = Object.values(vestingGroupByPool)\n\n      const res = await clmmSdk!.Position.getPositionInfoList(params)\n      console.log('🚀 ~ getPositionInfoList ~ res:', res)\n\n      const positionInfoObj = Object.fromEntries(res?.map(item => [item.pos_object_id, item]))\n      console.log('🚀 ~ getPositionInfoList ~ positionInfoObj:', positionInfoObj)\n      console.log('🚀 ~ getPositionInfoList ~ posBaseList:', posBaseList)\n\n      const newPosBaseList = posBaseList.map(item => {\n        if (positionInfoObj?.[item?.posId]) {\n          return {\n            ...item,\n            liquidity: positionInfoObj?.[item?.posId]?.liquidity,\n            vestData: parseObjectKeysToCamelCase(vestingObj?.[item?.posId])\n          }\n        }\n        return item\n      })\n      console.log('🚀 ~ getPositionInfoList ~ newPosBaseList:', newPosBaseList)\n\n      return newPosBaseList\n    } catch (error) {\n      console.log('🚀 ~ getPositionInfoList ~ error:', error)\n      return []\n    }\n  }\n  return {\n    getPositionInfoList,\n    parseObjectKeysToCamelCase\n  }\n}\n","import { POS_HANDLE } from '@/constant/position-handle-mainnet'\nimport { PosBaseInfo } from '@/types/position'\nimport { useSdk } from '@cetus/sdk-factory'\nimport { GetPositionVestOption, PositionVesting } from '@cetusprotocol/sui-clmm-sdk'\n\nexport default function useGetPosVesting() {\n  const clmmSdk = useSdk('clmm')\n\n  const getPosGroupByPool = (posBaseList: PosBaseInfo[]) => {\n    const posGroupByPool: any = {}\n    posBaseList.forEach((item: PosBaseInfo) => {\n      if (posGroupByPool?.[item?.clmmPool]?.clmm_position_ids?.length > 0) {\n        posGroupByPool?.[item?.clmmPool]?.clmm_position_ids.push(item.posId)\n      } else {\n        posGroupByPool[item?.clmmPool] = {\n          clmm_position_ids: [item?.posId],\n          clmm_pool_id: item?.clmmPool,\n          coin_type_a: item?.coinTypeA,\n          coin_type_b: item?.coinTypeB\n          // vest_coin_type: clmmSdk?.sdkOptions.clmm_vest?.config?.cetus_coin_type\n        }\n      }\n    })\n    return posGroupByPool\n  }\n  const getVestingList = async (posBaseList: PosBaseInfo[]): Promise<PositionVesting[]> => {\n    try {\n      console.log('🚀 ~ getVestingList ~ posBaseList:', posBaseList)\n      const posGroupByPool: any = getPosGroupByPool(posBaseList)\n\n      console.log('🚀 ~ getVestingList ~ posGroupByPool:', posGroupByPool)\n\n      const list = Object.values(posGroupByPool)\n\n      // toDo: 上线时要去掉\n      const vestPools = Object.keys(POS_HANDLE)\n      const params = list.filter(item => {\n        return vestPools?.includes(item?.clmm_pool_id)\n      })\n      console.log('🚀🚀🚀 ~ useGetPosVesting.ts:35 ~ getVestingList ~ params:', params)\n\n      if (params?.length > 0) {\n        const res = await clmmSdk!.Vest.getPositionVesting(params as GetPositionVestOption[])\n        console.log('🚀 ~ getVestingList ~ res:', res)\n        return res\n      }\n\n      return []\n    } catch (error) {\n      console.log('🚀 ~ getVestingList ~ error:', error)\n      return []\n    }\n  }\n\n  return {\n    getVestingList,\n    getPosGroupByPool\n  }\n}\n","import { PosFee, PosReward } from '@/types'\nimport { DlmmPoolData, DlmmPosBaseInfo, DlmmPosLiquidity, DlmmPosPoolsRelated } from '@/types/dlmm'\nimport { create, StateCreator } from 'zustand'\n\ninterface DlmmPositionState {\n  dlmmPosBaseListLoading: boolean\n  setDlmmPosBaseListLoading: (status: boolean) => void\n\n  dlmmPosPoolsOriginalData: Record<string, DlmmPoolData>\n  setDlmmPosPoolOriginalData: (data: Record<string, DlmmPoolData>) => void\n\n  dlmmPosBaseListGroupByPool: Record<string, DlmmPoolData & { list?: DlmmPoolData[] }>\n\n  dlmmPosPoolsRelatedDataLoading: boolean\n  setDlmmPosPoolsRelatedDataLoading: (status: boolean) => void\n\n  dlmmAprMap: Record<string, string>\n  setDlmmAprMap: (data: Record<string, string>) => void\n\n  dlmmPosPoolsRelatedData: Record<string, DlmmPosPoolsRelated>\n  setDlmmPosPoolsRelatedData: (data: Record<string, DlmmPosPoolsRelated>) => void\n\n  dlmmPosLiquidityDataLoading: boolean\n  setPosLiquidityDataLoading: (status: boolean) => void\n\n  dlmmPosLiquidityData: Record<string, DlmmPosLiquidity>\n  setDlmmPosLiquidityData: (data: Record<string, DlmmPosLiquidity>) => void\n\n  dlmmPosFeeData: Record<string, PosFee>\n  setDlmmPosFeeData: (data: Record<string, PosFee>) => void\n\n  dlmmPosBaseList: DlmmPosBaseInfo[]\n  setDlmmPosBaseList: (list: DlmmPosBaseInfo[]) => void\n\n  dlmmCurrentPosBaseInfo: DlmmPosBaseInfo\n  setCurrentPosBaseInfo: (data: DlmmPosBaseInfo) => void\n\n  dlmmCurrentPosBaseInfoLoading: boolean\n  setDlmmCurrentPosBaseInfoLoading: (status: boolean) => void\n\n  dlmmPosRewardsData: Record<string, PosReward[]>\n  setDlmmPosRewardsData: (data: Record<string, PosReward[]>) => void\n\n  dlmmPosFeeAndRewardsLoading: boolean\n  setDlmmPosFeeAndRewardsLoading: (status: boolean) => void\n\n  dlmmPosFeeDataLoading: boolean\n  setDlmmPosFeeDataLoading: (status: boolean) => void\n\n  dlmmPosRewardsDataLoading: boolean\n  setDlmmPosRewardsDataLoading: (status: boolean) => void\n\n  posChartRefreshTrigger: number\n  setPosChartRefreshTrigger: () => void\n\n  resetDlmmPositionState: () => void\n}\nconst store: StateCreator<DlmmPositionState> = (set, get) => ({\n  dlmmPosFeeAndRewardsLoading: false,\n  setDlmmPosFeeAndRewardsLoading: (status: boolean) => {\n    set(() => ({\n      dlmmPosFeeAndRewardsLoading: status\n    }))\n  },\n  dlmmPosBaseListLoading: false,\n  setDlmmPosBaseListLoading: (status: boolean) => {\n    set(() => ({\n      dlmmPosBaseListLoading: status\n    }))\n  },\n\n  dlmmPosPoolsOriginalData: {},\n  setDlmmPosPoolOriginalData: (data: Record<string, DlmmPoolData>) => {\n    set(() => ({\n      dlmmPosPoolsOriginalData: data\n    }))\n  },\n\n  dlmmAprMap: {},\n  setDlmmAprMap: (data: Record<string, string>) => {\n    const originData = get().dlmmAprMap\n    set(() => ({\n      dlmmAprMap: { ...originData, ...data }\n    }))\n  },\n\n  dlmmPosPoolsRelatedDataLoading: false,\n  setDlmmPosPoolsRelatedDataLoading: (status: boolean) => {\n    set(() => ({\n      dlmmPosPoolsRelatedDataLoading: status\n    }))\n  },\n\n  dlmmPosPoolsRelatedData: {},\n  setDlmmPosPoolsRelatedData: (data: Record<string, DlmmPosPoolsRelated>) => {\n    set(() => ({\n      dlmmPosPoolsRelatedData: data\n    }))\n  },\n\n  dlmmPosLiquidityDataLoading: true,\n  setPosLiquidityDataLoading: (status: boolean) => {\n    set(() => ({\n      dlmmPosLiquidityDataLoading: status\n    }))\n  },\n\n  dlmmPosLiquidityData: {},\n  setDlmmPosLiquidityData: (data: Record<string, DlmmPosLiquidity>) => {\n    set(() => ({\n      dlmmPosLiquidityData: data\n    }))\n  },\n\n  dlmmPosFeeData: {},\n  setDlmmPosFeeData: (data: Record<string, PosFee>) => {\n    set(state => ({\n      dlmmPosFeeData: {\n        ...state.dlmmPosFeeData,\n        ...data\n      }\n    }))\n  },\n  dlmmPosBaseListGroupByPool: {},\n  dlmmPosBaseList: [],\n  setDlmmPosBaseList: (list: DlmmPosBaseInfo[]) => {\n    const groupedByDlmmPool = list.reduce((result: any, item: DlmmPosBaseInfo) => {\n      if (!result[item.dlmmPool]) {\n        result[item.dlmmPool] = { list: [] }\n      }\n      if (!result[item.dlmmPool]?.tokenA) {\n        result[item.dlmmPool]['poolType'] = 'dlmm'\n        result[item.dlmmPool]['isReverse'] = item?.isReverse\n        result[item.dlmmPool]['tokenA'] = item?.tokenA\n        result[item.dlmmPool]['tokenB'] = item?.tokenB\n        result[item.dlmmPool]['displayTokenA'] = item?.displayTokenA\n        result[item.dlmmPool]['displayTokenB'] = item?.displayTokenB\n        result[item.dlmmPool]['dlmmPoolAddress'] = item.dlmmPool\n      }\n      result[item.dlmmPool]?.list?.push(item)\n      return result\n    }, {})\n    set(() => ({\n      dlmmPosBaseList: list,\n      dlmmPosBaseListGroupByPool: groupedByDlmmPool\n    }))\n  },\n\n  dlmmCurrentPosBaseInfo: {} as DlmmPosBaseInfo,\n  setCurrentPosBaseInfo: (data: DlmmPosBaseInfo) => {\n    set(() => ({\n      dlmmCurrentPosBaseInfo: data\n    }))\n  },\n\n  dlmmCurrentPosBaseInfoLoading: false,\n  setDlmmCurrentPosBaseInfoLoading: (status: boolean) => {\n    set(() => ({\n      dlmmCurrentPosBaseInfoLoading: status\n    }))\n  },\n\n  dlmmPosRewardsData: {},\n  setDlmmPosRewardsData: (data: Record<string, PosReward[]>) => {\n    set(state => ({\n      dlmmPosRewardsData: {\n        ...state.dlmmPosRewardsData,\n        ...data\n      }\n    }))\n  },\n\n  dlmmPosFeeDataLoading: false,\n  setDlmmPosFeeDataLoading: (status: boolean) => {\n    set(() => ({\n      dlmmPosFeeDataLoading: status\n    }))\n  },\n\n  dlmmPosRewardsDataLoading: false,\n  setDlmmPosRewardsDataLoading: (status: boolean) => {\n    set(() => ({\n      dlmmPosRewardsDataLoading: status\n    }))\n  },\n  posChartRefreshTrigger: 0,\n  setPosChartRefreshTrigger: () => {\n    set(state => ({\n      posChartRefreshTrigger: state.posChartRefreshTrigger + 1\n    }))\n  },\n  resetDlmmPositionState: () => {\n    set(() => ({\n      dlmmPosFeeAndRewardsLoading: false,\n      dlmmPosRewardsDataLoading: false,\n      dlmmPosFeeDataLoading: false,\n      dlmmCurrentPosBaseInfoLoading: false,\n      dlmmPosPoolsRelatedDataLoading: false,\n      dlmmPosLiquidityDataLoading: false,\n      dlmmPosRewardsData: {},\n      dlmmPosPoolsOriginalData: {},\n      dlmmCurrentPosBaseInfo: {} as DlmmPosBaseInfo,\n      dlmmPosBaseListGroupByPool: {},\n      dlmmPosBaseList: [],\n      dlmmPosFeeData: {},\n      dlmmPosLiquidityData: {},\n      dlmmPosPoolsRelatedData: {}\n    }))\n  }\n})\n\nconst useDlmmPositionStore = create(store)\nexport default useDlmmPositionStore\n","import { RecommendRangesType } from '@/types'\nimport { create, StateCreator } from 'zustand'\n\ninterface DepositState {\n  priceRangeMap: Record<string, object> | null\n  setPriceRangeMap: (value: Record<string, object> | null) => void\n  recommendRangesInfo: RecommendRangesType | null\n  setRecommendRangesInfo: (value: RecommendRangesType | null) => void\n  resetDeposit: () => void\n}\n\nconst store: StateCreator<DepositState> = (set, get) => ({\n  priceRangeMap: null,\n  setPriceRangeMap: (value: Record<string, object> | null) => {\n    set(() => ({\n      priceRangeMap: value\n    }))\n  },\n  recommendRangesInfo: null,\n  setRecommendRangesInfo: (value: RecommendRangesType | null) => {\n    set(() => ({\n      recommendRangesInfo: value\n    }))\n  },\n  resetDeposit: () => {\n    set(() => ({\n      priceRangeMap: null,\n      recommendRangesInfo: null\n    }))\n  }\n})\n\nconst useDepositStore = create(store)\nexport default useDepositStore\n","import { PriceRangePath } from '@/apis/path'\nimport useDepositStore from '@/store/clmm/deposit'\nimport usePositionStore from '@/store/position'\nimport { useFetch } from '@cetus/hooks'\nimport { Token } from '@cetus/types'\nimport { TickMath } from '@cetusprotocol/common-sdk'\n\nfunction useGetPriceRange() {\n  const { fetchByApi } = useFetch()\n  const { setPriceRangeMap, setRecommendRangesInfo } = useDepositStore()\n  const { setPoolRangeObj } = usePositionStore()\n  const fetchPriceRange = async (poolAddress: string, tokenA?: Token, tokenB?: Token) => {\n    try {\n      const res = await fetchByApi(PriceRangePath, 'GET', { pool: poolAddress })\n      const rangesWithDateTypeMap = Object.fromEntries(\n        res?.ranges?.map((item: any) => [\n          item?.dateType,\n          [\n            TickMath.tickIndexToPrice(item?.lower, tokenA!.decimals, tokenB!.decimals).toString(),\n            TickMath.tickIndexToPrice(item?.upper, tokenA!.decimals, tokenB!.decimals).toString()\n          ]\n        ])\n      )\n      setPriceRangeMap(rangesWithDateTypeMap)\n      setRecommendRangesInfo({\n        ranges: res?.recommender,\n        type: res?.type,\n        dateTypeRanges: res?.ranges\n      })\n      return {\n        rangesWithDateTypeMap,\n        recommendRanges: {\n          ranges: res?.recommender,\n          type: res?.type\n        }\n      }\n    } catch (error) {\n      console.error('Error in fetchPriceRange:', error)\n      setPriceRangeMap({})\n      setRecommendRangesInfo({\n        ranges: {},\n        type: '',\n        dateTypeRanges: []\n      })\n      return {\n        rangesWithDateTypeMap: {},\n        recommendRanges: {\n          ranges: {},\n          type: ''\n        }\n      }\n    }\n  }\n\n  // 计算apr用\n  const fetchPriceRanges = async (pools: string[]) => {\n    const { data } = await fetchByApi(PriceRangePath, 'POST', { pools })\n    const rangesWithPoolMap = data.reduce((acc, item) => {\n      acc[item.pool] = item\n      return acc\n    }, {})\n    console.log('🚀 ~ fetchPriceRanges ~ rangesWithPoolMap:', rangesWithPoolMap)\n    setPoolRangeObj(rangesWithPoolMap)\n  }\n\n  return {\n    fetchPriceRange,\n    fetchPriceRanges\n  }\n}\n\nexport default useGetPriceRange\n","import useDlmmPositionStore from '@/store/dlmm-position'\nimport { PosFee, PosReward } from '@/types'\nimport { DlmmPoolData, DlmmPosBaseInfo } from '@/types/dlmm'\nimport { spitClaimDlmmPosList } from '@/utils/dlmm'\nimport { useGetToken } from '@cetus/hooks/src/useToken'\nimport { useSdk } from '@cetus/sdk-factory'\nimport { CoinType, Token } from '@cetus/types'\nimport { bnToAmount } from '@cetus/utils'\nimport { fixCoinType } from '@cetusprotocol/common-sdk'\nimport { CollectRewardAndFeeOption } from '@cetusprotocol/dlmm-sdk'\n\nexport default function useGetDlmmPosFeeAndReward() {\n  const dlmmSdk = useSdk('dlmm')\n  const { getTokenListInfo } = useGetToken()\n  const { setDlmmPosFeeData, setDlmmPosRewardsData, setDlmmPosFeeAndRewardsLoading } = useDlmmPositionStore()\n\n  const getDlmmPosFeeAndReward = async (positionBaseList: DlmmPosBaseInfo[], posPoolsOriginalData: Record<string, DlmmPoolData>) => {\n    const batchPosList = spitClaimDlmmPosList(positionBaseList, 2000)\n    const batches: CollectRewardAndFeeOption[][] = []\n    batchPosList.forEach(batch => {\n      const options: CollectRewardAndFeeOption[] = []\n      batch.forEach(position => {\n        const poolInfo = posPoolsOriginalData?.[position.dlmmPool]\n        options.push({\n          pool_id: position.dlmmPool,\n          position_id: position.id,\n          reward_coins: poolInfo.reward_manager.rewards.map(r => r.reward_coin),\n          coin_type_a: position.coinTypeA,\n          coin_type_b: position.coinTypeB\n        })\n      })\n      batches.push(options)\n    })\n\n    setDlmmPosFeeAndRewardsLoading(true)\n    try {\n      let res: any\n      // 分批处理所有批次\n      if (batches.length > 1) {\n        // 多个批次，需要合并结果\n        const allResults = []\n        for (const batch of batches) {\n          const batchRes = await dlmmSdk?.Position.fetchPositionFeeAndReward(batch)\n          allResults.push(batchRes)\n        }\n\n        // 合并所有批次的结果\n        res = {\n          feeData: {},\n          rewardData: {}\n        }\n\n        allResults.forEach(batchRes => {\n          if (batchRes?.feeData) {\n            Object.assign(res.feeData, batchRes.feeData)\n          }\n          if (batchRes?.rewardData) {\n            Object.assign(res.rewardData, batchRes.rewardData)\n          }\n        })\n\n        console.log('🚀 ~ getDlmmPosFeeAndReward ~ merged res:', res)\n      } else {\n        // 只有一个批次，直接处理\n        res = await dlmmSdk?.Position.fetchPositionFeeAndReward(batches[0])\n        console.log('🚀 ~ getDlmmPosFeeAndReward ~ res:', res)\n      }\n\n      /** 处理 Fee 数据 */\n      if (res?.feeData) {\n        const dlmmPosFeeData: Record<string, PosFee> = Object.fromEntries(\n          positionBaseList.map(position => {\n            const feeItem = res.feeData[position.id]\n            const [feeA, feeB] = !position.isReverse ? [feeItem.fee_owned_a, feeItem.fee_owned_b] : [feeItem.fee_owned_b, feeItem.fee_owned_a]\n\n            return [\n              position.id,\n              {\n                displayFeeOwedA: bnToAmount(feeA.toString(), position?.displayTokenA?.decimals || 0),\n                displayFeeOwedB: bnToAmount(feeB.toString(), position?.displayTokenB?.decimals || 0),\n                feeOwedA: feeItem.fee_owned_a,\n                feeOwedB: feeItem.fee_owned_b\n              }\n            ]\n          })\n        )\n        setDlmmPosFeeData(dlmmPosFeeData)\n        console.log('🚀 ~ getDlmmPosFeeAndReward ~ dlmmPosFeeData:', dlmmPosFeeData)\n      }\n\n      /** 处理 Reward 数据 */\n      if (res?.rewardData) {\n        // 提取 coinType 并去重\n        const coinTypeList = [\n          ...new Set(\n            Object.values(res.rewardData)\n              .flatMap((item: any) => item.rewards.map((r: any) => fixCoinType(r.coin_type, false) as CoinType))\n              .filter(Boolean)\n          )\n        ]\n\n        const tokenMap = await getTokenListInfo(coinTypeList)\n\n        const dlmmPosRewardsData: Record<string, PosReward[]> = Object.fromEntries(\n          Object.values(res.rewardData).map((item: any) => {\n            const rewardList: PosReward[] = item.rewards.map((rewarder: any) => {\n              const rewardCoinType = fixCoinType(rewarder.coin_type, false) as CoinType\n              const token = tokenMap?.get(rewardCoinType) as Token\n              return {\n                ...rewarder,\n                display_amount_owed: bnToAmount(rewarder.reward_owned.toString(), token?.decimals || 0),\n                amount_owed: rewarder.reward_owned.toString(),\n                token,\n                coin_address: rewardCoinType\n              }\n            })\n            return [item.position_id, rewardList]\n          })\n        )\n        console.log('🚀 ~ getDlmmPosFeeAndReward ~ dlmmPosRewardsData:', dlmmPosRewardsData)\n        setDlmmPosRewardsData(dlmmPosRewardsData)\n      }\n    } catch (error) {\n      console.log('🚀 ~ getDlmmPosFeeAndReward ~ error:', error)\n    } finally {\n      setDlmmPosFeeAndRewardsLoading(false)\n    }\n  }\n\n  return { getDlmmPosFeeAndReward }\n}\n","import useDlmmPositionStore from '@/store/dlmm-position'\nimport { DlmmPoolData, DlmmPosBaseInfo, DlmmPosLiquidity } from '@/types/dlmm'\nimport { calcCoinProportion } from '@/utils/pool'\nimport { useGetTokens } from '@cetus/hooks'\nimport { useSdk } from '@cetus/sdk-factory'\nimport { bnToAmount } from '@cetus/utils'\nimport { parseLiquidityShares } from '@cetusprotocol/dlmm-sdk'\nimport { uniqBy } from 'lodash-es'\n\nexport default function useGetDlmmPosLiquiditys() {\n  const { setPosLiquidityDataLoading, setDlmmPosLiquidityData } = useDlmmPositionStore()\n  const dlmmSdk = useSdk('dlmm')\n  const { getToken } = useGetTokens()\n\n  const getDlmmPosLiquidityData = async (positionBaseList: DlmmPosBaseInfo[], posPoolsOriginalData: Record<string, DlmmPoolData>) => {\n    setPosLiquidityDataLoading(true)\n    const posLiquidityData: Record<string, DlmmPosLiquidity> = {}\n    console.log(posLiquidityData, posPoolsOriginalData, positionBaseList, 'test posLiquidityData')\n    try {\n      const binInfoList = await dlmmSdk?.Pool?.getBinInfoList(\n        uniqBy(positionBaseList, 'dlmmPool')?.map(item => {\n          const poolInfo = posPoolsOriginalData?.[item.dlmmPool]\n          return {\n            bin_manager_handle: poolInfo.bin_manager.bin_manager_handle,\n            bin_id: poolInfo.active_id,\n            bin_step: poolInfo.bin_step\n          }\n        })\n      )\n      console.log(binInfoList, 'binInfoList')\n      for (let i = 0; i < positionBaseList.length; i++) {\n        const position = positionBaseList[i]\n        const poolInfo = posPoolsOriginalData?.[position.dlmmPool]\n        console.log('🚀🚀🚀 ~ useGetDlmmPosLiquiditys.ts:22 ~ getDlmmPosLiquidityData ~ poolInfo:', binInfoList, poolInfo)\n\n        const active_bin = binInfoList?.find(\n          item => item?.bin_id === poolInfo?.active_id && item?.bin_manager_handle === poolInfo?.bin_manager?.bin_manager_handle\n        )\n        console.log('🚀🚀🚀 ~ useGetDlmmPosLiquiditys.ts:24 ~ getDlmmPosLiquidityData ~ active_bin:', active_bin)\n        const amountInfo = parseLiquidityShares(position.liquidityShares, poolInfo.bin_step, position.lowerBinId, active_bin)\n        console.log('🚀🚀🚀 ~ useGetDlmmPosLiquiditys.ts:26 ~ getDlmmPosLiquidityData ~ amountInfo:', amountInfo)\n        let decimalsA = position.tokenA.decimals\n        let decimalsB = position.tokenB.decimals\n        if (decimalsA == undefined) {\n          decimalsA = (await getToken(position.tokenA.coin_type))?.decimals\n        }\n        if (decimalsB == undefined) {\n          decimalsB = (await getToken(position.tokenB.coin_type))?.decimals\n        }\n        const coinAmountA = amountInfo.amount_a.toString()\n        const coinAmountB = amountInfo.amount_b.toString()\n        const amountA = bnToAmount(coinAmountA, decimalsA || 0)\n        const amountB = bnToAmount(coinAmountB, decimalsB || 0)\n        const currentPrice = poolInfo.currentPrice\n        const { percentA, percentB } = calcCoinProportion(amountA, amountB, currentPrice, false)\n\n        posLiquidityData[position.id] = {\n          coinAmountA,\n          coinAmountB,\n          displayCoinAmountA: !position.isReverse ? amountA : amountB,\n          displayCoinAmountB: !position.isReverse ? amountB : amountA,\n          displayPercentA: !position.isReverse ? percentA : percentB,\n          displayPercentB: !position.isReverse ? percentB : percentA,\n          binInfos: amountInfo\n        }\n      }\n      console.log(posLiquidityData, 'test posLiquidityData')\n\n      setDlmmPosLiquidityData(posLiquidityData)\n      setPosLiquidityDataLoading(false)\n    } catch (error) {\n      console.log(error, 'test posLiquidityData')\n      setPosLiquidityDataLoading(false)\n    }\n  }\n  return { getDlmmPosLiquidityData }\n}\n","import useDlmmPositionStore from '@/store/dlmm-position'\nimport { DlmmPoolData, DlmmPosBaseInfo, DlmmPosPoolsRelated } from '@/types/dlmm'\nimport { useSdk } from '@cetus/sdk-factory'\nimport { formatPrice } from '@cetus/utils'\nimport { d } from '@cetusprotocol/common-sdk'\nimport { BinAmount, BinUtils, FEE_PRECISION } from '@cetusprotocol/dlmm-sdk'\n\nexport default function useGetDlmmPosPool() {\n  const dlmmSdk = useSdk('dlmm')\n  const { setDlmmPosPoolOriginalData, setDlmmPosPoolsRelatedDataLoading, setDlmmPosPoolsRelatedData } = useDlmmPositionStore()\n  const getDlmmPosPoolsOriginalObj = async (posBaseList: DlmmPosBaseInfo[]): Promise<Record<string, DlmmPoolData>> => {\n    const pools = posBaseList?.map(item => item.dlmmPool)\n\n    const poolIds = [...new Set([...pools])]\n\n    let dlmmPosPoolsOriginalObj: Record<string, DlmmPoolData> = {}\n    console.log(new Date().getTime(), poolIds.length, 'getDlmmPosPoolsOriginalObj start')\n    if (poolIds && poolIds.length > 0) {\n      const posAllPools = await dlmmSdk!.Pool.getAssignPoolList(poolIds)\n\n      console.log(\n        posAllPools,\n        posAllPools,\n        JSON.stringify(\n          posAllPools?.map(item => ({\n            bin_manager_handle: item?.bin_manager?.bin_manager_handle,\n            bin_id: item?.active_id,\n            bin_step: item?.bin_step\n          }))\n        ),\n        'posAllPools'\n      )\n      const binInfoList = await dlmmSdk!.Pool.getBinInfoList(\n        posAllPools?.map(item => ({\n          bin_manager_handle: item?.bin_manager?.bin_manager_handle,\n          bin_id: item?.active_id,\n          bin_step: item?.bin_step\n        }))\n      )\n      console.log(binInfoList, 'binInfoList')\n      const activeBinObj: Record<string, BinAmount> = {}\n      for (let i = 0; i < posAllPools.length; i++) {\n        const { pool_type, bin_step, active_id, bin_manager } = posAllPools[i]\n        const active_bin = binInfoList?.find(item => item?.bin_id === active_id && item?.bin_manager_handle === bin_manager?.bin_manager_handle)\n        activeBinObj[pool_type] = active_bin as BinAmount\n      }\n      console.log('🚀🚀🚀 ~ getPosPoolsOriginalObj ~ posAllPools:', posAllPools)\n      dlmmPosPoolsOriginalObj = Object.fromEntries(\n        posAllPools?.map(item => {\n          const info: DlmmPosBaseInfo = posBaseList.find(pos => pos.dlmmPool === item?.id)!\n          const decimalsA = info.tokenA.decimals\n          const decimalsB = info.tokenB.decimals\n          const binStep = item.bin_step\n          const currentPrice = BinUtils.getPriceFromBinId(item?.active_id ?? 0, binStep, decimalsA, decimalsB)\n          const currentPriceReverse = d(1).div(currentPrice).toString()\n          const active_bin = activeBinObj[item.pool_type]\n          return [\n            item?.id,\n            {\n              ...item,\n              currentPrice,\n              currentPriceReverse,\n              coinAmountA: String(item.balance_a),\n              coinAmountB: String(item.balance_b),\n              coinTypeA: item.coin_type_a,\n              coinTypeB: item.coin_type_b,\n              poolAddress: item.id,\n              poolType: item.pool_type,\n              binStep,\n              fee_protocol_coin_a: String(item.protocol_fee_a),\n              fee_protocol_coin_b: String(item.protocol_fee_b),\n              fee_rate: String(item.base_fee_rate),\n              active_bin\n            }\n          ]\n        })\n      )\n    }\n    console.log(new Date().getTime(), poolIds.length, 'getDlmmPosPoolsOriginalObj end')\n    // console.log('🚀🚀🚀 ~ useGetDlmmPosPool.ts:54 ~ getPosPoolsOriginalObj ~ dlmmPosPoolsOriginalObj:', JSON.stringify(dlmmPosPoolsOriginalObj))\n    setDlmmPosPoolOriginalData(dlmmPosPoolsOriginalObj)\n    return dlmmPosPoolsOriginalObj\n  }\n\n  // 仓位中和池子信息相关联的数据\n  const getDlmmPosPoolsRelatedData = (posBaseList: DlmmPosBaseInfo[], posPoolOriginalObjs: Record<string, DlmmPool>) => {\n    console.log('🚀🚀🚀 ~ useGetDlmmPosPool.ts:58 ~ getPosPoolsRelatedData ~ posBaseList:', posBaseList)\n    setDlmmPosPoolsRelatedDataLoading(true)\n\n    const posPoolsRelatedData: Record<string, DlmmPosPoolsRelated> = {}\n    const fullRangePosBaseList: any = []\n\n    posBaseList.forEach((item: any) => {\n      try {\n        const poolInfo = posPoolOriginalObjs[item.dlmmPool]\n        const decimalsA = item.tokenA.decimals\n        const decimalsB = item.tokenB.decimals\n        const binStep = poolInfo.bin_step\n        const currentPrice = BinUtils.getPriceFromBinId(poolInfo?.active_id ?? 0, binStep, decimalsA, decimalsB)\n        const currentPriceReverse = d(1).div(currentPrice).toString()\n        let minPrice = '0'\n        let maxPrice = '0'\n        minPrice = BinUtils.getPriceFromBinId(item.lowerBinId, binStep, decimalsA, decimalsB)\n        maxPrice = BinUtils.getPriceFromBinId(item.upperBinId, binStep, decimalsA, decimalsB)\n        const minPriceResever = d(1).div(minPrice).toString()\n        const maxPriceResever = d(1).div(maxPrice).toString()\n        const isReverse = item.isReverse\n        let currentStatus = ''\n        if (poolInfo?.is_pause) {\n          currentStatus = 'Closed'\n        } else if (Number(poolInfo?.active_id) >= Number(item.lowerBinId) && Number(poolInfo?.active_id) <= Number(item.upperBinId)) {\n          currentStatus = 'Active'\n        } else if (Number(poolInfo?.active_id) > Number(item.upperBinId)) {\n          currentStatus = 'Inactive'\n        } else if (Number(poolInfo?.active_id) < Number(item.lowerBinId)) {\n          currentStatus = 'Inactive'\n        }\n        console.log('🚀🚀🚀 ~ useGetDlmmPosPool.ts:95 ~ posBaseList.forEach ~ poolInfo:', {\n          poolInfo,\n          currentPrice,\n          minPrice\n        })\n        posPoolsRelatedData[item.id] = {\n          currentPrice: !poolInfo ? '' : formatPrice(!isReverse ? currentPrice : currentPriceReverse).toString(),\n          currentPriceReverse: !poolInfo ? '' : formatPrice(!isReverse ? currentPriceReverse : currentPrice).toString(),\n          minPrice: formatPrice(!isReverse ? minPrice : maxPriceResever).toString(),\n          minPriceResever: formatPrice(!isReverse ? maxPriceResever : minPrice).toString(),\n          maxPrice: formatPrice(!isReverse ? maxPrice : minPriceResever).toString(),\n          maxPriceResever: formatPrice(!isReverse ? minPriceResever : maxPrice).toString(),\n          minPriceOrigin: !poolInfo ? '' : !isReverse ? minPrice : maxPriceResever, //用于Leverage值的计算\n          maxPriceOrigin: !poolInfo ? '' : !isReverse ? maxPrice : minPriceResever, //用于Leverage值的计算\n          fee: poolInfo?.base_fee_rate,\n          displayFee: d(poolInfo?.base_fee_rate).div(FEE_PRECISION).mul(100).toString(),\n          binStep,\n          currentTickIndex: poolInfo?.active_id,\n          currentStatus,\n          minPriceBinId: item.lowerBinId,\n          maxPriceBinId: item.upperBinId\n        }\n      } catch (error) {\n        console.error('🚀🚀🚀 ~ useGetDlmmPosPool.ts:75 ~ posBaseList.forEach ~ error:', error)\n      }\n    })\n\n    setDlmmPosPoolsRelatedData(posPoolsRelatedData)\n  }\n  return { getDlmmPosPoolsOriginalObj, getDlmmPosPoolsRelatedData }\n}\n","import usePositionStore from '@/store/position'\nimport { PosBaseInfo, PosReward } from '@/types'\nimport { useGetToken } from '@cetus/hooks/src/useToken'\nimport { useSdk } from '@cetus/sdk-factory'\nimport { bnToAmount } from '@cetus/utils'\n\nexport default function useGetFarmsPosRewards() {\n  const farmsSdk = useSdk('farms')\n  const { getTokenListInfo } = useGetToken()\n  const { setFarmsPosRewardsData, setFarmsPosRewardsDataLoading } = usePositionStore()\n\n  const getFarmsRewardsData = async (positionBaseList: PosBaseInfo[]) => {\n    console.log('🚀 ~ getFarmsRewardsData ~ positionBaseList:', positionBaseList)\n    setFarmsPosRewardsDataLoading(true)\n    const batchFetchPosRewardersAmountParams = positionBaseList\n      ?.filter((item: any) => item.posType === 'farms')\n      .map((item: any) => {\n        return {\n          pool_id: item.farmsPool,\n          position_nft_id: item.id\n        }\n      })\n    try {\n      let posFarmsRewardsObj: Record<string, PosReward[]> = {}\n      if (batchFetchPosRewardersAmountParams && batchFetchPosRewardersAmountParams.length > 0) {\n        const res = await farmsSdk!.Farms.calculateFarmingRewards(batchFetchPosRewardersAmountParams)\n        console.log('🚀 ~ getFarmsRewardsData ~ res:', res, farmsSdk!.getSenderAddress(), batchFetchPosRewardersAmountParams)\n        if (res) {\n          const resArr = Object.entries(res).map(([id, value]) => ({\n            id,\n            rewarderAmountOwed: value\n          }))\n\n          console.log('🚀 ~ file: useGetFarmsPosRewards.ts:27 ~ resArr ~ resArr:', resArr)\n          const coinTypeList = resArr\n            .map((item: any) => {\n              return item.rewarderAmountOwed.map((rewarder: any) => rewarder.rewarder_type)\n            })\n            .flat()\n          const tokenMap = await getTokenListInfo(coinTypeList)\n          posFarmsRewardsObj = Object.fromEntries(\n            resArr.map((item: any, key) => {\n              for (const rewarder of item.rewarderAmountOwed) {\n                const { rewarder_amount, rewarder_type } = rewarder\n                const token = tokenMap?.get(rewarder_type)\n                rewarder.display_amount_owed = bnToAmount(rewarder_amount.toString(), token?.decimals || 0)\n                rewarder.amount_owed = rewarder_amount.toString()\n                rewarder.token = token\n              }\n              return [item.id, item.rewarderAmountOwed]\n            })\n          )\n        }\n      }\n\n      console.log('getFarmsRewardsData ~ posFarmsRewardsObj:', posFarmsRewardsObj)\n      setFarmsPosRewardsData(posFarmsRewardsObj)\n    } catch (error) {\n      console.log('🚀 ~ getPosFarmsRewards ~ error:', error)\n    }\n  }\n\n  const formatFarmsRewardsData = async (res: any) => {\n    let posFarmsRewardsObj: Record<string, PosReward[]> = {}\n    const resArr = Object.entries(res).map(([id, value]) => ({\n      id,\n      rewarderAmountOwed: value\n    }))\n\n    console.log('🚀 ~ file: useGetFarmsPosRewards.ts:27 ~ resArr ~ resArr:', resArr)\n    const coinTypeList = resArr\n      .map((item: any) => {\n        return item.rewarderAmountOwed.map((rewarder: any) => rewarder.rewarder_type)\n      })\n      .flat()\n    const tokenMap = await getTokenListInfo(coinTypeList)\n    posFarmsRewardsObj = Object.fromEntries(\n      resArr.map((item: any, key) => {\n        for (const rewarder of item.rewarderAmountOwed) {\n          const { rewarder_amount, rewarder_type } = rewarder\n          const token = tokenMap?.get(rewarder_type)\n          rewarder.display_amount_owed = bnToAmount(rewarder_amount.toString(), token?.decimals || 0)\n          rewarder.amount_owed = rewarder_amount.toString()\n          rewarder.token = token\n        }\n        return [item.id, item.rewarderAmountOwed]\n      })\n    )\n    return posFarmsRewardsObj\n  }\n\n  return {\n    getFarmsRewardsData,\n    formatFarmsRewardsData\n  }\n}\n","import usePositionStore from '@/store/position'\nimport { PosBaseInfo } from '@/types'\nimport useFavoritePool from '../pool/useFavoritePool'\n\nexport default function useGetPosApiPoolData() {\n  const { setPosApiPoolData } = usePositionStore()\n  const { getFavoritePoolList } = useFavoritePool()\n\n  const getPosApiPoolData = async (positionBaseList: PosBaseInfo[]) => {\n    try {\n      console.log('🚀 ~ getPosApiPoolData ~ positionBaseList:', positionBaseList)\n      const queryPool = Array.from(new Set(positionBaseList?.map(item => item.clmmPool)))\n      const params = {\n        needLocalData: false,\n        pools: queryPool,\n        display_all_pools: true,\n        no_incentives: true,\n        has_mining: true,\n        has_farming: true\n      }\n      console.log('🚀 ~ getPosApiPoolData ~ params:', params)\n\n      const res = (await getFavoritePoolList(params)) || []\n      console.log('🚀 ~ getPosApiPoolData ~ res:', res)\n      const obj = res?.list.reduce((acc, item) => {\n        acc[item.poolAddress] = item // 假设你想要将整个 item 对象作为值\n        return acc\n      }, {})\n      setPosApiPoolData(obj)\n    } catch (error) {\n      console.log('🚀 ~ getPosApiPoolData ~ error:', error)\n    }\n  }\n\n  return {\n    getPosApiPoolData\n  }\n}\n","import usePositionStore from '@/store/position'\nimport { PosBaseInfo, PosFee } from '@/types'\nimport { useSdk } from '@cetus/sdk-factory'\nimport { bnToAmount } from '@cetus/utils'\nimport { CollectFeesQuote } from '@cetusprotocol/sui-clmm-sdk'\n\nexport default function useGetPosfees() {\n  const clmmSdk = useSdk('clmm')\n  const { setPosFeeData, setPosFeeDataLoading } = usePositionStore()\n\n  const getPosFeeData = async (positionBaseList: PosBaseInfo[]) => {\n    console.log('🚀 ~ file: useGetPosfees.ts:11 ~ getPosFeeData ~ positionBaseList:', positionBaseList)\n    setPosFeeDataLoading(true)\n    const feeParams = positionBaseList?.map((posInfo: any) => {\n      return {\n        pool_id: posInfo.clmmPool,\n        position_id: posInfo.posId,\n        coin_type_a: posInfo.coinTypeA,\n        coin_type_b: posInfo.coinTypeB\n      }\n    })\n\n    try {\n      console.log('🚀 ~ file: useGetPosfees.ts:11 ~ feeParams ~ feeParams:', feeParams)\n\n      const res = (await clmmSdk!.Position.fetchPosFeeAmount(feeParams)) || []\n      console.log('🚀 ~ file: useGetPosfees.ts:11 ~ getPosFeeData ~ res:', res)\n\n      const posFeesData: Record<string, PosFee> = await formatPosFeeData(res, positionBaseList)\n      console.log('getPosFeeData ~ posFeesData:', posFeesData)\n\n      setPosFeeData(posFeesData)\n    } catch (error) {\n      console.log('🚀 ~ file: useGetPosfees.ts:54 ~ getPosFeeData ~ error:', error)\n      setPosFeeDataLoading(false)\n    } finally {\n      setPosFeeDataLoading(false)\n    }\n  }\n\n  const formatPosFeeData = async (res: CollectFeesQuote[], positionBaseList: PosBaseInfo[]) => {\n    const posFeesData: Record<string, PosFee> = Object.fromEntries(\n      res.map((item, index) => {\n        const pos = positionBaseList[index]\n        const displayFeeOwedA = bnToAmount(\n          !pos.isReverse ? item.fee_owned_a.toString() : item.fee_owned_b.toString(),\n          pos?.displayTokenA?.decimals || 0\n        )\n        const displayFeeOwedB = bnToAmount(\n          !pos.isReverse ? item.fee_owned_b.toString() : item.fee_owned_a.toString(),\n          pos?.displayTokenB?.decimals || 0\n        )\n        return [\n          item.position_id,\n          {\n            feeOwedA: item.fee_owned_a.toString(),\n            feeOwedB: item.fee_owned_b.toString(),\n            displayFeeOwedA,\n            displayFeeOwedB\n          }\n        ]\n      })\n    )\n    return posFeesData\n  }\n\n  return {\n    getPosFeeData,\n    formatPosFeeData\n  }\n}\n","import usePositionStore from '@/store/position'\nimport { PoolContractInfo, PosBaseInfo, PosLiquidity } from '@/types'\nimport { calcCoinProportion, checkFullRange } from '@/utils/pool'\nimport { useGetToken } from '@cetus/hooks/src/useToken'\nimport { CoinType, Token } from '@cetus/types'\nimport { bnToAmount, d } from '@cetus/utils'\nimport { ClmmPoolUtil, TickMath } from '@cetusprotocol/common-sdk'\nimport BN from 'bn.js'\n\nexport default function useGetPosLiquiditys() {\n  const { setPosLiquidityData, setPosLiquidityDataLoading } = usePositionStore()\n  const { getTokenInfo } = useGetToken()\n\n  const getCoinAmountFromLiquidity = ({\n    tokenA,\n    tokenB,\n    liquidity,\n    currentSqrtPrice,\n    lowerTick,\n    upperTick,\n    roundUp\n  }: {\n    tokenA: Token\n    tokenB: Token\n    liquidity: string\n    currentSqrtPrice: string\n    lowerTick: number\n    upperTick: number\n    roundUp: boolean\n  }) => {\n    const lowerSqrtPrice = TickMath.tickIndexToSqrtPriceX64(lowerTick)\n    const upperSqrtPrice = TickMath.tickIndexToSqrtPriceX64(upperTick)\n    const amountInfo = ClmmPoolUtil.getCoinAmountFromLiquidity(new BN(liquidity), new BN(currentSqrtPrice), lowerSqrtPrice, upperSqrtPrice, roundUp)\n\n    const coinAmountA = amountInfo.coin_amount_a.toString()\n    const coinAmountB = amountInfo.coin_amount_b.toString()\n\n    const decimalsA = tokenA.decimals\n    const decimalsB = tokenB.decimals\n    const amountA = bnToAmount(coinAmountA, decimalsA || 0)\n    const amountB = bnToAmount(coinAmountB, decimalsB || 0)\n\n    return {\n      coinAmountA,\n      coinAmountB,\n      amountA,\n      amountB\n    }\n  }\n\n  const getPosLiquidityData = async (positionBaseList: PosBaseInfo[], posPoolsOriginalData: Record<string, PoolContractInfo>) => {\n    setPosLiquidityDataLoading(true)\n    const posLiquidityData: Record<string, PosLiquidity> = {}\n    console.log(posLiquidityData, 'clmm test posLiquidityData')\n    for (let i = 0; i < positionBaseList.length; i++) {\n      const position = positionBaseList[i]\n      const poolInfo = posPoolsOriginalData?.[position.clmmPool]\n\n      const { coinAmountA, coinAmountB, amountA, amountB } = getCoinAmountFromLiquidity({\n        tokenA: position.tokenA,\n        tokenB: position.tokenB,\n        liquidity: position.liquidity,\n        currentSqrtPrice: poolInfo?.current_sqrt_price,\n        lowerTick: position.lowerTick,\n        upperTick: position.upperTick,\n        // TODO 防止数量过小时展示为0 待定方案\n        roundUp: true\n        // roundUp: false\n      })\n\n      const isFullRange = checkFullRange(position.lowerTick, position.upperTick)\n\n      let decimalsA = position.tokenA.decimals\n      let decimalsB = position.tokenB.decimals\n      if (decimalsA == undefined) {\n        decimalsA = (await getTokenInfo(position.tokenA.coin_type as CoinType))?.decimals\n      }\n      if (decimalsB == undefined) {\n        decimalsB = (await getTokenInfo(position.tokenB.coin_type as CoinType))?.decimals\n      }\n      const currentPrice = TickMath.sqrtPriceX64ToPrice(new BN(poolInfo?.current_sqrt_price), decimalsA, decimalsB).toString()\n      const { percentA, percentB } = calcCoinProportion(amountA, amountB, currentPrice, isFullRange)\n\n      const dAmountA = bnToAmount(coinAmountA, decimalsA)\n      const dAmountB = bnToAmount(coinAmountB, decimalsB)\n      const onlyAmountA = d(dAmountB).div(currentPrice).add(dAmountA).toString()\n\n      const onlyAmountB = d(dAmountA).mul(currentPrice).add(dAmountB).toString()\n\n      posLiquidityData[position.posId] = {\n        coinAmountA,\n        coinAmountB,\n        displayCoinAmountA: !position.isReverse ? amountA : amountB,\n        displayCoinAmountB: !position.isReverse ? amountB : amountA,\n        displayPercentA: !position.isReverse ? percentA : percentB,\n        displayPercentB: !position.isReverse ? percentB : percentA,\n        onlyAmountA,\n        onlyAmountB\n      }\n    }\n    console.log(posLiquidityData, 'clmm test posLiquidityData')\n\n    setPosLiquidityData(posLiquidityData)\n    setPosLiquidityDataLoading(false)\n  }\n\n  return {\n    getPosLiquidityData,\n    getCoinAmountFromLiquidity\n  }\n}\n","/**\n * 获取仓位相关的池子信息s\n */\n\nimport { CorrectedPool, FrozenPools } from '@/constant/pool'\nimport usePositionStore from '@/store/position'\nimport { PoolContractInfo, PosPoolsRelated } from '@/types'\nimport { PosBaseInfo } from '@/types/position'\nimport { checkIsMinOrMaxIndex } from '@/utils/pool'\nimport { useSdk } from '@cetus/sdk-factory'\nimport { d, formatNumberWithDown } from '@cetus/utils'\nimport { TickMath } from '@cetusprotocol/common-sdk'\n\nexport default function useGetPosPools() {\n  const clmmSdk = useSdk('clmm')\n  const { setPosPoolOriginalData, setPosPoolsRelatedData, setPosPoolsRelatedDataLoading, setFullRangePosBaseList, setFullRangePosBaseListLoading } =\n    usePositionStore()\n\n  const getPosPoolsOriginalObj = async (posBaseList: PosBaseInfo[]): Promise<Record<string, PoolContractInfo>> => {\n    const pools = posBaseList?.map(item => item?.clmmPool)\n\n    const poolIds = [...new Set([...pools])]\n    console.log('🚀🚀🚀 ~ useGetPosPools.ts:24 ~ getPosPoolsOriginalObj ~ poolIds:', poolIds)\n\n    let posPoolsOriginalObj: Record<string, PoolContractInfo> = {}\n\n    if (poolIds && poolIds.length > 0) {\n      const posAllPools = await clmmSdk!.Pool.getAssignPools(poolIds)\n      console.log('🚀🚀🚀 ~ getPosPoolsOriginalObj ~ posAllPools:', posAllPools)\n      posPoolsOriginalObj = Object.fromEntries(\n        posAllPools?.map(item => {\n          const info: PosBaseInfo = posBaseList.find(pos => pos.clmmPool === item?.id)!\n          const decimalsA = info.tokenA.decimals\n          const decimalsB = info.tokenB.decimals\n          // const currentPrice = TickMath.sqrtPriceX64ToPrice(new BN(item?.current_sqrt_price), decimalsA, decimalsB).toString()\n          const currentPrice = TickMath.tickIndexToPrice(item?.current_tick_index, decimalsA, decimalsB).toString()\n          const currentPriceReverse = d(1).div(currentPrice).toString()\n\n          return [\n            item?.id,\n            {\n              ...item,\n              currentPrice,\n              currentPriceReverse,\n              coinAmountA: String(item.coin_amount_a),\n              coinAmountB: String(item.coin_amount_b),\n              coinTypeA: item.coin_type_a,\n              coinTypeB: item.coin_type_b,\n              poolAddress: item.id,\n              poolType: item.pool_type,\n              tickSpacing: Number(item.tick_spacing),\n              current_sqrt_price: String(item.current_sqrt_price),\n              fee_growth_global_a: String(item.fee_growth_global_a),\n              fee_growth_global_b: String(item.fee_growth_global_b),\n              fee_protocol_coin_a: String(item.fee_protocol_coin_a),\n              fee_protocol_coin_b: String(item.fee_protocol_coin_b),\n              fee_rate: CorrectedPool?.[item!.id] || String(item.fee_rate),\n              liquidity: String(item.liquidity),\n              rewarder_infos: item.rewarder_infos.map(r => {\n                return {\n                  coinAddress: r.coin_type,\n                  emissionsEveryDay: r.emissions_per_second,\n                  emissions_per_second: String(r.emissions_per_second),\n                  growth_global: String(r.growth_global)\n                }\n              }),\n              isFrozen: FrozenPools.includes(item.id)\n            }\n          ]\n        })\n      )\n    }\n\n    setPosPoolOriginalData(posPoolsOriginalObj)\n    return posPoolsOriginalObj\n  }\n\n  // 仓位中和池子信息相关联的数据\n  const getPosPoolsRelatedData = (posBaseList: PosBaseInfo[], posPoolOriginalObjs: Record<string, PoolContractInfo>) => {\n    setPosPoolsRelatedDataLoading(true)\n    setFullRangePosBaseListLoading(true)\n\n    const posPoolsRelatedData: Record<string, PosPoolsRelated> = {}\n    const fullRangePosBaseList: any = []\n\n    posBaseList.forEach((item: any) => {\n      const poolInfo = posPoolOriginalObjs[item?.clmmPool]\n      // console.log('🚀 ~ getPosPoolsRelatedData ~ poolInfo:', poolInfo)\n      // current_tick_index\n      const decimalsA = item?.tokenA?.decimals\n      const decimalsB = item?.tokenB?.decimals\n      // const currentPrice = TickMath.sqrtPriceX64ToPrice(new BN(poolInfo?.current_sqrt_price), decimalsA, decimalsB).toString()\n      const currentPrice = TickMath.tickIndexToPrice(poolInfo?.current_tick_index, decimalsA, decimalsB).toString()\n      console.log('🚀 ~ getPosPoolsRelatedData ~ currentPrice:', currentPrice)\n      const currentPriceReverse = d(1).div(currentPrice).toString()\n      console.log('🚀 ~ getPosPoolsRelatedData ~ currentPriceReverse:', currentPriceReverse)\n\n      let minPrice = '0'\n      let maxPrice = '0'\n      if (checkIsMinOrMaxIndex(item?.lowerTick, 'min')) {\n        minPrice = '0'\n      } else {\n        minPrice = TickMath.tickIndexToPrice(Number(item?.lowerTick), decimalsA, decimalsB).toString()\n      }\n\n      if (checkIsMinOrMaxIndex(item?.upperTick, 'max')) {\n        maxPrice = '∞'\n      } else {\n        maxPrice = TickMath.tickIndexToPrice(Number(item?.upperTick), decimalsA, decimalsB).toString()\n      }\n\n      let minPriceResever, maxPriceResever\n      if (maxPrice !== '∞') {\n        maxPriceResever = d(1).div(d(maxPrice)).toString()\n      } else {\n        maxPriceResever = '0'\n      }\n      if (minPrice !== '0') {\n        minPriceResever = d(1).div(d(minPrice)).toString()\n      } else {\n        minPriceResever = '∞'\n      }\n\n      // console.log('🚀 ~ posBaseList.forEach 120 ~ currentPrice:', currentPrice)\n      // console.log('🚀 ~ posBaseList.forEach 120 ~ minPrice:', minPrice)\n      // console.log('🚀 ~ posBaseList.forEach 120~ maxPrice:', maxPrice)\n      // console.log('🚀 ~ posBaseList.forEach 120~ poolInfo?.is_pause:', poolInfo?.is_pause)\n\n      let currentStatus = ''\n\n      // toDo: 后面需要补closed状态UI\n      // if (poolInfo?.is_pause) {\n      //   currentStatus = 'Closed'\n      // } else\n      if (Number(currentPrice) >= Number(minPrice) && (maxPrice === '∞' || Number(currentPrice) <= Number(maxPrice))) {\n        currentStatus = 'Active'\n      } else if (Number(currentPrice) > Number(maxPrice)) {\n        currentStatus = 'Inactive'\n      } else if (Number(currentPrice) < Number(minPrice)) {\n        currentStatus = 'Inactive'\n      }\n\n      if (((minPrice === '0' && maxPrice === '∞') || (minPriceResever === '0' && maxPriceResever === '∞')) && item.posType === 'clmm') {\n        fullRangePosBaseList.push(item)\n      }\n\n      const isReverse = item?.isReverse\n\n      posPoolsRelatedData[item.posId] = {\n        currentPrice: !poolInfo ? '' : formatNumberWithDown(!isReverse ? currentPrice : currentPriceReverse).toString(),\n        currentPriceReverse: !poolInfo ? '' : formatNumberWithDown(!isReverse ? currentPriceReverse : currentPrice).toString(),\n        minPrice: formatNumberWithDown(!isReverse ? minPrice : maxPriceResever).toString(),\n        minPriceResever: formatNumberWithDown(!isReverse ? maxPriceResever : minPrice).toString(),\n        maxPrice: formatNumberWithDown(!isReverse ? maxPrice : minPriceResever).toString(),\n        maxPriceResever: formatNumberWithDown(!isReverse ? minPriceResever : maxPrice).toString(),\n        minPriceOrigin: !poolInfo ? '' : !isReverse ? minPrice : maxPriceResever, //用于Leverage值的计算\n        maxPriceOrigin: !poolInfo ? '' : !isReverse ? maxPrice : minPriceResever, //用于Leverage值的计算\n        minPriceRaw: formatNumberWithDown(!isReverse ? minPrice : maxPriceResever, undefined, true).toString(),\n        maxPriceRaw: formatNumberWithDown(!isReverse ? maxPrice : minPriceResever, undefined, true).toString(),\n        currentPriceOrigin: !poolInfo ? '' : !isReverse ? currentPrice : currentPriceReverse, //用于Leverage值的计算\n        currentStatus: !poolInfo ? '' : currentStatus,\n        fee: poolInfo?.fee_rate,\n        displayFee: d(poolInfo?.fee_rate).div(Math.pow(10, 6)).mul(100).toString(),\n        tickSpacing: poolInfo?.tickSpacing,\n        currentTickIndex: poolInfo?.current_tick_index,\n        curSqrtPrice: poolInfo?.current_sqrt_price,\n        liquidity: poolInfo?.liquidity,\n        lowerTick: item.lowerTick,\n        upperTick: item.upperTick\n      }\n    })\n\n    setPosPoolsRelatedData(posPoolsRelatedData)\n    setFullRangePosBaseList(fullRangePosBaseList)\n  }\n\n  return {\n    getPosPoolsOriginalObj,\n    getPosPoolsRelatedData\n  }\n}\n","import usePositionStore from '@/store/position'\nimport { PoolContractInfo, PosBaseInfo, PosReward } from '@/types'\nimport { useGetToken } from '@cetus/hooks/src/useToken'\nimport { useSdk } from '@cetus/sdk-factory'\nimport { CoinType, Token } from '@cetus/types'\nimport { bnToAmount } from '@cetus/utils'\n\nexport default function useGetPosRewards() {\n  const clmmSdk = useSdk('clmm')\n  const { getTokenListInfo } = useGetToken()\n  const { setPosRewardsData, setPosRewardsDataLoading } = usePositionStore()\n\n  const getPosRewardsData = async (positionBaseList: PosBaseInfo[], posPoolsOriginalData: Record<string, PoolContractInfo>) => {\n    console.log('🚀 ~ getPosRewardsData ~ positionBaseList:', positionBaseList)\n    setPosRewardsDataLoading(true)\n    const batchFetchPosRewardersAmountParams: any = positionBaseList\n      ?.filter((item: PosBaseInfo) => item.posType !== 'farms')\n      .map((item: PosBaseInfo) => {\n        const poolInfo = posPoolsOriginalData[item.clmmPool]\n        return {\n          pool_id: item.clmmPool,\n          position_id: item.posId,\n          coin_type_a: item.coinTypeA,\n          coin_type_b: item.coinTypeB,\n          rewarder_types: poolInfo?.rewarder_infos?.map(item => item.coinAddress)\n        }\n      })\n\n    console.log('🚀 ~ file: useGetPosRewards.ts:15 ~ getPosRewardsData ~ batchFetchPosRewardersAmountParams:', batchFetchPosRewardersAmountParams)\n\n    let posRewardsData: Record<string, PosReward[]> = {}\n\n    if (batchFetchPosRewardersAmountParams && batchFetchPosRewardersAmountParams.length > 0) {\n      try {\n        const res = await clmmSdk!.Rewarder.fetchPosRewardersAmount(batchFetchPosRewardersAmountParams)\n        console.log('🚀🚀🚀 ~ useGetPosRewards.ts:36 ~ getPosRewardsData ~ res:', res)\n        const coinTypeList = res\n          ?.map(item => {\n            return item.rewarder_amounts.map(item => {\n              return item.coin_type as CoinType\n            })\n          })\n          .flat()\n        const tokenMap = await getTokenListInfo(coinTypeList)\n\n        let newRewarderAmount: PosReward[]\n        posRewardsData = Object.fromEntries(\n          res.map((item, key) => {\n            newRewarderAmount = []\n            for (const rewarder of item.rewarder_amounts) {\n              const { amount_owned, coin_type } = rewarder\n              const token = tokenMap?.get(coin_type as CoinType) as Token\n              newRewarderAmount.push({\n                ...rewarder,\n                display_amount_owed: bnToAmount(amount_owned.toString(), token?.decimals || 0),\n                amount_owed: amount_owned.toString(),\n                token,\n                coin_address: coin_type\n              })\n            }\n            return [item.position_id, newRewarderAmount]\n          })\n        )\n        console.log('getPosRewardsData ~ posRewardsData:', posRewardsData)\n      } catch (error) {\n        console.log('getPosRewardsData ~ error:', error)\n      }\n    }\n\n    setPosRewardsData(posRewardsData)\n    setPosRewardsDataLoading(false)\n  }\n\n  const formatPosRewardsData = async (res: any) => {\n    let posRewardsData: Record<string, PosReward[]> = {}\n\n    const coinTypeList = res\n      ?.map((item: any) => {\n        return item.rewarderAmountOwed.map((item: any) => {\n          return item.coin_address\n        })\n      })\n      .flat()\n    const tokenMap = await getTokenListInfo(coinTypeList)\n    posRewardsData = Object.fromEntries(\n      res.map((item: any) => {\n        for (const rewarder of item.rewarderAmountOwed) {\n          const { amount_owed, coin_address } = rewarder\n          const token = tokenMap?.get(coin_address)\n          rewarder.display_amount_owed = bnToAmount(amount_owed.toString(), token?.decimals || 0)\n          rewarder.amount_owed = amount_owed.toString()\n          rewarder.token = token\n        }\n        return [item.positionId, item.rewarderAmountOwed]\n      })\n    )\n\n    return posRewardsData\n  }\n\n  return {\n    formatPosRewardsData,\n    getPosRewardsData\n  }\n}\n","import { PosBaseInfo } from '@/types'\nimport envConfigs, { burnConfig, clmmConfig, dlmmConfig, farmsConfig } from '@cetus/types/src/config/envConfigs'\nimport { d, isAvailableObject } from '@cetus/utils'\nimport { TickMath } from '@cetusprotocol/common-sdk'\nimport { useMemo } from 'react'\n\nexport default function usePosHelper() {\n  const getClmmPosName = (posIndex: number, position_index: string | number) => {\n    if (position_index || position_index == 0) {\n      return `Cetus LP | Pool${position_index}-${posIndex}`\n    }\n    return undefined\n  }\n\n  const buildPositionType = useMemo(() => {\n    return `${clmmConfig.clmm_pool.package_id}::position::Position`\n  }, [envConfigs])\n\n  const buildDlmmPositionType = useMemo(() => {\n    return `${dlmmConfig.dlmm_pool.package_id}::position::Position`\n  }, [envConfigs])\n\n  const buildFarmsPositionType = useMemo(() => {\n    return `${farmsConfig.farms.package_id}::pool::WrappedPositionNFT`\n  }, [envConfigs])\n\n  const buildBurnPositionType = useMemo(() => {\n    return `${burnConfig.burn.package_id}::lp_burn::CetusLPBurnProof`\n  }, [envConfigs])\n\n  const getTokenALock = (currentPosBaseInfo: PosBaseInfo, currentSqrtPrice: any) => {\n    if (isAvailableObject(currentPosBaseInfo) && currentSqrtPrice) {\n      const { lowerTick, upperTick } = currentPosBaseInfo\n      if (currentSqrtPrice !== undefined && lowerTick !== undefined && upperTick !== undefined) {\n        const lowerSqrtPrice = TickMath.tickIndexToSqrtPriceX64(lowerTick).toString()\n        const upperSqrtPrice = TickMath.tickIndexToSqrtPriceX64(upperTick).toString()\n        if (d(currentSqrtPrice).gt(lowerSqrtPrice) && d(currentSqrtPrice).lt(upperSqrtPrice)) {\n          return false\n        } else if (d(currentSqrtPrice).gte(upperSqrtPrice)) {\n          return true\n        } else if (d(currentSqrtPrice).lte(lowerSqrtPrice)) {\n          return false\n        } else {\n          return true\n        }\n      }\n    }\n    return false\n  }\n\n  const getTokenBLock = (currentPosBaseInfo: PosBaseInfo, currentSqrtPrice: any) => {\n    if (isAvailableObject(currentPosBaseInfo) && currentSqrtPrice) {\n      const { lowerTick, upperTick } = currentPosBaseInfo\n\n      if (currentSqrtPrice !== undefined && lowerTick !== undefined && upperTick !== undefined) {\n        const lowerSqrtPrice = TickMath.tickIndexToSqrtPriceX64(lowerTick).toString()\n        const upperSqrtPrice = TickMath.tickIndexToSqrtPriceX64(upperTick).toString()\n\n        if (d(currentSqrtPrice).gt(lowerSqrtPrice) && d(currentSqrtPrice).lt(upperSqrtPrice)) {\n          return false\n        } else if (d(currentSqrtPrice).gte(upperSqrtPrice)) {\n          return false\n        } else if (d(currentSqrtPrice).lte(lowerSqrtPrice)) {\n          return true\n        } else {\n          return true\n        }\n      }\n    }\n    return false\n  }\n\n  const getPosIsActive = (currentPosBaseInfo: PosBaseInfo, currentSqrtPrice: any) => {\n    if (isAvailableObject(currentPosBaseInfo) && currentSqrtPrice) {\n      const tokenALock = getTokenALock(currentPosBaseInfo, currentSqrtPrice)\n      const tokenBLock = getTokenBLock(currentPosBaseInfo, currentSqrtPrice)\n      if (!tokenALock && !tokenBLock) {\n        return true\n      } else {\n        return false\n      }\n    }\n    return false\n  }\n\n  return {\n    getClmmPosName,\n    buildPositionType,\n    buildDlmmPositionType,\n    buildFarmsPositionType,\n    buildBurnPositionType,\n    getTokenALock,\n    getTokenBLock,\n    getPosIsActive\n  }\n}\n","import { PosBaseInfo } from '@/types'\nimport { DlmmPosBaseInfo } from '@/types/dlmm'\nimport { getPoolDirection } from '@/utils/pool'\nimport { useGetToken } from '@cetus/hooks/src/useToken'\nimport { BurnUtils } from '@cetusprotocol/burn-sdk'\nimport { d, extractStructTagFromType } from '@cetusprotocol/common-sdk'\nimport { parseDlmmPosition } from '@cetusprotocol/dlmm-sdk'\nimport { FarmsUtils } from '@cetusprotocol/farms-sdk'\nimport { buildPosition } from '@cetusprotocol/sui-clmm-sdk'\nimport usePosHelper from './usePosHelper'\n\nexport default function useWrapPosData() {\n  const { buildPositionType, buildFarmsPositionType, buildBurnPositionType, buildDlmmPositionType } = usePosHelper()\n  const { getTokenListInfo } = useGetToken()\n\n  const getPosTokenData = async (coinTypeA: string, coinTypeB: string): Promise<any> => {\n    const isReverse = !getPoolDirection(coinTypeA, coinTypeB)\n    const tokenMap = await getTokenListInfo([coinTypeA, coinTypeB])\n    const tokenA = tokenMap?.get(coinTypeA)\n    const tokenB = tokenMap?.get(coinTypeB)\n    const displayTokenA = !isReverse ? tokenA : tokenB\n    const displayTokenB = !isReverse ? tokenB : tokenA\n\n    return {\n      isReverse,\n      tokenA,\n      tokenB,\n      displayTokenA,\n      displayTokenB\n    }\n  }\n\n  // Clmm仓位包装\n  const wrapClmmPosBaseInfo = async (data: any): Promise<PosBaseInfo> => {\n    const pos = buildPosition(data)\n    const coinTypeA = extractStructTagFromType(pos.coin_type_a).full_address\n    const coinTypeB = extractStructTagFromType(pos.coin_type_b).full_address\n    const { isReverse, tokenA, tokenB, displayTokenA, displayTokenB } = await getPosTokenData(coinTypeA, coinTypeB)\n\n    const version = data?.data?.version || '0'\n\n    return {\n      clmmPool: pos.pool,\n      posId: pos.pos_object_id,\n      id: pos.pos_object_id,\n      liquidity: pos.liquidity,\n      index: pos.index,\n      lowerTick: pos.tick_lower_index,\n      upperTick: pos.tick_upper_index,\n      owner: pos.owner,\n      coinTypeA,\n      coinTypeB,\n      posType: 'clmm',\n      tokenName: '',\n      tokenA,\n      tokenB,\n      displayTokenA,\n      displayTokenB,\n      isReverse,\n      version\n    }\n  }\n\n  const wrapDlmmPosBaseInfo = async (data: any): Promise<DlmmPosBaseInfo> => {\n    console.log('🚀🚀🚀 ~ useWrapPosData.ts:66 ~ wrapDlmmPosBaseInfo ~ data:', data)\n    const pos: any = parseDlmmPosition(data)\n    const coinTypeA = extractStructTagFromType(pos.coin_type_a).full_address\n    const coinTypeB = extractStructTagFromType(pos.coin_type_b).full_address\n    const { isReverse, tokenA, tokenB, displayTokenA, displayTokenB } = await getPosTokenData(coinTypeA, coinTypeB)\n    const version = data?.data?.version || '0'\n    const info: DlmmPosBaseInfo = {\n      dlmmPool: pos.pool_id,\n      index: pos.index,\n      lowerBinId: pos.lower_bin_id,\n      upperBinId: pos.upper_bin_id,\n      id: pos.id,\n      coinTypeA,\n      coinTypeB,\n      posType: 'dlmm',\n      tokenName: pos.name.split(' | ')[1],\n      tokenA,\n      tokenB,\n      displayTokenA,\n      displayTokenB,\n      isReverse,\n      liquidityShares: pos.liquidity_shares,\n      totalShareLiquidity: pos.liquidity_shares.reduce((acc: string, curr: string) => d(acc).add(curr).toFixed(0), '0'),\n      version\n    }\n    return info\n  }\n\n  // Farms仓位包装\n  const wrapFarmsPosBaseInfo = async (data: any): Promise<PosBaseInfo> => {\n    const pos: any = FarmsUtils.buildFarmsPositionNFT(data)\n\n    const version = data?.data?.version || '0'\n    const coinTypeA = extractStructTagFromType(pos.coin_type_a).full_address\n    const coinTypeB = extractStructTagFromType(pos.coin_type_b).full_address\n\n    const { isReverse, tokenA, tokenB, displayTokenA, displayTokenB } = await getPosTokenData(coinTypeA, coinTypeB)\n\n    return {\n      clmmPool: pos.clmm_pool_id,\n      farmsPool: pos.pool_id,\n      posId: pos.clmm_position_id,\n      id: pos.id,\n      liquidity: pos.liquidity,\n      // index: pos.name.split('-')[1],\n      lowerTick: pos.tick_lower_index,\n      upperTick: pos.tick_upper_index,\n      owner: '',\n      coinTypeA,\n      coinTypeB,\n      posType: 'farms',\n      tokenName: pos.name,\n      isReverse,\n      tokenA,\n      tokenB,\n      displayTokenA,\n      displayTokenB,\n      version,\n      index: data?.data?.content?.fields?.clmm_postion?.fields?.index\n    }\n  }\n\n  // Burn仓位包装\n  const wrapBurnPosBaseInfo = async (data: any): Promise<PosBaseInfo> => {\n    console.log('🚀🚀🚀 ~ useWrapPosData.ts:99 ~ wrapBurnPosBaseInfo ~ data?.data?.content?.fields:', data?.data?.content?.fields)\n    const pos: any = BurnUtils.buildBurnPositionNFT(data?.data?.content?.fields)\n    const version = data?.data?.version || '0'\n    const coinTypeA = extractStructTagFromType(pos.coin_type_a).full_address\n    const coinTypeB = extractStructTagFromType(pos.coin_type_b).full_address\n\n    const { isReverse, tokenA, tokenB, displayTokenA, displayTokenB } = await getPosTokenData(coinTypeA, coinTypeB)\n\n    return {\n      clmmPool: pos.clmm_pool_id,\n      posId: pos.clmm_position_id,\n      liquidity: pos.liquidity,\n      index: pos.index,\n      id: pos.id,\n      lowerTick: pos.tick_lower_index,\n      upperTick: pos.tick_upper_index,\n      owner: '',\n      coinTypeA,\n      coinTypeB,\n      posType: 'burn',\n      tokenName: pos.name,\n      isReverse,\n      tokenA,\n      tokenB,\n      displayTokenA,\n      displayTokenB,\n      version\n    }\n  }\n\n  const buildPosBaseInfo = async (item: any): Promise<PosBaseInfo | DlmmPosBaseInfo | null> => {\n    const type = extractStructTagFromType(item.data.type)\n\n    if (type.full_address === buildPositionType) {\n      return await wrapClmmPosBaseInfo(item)\n    }\n\n    if (type.full_address === buildFarmsPositionType) {\n      return await wrapFarmsPosBaseInfo(item)\n    }\n\n    if (type.full_address === buildBurnPositionType) {\n      return await wrapBurnPosBaseInfo(item)\n    }\n\n    if (type.full_address === buildDlmmPositionType) {\n      return await wrapDlmmPosBaseInfo(item)\n    }\n\n    return null\n  }\n\n  return {\n    wrapClmmPosBaseInfo,\n    wrapBurnPosBaseInfo,\n    wrapFarmsPosBaseInfo,\n    buildPosBaseInfo,\n    getPosTokenData,\n    wrapDlmmPosBaseInfo\n  }\n}\n","import useDlmmPositionStore from '@/store/dlmm-position'\nimport usePositionStore from '@/store/position'\nimport { PosBaseInfo } from '@/types'\nimport { DlmmPosBaseInfo, GetPositionBaseListOptions } from '@/types/dlmm'\nimport { useSdk } from '@cetus/sdk-factory'\nimport { clmmConfig } from '@cetus/types/src/config/envConfigs'\nimport { d } from '@cetus/utils'\nimport { DataPage } from '@cetusprotocol/common-sdk'\nimport useGetPriceRange from '../clmm/useGetPriceRange'\nimport useGetDlmmPosFeeAndReward from '../dlmm-position/useGetDlmmPosFeeAndReward'\nimport useGetDlmmPosLiquiditys from '../dlmm-position/useGetDlmmPosLiquiditys'\nimport useGetDlmmPosPool from '../dlmm-position/useGetDlmmPosPool'\nimport useGetFarmsPosRewards from './useGetFarmsPosRewards'\nimport useGetPosApiPoolData from './useGetPosApiPoolData'\nimport useGetPosfees from './useGetPosfees'\nimport useGetPosInfoList from './useGetPosInfoList'\nimport useGetPosLiquiditys from './useGetPosLiquiditys'\nimport useGetPosPools from './useGetPosPools'\nimport useGetPosRewards from './useGetPosRewards'\nimport useGetPositionVesting from './useGetPosVesting'\nimport usePosHelper from './usePosHelper'\nimport useWrapPosData from './useWrapPosData'\n\nexport class RpcNodeError extends Error {\n  code: string\n  constructor(message: string) {\n    super(message)\n    this.code = 'RPC_NODE_ERROR'\n    this.name = 'RpcNodeError'\n  }\n}\n\nexport default function usePositionList() {\n  const clmmSdk = useSdk('clmm')\n  const { setDlmmPosBaseListLoading, setDlmmPosBaseList } = useDlmmPositionStore()\n  const { buildPositionType, buildFarmsPositionType, buildBurnPositionType, buildDlmmPositionType } = usePosHelper()\n  const { buildPosBaseInfo } = useWrapPosData()\n  const { setPosBaseList, setFullRangePosBaseList, setPosBaseListLoading, setPosLiquidityDataLoading, setPosRewardsDataLoading } = usePositionStore()\n\n  const { getPosPoolsOriginalObj, getPosPoolsRelatedData } = useGetPosPools()\n  const { getPosLiquidityData } = useGetPosLiquiditys()\n  const { getPosFeeData } = useGetPosfees()\n  const { getPosApiPoolData } = useGetPosApiPoolData()\n  const { getPosRewardsData } = useGetPosRewards()\n  const { getFarmsRewardsData } = useGetFarmsPosRewards()\n  const { fetchPriceRanges } = useGetPriceRange()\n  const { getVestingList } = useGetPositionVesting()\n  const { getPositionInfoList } = useGetPosInfoList()\n  const { getDlmmPosPoolsOriginalObj, getDlmmPosPoolsRelatedData } = useGetDlmmPosPool()\n  const { getDlmmPosLiquidityData } = useGetDlmmPosLiquiditys()\n  const { getDlmmPosFeeAndReward } = useGetDlmmPosFeeAndReward()\n\n  const getPositionBaseList = async (\n    account: string,\n    options?: GetPositionBaseListOptions\n  ): Promise<{ clmmPosBaseList: PosBaseInfo[]; dlmmPosBaseList: DlmmPosBaseInfo[] }> => {\n    const { clmmPool, useInVest, fetchType = 'all', isFarmsPage = false } = options || {}\n    console.log('🚀 ~ getPositionBaseList ~ clmmPool:', clmmPool)\n    setPosBaseListLoading(true)\n    try {\n      const posFilter = []\n\n      if (fetchType === 'all' || fetchType === 'clmm') {\n        posFilter.push(\n          {\n            Package: clmmConfig.clmm_pool.package_id\n          },\n          {\n            StructType: buildFarmsPositionType\n          },\n          {\n            StructType: buildBurnPositionType\n          }\n        )\n      }\n\n      if (fetchType === 'all' || fetchType === 'dlmm') {\n        setDlmmPosBaseListLoading(true)\n        posFilter.push({\n          StructType: buildDlmmPositionType\n        })\n      }\n      console.log('🚀🚀🚀 ~ usePositionList.ts:81 ~ usePositionList ~ posFilter:', posFilter)\n\n      const ownerRes = await clmmSdk!.FullClient.getOwnedObjectsByPage(account, {\n        options: { showType: true, showContent: true, showOwner: true },\n        filter: {\n          MatchAny: posFilter\n        }\n      })\n\n      console.log('🚀 ~ file: usePositionList.ts:25 ~ getPositionList ~ ownerRes:', ownerRes)\n\n      let posBaseList: PosBaseInfo[] = []\n      let dlmmPosBaseList: DlmmPosBaseInfo[] = []\n\n      for (const item of ownerRes.data as any[]) {\n        const info = await buildPosBaseInfo(item)\n        if (info && info?.displayTokenA && info?.displayTokenB) {\n          const posType = info?.posType\n          if (posType === 'dlmm') {\n            dlmmPosBaseList.push(info)\n          } else {\n            if (!useInVest && d(info?.liquidity).lte(0)) continue\n            posBaseList.push(info)\n          }\n        }\n      }\n\n      console.log('🚀 ~ file: usePositionList.ts:33 ~ getPositionList ~ posBaseList:', posBaseList, dlmmPosBaseList)\n\n      // 获取受损仓位列表, 通过获取positionInfo矫正受损仓位的liquidity\n      const vestingList = await getVestingList(posBaseList)\n      console.log('🚀 ~ getPositionBaseList ~ vestingList:', vestingList)\n      if (vestingList?.length > 0) {\n        posBaseList = await getPositionInfoList(posBaseList, vestingList)\n        console.log('🚀 ~ getPositionBaseList ~ posBaseList:', posBaseList)\n      }\n\n      // 排序\n      const sortBaseList = posBaseList.sort((a: any, b: any) => b.version - a.version)\n      const sortDlmmList = dlmmPosBaseList.sort((a: any, b: any) => b.version - a.version)\n\n      let filterPosBaseList: PosBaseInfo[] = []\n      let filterDlmmPosBaseList: DlmmPosBaseInfo[] = []\n      if (!clmmPool) {\n        filterPosBaseList = sortBaseList\n        filterDlmmPosBaseList = sortDlmmList\n      } else {\n        filterPosBaseList = sortBaseList?.filter((item: PosBaseInfo) => item.clmmPool === clmmPool)\n        filterDlmmPosBaseList = sortDlmmList?.filter((item: DlmmPosBaseInfo) => item.dlmmPool === clmmPool)\n      }\n\n      setPosBaseList(filterPosBaseList)\n      setDlmmPosBaseList(filterDlmmPosBaseList)\n      if (filterPosBaseList?.length == 0) {\n        setFullRangePosBaseList([])\n        setPosLiquidityDataLoading(false)\n      }\n\n      // 异步加载数据\n      getPosRelatedData(filterPosBaseList, isFarmsPage)\n      getPosDlmmRelatedData(filterDlmmPosBaseList)\n\n      return {\n        clmmPosBaseList: filterPosBaseList,\n        dlmmPosBaseList: filterDlmmPosBaseList\n      }\n    } catch (error) {\n      console.error('🚀 ~ getPositionBaseList ~ 79 ~ error:', error)\n      setDlmmPosBaseListLoading(false)\n      setPosBaseListLoading(false)\n      if (error instanceof TypeError) {\n        setPosBaseList([])\n        setDlmmPosBaseList([])\n        throw new RpcNodeError('Something went wrong, please change the rpc node and try again')\n      }\n\n      throw error\n    } finally {\n      setDlmmPosBaseListLoading(false)\n      setPosBaseListLoading(false)\n    }\n  }\n\n  const getPosDlmmRelatedData = async (posBaseList: DlmmPosBaseInfo[], refreshLiquidity: boolean = true) => {\n    if (posBaseList.length === 0) {\n      return\n    }\n    try {\n      console.log('🚀 ~ getPosRelatedData ~ posPoolsOriginalData:', 'getPosDlmmRelatedData')\n      const posPoolsOriginalData = await getDlmmPosPoolsOriginalObj(posBaseList)\n      console.log('🚀 ~ getPosRelatedData ~ posPoolsOriginalData:', posPoolsOriginalData)\n      getDlmmPosPoolsRelatedData(posBaseList, posPoolsOriginalData) //hook里面关于posPoolsOriginalData数据已经处理\n      console.log(Object.keys(posPoolsOriginalData)?.length > 0 && refreshLiquidity, 'getPosRelatedData ~ posPoolsOriginalData:')\n      if (Object.keys(posPoolsOriginalData)?.length > 0 && refreshLiquidity) {\n        getDlmmPosLiquidityData(posBaseList, posPoolsOriginalData)\n        getDlmmPosFeeAndReward(posBaseList, posPoolsOriginalData)\n      }\n    } catch (error) {\n      console.error('🚀 ~ getPosRelatedData ~ error: 96', error)\n    }\n  }\n\n  const formatPosBaseList = async (ownerRes: DataPage<any>, clmmPool?: string, useInVest?: boolean) => {\n    let posBaseList: any = []\n\n    for (const item of ownerRes.data as any[]) {\n      const info = await buildPosBaseInfo(item)\n      // console.log('🚀 ~ file: usePositionList.ts:37 ~ getPositionList ~ info:', info)\n      if (!useInVest && d(info?.liquidity).lte(0)) continue\n      if (!info?.displayTokenA || !info?.displayTokenB) continue\n      if (info) {\n        posBaseList.push(info)\n      }\n    }\n\n    console.log('🚀 ~ file: usePositionList.ts:33 ~ getPositionList ~ posBaseList:', posBaseList)\n\n    // 获取受损仓位列表, 通过获取positionInfo矫正受损仓位的liquidity\n    const vestingList = await getVestingList(posBaseList)\n    console.log('🚀 ~ getPositionBaseList ~ vestingList:', vestingList)\n    if (vestingList?.length > 0) {\n      posBaseList = await getPositionInfoList(posBaseList, vestingList)\n      console.log('🚀 ~ getPositionBaseList ~ posBaseList:', posBaseList)\n    }\n\n    // 排序\n    const sortBaseList = posBaseList.sort((a: any, b: any) => b.version - a.version)\n\n    let result: PosBaseInfo[] = []\n    if (!clmmPool) {\n      result = sortBaseList\n    } else {\n      result = sortBaseList?.filter((item: PosBaseInfo) => item.clmmPool === clmmPool)\n    }\n\n    return result\n  }\n\n  const getPosRelatedData = async (posBaseList: PosBaseInfo[], isFarms: boolean = false) => {\n    console.log('🚀 ~ getPosRelatedData ~ posBaseList:', isFarms, posBaseList)\n    getFarmsRewardsData(posBaseList)\n    if (!isFarms) {\n      console.log('🚀 ~ getPosRelatedData ~ isFarms:', posBaseList)\n      getPosApiPoolData(posBaseList)\n      getPosFeeData(posBaseList)\n    }\n\n    if (posBaseList?.length > 0) {\n      // 提取 clmmPoolAddress 并去重\n      const clmmPoolAddressList = Array.from(new Set(posBaseList.map(item => item.clmmPool).filter(Boolean)))\n      fetchPriceRanges(clmmPoolAddressList)\n    }\n\n    try {\n      const posPoolsOriginalData = await getPosPoolsOriginalObj(posBaseList)\n      console.log('🚀 ~ getPosRelatedData ~ posPoolsOriginalData:', posPoolsOriginalData)\n      getPosPoolsRelatedData(posBaseList, posPoolsOriginalData) //hook里面关于posPoolsOriginalData数据已经处理\n      if (Object.keys(posPoolsOriginalData)?.length > 0) {\n        getPosLiquidityData(posBaseList, posPoolsOriginalData)\n        if (!isFarms) {\n          getPosRewardsData(posBaseList, posPoolsOriginalData)\n        }\n      } else {\n        setPosLiquidityDataLoading(false)\n        setPosRewardsDataLoading(false)\n      }\n    } catch (error) {\n      console.error('🚀 ~ getPosRelatedData ~ error: 96', error)\n    }\n  }\n\n  return {\n    formatPosBaseList,\n    getPositionBaseList,\n    getPosRelatedData,\n    getPosDlmmRelatedData\n  }\n}\n"],"names":["uniqBy","array","iteratee","baseUniq","baseIteratee","store","set","get","data","originData","groupedByClmmPool","result","item","_a","FrozenPools","_c","_b","value","usePositionStore","create","POS_HANDLE_MAINNET","POS_HANDLE_TESTNET","POS_HANDLE","envConfigs","useGetPosInfoList","clmmSdk","useSdk","toCamelCase","str","_","letter","parseObjectKeysToCamelCase","obj","acc","key","newKey","posBaseList","vestingList","isFetchAll","posBaseObj","vestingObj","vestingListWithAddPool","vestingGroupByPool","i","_d","params","res","positionInfoObj","newPosBaseList","error","useGetPosVesting","getPosGroupByPool","posGroupByPool","list","vestPools","status","state","groupedByDlmmPool","useDlmmPositionStore","useDepositStore","useGetPriceRange","fetchByApi","useFetch","setPriceRangeMap","setRecommendRangesInfo","setPoolRangeObj","poolAddress","tokenA","tokenB","PriceRangePath","rangesWithDateTypeMap","TickMath","pools","rangesWithPoolMap","useGetDlmmPosFeeAndReward","dlmmSdk","getTokenListInfo","useGetToken","setDlmmPosFeeData","setDlmmPosRewardsData","setDlmmPosFeeAndRewardsLoading","positionBaseList","posPoolsOriginalData","batchPosList","spitClaimDlmmPosList","batches","batch","options","position","poolInfo","r","allResults","batchRes","dlmmPosFeeData","feeItem","feeA","feeB","bnToAmount","coinTypeList","fixCoinType","tokenMap","dlmmPosRewardsData","rewardList","rewarder","rewardCoinType","token","useGetDlmmPosLiquiditys","setPosLiquidityDataLoading","setDlmmPosLiquidityData","getToken","useGetTokens","posLiquidityData","binInfoList","active_bin","amountInfo","parseLiquidityShares","decimalsA","decimalsB","coinAmountA","coinAmountB","amountA","amountB","currentPrice","percentA","percentB","calcCoinProportion","useGetDlmmPosPool","setDlmmPosPoolOriginalData","setDlmmPosPoolsRelatedDataLoading","setDlmmPosPoolsRelatedData","poolIds","dlmmPosPoolsOriginalObj","posAllPools","activeBinObj","pool_type","bin_step","active_id","bin_manager","info","pos","binStep","BinUtils","currentPriceReverse","d","posPoolOriginalObjs","posPoolsRelatedData","minPrice","maxPrice","minPriceResever","maxPriceResever","isReverse","currentStatus","formatPrice","FEE_PRECISION","useGetFarmsPosRewards","farmsSdk","setFarmsPosRewardsData","setFarmsPosRewardsDataLoading","batchFetchPosRewardersAmountParams","posFarmsRewardsObj","resArr","id","rewarder_amount","rewarder_type","useGetPosApiPoolData","setPosApiPoolData","getFavoritePoolList","useFavoritePool","useGetPosfees","setPosFeeData","setPosFeeDataLoading","getPosFeeData","feeParams","posInfo","posFeesData","formatPosFeeData","index","displayFeeOwedA","displayFeeOwedB","useGetPosLiquiditys","setPosLiquidityData","getTokenInfo","getCoinAmountFromLiquidity","liquidity","currentSqrtPrice","lowerTick","upperTick","roundUp","lowerSqrtPrice","upperSqrtPrice","ClmmPoolUtil","BN","isFullRange","checkFullRange","dAmountA","dAmountB","onlyAmountA","onlyAmountB","useGetPosPools","setPosPoolOriginalData","setPosPoolsRelatedData","setPosPoolsRelatedDataLoading","setFullRangePosBaseList","setFullRangePosBaseListLoading","posPoolsOriginalObj","CorrectedPool","fullRangePosBaseList","checkIsMinOrMaxIndex","formatNumberWithDown","useGetPosRewards","setPosRewardsData","setPosRewardsDataLoading","posRewardsData","amount_owed","coin_address","newRewarderAmount","amount_owned","coin_type","usePosHelper","getClmmPosName","posIndex","position_index","buildPositionType","useMemo","clmmConfig","buildDlmmPositionType","dlmmConfig","buildFarmsPositionType","farmsConfig","buildBurnPositionType","burnConfig","getTokenALock","currentPosBaseInfo","isAvailableObject","getTokenBLock","tokenALock","tokenBLock","useWrapPosData","getPosTokenData","coinTypeA","coinTypeB","getPoolDirection","wrapClmmPosBaseInfo","buildPosition","extractStructTagFromType","displayTokenA","displayTokenB","version","wrapDlmmPosBaseInfo","parseDlmmPosition","curr","wrapFarmsPosBaseInfo","FarmsUtils","_f","_e","wrapBurnPosBaseInfo","BurnUtils","type","RpcNodeError","message","__publicField","usePositionList","setDlmmPosBaseListLoading","setDlmmPosBaseList","buildPosBaseInfo","setPosBaseList","setPosBaseListLoading","getPosPoolsOriginalObj","getPosPoolsRelatedData","getPosLiquidityData","getPosApiPoolData","getPosRewardsData","getFarmsRewardsData","fetchPriceRanges","getVestingList","useGetPositionVesting","getPositionInfoList","getDlmmPosPoolsOriginalObj","getDlmmPosPoolsRelatedData","getDlmmPosLiquidityData","getDlmmPosFeeAndReward","getPositionBaseList","account","clmmPool","useInVest","fetchType","isFarmsPage","posFilter","ownerRes","dlmmPosBaseList","sortBaseList","a","b","sortDlmmList","filterPosBaseList","filterDlmmPosBaseList","getPosRelatedData","getPosDlmmRelatedData","refreshLiquidity","formatPosBaseList","isFarms","clmmPoolAddressList"],"mappings":"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CtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qEAAsE,qEACtE,qE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","x_google_ignoreList":[0]}