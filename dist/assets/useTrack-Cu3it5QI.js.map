{"version":3,"file":"useTrack-Cu3it5QI.js","sources":["../../../utils/src/gtag.ts","../../../hooks/src/useTrack.ts"],"sourcesContent":["export const TrackDataProviders: any = {\n  CETUS: 'a',\n  DEEPBOOK: 'b',\n  DEEPBOOKV3: 'c',\n  KRIYA: 'd',\n  KRIYAV3: 'e',\n  FLOWX: 'f',\n  FLOWXV3: 'g',\n  AFTERMATH: 'h',\n  TURBOS: 'i',\n  HAEDAL: 'j',\n  HAEDALPMM: 'k',\n  VOLO: 'l',\n  AFSUI: 'm',\n  BLUEMOVE: 'n',\n  SCALLOP: 'o',\n  SPRINGSUI: 'p',\n  BLUEFIN: 'q',\n  ALPHAFI: 'r',\n  STEAMM: 's',\n  METASTABLE: 't',\n  OBRIC: 'u',\n  MOMENTUM: 'v',\n  MAGMA: 'w',\n  SEVENK: 'x',\n  STEAMM_OMM_V2: 'y',\n  FULLSAIL: 'z'\n}\n\nexport function trackShioEvent(type: string, status: boolean, tx: string) {\n  if (typeof window !== 'undefined' && (window as any).gtag) {\n    ;(window as any).gtag('event', 'track_shio_status', {\n      operation_type: type,\n      shio_enabled: status,\n      tx_hash: tx\n    })\n  }\n}\n\ntype CommonTrackData = {\n  action: string\n  txHash: string\n  actionTime: number\n}\n\ntype SwapTrackData = CommonTrackData & {\n  isOpenAggregator: boolean // 是否开启Aggregator\n  isDowngrade: boolean // 是否降级\n  providers: string[] // 开启的路径\n  // errorMsg: string\n  fromCoin?: string // 用-分割，后面加数量\n  toCoin?: string // 用-分割, 后面加数量\n  // acountIn?: string\n  // amountOut?: string\n  isError: boolean\n  errorMsg1?: string\n  errorMsg2?: string\n  errorMsg3?: string\n  errorMsg4?: string\n  errorMsg5?: string\n  useMev?: boolean\n  useFastMode?: boolean\n}\n\nexport function trackSwap(data: SwapTrackData) {\n  console.log('🚀 ~ file: gtag.ts:30 ~ trackTransaction ~ data:', data)\n  const providerArr = data.providers.map((item: string) => TrackDataProviders?.[item])\n  const providerText = providerArr.join('')\n\n  console.log('🚀 ~ file: gtsag.ts:30 ~ trackTransaction ~ final data:', {\n    ...data,\n    providers: providerText\n  })\n\n  if (typeof window !== 'undefined' && (window as any).gtag) {\n    ;(window as any).gtag('event', 'track_transaction', {\n      ...data,\n      providers: providerText\n    })\n  }\n}\n\nexport function trackTransactionError(data: any) {\n  if (typeof window !== 'undefined' && (window as any).gtag) {\n    ;(window as any).gtag('event', 'track_transaction_error', {\n      ...data\n    })\n  }\n}\n\nexport function trackWalletConnect({ walletName, walletAddress }: { walletName: string; walletAddress: string }) {\n  if (typeof window !== 'undefined' && (window as any).gtag) {\n    ;(window as any).gtag('event', 'wallet_connection', {\n      walletName,\n      walletAddress\n    })\n  }\n}\n\nexport function trackDlmmBetaWalletConnect({\n  walletName,\n  walletAddress,\n  inviteCodes,\n  connectTime\n}: {\n  walletName: string\n  walletAddress: string\n  inviteCodes: string\n  connectTime: number\n}) {\n  if (typeof window !== 'undefined' && (window as any).gtag) {\n    try {\n      console.log('trackDlmmBetaWalletConnect: ', {\n        walletName,\n        walletAddress: String(walletAddress)?.split('0x')[1],\n        inviteCodes,\n        connectTime\n      })\n      ;(window as any).gtag('event', 'dlmm_beta_wallet_connection', {\n        walletName,\n        walletAddress: String(walletAddress)?.split('0x')?.[1],\n        inviteCodes,\n        connectTime\n      })\n    } catch (error) {\n      console.log('🚀 ~ trackDlmmBetaWalletConnect ~ error:', error)\n    }\n  }\n}\n\n// 只记录前端最终调sdk时的输入参数, 参数以parms1, parms2, parms3, parms4, parms5, parms6, parms7, parms8, parms9, parms10 记录\n// 成功需记录tx hash，失败需记录失败原因\n// 必须记录wallet address, wallet name, time\nexport function trackDlmmTransaction(data: any) {\n  try {\n    if (typeof window !== 'undefined' && (window as any).gtag) {\n      ;(window as any).gtag('event', 'track_dlmm_transaction', {\n        ...data\n      })\n    }\n  } catch (error) {\n    console.log('🚀 ~ trackDlmmTransaction ~ error:', error)\n  }\n}\n","import envConfigs from '@cetus/types/src/config/envConfigs'\nimport { trackDlmmBetaWalletConnect, trackDlmmTransaction, trackShioEvent, trackSwap, trackTransactionError, trackWalletConnect } from '@cetus/utils'\nimport { fixCoinType } from '@cetusprotocol/common-sdk'\nimport { v4 } from 'uuid'\n\nexport default function useTrack() {\n  const trackShio = (data: any, status: boolean, txHash: string) => {\n    const type = data?.action\n    const supported = [\n      'FarmingOpenAndAddLiquidity',\n      'FarmingIncreaseLiquidity',\n      'FarmingDecreaseLiquidity',\n      'FarmingRemoveLiquidity',\n      'FarmingRemoveLiquidity',\n      'OpenAndAddLiquidity',\n      'IncreaseLiquidity',\n      'RemoveLiquidity',\n      'DecreaseLiquidity',\n      'AddVaultsPosition',\n      'RemoveVaultsPosition',\n      'AggregatorSwap'\n    ]\n\n    if (supported.includes(type)) {\n      try {\n        trackShioEvent(type, status, txHash)\n      } catch (e) {\n        console.log('🚀 ~ useTransaction ~ trackShioEvent error:', e)\n      }\n    }\n  }\n\n  const toTrackSwap = (params: any, error: string, txHash: string) => {\n    try {\n      const action = 'Swap'\n      const actionTime = new Date().getTime()\n\n      const isOpenAggregator = params?.providerKey?.length > 1\n      const isDowngrade = !!params?.routerData?.isDowngrade\n      const providers = params?.providerKey || []\n      const fromCoin = `${params?.from}-${params?.routerData?.fromAmountUi}`\n      const toCoin = `${params?.to}-${params?.routerData?.toAmountUi}`\n      const isError = !!error\n\n      const data: any = {\n        action,\n        actionTime,\n        txHash,\n        isOpenAggregator,\n        isDowngrade,\n        providers,\n        fromCoin,\n        toCoin,\n        isError: !!error,\n        useMev: params?.useMev,\n        useFastMode: params?.useFastMode\n      }\n      console.log('🚀 ~ trackSwap ~ data:', data)\n\n      if (isError) {\n        const errorString = String(data?.error)\n          .replace(/\\\\/g, '') // 去掉所有反斜杠\n          .replace(/\"/g, '') // 去掉所有双引号\n          .replace(/\\s+/g, ' ') // 将多个连续空白字符替换为单个空格\n          .trim() // 去掉首尾空格\n\n        // 记录长度\n        data['errorStringLength'] = errorString.length\n\n        // 使用通用方法拆分存储\n        splitStringToEventData(data, errorString, 'errorMsg', 25, 100)\n      }\n\n      console.log('useTrack 🚀 ~ trackSwap ~ data:', data)\n      trackSwap(data)\n    } catch (error) {\n      console.log('🚀 ~ useTrack ~ error:', error)\n    }\n  }\n\n  const toTrackWalletConnect = ({ walletAddress, walletName }: { walletAddress: string; walletName: string }) => {\n    // 一天一个地址对应一个钱包只上报一次\n    const today = new Date().toISOString().split('T')[0] // 获取当天日期 (YYYY-MM-DD)\n    const key = `wallet_connected_${walletName}_${walletAddress}`\n\n    const lastConnectionDate = localStorage.getItem(key)\n\n    if (!lastConnectionDate || lastConnectionDate !== today) {\n      localStorage.setItem(key, today) // 更新为今天的日期\n      trackWalletConnect({\n        walletAddress,\n        walletName\n      })\n    }\n  }\n\n  // 通用方法：将字符串按指定长度拆分并存储到eventData中\n  const splitStringToEventData = (eventData: any, sourceString: string, keyPrefix: string, maxKeys: number = 25, chunkSize: number = 100) => {\n    if (!sourceString || sourceString.length === 0) {\n      return eventData\n    }\n\n    // 计算已存在的key数量\n    const existingKeys = Object.keys(eventData).length\n\n    // 计算还能存储的key数量\n    const remainingKeys = maxKeys - existingKeys\n\n    // 计算需要的key数量\n    const neededKeys = Math.ceil(sourceString.length / chunkSize)\n\n    if (neededKeys <= remainingKeys) {\n      // 如果剩余空间足够，存储所有内容\n      let i = 0\n      while (i * chunkSize < sourceString.length) {\n        const startIndex = i * chunkSize\n        const endIndex = Math.min(startIndex + chunkSize, sourceString.length)\n        eventData[`${keyPrefix}${i}`] = sourceString.slice(startIndex, endIndex)\n        i++\n      }\n    } else {\n      // 如果剩余空间不足，存储前半部分和后半部分\n      const halfKeys = Math.floor(remainingKeys / 2)\n\n      // 存储前半部分\n      for (let i = 0; i < halfKeys; i++) {\n        const startIndex = i * chunkSize\n        const endIndex = Math.min(startIndex + chunkSize, sourceString.length)\n        eventData[`${keyPrefix}${i}`] = sourceString.slice(startIndex, endIndex)\n      }\n\n      // 存储后半部分\n      const startFromEnd = neededKeys - (remainingKeys - halfKeys)\n      for (let i = 0; i < remainingKeys - halfKeys; i++) {\n        const actualIndex = startFromEnd + i\n        const startIndex = actualIndex * chunkSize\n        const endIndex = Math.min(startIndex + chunkSize, sourceString.length)\n        eventData[`${keyPrefix}${halfKeys + i}`] = sourceString.slice(startIndex, endIndex)\n      }\n    }\n\n    return eventData\n  }\n\n  const toTrackTransactionError = (data: any) => {\n    console.log('🚀 ~ trackTransactionError ~ data:', data)\n    const eventData: any = {}\n\n    eventData['timestamp'] = new Date().getTime()\n\n    // 处理 paramsJson\n    if (data?.paramsJson) {\n      const paramsJson = String(data?.paramsJson)\n        .replace(/\\\\/g, '') // 去掉所有反斜杠\n        .replace(/\"/g, '') // 去掉所有双引号\n        .replace(/\\s+/g, ' ') // 将多个连续空白字符替换为单个空格\n        .trim() // 去掉首尾空格\n\n      console.log('🚀 ~ trackTransactionError ~ paramsJson:', paramsJson)\n\n      // 记录长度\n      eventData['paramsJsonLength'] = paramsJson.length\n\n      // 使用通用方法拆分存储\n      splitStringToEventData(eventData, paramsJson, 'paramsJson', 25, 100)\n    }\n\n    // 处理 error 信息\n    if (data?.error) {\n      const errorString = String(data?.error)\n        .replace(/\\\\/g, '') // 去掉所有反斜杠\n        .replace(/\"/g, '') // 去掉所有双引号\n        .replace(/\\s+/g, ' ') // 将多个连续空白字符替换为单个空格\n        .trim() // 去掉首尾空格\n\n      console.log('🚀 ~ trackTransactionError ~ errorString:', errorString)\n\n      // 记录长度\n      eventData['errorStringLength'] = errorString.length\n\n      // 使用通用方法拆分存储\n      splitStringToEventData(eventData, errorString, 'errorMsg', 25, 100)\n    }\n\n    console.log('🚀 ~ trackTransactionError ~ eventData:', eventData)\n    trackTransactionError(eventData)\n  }\n\n  const toTrackDlmmBetaWalletConnect = (data: { walletName: string; walletAddress: string; inviteCodes: string }) => {\n    trackDlmmBetaWalletConnect({\n      walletName: data?.walletName,\n      walletAddress: String(data?.walletAddress),\n      inviteCodes: data?.inviteCodes,\n      connectTime: new Date().getTime()\n    })\n  }\n\n  const toTrackDlmmTransaction = (data: {\n    walletName: string\n    walletAddress: string\n    params: any\n    action: string\n    txHash?: string\n    isError?: boolean\n    error?: any\n  }) => {\n    // testnet不埋点\n    if (envConfigs.env === 'testnet') {\n      return\n    }\n    const eventData: any = {\n      trackId: v4(),\n      action: data?.action,\n      timestamp: new Date().getTime(),\n      walletName: data?.walletName,\n      walletAddress: fixCoinType(data?.walletAddress),\n\n      isError: data?.isError\n    }\n\n    if (data?.txHash) {\n      eventData['txHash'] = data?.txHash\n    }\n\n    // 处理 paramsJson\n    if (data?.params) {\n      const paramsJson = JSON.stringify(data?.params, null, 0)\n        .replace(/\\\\/g, '') // 去掉所有反斜杠\n        .replace(/\"/g, '') // 去掉所有双引号\n        .replace(/\\s+/g, ' ') // 将多个连续空白字符替换为单个空格\n        .trim() // 去掉首尾空格 // 记录长度\n\n      if (paramsJson.length > 1000) {\n        eventData['paramsJsonLength'] = paramsJson.length\n      }\n\n      // 使用通用方法拆分存储\n      splitStringToEventData(eventData, paramsJson, 'paramsJson', 25, 100)\n    }\n\n    // 处理 error 信息\n    if (data?.error) {\n      const errorString = String(data?.error)\n        .replace(/\\\\/g, '') // 去掉所有反斜杠\n        .replace(/\"/g, '') // 去掉所有双引号\n        .replace(/\\s+/g, ' ') // 将多个连续空白字符替换为单个空格\n        .trim() // 去掉首尾空格\n\n      // 记录长度\n\n      eventData['errorStringLength'] = errorString.length\n\n      // 使用通用方法拆分存储\n      splitStringToEventData(eventData, errorString, 'errorMsg', 25, 100)\n    }\n\n    console.log('🚀 ~ toTrackDlmmTransaction ~ eventData:', eventData)\n    trackDlmmTransaction({ ...eventData })\n  }\n\n  return {\n    trackShio,\n    toTrackSwap,\n    toTrackWalletConnect,\n    toTrackTransactionError,\n    toTrackDlmmBetaWalletConnect,\n    toTrackDlmmTransaction\n  }\n}\n"],"names":["TrackDataProviders","trackShioEvent","type","status","tx","trackSwap","data","providerText","item","trackTransactionError","trackWalletConnect","walletName","walletAddress","trackDlmmBetaWalletConnect","inviteCodes","connectTime","_a","_c","_b","error","trackDlmmTransaction","useTrack","trackShio","txHash","e","toTrackSwap","params","action","actionTime","isOpenAggregator","isDowngrade","providers","fromCoin","toCoin","_d","isError","errorString","splitStringToEventData","toTrackWalletConnect","today","key","lastConnectionDate","eventData","sourceString","keyPrefix","maxKeys","chunkSize","existingKeys","remainingKeys","neededKeys","i","startIndex","endIndex","halfKeys","startFromEnd","paramsJson","envConfigs","v4","fixCoinType"],"mappings":"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"}