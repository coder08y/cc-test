{"version":3,"mappings":"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","names":["useTimeout","fn","delay","timerCallback","useMemoizedFn","timerRef","useRef","clear","useCallback","useEffect","isNumber","getSourceNum","providerList","acc","item","getCheckedNum","selected","subAcc","subItem","hiddenAggregators","AggregatorProvider","mergeAggregators","useCustomizeRouting","showRfqSwitch","providersSwitchStates","setProvidersSwitchStates","isOpenRfqSwitch","setIsOpenRfqSwitch","rfqConfigs","useSwapConfigStore","providers","useWebConfigStore","currProvidersSwitchStates","setCurrProvidersSwitchStates","useState","isOpenRfq","setIsOpenRfq","otherProviderList","setOtherProviderList","dexProviderList","setDexProviderList","useDeepCompareEffect","groupedList","otherList","dexList","providersMap","newProviders","provider","dex","AggregatorDexMap","groupDex","findGroupDex","list","key","value","a","b","AggregatorDexGroup","group","handleSelectAllProviderClick","selectAll","handleSelectAllDexProviderClick","handleSelectAllOtherProviderClick","handleProviderClick","select","selectAllDexProviders","useMemo","selectAllOtherProviders","selectAllProviders","isAllowInputReceiveSide","isOpenAggregatorMode","handleSaveClick","hasRfqProvider","allSourceNum","_a","dexSourceNumMap","otherSourceNumMap","RfqLogoTitle","title","marginTop","showTooltipIcon","bg_color","tx_bg_color","font_size","jsx","HStack","TooltipIcon","jsxs","Image","Text","AggregatorSwitch","props","isAnimated","setIsAnimated","Switch","ConfirmModal","isOpen","onOk","onClose","Modal","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","Icon","ModalFooter","Button","NumBox","num","total","RfqSwitch","isChecked","onChange","SourceGrid","lazy","__vitePreload","AggregatorModeModal","confirmModalOpen","setConfirmModalOpen","handleClose","isEqual","Fragment","VStack","d","Stack","Suspense","ListSkeleton","Divider","Grid","GridItem","Skeleton","AggregatorModeModal$1","memo"],"ignoreList":[0],"sources":["../../../../node_modules/.pnpm/ahooks@3.9.5_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/ahooks/es/useTimeout/index.js","../../src/hooks/swap/useCustomizeRouting.ts","../../src/components/swap/rfq/RfqLogoTitle.tsx","../../src/components/swap/AggregatorMode/AggregatorSwitch.tsx","../../src/components/swap/AggregatorMode/ConfirmModal.tsx","../../src/components/swap/AggregatorMode/NumBox.tsx","../../src/components/swap/AggregatorMode/RfqSwitch.tsx","../../src/components/swap/AggregatorMode/AggregatorModal.tsx"],"sourcesContent":["import { useCallback, useEffect, useRef } from 'react';\nimport useMemoizedFn from '../useMemoizedFn';\nimport { isNumber } from '../utils';\nvar useTimeout = function (fn, delay) {\n    var timerCallback = useMemoizedFn(fn);\n    var timerRef = useRef(null);\n    var clear = useCallback(function () {\n        if (timerRef.current) {\n            clearTimeout(timerRef.current);\n        }\n    }, []);\n    useEffect(function () {\n        if (!isNumber(delay) || delay < 0) {\n            return;\n        }\n        timerRef.current = setTimeout(timerCallback, delay);\n        return clear;\n    }, [delay]);\n    return clear;\n};\nexport default useTimeout;\n","import { AggregatorDexGroup, AggregatorDexMap } from '@/config/aggregator'\nimport useSwapConfigStore from '@/store/swap/swapConfig'\nimport { AggregatorDex, AggregatorProvider } from '@/types/swap'\nimport useWebConfigStore from '@cetus/stores/src/useWebConfigStore'\nimport { useDeepCompareEffect } from 'ahooks'\nimport { useMemo, useState } from 'react'\n\nconst getSourceNum = (providerList: AggregatorDex[]) => {\n  return providerList.reduce((acc, item) => {\n    return acc + (item?.subItems ? item.subItems.length : 1)\n  }, 0)\n}\n\nconst getCheckedNum = (providerList: AggregatorDex[], selected: Partial<Record<AggregatorProvider, boolean>>) => {\n  return providerList.reduce((acc, item) => {\n    if (item?.subItems) {\n      return (\n        acc +\n        item.subItems.reduce((subAcc, subItem) => {\n          return subAcc + ((selected as any)[subItem.id] ? 1 : 0)\n        }, 0)\n      )\n    }\n    return acc + ((selected as any)[item.id] ? 1 : 0)\n  }, 0)\n}\n\n// HAWAL与HAEDAL LSD同步，单独处理\nconst hiddenAggregators = [AggregatorProvider.HAWAL, AggregatorProvider.HAEDALHMMV2]\nconst mergeAggregators = [\n  {\n    parent: AggregatorProvider.HAEDAL,\n    child: AggregatorProvider.HAWAL\n  },\n  {\n    parent: AggregatorProvider.HAEDALPMM,\n    child: AggregatorProvider.HAEDALHMMV2\n  }\n]\nexport default function useCustomizeRouting(showRfqSwitch: boolean) {\n  console.log('showRfqSwitch: ', showRfqSwitch)\n\n  const { providersSwitchStates, setProvidersSwitchStates, isOpenRfqSwitch, setIsOpenRfqSwitch, rfqConfigs } = useSwapConfigStore()\n  const { providers } = useWebConfigStore()\n  const [currProvidersSwitchStates, setCurrProvidersSwitchStates] = useState<Partial<Record<AggregatorProvider, boolean>>>({\n    ...providersSwitchStates\n  })\n\n  // 是否打开RFQ开关\n  const [isOpenRfq, setIsOpenRfq] = useState(isOpenRfqSwitch)\n\n  // 其他Provider 列表\n  const [otherProviderList, setOtherProviderList] = useState<AggregatorDex[]>([])\n  // Dex Provider 列表\n  const [dexProviderList, setDexProviderList] = useState<AggregatorDex[]>([])\n  useDeepCompareEffect(() => {\n    setCurrProvidersSwitchStates({ ...providersSwitchStates })\n    setIsOpenRfq(isOpenRfqSwitch)\n  }, [providersSwitchStates, isOpenRfqSwitch])\n\n  // 初始化UI显示列表， 并分组\n  useDeepCompareEffect(() => {\n    const groupedList: Record<string, AggregatorDex[]> = {}\n    const otherList: AggregatorDex[] = []\n    const dexList: AggregatorDex[] = []\n\n    const providersMap: Partial<Record<AggregatorProvider, boolean>> = {}\n    // const newProviders = providers.filter(item => item !== 'VOLO')\n    const newProviders = providers.filter(item => !hiddenAggregators.includes(item as AggregatorProvider))\n    console.log('🚀🚀🚀 ~ useCustomizeRouting.ts:64 ~ useCustomizeRouting ~ newProviders:', newProviders)\n\n    // 如接口没返回dlmm ， 追加dlmm\n    // if (!newProviders.includes(AggregatorProvider.CETUSDLMM)) {\n    //   newProviders.push(AggregatorProvider.CETUSDLMM)\n    // }\n\n    newProviders.forEach(provider => {\n      const dex = AggregatorDexMap[provider]\n      console.log('🚀🚀🚀 ~ useCustomizeRouting.ts:66 ~ useCustomizeRouting ~ dex:', dex)\n      if (dex) {\n        const selected = providersSwitchStates[dex.id as AggregatorProvider]\n\n        // 初始化时 如果用户没设置过，则默认选中\n        if (selected === undefined) {\n          providersMap[dex.id as AggregatorProvider] = true\n        } else {\n          providersMap[dex.id as AggregatorProvider] = selected\n        }\n\n        const groupDex = findGroupDex(provider as AggregatorProvider)\n        if (groupDex) {\n          //找到分组 暂存groupedList\n          const list = groupedList[groupDex.groupName] || []\n          list.push(dex)\n          groupedList[groupDex.groupName] = list\n        } else {\n          if (dex.type === 'dex') {\n            dexList.push(dex)\n          } else {\n            otherList.push(dex)\n          }\n        }\n      } else {\n        //TODO 本地配置没找到 如何处理？\n      }\n    })\n    // 处理完毕，将分组数据 放入对应List中\n    console.log('🚀🚀🚀 ~ useCustomizeRouting.ts:97 ~ useCustomizeRouting ~ groupedList:', groupedList)\n    for (const [key, value] of Object.entries(groupedList)) {\n      if (value.length > 0) {\n        const dex = value[0]\n        const groupDex: AggregatorDex = {\n          ...dex,\n          id: dex.groupId as string,\n          name: key, // 修改分组显示的name\n          subItems: value.sort((a, b) => b.sort - a.sort)\n        }\n\n        if (dex.type === 'dex') {\n          dexList.push(groupDex)\n        } else {\n          otherList.push(groupDex)\n        }\n      }\n    }\n    console.log('🚀🚀🚀 ~ useCustomizeRouting.ts:108 ~ useCustomizeRouting ~ otherList:', otherList)\n    // 所有数据处理完毕，进行排序\n    otherList.sort((a, b) => b.sort - a.sort)\n    dexList.sort((a, b) => b.sort - a.sort)\n    setOtherProviderList([...otherList])\n    setDexProviderList([...dexList])\n    console.log('🚀🚀🚀 ~ useCustomizeRouting.ts:121 ~ useCustomizeRouting ~ providersMap:', providersMap)\n    setProvidersSwitchStates(providersMap)\n  }, [providers])\n\n  const findGroupDex = (provider: AggregatorProvider) => {\n    console.log('🚀🚀🚀 ~ useCustomizeRouting.ts:124 ~ findGroupDex ~ AggregatorDexGroup:', AggregatorDexGroup)\n    return AggregatorDexGroup.find(group => group.items.includes(provider))\n  }\n\n  /**\n   * 处理选择全部Provider点击\n   * @param selectAll\n   */\n  const handleSelectAllProviderClick = (selectAll: boolean) => {\n    if (selectAll) {\n      setIsOpenRfq(true)\n      const providersMap: Partial<Record<AggregatorProvider, boolean>> = {}\n      providers.forEach(item => (providersMap[item as AggregatorProvider] = true))\n\n      hiddenAggregators.forEach(item => {\n        if (providers.includes(item)) {\n          providersMap[item] = true\n        }\n      })\n\n      setCurrProvidersSwitchStates(providersMap)\n    } else {\n      setIsOpenRfq(false)\n      const providersMap: Partial<Record<AggregatorProvider, boolean>> = {}\n      providers.forEach(item => (providersMap[item as AggregatorProvider] = false))\n\n      hiddenAggregators.forEach(item => {\n        if (providers.includes(item)) {\n          providersMap[item] = false\n        }\n      })\n\n      setCurrProvidersSwitchStates({\n        ...providersMap,\n        [AggregatorProvider.CETUS]: true,\n        [AggregatorProvider.CETUSDLMM]: true\n      })\n    }\n  }\n\n  /**\n   * 处理选择全部Dex Provider点击\n   * @param selectAll\n   */\n  const handleSelectAllDexProviderClick = (selectAll: boolean) => {\n    if (selectAll) {\n      dexProviderList.forEach(item => {\n        if (item?.subItems) {\n          item.subItems.forEach(subItem => {\n            currProvidersSwitchStates[subItem.id as AggregatorProvider] = true\n          })\n        } else {\n          currProvidersSwitchStates[item.id as AggregatorProvider] = true\n        }\n      })\n    } else {\n      dexProviderList.forEach(item => {\n        if (item.id === AggregatorProvider.CETUS || item.id === AggregatorProvider.CETUSDLMM) {\n          currProvidersSwitchStates[item.id] = true\n        } else if (item?.subItems) {\n          item.subItems.forEach(subItem => {\n            currProvidersSwitchStates[subItem.id as AggregatorProvider] = false\n          })\n        } else {\n          currProvidersSwitchStates[item.id as AggregatorProvider] = false\n        }\n      })\n    }\n\n    setCurrProvidersSwitchStates({\n      ...currProvidersSwitchStates\n    })\n  }\n\n  /**\n   * 处理选择全部Other Provider点击\n   * @param selectAll\n   */\n  const handleSelectAllOtherProviderClick = (selectAll: boolean) => {\n    otherProviderList.forEach(item => {\n      if (item?.subItems) {\n        item.subItems.forEach(subItem => {\n          currProvidersSwitchStates[subItem.id as AggregatorProvider] = selectAll\n        })\n      } else {\n        currProvidersSwitchStates[item.id as AggregatorProvider] = selectAll\n      }\n    })\n\n    // HAWAL与HAEDAL LSD同步，单独处理\n\n    hiddenAggregators.forEach(item => {\n      if (providers.includes(item)) {\n        currProvidersSwitchStates[item] = selectAll\n      }\n    })\n\n    setCurrProvidersSwitchStates({\n      ...currProvidersSwitchStates\n    })\n  }\n\n  /**\n   * 单个Provider点击\n   * @param provider\n   * @param select\n   */\n  const handleProviderClick = (provider: AggregatorProvider, select: boolean) => {\n    currProvidersSwitchStates[provider] = select\n\n    mergeAggregators.forEach(item => {\n      if (provider === item.parent && providers.includes(item.child)) {\n        currProvidersSwitchStates[item.child] = select\n      }\n    })\n\n    setCurrProvidersSwitchStates({ ...currProvidersSwitchStates })\n  }\n\n  // 是否选择全部Dex\n  const selectAllDexProviders = useMemo(\n    () =>\n      dexProviderList.every(item => {\n        if (item?.subItems) {\n          return item.subItems.every(subItem => currProvidersSwitchStates[subItem.id as AggregatorProvider])\n        }\n        return currProvidersSwitchStates[item.id as AggregatorProvider]\n      }),\n    [JSON.stringify(dexProviderList), JSON.stringify(currProvidersSwitchStates)]\n  )\n  // 是否选择全部Other\n  const selectAllOtherProviders = useMemo(\n    () =>\n      otherProviderList.every(item => {\n        if (item?.subItems) {\n          return item.subItems.every(subItem => currProvidersSwitchStates[subItem.id as AggregatorProvider])\n        }\n        return currProvidersSwitchStates[item.id as AggregatorProvider]\n      }),\n    [JSON.stringify(otherProviderList), JSON.stringify(currProvidersSwitchStates)]\n  )\n\n  // 是否选择全部Providers\n  const selectAllProviders = useMemo(() => {\n    return selectAllDexProviders && selectAllOtherProviders\n  }, [selectAllDexProviders, selectAllOtherProviders])\n\n  /**\n   * 只选择cetus 才能输入对向amount\n   */\n  const isAllowInputReceiveSide = useMemo(() => {\n    return (\n      providers?.filter(item => {\n        return item !== AggregatorProvider.CETUS && !!currProvidersSwitchStates[item as AggregatorProvider]\n      }).length === 0\n    )\n  }, [currProvidersSwitchStates])\n\n  // 是否打开了AggregatorMode\n  const isOpenAggregatorMode = useMemo(() => {\n    return (\n      providers?.filter(item => {\n        return item !== AggregatorProvider.CETUS && item !== AggregatorProvider.CETUSDLMM && !!currProvidersSwitchStates[item as AggregatorProvider]\n      }).length >= 1 ||\n      (isOpenRfqSwitch && showRfqSwitch)\n    )\n  }, [currProvidersSwitchStates, providers, isOpenRfqSwitch])\n  // 点击保存确认\n  const handleSaveClick = () => {\n    if (showRfqSwitch) {\n      setIsOpenRfqSwitch(isOpenRfq)\n    }\n\n    setProvidersSwitchStates({ ...currProvidersSwitchStates })\n  }\n\n  const hasRfqProvider = useMemo(() => {\n    // return rfqConfigs?.enable || false\n    // 默认始终展示rfq 开关\n    return true\n  }, [rfqConfigs])\n\n  const allSourceNum = useMemo(() => {\n    const allSourceNum = providers?.filter(item => !hiddenAggregators.includes(item as AggregatorProvider))?.length\n    return hasRfqProvider && showRfqSwitch ? allSourceNum + 1 : allSourceNum\n  }, [providers?.length, hasRfqProvider])\n\n  const dexSourceNumMap = useMemo(() => {\n    return {\n      checked: getCheckedNum(dexProviderList, currProvidersSwitchStates),\n      total: getSourceNum(dexProviderList)\n    }\n  }, [dexProviderList, currProvidersSwitchStates])\n\n  const otherSourceNumMap = useMemo(() => {\n    return {\n      checked: getCheckedNum(otherProviderList, currProvidersSwitchStates),\n      total: getSourceNum(otherProviderList)\n    }\n  }, [otherProviderList, currProvidersSwitchStates])\n\n  return {\n    handleSelectAllProviderClick,\n    handleSelectAllDexProviderClick,\n    handleSelectAllOtherProviderClick,\n    handleProviderClick,\n    selectAllProviders,\n    selectAllDexProviders,\n    otherProviderList,\n    selectAllOtherProviders,\n    dexProviderList,\n    currProvidersSwitchStates,\n    providersSwitchStates,\n    isOpenAggregatorMode,\n    handleSaveClick,\n    allSourceNum,\n    dexSourceNumMap,\n    otherSourceNumMap,\n    isOpenRfq,\n    setIsOpenRfq,\n    hasRfqProvider,\n    isAllowInputReceiveSide\n  }\n}\n","import { TooltipIcon } from '@cetus/design'\nimport { HStack, Image, Text } from '@chakra-ui/react'\nimport { FC } from 'react'\n\ninterface RfqLogoTitleProps {\n  title?: string\n  marginTop?: string\n  showTooltipIcon?: boolean\n  bg_color?: string\n  tx_bg_color?: string\n  font_size?: string\n}\n\nexport const RfqLogoTitle: FC<RfqLogoTitleProps> = ({\n  title = 'Cetus Tide',\n  marginTop = '0px',\n  showTooltipIcon = false,\n  bg_color = 'transparent',\n  tx_bg_color,\n  font_size = '14px'\n}) => {\n  return (\n    <HStack bg={bg_color} p=\"0px\" pr=\"6px\" borderRadius=\"12px\">\n      <TooltipIcon\n        tooltipCon=\"Cetus Tide enables zero-slippage swaps through a unique RFQ model powered by pro market makers. It compares quotes with aggregator prices and pops up when offering a better rate.\"\n        showTooltipIcon={showTooltipIcon}\n        children={\n          <HStack gap=\"4px\" mt={marginTop} cursor=\"pointer\" mr=\"5px\">\n            <Image src=\"/images/rfq_logo@2x.png\" boxSize=\"24px\" />\n            <Text\n              textColor=\"text_caption\"\n              fontSize={font_size}\n              fontWeight=\"500\"\n              whiteSpace=\"nowrap\"\n              bgGradient={tx_bg_color}\n              bgClip={tx_bg_color ? 'text' : 'transparent'}\n            >\n              {title}\n            </Text>\n          </HStack>\n        }\n      />\n    </HStack>\n  )\n}\n","import { Switch, SwitchProps } from '@chakra-ui/react'\nimport { useTimeout } from 'ahooks'\nimport { useEffect, useState } from 'react'\n\nfunction AggregatorSwitch(props: SwitchProps) {\n  const [isAnimated, setIsAnimated] = useState(false)\n\n  const clear = useTimeout(() => {\n    setIsAnimated(true)\n  }, 300)\n  useEffect(() => {\n    return () => clear()\n  }, [])\n  return (\n    <Switch\n      sx={{\n        '.chakra-switch__track': {\n          p: '0px',\n          transitionDuration: isAnimated ? 'var(--chakra-transition-duration-fast) !important' : '0s'\n        },\n        '.chakra-switch__thumb': {\n          transitionDuration: isAnimated ? 'var(--chakra-transition-duration-normal) !important' : '0s'\n        }\n      }}\n      {...props}\n    />\n  )\n}\n\nexport default AggregatorSwitch\n","import { Icon } from '@cetus/ui-kit'\nimport { Button, HStack, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalHeader, ModalOverlay, Text } from '@chakra-ui/react'\n\ninterface ConfirmModalProps {\n  isOpen: boolean\n  onOk: () => void\n  onClose: () => void\n}\n\nfunction ConfirmModal({ isOpen, onOk, onClose }: ConfirmModalProps) {\n  return (\n    <Modal autoFocus={false} returnFocusOnClose={false} isOpen={isOpen} onClose={onClose} isCentered>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>Tips</ModalHeader>\n        <ModalCloseButton />\n        <ModalBody>\n          <HStack>\n            <Icon xlinkHref=\"#icon-icon_tips\" svgHover=\"text_paragraph\" cursor=\"default\" />\n            <Text color=\"text_caption\">Do you want to save your changes?</Text>\n          </HStack>\n        </ModalBody>\n\n        <ModalFooter gap=\"16px\">\n          <Button flex=\"1\" onClick={onOk} h=\"40px\" borderRadius=\"8px\">\n            Confirm\n          </Button>\n          <Button flex=\"1\" variant=\"outline\" h=\"40px\" borderRadius=\"8px\" onClick={onClose}>\n            No\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  )\n}\n\nexport default ConfirmModal\n","import { HStack, Text } from '@chakra-ui/react'\n\ntype NumBoxProps = {\n  num: number\n  total?: number\n}\n\nfunction NumBox({ num, total }: NumBoxProps) {\n  return (\n    <HStack h=\"16px\" lineHeight=\"16px\" p=\"2px 8px\" borderRadius=\"8px\" bg=\"aggregator_switch\" gap=\"0px\">\n      <Text as=\"div\" display=\"inline-block\" fontSize=\"10px\" h=\"10px\" lineHeight=\"10px\" color=\"primary\">\n        {num}&nbsp;\n      </Text>\n      {total !== undefined && (\n        <Text as=\"div\" display=\"inline-block\" fontSize=\"10px\" h=\"10px\" lineHeight=\"10px\" color=\"text_paragraph\">\n          / {total}\n        </Text>\n      )}\n    </HStack>\n  )\n}\n\nexport default NumBox\n","import { HStack, SwitchProps } from '@chakra-ui/react'\nimport { RfqLogoTitle } from '../rfq/RfqLogoTitle'\nimport AggregatorSwitch from './AggregatorSwitch'\n\nfunction RfqSwitch(props: SwitchProps) {\n  const { isChecked, onChange } = props\n  return (\n    <HStack\n      mt=\"-8px\"\n      mb=\"-8px\"\n      w=\"100%\"\n      justify=\"space-between\"\n      h=\"52px\"\n      border=\"1px solid\"\n      borderColor=\"transparent\"\n      borderBottomColor=\"border\"\n      borderTopColor=\"border\"\n    >\n      <RfqLogoTitle showTooltipIcon={true} />\n\n      <AggregatorSwitch isChecked={isChecked} onChange={onChange} />\n    </HStack>\n  )\n}\n\nexport default RfqSwitch\n","import useCustomizeRouting from '@/hooks/swap/useCustomizeRouting'\nimport { TooltipIcon } from '@cetus/design'\nimport { Icon } from '@cetus/ui-kit'\nimport { d } from '@cetusprotocol/common-sdk'\nimport {\n  Button,\n  Divider,\n  Grid,\n  GridItem,\n  HStack,\n  Modal,\n  ModalBody,\n  ModalContent,\n  ModalFooter,\n  ModalHeader,\n  ModalOverlay,\n  Skeleton,\n  Stack,\n  Text,\n  VStack\n} from '@chakra-ui/react'\nimport { isEqual } from 'lodash-es'\nimport { lazy, memo, Suspense, useState } from 'react'\nimport AggregatorSwitch from './AggregatorSwitch'\nimport ConfirmModal from './ConfirmModal'\nimport NumBox from './NumBox'\nimport RfqSwitch from './RfqSwitch'\nconst SourceGrid = lazy(() => import('./SourceGrid'))\n\ninterface AggregatorModeProps {\n  isOpen: boolean\n  showRfqSwitch: boolean\n  onClose(): void\n}\n\nconst AggregatorModeModal = ({ isOpen, onClose, showRfqSwitch }: AggregatorModeProps) => {\n  const [confirmModalOpen, setConfirmModalOpen] = useState(false)\n\n  const {\n    handleSelectAllProviderClick,\n    handleSelectAllDexProviderClick,\n    handleSelectAllOtherProviderClick,\n    handleProviderClick,\n    selectAllProviders,\n    selectAllDexProviders,\n    otherProviderList,\n    selectAllOtherProviders,\n    dexProviderList,\n    currProvidersSwitchStates,\n    providersSwitchStates,\n    handleSaveClick,\n    allSourceNum,\n    dexSourceNumMap,\n    otherSourceNumMap,\n    isOpenRfq,\n    setIsOpenRfq,\n    hasRfqProvider\n  } = useCustomizeRouting(showRfqSwitch)\n  const handleClose = () => {\n    if (isEqual(providersSwitchStates, currProvidersSwitchStates)) {\n      onClose()\n    } else {\n      setConfirmModalOpen(true)\n    }\n  }\n  return (\n    <>\n      <Modal autoFocus={false} returnFocusOnClose={false} isOpen={isOpen} onClose={handleClose} isCentered>\n        <ModalOverlay />\n        <ModalContent bg=\"background\" w={{ base: 'calc(100vw - 16px)', lg: '540px' }} maxW=\"unset\">\n          <ModalHeader>\n            <HStack w=\"100%\" justify=\"space-between\">\n              <Text fontSize=\"16px\" fontWeight=\"500\" color=\"text_caption\">\n                Aggregator Settings\n              </Text>\n              <Icon xlinkHref=\"#icon-icon_close\" onClick={handleClose} />\n            </HStack>\n          </ModalHeader>\n\n          <ModalBody>\n            <VStack w=\"100%\" gap=\"24px\">\n              <HStack w=\"100%\" justify=\"space-between\" align=\"flex-end\">\n                <VStack w=\"100%\" gap=\"8px\" align=\"flex-start\">\n                  <HStack gap=\"4px\">\n                    <Text fontSize=\"16px\" color=\"text_caption\" fontWeight=\"500\">\n                      Liquidity Sources\n                    </Text>\n                    <TooltipIcon tooltipCon=\"Your trade is routed through one or more of these liquidity sources.\" />\n                  </HStack>\n                  <Text lineHeight={{ base: '12px', lg: '14px' }} fontSize={{ base: '12px', lg: '14px' }}>\n                    Disable/Enable Liquidity Sources\n                  </Text>\n                </VStack>\n\n                <VStack align=\"flex-end\" flex=\"0 0 108px\">\n                  <Text>Select all</Text>\n                  <HStack justifyContent=\"flex-end\" h=\"16px\" gap=\"4px\">\n                    <NumBox\n                      num={d(dexSourceNumMap?.checked || 0)\n                        .plus(otherSourceNumMap?.checked || 0)\n                        .plus(hasRfqProvider && isOpenRfq && showRfqSwitch ? 1 : 0)\n                        .toNumber()}\n                      total={allSourceNum}\n                    />\n                    <AggregatorSwitch\n                      id=\"select-all\"\n                      isChecked={!!selectAllProviders}\n                      onChange={() => handleSelectAllProviderClick(!selectAllProviders)}\n                    />\n                  </HStack>\n                </VStack>\n              </HStack>\n\n              {hasRfqProvider && showRfqSwitch && (\n                <RfqSwitch\n                  id=\"rfq-switch\"\n                  isChecked={isOpenRfq}\n                  onChange={() => {\n                    setIsOpenRfq(!isOpenRfq)\n                  }}\n                />\n              )}\n              <Stack\n                flexDir=\"column\"\n                w=\"100%\"\n                p=\"0\"\n                gap=\"20px\"\n                align=\"flex-start\"\n                maxH={{ base: 'calc(100vh - 280px)', lg: '600px' }}\n                overflow=\"hidden\"\n              >\n                <Suspense fallback={<ListSkeleton />}>\n                  <SourceGrid\n                    title=\"Dex\"\n                    isAllChecked={selectAllDexProviders}\n                    onAllSelect={() => handleSelectAllDexProviderClick(!selectAllDexProviders)}\n                    onItemSelect={handleProviderClick}\n                    list={dexProviderList}\n                    checkedMap={currProvidersSwitchStates}\n                    totalNum={dexSourceNumMap?.total}\n                    checkedNum={dexSourceNumMap?.checked}\n                  />\n                </Suspense>\n                <Divider orientation=\"horizontal\" />\n                <Suspense fallback={<ListSkeleton />}>\n                  <SourceGrid\n                    title=\"Other\"\n                    isAllChecked={selectAllOtherProviders}\n                    onAllSelect={() => handleSelectAllOtherProviderClick(!selectAllOtherProviders)}\n                    onItemSelect={handleProviderClick}\n                    list={otherProviderList}\n                    checkedMap={currProvidersSwitchStates}\n                    totalNum={otherSourceNumMap?.total}\n                    checkedNum={otherSourceNumMap?.checked}\n                  />\n                </Suspense>\n              </Stack>\n            </VStack>\n          </ModalBody>\n\n          <ModalFooter gap=\"16px\" p=\"8px 16px 16px\">\n            <Button flex=\"1\" variant=\"outline\" p=\"0 15px\" onClick={onClose}>\n              Cancel\n            </Button>\n            <Button\n              flex=\"1\"\n              onClick={() => {\n                handleSaveClick()\n                onClose()\n              }}\n            >\n              Save\n            </Button>\n          </ModalFooter>\n        </ModalContent>\n      </Modal>\n      {confirmModalOpen && (\n        <ConfirmModal\n          isOpen={confirmModalOpen}\n          onClose={() => {\n            setConfirmModalOpen(false)\n            onClose()\n          }}\n          onOk={() => {\n            handleSaveClick()\n            setConfirmModalOpen(false)\n            onClose()\n          }}\n        />\n      )}\n    </>\n  )\n}\n\nfunction ListSkeleton() {\n  return (\n    <Grid\n      w=\"100%\"\n      templateColumns={{ base: 'repeat(2, 1fr)', lg: 'repeat(3, 1fr)' }}\n      maxH={{ base: 'unset', lg: '152px' }}\n      overflow=\"scroll\"\n      gap=\"8px\"\n    >\n      {[1, 2, 3, 4, 5, 6, 7, 8, 9]?.map(item => (\n        <GridItem key={item}>\n          <Skeleton w=\"100%\" h=\"36px\" />\n        </GridItem>\n      ))}\n    </Grid>\n  )\n}\n\nexport default memo(AggregatorModeModal)\n"],"file":"assets/AggregatorModal-BXy3XOgD.js"}