{"version":3,"file":"useGetTvlInfo-DD8PUvH9.js","sources":["../../src/store/clmm/liquidityTvl.ts","../../src/hooks/clmm/useGetTvlInfo.ts"],"sourcesContent":["import { CoinPrice } from '@cetus/types'\nimport { d } from '@cetus/utils'\nimport { create, StateCreator } from 'zustand'\n\ninterface TvlInfoState {\n  tokenAPrice: CoinPrice | undefined\n  setTokenAPrice: (price: CoinPrice | undefined) => void\n  tokenBPrice: CoinPrice | undefined\n  setTokenBPrice: (price: CoinPrice | undefined) => void\n  tokenAAmount: string\n  setTokenAAmount: (value: string) => void\n  tokenBAmount: string\n  setTokenBAmount: (value: string) => void\n  tokenAAmountUSD: string\n  setTokenAAmountUSD: (value: string) => void\n  tokenBAmountUSD: string\n  setTokenBAmountUSD: (value: string) => void\n  totalAmountUSD: string\n  setTotalAmountUSD: (value: string) => void\n  tvlLoading: boolean\n  setTvlLoading: (value: boolean) => void\n  resetTvlInfo: () => void\n}\n\nconst store: StateCreator<TvlInfoState> = (set, get) => ({\n  tokenAPrice: undefined,\n  setTokenAPrice: (value: CoinPrice | undefined) => {\n    set(() => ({\n      tokenAPrice: value\n    }))\n  },\n  tokenBPrice: undefined,\n  setTokenBPrice: (value: CoinPrice | undefined) => {\n    set(() => ({\n      tokenBPrice: value\n    }))\n  },\n  tokenAAmount: '',\n  setTokenAAmount: (value: string) => {\n    set(() => ({\n      tokenAAmount: d(value).lt(0) ? '0' : value\n    }))\n  },\n  tokenBAmount: '',\n  setTokenBAmount: (value: string) => {\n    set(() => ({\n      tokenBAmount: d(value).lt(0) ? '0' : value\n    }))\n  },\n  tokenAAmountUSD: '',\n  setTokenAAmountUSD: (value: string) => {\n    set(() => ({\n      tokenAAmountUSD: value\n    }))\n  },\n  tokenBAmountUSD: '',\n  setTokenBAmountUSD: (value: string) => {\n    set(() => ({\n      tokenBAmountUSD: value\n    }))\n  },\n  totalAmountUSD: '',\n  setTotalAmountUSD: (value: string) => {\n    set(() => ({\n      totalAmountUSD: value\n    }))\n  },\n  tvlLoading: true,\n  setTvlLoading: (value: boolean) => {\n    set(() => ({\n      tvlLoading: value\n    }))\n  },\n  resetTvlInfo: () => {\n    set(() => ({\n      tokenAPrice: undefined,\n      tokenBPrice: undefined,\n      tokenAAmount: '',\n      tokenBAmount: '',\n      tokenAAmountUSD: '',\n      tokenBAmountUSD: '',\n      totalAmountUSD: ''\n    }))\n  }\n})\n\nconst useTvlInfoStore = create(store)\nexport default useTvlInfoStore\n","import useLiquidityStore from '@/store/clmm'\nimport useTvlInfoStore from '@/store/clmm/liquidityTvl'\nimport useQueryParams from '@cetus/hooks/src/useQueryParams'\nimport envConfigs from '@cetus/types/src/config/envConfigs'\nimport { d, fetchGet } from '@cetus/utils'\nimport { extractStructTagFromType } from '@cetusprotocol/common-sdk'\nimport { useEffect } from 'react'\n\nconst getTokenUSD = (amount: string | undefined, price: string | undefined, decimals: string | number | undefined) => {\n  if (amount && price && decimals) {\n    return d(amount).mul(price).div(d(10).pow(decimals)).toString()\n  }\n  return '--'\n}\n\nfunction useGetTvlInfo() {\n  const {\n    tokenAPrice,\n    setTokenAPrice,\n    tokenBPrice,\n    setTokenBPrice,\n    tokenAAmount,\n    setTokenAAmount,\n    tokenBAmount,\n    setTokenBAmount,\n    tokenAAmountUSD,\n    setTokenAAmountUSD,\n    tokenBAmountUSD,\n    setTokenBAmountUSD,\n    totalAmountUSD,\n    setTotalAmountUSD,\n    resetTvlInfo,\n    tvlLoading,\n    setTvlLoading\n  } = useTvlInfoStore()\n  const { apiPoolInfo, contractPoolInfo } = useLiquidityStore()\n\n  const getTokenPrice = async (coinType: string) => {\n    try {\n      const fullAddress = extractStructTagFromType(coinType)?.full_address\n      const normalizeCoinType =\n        fullAddress == '0x2::sui::SUI' ? '0x0000000000000000000000000000000000000000000000000000000000000002::sui::SUI' : fullAddress\n\n      const { prices } = await fetchGet(`${envConfigs?.cetus_api}/v3/sui/market_price?base_symbol_address=${normalizeCoinType}`)\n      const rate = prices?.[0]\n      return rate\n    } catch (error) {\n      console.log('ðŸš€ðŸš€ðŸš€ ~ file: useRate.ts:31 ~ getAmountPrice ~ error:', error)\n      return '--'\n    }\n  }\n\n  const { poolAddress } = useQueryParams()\n\n  const handleRefresh = async () => {\n    setTvlLoading(true)\n    try {\n      if (apiPoolInfo?.tokenA?.coin_type) {\n        const _tokenAPrice = await getTokenPrice(apiPoolInfo?.tokenA?.coin_type)\n        if (_tokenAPrice) {\n          setTokenAPrice(_tokenAPrice)\n        }\n      }\n      if (apiPoolInfo?.tokenB?.coin_type) {\n        const _tokenBPrice = await getTokenPrice(apiPoolInfo?.tokenB?.coin_type)\n        if (_tokenBPrice) {\n          setTokenBPrice(_tokenBPrice)\n        }\n      }\n    } catch (error) {\n      console.log('ðŸš€ ~ PoolInfo ~ handleRefresh:', error)\n    } finally {\n      setTvlLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    resetTvlInfo()\n  }, [poolAddress])\n\n  useEffect(() => {\n    return () => {\n      resetTvlInfo()\n    }\n  }, [])\n\n  useEffect(() => {\n    handleRefresh()\n  }, [apiPoolInfo?.tvl, apiPoolInfo?.tokenA?.coin_type, apiPoolInfo?.tokenB?.coin_type])\n\n  useEffect(() => {\n    if (contractPoolInfo?.coinAmountA) {\n      setTokenAAmount(\n        d(contractPoolInfo?.coinAmountA)\n          .sub(contractPoolInfo?.fee_protocol_coin_a || '0')\n          .toString()\n      )\n    }\n  }, [contractPoolInfo?.coinAmountA, contractPoolInfo?.fee_protocol_coin_a, poolAddress])\n\n  useEffect(() => {\n    if (contractPoolInfo?.coinAmountB) {\n      setTokenBAmount(\n        d(contractPoolInfo?.coinAmountB)\n          .sub(contractPoolInfo?.fee_protocol_coin_b || '0')\n          .toString()\n      )\n    }\n  }, [contractPoolInfo?.coinAmountB, contractPoolInfo?.fee_protocol_coin_b, poolAddress])\n\n  useEffect(() => {\n    if (tokenAAmount && tokenAPrice?.price && apiPoolInfo?.tokenA.decimals && !Number.isNaN(Number(apiPoolInfo?.tokenA.decimals))) {\n      setTokenAAmountUSD(getTokenUSD(tokenAAmount, tokenAPrice?.price, apiPoolInfo?.tokenA.decimals))\n    }\n  }, [tokenAAmount, tokenAPrice])\n\n  useEffect(() => {\n    if (tokenBAmount && tokenBPrice?.price && apiPoolInfo?.tokenB.decimals && !Number.isNaN(Number(apiPoolInfo?.tokenB.decimals))) {\n      setTokenBAmountUSD(getTokenUSD(tokenBAmount, tokenBPrice?.price, apiPoolInfo?.tokenB.decimals))\n    }\n  }, [tokenBAmount, tokenBPrice])\n\n  useEffect(() => {\n    if ((tokenAAmountUSD || tokenBAmountUSD) && tokenAAmountUSD !== '--' && tokenBAmountUSD !== '--') {\n      setTotalAmountUSD(\n        d(tokenAAmountUSD || 0)\n          .plus(tokenBAmountUSD || 0)\n          .toString()\n      )\n    } else {\n      setTotalAmountUSD('--')\n    }\n  }, [tokenAAmountUSD, tokenBAmountUSD])\n  return {\n    tokenAPrice,\n    tokenBPrice,\n    tokenAAmount,\n    tokenBAmount,\n    tokenAAmountUSD,\n    tokenBAmountUSD,\n    totalAmountUSD,\n    setTotalAmountUSD,\n    tvlLoading\n  }\n}\n\nexport default useGetTvlInfo\n"],"names":["store","set","get","value","d","useTvlInfoStore","create","getTokenUSD","amount","price","decimals","useGetTvlInfo","tokenAPrice","setTokenAPrice","tokenBPrice","setTokenBPrice","tokenAAmount","setTokenAAmount","tokenBAmount","setTokenBAmount","tokenAAmountUSD","setTokenAAmountUSD","tokenBAmountUSD","setTokenBAmountUSD","totalAmountUSD","setTotalAmountUSD","resetTvlInfo","tvlLoading","setTvlLoading","apiPoolInfo","contractPoolInfo","useLiquidityStore","getTokenPrice","coinType","fullAddress","extractStructTagFromType","normalizeCoinType","prices","fetchGet","_b","envConfigs","error","poolAddress","useQueryParams","handleRefresh","_a","_tokenAPrice","_c","_tokenBPrice","_d","useEffect"],"mappings":"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"}