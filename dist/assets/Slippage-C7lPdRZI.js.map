{"version":3,"file":"Slippage-C7lPdRZI.js","sources":["../../../cetus-design/src/components/common/SlippageSetting.tsx","../../src/components/common/Slippage.tsx"],"sourcesContent":["import SelectTab from './SelectTab'\nimport TooltipIcon from './TooltipIcon'\n// import useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport { useGetTokenBalance } from '@cetus/hooks/src/useTokenBalance'\nimport { Icon } from '@cetus/ui-kit'\nimport { d } from '@cetus/utils'\nimport {\n  Box,\n  Button,\n  Center,\n  Flex,\n  HStack,\n  Image,\n  Input,\n  InputGroup,\n  InputGroupProps,\n  InputRightElement,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n  Switch,\n  Text,\n  VStack\n} from '@chakra-ui/react'\nimport { useEffect, useMemo, useState } from 'react'\nimport CetusTooltip from './CetusTooltip'\n\nconst SUI = {\n  id: '0x9258181f5ceac8dbffb7030890243caed69a9599d2886d957a9cb7656af3bdb3',\n  coin_type: '0x2::sui::SUI',\n  decimals: 9,\n  description: '',\n  name: 'Sui',\n  symbol: 'SUI',\n  logo_url: 'https://archive.cetus.zone/assets/image/sui/sui.png',\n  is_verified: true,\n  extensions: {\n    rank: '880'\n  }\n}\n\nexport type SlippageType = 'global' | 'vaults' | 'zap' | 'liquidity' | 'cross' | 'deepbook' | 'merge_swap'\n\nexport type PoolType = 'clmm' | 'dlmm'\n\ninterface SlippageSettingProps {\n  slippageType?: SlippageType\n  poolType?: PoolType\n  isOpen: boolean\n  onClose: () => void\n  value: number\n  onChange: (slippage: number) => void\n  transactionMode: any\n  onChangeTransactionMode: (value: any) => void\n  maxCapForGas: string\n  onChangeMaxCapForGas: (value: string) => void\n  customGasPrice: string\n  onChangeCustomGasPrice: (value: string) => void\n  mevProtect: boolean\n  onChangeMevProtect: (value: boolean) => void\n  compact?: boolean\n  isWidget?: boolean\n  maxSlippage?: number\n  minSlippage?: number\n  showFastMode?: boolean\n}\n\nexport default function SlippageSetting(props: SlippageSettingProps) {\n  const { isOpen, onClose, showFastMode = true } = props\n\n  return (\n    <Modal autoFocus={false} returnFocusOnClose={false} isOpen={isOpen} onClose={onClose} isCentered>\n      <ModalOverlay className=\"test-slippage-modal\" />\n      <ModalContent>\n        <ModalHeader fontSize=\"16px\" fontWeight=\"500\">\n          Settings\n        </ModalHeader>\n        <ModalCloseButton />\n        <ModalBody pb=\"16px\">\n          <SlippageSettingContent {...props} />\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  )\n}\n\nexport const SlippageSettingContent = (props: SlippageSettingProps) => {\n  const {\n    isOpen,\n    onClose,\n    value,\n    onChange,\n    compact = false,\n    slippageType = 'global',\n    isWidget = false,\n    transactionMode,\n    onChangeTransactionMode,\n    maxCapForGas,\n    onChangeMaxCapForGas,\n    mevProtect,\n    onChangeMevProtect,\n    customGasPrice,\n    onChangeCustomGasPrice,\n    maxSlippage = 50,\n    minSlippage = 0.01,\n    poolType,\n    showFastMode = true\n  } = props\n  const defaultFeeList = ['0.1', '0.5', '1']\n  const [inputValue, setInputValue] = useState('')\n  const [isCapture, setIsCapture] = useState(false)\n  const { balanceInfo: suiBalance } = useGetTokenBalance(SUI)\n\n  // transactionMode,\n  //   handleChangeTransctionMode,\n  //   maxCapForGas,\n  //   handleChangeMaxCapForGas\n\n  const [tsMode, setTsMode] = useState(transactionMode)\n  const [maxGas, setMaxGas] = useState(maxCapForGas)\n  const [gasPrice, setGasPrice] = useState(customGasPrice)\n  const [mev, setMev] = useState(mevProtect)\n\n  // useEffect(() => {\n  //   setTsMode(transactionMode)\n  //   setMaxGas(maxCapForGas)\n  //   setMev(mevProtect)\n  // }, [])\n\n  const handleChange = (e: any) => {\n    const reg = new RegExp('[^\\\\d-]*(\\\\d*(?:\\\\.\\\\d{0,2})?).*$')\n    e.target.value = e.target.value.replace(reg, '$1')\n    setInputValue(e.target.value)\n  }\n\n  const selectValue = (value: string) => {\n    setInputValue(value)\n  }\n\n  useEffect(() => {\n    if (value) {\n      setInputValue(String(value))\n    }\n  }, [value])\n\n  useEffect(() => {\n    if (value) {\n      setInputValue(String(value))\n    }\n  }, [isOpen])\n\n  const handleConfirm = () => {\n    if (inputValue) {\n      const s = d(inputValue).toNumber()\n      onChange(s)\n    }\n\n    if (tsMode === 'Fast Mode') {\n      onChangeMaxCapForGas(maxGas)\n      onChangeCustomGasPrice(gasPrice)\n    }\n\n    onChangeTransactionMode(tsMode)\n    onChangeMevProtect(mev)\n    onClose()\n  }\n\n  const btnIsDisabled = useMemo(() => {\n    console.log('🚀 ~ btnIsDisabled ~ gasPrice:', gasPrice)\n    if (\n      tsMode === 'Fast Mode' &&\n      (!maxGas ||\n        Number(maxGas) === 0 ||\n        Number(maxGas) > 5 ||\n        !gasPrice ||\n        Number(gasPrice) === 0 ||\n        d(maxGas).gt(suiBalance?.balanceFormat || '0') ||\n        d(maxGas).lt(d(gasPrice).div(Math.pow(10, 9))))\n    ) {\n      return true\n    }\n\n    if (!+inputValue) {\n      return true\n    }\n\n    if (slippageType !== 'vaults') {\n      return Number(inputValue) > maxSlippage || Number(inputValue) < minSlippage\n      // if value equals last value then disabled\n      // return Number(inputValue) > 50 || Number(inputValue) < 0.01 || d(value).equals(inputValue)\n    }\n    return Number(inputValue) > 1\n    // if value equals last value then disabled\n    // return Number(inputValue) > 1 || d(value).equals(inputValue)\n  }, [slippageType, inputValue, tsMode, maxGas, gasPrice, suiBalance])\n\n  return (\n    <Box w=\"100%\">\n      <Box>\n        <HStack mb=\"16px\">\n          <Icon xlinkHref=\"#icon-icon_verticalslider\" svgHover=\"text_paragraph\" iconCursor=\"text\" />\n          <Text color=\"text_caption\" fontSize=\"14px\" fontWeight=\"500\">\n            {['global', 'zap'].includes(slippageType)\n              ? 'Swap Slippage Tolerance'\n              : slippageType === 'liquidity' && poolType === 'dlmm'\n                ? 'Liquidity Slippage Tolerance'\n                : 'Slippage Tolerance'}\n          </Text>\n          {poolType === 'dlmm' && (\n            <CetusTooltip\n              tooltip={\n                <Text fontSize=\"12px\" lineHeight=\"20px\">\n                  The max price fluctuation you accept when adding/removing liquidity. Your txn will be reverted if the price changes by more than\n                  this percentage during the execution.\n                </Text>\n              }\n            >\n              <Box cursor=\"pointer\">\n                <Icon xlinkHref=\"#icon-icon_tips\" fontSize=\"20px\" />\n              </Box>\n            </CetusTooltip>\n          )}\n        </HStack>\n        <Box\n          bg={\n            compact\n              ? slippageType !== 'vaults'\n                ? Number(inputValue) > 50\n                  ? 'primary_red_opacity.10'\n                  : 'primary_yellow_opacity.10'\n                : Number(inputValue) > 1\n                  ? 'primary_red_opacity.10'\n                  : 'transparent'\n              : 'transparent'\n          }\n          borderRadius=\"12px\"\n        >\n          <HStack gap=\"8px\" mt=\"8px\">\n            <Flex\n              w=\"100%\"\n              justifyContent=\"center\"\n              alignItems=\"center\"\n              borderRadius=\"12px\"\n              border=\"1px solid\"\n              borderColor=\"border\"\n              background=\"bg_secondary\"\n              h=\"40px\"\n              p=\"4px\"\n            >\n              {defaultFeeList.map(item => {\n                return (\n                  <Center\n                    flex=\"1\"\n                    bg={item === String(inputValue) ? 'card_bg !important' : 'transparent'}\n                    key={item}\n                    cursor=\"pointer\"\n                    h=\"100%\"\n                    borderRadius=\"8px\"\n                    sx={{\n                      _hover: {\n                        p: {\n                          color: 'text_highlight'\n                        }\n                      }\n                    }}\n                    onClick={() => selectValue(item)}\n                  >\n                    <Text color={item === String(inputValue) ? 'text_highlight' : 'text_paragraph'}>{item}%</Text>\n                  </Center>\n                )\n              })}\n            </Flex>\n            <CustomInput\n              compact\n              inputValue={inputValue}\n              handleChange={handleChange}\n              wrapStyle={{\n                flex: '0 0 150px',\n                borderRadius: '12px'\n              }}\n            />\n          </HStack>\n          {inputValue && slippageType !== 'vaults' && (Number(inputValue) > 1 || Number(inputValue) < 0.05) ? (\n            <Flex w=\"100%\">\n              {Number(inputValue) < 0.05 ? (\n                <Flex\n                  w=\"100%\"\n                  justifyContent=\"center\"\n                  pt=\"8px\"\n                  pb=\"8px\"\n                  mt=\"8px\"\n                  borderRadius=\"8px\"\n                  bg={compact ? 'transparent' : 'primary_yellow_opacity.10'}\n                >\n                  <Text fontSize=\"xs\" color=\"primary_yellow\" ml=\"4px\">\n                    Slippage is low. Your transaction may fail.\n                  </Text>\n                </Flex>\n              ) : null}\n              {slippageType !== 'cross' && Number(inputValue) <= maxSlippage && Number(inputValue) > 1 ? (\n                <Flex\n                  w=\"100%\"\n                  justifyContent=\"center\"\n                  pt=\"8px\"\n                  pb=\"8px\"\n                  mt=\"8px\"\n                  borderRadius=\"8px\"\n                  bg={compact ? 'transparent' : 'primary_yellow_opacity.10'}\n                >\n                  <Text fontSize=\"xs\" color=\"primary_yellow\" ml=\"4px\">\n                    Your transaction may be frontrun.\n                  </Text>\n                </Flex>\n              ) : null}\n              {slippageType === 'cross' && Number(inputValue) <= maxSlippage && Number(inputValue) > 3 ? (\n                <Flex\n                  w=\"100%\"\n                  justifyContent=\"center\"\n                  pt=\"8px\"\n                  pb=\"8px\"\n                  mt=\"8px\"\n                  borderRadius=\"8px\"\n                  bg={compact ? 'transparent' : 'primary_yellow_opacity.10'}\n                >\n                  <Text fontSize=\"xs\" color=\"primary_yellow\" ml=\"4px\">\n                    Your transaction may be frontrun.\n                  </Text>\n                </Flex>\n              ) : null}\n              {Number(inputValue) > maxSlippage ? (\n                <Flex\n                  w=\"100%\"\n                  justifyContent=\"center\"\n                  pt=\"8px\"\n                  pb=\"8px\"\n                  mt=\"8px\"\n                  borderRadius=\"8px\"\n                  bg={compact ? 'transparent' : 'primary_red_opacity.10'}\n                >\n                  <Text fontSize=\"xs\" color=\"primary_red\" ml=\"4px\">\n                    Enter a valid slippage percentage\n                  </Text>\n                </Flex>\n              ) : null}\n            </Flex>\n          ) : null}\n\n          {inputValue && slippageType === 'vaults' && Number(inputValue) > 1 ? (\n            <Flex w=\"100%\">\n              {Number(inputValue) > 1 ? (\n                <Flex\n                  w=\"100%\"\n                  justifyContent=\"center\"\n                  pt=\"8px\"\n                  pb=\"8px\"\n                  mt=\"8px\"\n                  borderRadius=\"8px\"\n                  bg={compact ? 'transparent' : 'primary_red_opacity.10'}\n                >\n                  <Text fontSize=\"xs\" color=\"primary_red\" ml=\"4px\">\n                    Enter a valid slippage percentage\n                  </Text>\n                </Flex>\n              ) : null}\n            </Flex>\n          ) : null}\n        </Box>\n\n        {slippageType !== 'zap' && slippageType !== 'cross' && slippageType !== 'deepbook' && (\n          <>\n            {poolType !== 'dlmm' && showFastMode && (\n              <TransactionModeSettings\n                transactionMode={tsMode}\n                setTransactionMode={value => {\n                  setTsMode(value)\n                  if (value === 'Fast Mode') {\n                    setMev(true)\n                  }\n                }}\n                maxCapForGas={maxGas}\n                setMaxCapForGas={setMaxGas}\n                customGasPrice={gasPrice}\n                setCustomGasPrice={setGasPrice}\n                suiBalance={suiBalance?.balanceFormat || '0'}\n              />\n            )}\n\n            <MevProtectSettings\n              mevProtect={mev}\n              setMevProtect={setMev}\n              disabled={poolType === 'dlmm' || !showFastMode ? false : tsMode === 'Fast Mode'}\n            />\n          </>\n        )}\n      </Box>\n\n      <Flex align=\"center\" justifyContent=\"space-between\" mt=\"20px\" gap=\"16px\">\n        <Button flex=\"1\" h=\"42px\" variant=\"outline\" borderRadius=\"8px\" onClick={onClose} p=\"0 15px\">\n          Cancel\n        </Button>\n        <Button flex=\"1\" h=\"42px\" borderRadius=\"8px\" onClick={handleConfirm} isDisabled={btnIsDisabled}>\n          Save\n        </Button>\n      </Flex>\n    </Box>\n  )\n}\n\ninterface CustomInputProps {\n  inputValue: string\n  handleChange: (event: any) => void\n  wrapStyle?: InputGroupProps\n  compact?: boolean\n}\n\nconst CustomInput = ({ inputValue, handleChange, wrapStyle = {}, compact = false }: CustomInputProps) => {\n  return (\n    <InputGroup\n      alignItems=\"center\"\n      justifyContent=\"center\"\n      w=\"100%\"\n      background=\"bg_secondary\"\n      borderRadius=\"12px\"\n      border=\"1px solid\"\n      borderColor=\"border\"\n      h=\"42px\"\n      p=\"12px 16px\"\n      position=\"relative\"\n      {...wrapStyle}\n    >\n      <Text pr=\"8px\" h=\"20px\" lineHeight=\"20px\" borderRight=\"1px solid\" borderColor={compact ? 'transparent' : 'border'}>\n        Custom\n      </Text>\n      <Input\n        borderRadius=\"8px\"\n        h=\"40px\"\n        mr=\"2px\"\n        border=\"none\"\n        variant=\"outline\"\n        value={inputValue}\n        onChange={handleChange}\n        textAlign=\"right\"\n        fontSize=\"sm\"\n        placeholder=\"0.0\"\n        pr={{\n          base: '14px',\n          lg: '8px'\n        }}\n        pl=\"0\"\n      />\n      <InputRightElement\n        width=\"20px\"\n        height=\"40px\"\n        top=\"0.5px\"\n        right={{\n          base: '12px',\n          lg: '8px'\n        }}\n      >\n        <Text fontSize=\"sm\" color=\"text_caption\">\n          %\n        </Text>\n      </InputRightElement>\n    </InputGroup>\n  )\n}\n\nconst chartTypeList = [\n  {\n    label: 'Default'\n  },\n  {\n    label: 'Fast Mode',\n    beforeIcon: { xlinkHref: '#icon-icon_flash', fontSize: '16px', activeColor: '#FFCA68', activeHoverColor: '#FFCA68' }\n  }\n]\n\nconst TransactionModeSettings = (props: {\n  transactionMode: any\n  setTransactionMode: (value: any) => void\n  maxCapForGas: string\n  setMaxCapForGas: (value: string) => void\n  customGasPrice: string\n  setCustomGasPrice: (value: string) => void\n  suiBalance: string\n}) => {\n  // const { getTokenAmountValue } = useTokenPrice()\n  const { transactionMode, setTransactionMode, maxCapForGas, setMaxCapForGas, customGasPrice, setCustomGasPrice, suiBalance } = props\n  const currentTab = useMemo(() => {\n    return chartTypeList.filter((item: any) => item?.label === transactionMode)?.[0]\n  }, [transactionMode, chartTypeList])\n\n  const handleChangeTab = (val: any) => {\n    setTransactionMode(val.label)\n  }\n\n  const handleChangeInput = (e: any) => {\n    const reg = new RegExp('[^\\\\d-]*(\\\\d*(?:\\\\.\\\\d{0,9})?).*$')\n    e.target.value = e.target.value.replace(reg, '$1')\n    setMaxCapForGas(e.target.value)\n  }\n\n  const handleChangeGasPrice = (e: any) => {\n    const reg = new RegExp('[^\\\\d-]*(\\\\d*(?:\\\\.\\\\d{0,9})?).*$')\n    e.target.value = e.target.value.replace(reg, '$1')\n    const gasPriceValue = d(e.target.value).gt(0) ? d(e.target.value).div(Math.pow(10, 9)).toString() : '0'\n    if (d(gasPriceValue).gt(maxCapForGas)) {\n      setMaxCapForGas(gasPriceValue)\n    }\n    setCustomGasPrice(e.target.value)\n  }\n\n  const errorTipText = useMemo(() => {\n    if (!maxCapForGas || Number(maxCapForGas) == 0) {\n      return 'Please enter a value higher than 0'\n    }\n\n    if (maxCapForGas && Number(maxCapForGas) > 5) {\n      return 'Only allow up to 5 SUI'\n    }\n\n    if (d(maxCapForGas).gt(suiBalance)) {\n      return 'Insufficient SUI balance '\n    }\n\n    if (d(maxCapForGas).lt(d(customGasPrice).div(Math.pow(10, 9)))) {\n      return 'Max cap cannot be less than custom gas.'\n    }\n\n    return ''\n  }, [maxCapForGas])\n\n  const warnTipText = useMemo(() => {\n    if (maxCapForGas && Number(maxCapForGas) > 0 && Number(maxCapForGas) < 0.000002) {\n      return 'Your current maximum fee is below the market rate. Please raise it to ensure your transactions are processed.'\n    }\n    return ''\n  }, [maxCapForGas])\n\n  const gasPriceErrorTipText = useMemo(() => {\n    if (!customGasPrice || Number(customGasPrice) == 0) {\n      return 'Please enter a value higher than 0'\n    }\n    return ''\n  }, [customGasPrice])\n\n  const gasPriceWarnTipText = useMemo(() => {\n    if (customGasPrice && Number(customGasPrice) > 0 && d(customGasPrice).lt(750)) {\n      return 'Your current maximum fee is below the market rate. Please raise it to ensure your transactions are processed.'\n    }\n    return ''\n  }, [customGasPrice])\n\n  // const maxCapForGasRate = getTokenAmountValue('0x0000000000000000000000000000000000000000000000000000000000000002::sui::SUI', maxCapForGas)\n\n  const gasPriceSuiAmount = useMemo(() => {\n    if (!customGasPrice || customGasPrice === '0') return '0'\n    return d(customGasPrice).div(Math.pow(10, 9)).toString()\n  }, [customGasPrice])\n\n  return (\n    <VStack w=\"100%\" pt=\"20px\" mt=\"20px\" borderTop=\"1px solid\" borderColor=\"border\" gap=\"12px\">\n      <HStack w=\"100%\" justify=\"space-between\">\n        <HStack>\n          <Icon xlinkHref=\"#icon-icon_mode\" />\n          <Text color=\"text_caption\" fontSize=\"14px\">\n            Transaction Mode\n          </Text>\n        </HStack>\n        <SelectTab\n          type=\"outlineTab\"\n          tabList={chartTypeList}\n          currentTab={currentTab?.label}\n          handleChangeTab={handleChangeTab}\n          wrapStyle={{\n            w: {\n              lg: '206px',\n              base: '164px'\n            },\n            h: '40px',\n            p: '4px',\n            borderRadius: '12px'\n          }}\n          itemStyle={{\n            flex: {\n              lg: '1',\n              base: 'auto'\n            },\n            fontSize: '12px',\n            margin: '0px',\n            borderRadius: '8px'\n          }}\n        />\n      </HStack>\n      <Text w=\"100%\" lineHeight=\"20px\" fontSize=\"12px\">\n        {transactionMode === 'Default'\n          ? 'Standard gas based on real-time network conditions'\n          : 'Land your transaction earlier and avoid congestion with a higher gas price. MEV protection is on by default in Fast Mode.'}\n      </Text>\n      {transactionMode === 'Fast Mode' && (\n        <VStack w=\"100%\">\n          <HStack\n            w=\"100%\"\n            h=\"56px\"\n            justify=\"space-between\"\n            bg=\"bg_secondary\"\n            borderRadius=\"12px\"\n            border=\"1px solid\"\n            borderColor=\"border\"\n            p=\"0px 16px\"\n          >\n            <HStack justify=\"flex-start\" gap=\"4px\">\n              <Text whiteSpace=\"nowrap\">Custom Gas Price</Text>\n              <TooltipIcon tooltipCon=\"The total gas depends on the gas price and actual gas units consumed.\" />\n            </HStack>\n            <VStack align=\"flex-end\" gap=\"0px\">\n              <HStack gap=\"0px\">\n                <Input\n                  borderRadius=\"8px\"\n                  h=\"20px\"\n                  mr=\"0px\"\n                  border=\"none\"\n                  variant=\"outline\"\n                  value={customGasPrice}\n                  onChange={handleChangeGasPrice}\n                  textAlign=\"right\"\n                  fontSize=\"14px\"\n                  placeholder=\"0.0\"\n                  pr={{\n                    base: '4px',\n                    lg: '4px'\n                  }}\n                  pl=\"0\"\n                  bg=\"none\"\n                />\n                <Text fontSize=\"14px\" color=\"text_caption\">\n                  MIST\n                </Text>\n              </HStack>\n\n              <Text fontSize=\"12px\" color=\"text_paragraph\">\n                {gasPriceSuiAmount} SUI\n              </Text>\n            </VStack>\n          </HStack>\n          {gasPriceErrorTipText && <TipsWithStatus text={gasPriceErrorTipText} type=\"error\" />}\n          {gasPriceWarnTipText && <TipsWithStatus text={gasPriceWarnTipText} type=\"warn\" />}\n\n          <HStack\n            w=\"100%\"\n            h=\"56px\"\n            justify=\"space-between\"\n            bg=\"bg_secondary\"\n            borderRadius=\"12px\"\n            border=\"1px solid\"\n            borderColor=\"border\"\n            p=\"0px 16px\"\n          >\n            <HStack justify=\"flex-start\" gap=\"4px\">\n              <Text whiteSpace=\"nowrap\">Set Max Cap for Gas</Text>\n              <TooltipIcon tooltipCon=\"Set a max cap for your gas to prevent overpaying\" />\n            </HStack>\n            <VStack align=\"flex-end\" gap=\"0px\">\n              <HStack gap=\"0px\">\n                <Input\n                  borderRadius=\"8px\"\n                  h=\"20px\"\n                  mr=\"0px\"\n                  border=\"none\"\n                  variant=\"outline\"\n                  value={maxCapForGas}\n                  onChange={handleChangeInput}\n                  textAlign=\"right\"\n                  fontSize=\"14px\"\n                  placeholder=\"0.0\"\n                  pr={{\n                    base: '4px',\n                    lg: '4px'\n                  }}\n                  pl=\"0\"\n                  bg=\"none\"\n                />\n                <Text fontSize=\"14px\" color=\"text_caption\">\n                  SUI\n                </Text>\n              </HStack>\n\n              {/* <Text fontSize=\"12px\" color=\"text_paragraph\">\n                {formatCurrency(maxCapForGasRate, 2)}\n              </Text> */}\n            </VStack>\n          </HStack>\n          {errorTipText && <TipsWithStatus text={errorTipText} type=\"error\" />}\n          {warnTipText && <TipsWithStatus text={warnTipText} type=\"warn\" />}\n          <HStack mt=\"6px\">\n            <Text>Powered by </Text>\n            <Image src=\"/images/icon_shio@2x.png\" w=\"46px\" h=\"14px\" />\n          </HStack>\n        </VStack>\n      )}\n    </VStack>\n  )\n}\n\nconst MevProtectSettings = (props: { mevProtect: boolean; disabled: boolean; setMevProtect: (value: boolean) => void }) => {\n  const { mevProtect, disabled, setMevProtect } = props\n  return (\n    <VStack w=\"100%\" pt=\"20px\" mt=\"20px\" borderTop=\"1px solid\" borderColor=\"border\" gap=\"16px\">\n      <HStack justify=\"flex-start\" w=\"100%\">\n        {/* <Icon xlinkHref=\"#icon-icon_mev\" svgFill={mevProtect ? 'text_highlight' : 'text_paragraph'} /> */}\n        <Icon xlinkHref=\"#icon-icon_mev\" svgFill=\"text_paragraph\" />\n        <Text fontSize=\"14px\" color=\"text_caption\">\n          MEV Protect\n        </Text>\n      </HStack>\n      <HStack justify=\"space-between\" w=\"100%\">\n        <HStack gap=\"4px\">\n          <Text fontSize=\"14px\" color=\"text_paragraph\">\n            Enable MEV Protection\n          </Text>\n          <TooltipIcon tooltipCon=\"By enabling this, your txn will be submitted via 3rd party MEV service provider. MEV value retained will be redistributed to all users who successfully execute their trades with Shio through its point campaign.\" />\n        </HStack>\n        <Switch isChecked={mevProtect} onChange={() => setMevProtect(!mevProtect)} isDisabled={disabled} />\n      </HStack>\n    </VStack>\n  )\n}\n\nconst TipsWithStatus = (props: { text: string; type: 'warn' | 'error' }) => {\n  const { text, type } = props\n  return (\n    <Center w=\"100%\" p=\"4px 16px\" borderRadius=\"8px\" bg={type === 'warn' ? 'primary_yellow_opacity.10' : 'primary_red_opacity.10'}>\n      <Text color={type === 'warn' ? 'primary_yellow' : 'primary_red'} fontSize=\"12px\" lineHeight=\"20px\">\n        {text}\n      </Text>\n    </Center>\n  )\n}\n","import useGlobalStore from '@/store/common/global'\nimport { TransactionMode } from '@/types'\nimport { getPercentage } from '@/utils'\nimport { Block, CetusTooltip, SlippageSetting } from '@cetus/design'\nimport { PoolType, SlippageType } from '@cetus/design/src/components/common/SlippageSetting'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { Icon } from '@cetus/ui-kit'\nimport { cancelBubble, d } from '@cetus/utils'\nimport { HStack, Text } from '@chakra-ui/react'\nimport { useMemo, useState } from 'react'\n\ntype SlippageProps = {\n  slippageType?: SlippageType\n  poolType?: PoolType\n  toolTipText?: string\n  compact?: boolean\n  isWidget?: boolean\n  maxSlippage?: number\n  showFastMode?: boolean\n  onClick?: () => void\n}\n\nfunction Slippage(props: SlippageProps) {\n  const { onClick, toolTipText, maxSlippage, poolType, showFastMode } = props\n  const {\n    onSlippageVisible,\n    showSlippage,\n    isWidget,\n    compact,\n    settingOpen,\n    onClose,\n    onChange,\n    slippageType,\n    transactionMode,\n    handleChangeTransactionMode,\n    maxCapForGas,\n    handleChangeMaxCapForGas,\n    showMevProtect,\n    handleChangeMevProtect,\n    customGasPrice,\n    handleChangeCustomGasPrice\n  } = useSlippage(props)\n  return (\n    <>\n      <CetusTooltip tooltip={<Text fontSize=\"12px\">{toolTipText || 'Settings'}</Text>}>\n        {slippageType !== 'zap' ? (\n          <HStack\n            h=\"28px\"\n            p=\"4px 8px\"\n            borderRadius=\"8px\"\n            border=\"1px solid\"\n            borderColor=\"border\"\n            bg={isWidget ? 'swap_bg_secondary' : 'bg_secondary'}\n            cursor=\"pointer\"\n            gap=\"6px\"\n            onClick={e => {\n              cancelBubble(e)\n              if (isWidget) {\n                onClick && onClick()\n              } else {\n                onSlippageVisible()\n              }\n            }}\n            sx={{\n              _hover: {\n                p: {\n                  color: 'text_caption'\n                },\n                svg: {\n                  fill: 'text_caption'\n                }\n              }\n            }}\n          >\n            <>\n              <Text fontWeight=\"500\" fontSize=\"12px\">\n                {getPercentage(showSlippage)}\n              </Text>\n              <Block bg={isWidget ? 'swap_bg_secondary' : 'bg_secondary'} p=\"0\" h=\"28px\" w=\"28px\" borderRadius=\"8px\" mr=\"-9px\">\n                <HStack align=\"center\" justify=\"center\" mt=\"3px\">\n                  <Icon xlinkHref=\"#icon-icon_verticalslider\" />\n                </HStack>\n              </Block>\n            </>\n          </HStack>\n        ) : (\n          <HStack\n            gap=\"4px\"\n            borderBottom=\"1px dashed\"\n            borderColor=\"text_paragraph\"\n            pb=\"2px\"\n            onClick={e => {\n              cancelBubble(e)\n              if (isWidget) {\n                onClick && onClick()\n              } else {\n                onSlippageVisible()\n              }\n            }}\n          >\n            <Text fontWeight=\"500\" color=\"text_caption\" fontSize=\"12px\">\n              {getPercentage(showSlippage)}\n            </Text>\n            <Text color=\"text_paragraph\" fontSize=\"12px\">\n              Slippage\n            </Text>\n          </HStack>\n        )}\n      </CetusTooltip>\n      {!isWidget && (\n        <SlippageSetting\n          showFastMode={showFastMode}\n          maxSlippage={maxSlippage}\n          isWidget={isWidget}\n          compact={compact}\n          isOpen={settingOpen}\n          onClose={onClose}\n          value={d(showSlippage).mul(100).toNumber()}\n          onChange={onChange}\n          slippageType={slippageType}\n          poolType={poolType}\n          transactionMode={transactionMode}\n          onChangeTransactionMode={handleChangeTransactionMode}\n          maxCapForGas={maxCapForGas}\n          onChangeMaxCapForGas={handleChangeMaxCapForGas}\n          mevProtect={showMevProtect}\n          onChangeMevProtect={handleChangeMevProtect}\n          customGasPrice={customGasPrice}\n          onChangeCustomGasPrice={handleChangeCustomGasPrice}\n        />\n      )}\n    </>\n  )\n}\n\nexport function useSlippage(props: SlippageProps) {\n  const { slippageType = 'global', compact, poolType, isWidget = false, showFastMode = true } = props\n  const {\n    slippage,\n    setSlippage,\n    vaultsSlippage,\n    setVaultsSlippage,\n    liquiditySlippage,\n    setLiquiditySlippage,\n    // settingOpen,\n    // setSettingOpen,\n    mevProtect,\n    dlmmMevProtect,\n    setDlmmMevProtect,\n    setMevProtect,\n    setTransactionMode,\n    setMaxCapForGas,\n    transactionMode,\n    maxCapForGas,\n    customGasPrice,\n    setCustomGasPrice,\n    zapSlippage,\n    setZapSlippage,\n    deepBookSlippage,\n    setDeepBookSlippage,\n    crossSwapSlippage,\n    setCrossSwapSlippage,\n    mergeSwapSlippage,\n    setMergeSwapSlippage\n  } = useGlobalStore()\n  const [settingOpen, setSettingOpen] = useState(false)\n  const { isApp } = useWindowWidth()\n  const onSlippageVisible = () => {\n    setSettingOpen(!settingOpen)\n  }\n\n  const onClose = () => {\n    setSettingOpen(false)\n  }\n\n  const onChange = (value: number) => {\n    console.log('Slippage 🚀 ~ onChange ~ value:', value)\n    console.log('Slippage 🚀 ~ onChange ~ slippageType:', slippageType)\n    const saveSlippageValue = d(value).div(100).toNumber()\n    if (slippageType === 'vaults') {\n      setVaultsSlippage(saveSlippageValue)\n    } else if (slippageType === 'zap') {\n      console.log('Slippage 🚀 ~ onChange ~ saveSlippageValue:', saveSlippageValue)\n      setZapSlippage(saveSlippageValue)\n    } else if (slippageType === 'liquidity') {\n      setLiquiditySlippage(saveSlippageValue)\n    } else if (slippageType === 'deepbook') {\n      setDeepBookSlippage(saveSlippageValue)\n    } else if (slippageType === 'cross') {\n      setCrossSwapSlippage(saveSlippageValue)\n    } else if (slippageType === 'merge_swap') {\n      setMergeSwapSlippage(saveSlippageValue)\n    } else {\n      setSlippage(saveSlippageValue)\n    }\n  }\n\n  const slippageMap = {\n    global: slippage,\n    vaults: vaultsSlippage,\n    zap: zapSlippage,\n    liquidity: liquiditySlippage,\n    cross: crossSwapSlippage,\n    deepbook: deepBookSlippage,\n    merge_swap: mergeSwapSlippage\n  }\n\n  const showSlippage = useMemo(() => {\n    return slippageMap[slippageType]\n  }, [slippageType, slippage, vaultsSlippage, zapSlippage, liquiditySlippage, crossSwapSlippage, deepBookSlippage, mergeSwapSlippage])\n\n  const showMevProtect = useMemo(() => {\n    return poolType === 'dlmm' || !showFastMode ? dlmmMevProtect : mevProtect\n  }, [poolType, dlmmMevProtect, mevProtect])\n\n  const handleChangeTransactionMode = (value: TransactionMode) => {\n    setTransactionMode(value)\n  }\n\n  const handleChangeMaxCapForGas = (value: string) => {\n    setMaxCapForGas(value)\n  }\n\n  const handleChangeCustomGasPrice = (value: string) => {\n    setCustomGasPrice(value)\n  }\n\n  const handleChangeMevProtect = (value: boolean) => {\n    // 如果不打开fast mode，则存储在单独的DlmmMevProtect\n    if (poolType === 'dlmm' || !showFastMode) {\n      setDlmmMevProtect(value)\n    } else {\n      setMevProtect(value)\n    }\n  }\n\n  return {\n    onSlippageVisible,\n    onClose,\n    onChange,\n    showSlippage,\n    isWidget,\n    compact,\n    settingOpen,\n    slippageType,\n    transactionMode,\n    handleChangeTransactionMode,\n    maxCapForGas,\n    handleChangeMaxCapForGas,\n    showMevProtect,\n    handleChangeMevProtect,\n    customGasPrice,\n    handleChangeCustomGasPrice\n  }\n}\n\nexport default Slippage\n"],"names":["SUI","SlippageSetting","props","isOpen","onClose","showFastMode","jsxs","Modal","jsx","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","SlippageSettingContent","value","onChange","compact","slippageType","isWidget","transactionMode","onChangeTransactionMode","maxCapForGas","onChangeMaxCapForGas","mevProtect","onChangeMevProtect","customGasPrice","onChangeCustomGasPrice","maxSlippage","minSlippage","poolType","defaultFeeList","inputValue","setInputValue","useState","isCapture","setIsCapture","suiBalance","useGetTokenBalance","tsMode","setTsMode","maxGas","setMaxGas","gasPrice","setGasPrice","mev","setMev","handleChange","e","reg","selectValue","useEffect","handleConfirm","s","d","btnIsDisabled","useMemo","Box","HStack","Icon","Text","CetusTooltip","Flex","item","Center","CustomInput","Fragment","TransactionModeSettings","MevProtectSettings","Button","wrapStyle","InputGroup","Input","InputRightElement","chartTypeList","setTransactionMode","setMaxCapForGas","setCustomGasPrice","currentTab","_a","handleChangeTab","val","handleChangeInput","handleChangeGasPrice","gasPriceValue","errorTipText","warnTipText","gasPriceErrorTipText","gasPriceWarnTipText","gasPriceSuiAmount","VStack","SelectTab","TooltipIcon","TipsWithStatus","Image","disabled","setMevProtect","Switch","text","type","Slippage","onClick","toolTipText","onSlippageVisible","showSlippage","settingOpen","handleChangeTransactionMode","handleChangeMaxCapForGas","showMevProtect","handleChangeMevProtect","handleChangeCustomGasPrice","useSlippage","cancelBubble","getPercentage","Block","slippage","setSlippage","vaultsSlippage","setVaultsSlippage","liquiditySlippage","setLiquiditySlippage","dlmmMevProtect","setDlmmMevProtect","zapSlippage","setZapSlippage","deepBookSlippage","setDeepBookSlippage","crossSwapSlippage","setCrossSwapSlippage","mergeSwapSlippage","setMergeSwapSlippage","useGlobalStore","setSettingOpen","useWindowWidth","saveSlippageValue","slippageMap"],"mappings":"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"}