{"version":3,"file":"Incentive-xqHYZIVJ.js","sources":["../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseRest.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/isArrayLikeObject.js","../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/unionBy.js","../../src/store/incentive/index.ts","../../src/components/incentive/AddIncentive.tsx","../../src/hooks/incentive/useAddIncentive.ts","../../src/components/incentive/ConfirmModal.tsx","../../src/hooks/incentive/useGetIncentiveTimeOptions.ts","../../src/components/incentive/TimeSelect.tsx","../../src/components/incentive/RewardContent.tsx","../../src/components/incentive/RewardTokenAndDuration.tsx","../../src/components/incentive/RewardsPreviewChart.tsx","../../src/components/incentive/ReleaseInfo.tsx","../../src/hooks/incentive/useGetIncentiveConfig.ts","../../src/hooks/incentive/useGetIncentivePoolInfo.ts","../../src/pages/Incentive.tsx"],"sourcesContent":["import identity from './identity.js';\nimport overRest from './_overRest.js';\nimport setToString from './_setToString.js';\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nexport default baseRest;\n","import isArrayLike from './isArrayLike.js';\nimport isObjectLike from './isObjectLike.js';\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nexport default isArrayLikeObject;\n","import baseFlatten from './_baseFlatten.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseRest from './_baseRest.js';\nimport baseUniq from './_baseUniq.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\nimport last from './last.js';\n\n/**\n * This method is like `_.union` except that it accepts `iteratee` which is\n * invoked for each element of each `arrays` to generate the criterion by\n * which uniqueness is computed. Result values are chosen from the first\n * array in which the value occurs. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nvar unionBy = baseRest(function(arrays) {\n  var iteratee = last(arrays);\n  if (isArrayLikeObject(iteratee)) {\n    iteratee = undefined;\n  }\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), baseIteratee(iteratee, 2));\n});\n\nexport default unionBy;\n","import { DLMMPoolApiInfo } from '@/types'\nimport { CommonContentTable, INCENTIVE_WHITE_TOKEN_LIST } from '@cetus/utils'\nimport { DlmmGlobalConfig, DlmmPool } from '@cetusprotocol/dlmm-sdk'\nimport { create, StateCreator } from 'zustand'\n\ninterface IncentiveState {\n  incentiveApiPoolInfo: Partial<DLMMPoolApiInfo> | undefined\n  setIncentiveApiPoolInfo: (data: Partial<DLMMPoolApiInfo> | undefined) => void\n  incentiveContractPoolInfo: (DlmmPool & SnakeToCamel<DlmmPool>) | undefined\n  setIncentiveContractPoolInfo: (value: (DlmmPool & SnakeToCamel<DlmmPool>) | undefined) => void\n  poolWhiteTokenList: string[]\n  setPoolWhiteTokenList: (value: string[]) => void\n  globalConfig: DlmmGlobalConfig | undefined\n  setGlobalConfig: (value: DlmmGlobalConfig | undefined) => void\n}\n\nconst store: StateCreator<IncentiveState> = (set, get) => ({\n  incentiveApiPoolInfo: undefined,\n  setIncentiveApiPoolInfo: (data: Partial<DLMMPoolApiInfo> | undefined) => {\n    set(() => ({\n      incentiveApiPoolInfo: data\n    }))\n  },\n  incentiveContractPoolInfo: undefined,\n  setIncentiveContractPoolInfo: (data: (DlmmPool & SnakeToCamel<DlmmPool>) | undefined) => {\n    set(() => ({\n      incentiveContractPoolInfo: data\n    }))\n  },\n  poolWhiteTokenList: [],\n  setPoolWhiteTokenList: (data: string[]) => {\n    CommonContentTable.setItem(INCENTIVE_WHITE_TOKEN_LIST, data)\n    set(() => ({\n      poolWhiteTokenList: data\n    }))\n  },\n  globalConfig: undefined,\n  setGlobalConfig: (data: DlmmGlobalConfig | undefined) => {\n    set(() => ({\n      globalConfig: data\n    }))\n  }\n})\n\nconst useIncentiveStore = create(store)\nexport default useIncentiveStore\n\nCommonContentTable.getItem<any>(INCENTIVE_WHITE_TOKEN_LIST).then((data: any) => {\n  console.log('🚀 ~ CommonContentTable.getItem<any> ~ data:', data)\n  if (data !== null) {\n    useIncentiveStore.getState().setPoolWhiteTokenList(data)\n  }\n})\n","import useIncentiveStore from '@/store/incentive'\nimport { AddressCopyLink, Block } from '@cetus/design'\nimport { baseFeeStepConfig } from '@cetus/design/src/components/common/feeSelect/config'\nimport useExplorer from '@cetus/hooks/src/useExplorer'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { CoinPairImage } from '@cetus/ui-kit'\nimport { textEllipses } from '@cetus/utils'\nimport { Box, HStack, Skeleton, Text, VStack } from '@chakra-ui/react'\nimport { useMemo } from 'react'\nimport AprTooltip from '../common/aprTooltip'\nimport RewardsBlock from '../pools/RewardsBlock'\n\nexport default function AddIncentive() {\n  const { incentiveApiPoolInfo } = useIncentiveStore()\n  const { getExplorerUrl } = useExplorer()\n  const { isApp } = useWindowWidth()\n\n  const cursorStyle = useMemo(() => {\n    if (incentiveApiPoolInfo?.haveFarming || (incentiveApiPoolInfo?.miningAprList && incentiveApiPoolInfo?.miningAprList.length > 0)) {\n      return 'help'\n    }\n    return 'text'\n  }, [incentiveApiPoolInfo])\n  return (\n    <VStack gap={{ base: '8px', lg: '12px' }} w=\"100%\" align=\"flex-start\" bg=\"#1B1D21\" borderRadius=\"16px\" p={{ base: '16px 8px', lg: '32px' }}>\n      <Text color=\"text_caption\" fontSize=\"16px\" fontWeight=\"500\">\n        Pool Info\n      </Text>\n      <Block display=\"flex\" alignItems=\"center\" borderRadius=\"12px\" p={{ base: '12px', lg: '12px 16px' }} mt=\"4px\">\n        <Skeleton w=\"100%\" isLoaded={!!incentiveApiPoolInfo}>\n          <HStack w=\"100%\" justify=\"space-between\">\n            <HStack>\n              <CoinPairImage\n                coinACoinType={incentiveApiPoolInfo?.displayTokenA?.coin_type}\n                coinBCoinType={incentiveApiPoolInfo?.displayTokenB?.coin_type}\n                coinAIconUrl={incentiveApiPoolInfo?.displayTokenA?.logo_url}\n                coinBIconUrl={incentiveApiPoolInfo?.displayTokenB?.logo_url}\n                imageStyle={{ w: isApp ? '24px' : '28px', h: isApp ? '24px' : '28px' }}\n                imgBoxStyle={{ w: isApp ? '24px' : '28px', h: isApp ? '24px' : '28px' }}\n              />\n              <VStack align=\"flex-start\" gap=\"0px\">\n                {isApp ? (\n                  <Text color=\"text_caption\" fontWeight=\"500\" lineHeight={{ base: '16px', lg: '20px' }} whiteSpace=\"nowrap\">\n                    {textEllipses(`${incentiveApiPoolInfo?.displayTokenA?.symbol} - ${incentiveApiPoolInfo?.displayTokenB?.symbol}`, 12)}\n                  </Text>\n                ) : (\n                  <Text color=\"text_caption\" fontWeight=\"500\" lineHeight={{ base: '16px', lg: '20px' }} whiteSpace=\"nowrap\">\n                    {textEllipses(incentiveApiPoolInfo?.displayTokenA?.symbol, 10)} - {textEllipses(incentiveApiPoolInfo?.displayTokenB?.symbol, 10)}\n                  </Text>\n                )}\n\n                <AddressCopyLink\n                  address={incentiveApiPoolInfo?.poolAddress || ''}\n                  onClickLink={() => window.open(getExplorerUrl(incentiveApiPoolInfo?.poolAddress, 'poolAddress'))}\n                />\n              </VStack>\n            </HStack>\n            <HStack>\n              <Text color=\"text_caption\" fontWeight=\"500\" whiteSpace=\"nowrap\">\n                {incentiveApiPoolInfo?.feeDisplay}\n              </Text>\n              <Box h=\"12px\" w=\"1px\" bg=\"border\" />\n              <Text color=\"text_caption\" fontWeight=\"500\" whiteSpace=\"nowrap\">\n                {baseFeeStepConfig?.[incentiveApiPoolInfo?.fee]} bps\n              </Text>\n            </HStack>\n          </HStack>\n        </Skeleton>\n      </Block>\n      {(!incentiveApiPoolInfo?.miningRewardList || incentiveApiPoolInfo?.miningRewardList?.length === 0) &&\n      (!incentiveApiPoolInfo?.farmsRewarderList || incentiveApiPoolInfo?.farmsRewarderList?.length === 0) ? null : (\n        <HStack w=\"100%\" justify=\"space-between\" h=\"20px\" lineHeight=\"20px\">\n          <Text>Mining Rewards</Text>\n          <Box>\n            <RewardsBlock\n              miningRewardList={incentiveApiPoolInfo?.miningRewardList}\n              farmsRewarderList={incentiveApiPoolInfo?.farmsRewarderList}\n              isParent={false}\n            />\n          </Box>\n        </HStack>\n      )}\n\n      <HStack w=\"100%\" justify=\"space-between\" h=\"20px\" lineHeight=\"20px\">\n        <Text>Pool APR</Text>\n        <Box>\n          <AprTooltip poolInfo={incentiveApiPoolInfo} placement={isApp ? 'auto-start' : 'bottom'}>\n            <HStack justify=\"flex-end\" align=\"flex-end\" gap=\"4px\" lineHeight=\"14px\" h=\"14px\">\n              <VStack gap=\"1px\">\n                <Text\n                  as=\"span\"\n                  fontSize=\"14px\"\n                  color={cursorStyle == 'help' ? 'primary' : 'text_caption'}\n                  fontWeight=\"500\"\n                  cursor={cursorStyle}\n                  // textUnderlineOffset=\"2px\"\n                  // textDecoration={cursorStyle == 'help' ? 'underline dotted' : 'none'}\n                >\n                  {incentiveApiPoolInfo?.feeAndMiningAprDisplay !== '' ? incentiveApiPoolInfo?.feeAndMiningAprDisplay : '--'}\n                </Text>\n                {cursorStyle == 'help' && <Box w=\"100%\" borderBottom=\"1px dotted\" borderColor=\"primary\" />}\n              </VStack>\n\n              {incentiveApiPoolInfo?.haveFarming && (\n                <Text fontSize=\"12px\" lineHeight=\"12px\" h=\"12px\" color=\"primary\" fontWeight=\"500\">\n                  +{incentiveApiPoolInfo?.farmingAprDisplay}\n                </Text>\n              )}\n            </HStack>\n          </AprTooltip>\n        </Box>\n      </HStack>\n    </VStack>\n  )\n}\n","import { useSdk } from '@cetus/sdk-factory'\nimport { AddRewardOption, InitRewardOption } from '@cetusprotocol/dlmm-sdk'\nimport { Transaction } from '@mysten/sui/transactions'\n\nfunction useAddIncentive() {\n  const dlmmSdk = useSdk('dlmm')\n\n  // 新增dlmm奖励\n  const getAddIncentivePayload = (option: AddRewardOption, tx?: Transaction) => {\n    console.log('🚀 ~ getAddIncentivePayload ~ option:', option)\n    const txf = dlmmSdk?.Reward.addRewardPayload(option, tx)\n    console.log('🚀 ~ getAddIncentivePayload ~ txf:', txf)\n    return txf\n  }\n\n  // 初始化dlmm奖励\n  const getInitIncentivePayload = (option: InitRewardOption, tx?: Transaction) => {\n    console.log('🚀 ~ getInitIncentivePayload ~ option:', option)\n    const txf = dlmmSdk?.Reward.initRewardPayload(option, tx)\n    console.log('🚀 ~ getInitIncentivePayload ~ txf:', txf)\n    return txf\n  }\n\n  const getRewardPeriodEmission = async (id: string, curr_emission_per_second: string, last_updated_time: number) => {\n    try {\n      const res = await dlmmSdk!.Reward.getRewardPeriodEmission(id, curr_emission_per_second, last_updated_time)\n      return res\n    } catch (error) {\n      console.error('getDlmmContractPoolInfo error:', error)\n    } finally {\n    }\n  }\n\n  return { getAddIncentivePayload, getInitIncentivePayload, getRewardPeriodEmission }\n}\nexport default useAddIncentive\n","import useTransaction from '@/hooks/common/useTransaction'\nimport useAddIncentive from '@/hooks/incentive/useAddIncentive'\nimport useIncentiveStore from '@/store/incentive'\nimport { IncentiveRewardInfo } from '@/types/incentive'\nimport { Block, TooltipIcon } from '@cetus/design'\nimport SingleTokenInfo from '@cetus/design/src/components/common/SingleTokenInfo'\nimport useDocumentSize from '@cetus/hooks/src/useDocumentSize'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { CommonTypeInfo } from '@cetus/types'\nimport { HTextLabelBox } from '@cetus/ui-kit'\nimport { addComma, amountToBN, d, formatNumber, removeComma, textEllipses, utcTimeFormattedWithSeconds } from '@cetus/utils'\nimport { fixCoinType } from '@cetusprotocol/common-sdk'\nimport { Button, Heading, HStack, Modal, ModalBody, ModalCloseButton, ModalContent, ModalHeader, ModalOverlay, Text, VStack } from '@chakra-ui/react'\nimport { Transaction } from '@mysten/sui/transactions'\nimport { useState } from 'react'\nimport { formatEpoch } from './RewardTokenAndDuration'\n\ntype ConfirmModalProps = {\n  totalAmount: string | number\n  rewardList: IncentiveRewardInfo[]\n  isOpen: boolean\n  onClose: () => void\n}\n\nexport default function ConfirmModal({ totalAmount, rewardList, isOpen, onClose }: ConfirmModalProps) {\n  const textStyle = { fontSize: '14px' }\n  const { size } = useDocumentSize()\n  const modalH = rewardList?.length * 209 + (rewardList?.length - 1) * 8 > size?.h - 236 ? size?.h - 236 : 'unset'\n\n  const { incentiveContractPoolInfo, incentiveApiPoolInfo } = useIncentiveStore()\n  const [addLoading, setAddLoading] = useState(false)\n  const { getInitIncentivePayload, getAddIncentivePayload } = useAddIncentive()\n  const { signAndExecuteTransaction } = useTransaction()\n\n  const toAddIncentive = async () => {\n    console.log('🚀 ~ ConfirmModal ~ incentiveContractPoolInfo:', incentiveContractPoolInfo)\n    setAddLoading(true)\n    try {\n      let tx = new Transaction()\n\n      const existingRewards = incentiveContractPoolInfo?.reward_manager?.rewards || []\n      console.log('🚀 ~ toAddIncentive ~ existingRewards:', existingRewards)\n\n      // 获取链上已初始化过的 coin_type 列表\n      const initializedCoinTypes = new Set<string>(existingRewards.map(r => fixCoinType(r?.reward_coin)))\n      // 当前 tx 中准备初始化的 coin_type，防止重复初始化\n      const alreadyInitSet = new Set<string>()\n\n      for (const rewardInfo of rewardList) {\n        const coinType = fixCoinType(rewardInfo?.rewardCoin?.coin_type)\n\n        const params: any = {\n          pool_id: incentiveContractPoolInfo?.id,\n          reward_coin_type: rewardInfo?.rewardCoin?.coin_type,\n          reward_amount: amountToBN(rewardInfo?.rewardNum, rewardInfo?.rewardCoin?.decimals).toString(),\n          end_time_seconds: Math.floor(rewardInfo?.endTime / 1000),\n          coin_type_a: incentiveContractPoolInfo?.coin_type_a,\n          coin_type_b: incentiveContractPoolInfo?.coin_type_b,\n          reward_coin_types: [rewardInfo?.rewardCoin?.coin_type]\n        }\n        if (!rewardInfo?.startIsNow) {\n          params['start_time_seconds'] = Math.floor(rewardInfo?.startTime / 1000)\n        }\n\n        if (!initializedCoinTypes.has(coinType) && !alreadyInitSet.has(coinType)) {\n          console.log('🚀 ~ toAddIncentive ~ params:', params)\n          tx = getInitIncentivePayload(params, tx)\n          alreadyInitSet.add(coinType)\n        }\n        console.log('🚀 ~ toAddIncentive ~ tx:', params, tx)\n\n        tx = getAddIncentivePayload(params, tx)\n      }\n\n      console.log('🚀 ~ toAddIncentive ~ tx:', JSON.stringify(tx), tx)\n\n      const res = await signAndExecuteTransaction(tx, {\n        getShowInfo: status => {\n          const info: CommonTypeInfo = {\n            modalDescriptionText: `Add Incentives`,\n            toastTitleText: 'Add Incentives'\n          }\n          console.log('🚀 ~ toAddIncentive ~ status:', status)\n          return info\n        }\n      })\n\n      console.log('🚀 ~ toAddIncentive ~ res:', res)\n\n      if (res) {\n        onClose()\n      }\n    } catch (error) {\n      console.log('🚀 ~ toAddIncentive ~ error:', error)\n      setAddLoading(false)\n    } finally {\n      setAddLoading(false)\n    }\n  }\n\n  const { isApp } = useWindowWidth()\n\n  return (\n    <Modal autoFocus={false} closeOnOverlayClick={false} returnFocusOnClose={false} isOpen={isOpen} onClose={onClose} isCentered>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>\n          <Heading fontWeight=\"500\" fontSize=\"16px\" ml={{ base: '-4px', lg: '0' }}>\n            Add Incentives\n          </Heading>\n        </ModalHeader>\n        <ModalCloseButton />\n        <ModalBody p={{ base: '0px 0px 16px !important', lg: '0  0px 16px !important' }}>\n          <VStack w=\"100%\" p={{ base: '0 12px', lg: '0 16px' }} align=\"flex-start\" userSelect=\"none\" minH=\"180px\" h={modalH} overflow=\"auto\">\n            {rewardList?.map((rewardInfo: IncentiveRewardInfo, index: number) => {\n              const releaseRate = rewardInfo?.releaseRate\n                ? d(removeComma(rewardInfo?.releaseRate + ''))\n                    .mul(24 * 60 * 60)\n                    .toString()\n                : '--'\n              return (\n                <Block borderRadius=\"16px\" p=\"16px\" key={index}>\n                  <HStack w=\"100%\" justify=\"space-between\" borderBottom=\"1px solid\" borderColor=\"border\" pb=\"16px\">\n                    <SingleTokenInfo\n                      symbolFontSize=\"16px\"\n                      token={rewardInfo?.rewardCoin}\n                      imgBoxStyle={{ w: isApp ? '28px' : '32px', h: isApp ? '28px' : '32px' }}\n                    />\n                    <Text fontSize=\"20px\" fontWeight=\"500\" color=\"text_caption\">\n                      {rewardInfo?.rewardNum ? addComma(rewardInfo?.rewardNum) : '--'}\n                    </Text>\n                  </HStack>\n\n                  <VStack mt=\"16px\" gap=\"12px\">\n                    <HTextLabelBox\n                      label=\"Start Time (UTC)\"\n                      isLoading={false}\n                      labelStyle={textStyle}\n                      value={rewardInfo?.startIsNow ? 'Now' : utcTimeFormattedWithSeconds(rewardInfo?.startTime || 0)}\n                      valueStyle={textStyle}\n                      wrapStyle={{ h: '20px', lineHeight: '20px' }}\n                    />\n                    <HTextLabelBox\n                      label=\"End Time (UTC)\"\n                      isLoading={false}\n                      labelStyle={textStyle}\n                      value={utcTimeFormattedWithSeconds(rewardInfo?.endTime || 0)}\n                      valueStyle={textStyle}\n                      wrapStyle={{ h: '20px', lineHeight: '20px' }}\n                    />\n                    <HTextLabelBox\n                      label=\"Vesting Period\"\n                      isLoading={false}\n                      labelStyle={textStyle}\n                      value={formatEpoch(rewardInfo?.startTime, rewardInfo?.endTime) as string}\n                      valueStyle={textStyle}\n                      wrapStyle={{ h: '20px', lineHeight: '20px' }}\n                    />\n\n                    <HStack w=\"100%\" justify=\"space-between\" h=\"20px\" lineHeight=\"20px\">\n                      <HStack gap=\"4px\">\n                        <Text>Emission Rate</Text>\n                        <TooltipIcon tooltipCon=\"Rewards emitted to the pool per day\" />\n                      </HStack>\n                      <Text color=\"text_caption\">\n                        {releaseRate ? formatNumber(releaseRate, rewardInfo?.rewardCoin?.decimal) : '--'}{' '}\n                        {textEllipses(rewardInfo?.rewardCoin?.symbol, 10) || ''} per day\n                      </Text>\n                    </HStack>\n                  </VStack>\n                </Block>\n              )\n            })}\n          </VStack>\n          <HStack p={{ base: '16px 12px', lg: '16px' }} w=\"100%\" justify=\"space-between\">\n            <Text>Total Amount</Text>\n            <Text>{totalAmount}</Text>\n          </HStack>\n          <Button\n            isDisabled={addLoading}\n            isLoading={addLoading}\n            m={{ base: '0 12px', lg: '0 16px' }}\n            w={{ base: 'calc(100% - 24px)', lg: 'calc(100% - 32px)' }}\n            h=\"48px\"\n            fontSize=\"18px\"\n            fontWeight=\"500\"\n            onClick={toAddIncentive}\n          >\n            Confirm\n          </Button>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  )\n}\n","import { generateRewardSchedule } from '@cetusprotocol/dlmm-sdk'\n\nexport const REWARD_PERIOD = 7 * 24 * 60 * 60 * 1000\ninterface timeOptionsParams {\n  maxIntervals: number\n  baseTime?: number\n  timeInterval?: number\n}\nfunction useGetIncentiveTimeOptions() {\n  const getIncentiveTimeOptions = async ({ maxIntervals, baseTime = new Date().getTime(), timeInterval = REWARD_PERIOD }: timeOptionsParams) => {\n    const now = new Date()\n    const twoDaysAgo = new Date(Date.UTC(now.getUTCFullYear(), now.getUTCMonth(), now.getUTCDate() - 2, 12, 0, 0, 0))\n    const REWARD_PERIOD_START_AT = Math.floor(twoDaysAgo.getTime() / 1000)\n    const endTime = baseTime + maxIntervals * timeInterval\n    const _maxIntervals = Math.floor((endTime - REWARD_PERIOD_START_AT * 1000) / timeInterval)\n    try {\n      const res = await generateRewardSchedule(REWARD_PERIOD_START_AT, _maxIntervals, timeInterval)\n      console.log('🚀 ~ getIncentiveTimeOptions ~ res:', res)\n      return res\n    } catch (error) {\n      console.error('getDlmmContractPoolInfo error:', error)\n    } finally {\n    }\n  }\n\n  return { getIncentiveTimeOptions }\n}\nexport default useGetIncentiveTimeOptions\n","import useGetIncentiveTimeOptions from '@/hooks/incentive/useGetIncentiveTimeOptions'\nimport { IncentiveRewardInfo } from '@/types/incentive'\nimport { CetusTooltip, TooltipIcon } from '@cetus/design'\nimport { Icon } from '@cetus/ui-kit'\nimport { d, utcTimeFormattedWithSeconds } from '@cetus/utils'\nimport { Button, HStack, Menu, MenuButton, MenuItem, MenuList, Text, VStack } from '@chakra-ui/react'\nimport { useCallback, useEffect, useState } from 'react'\n\ninterface TimeSelectProps {\n  title: string\n  rewardInfo: IncentiveRewardInfo\n  fieldKey: 'startTime' | 'endTime'\n  onSelect: (val: string | number, startIsNow?: boolean) => void\n}\n\nexport default function TimeSelect({ title, rewardInfo, fieldKey, onSelect }: TimeSelectProps) {\n  const isEndTime = title === 'End Time'\n  const selectedTime = rewardInfo?.[fieldKey]\n  const { getIncentiveTimeOptions } = useGetIncentiveTimeOptions()\n  const [timeOptions, setTimeOptions] = useState<number[]>([])\n  // 异步加载时间选项\n  useEffect(() => {\n    async function fetchTimeOptions() {\n      if (isEndTime && d(rewardInfo?.startTime ?? 0).lte(0)) return\n      // 展示最近半年 所以是26周\n      const length = isEndTime ? 26 : 2\n      try {\n        const futureDates: any = await getIncentiveTimeOptions({\n          maxIntervals: length,\n          baseTime: isEndTime ? rewardInfo?.startTime : new Date().getTime()\n        })\n        const fullOptions = isEndTime ? futureDates.slice(1) : [Date.now()].concat(futureDates)\n        setTimeOptions(fullOptions)\n      } catch (error) {\n        console.log('🚀 ~ fetchTimeOptions ~ error:', error)\n      }\n    }\n\n    fetchTimeOptions()\n  }, [isEndTime, rewardInfo?.startTime])\n\n  // 判断时间是否可选\n  const isAllowSelect = useCallback(\n    (date: number): boolean => {\n      if (!isEndTime) {\n        if (!rewardInfo?.endTime) {\n          return true\n        } else {\n          return d(date).lte(d(rewardInfo?.endTime).minus(7 * 24 * 60 * 60 * 1000))\n        }\n      } else {\n        if (!rewardInfo?.startTime) {\n          return true\n        }\n        return d(date)\n          .minus(rewardInfo.startTime)\n          .gte(60 * 60 * 1000)\n      }\n    },\n    [isEndTime, rewardInfo?.startTime, rewardInfo?.endTime]\n  )\n\n  return (\n    <CetusTooltip\n      showTooltip={isEndTime && d(rewardInfo?.startTime ?? 0).lte(0)}\n      tooltip={<Text fontSize=\"12px\">Select a start time to proceed.</Text>}\n      triggerStyle={{ flex: 1, w: '100%' }}\n    >\n      <Menu isLazy placement=\"bottom-start\">\n        {({ onClose }) => (\n          <>\n            <MenuButton\n              as={Button}\n              variant=\"outline\"\n              h=\"66px\"\n              lineHeight=\"66px\"\n              w={{ base: '100%', lg: '100%' }}\n              isDisabled={isEndTime && d(rewardInfo?.startTime ?? 0).lte(0)}\n              _disabled={{\n                bg: 'bg_secondary',\n                cursor: 'not-allowed'\n              }}\n              _hover={{ bg: 'bg_secondary' }}\n              _active={{\n                bg: 'bg_secondary',\n                borderColor: 'token_active_border !important',\n                boxShadow: '0px 0px 6px 0px #0067AD'\n              }}\n            >\n              <VStack w=\"100%\" align=\"flex-start\" justify=\"center\">\n                {selectedTime && (\n                  <Text fontSize=\"12px\" lineHeight=\"12px\" h=\"12px\" fontWeight=\"500\">\n                    {isEndTime ? 'To (UTC)' : 'From (UTC)'}\n                  </Text>\n                )}\n\n                <HStack w=\"100%\" justify=\"space-between\">\n                  <Text color={selectedTime ? 'text_caption' : 'text_paragraph'} lineHeight=\"1\">\n                    {selectedTime ? (rewardInfo?.startIsNow && !isEndTime ? 'Now' : utcTimeFormattedWithSeconds(selectedTime)) : `${title} (UTC)`}\n                  </Text>\n                  <Icon xlinkHref=\"#icon-canlender\" />\n                </HStack>\n              </VStack>\n            </MenuButton>\n\n            <MenuList zIndex={9999} p=\"8px 0\" w={{ base: 'calc(100vw - 48px)', lg: '234px' }}>\n              <VStack maxH=\"200px\" overflow=\"auto\" p=\"0px 4px 0 4px\" gap=\"4px\">\n                {timeOptions?.map((date, index) => {\n                  const allowSelect = isAllowSelect(date)\n                  const isNowOption = index === 0 && !isEndTime\n                  return (\n                    <MenuItem\n                      key={date}\n                      h=\"32px\"\n                      borderRadius=\"8px\"\n                      _hover={{ bg: allowSelect ? 'primary_opacity.10' : undefined }}\n                      cursor={allowSelect ? 'pointer' : 'not-allowed'}\n                      onClick={() => {\n                        if (allowSelect) {\n                          // startIsNow: index === 0 && !isEndTime\n                          onSelect(isNowOption ? new Date().getTime() : date, isNowOption)\n                          onClose()\n                        }\n                      }}\n                    >\n                      <Text mr=\"4px\" color={allowSelect ? 'text_caption' : 'text_paragraph'}>\n                        {isNowOption ? 'Now' : utcTimeFormattedWithSeconds(date)}\n                      </Text>\n                      {isNowOption && <TooltipIcon tooltipCon=\"The reward will activate when the transaction is executed.\" />}\n                    </MenuItem>\n                  )\n                })}\n              </VStack>\n              <HStack p=\"8px 16px 2px\" gap=\"4px\">\n                <Text fontSize=\"12px\" w=\"100%\" textAlign=\"left\">\n                  Times are in UTC\n                </Text>\n              </HStack>\n            </MenuList>\n          </>\n        )}\n      </Menu>\n    </CetusTooltip>\n  )\n}\n","import { IncentiveRewardInfo } from '@/types/incentive'\nimport { ErrorTips, TradeInput } from '@cetus/design'\nimport { useGetTokenBalance } from '@cetus/hooks/src/useTokenBalance'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { Icon } from '@cetus/ui-kit'\nimport { isAvailableObject, removeComma } from '@cetus/utils'\nimport { d } from '@cetusprotocol/common-sdk'\nimport { HStack, Text, VStack } from '@chakra-ui/react'\nimport { ReleaseInfoItem } from './ReleaseInfo'\nimport TimeSelect from './TimeSelect'\n\ninterface RewardContentProps {\n  isLast: boolean\n  index: number\n  rewardListLength: number\n  rewardInfo: IncentiveRewardInfo\n  whiteTokenList: any\n  deleteReward: (index: number) => void\n  updateReward: (index: number, type: string, value: any, startIsNow?: boolean) => void\n}\n\ntype TabType = {\n  label: string\n  value: string\n}\nexport default function RewardContent({\n  whiteTokenList,\n  index,\n  rewardListLength,\n  rewardInfo,\n  deleteReward,\n  updateReward,\n  isLast\n}: RewardContentProps) {\n  const { balanceInfo } = useGetTokenBalance(rewardInfo?.rewardCoin)\n  const { getTokenAmountValue } = useTokenPrice()\n  const { isApp } = useWindowWidth()\n\n  const tabList: TabType[] = [\n    { label: 'Total', value: 'total' },\n    { label: 'Per Day', value: 'perDay' }\n  ]\n  const handleChangeTab = (tab: TabType) => {\n    updateReward(index, 'amountMode', tab?.value)\n  }\n  return (\n    <VStack\n      w=\"100%\"\n      align=\"flex-start\"\n      pb={isLast ? '4px' : '16px'}\n      borderBottom={rewardListLength == index + 1 ? 'none' : '1px solid'}\n      borderColor={rewardListLength && rewardListLength > 1 ? 'border' : 'transparent'}\n    >\n      <HStack w=\"100%\" justify=\"space-between\">\n        <Text color=\"text_caption\" h=\"20px\" lineHeight=\"20px\">\n          Reward {index + 1}\n        </Text>\n        {rewardListLength && rewardListLength > 1 && (\n          // <Button\n          //   p=\"0\"\n          //   bg=\"none\"\n          //   border=\"none\"\n          //   leftIcon={<Icon w=\"18px\" h=\"18px\" xlinkHref=\"#icon-icon_del\" svgHover=\"primary\" />}\n          //   _hover={{\n          //     bg: 'none',\n          //     border: 'none'\n          //   }}\n          //   variant=\"ghost\"\n          //   fontSize=\"14px\"\n          //   height=\"20px\"\n          //   onClick={() => deleteReward(index)}\n          // />\n          <Icon w=\"18px\" h=\"18px\" xlinkHref=\"#icon-icon_del\" svgHover=\"primary\" onClick={() => deleteReward(index)} />\n        )}\n      </HStack>\n\n      <HStack w=\"100%\" justify=\"space-between\" flexDir={{ base: 'column', lg: 'row' }}>\n        <TimeSelect\n          rewardInfo={rewardInfo}\n          title=\"Start Time\"\n          fieldKey=\"startTime\"\n          onSelect={(date, startIsNow) => updateReward(index, 'startTime', date, startIsNow)}\n        />\n        <TimeSelect rewardInfo={rewardInfo} title=\"End Time\" fieldKey=\"endTime\" onSelect={date => updateReward(index, 'endTime', date)} />\n      </HStack>\n      <TradeInput\n        title=\"Input Amount\"\n        value={rewardInfo?.inputNum || ''}\n        onChange={val => updateReward(index, 'inputNum', val)}\n        token={rewardInfo?.rewardCoin}\n        placeholder=\"0.0\"\n        balance={balanceInfo?.balanceFormat || ''}\n        amountValue={getTokenAmountValue(rewardInfo?.rewardCoin?.coin_type, rewardInfo?.inputNum)}\n        selectable\n        onTokenChange={val => updateReward(index, 'rewardCoin', val)}\n        wrapStyle={{ height: '122px' }}\n        whiteTokenList={whiteTokenList}\n        isShowTokenListTab={false}\n        isShowLabelTab={false}\n        isShowHotList={false}\n        isShowOperate={false}\n        isShowTokenName={false}\n        showSearchInput={false}\n        inputTabOptions={{\n          type: 'outlineTab',\n          tabList,\n          currentTab: rewardInfo?.amountMode == 'total' ? 'Total' : 'Per Day',\n          handleChangeTab: tab => {\n            handleChangeTab(tab)\n          },\n          wrapStyle: {\n            w: '168px',\n            h: '28px',\n            p: '3px',\n            borderRadius: '10px'\n          },\n          itemStyle: {\n            flex: '1',\n            fontSize: '12px',\n            margin: '0px',\n            borderRadius: '6px'\n          }\n        }}\n      />\n\n      {rewardInfo?.startTime &&\n        rewardInfo?.endTime &&\n        rewardInfo?.rewardNum &&\n        d(rewardInfo?.rewardNum).gt(0) &&\n        isAvailableObject(rewardInfo?.rewardCoin) &&\n        d(removeComma(rewardInfo?.releaseRate + '')).lt(d(1).div(d(10).pow(rewardInfo?.rewardCoin?.decimals))) && (\n          <ErrorTips\n            type=\"error\"\n            tipsFontSize=\"12px\"\n            tipsLineHeight=\"16px\"\n            tips=\"The reward rate is too low. Try shortening the epoch duration or increasing the reward amount\"\n          />\n        )}\n      {isApp && <ReleaseInfoItem rewardInfo={rewardInfo} />}\n    </VStack>\n  )\n}\n","import useIncentiveStore from '@/store/incentive'\nimport { useGetToken } from '@cetus/hooks/src/useToken'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { useAccountStore } from '@cetus/stores'\nimport useTokenBalanceStore from '@cetus/stores/src/tokenBalance'\nimport { Token } from '@cetus/types'\nimport { CheckBox, Icon } from '@cetus/ui-kit'\nimport { bnToAmount, d, Decimal, formatCurrency, formatNumber, isAvailableObject, removeComma } from '@cetus/utils'\nimport { extractStructTagFromType, fixCoinType } from '@cetusprotocol/common-sdk'\nimport { Button, HStack, Text, VStack } from '@chakra-ui/react'\nimport { useDeepCompareEffect, useInterval } from 'ahooks'\nimport dayjs from 'dayjs'\nimport { unionBy } from 'lodash-es'\nimport { useEffect, useMemo, useState } from 'react'\nimport ConfirmModal from './ConfirmModal'\nimport RewardContent from './RewardContent'\n\nexport default function RewardTokenAndDuration({ rewardList, changeRewardList }: { rewardList: any; changeRewardList: (item: any) => void }) {\n  const { incentiveApiPoolInfo, setIncentiveApiPoolInfo, poolWhiteTokenList, globalConfig } = useIncentiveStore()\n  const [isChecked, setIsChecked] = useState(false)\n  const [isOpenModal, setIsOpenModal] = useState(false)\n  const [hasInitialized, setHasInitialized] = useState(false)\n  const { tokenBalanceObj } = useTokenBalanceStore()\n  const { currentAccount, onWalletModal } = useAccountStore()\n  const [addedRewards, setAddedRewards] = useState<any[]>([])\n\n  // 结束时间 - 开始时间 要大于等于60分钟\n  // const isAllowSelect = (startTime: number, endTime: number): boolean => {\n  //   if (!startTime || !endTime) return true\n  //   return d(endTime)\n  //     .minus(startTime)\n  //     .gte(60 * 60 * 1000)\n  // }\n\n  useEffect(() => {\n    if (!hasInitialized && incentiveApiPoolInfo?.displayTokenA) {\n      changeRewardList([\n        {\n          startTime: 0,\n          endTime: 0,\n          rewardCoin: incentiveApiPoolInfo.displayTokenA,\n          rewardNum: '',\n          inputNum: '',\n          releaseRate: '',\n          startIsNow: false,\n          amountMode: 'total'\n        }\n      ])\n      setHasInitialized(true)\n    }\n  }, [incentiveApiPoolInfo, hasInitialized])\n\n  // 更新奖励内容 startIsNow奖励是否现在开始 以提交交易的时间戳为准\n  const updateReward = (index: number, key: string, value: any, startIsNow = false) => {\n    changeRewardList(prev =>\n      prev.map((item, i) => {\n        if (i !== index) return item\n        let updatedItem = { ...item }\n\n        if (key === 'rewardCoin') {\n          updatedItem.rewardCoin = value\n          updatedItem.rewardNum = ''\n          updatedItem.inputNum = ''\n          updatedItem.releaseRate = ''\n        } else if (key === 'startTime') {\n          updatedItem.startIsNow = startIsNow\n          updatedItem.startTime = value\n        } else {\n          updatedItem[key] = value\n        }\n        if (updatedItem?.startTime && updatedItem?.endTime) {\n          const duration = formatEpoch(updatedItem?.startTime, updatedItem?.endTime, 'seconds')\n          if (updatedItem.amountMode === 'perDay' && duration && !!updatedItem.inputNum) {\n            updatedItem.rewardNum = formatNumber(\n              d(updatedItem.inputNum)\n                .div(24 * 60 * 60)\n                .mul(duration)\n                .toString(),\n              updatedItem?.rewardCoin?.decimals,\n              true\n            )\n            updatedItem.releaseRate = updatedItem.inputNum\n              ? d(updatedItem.inputNum || 0)\n                  .div(24 * 60 * 60)\n                  .toString()\n              : '--'\n          } else {\n            updatedItem.rewardNum = updatedItem.inputNum\n            updatedItem.releaseRate = duration\n              ? d(updatedItem.rewardNum || 0)\n                  .div(duration)\n                  .toString()\n              : '--'\n          }\n        }\n\n        return updatedItem\n      })\n    )\n  }\n\n  useInterval(() => {\n    changeRewardList(prev =>\n      prev?.map(item => {\n        let updatedItem = { ...item }\n        if (updatedItem?.startIsNow && updatedItem?.startTime && updatedItem?.endTime) {\n          const currentTime = new Date().getTime()\n          updatedItem.startTime = currentTime\n          const duration = formatEpoch(updatedItem?.startTime, updatedItem?.endTime, 'seconds')\n          console.log('🚀 ~ prev.map ~ duration:', updatedItem.rewardNum, duration)\n          if (updatedItem.amountMode === 'perDay' && duration && !!updatedItem.inputNum) {\n            updatedItem.rewardNum = formatNumber(\n              d(updatedItem.inputNum)\n                .div(24 * 60 * 60)\n                .mul(duration)\n                .toString(),\n              updatedItem?.rewardCoin?.decimals,\n              true\n            )\n            updatedItem.releaseRate = updatedItem.inputNum\n              ? d(updatedItem.inputNum || 0)\n                  .div(24 * 60 * 60)\n                  .toString()\n              : '--'\n          } else {\n            updatedItem.rewardNum = updatedItem.inputNum\n            updatedItem.releaseRate = duration\n              ? d(updatedItem.rewardNum || 0)\n                  .div(duration)\n                  .toString()\n              : '--'\n          }\n        }\n        return updatedItem\n      })\n    )\n  }, 60 * 1000)\n\n  const defaultReward = () => ({\n    startTime: '',\n    endTime: '',\n    rewardCoin: undefined,\n    rewardNum: '',\n    inputNum: '',\n    releaseRate: '',\n    startIsNow: false,\n    amountMode: 'total'\n  })\n\n  // 添加奖励\n  const addReward = () => {\n    if (!incentiveApiPoolInfo?.displayTokenA) return\n    changeRewardList((prev: any) => [...prev, defaultReward()])\n  }\n  // 删除奖励\n  const deleteReward = (index: number) => {\n    changeRewardList((prev: any) => {\n      return prev.filter((_, i) => i !== index)\n    })\n  }\n  // 判断余额\n  const hasInsufficientBalance = useMemo(() => {\n    if (!isAvailableObject(tokenBalanceObj)) return true\n\n    const mergedMap: Record<string, { total: Decimal.Instance; decimals: number }> = {}\n\n    for (const item of rewardList) {\n      const { rewardCoin, rewardNum } = item\n      if (!rewardCoin?.coin_type || !rewardNum) continue\n\n      const tag = extractStructTagFromType(rewardCoin.coin_type).full_address\n      if (!mergedMap[tag]) {\n        mergedMap[tag] = { total: d(0), decimals: rewardCoin.decimals ?? 9 }\n      }\n      mergedMap[tag].total = mergedMap[tag].total.plus(rewardNum)\n    }\n\n    return Object.entries(mergedMap).some(([addr, { total, decimals }]) => {\n      const balance = tokenBalanceObj[addr]\n      if (!balance) return true\n      return total.gt(bnToAmount(balance.totalBalance, decimals))\n    })\n  }, [rewardList, tokenBalanceObj])\n\n  // 判断奖励内容是否完整\n  const isRewardValid = useMemo(() => {\n    return (\n      rewardList.length > 0 &&\n      rewardList.every(item => item?.startTime && item?.endTime && item?.rewardCoin && d(item?.rewardNum).gt(0) && item?.releaseRate !== 0)\n    )\n  }, [rewardList])\n\n  const limitRewardsTokenNum = useMemo(() => {\n    if (globalConfig && globalConfig?.non_manager_initialize_reward_cap && !isNaN(globalConfig?.non_manager_initialize_reward_cap)) {\n      return globalConfig?.non_manager_initialize_reward_cap\n    }\n    return 4\n  }, [globalConfig])\n\n  // const [now, setNow] = useState(() => dayjs().unix())\n\n  // 找出最早的非立即开始的 startTime（单位：秒）\n  // const earliestStartTime = useMemo(() => {\n  //   const validItems = rewardList.filter(item => item?.startTime)\n  //   if (validItems.length === 0) return null\n  //   return Math.min(...validItems.map(item => Number(item.startTime) / 1000))\n  // }, [rewardList])\n\n  // 仅当 earliestStartTime 存在时，才开始定时更新当前时间\n  // useEffect(() => {\n  //   if (!earliestStartTime) return\n  //   console.log('🚀 ~ RewardTokenAndDuration ~ earliestStartTime:', earliestStartTime)\n  //   const timer = setInterval(() => {\n  //     setNow(dayjs().unix())\n  //   }, 1000)\n  //   return () => clearInterval(timer)\n  // }, [earliestStartTime])\n\n  // 时间是否有效（当前时间 ≤ 最早的 startTime + 60 秒）\n  // const isTimeValid = useMemo(() => {\n  //   if (!earliestStartTime) return true\n  //   console.log('🚀 ~ RewardTokenAndDuration ~ now <= earliestStartTime + 60:', now - earliestStartTime, now <= earliestStartTime + 60)\n  //   return now <= earliestStartTime + 60\n  // }, [earliestStartTime, now])\n\n  const { getTokenAmountValue, fetchTokenPrices } = useTokenPrice()\n\n  const totalAmount = useMemo(() => {\n    const sum = rewardList.reduce((acc, item) => {\n      const amountVal = getTokenAmountValue(item?.rewardCoin?.coin_type, item?.rewardNum)\n      return acc.plus(amountVal)\n    }, d(0))\n    return formatCurrency(sum.toString(), 2)\n  }, [rewardList])\n\n  useEffect(() => {\n    const coinTypes = Array.from(new Set(rewardList.map(item => item?.rewardCoin?.coin_type).filter(Boolean)))\n    fetchTokenPrices(coinTypes)\n  }, [rewardList])\n\n  const { getTokenInfo } = useGetToken()\n  const [whiteTokenList, setWhiteTokenList] = useState<Token[]>([])\n\n  const fetchToken = async (coinType?: string) => {\n    if (!coinType) return null\n    try {\n      return await getTokenInfo(coinType)\n    } catch (err) {\n      console.error('Error fetching token info:', coinType, err)\n      return null\n    }\n  }\n\n  const getWhiteTokenList = async () => {\n    try {\n      const rewardsCoinTypes = incentiveApiPoolInfo?.miningRewardList?.map(item => item?.coinType)\n      let rewardsTokenList: any[] = []\n      if (rewardsCoinTypes && rewardsCoinTypes.length > 0) {\n        rewardsTokenList = await Promise.all(rewardsCoinTypes?.map(fetchToken))\n        if (rewardsTokenList && rewardsTokenList.length > 0) {\n          setAddedRewards(rewardsTokenList?.map(added => fixCoinType(added?.coinType || added?.coin_type || '')))\n        }\n      }\n      let merged: any[] = []\n      if (d(incentiveApiPoolInfo?.miningRewardList?.length).gte(limitRewardsTokenNum)) {\n        merged = rewardsTokenList\n      }\n      if (d(incentiveApiPoolInfo?.miningRewardList?.length).lt(limitRewardsTokenNum)) {\n        const fetched = !poolWhiteTokenList || poolWhiteTokenList.length === 0 ? [] : await Promise.all(poolWhiteTokenList.map(fetchToken))\n        merged = [incentiveApiPoolInfo?.displayTokenA, incentiveApiPoolInfo?.displayTokenB, ...fetched].filter(Boolean) as Token[]\n        merged = unionBy(merged?.concat(rewardsTokenList), item => item?.coin_type)\n      }\n\n      const uniqueTokens = Array.from(new Map(merged.map(token => [token.coin_type, token])).values())\n      console.log('🚀 uniqueTokens:', uniqueTokens)\n      setWhiteTokenList(uniqueTokens)\n    } catch (e) {\n      console.error('Failed to fetch token list:', e)\n    }\n  }\n\n  useDeepCompareEffect(() => {\n    console.log('🚀 ~ RewardTokenAndDuration ~ poolWhiteTokenList:', incentiveApiPoolInfo, poolWhiteTokenList)\n    if (isAvailableObject(incentiveApiPoolInfo)) {\n      getWhiteTokenList()\n    }\n  }, [poolWhiteTokenList, incentiveApiPoolInfo, limitRewardsTokenNum])\n\n  const someRewardTooLow = useMemo(() => {\n    return rewardList?.some(\n      rewardInfo =>\n        rewardInfo?.startTime &&\n        rewardInfo?.endTime &&\n        rewardInfo?.rewardNum &&\n        d(rewardInfo?.rewardNum).gt(0) &&\n        isAvailableObject(rewardInfo?.rewardCoin) &&\n        d(removeComma(rewardInfo?.releaseRate + '')).lt(d(1).div(d(10).pow(rewardInfo?.rewardCoin?.decimals)))\n    )\n  }, [rewardList])\n\n  const { isApp } = useWindowWidth()\n\n  const addRewardsAbleLength = useMemo(() => {\n    return whiteTokenList?.length >= limitRewardsTokenNum + 1\n      ? limitRewardsTokenNum + 1\n      : whiteTokenList?.length >= limitRewardsTokenNum\n        ? limitRewardsTokenNum\n        : whiteTokenList?.length\n  }, [limitRewardsTokenNum, whiteTokenList?.length])\n\n  return (\n    <VStack w=\"100%\" align=\"flex-start\" bg=\"#1B1D21\" borderRadius=\"16px\" p={{ base: '16px 8px', lg: '32px' }}>\n      <HStack w=\"100%\" justify=\"space-between\">\n        <VStack align=\"flex-start\">\n          <Text color=\"text_caption\" fontSize=\"16px\" fontWeight=\"500\">\n            Add Incentives\n          </Text>\n          <Text fontSize=\"12px\" lineHeight=\"16px\">\n            Any users can allocate extra incentives to a DLMM pool\n          </Text>\n        </VStack>\n        {!isApp && (\n          <Button\n            onClick={addReward}\n            borderRadius=\"8px\"\n            p={{ base: '0 8px', lg: '0 12px' }}\n            h=\"36px\"\n            fontWeight=\"500\"\n            variant=\"outline\"\n            bg=\"primary_opacity.10\"\n            fontSize=\"12px\"\n            borderColor=\"transparent\"\n            isDisabled={rewardList?.length >= addRewardsAbleLength}\n          >\n            <Icon\n              svgW=\"20px\"\n              svgH=\"20px\"\n              w=\"20px\"\n              h=\"20px\"\n              xlinkHref=\"#icon-icon_add\"\n              svgFill={rewardList?.length >= addRewardsAbleLength ? 'primary_gray' : 'primary'}\n              svgHover={rewardList?.length >= addRewardsAbleLength ? 'primary_gray' : 'primary'}\n            />\n            Add Reward\n          </Button>\n        )}\n      </HStack>\n\n      <VStack w=\"100%\" align=\"flex-start\" mt=\"8px\" gap=\"16px\">\n        {rewardList?.map((item, index) => (\n          <RewardContent\n            key={item?.rewardCoin?.coin_type ?? index}\n            index={index}\n            isLast={index === rewardList?.length - 1}\n            rewardListLength={rewardList?.length}\n            rewardInfo={item}\n            deleteReward={deleteReward}\n            updateReward={updateReward}\n            whiteTokenList={whiteTokenList?.map(white => ({\n              ...white,\n              isDisabled: rewardList\n                ?.filter(r => r?.rewardCoin?.coinType || r?.rewardCoin?.coin_type)\n                ?.some(\n                  reward =>\n                    fixCoinType(reward?.rewardCoin?.coinType || reward?.rewardCoin?.coin_type || '') ===\n                      fixCoinType(white?.coinType || white?.coin_type || '') &&\n                    fixCoinType(item?.rewardCoin?.coinType || item?.rewardCoin?.coin_type || '') !==\n                      fixCoinType(white?.coinType || white?.coin_type || '')\n                )\n            }))}\n          />\n        ))}\n        {isApp && (\n          <Button\n            w=\"100%\"\n            onClick={addReward}\n            borderRadius=\"8px\"\n            p={{ base: '0 8px', lg: '0 12px' }}\n            h=\"36px\"\n            fontWeight=\"500\"\n            variant=\"outline\"\n            bg=\"transparent\"\n            fontSize=\"12px\"\n            borderColor=\"primary_opacity.30 !important\"\n            border=\"1px dashed\"\n            isDisabled={rewardList?.length >= addRewardsAbleLength}\n            mt={{ base: '-10px', lg: '-28px' }}\n            mb=\"8px\"\n          >\n            <Icon\n              bg=\"primary_opacity.10\"\n              mr=\"4px\"\n              borderRadius=\"50%\"\n              svgW=\"20px\"\n              svgH=\"20px\"\n              w=\"20px\"\n              h=\"20px\"\n              xlinkHref=\"#icon-icon_add\"\n              svgFill={rewardList?.length >= addRewardsAbleLength ? 'primary_gray' : 'primary'}\n              svgHover={rewardList?.length >= addRewardsAbleLength ? 'primary_gray' : 'primary'}\n            />\n            Add Reward\n          </Button>\n        )}\n      </VStack>\n\n      <HStack\n        align=\"flex-start\"\n        bg=\"primary_opacity.10\"\n        borderRadius=\"8px\"\n        width=\"100%\"\n        p=\"12px\"\n        mb=\"4px\"\n        sx={{\n          div: {\n            svg: { fill: '#000 !important', w: '16px', h: '16px' }\n          }\n        }}\n        cursor=\"pointer\"\n        onClick={() => setIsChecked(!isChecked)}\n      >\n        <CheckBox\n          height=\"16px\"\n          width=\"16px\"\n          wrapStyle={{ border: '1px solid', borderColor: !isChecked ? 'primary' : 'transparent', bg: isChecked ? 'primary' : 'transparent' }}\n          checked={isChecked}\n          onClick={() => {}}\n        />\n        <Text userSelect=\"none\" lineHeight=\"16px\" w=\"calc(100% - 24px)\" fontSize=\"12px\" color=\"primary\">\n          I acknowledge that once incentives are added, they can NOT be withdrawn under any circumstances\n        </Text>\n      </HStack>\n\n      <Button\n        w=\"100%\"\n        fontWeight=\"500\"\n        height=\"48px\"\n        isDisabled={!currentAccount?.address ? false : !isRewardValid || !isChecked || hasInsufficientBalance || someRewardTooLow}\n        onClick={\n          !currentAccount?.address\n            ? () => {\n                onWalletModal(true)\n              }\n            : () => setIsOpenModal(true)\n        }\n      >\n        {!currentAccount?.address ? 'Connect Wallet' : hasInsufficientBalance ? 'Insufficient Balance' : 'Incentivize'}\n      </Button>\n\n      <HStack w=\"100%\" justify=\"space-between\" mt=\"12px\">\n        <Text>Total Amount</Text>\n        <Text>{totalAmount}</Text>\n      </HStack>\n      {isOpenModal && <ConfirmModal totalAmount={totalAmount} rewardList={rewardList} isOpen={isOpenModal} onClose={() => setIsOpenModal(false)} />}\n    </VStack>\n  )\n}\n\n// 格式化 Epoch 时间差\nexport function formatEpoch(startTime?: number, endTime?: number, returnType?: 'seconds' | 'hour' | 'day') {\n  if (!startTime || !endTime) return returnType ? undefined : ''\n\n  const start = dayjs(startTime)\n  const end = dayjs(endTime)\n\n  if (returnType) {\n    console.log('🚀 ~ formatEpoch ~ end.diff(start, returnType, true).toFixed(4):', end.diff(start, returnType, true).toFixed(4))\n    return end.diff(start, returnType, true).toFixed(4)\n  }\n\n  const diffHours = end.diff(start, 'hour')\n  const days = Math.floor(diffHours / 24)\n  const hours = diffHours % 24\n\n  const dayStr = days > 0 ? `${days} day${days > 1 ? 's' : ''}` : ''\n  const hourStr = hours > 0 ? `${hours} hour${hours > 1 ? 's' : ''}` : ''\n\n  return [dayStr, hourStr].filter(Boolean).join(' ')\n}\n","import useAddIncentive from '@/hooks/incentive/useAddIncentive'\nimport useIncentiveStore from '@/store/incentive'\nimport { Block } from '@cetus/design'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport {\n  Decimal,\n  formatNumber,\n  formatNumberWithKMB,\n  formatPercentage,\n  isAvailableObject,\n  removeComma,\n  textEllipses,\n  utcTimeFormattedWithSeconds\n} from '@cetus/utils'\nimport { d, fixCoinType } from '@cetusprotocol/common-sdk'\nimport { parseRewardPeriodEmission } from '@cetusprotocol/dlmm-sdk'\nimport { HStack, Text, VStack } from '@chakra-ui/react'\nimport { useSize } from 'ahooks'\nimport dayjs from 'dayjs'\nimport { useEffect, useMemo, useRef, useState } from 'react'\nimport { Area, ComposedChart, Legend, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts'\nimport { formatEpoch } from './RewardTokenAndDuration'\n\nconst RewardsPreviewChart = ({ rewardInfo }: { rewardInfo: any }) => {\n  const { incentiveContractPoolInfo, incentiveApiPoolInfo } = useIncentiveStore()\n  const { getRewardPeriodEmission } = useAddIncentive()\n  const { getTokenAmountValue } = useTokenPrice()\n  const [data, setData] = useState<any[]>([])\n\n  useEffect(() => {\n    if (isAvailableObject(incentiveContractPoolInfo)) {\n      getRewardPeriod(incentiveContractPoolInfo, rewardInfo)\n    }\n  }, [incentiveContractPoolInfo, rewardInfo])\n  const getRewardPeriod = async (incentiveContractPoolInfo: any, rewardInfo: any) => {\n    if (incentiveApiPoolInfo?.tvl) {\n      const reward = incentiveContractPoolInfo?.reward_manager?.rewards?.filter(\n        (item: any) => fixCoinType(item?.reward_coin) == fixCoinType(rewardInfo?.rewardCoin?.coin_type || '')\n      )\n      let _data: any[]\n      const startTime = Math.floor(rewardInfo?.startTime / 1000)\n      const endTime = Math.floor(rewardInfo?.endTime / 1000)\n      const durationSeconds = 60 * 60 * 24\n      const currentReward = reward?.[0]\n      console.log(currentReward, reward, incentiveApiPoolInfo, incentiveContractPoolInfo, 'incentiveApiPoolInfo')\n      if (currentReward) {\n        const existing = await getRewardPeriodEmission(\n          currentReward?.period_emission_rates?.id,\n          currentReward?.emissions_per_second,\n          incentiveContractPoolInfo?.reward_manager?.last_updated_time\n        )\n\n        const formatExisting = parseRewardPeriodEmission(existing ?? [], startTime, endTime, durationSeconds)\n        _data = formatExisting?.map(item => {\n          const amountValue = getTokenAmountValue(\n            rewardInfo?.rewardCoin?.coin_type,\n            d(item?.emissions_per_second)\n              .div(d(10).pow(rewardInfo?.rewardCoin?.decimals))\n              .mul(365 * 24 * 60 * 60)\n              .toString() || '0'\n          )\n          return {\n            date: dayjs(d(item?.time).mul(1000).toNumber()).format('MM/DD'),\n            time: item?.time,\n            visualized_time: item?.visualized_time,\n            Current: d(item?.emissions_per_second)\n              .div(d(10).pow(rewardInfo?.rewardCoin?.decimals))\n              .mul(60 * 60)\n              .toString(),\n            preApr:\n              rewardInfo?.rewardCoin?.is_trusted === false && d(amountValue).lte(0)\n                ? '--'\n                : d(amountValue).div(incentiveApiPoolInfo?.tvl).mul(100).toString()\n          }\n        })\n        if (d(removeComma(rewardInfo?.releaseRate) ?? '0').gt(0)) {\n          const addRates = d(removeComma(rewardInfo?.releaseRate)).mul(d(10).pow(rewardInfo?.rewardCoin?.decimals)).toString()\n          const formatAfter = formatExisting?.map(item => ({\n            ...item,\n            emissions_per_second: d(item?.emissions_per_second).plus(addRates).toString()\n          }))\n\n          if (_data && _data?.length > 0) {\n            _data = _data?.map((item, index) => {\n              const amountVal = getTokenAmountValue(\n                rewardInfo?.rewardCoin?.coin_type,\n                d(formatAfter[index]?.emissions_per_second)\n                  .div(d(10).pow(rewardInfo?.rewardCoin?.decimals))\n                  .mul(365 * 24 * 60 * 60)\n                  .toString() || '0'\n              )\n              return {\n                ...item,\n                'After Update': d(formatAfter[index]?.emissions_per_second)\n                  .div(d(10).pow(rewardInfo?.rewardCoin?.decimals))\n                  .mul(60 * 60)\n                  .toString(),\n                afterApr:\n                  rewardInfo?.rewardCoin?.is_trusted === false && d(amountVal).lte(0)\n                    ? '--'\n                    : d(amountVal).div(incentiveApiPoolInfo?.tvl).mul(100).toString()\n              }\n            })\n          }\n        }\n        if (_data) {\n          setData(_data)\n        }\n      } else {\n        const result = []\n        const rates = d(removeComma(rewardInfo?.releaseRate)).toString()\n        for (let time = startTime; time <= endTime; time += durationSeconds) {\n          result.push({\n            time: time.toString(),\n            emissions_per_hour: d(rates)\n              .mul(60 * 60)\n              .toString(),\n            visualized_time: new Date(time * 1000).toLocaleString()\n          })\n        }\n        if (result?.length > 0) {\n          _data = result?.map(item => {\n            const amountVal = getTokenAmountValue(\n              rewardInfo?.rewardCoin?.coin_type,\n              d(item?.emissions_per_hour)\n                .mul(365 * 24)\n                .toString() || '0'\n            )\n\n            return {\n              date: dayjs(d(item?.time).mul(1000).toNumber()).format('MM/DD'),\n              time: item?.time,\n              visualized_time: item?.visualized_time,\n              'After Update': item?.emissions_per_hour,\n              afterApr:\n                rewardInfo?.rewardCoin?.is_trusted === false && d(amountVal).lte(0)\n                  ? '--'\n                  : d(amountVal).div(incentiveApiPoolInfo?.tvl).mul(100).toString()\n            }\n          })\n          setData(_data)\n        }\n      }\n    }\n  }\n\n  const hasPreRewards = data?.some(item => item?.Current && d(item?.Current).gt(0))\n\n  const ticks = useMemo(() => {\n    if (data.length) {\n      const min = d(Decimal.min(...data.map(d => d?.Current ?? d?.['After Update'] ?? 0)))\n        .mul(0.95)\n        .toString()\n      const max = d(Decimal.max(...data.map(d => d?.['After Update'] ?? 0)))\n        .mul(1.05)\n        .toString()\n      const tick3 = d(max)\n      const tick0 = d(min)\n      const interval = tick3.sub(tick0).div(3)\n      return Array.from({ length: 4 }, (_, i) => tick0.add(interval.mul(i)).toNumber())\n    }\n    return []\n  }, [data])\n\n  const rightTicks = useMemo(() => {\n    const list = data.filter(item => item?.preApr !== '--' && item?.afterApr !== '--')\n    if (list.length) {\n      const min = d(Decimal.min(...list?.map(d => d?.preApr ?? d?.afterApr ?? 0)))\n        .mul(0.95)\n        .toString()\n      const max = d(Decimal.max(...list?.map(d => d?.afterApr ?? 0)))\n        .mul(1.05)\n        .toString()\n      const tick3 = d(max)\n      const tick0 = d(min)\n      const interval = tick3.sub(tick0).div(3)\n      return Array.from({ length: 4 }, (_, i) => tick0.add(interval.mul(i)).toNumber())\n    }\n    return []\n  }, [data])\n\n  const tooltipSize = useSize(document?.querySelector('.recharts-tooltip-wrapper'))\n  const chartRef = useRef<HTMLDivElement>(null)\n  const chartSize = useSize(chartRef)\n\n  return (\n    data?.length > 0 && (\n      <VStack gap=\"0px\" w=\"100%\" align=\"flex-start\" p=\"0 16px 12px\">\n        <Text lineHeight=\"20px\" w=\"100%\" color=\"text_caption\" fontWeight=\"500\" m=\"0px 0px 16px\" borderTop=\"1px dotted\" borderColor=\"border\" pt=\"16px\">\n          Rewards Preview\n        </Text>\n\n        <ResponsiveContainer width=\"100%\" height={145} ref={chartRef}>\n          <ComposedChart data={data} margin={{ top: 0, left: 0, right: 0, bottom: 0 }}>\n            <defs>\n              <pattern id=\"diagonalHatch\" patternUnits=\"userSpaceOnUse\" width=\"6\" height=\"6\" patternTransform=\"rotate(45)\">\n                <line x1=\"0\" y1=\"0\" x2=\"0\" y2=\"6\" stroke=\"#00D8B6\" strokeWidth=\"1.5\" />\n              </pattern>\n            </defs>\n\n            <XAxis\n              dataKey=\"date\"\n              fontSize={12}\n              axisLine={false}\n              tickLine={false}\n              interval={data?.length}\n              tick={props => (\n                <CustomizedXAxisTick\n                  {...props}\n                  length={data?.length}\n                  label={(formatEpoch(rewardInfo?.startTime, rewardInfo?.endTime) as string) || '--'}\n                />\n              )}\n            />\n            <YAxis\n              width={40}\n              yAxisId=\"left\"\n              dataKey=\"After Update\"\n              stroke=\"#909CA4\"\n              fontSize={12}\n              axisLine={false}\n              tickLine={false}\n              ticks={ticks}\n              domain={[ticks[0], ticks[ticks.length - 1]]}\n              tickFormatter={value => formatLeftYAxis(value)}\n            />\n            <YAxis\n              yAxisId=\"right\"\n              orientation=\"right\"\n              dataKey=\"afterApr\"\n              fontSize={12}\n              width={58}\n              ticks={rightTicks}\n              domain={[rightTicks[0], rightTicks[rightTicks.length - 1]]}\n              axisLine={false}\n              tickLine={false}\n              stroke=\"#909CA4\"\n              tickFormatter={value => (value === '--' ? '' : formatRightYAxis(value) + '%')}\n            />\n            <Tooltip\n              offset={4}\n              allowEscapeViewBox={{ y: true }}\n              wrapperStyle={{ zIndex: 100 }}\n              // position={{ x: ((chartSize?.width ?? 0) - 98 - (tooltipSize?.width ?? 0)) / 2 + 40, y: 120 }}\n              content={<RewardsPreviewTooltip rewardInfo={rewardInfo} />}\n            />\n\n            {/* 添加图例 */}\n            <Legend\n              wrapperStyle={{\n                fontSize: 12,\n                color: '#909CA4',\n                top: -33, // 可以微调位置\n                right: -10\n              }}\n              verticalAlign=\"top\"\n              align=\"right\"\n            />\n\n            {/* 绿色线及斜线填充 */}\n            <Area yAxisId=\"left\" type=\"monotone\" dataKey=\"After Update\" stroke=\"#00D8B6\" fill=\"url(#diagonalHatch)\" />\n\n            {/* 蓝色线及背景填充 */}\n            {hasPreRewards && (\n              <Area\n                yAxisId=\"left\"\n                type=\"monotone\"\n                dataKey=\"Current\"\n                stroke=\"#4A9AEF\"\n                fillOpacity={1} // 完全不透明\n                fill=\"#0F0F0F\" // 背景色\n              />\n            )}\n          </ComposedChart>\n        </ResponsiveContainer>\n      </VStack>\n    )\n  )\n}\n\nconst formatLeftYAxis = (value: string) => {\n  if (d(value).gt(100000000)) {\n    return '>100M'\n  } else if (d(value).gt(1) && d(value).lt(1000)) {\n    return Math.floor(Number(value)) + ''\n  } else if (d(value).gt(0.01) && d(value).lt(1)) {\n    return formatNumber(value, 2)\n  } else if (d(value).gte(1000)) {\n    return formatNumberWithKMB(value, 0)\n  } else if (d(value).gt(0) && d(value).lt(0.01)) {\n    return '<0.01'\n  } else {\n    return '0'\n  }\n}\n\nconst formatRightYAxis = (value: string) => {\n  if (d(value).gt(100000000)) {\n    return '>100M'\n  } else if (d(value).gt(1) && d(value).lt(1000)) {\n    return Math.floor(Number(value)) + ''\n  } else if (d(value).gt(0.01) && d(value).lt(1)) {\n    return formatNumber(value, 2)\n  } else if (d(value).gte(1000)) {\n    return formatNumberWithKMB(value, 0)\n  } else if (d(value).gt(0) && d(value).lt(0.01)) {\n    return '<0.01'\n  } else {\n    return '0'\n  }\n}\n\nconst CustomizedXAxisTick = ({ x, y, width, height, payload, label, length, ...rest }: any) => {\n  // 这是你想要显示的自定义元素\n  const len = label?.split(' ')?.length\n\n  return (\n    <g transform={`translate(${x},${y})`}>\n      <text x={x + (len > 2 ? 48 : 70)} y={8} fill=\"#909CA4\" fontSize={12} fontFamily=\"Inter\">\n        {label}\n      </text>\n    </g>\n  )\n}\n\nconst RewardsPreviewTooltip = ({ payload, rewardInfo }) => {\n  return (\n    payload &&\n    payload.length && (\n      <Block borderRadius=\"12px\" p=\"8px\">\n        <VStack alignItems=\"left\">\n          <Text fontSize=\"12px\">{utcTimeFormattedWithSeconds(Number(payload[0]?.payload?.time) * 1000) + ' (UTC)'}</Text>\n          {payload?.map((item: any) => {\n            return (\n              <VStack align=\"flex-start\" bg=\"#1B1D21\" borderRadius=\"8px\" key={item?.dataKey} p=\"8px\">\n                <Text fontSize=\"12px\" color={item.color}>\n                  {item?.dataKey}\n                </Text>\n                <HStack w=\"100%\" gap=\"16px\" justify=\"space-between\">\n                  <VStack align=\"flex-start\">\n                    <Text fontSize=\"12px\">Emission Rate</Text>\n                    <Text fontSize=\"12px\">{textEllipses(rewardInfo?.rewardCoin?.symbol, 10) || ''} Reward APR</Text>\n                  </VStack>\n                  <VStack align=\"flex-end\">\n                    <Text fontSize=\"12px\" color=\"text_caption\" as=\"span\" textAlign=\"right\">\n                      {formatNumber(item?.payload[item?.dataKey], 2)}\n                      <Text fontSize=\"12px\" as=\"span\" ml=\"4px\" textAlign=\"right\">\n                        {textEllipses(rewardInfo?.rewardCoin?.symbol, 10) || ''} per hour\n                      </Text>\n                    </Text>\n                    <Text fontSize=\"12px\" color=\"text_caption\">\n                      {item?.name === 'After Update'\n                        ? item?.payload?.afterApr === 'Infinity' || item?.payload?.afterApr === '--'\n                          ? '--'\n                          : formatPercentage(item?.payload?.afterApr)\n                        : item?.payload?.preApr === 'Infinity' || item?.payload?.preApr === '--'\n                          ? '--'\n                          : formatPercentage(item?.payload?.preApr)}\n                    </Text>\n                  </VStack>\n                </HStack>\n              </VStack>\n            )\n          })}\n        </VStack>\n      </Block>\n    )\n  )\n}\n\nexport default RewardsPreviewChart\n","import useIncentiveStore from '@/store/incentive'\nimport { IncentiveRewardInfo } from '@/types/incentive'\nimport { Block, TooltipIcon } from '@cetus/design'\nimport SingleTokenInfo from '@cetus/design/src/components/common/SingleTokenInfo'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport { HTextLabelBox } from '@cetus/ui-kit'\nimport { d, formatNumber, formatPercentage, isAvailableObject, removeComma, textEllipses } from '@cetus/utils'\nimport { HStack, Text, VStack } from '@chakra-ui/react'\nimport { useEffect } from 'react'\nimport { formatEpoch } from './RewardTokenAndDuration'\nimport RewardsPreviewChart from './RewardsPreviewChart'\n\nexport default function ReleaseInfo({ rewardList }: { rewardList: any }) {\n  return (\n    <VStack gap=\"16px\" w=\"100%\" maxW=\"460px\" align=\"flex-start\" bg=\"#1B1D21\" borderRadius=\"16px\" p={{ base: '16px 8px', lg: '32px' }}>\n      <Text color=\"text_caption\" fontSize=\"16px\" fontWeight=\"500\">\n        Release Info\n      </Text>\n      <VStack w=\"100%\">\n        {rewardList?.length > 0 &&\n          rewardList?.map((rewardInfo: any, index: number) => {\n            return <ReleaseInfoItem rewardInfo={rewardInfo} key={rewardInfo?.rewardCoin?.coin_type || index} />\n          })}\n      </VStack>\n    </VStack>\n  )\n}\n\nconst ReleaseInfoItem = ({ rewardInfo }: { rewardInfo: IncentiveRewardInfo }) => {\n  const { getTokenAmountValue, fetchTokenPrices } = useTokenPrice()\n  const { incentiveApiPoolInfo } = useIncentiveStore()\n\n  useEffect(() => {\n    if (rewardInfo?.rewardCoin?.is_trusted === false) {\n      fetchTokenPrices([rewardInfo?.rewardCoin?.coin_type])\n    }\n  }, [rewardInfo?.rewardCoin?.coin_type])\n\n  const amountVal = getTokenAmountValue(rewardInfo?.rewardCoin?.coin_type, rewardInfo?.rewardNum || 0)\n  const releaseRate = rewardInfo?.releaseRate\n    ? d(removeComma(rewardInfo?.releaseRate + ''))\n        .mul(24 * 60 * 60)\n        .toString()\n    : '--'\n\n  // apr: 本次添加激励的价值 / 池子当前总流动性 *100% *（365天 / 激励释放时间)\n  const periodDays = rewardInfo?.startTime && rewardInfo?.endTime ? Number(formatEpoch(rewardInfo.startTime, rewardInfo.endTime, 'day')) : 0\n  const apr =\n    rewardInfo?.rewardNum && periodDays > 0 && d(incentiveApiPoolInfo?.tvl ?? 0).gt(0) && d(amountVal).gt(0)\n      ? formatPercentage(\n          d(amountVal)\n            .div(incentiveApiPoolInfo?.tvl ?? 0)\n            .mul(d(365).div(periodDays))\n            .mul(100)\n            .toString()\n        )\n      : '--'\n  const showReleaseInfo =\n    rewardInfo?.startTime &&\n    rewardInfo?.endTime &&\n    rewardInfo?.rewardNum &&\n    rewardInfo?.releaseRate &&\n    isAvailableObject(rewardInfo?.rewardCoin) &&\n    d(removeComma(rewardInfo?.releaseRate + '')).gte(d(1).div(d(10).pow(rewardInfo?.rewardCoin?.decimals)))\n  return showReleaseInfo ? (\n    <Block borderRadius=\"12px\" p=\"0\">\n      <VStack p=\"16px\" w=\"100%\" gap=\"12px\">\n        <HStack w=\"100%\" justify=\"space-between\" gap=\"12px\">\n          <SingleTokenInfo haveName={false} token={rewardInfo?.rewardCoin} />\n        </HStack>\n        <HTextLabelBox\n          label=\"Vesting Period\"\n          isLoading={false}\n          labelStyle={{\n            fontSize: '14px',\n            lineHeight: '20px',\n            whiteSpace: 'nowrap'\n          }}\n          value={(formatEpoch(rewardInfo?.startTime, rewardInfo?.endTime) as string) || '--'}\n          valueStyle={{\n            fontSize: '14px',\n            lineHeight: '20px'\n          }}\n        />\n\n        <HStack w=\"100%\" justify=\"space-between\" lineHeight=\"18px\" gap=\"12px\">\n          <Text whiteSpace=\"nowrap\">Total allocation</Text>\n          <HStack gap=\"2px\" justify=\"flex-end\" flexWrap=\"wrap\">\n            <Text color=\"text_caption\" whiteSpace=\"nowrap\">\n              {rewardInfo?.rewardNum ? formatNumber(rewardInfo?.rewardNum, rewardInfo?.rewardCoin?.decimal) : '--'}\n            </Text>\n            <Text whiteSpace=\"nowrap\">{textEllipses(rewardInfo?.rewardCoin?.symbol, 10) || ''}</Text>\n          </HStack>\n        </HStack>\n        <HStack w=\"100%\" justify=\"space-between\" lineHeight=\"18px\" gap=\"12px\">\n          <HStack gap=\"4px\">\n            <Text whiteSpace=\"nowrap\">Emission Rate</Text>\n            <TooltipIcon tooltipCon=\"Rewards emitted to the pool per day\" />\n          </HStack>\n          <HStack gap=\"2px\" justify=\"flex-end\" flexWrap=\"wrap\">\n            <Text color=\"text_caption\" whiteSpace=\"nowrap\">\n              {releaseRate ? formatNumber(releaseRate, rewardInfo?.rewardCoin?.decimal) : '--'}\n            </Text>\n            <Text whiteSpace=\"nowrap\">{textEllipses(rewardInfo?.rewardCoin?.symbol, 10) || ''} per day</Text>\n          </HStack>\n        </HStack>\n        <HStack w=\"100%\" justify=\"space-between\">\n          <HStack gap=\"4px\">\n            <Text>{textEllipses(rewardInfo?.rewardCoin?.symbol, 10) || ''} Reward APR</Text>\n            <TooltipIcon tooltipCon=\"Estimated APR increase from this incentive\" />\n          </HStack>\n          <Text color=\"text_caption\" as=\"span\" textAlign=\"right\">\n            {apr}\n          </Text>\n        </HStack>\n      </VStack>\n      <RewardsPreviewChart rewardInfo={rewardInfo} />\n    </Block>\n  ) : null\n}\n\nexport { ReleaseInfoItem }\n","import useIncentiveStore from '@/store/incentive'\nimport { useSdk } from '@cetus/sdk-factory'\n\nfunction useGetIncentiveConfig() {\n  const { setPoolWhiteTokenList, setGlobalConfig } = useIncentiveStore()\n  const dlmmSdk = useSdk('dlmm')\n\n  const getDlmmWhiteTokenList = async () => {\n    try {\n      const res = await dlmmSdk!.Config.getDlmmGlobalConfig()\n      console.log('🚀 ~ getDlmmWhiteTokenList ~ res:', res)\n      // setPoolWhiteTokenList([\n      //   '0x14a71d857b34677a7d57e0feb303df1adb515a37780645ab763d42ce8d1a5e48::usdc::USDC',\n      //   '0x5419f6e223f18a9141e91a42286f2783eee27bf2667422c2100afc7b2296731b::nbtc::NBTC'\n      // ])\n      setGlobalConfig(res)\n      setPoolWhiteTokenList(res?.reward_white_list)\n    } catch (error) {\n      console.error('getDlmmContractPoolInfo error:', error)\n    } finally {\n    }\n  }\n\n  return { getDlmmWhiteTokenList }\n}\nexport default useGetIncentiveConfig\n","import useIncentiveStore from '@/store/incentive'\nimport { useSdk } from '@cetus/sdk-factory'\nimport { camelCaseObject } from '@cetus/utils'\nimport useGetDlmmContractPoolInfo from '../dlmm/useGetDlmmContractPoolInfo'\nimport useGetDlmmPools from '../pool/useGetDlmmPools'\n\nfunction useGetIncentivePoolInfo() {\n  const dlmmSdk = useSdk('dlmm')\n  const { formatDlmmApiPoolByContractPool } = useGetDlmmContractPoolInfo()\n  const { getDlmmPools } = useGetDlmmPools()\n  const { setIncentiveApiPoolInfo, setIncentiveContractPoolInfo } = useIncentiveStore()\n\n  const getIncentivePoolInfo = async (poolAddress: string) => {\n    if (!poolAddress) return\n\n    let apiPoolInfo: any = undefined\n\n    try {\n      const res = await getDlmmPools({ pools: [poolAddress], display_all_pools: true })\n      apiPoolInfo = res?.list?.[0]\n\n      if (apiPoolInfo) {\n        setIncentiveApiPoolInfo(apiPoolInfo)\n      }\n    } catch (error) {\n      console.error('getIncentivePoolInfo error:', error)\n    }\n\n    await fetchContractPoolInfo(poolAddress, apiPoolInfo)\n  }\n\n  const fetchContractPoolInfo = async (poolAddress: string, apiPoolInfo?: any) => {\n    if (!poolAddress) return\n\n    try {\n      const res = await dlmmSdk!.Pool.getPool(poolAddress)\n      const contractPool = { ...res, ...camelCaseObject(res), poolAddress: res?.id }\n      console.log('🚀 ~ fetchContractPoolInfo ~ contractPool:', poolAddress, apiPoolInfo, contractPool)\n\n      if (contractPool) {\n        setIncentiveContractPoolInfo(contractPool as any)\n\n        // fallback: 如果 API 返回的数据缺失，尝试通过合约数据反推格式化信息\n        if (!apiPoolInfo?.displayTokenA) {\n          const formattedApiPool = await formatDlmmApiPoolByContractPool(contractPool)\n          if (formattedApiPool) {\n            setIncentiveApiPoolInfo(formattedApiPool as any)\n          }\n        }\n      }\n    } catch (error) {\n      console.error('fetchContractPoolInfo error:', error)\n    }\n  }\n\n  return { getIncentivePoolInfo }\n}\n\nexport default useGetIncentivePoolInfo\n","import AddIncentive from '@/components/incentive/AddIncentive'\nimport ReleaseInfo from '@/components/incentive/ReleaseInfo'\nimport RewardTokenAndDuration from '@/components/incentive/RewardTokenAndDuration'\nimport useGetIncentiveConfig from '@/hooks/incentive/useGetIncentiveConfig'\nimport useGetIncentivePoolInfo from '@/hooks/incentive/useGetIncentivePoolInfo'\nimport useIncentiveStore from '@/store/incentive'\nimport { IncentiveRewardInfo } from '@/types/incentive'\nimport useQueryParams from '@cetus/hooks/src/useQueryParams'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { BackButton } from '@cetus/ui-kit'\nimport { d, isAvailableObject, removeComma } from '@cetus/utils'\nimport { Box, HStack, VStack } from '@chakra-ui/react'\nimport { useInterval } from 'ahooks'\nimport { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nexport default function Incentive() {\n  const { poolAddress } = useQueryParams()\n  const { getIncentivePoolInfo } = useGetIncentivePoolInfo()\n  const { getDlmmWhiteTokenList } = useGetIncentiveConfig()\n  const [rewardList, setRewardList] = useState<IncentiveRewardInfo[]>([{}])\n  const { setIncentiveApiPoolInfo, setIncentiveContractPoolInfo } = useIncentiveStore()\n  const { isApp } = useWindowWidth()\n  const navigate = useNavigate()\n  useEffect(() => {\n    console.log('🚀 ~ Incentive ~ poolAddress:', poolAddress)\n    if (poolAddress) {\n      getIncentivePoolInfo(poolAddress)\n    }\n  }, [poolAddress])\n\n  useInterval(() => {\n    getDlmmWhiteTokenList()\n  }, 60 * 1000)\n\n  const showReleaseInfo = rewardList?.some(\n    item =>\n      item?.startTime &&\n      item?.endTime &&\n      item?.rewardNum &&\n      item?.releaseRate &&\n      isAvailableObject(item?.rewardCoin) &&\n      d(removeComma(item?.releaseRate + '')).gte(d(1).div(d(10).pow(item?.rewardCoin?.decimals)))\n  )\n\n  useEffect(() => {\n    return () => {\n      setIncentiveApiPoolInfo(undefined)\n      setIncentiveContractPoolInfo(undefined)\n    }\n  }, [])\n\n  return (\n    <VStack w={{ base: '100%', lg: showReleaseInfo ? '1016px' : '540px' }} align=\"flex-start\" mt=\"20px\" gap=\"16px\">\n      <BackButton onClick={() => navigate(`/dlmm?poolId=${poolAddress}`)} />\n      <HStack flexDirection={{ base: 'column', lg: 'row' }} w=\"100%\" align=\"flex-start\" justify={showReleaseInfo ? 'space-between' : 'center'}>\n        <VStack w=\"100%\" flex={{ base: '0 0 1', lg: '0 0 540px' }}>\n          <AddIncentive />\n          <RewardTokenAndDuration\n            rewardList={rewardList}\n            changeRewardList={(item: any) => {\n              setRewardList(item)\n            }}\n          />\n        </VStack>\n        {showReleaseInfo && !isApp && (\n          <Box flex=\"0 0 460px\">\n            <ReleaseInfo rewardList={rewardList} />\n          </Box>\n        )}\n      </HStack>\n    </VStack>\n  )\n}\n"],"names":["baseRest","func","start","setToString","overRest","identity","isArrayLikeObject","value","isObjectLike","isArrayLike","unionBy","arrays","iteratee","last","baseUniq","baseFlatten","baseIteratee","store","set","get","data","CommonContentTable","INCENTIVE_WHITE_TOKEN_LIST","useIncentiveStore","create","AddIncentive","incentiveApiPoolInfo","getExplorerUrl","useExplorer","isApp","useWindowWidth","cursorStyle","useMemo","jsxs","VStack","jsx","Text","Block","Skeleton","HStack","CoinPairImage","_a","_b","_c","_d","_e","_f","textEllipses","_g","_h","AddressCopyLink","Box","_i","baseFeeStepConfig","_j","_k","RewardsBlock","AprTooltip","useAddIncentive","dlmmSdk","useSdk","option","tx","txf","id","curr_emission_per_second","last_updated_time","error","ConfirmModal","totalAmount","rewardList","isOpen","onClose","textStyle","size","useDocumentSize","modalH","incentiveContractPoolInfo","addLoading","setAddLoading","useState","getInitIncentivePayload","getAddIncentivePayload","signAndExecuteTransaction","useTransaction","toAddIncentive","Transaction","existingRewards","initializedCoinTypes","fixCoinType","r","alreadyInitSet","rewardInfo","coinType","params","amountToBN","res","status","info","Modal","ModalOverlay","ModalContent","ModalHeader","Heading","ModalCloseButton","ModalBody","index","releaseRate","d","removeComma","SingleTokenInfo","addComma","HTextLabelBox","utcTimeFormattedWithSeconds","formatEpoch","TooltipIcon","formatNumber","Button","REWARD_PERIOD","useGetIncentiveTimeOptions","maxIntervals","baseTime","timeInterval","now","twoDaysAgo","REWARD_PERIOD_START_AT","endTime","_maxIntervals","generateRewardSchedule","TimeSelect","title","fieldKey","onSelect","isEndTime","selectedTime","getIncentiveTimeOptions","timeOptions","setTimeOptions","useEffect","fetchTimeOptions","length","futureDates","fullOptions","isAllowSelect","useCallback","date","CetusTooltip","Menu","Fragment","MenuButton","Icon","MenuList","allowSelect","isNowOption","MenuItem","RewardContent","whiteTokenList","rewardListLength","deleteReward","updateReward","isLast","balanceInfo","useGetTokenBalance","getTokenAmountValue","useTokenPrice","tabList","handleChangeTab","tab","startIsNow","TradeInput","val","isAvailableObject","ErrorTips","ReleaseInfoItem","RewardTokenAndDuration","changeRewardList","setIncentiveApiPoolInfo","poolWhiteTokenList","globalConfig","isChecked","setIsChecked","isOpenModal","setIsOpenModal","hasInitialized","setHasInitialized","tokenBalanceObj","useTokenBalanceStore","currentAccount","onWalletModal","useAccountStore","addedRewards","setAddedRewards","key","prev","item","i","updatedItem","duration","useInterval","currentTime","defaultReward","addReward","_","hasInsufficientBalance","mergedMap","rewardCoin","rewardNum","tag","extractStructTagFromType","addr","total","decimals","balance","bnToAmount","isRewardValid","limitRewardsTokenNum","fetchTokenPrices","sum","acc","amountVal","formatCurrency","coinTypes","getTokenInfo","useGetToken","setWhiteTokenList","fetchToken","err","getWhiteTokenList","rewardsCoinTypes","rewardsTokenList","added","merged","fetched","uniqueTokens","token","e","useDeepCompareEffect","someRewardTooLow","addRewardsAbleLength","white","reward","CheckBox","startTime","returnType","dayjs","end","diffHours","days","hours","dayStr","hourStr","RewardsPreviewChart","getRewardPeriodEmission","setData","getRewardPeriod","_data","durationSeconds","currentReward","existing","formatExisting","parseRewardPeriodEmission","amountValue","addRates","formatAfter","result","rates","time","hasPreRewards","ticks","min","Decimal","max","tick3","tick0","interval","rightTicks","list","useSize","chartRef","useRef","ResponsiveContainer","ComposedChart","XAxis","props","CustomizedXAxisTick","YAxis","formatLeftYAxis","formatRightYAxis","Tooltip","RewardsPreviewTooltip","Legend","Area","formatNumberWithKMB","x","y","width","height","payload","label","rest","len","formatPercentage","ReleaseInfo","periodDays","apr","useGetIncentiveConfig","setPoolWhiteTokenList","setGlobalConfig","useGetIncentivePoolInfo","formatDlmmApiPoolByContractPool","useGetDlmmContractPoolInfo","getDlmmPools","useGetDlmmPools","setIncentiveContractPoolInfo","getIncentivePoolInfo","poolAddress","apiPoolInfo","fetchContractPoolInfo","contractPool","camelCaseObject","formattedApiPool","Incentive","useQueryParams","getDlmmWhiteTokenList","setRewardList","navigate","useNavigate","showReleaseInfo","BackButton"],"mappings":"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","x_google_ignoreList":[0,1,2]}