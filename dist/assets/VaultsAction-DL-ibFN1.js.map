{"version":3,"file":"VaultsAction-DL-ibFN1.js","sources":["../../src/store/vaults-v2/useVaultsAction.ts","../../src/hooks/vaults-farming/useVaultFarmingButtonStatus.ts","../../src/hooks/vault-v2/useCurrentVaultDetail.ts","../../src/hooks/vaults-farming/useVaultFarmingPage.ts","../../src/components/vaults-v2/farming/FarmingStake.tsx","../../src/components/vaults-v2/farming/UnstakeAndWithdraw.tsx","../../src/components/vaults-v2/farming/UnstakeLp.tsx","../../src/components/vaults-v2/farming/FarmingUnstake.tsx","../../src/components/vaults-v2/farming/FarmingModal.tsx","../../src/hooks/vaults-farming/useCalculateVaultFarmingRewardUSD.ts","../../src/hooks/vaults-farming/useGetStakedVaultFarmingTvl.ts","../../src/hooks/vaults-farming/useVaultsFarmingOverview.ts","../../src/components/vaults-v2/farming/FarmingIncentives.tsx","../../src/components/vaults-v2/detail/VaultsAddResult.tsx","../../src/components/modal/VaultsAddConfirmModel.tsx","../../src/hooks/vault-v2/useVaultAvaiableCapacity.ts","../../src/hooks/vault-v2/useVaultsHelper.ts","../../src/hooks/vault-v2/useVaultsAdd.ts","../../src/hooks/vault-v2/useVaultsButtonStatus.ts","../../src/store/vaults-v2/useVaultsRisk.ts","../../src/components/vaults-v2/common/ZapSwitch.tsx","../../src/components/vaults-v2/common/SwitchAssetTab.tsx","../../src/components/vaults-v2/risk-modal/index.tsx","../../src/components/vaults-v2/detail/AvailableCapacity.tsx","../../src/components/vaults-v2/detail/VaultsAdd.tsx","../../src/hooks/vault-v2/useVaultsRemove.ts","../../src/components/vaults-v2/detail/VaultsRemove.tsx","../../src/components/vaults-v2/detail/VaultsAction.tsx"],"sourcesContent":["import { Token } from '@cetus/types'\nimport { create, StateCreator } from 'zustand'\n\ninterface VaultsActionState {\n  amountInputA: string\n  amountInputB: string\n  setAmountInputA: (amountInputA: string) => void\n  setAmountInputB: (amountInputB: string) => void\n  fromToken: Token\n  toToken: Token\n  setFromToken: (fromToken: Token) => void\n  setToToken: (toToken: Token) => void\n  calculateResult: { amount_a: string; amount_b: string; ft_amount?: string; burn_ft_amount?: string; swap_result?: any; swap?: any }\n  setCalculateResult: (\n    calculateResult: { amount_a: string; amount_b: string; ft_amount?: string; burn_ft_amount?: string; swap_result?: any; swap?: any } | undefined\n  ) => void\n  clearVaultsActionData: () => void\n  // Áî®‰∫éprofile\n  isProfileOpenVaultModal: boolean\n  setIsProfileOpenVaultModal: (isProfileOpenVaultModal: boolean) => void\n  profilePoolInfo: any\n  setProfilePoolInfo: (profilePoolInfo: any) => void\n  profileActionTab: 'Deposit' | 'Withdraw'\n  setProfileActionTab: (profileActionTab: 'Deposit' | 'Withdraw') => void\n  isCheckedZAP: boolean\n  setIsCheckedZAP: (status: boolean) => void\n  assetAction: string\n  setAssetAction: (value: string) => void\n  currTab: string\n  setCurrTab: (value: string) => void\n}\n\nconst store: StateCreator<VaultsActionState> = (set, get) => ({\n  amountInputA: '',\n  isProfileOpenVaultModal: false,\n  setIsProfileOpenVaultModal: (isProfileOpenVaultModal: boolean) => {\n    set(() => ({\n      isProfileOpenVaultModal\n    }))\n  },\n  profilePoolInfo: {},\n  setProfilePoolInfo: (profilePoolInfo: any) => {\n    set(() => ({\n      profilePoolInfo\n    }))\n  },\n  amountInputB: '',\n  setAmountInputA: (value: string) => {\n    set(() => ({\n      amountInputA: value\n    }))\n  },\n  profileActionTab: 'Deposit',\n  setProfileActionTab: (profileActionTab: 'Deposit' | 'Withdraw') => {\n    set(() => ({\n      profileActionTab\n    }))\n  },\n  setAmountInputB: (value: string) => {\n    set(() => ({\n      amountInputB: value\n    }))\n  },\n  fromToken: {} as Token,\n  toToken: {} as Token,\n  setFromToken: (fromToken: Token) => set({ fromToken }),\n  setToToken: (toToken: Token) => set({ toToken }),\n  calculateResult: { amount_a: '', amount_b: '', ft_amount: '' },\n  setCalculateResult: (\n    calculateResult: { amount_a: string; amount_b: string; ft_amount?: string; burn_ft_amount?: string; swap_result?: any; swap?: any } | undefined\n  ) => set({ calculateResult }),\n  clearVaultsActionData: () =>\n    set({\n      amountInputA: '',\n      amountInputB: '',\n      // fromToken: {} as Token,\n      // toToken: {} as Token,\n      calculateResult: { amount_a: '', amount_b: '', ft_amount: '' }\n    }),\n  isCheckedZAP: false,\n  setIsCheckedZAP: (status: boolean) => {\n    set({ isCheckedZAP: status })\n  },\n  assetAction: 'both',\n  setAssetAction: (value: string) => {\n    set({ assetAction: value })\n  },\n  currTab: 'Deposit',\n  setCurrTab: (value: string) => {\n    set({ currTab: value })\n  }\n})\n\nconst useVaultsActionStore = create(store)\nexport default useVaultsActionStore\n","import { d } from '@cetusprotocol/common-sdk'\n\nexport default function useVaultFarmsButtonStatus(availableBalance: string, stakeAmount: string, currentFarm: any, isAdd: boolean) {\n  let btnInfo = {\n    isDisabled: false,\n    btnText: ''\n  }\n\n  if (!stakeAmount || d(stakeAmount).lte(0)) {\n    btnInfo.isDisabled = true\n  }\n\n  if (d(stakeAmount || '0').gt(d(availableBalance || '0'))) {\n    btnInfo.isDisabled = true\n    btnInfo.btnText = isAdd ? `Insufficient  ${currentFarm.coinDetail.symbol} balance` : `Invalid Amount`\n  }\n\n  return btnInfo\n}\n","import useVaultsFarmingStore from '@/store/vaults-farming'\nimport useVaultsActionStore from '@/store/vaults-v2/useVaultsAction'\nimport useVaultsListV2Store from '@/store/vaults-v2/useVaultsList'\nimport useVaultsPoolContractStore from '@/store/vaults-v2/useVaultsPoolContract'\nimport useVaultsPositionStore from '@/store/vaults-v2/useVaultsPosition'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport { useSdk } from '@cetus/sdk-factory'\nimport { useAccountStore } from '@cetus/stores'\nimport usePeripherySDKStore from '@cetus/stores/src/usePeripherySDKStore'\nimport { isAvailableObject } from '@cetus/utils'\nimport { fixCoinType } from '@cetusprotocol/common-sdk'\nimport { Balance } from '@mysten/sui/client'\nimport { useEffect, useRef } from 'react'\nimport { useLocation, useParams } from 'react-router-dom'\nimport useGetPythLastPrice from './pyth-price/useGetPythLastPrice'\nimport useGetVaultPoolList from './useGetVaultPoolList'\nimport useGetVaultsContract from './useGetVaultsContract'\nimport useGetVaultsPosition from './useGetVaultsPosition'\nimport useVaultList from './useVaultList'\n\nexport default function useCurrentVaultDetail() {\n  const { setCurrentVaultPosition, vaultsPositionObj, setCurrentVaultPositionLoading, setVaultsPositionObj } = useVaultsPositionStore()\n  const { vaultClmmPoolContractInfoObj, setLstVaultContractInfoObj, setHaedalVaultContractInfoObj, vaultDlmmPoolContractInfoObj } =\n    useVaultsPoolContractStore()\n  const { setVaultsFarmingStakeLoading } = useVaultsFarmingStore()\n  const { volatileVaultsSdk } = usePeripherySDKStore()\n  const vaultsSdk = useSdk('vaults')\n  const { vaultsList } = useVaultsListV2Store()\n  const { getVaultPoolList } = useGetVaultPoolList()\n  const { getVaultPosition } = useGetVaultsPosition()\n  const { getVaultsContractInfo } = useGetVaultsContract()\n  const { getPythLastPrice } = useGetPythLastPrice()\n  const { fetchTokenPrices } = useTokenPrice()\n  const { setFromToken, setToToken } = useVaultsActionStore()\n  const { getVaultsLpTokenList } = useVaultList()\n\n  const { currentAccount } = useAccountStore()\n  const currentAcc = useRef(currentAccount?.address)\n  useEffect(() => {\n    currentAcc.current = currentAccount?.address\n  }, [currentAccount?.address])\n\n  const { vaultId } = useParams()\n  const { pathname } = useLocation()\n\n  const vaultIdRef = useRef(vaultId)\n  useEffect(() => {\n    vaultIdRef.current = vaultId\n  }, [vaultId])\n\n  // Ëé∑ÂèñÂΩìÂâçvaultËØ¶ÊÉÖ\n  const getCurrentVaultDetail = (vaultId: string, isRefresh = false) => {\n    if (vaultIdRef.current !== vaultId && pathname.indexOf('/vaults-detail') > -1) return\n    // Â¶ÇÊûúÂΩìÂâçvaultËØ¶ÊÉÖÂ∑≤Â≠òÂú®ÔºåÂàôÁõ¥Êé•ËøîÂõû\n    if (isAvailableObject(vaultsPositionObj) && vaultsPositionObj[vaultId] && !isRefresh) {\n      const currentVaultPositionData = vaultsPositionObj[vaultId]\n      if (currentVaultPositionData.ownerAddress == currentAcc.current && currentAcc.current) {\n        const { displayTokenA, displayTokenB } = currentVaultPositionData\n        setFromToken(displayTokenA)\n        setToToken(displayTokenB)\n        setCurrentVaultPosition(currentVaultPositionData)\n        setCurrentVaultPositionLoading(false)\n      } else {\n        getCurrentVaultByVaultId(vaultId, isRefresh)\n      }\n    } else {\n      // Ê≤°ÊúâÁöÑËØùËé∑ÂèñÊúÄÊñ∞ÁöÑ\n      getCurrentVaultByVaultId(vaultId, isRefresh)\n    }\n  }\n\n  // Ëé∑ÂèñÂΩìÂâçVault Ê±†Â≠ê‰ø°ÊÅØ„ÄÅtokenÊ±áÁéá\n  const getCurrentVaultContractInfo = async (vaultId: any) => {\n    // Ëé∑ÂèñvaultÂàóË°®\n    const { poolList: list } = await getVaultPoolList()\n\n    // Ëé∑ÂèñvaultLP Token‰ø°ÊÅØ\n    const lpTokenInfoObj = await getVaultsLpTokenList(list)\n    // Ëé∑ÂèñÂΩìÂâçvaultËØ¶ÊÉÖ\n    const vault = list.filter((item: any) => item.vaultId == vaultId)[0]\n    const { displayTokenA, displayTokenB } = vault\n    setFromToken(displayTokenA)\n    setToToken(displayTokenB)\n    if (vault.category == 'haedal' || vault.category == 'cetus-dlmm') {\n      getPythLastPrice([fixCoinType(vault.displayTokenA.coin_type, false), fixCoinType(vault.displayTokenB.coin_type, false)])\n    } else {\n      fetchTokenPrices([fixCoinType(vault.displayTokenA.coin_type, false), fixCoinType(vault.displayTokenB.coin_type, false)])\n    }\n    // Ëé∑ÂèñvaultsContractInfo\n    const { lstVaultContractInfoObj, haedalVaultContractInfoObj, allClmmPoolContractInfoObj, dlmmVaultContractInfoObj, allDlmmPoolContractInfoObj } =\n      await getVaultsContractInfo([vault])\n    console.log('üöÄüöÄüöÄ ~ useCurrentVaultDetail.ts:93 ~ getCurrentVaultContractInfo ~ dlmmVaultContractInfoObj:', dlmmVaultContractInfoObj)\n    // Ëé∑ÂèñclmmContractInfo\n    const clmmContractInfo = allClmmPoolContractInfoObj[vault.clmmPoolAddress]\n    // Ëé∑ÂèñdlmmContractInfo\n    const dlmmContractInfo = allDlmmPoolContractInfoObj[vault.dlmmPoolAddress]\n    // Ëé∑ÂèñvaultContractInfo\n    const vaultContractInfo =\n      vault.category == 'cetus'\n        ? lstVaultContractInfoObj[vault.vaultId]\n        : vault.category == 'cetus-dlmm'\n          ? dlmmVaultContractInfoObj[vault.vaultId]\n          : haedalVaultContractInfoObj[vault.vaultId]\n    return { vaultContractInfo, clmmContractInfo, dlmmContractInfo, vault, lpTokenInfoObj, category: vault.category }\n  }\n\n  // Ëé∑ÂèñÂΩìÂâçvaultËØ¶ÊÉÖ\n  const getCurrentVaultByVaultId = async (vaultId: any, isRefresh = false) => {\n    try {\n      if (currentAcc.current && !isRefresh) {\n        setCurrentVaultPositionLoading(true)\n      }\n      const { vaultContractInfo, clmmContractInfo, vault, lpTokenInfoObj, dlmmContractInfo, category } = await getCurrentVaultContractInfo(vaultId)\n      console.log('üöÄüöÄüöÄ ~ useCurrentVaultDetail.ts:114 ~ getCurrentVaultByVaultId ~ vault:', vault)\n      console.log('üöÄüöÄüöÄ ~ useCurrentVaultDetail.ts:109 ~ getCurrentVaultByVaultId ~ dlmmContractInfo:', dlmmContractInfo)\n      let currentVaultPosition: any = {}\n      if ((category == 'cetus-dlmm' ? dlmmContractInfo : clmmContractInfo) && vaultContractInfo && currentAcc.current) {\n        // Ëé∑ÂèñÂΩìÂâçvaultËØ¶ÊÉÖ\n\n        currentVaultPosition = await getVaultPosition(\n          vault,\n          category == 'cetus-dlmm' ? dlmmContractInfo : clmmContractInfo,\n          vaultContractInfo,\n          false,\n          {} as Balance,\n          currentAcc.current,\n          lpTokenInfoObj\n        )\n        console.log('üöÄüöÄüöÄ ~ useCurrentVaultDetail.ts:128 ~ getCurrentVaultByVaultId ~ currentVaultPosition:', currentVaultPosition)\n        console.log(\n          'üöÄüöÄüöÄ ~ useCurrentVaultDetail.ts:130 ~ getCurrentVaultByVaultId ~ currentVaultPosition[vault.vaultId]:',\n          currentVaultPosition,\n          vault.vaultId,\n          currentVaultPosition[vault.vaultId].ownerAddress\n        )\n        if (currentVaultPosition[vault.vaultId].ownerAddress == currentAcc.current && currentAcc.current) {\n          // ËÆæÁΩÆÂΩìÂâçvaultËØ¶ÊÉÖ\n          setCurrentVaultPosition(currentVaultPosition[vault.vaultId])\n          setCurrentVaultPositionLoading(false)\n        }\n      } else {\n        setCurrentVaultPositionLoading(false)\n        setVaultsFarmingStakeLoading(false)\n      }\n    } catch (error) {\n      setCurrentVaultPositionLoading(false)\n    }\n  }\n\n  // Êõ¥Êñ∞ÂΩìÂâçvaultËØ¶ÊÉÖ\n  const updateCurrentVaultById = async (vaultId: string) => {\n    const vault = vaultsList.filter((item: any) => item.vaultId == vaultId)[0]\n    const clmmContractInfo = vaultClmmPoolContractInfoObj[vault.clmmPoolAddress]\n    const dlmmContractInfo = vaultDlmmPoolContractInfoObj[vault.dlmmPoolAddress]\n    const category = vault.category\n    let vaultContractInfo\n    if (vault.category == 'cetus') {\n      vaultContractInfo = await vaultsSdk!.Vaults.getVault(vault.vaultId)\n    } else if (vault.category == 'haedal') {\n      vaultContractInfo = await volatileVaultsSdk.Vaults.getPool(vault.vaultId)\n    } else if (vault.category == 'cetus-dlmm') {\n      vaultContractInfo = await volatileVaultsSdk.VaultsV2.getPool(vault.vaultId)\n    }\n    if (vault.category == 'cetus') {\n      setLstVaultContractInfoObj({ [vault.vaultId]: vaultContractInfo })\n    } else {\n      setHaedalVaultContractInfoObj({ [vault.vaultId]: vaultContractInfo })\n    }\n    if ((category == 'cetus-dlmm' ? dlmmContractInfo : clmmContractInfo) && vaultContractInfo) {\n      // Ëé∑ÂèñÂΩìÂâçvaultËØ¶ÊÉÖ\n      console.log('üöÄüöÄüöÄ ~ useCurrentVaultDetail.ts:152 ~ updateCurrentVaultById ~ Ëé∑ÂèñÂΩìÂâçvaultËØ¶ÊÉÖ:')\n      const currentVaultPosition = await getVaultPosition(vault, category == 'cetus-dlmm' ? dlmmContractInfo : clmmContractInfo, vaultContractInfo)\n      console.log('üöÄüöÄüöÄ ~ useCurrentVaultDetail.ts:173 ~ updateCurrentVaultById ~ currentVaultPosition:', currentVaultPosition)\n      if (currentVaultPosition[vault.vaultId].ownerAddress == currentAcc.current && currentAcc.current) {\n        // ËÆæÁΩÆÂΩìÂâçvaultËØ¶ÊÉÖ\n        setCurrentVaultPosition(currentVaultPosition[vault.vaultId])\n        setVaultsPositionObj(currentVaultPosition)\n      }\n    }\n  }\n\n  return { getCurrentVaultDetail, getCurrentVaultContractInfo, getCurrentVaultByVaultId, updateCurrentVaultById }\n}\n","import useGlobalStore from '@/store/common/global'\nimport { MsafeTransactionSubType } from '@/types'\nimport { formatDescription } from '@/utils'\nimport usePeripherySDKStore from '@cetus/stores/src/usePeripherySDKStore'\nimport { BalanceChanges, CommonTypeInfo, ToastType, TransactionStatusType } from '@cetus/types'\nimport { d } from '@cetusprotocol/common-sdk'\nimport { Transaction } from '@mysten/sui/transactions'\nimport { useState } from 'react'\nimport useTransaction from '../common/useTransaction'\nimport useCurrentVaultDetail from '../vault-v2/useCurrentVaultDetail'\nimport useGetVaultFarmingStaked from './useGetVaultFarmingStaked'\n\nexport function useVaultFarmingPage(vaultsId: string, currentVaultsFarming: any, vaultsFarmingStaked: any) {\n  const [stakeAmount, setStakeAmount] = useState<string>('')\n  const { haedalFarmSdk } = usePeripherySDKStore()\n  const { signAndExecuteTransaction, transactionRejected } = useTransaction()\n  const { mevProtect, maxCapForGas, transactionMode, customGasPrice } = useGlobalStore()\n  const [isLoading, setIsLoading] = useState<boolean>(false)\n  const { updateCurrentVaultById } = useCurrentVaultDetail()\n  const { getVaultsFarmingStaked } = useGetVaultFarmingStaked()\n\n  const handleChangeStakeValue = (value: string) => {\n    setStakeAmount(value)\n  }\n\n  const farmStakeAction = async () => {\n    setIsLoading(true)\n    // ÊûÑÂª∫ ‰∫§ÊòìÊèêÁ§∫\n    const toastInfo: ToastType = {\n      getShowInfo: (status: TransactionStatusType, balanceChanges?: Record<string, BalanceChanges>) => {\n        const description = 'Stake ' + formatDescription(stakeAmount, currentVaultsFarming?.coinDetail?.symbol)\n        const info: CommonTypeInfo = {\n          modalDescriptionText: description,\n          toastTitleText: description\n        }\n        return info\n      }\n    }\n\n    const stakeParams = {\n      poolId: currentVaultsFarming.poolId,\n      stakeCoinType: currentVaultsFarming.stakeCoinType,\n      amount: Number(stakeAmount),\n      decimals: Number(currentVaultsFarming.coinDetail.decimals),\n      stakeObjectId: vaultsFarmingStaked.stakeObjectId\n    }\n    console.log('üöÄüöÄüöÄ ~ useVaultFarmingPage.ts:42 ~ farmStakeAction ~ stakeParams.currentVaultsFarming:', currentVaultsFarming)\n\n    console.log('üöÄüöÄüöÄ ~ useVaultFarmStake.ts:31 ~ farmStakeAction ~ stakeParams:', JSON.stringify(stakeParams))\n\n    try {\n      const txb = async () => {\n        const tx = new Transaction()\n        tx.setSender(haedalFarmSdk.senderAddress)\n        await haedalFarmSdk.Farms.buildStakePayload(stakeParams, tx)\n        console.log('üöÄüöÄüöÄ ~ useVaultFarmStake.ts:50 ~ txb ~ tx:', tx)\n        return tx\n      }\n\n      const res = await signAndExecuteTransaction(txb, toastInfo, {\n        useMev: mevProtect,\n        txAction: 'signTransactionBlock',\n        useFastMode: transactionMode === 'Fast Mode',\n        maxCapForGas,\n        customGasPrice,\n        msafeParams: {\n          action: MsafeTransactionSubType.VaultsFarmingStake,\n          txbParams: stakeParams\n        }\n      })\n      if (res) {\n        setIsLoading(false)\n        setStakeAmount('')\n        updateCurrentVaultById(vaultsId)\n        getVaultsFarmingStaked({ stakeCoinType: currentVaultsFarming.stakeCoinType, poolId: currentVaultsFarming.poolId }, vaultsId)\n      } else {\n        setIsLoading(false)\n      }\n    } catch (error) {\n      console.log('üöÄ ~ doAddAction ~ error:', error)\n      transactionRejected(toastInfo)\n      setIsLoading(false)\n    }\n  }\n\n  const farmUnStakeAction = async () => {\n    setIsLoading(true)\n    // ÊûÑÂª∫ ‰∫§ÊòìÊèêÁ§∫\n    const toastInfo: ToastType = {\n      getShowInfo: (status: TransactionStatusType, balanceChanges?: Record<string, BalanceChanges>) => {\n        const description = 'Unstake ' + formatDescription(stakeAmount, currentVaultsFarming?.coinDetail?.symbol)\n        const info: CommonTypeInfo = {\n          modalDescriptionText: description,\n          toastTitleText: description\n        }\n        return info\n      }\n    }\n\n    const unStakeParams = {\n      poolId: currentVaultsFarming.poolId,\n      stakeCoinType: currentVaultsFarming.stakeCoinType,\n      stakeObjectId: vaultsFarmingStaked.stakeObjectId,\n      amount: d(stakeAmount)\n        .mul(10 ** currentVaultsFarming.coinDetail.decimals)\n        .toString(),\n      claimReward: true,\n      rewardConfigs: vaultsFarmingStaked.rewardConfigs\n    }\n    console.log('üöÄüöÄüöÄ ~ useVaultFarmingPage.ts:42 ~ farmStakeAction ~ stakeParams.currentVaultsFarming:', currentVaultsFarming)\n\n    console.log('üöÄüöÄüöÄ ~ useVaultFarmStake.ts:31 ~ farmStakeAction ~ stakeParams:', unStakeParams)\n\n    try {\n      const txb = async () => {\n        const tx = new Transaction()\n        tx.setSender(haedalFarmSdk.senderAddress)\n        await haedalFarmSdk.Farms.buildUnstakePayload(unStakeParams, tx)\n        console.log('üöÄüöÄüöÄ ~ useVaultFarmStake.ts:50 ~ txb ~ tx:', tx)\n        return tx\n      }\n\n      const res = await signAndExecuteTransaction(txb, toastInfo, {\n        useMev: mevProtect,\n        txAction: 'signTransactionBlock',\n        useFastMode: transactionMode === 'Fast Mode',\n        maxCapForGas,\n        customGasPrice,\n        msafeParams: {\n          action: MsafeTransactionSubType.VaultsFarmingUnStake,\n          txbParams: unStakeParams\n        }\n      })\n      if (res) {\n        setIsLoading(false)\n        setStakeAmount('')\n        updateCurrentVaultById(vaultsId)\n        getVaultsFarmingStaked({ stakeCoinType: currentVaultsFarming.stakeCoinType, poolId: currentVaultsFarming.poolId }, vaultsId)\n      } else {\n        setIsLoading(false)\n      }\n    } catch (error) {\n      console.log('üöÄ ~ doAddAction ~ error:', error)\n      transactionRejected(toastInfo)\n      setIsLoading(false)\n    }\n  }\n\n  const farmClaimAction = async () => {\n    setIsLoading(true)\n    // ÊûÑÂª∫ ‰∫§ÊòìÊèêÁ§∫\n    const toastInfo: ToastType = {\n      getShowInfo: (status: TransactionStatusType, balanceChanges?: Record<string, BalanceChanges>) => {\n        const description = 'Claim ' + 'Farming Rewards'\n        const info: CommonTypeInfo = {\n          modalDescriptionText: description,\n          toastTitleText: description\n        }\n        return info\n      }\n    }\n\n    console.log('üöÄüöÄüöÄ ~ useVaultFarmingPage.ts:42 ~ farmStakeAction ~ stakeParams.currentVaultsFarming:', currentVaultsFarming)\n\n    let claimParams\n    try {\n      const txb = async () => {\n        const tx = new Transaction()\n        tx.setSender(haedalFarmSdk.senderAddress)\n        for (let i = 0; i < vaultsFarmingStaked.rewardConfigs?.length; i++) {\n          claimParams = {\n            poolId: currentVaultsFarming.poolId,\n            stakeCoinType: currentVaultsFarming.stakeCoinType,\n            stakeObjectId: vaultsFarmingStaked.stakeObjectId,\n            rewardCoinType: vaultsFarmingStaked.rewardConfigs[i]?.rewardCoinType,\n            rewardBank: vaultsFarmingStaked.rewardConfigs[i]?.bank\n          }\n          console.log('üöÄüöÄüöÄ ~ useVaultFarmStake.ts:31 ~ farmStakeAction ~ stakeParams:', claimParams)\n          await haedalFarmSdk.Farms.buildHarvestPayload(claimParams, tx)\n        }\n        console.log('üöÄüöÄüöÄ ~ useVaultFarmStake.ts:50 ~ txb ~ tx:', tx)\n        return tx\n      }\n\n      const res = await signAndExecuteTransaction(txb, toastInfo, {\n        useMev: mevProtect,\n        txAction: 'signTransactionBlock',\n        useFastMode: transactionMode === 'Fast Mode',\n        maxCapForGas,\n        customGasPrice,\n        msafeParams: {\n          action: MsafeTransactionSubType.VaultsFarmingClaim,\n          txbParams: claimParams\n        }\n      })\n      if (res) {\n        setIsLoading(false)\n        setStakeAmount('')\n        getVaultsFarmingStaked({ stakeCoinType: currentVaultsFarming.stakeCoinType, poolId: currentVaultsFarming.poolId }, vaultsId)\n      } else {\n        setIsLoading(false)\n      }\n    } catch (error) {\n      console.log('üöÄ ~ doAddAction ~ error:', error)\n      transactionRejected(toastInfo)\n      setIsLoading(false)\n    }\n  }\n\n  return { farmStakeAction, isLoading, handleChangeStakeValue, stakeAmount, farmUnStakeAction, farmClaimAction }\n}\n","import useVaultFarmsButtonStatus from '@/hooks/vaults-farming/useVaultFarmingButtonStatus'\nimport { useVaultFarmingPage } from '@/hooks/vaults-farming/useVaultFarmingPage'\nimport useVaultsFarmingStore from '@/store/vaults-farming'\nimport { TradeInput } from '@cetus/design'\nimport { Button } from '@chakra-ui/react'\nimport { useMemo } from 'react'\n\n// vaultsË¥®Êäºfarming\nexport function FarmingStake({ currentVaultPosition, currentVaultsFarming }: { currentVaultPosition: any; currentVaultsFarming: any }) {\n  const { vaultsFarmingStaked } = useVaultsFarmingStore()\n  const currentVaultsFarmingStaked = useMemo(() => {\n    return vaultsFarmingStaked[currentVaultPosition.vaultId]\n  }, [vaultsFarmingStaked, currentVaultPosition.vaultId])\n  const { handleChangeStakeValue, stakeAmount, farmStakeAction, isLoading } = useVaultFarmingPage(\n    currentVaultPosition?.vaultId,\n    currentVaultsFarming,\n    currentVaultsFarmingStaked\n  )\n  const { isDisabled, btnText } = useVaultFarmsButtonStatus(currentVaultPosition?.vaultBalanceFormat, stakeAmount, currentVaultsFarming, true)\n\n  return (\n    <>\n      <TradeInput\n        value={stakeAmount}\n        onChange={handleChangeStakeValue}\n        token={currentVaultsFarming?.coinDetail}\n        placeholder=\"\"\n        balance={currentVaultPosition?.vaultBalanceFormat}\n        wrapStyle={{\n          height: '110px'\n        }}\n      />\n      <Button w=\"100%\" h=\"52px\" fontWeight=\"600\" onClick={farmStakeAction} isDisabled={isDisabled} isLoading={isLoading}>\n        {btnText || 'Stake'}\n      </Button>\n    </>\n  )\n}\n","import Slippage from '@/components/common/Slippage'\nimport { PercentageTab } from '@/components/position/details/RemoveBlock'\nimport { Block, SelectTab, TradeInput, TradeInputGroup } from '@cetus/design'\nimport { Tab } from '@cetus/design/src/components/common/SelectTab'\nimport { HTextLabelBox, Icon, RefreshButton } from '@cetus/ui-kit'\nimport { Button, HStack, Text, VStack } from '@chakra-ui/react'\nimport { useState } from 'react'\n\n// vaults farmingÊèêÂèñÊó∂ÊåáÂÆöcoin ËøôÈÉ®ÂàÜÊöÇÊó∂Ê≤°‰∏ä\nexport function UnstakeAndWithdraw() {\n  const [percentage, setPercentage] = useState<string | number>(25)\n  const [currentActionTab, setCurrentActionTab] = useState<string>('USDC+SUI')\n  const tabList: Tab[] = [\n    {\n      label: 'USDC+SUI',\n      value: 'USDC+SUI'\n    },\n    {\n      label: 'USDC',\n      value: 'USDC'\n    },\n    {\n      label: 'SUI',\n      value: 'SUI'\n    }\n  ]\n  return (\n    <>\n      <HStack w=\"100%\" justifyContent=\"space-between\" gap=\"8px\">\n        <Text fontSize=\"16px\" color=\"text_caption\">\n          Unstake\n        </Text>\n        <HStack w=\"100%\" justifyContent=\"flex-end\">\n          <Slippage slippageType=\"vaults\" compact={true} />\n          <RefreshButton\n            handleRefresh={() => {}}\n            w=\"28px\"\n            h=\"28px\"\n            minW=\"28px\"\n            minH=\"28px\"\n            innerStyle={{ w: '28px', h: '28px', borderRadius: '8px', bg: 'bg_secondary' }}\n          />\n        </HStack>\n      </HStack>\n      <VStack w=\"100%\">\n        <TradeInput value=\"1\" onChange={() => {}} placeholder=\"0\" balance=\"100\" wrapStyle={{ position: 'relative', zIndex: 5, height: '110px' }} />\n        <Block borderRadius=\"0 0 20px 20px\" p=\"20px 14px 8px\" mt=\"-20px\">\n          <PercentageTab\n            percentage={percentage}\n            onChange={value => setPercentage(value)}\n            wrapStyle={{\n              justifyContent: 'space-between'\n            }}\n            selectTabStyle={{\n              w: { base: '220px', lg: '276px' },\n              h: '32px',\n              p: '3px',\n              borderRadius: '8px'\n            }}\n            selectTabItemStyle={{\n              flex: '1',\n              fontSize: '12px',\n              margin: '0px'\n            }}\n            textFontSize=\"20px\"\n          />\n        </Block>\n        <Icon xlinkHref=\"#icon-a-icon_trade\" svgW=\"12px\" svgH=\"12px\" isActive activeColor=\"text_caption\" m=\"8px 0 0px\" />\n      </VStack>\n      <VStack w=\"100%\">\n        <Text w=\"100%\" fontSize=\"16px\" color=\"text_caption\" textAlign=\"left\" mt=\"4px\">\n          Receive\n        </Text>\n        <SelectTab\n          type=\"outlineTab\"\n          wrapStyle={{\n            w: {\n              base: '100%'\n            },\n            h: '42px',\n            padding: '4px'\n            // marginTop: '8px'\n            // marginBottom: '4px'\n          }}\n          itemStyle={{\n            w: '50%',\n            fontSize: '14px',\n            borderRadius: '8px'\n          }}\n          tabList={tabList}\n          currentTab={currentActionTab}\n          handleChangeTab={item => {\n            setCurrentActionTab(item.value)\n          }}\n        />\n        <TradeInputGroup\n          from={{\n            wrapStyle: {\n              height: '110px'\n            }\n          }}\n          to={{\n            wrapStyle: {\n              height: '110px'\n            }\n          }}\n        />\n        <Button w=\"100%\" h=\"52px\">\n          Deposit\n        </Button>\n        <VStack w=\"100%\" gap=\"20px\" mt=\"8px\">\n          <HTextLabelBox\n            label=\"Total Withdraw\"\n            labelStyle={{\n              fontSize: '14px'\n            }}\n            value=\"11\"\n            valueStyle={{\n              fontSize: '14px'\n            }}\n            isLoading={false}\n          />\n          <HTextLabelBox\n            label=\"LP Burn Amount\"\n            // value={`${formatNumber(fromDecimalsAmountFix(amountLimit || '0', lpTokenInfo?.decimals), 9)} ${`${displayTokenA?.symbol} - ${displayTokenB?.symbol}`}`}\n            value=\"11\"\n            labelStyle={{\n              fontSize: '14px'\n            }}\n            valueStyle={{\n              fontSize: '14px'\n            }}\n            isLoading={false}\n          />\n        </VStack>\n      </VStack>\n    </>\n  )\n}\n","import useVaultFarmsButtonStatus from '@/hooks/vaults-farming/useVaultFarmingButtonStatus'\nimport { useVaultFarmingPage } from '@/hooks/vaults-farming/useVaultFarmingPage'\nimport useVaultsFarmingStore from '@/store/vaults-farming'\nimport { TradeInput } from '@cetus/design'\nimport { Button } from '@chakra-ui/react'\nimport { useMemo } from 'react'\n\ntype UnstakeLpProps = {\n  currentVaultPosition: any\n  currentVaultsFarming: any\n}\n// vaultsÊèêÂèñ\nexport function UnstakeLp(props: UnstakeLpProps) {\n  const { currentVaultsFarming, currentVaultPosition } = props\n  const { vaultsFarmingStaked } = useVaultsFarmingStore()\n  const currentVaultsFarmingStaked = useMemo(() => {\n    return vaultsFarmingStaked[currentVaultPosition.vaultId]\n  }, [vaultsFarmingStaked, currentVaultPosition.vaultId])\n  const { handleChangeStakeValue, stakeAmount, farmUnStakeAction, isLoading } = useVaultFarmingPage(\n    currentVaultPosition?.vaultId,\n    currentVaultsFarming,\n    currentVaultsFarmingStaked\n  )\n  const { isDisabled, btnText } = useVaultFarmsButtonStatus(currentVaultsFarmingStaked?.stakedBalanceFormat, stakeAmount, currentVaultsFarming, false)\n  return (\n    <>\n      <TradeInput\n        token={currentVaultsFarming?.coinDetail}\n        value={stakeAmount}\n        onChange={handleChangeStakeValue}\n        placeholder=\"0\"\n        balance={currentVaultsFarmingStaked?.stakedBalanceFormat}\n        wrapStyle={{ height: '110px' }}\n      />\n      <Button w=\"100%\" h=\"52px\" fontWeight=\"600\" mt=\"8px\" isDisabled={isDisabled} onClick={farmUnStakeAction} isLoading={isLoading}>\n        {btnText || 'Unstake'}\n      </Button>\n    </>\n  )\n}\n","import { Tab } from '@cetus/design/src/components/common/SelectTab'\nimport { Text, VStack } from '@chakra-ui/react'\nimport { useState } from 'react'\nimport { UnstakeAndWithdraw } from './UnstakeAndWithdraw'\nimport { UnstakeLp } from './UnstakeLp'\n\ntype FarmingUnstakeProps = {\n  currentVaultPosition: any\n  currentVaultsFarming: any\n}\n// vaults farming ÊèêÂèñ\nexport function FarmingUnstake(props: FarmingUnstakeProps) {\n  const [currentActionTab, setCurrentActionTab] = useState('Unstake LP')\n  const tabList: Tab[] = [\n    {\n      label: 'Unstake LP',\n      value: 'Unstake LP'\n    },\n    {\n      label: 'Unstake and Withdraw',\n      value: 'Unstake and Withdraw'\n    }\n  ]\n  return (\n    <VStack w=\"100%\">\n      {/* <SelectTab\n        type=\"outlineTab\"\n        wrapStyle={{\n          w: {\n            base: '100%'\n          },\n          h: '42px',\n          padding: '4px'\n          // marginTop: '8px'\n          // marginBottom: '4px'\n        }}\n        itemStyle={{\n          w: '50%',\n          fontSize: '14px',\n          borderRadius: '8px'\n        }}\n        tabList={tabList}\n        currentTab={currentActionTab}\n        handleChangeTab={item => {\n          setCurrentActionTab(item.value)\n        }}\n      /> */}\n      {currentActionTab === 'Unstake LP' && <UnstakeLp {...props} />}\n      {currentActionTab === 'Unstake and Withdraw' && <UnstakeAndWithdraw />}\n      <Text\n        w=\"100%\"\n        p=\"12px\"\n        textAlign=\"center\"\n        fontSize=\"12px\"\n        color=\"primary\"\n        bg=\"primary_opacity.10\"\n        borderRadius=\"12px\"\n        mt={currentActionTab == 'Unstake LP' ? '4px' : '8px'}\n      >\n        Haedal farming rewards will be claimed when unstaking.\n      </Text>\n    </VStack>\n  )\n}\n","import useCurrentVaultsFarm from '@/hooks/vaults-farming/useCurrentVaultsFarm'\nimport useVaultsPositionStore from '@/store/vaults-v2/useVaultsPosition'\nimport SelectTab, { Tab } from '@cetus/design/src/components/common/SelectTab'\nimport { BackButton } from '@cetus/ui-kit'\nimport { Modal, ModalBody, ModalCloseButton, ModalContent, ModalHeader, ModalOverlay, VStack } from '@chakra-ui/react'\nimport { useState } from 'react'\nimport { FarmingStake } from './FarmingStake'\nimport { FarmingUnstake } from './FarmingUnstake'\ntype FarmingModalProps = {\n  isOpen: boolean\n  setIsOpen: (isOpen: boolean) => void\n  setIsOpenPre: (isOpen: boolean) => void\n  onClose: () => void\n  farmingModalAction: string\n  vaultsId: string\n  isDetail: boolean\n}\n\n// vaults farmingÂºπÁ™ó\nexport default function FarmingModal({ isOpen, onClose, setIsOpen, setIsOpenPre, farmingModalAction, vaultsId, isDetail }: FarmingModalProps) {\n  const [currentActionTab, setCurrentActionTab] = useState(farmingModalAction || 'Stake')\n  const { currentVaultPosition } = useVaultsPositionStore()\n  const { currentVaultsFarm } = useCurrentVaultsFarm(vaultsId)\n\n  const tabList: Tab[] = [\n    {\n      label: 'Stake',\n      value: 'Stake'\n    },\n    {\n      label: 'Unstake',\n      value: 'Unstake'\n    }\n  ]\n\n  return (\n    <Modal\n      isCentered\n      isOpen={isOpen}\n      onClose={() => {\n        setIsOpen(false)\n      }}\n    >\n      <ModalOverlay />\n      <ModalContent width={{ base: '100%', lg: '420px' }}>\n        <ModalHeader>\n          {isDetail && 'Haedal Farms'}\n          {!isDetail && (\n            <BackButton\n              w=\"100%\"\n              border=\"none\"\n              bg=\"none\"\n              justifyContent=\"start\"\n              text={'Haedal Farms'}\n              ml=\"-6px\"\n              customTextStyle={{\n                color: 'text_caption'\n              }}\n              onClick={() => {\n                setIsOpen(false)\n                setIsOpenPre(true)\n              }}\n            />\n          )}\n        </ModalHeader>\n        <ModalCloseButton />\n        <ModalBody p=\"0 16px 8px\">\n          <SelectTab\n            type=\"borderTab\"\n            wrapStyle={{\n              w: '100%',\n              h: '38px',\n              border: 'none',\n              bg: 'none'\n            }}\n            itemStyle={{\n              fontSize: '16px',\n              mr: '28px',\n              fontWeight: '500'\n            }}\n            tabList={tabList}\n            currentTab={currentActionTab}\n            handleChangeTab={(item: Tab) => {\n              setCurrentActionTab(item.value)\n            }}\n          />\n          <VStack gap=\"16px\" mt=\"16px\" pb=\"8px\">\n            {currentActionTab === 'Stake' && <FarmingStake currentVaultPosition={currentVaultPosition} currentVaultsFarming={currentVaultsFarm} />}\n            {currentActionTab === 'Unstake' && (\n              <FarmingUnstake currentVaultPosition={currentVaultPosition} currentVaultsFarming={currentVaultsFarm} />\n            )}\n          </VStack>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  )\n}\n","import useVaultsFarmingStore from '@/store/vaults-farming'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport { useAccountStore } from '@cetus/stores'\nimport { d } from '@cetusprotocol/common-sdk'\nimport { useEffect, useState } from 'react'\n\n// ËÆ°ÁÆóvaults farming rewardÂ•ñÂä±‰ª∑ÂÄº\nexport default function useCalculateVaultFarmingRewardUSD(vaultsFarmingRewards: any[]) {\n  const { getTokenAmountValue } = useTokenPrice()\n  const { setVaultsFarmingRewardsLoading, vaultsFarmingRewardsLoading } = useVaultsFarmingStore()\n\n  const [vaultFarmingRewardAmountUSD, setVaultFarmingRewardAmountUSD] = useState('0')\n  const [vaultFarmingRewardAmount, setVaultFarmingRewardAmount] = useState('0')\n  const { currentAccount } = useAccountStore()\n  useEffect(() => {\n    const calculate = async () => {\n      if (!currentAccount?.address) {\n        setVaultFarmingRewardAmountUSD('--')\n        setVaultsFarmingRewardsLoading(false)\n        return\n      }\n      if (!vaultsFarmingRewards || vaultsFarmingRewards.length === 0) {\n        setVaultFarmingRewardAmountUSD('0')\n        return\n      }\n\n      if (vaultsFarmingRewards.some((item: any) => item.ownerAddress != currentAccount?.address)) {\n        // setVaultFarmingRewardAmountUSD('0')\n        return\n      }\n\n      setVaultsFarmingRewardsLoading(true)\n      try {\n        let totalUSD = d(0)\n        let totalAmount = d(0)\n        for (const item of vaultsFarmingRewards) {\n          const amountUSD = getTokenAmountValue(item.rewardCoinType, item.rewardAmountDisplay)\n          totalUSD = totalUSD.add(amountUSD)\n          totalAmount = totalAmount.add(item.rewardAmountDisplay)\n        }\n        setVaultFarmingRewardAmountUSD(totalUSD.toString())\n        setVaultFarmingRewardAmount(totalAmount.toString())\n      } catch (err) {\n        console.error('Error calculating vault farming reward USD:', err)\n        setVaultFarmingRewardAmountUSD('0')\n      } finally {\n        setVaultsFarmingRewardsLoading(false)\n      }\n    }\n\n    calculate()\n  }, [vaultsFarmingRewards, getTokenAmountValue, currentAccount?.address])\n\n  return { vaultFarmingRewardAmountUSD, vaultsFarmingRewardsLoading, setVaultsFarmingRewardsLoading, vaultFarmingRewardAmount }\n}\n","import useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport { useAccountStore } from '@cetus/stores'\nimport { isAvailableObject } from '@cetus/utils'\nimport { d } from '@cetusprotocol/common-sdk'\nimport { buildVaultsBalance } from 'kk-vault-sdk'\nimport { useEffect, useState } from 'react'\n\n// Ëé∑ÂèñÁî®Êà∑Ë¥®Êäºvaults farmingÁöÑ‰ª∑ÂÄº\nexport default function useGetStakedVaultFarmingTvl(\n  currentVaultContractInfo: any,\n  currentVaultClmmContractInfo: any,\n  vaultsFarmingStaked: any,\n  apiVaultInfo: any\n) {\n  const { getTokenAmountValue } = useTokenPrice()\n  const [stakeVaultFarmingTvl, setStakeVaultFarmingTvl] = useState('')\n  const [stakeVaultFarmingTvlLoading, setStakeVaultFarmingTvlLoading] = useState(true)\n  const { currentAccount } = useAccountStore()\n  useEffect(() => {\n    const fetchTvl = async () => {\n      if (!currentAccount?.address) {\n        setStakeVaultFarmingTvl('--')\n        setStakeVaultFarmingTvlLoading(false)\n        return\n      }\n      if (!currentVaultContractInfo || !currentVaultClmmContractInfo || !isAvailableObject(vaultsFarmingStaked) || !apiVaultInfo) {\n        setStakeVaultFarmingTvl('')\n        return\n      }\n\n      setStakeVaultFarmingTvlLoading(true)\n\n      try {\n        const { coin_type_a, coin_type_b } = currentVaultClmmContractInfo\n        const { tokenA, tokenB } = apiVaultInfo\n\n        const positionInfo = buildVaultsBalance('', vaultsFarmingStaked.stakedBalance, currentVaultContractInfo, currentVaultClmmContractInfo)\n\n        const stakeTokenA = d(positionInfo.amount_a)\n          .div(10 ** (tokenA?.decimals ?? 0))\n          .toString()\n\n        const stakeTokenB = d(positionInfo.amount_b)\n          .div(10 ** (tokenB?.decimals ?? 0))\n          .toString()\n\n        const stakeTokenAUSD = getTokenAmountValue(coin_type_a, stakeTokenA)\n        const stakeTokenBUSD = getTokenAmountValue(coin_type_b, stakeTokenB)\n\n        const total = d(stakeTokenAUSD).add(stakeTokenBUSD)\n\n        setStakeVaultFarmingTvl(total.toString())\n        setStakeVaultFarmingTvlLoading(false)\n      } catch (err) {\n        console.error('Failed to calculate stakeVaultFarmingTvl:', err)\n        setStakeVaultFarmingTvl('0')\n      }\n    }\n\n    fetchTvl()\n  }, [currentVaultContractInfo, currentVaultClmmContractInfo, vaultsFarmingStaked, apiVaultInfo, getTokenAmountValue])\n\n  return {\n    stakeVaultFarmingTvl,\n    stakeVaultFarmingTvlLoading,\n    setStakeVaultFarmingTvlLoading\n  }\n}\n","// hooks/useVaultFarmingOverview.ts\nimport useVaultsFarmingStore from '@/store/vaults-farming'\nimport useVaultsPoolContractStore from '@/store/vaults-v2/useVaultsPoolContract'\nimport useVaultsPositionStore from '@/store/vaults-v2/useVaultsPosition'\nimport { useAccountStore } from '@cetus/stores'\nimport { d } from '@cetus/utils'\nimport { useEffect, useMemo } from 'react'\nimport useCurrentVaults from '../vault-v2/useCurrentVaults'\nimport useVaultHoadings from '../vault-v2/useVaultsHoldings'\nimport useCalculateVaultFarmingApr from './useCalculateVaultFarmingApr'\nimport useCalculateVaultFarmingRewardUSD from './useCalculateVaultFarmingRewardUSD'\nimport useCurrentVaultsFarm from './useCurrentVaultsFarm'\nimport useGetStakedVaultFarmingTvl from './useGetStakedVaultFarmingTvl'\nimport { useVaultFarmingPage } from './useVaultFarmingPage'\n\nexport default function useVaultFarmingOverview(vaultId: string) {\n  const { currentAccount } = useAccountStore()\n  const { currentVaults } = useCurrentVaults(vaultId)\n\n  const { currentVaultsFarm } = useCurrentVaultsFarm(vaultId)\n  const { vaultsFarmingStaked, vaultsFarmingRewards, vaultsFarmingStakeLoading, vaultsFarmingRewardsLoading, clearVaultsFarmingInfo } =\n    useVaultsFarmingStore()\n  // farmingÂΩìÂâçË¥®Êäº\n  const currentVaultsFarmingStaked: any = useMemo(() => {\n    return vaultsFarmingStaked[currentVaults?.vaultId]\n  }, [vaultsFarmingStaked, currentVaults?.vaultId])\n  // farmingÂ•ñÂä±\n  const currentVaultsFarmingAvailableRewards = useMemo(() => {\n    return vaultsFarmingRewards[currentVaults?.vaultId]\n  }, [vaultsFarmingRewards, currentVaults?.vaultId])\n  // vault„ÄÅclmmÂêàÁ∫¶‰ø°ÊÅØ\n  const { haedalVaultContractInfoObj, vaultClmmPoolContractInfoObj } = useVaultsPoolContractStore()\n  const { currentVaultPosition, currentVaultPositionLoading } = useVaultsPositionStore()\n  const { vaultsFarmObj } = useVaultsFarmingStore()\n\n  const currentVaultContractInfo = useMemo(\n    () => haedalVaultContractInfoObj[currentVaults?.vaultId],\n    [currentVaults?.vaultId, haedalVaultContractInfoObj]\n  )\n\n  const currentVaultClmmContractInfo = useMemo(\n    () => vaultClmmPoolContractInfoObj[currentVaults?.clmmPoolAddress],\n    [currentVaults?.clmmPoolAddress, vaultClmmPoolContractInfoObj]\n  )\n\n  const { vaultFarmingAprDisplay, farmingTvlDisplay, vaultFarmingApr, farmingTvl, vaultFarmingLoading } =\n    useCalculateVaultFarmingApr(currentVaultsFarm)\n\n  const { stakeVaultFarmingTvl, stakeVaultFarmingTvlLoading, setStakeVaultFarmingTvlLoading } = useGetStakedVaultFarmingTvl(\n    currentVaultContractInfo,\n    currentVaultClmmContractInfo,\n    currentVaultsFarmingStaked,\n    currentVaults\n  )\n\n  const { vaultFarmingRewardAmountUSD, vaultFarmingRewardAmount } = useCalculateVaultFarmingRewardUSD(currentVaultsFarmingAvailableRewards)\n\n  const currentVaultPositionInfo = useMemo(() => currentVaultPosition, [currentVaultPosition, currentVaults?.vaultId])\n\n  const { holdingAmountDisplay, holdCoinAValue, holdCoinBValue, holdingVaultAmountDisplay } = useVaultHoadings(\n    currentVaultPosition?.displayAmountA,\n    currentVaultPosition?.displayAmountB,\n    currentVaultPosition?.displayCoinTypeA,\n    currentVaultPosition?.displayCoinTypeB,\n    currentVaultPosition?.displayVaultAmountA,\n    currentVaultPosition?.displayVaultAmountB,\n    currentVaults?.category as string\n  )\n\n  const currentVaultsFarming = useMemo(() => vaultsFarmObj[currentVaults?.vaultId], [vaultsFarmObj, currentVaults?.vaultId])\n\n  const { farmClaimAction, isLoading: farmClaimLoading } = useVaultFarmingPage(\n    currentVaultPosition?.vaultId,\n    currentVaultsFarming,\n    currentVaultsFarmingStaked\n  )\n\n  const stakeButtonDisabled = useMemo(() => {\n    return d(currentVaultPosition?.vaultBalance || '0').lte(0)\n  }, [currentVaultPosition])\n\n  const claimButtonDisabled = useMemo(() => {\n    const result =\n      (currentVaultsFarmingAvailableRewards && currentVaultsFarmingAvailableRewards?.filter(reward => d(reward?.rewardAmount || '0').gt(0))) || []\n    return result && result.length <= 0\n  }, [currentVaultsFarmingAvailableRewards])\n\n  const unStakeButtonDisabled = useMemo(() => {\n    return d(currentVaultsFarmingStaked?.stakedBalance || '0').lte(0)\n  }, [vaultsFarmingStaked])\n\n  useEffect(() => {\n    if (!currentAccount?.address) {\n      clearVaultsFarmingInfo()\n    }\n  }, [currentAccount?.address])\n\n  return {\n    vaultFarmingApr,\n    vaultFarmingAprDisplay,\n    vaultFarmingLoading,\n    farmingTvl,\n    farmingTvlDisplay,\n    stakeVaultFarmingTvl,\n    stakeVaultFarmingTvlLoading,\n    vaultFarmingRewardAmountUSD,\n    vaultFarmingRewardLoading: vaultsFarmingRewardsLoading,\n    holdingAmountDisplay,\n    holdCoinAValue,\n    holdCoinBValue,\n    farmClaimAction,\n    farmClaimLoading,\n    vaultsFarmingStakeLoading,\n    vaultsFarmingStaked: currentVaultsFarmingStaked,\n    currentVaultPositionLoading,\n    currentVaultPositionInfo,\n    vaultsFarmingRewards: currentVaultsFarmingAvailableRewards,\n    vaultsFarmingRewardsLoading,\n    stakeButtonDisabled,\n    claimButtonDisabled,\n    unStakeButtonDisabled,\n    holdingVaultAmountDisplay,\n    vaultFarmingRewardAmount,\n    currentVaultsFarm,\n    currentVaultsFarmingStaked\n  }\n}\n","import useVaultFarmingOverview from '@/hooks/vaults-farming/useVaultsFarmingOverview'\nimport { TooltipIcon } from '@cetus/design'\nimport { HTextLabelBox, Icon, SingleCoinImage } from '@cetus/ui-kit'\nimport { symbolDataDisplayProcessing } from '@cetus/utils'\nimport { Button, HStack, Image, Text, VStack } from '@chakra-ui/react'\nimport { useState } from 'react'\n\ntype FarmingIncentivesProps = {\n  apiVaultInfo: any\n  setIsOpenPre: (isOpen: boolean) => void\n  setIsOpenFarmingModal: (isOpen: boolean) => void\n  setFarmingModalAction: (action: string) => void\n}\n\nexport function RewardItem({ rewardInfo }: { rewardInfo: any }) {\n  console.log('üöÄüöÄüöÄ ~ FarmingIncentives.tsx:18 ~ RewardItem ~ rewardInfo:', rewardInfo)\n  return (\n    <VStack borderRadius=\"12px\">\n      <HStack p=\"0\" w=\"100%\" justifyContent=\"space-between\">\n        <HStack>\n          <Image src={rewardInfo?.coinDetail?.logo_url} w=\"20px\" h=\"20px\" />\n        </HStack>\n        <HStack gap=\"4px\">\n          <Text fontSize=\"12px\" color=\"text_caption\">\n            {rewardInfo?.rewardAmountDisplay}\n          </Text>\n          <Text fontSize=\"12px\">{rewardInfo?.coinDetail?.symbol}</Text>\n        </HStack>\n      </HStack>\n    </VStack>\n  )\n}\n\n// vaultsÂºπÁ™ó farmingÂç°ÁâáÈÉ®ÂàÜ\nexport default function FarmingIncentives(props: FarmingIncentivesProps) {\n  const { setIsOpenPre, setIsOpenFarmingModal, setFarmingModalAction, apiVaultInfo } = props\n\n  const [isOpen, setIsOpen] = useState(false)\n\n  const {\n    stakeVaultFarmingTvl,\n    vaultFarmingRewardAmountUSD,\n    farmClaimAction,\n    vaultsFarmingStakeLoading,\n    vaultsFarmingStaked,\n    vaultsFarmingRewards,\n    stakeButtonDisabled,\n    claimButtonDisabled,\n    unStakeButtonDisabled\n  } = useVaultFarmingOverview(apiVaultInfo?.vaultId)\n\n  return (\n    <VStack border=\"1px solid\" borderColor=\"border\" gap=\"12px\" w=\"100%\" borderRadius=\"8px\">\n      <HStack\n        w=\"100%\"\n        p=\"16px 12px\"\n        borderRadius=\"7px\"\n        bg=\"primary_opacity.10\"\n        justifyContent=\"space-between\"\n        onClick={() => setIsOpen(!isOpen)}\n        cursor=\"pointer\"\n      >\n        <HStack gap=\"4px\" cursor=\"pointer\" userSelect=\"none\">\n          <Text color=\"text_caption\" userSelect=\"none\">\n            Farm Overview\n          </Text>\n          <TooltipIcon tooltipCon=\"Powered by Haedal\" />\n        </HStack>\n        {/* <Text color=\"text_highlight\">APR {vaultFarmingAprDisplay}</Text> */}\n        <Icon fontSize=\"12px\" xlinkHref=\"#icon-icon_arrow\" transition=\"transform 0.5s\" transform={isOpen ? 'rotate(180deg)' : 'rotate(0deg)'} />\n      </HStack>\n      {isOpen && (\n        <VStack w=\"100%\" padding=\"0 12px 12px\" gap=\"8px\">\n          <VStack w=\"100%\" gap=\"4px\">\n            <HTextLabelBox\n              isLoading={vaultsFarmingStakeLoading && !vaultsFarmingStaked?.stakedBalanceDisplay}\n              label=\"Your Staked\"\n              value={\n                <VStack alignItems=\"flex-end\">\n                  <Text fontSize=\"14px\" color=\"text_caption\">\n                    {vaultsFarmingStaked?.stakedBalanceDisplay} LP\n                  </Text>\n                  <Text fontSize=\"12px\">{symbolDataDisplayProcessing(stakeVaultFarmingTvl)}</Text>\n                </VStack>\n              }\n              skeletonStyle={{\n                subValueH: '20px'\n              }}\n              valueStyle={{\n                color: 'text_caption'\n              }}\n            />\n          </VStack>\n          <VStack w=\"100%\">\n            <HTextLabelBox\n              label=\"Your Rewards\"\n              isLoading={vaultsFarmingStakeLoading && !vaultsFarmingRewards}\n              rightValueTip={vaultsFarmingRewards?.map((item: any) => {\n                return (\n                  <VStack borderRadius=\"12px\">\n                    <RewardItem rewardInfo={item} />\n                  </VStack>\n                )\n              })}\n              value={\n                <HStack position=\"relative\">\n                  <Text color=\"text_caption\">{symbolDataDisplayProcessing(vaultFarmingRewardAmountUSD)}</Text>\n                  {vaultsFarmingStaked?.rewardConfigs?.map((item: any) => {\n                    return (\n                      <SingleCoinImage\n                        key={item?.coinDetail?.name + 'Icon'}\n                        imageUrl={item?.coinDetail?.logo_url}\n                        w=\"20px\"\n                        h=\"20px\"\n                        coinType={item?.coin_type}\n                        showTag={false}\n                      />\n                    )\n                  })}\n                </HStack>\n              }\n              valueStyle={{\n                textDecoration: 'none'\n              }}\n              wrapStyle={{\n                mt: '4px'\n              }}\n            />\n          </VStack>\n          <Button\n            w=\"100%\"\n            mt=\"12px\"\n            height=\"32px\"\n            borderRadius=\"8px\"\n            fontSize=\"12px\"\n            isDisabled={stakeButtonDisabled}\n            onClick={() => {\n              setIsOpenPre(false)\n              setFarmingModalAction('Stake')\n              setIsOpenFarmingModal(true)\n            }}\n          >\n            Stake\n          </Button>\n          <HStack w=\"100%\" justifyContent=\"space-between\">\n            <Button\n              w=\"50%\"\n              height=\"32px\"\n              variant=\"outline\"\n              borderRadius=\"8px\"\n              fontSize=\"12px\"\n              bg=\"none\"\n              isDisabled={unStakeButtonDisabled}\n              onClick={() => {\n                setIsOpenPre(false)\n                setFarmingModalAction('Unstake')\n                setIsOpenFarmingModal(true)\n              }}\n            >\n              Unstake\n            </Button>\n            <Button\n              w=\"50%\"\n              height=\"32px\"\n              variant=\"outline\"\n              borderRadius=\"8px\"\n              fontSize=\"12px\"\n              bg=\"none\"\n              onClick={farmClaimAction}\n              isDisabled={claimButtonDisabled}\n            >\n              Claim\n            </Button>\n          </HStack>\n        </VStack>\n      )}\n    </VStack>\n  )\n}\n","import TotalAmount from '@/components/common/TotalAmount'\nimport { HTextLabelBox } from '@cetus/ui-kit'\nimport { convertScientificToDecimal, formatNumber } from '@cetus/utils'\nimport { fromDecimalsAmount } from '@cetusprotocol/common-sdk'\nimport { VStack } from '@chakra-ui/react'\n\ntype VaultsAddResultProps = {\n  preCalculateLoading: boolean\n  inputTotalValue?: string\n  lpRate: string\n  amountLimit?: string\n  labelColor?: string\n  lpDecimals?: number\n  poolName: string\n  calculateLpLoading?: boolean\n}\n\n// VaultÊ∑ªÂä†ÁªìÊûú\nexport function VaultsAddResult(props: VaultsAddResultProps) {\n  const { poolName, amountLimit, lpRate, inputTotalValue, preCalculateLoading, labelColor, lpDecimals, calculateLpLoading } = props\n\n  return (\n    <VStack w=\"100%\" gap=\"16px\">\n      <TotalAmount labelStyle={{ color: 'primary_gray' }} totalAmount={inputTotalValue} loading={preCalculateLoading} />\n\n      {/* <HTextLabelBox\n        label=\"Total Amount\"\n        labelStyle={{\n          fontSize: '14px',\n          color: labelColor\n        }}\n        value={formatCurrency(inputTotalValue, 2)}\n        valueStyle={{\n          fontSize: '14px',\n          h: '14px'\n        }}\n        isLoading={preCalculateLoading}\n      /> */}\n      <HTextLabelBox\n        label=\"Share of Pool\"\n        labelStyle={{\n          fontSize: '14px',\n          color: labelColor\n        }}\n        value={lpRate}\n        isLoading={calculateLpLoading}\n        valueStyle={{\n          fontSize: '14px',\n          h: '14px'\n        }}\n        skeletonStyle={{\n          valueH: '14px'\n        }}\n      />\n      <HTextLabelBox\n        label=\"Est. Received LP\"\n        labelStyle={{\n          fontSize: '14px',\n          color: labelColor\n        }}\n        value={`${convertScientificToDecimal(formatNumber(fromDecimalsAmount(amountLimit || '0', lpDecimals ? lpDecimals : 9)).toString(), 9)} ${poolName}`}\n        valueStyle={{\n          fontSize: '14px',\n          h: '14px'\n        }}\n        skeletonStyle={{\n          valueH: '14px'\n        }}\n        isLoading={calculateLpLoading}\n      />\n    </VStack>\n  )\n}\n","import { VaultsAddModelData } from '@/types/vaults'\nimport { TradeConfirmAmountInfo } from '@cetus/design'\nimport { CoinPairImage } from '@cetus/ui-kit'\nimport {\n  Box,\n  Button,\n  HStack,\n  Heading,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n  VStack\n} from '@chakra-ui/react'\nimport PoolTag from '../common/PoolTag'\nimport { VaultsAddResult } from '../vaults-v2/detail/VaultsAddResult'\n\ntype VaultsAddConfirmModelProps = {\n  data: VaultsAddModelData\n  isOpen: boolean\n  onClose: () => void\n  onSubmitClick: () => void\n  calculateLpLoading?: boolean\n}\n\nexport default function VaultsAddConfirmModel(props: VaultsAddConfirmModelProps) {\n  const { isOpen, onClose, data, onSubmitClick, calculateLpLoading } = props\n\n  const {\n    feeTier,\n    displayTokenA,\n    displayTokenB,\n    displayAmountA,\n    displayAmountB,\n    totalAmountValue,\n    sharePool,\n    lpAmountLimit,\n    lpDecimals,\n    category,\n    binStep\n  } = data\n\n  return (\n    <Modal autoFocus={false} returnFocusOnClose={false} isOpen={isOpen} onClose={onClose} isCentered>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>\n          <Heading fontWeight=\"500\" fontSize=\"16px\">\n            Deposit\n          </Heading>\n        </ModalHeader>\n        <ModalCloseButton />\n        <ModalBody textAlign=\"center\" p=\"0px\">\n          <VStack w=\"100%\" gap=\"20px\" p=\"16px\" pb=\"0px\" pos=\"relative\">\n            <HStack w=\"100%\" justifyContent=\"space-between\">\n              <HStack>\n                <CoinPairImage\n                  coinAIconUrl={displayTokenA?.logo_url}\n                  coinBIconUrl={displayTokenB?.logo_url}\n                  imageStyle={{\n                    w: '40px',\n                    h: '40px'\n                  }}\n                  imgBoxStyle={{\n                    w: '40px',\n                    h: '40px'\n                  }}\n                />\n                <Text fontSize=\"16px\" color=\"text_caption\">\n                  {`${displayTokenA?.symbol} - ${displayTokenB?.symbol}`}\n                </Text>\n              </HStack>\n\n              {/* <Block w=\"unset\" p=\"6px 8px\" borderRadius=\"12px\" ml=\"4px\">\n                <HStack>\n                  <Text>Fee Tier</Text>\n                  <Text color=\"primary\">{feeTier}</Text>\n                  {binStep && <Text color=\"primary\">{binStep} bps</Text>}\n                </HStack>\n              </Block> */}\n              <PoolTag poolType={category === 'cetus-dlmm' ? 'dlmm' : 'clmm'} binStep={Number(binStep)} displayFee={feeTier} />\n            </HStack>\n\n            {/* ‰∫§ÊòìÊï∞ÈáèÂ±ïÁ§∫ */}\n            <TradeConfirmAmountInfo\n              coinA={{\n                amount: displayAmountA,\n                ...displayTokenA\n              }}\n              iconParams={{\n                xlinkHref: '#icon-icon_add',\n                svgFill: 'text_caption'\n              }}\n              coinB={{\n                amount: displayAmountB,\n                ...displayTokenB\n              }}\n            />\n\n            {/* Â±ïÁ§∫ÁªìÊûú */}\n\n            <VaultsAddResult\n              amountLimit={lpAmountLimit}\n              inputTotalValue={totalAmountValue}\n              preCalculateLoading={false}\n              calculateLpLoading={calculateLpLoading}\n              lpRate={sharePool}\n              lpDecimals={lpDecimals}\n              poolName={`${displayTokenA?.symbol} - ${displayTokenB?.symbol}`}\n            />\n            <Box h=\"52px\" />\n            <Button\n              pos=\"absolute\"\n              bottom=\"0px\"\n              mt=\"4px\"\n              w=\"100%\"\n              h=\"52px\"\n              borderRadius=\"12px\"\n              fontSize=\"16px\"\n              fontWeight=\"500\"\n              onClick={() => {\n                onSubmitClick()\n              }}\n            >\n              Deposit\n            </Button>\n          </VStack>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  )\n}\n","import { d, symbolDataDisplayProcessing } from '@cetus/utils'\nimport useGetPythTokenPrice from './pyth-price/useGetPythTokenPrice'\n// Ëé∑ÂèñvaultÂèØÁî®ÂÆπÈáè\nexport default function useVaultAvaiableCapacity(currentVaultPool: any) {\n  const { getTokenAmountValueByPyth, getTokenPriceByPyth } = useGetPythTokenPrice()\n\n  if (currentVaultPool) {\n    const { hardCap, quoteCoinType, displayCoinTypeA, displayCoinTypeB, displayAmountA, displayAmountB, quoteCoin, baseCoin, baseCoinType } =\n      currentVaultPool\n\n    const hardCapUSD = getTokenAmountValueByPyth(quoteCoinType, hardCap)\n    if (!hardCapUSD) return {}\n    const displayHardCapUSD = symbolDataDisplayProcessing(hardCapUSD)\n    const holdingAmountA = getTokenAmountValueByPyth(displayCoinTypeA, displayAmountA)\n    const holdingAmountB = getTokenAmountValueByPyth(displayCoinTypeB, displayAmountB)\n    const vaultTvl = d(holdingAmountA).add(d(holdingAmountB)).toString()\n    const depositRatio = d(vaultTvl).div(d(hardCapUSD)).mul(100).toString()\n    const displayDepositRatio = symbolDataDisplayProcessing(depositRatio, '%')\n    const quoteCoinPrice = getTokenPriceByPyth(quoteCoinType)\n    const baseCoinPrice = getTokenPriceByPyth(baseCoinType)\n    const availableCapacityUSD = d(hardCapUSD).sub(d(vaultTvl)).gt(0) ? d(hardCapUSD).sub(d(vaultTvl)).toString() : '0'\n    let availableCapacityWithQuoteCoin, availableCapacityWithBaseCoin\n    if (availableCapacityUSD !== '0') {\n      availableCapacityWithQuoteCoin = d(availableCapacityUSD)\n        .div(quoteCoinPrice || '0')\n        .toString()\n      availableCapacityWithBaseCoin = d(availableCapacityUSD)\n        .div(baseCoinPrice || '0')\n        .toString()\n    } else {\n      availableCapacityWithQuoteCoin = '0'\n      availableCapacityWithBaseCoin = '0'\n    }\n\n    return {\n      hardCap,\n      hardCapUSD,\n      vaultTvl,\n      displayHardCapUSD,\n      depositRatio,\n      displayDepositRatio,\n      baseCoin,\n      quoteCoin,\n      availableCapacityWithQuoteCoin,\n      availableCapacityWithBaseCoin,\n      availableCapacityUSD\n    }\n  }\n  return {}\n}\n","import { VaultApiInfo } from '@/types/vaults'\nimport { d, Decimal, formatNumberWithDown, formatNumberWithThreshold } from '@cetus/utils'\nimport { useMemo } from 'react'\n\n/**\n * ËÆ°ÁÆóÂèòÊõ¥ lp ÁöÑ ÊåÅ‰ªìÂç†ÊØî\n * @param changeLp\n * @param totalLp\n * @returns\n */\nexport function useCalculateChangeLpRate(changeLp?: string, totalLp?: string) {\n  const lpRate = useMemo(() => {\n    if (changeLp && totalLp) {\n      if (d(totalLp).eq(0)) {\n        return '100%'\n      }\n\n      return `${formatNumberWithThreshold(d(changeLp).div(d(changeLp).add(totalLp)).mul(100).toString(), 2, 6)}%`\n    }\n    return '0%'\n  }, [changeLp, totalLp])\n\n  return { lpRate }\n}\n\n/**\n * ËÆ°ÁÆóÊªëÁÇπÊï∞Èáè\n * @param slippage\n * @param amount\n * @param isUp\n * @returns\n */\nexport function useCalculateSlippageAmount(slippage: number, amount?: string, isUp: boolean = false) {\n  const amountLimit = useMemo(() => {\n    if (amount) {\n      return d(amount)\n        .mul(isUp ? 1 + slippage : 1 - slippage)\n        .toString()\n    }\n    return undefined\n  }, [amount, slippage, isUp])\n\n  return { amountLimit }\n}\n\n// export function useContractVault(vaultsId?: string) {\n//   const { contractVaultObj } = useUnstableVaultsListStore()\n\n//   // ÂêàÁ∫¶vaults ‰ø°ÊÅØ\n//   const contractVault = useMemo(() => {\n//     if (vaultsId) {\n//       return contractVaultObj[vaultsId]\n//     }\n//     return undefined\n//   }, [contractVaultObj, vaultsId])\n\n//   return { contractVault }\n// }\n\n// export function useContractClmmInfo(poolAddress?: string) {\n//   const { contractClmmPoolObj } = useUnstableVaultsListStore()\n\n//   const contractClmmInfo = useMemo(() => {\n//     if (poolAddress) {\n//       return contractClmmPoolObj[poolAddress]\n//     }\n//     return undefined\n//   }, [contractClmmPoolObj, poolAddress])\n\n//   return { contractClmmInfo }\n// }\n\nexport function useGetSuiStakeProtocol(coinType?: string) {\n  const stakeProtocolName = useMemo(() => {\n    if (coinType) {\n      if (coinType.includes('HASUI')) {\n        return 'Haedal'\n      }\n\n      if (coinType.includes('AFSUI')) {\n        return 'Aftermath'\n      }\n      if (coinType.includes('CERT')) {\n        return 'Volo'\n      }\n    }\n    return undefined\n  }, [coinType])\n\n  return { stakeProtocolName }\n}\n\nexport function useGetRewardPeDay(balanceFormat?: string, apiInfo?: VaultApiInfo) {\n  const rewardPerA = useMemo(() => {\n    if (apiInfo && balanceFormat) {\n      return `${formatNumberWithDown(d(apiInfo.amountPerLpA).mul(balanceFormat).toFixed(18, Decimal.ROUND_DOWN), apiInfo.displayTokenA.decimals)}  ${apiInfo?.displayTokenA.symbol}`\n    }\n    return undefined\n  }, [apiInfo?.amountPerLpA, balanceFormat])\n\n  const rewardPerB = useMemo(() => {\n    if (apiInfo && balanceFormat) {\n      return `${formatNumberWithDown(d(apiInfo.amountPerLpB).mul(balanceFormat).toFixed(18, Decimal.ROUND_DOWN), apiInfo.displayTokenB.decimals)}  ${apiInfo?.displayTokenB.symbol}`\n    }\n    return undefined\n  }, [apiInfo?.amountPerLpB, balanceFormat])\n\n  return { rewardPerA, rewardPerB }\n}\n","import useGlobalStore from '@/store/common/global'\nimport useVaultsFarmingStore from '@/store/vaults-farming'\nimport useVaultsActionStore from '@/store/vaults-v2/useVaultsAction'\nimport useVaultsPythPrice from '@/store/vaults-v2/useVaultsPythPrice'\nimport { MsafeTransactionSubType } from '@/types'\nimport { formatDescription, isDecimalWithZeros } from '@/utils'\nimport { useAccountBalance, useDebounceFunction } from '@cetus/hooks'\nimport { useGetTokenBalance } from '@cetus/hooks/src/useTokenBalance'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport { useSdk } from '@cetus/sdk-factory'\nimport { useAccountStore } from '@cetus/stores'\nimport usePeripherySDKStore from '@cetus/stores/src/usePeripherySDKStore'\nimport { BalanceChanges, CommonTypeInfo, ToastType, Token, TransactionStatusType } from '@cetus/types'\nimport { convertScientificToDecimal, formatNumber, fromDecimalsAmountFix } from '@cetus/utils'\nimport { CoinAssist, d, fixCoinType, fromDecimalsAmount, toDecimalsAmount } from '@cetusprotocol/common-sdk'\nimport { CalculateAmountParams, InputType } from '@cetusprotocol/vaults-sdk'\nimport { Transaction } from '@mysten/sui/transactions'\nimport { DepositCalculationOptions, DepositCalculationValueOptions, DepositMode } from 'kk-vault-sdk'\nimport { useEffect, useMemo, useRef, useState } from 'react'\nimport { v4 } from 'uuid'\nimport useTransaction from '../common/useTransaction'\nimport useGetVaultFarmingStaked from '../vaults-farming/useGetVaultFarmingStaked'\nimport useGetPythTokenPrice from './pyth-price/useGetPythTokenPrice'\nimport useCurrentVaultDetail from './useCurrentVaultDetail'\nimport { useGetSuiStakeProtocol } from './useVaultsHelper'\n\nexport default function useVaultsAdd(\n  vaultId: string,\n  category: string,\n  displayTokenA: Token,\n  displayTokenB: Token,\n  isReverse: boolean,\n  assetAction: string,\n  isCheckedZAP: boolean,\n  quoteCoin?: Token,\n  availableCapacityUSD?: string,\n  availableCapacityWithQuoteCoin?: string,\n  currentVaultsFarmsReward?: any,\n  vaultsFarmingStaked?: any\n) {\n  const { balanceInfo: balanceInfoA } = useGetTokenBalance(displayTokenA)\n  const { balanceInfo: balanceInfoB } = useGetTokenBalance(displayTokenB)\n  const { amountInputA, amountInputB, setAmountInputA, setAmountInputB, setCalculateResult, calculateResult } = useVaultsActionStore()\n  const { getTokenAmountValueByPyth } = useGetPythTokenPrice()\n  const { getTokenAmountValue } = useTokenPrice()\n  const { volatileVaultsSdk, haedalFarmSdk } = usePeripherySDKStore()\n  const vaultsSdk = useSdk('vaults')\n  const { vaultsSlippage } = useGlobalStore()\n  const { updateCurrentVaultById } = useCurrentVaultDetail()\n  const { fetchAccountBalance } = useAccountBalance()\n  const [isSlider, setIsSlider] = useState(false)\n  const { currentAccount } = useAccountStore()\n\n  const { pythPriceMap } = useVaultsPythPrice()\n  const { mevProtect, transactionMode, maxCapForGas, customGasPrice } = useGlobalStore()\n\n  const { getVaultsFarmingStaked } = useGetVaultFarmingStaked()\n\n  const { vaultsFarmObj, autoClaimStakeFarming } = useVaultsFarmingStore()\n  const currentVaultsFarming = useMemo(() => {\n    return vaultsFarmObj[vaultId]\n  }, [vaultsFarmObj, vaultId])\n\n  // ÊªëÊùÜÊìç‰Ωú\n  const [percentage, setPercentage] = useState(0)\n  const percentageRef = useRef(0)\n  useEffect(() => {\n    percentageRef.current = percentage\n  }, [percentage])\n\n  // ËÆ°ÁÆóËæìÂÖ•Ê°ÜAÁöÑUSD‰ª∑ÂÄº\n  // cetus Áõ¥Êé•‰ΩøÁî®markPriceÊ±áÁéá\n  // haedal ‰∏ç‰ΩøÁî®ÊªëÊùÜÊó∂ ‰ΩøÁî®pyth‰ª∑Ê†º ÂçïTokenË¥®Êäº‰ΩøÁî®ÊªëÊùÜÊó∂ Áõ¥Êé•‰ΩøÁî®Ê±†Â≠êÂΩìÂâçTokenÂâ©‰ΩôÂèØÊ≥®ÂÖ•ÁöÑÂÄº * ÁôæÂàÜÊØî\n  const amountValueA = useMemo(() => {\n    if (category == 'cetus') {\n      return getTokenAmountValue(displayTokenA?.coin_type, amountInputA)\n    } else {\n      if (isCheckedZAP && isSlider && assetAction == displayTokenA?.coin_type) {\n        return d(availableCapacityUSD || '0')\n          .mul(percentage)\n          .div(100)\n          .toString()\n      } else {\n        return getTokenAmountValueByPyth(displayTokenA?.coin_type, amountInputA)\n      }\n    }\n  }, [displayTokenA?.coin_type, amountInputA, pythPriceMap, category, isCheckedZAP, isSlider, percentage])\n\n  // ËÆ°ÁÆóËæìÂÖ•Ê°ÜBÁöÑUSD‰ª∑ÂÄº\n  // cetus Áõ¥Êé•‰ΩøÁî®markPriceÊ±áÁéá\n  // haedal ‰∏ç‰ΩøÁî®ÊªëÊùÜÊó∂ ‰ΩøÁî®pyth‰ª∑Ê†º ÂçïTokenË¥®Êäº‰ΩøÁî®ÊªëÊùÜÊó∂ Áõ¥Êé•‰ΩøÁî®Ê±†Â≠êÂΩìÂâçTokenÂâ©‰ΩôÂèØÊ≥®ÂÖ•ÁöÑÂÄº * ÁôæÂàÜÊØî\n  const amountValueB = useMemo(() => {\n    if (category == 'cetus') {\n      return getTokenAmountValue(displayTokenB?.coin_type, amountInputB)\n    } else {\n      if (isCheckedZAP && isSlider && assetAction == displayTokenB?.coin_type) {\n        return d(availableCapacityUSD || '0')\n          .mul(percentage)\n          .div(100)\n          .toString()\n      } else {\n        return getTokenAmountValueByPyth(displayTokenB?.coin_type, amountInputB)\n      }\n    }\n  }, [displayTokenA?.coin_type, amountInputB, pythPriceMap, category, isCheckedZAP, isSlider, percentage])\n\n  // ÂêàÁ∫¶Â±ÇÈù¢ÁöÑtokenA„ÄÅtokenB\n  const tokenA = useMemo(() => {\n    return isReverse ? displayTokenB : displayTokenA\n  }, [isReverse, displayTokenA, displayTokenB])\n\n  const tokenB = useMemo(() => {\n    return isReverse ? displayTokenA : displayTokenB\n  }, [isReverse, displayTokenA, displayTokenB])\n\n  // È¢ÑËÆ°ÁÆóÁõ∏ÂÖ≥\n  const [uuid, setUuid] = useState<string>('')\n  const uuidRef = useRef<string>('')\n  useEffect(() => {\n    console.log('üöÄüöÄüöÄ ~ useVaultsAdd.ts:122 ~ useVaultsAdd ~ uuid:', uuid)\n    uuidRef.current = uuid\n  }, [uuid])\n\n  // È°µÈù¢Âõ∫ÂÆöÂì™‰∏ÄËæπ\n  const [isFixedDisplayTokenA, setIsFixedDisplayTokenA] = useState(false)\n  const isFixedDisplayTokenARef = useRef(false)\n  useEffect(() => {\n    isFixedDisplayTokenARef.current = isFixedDisplayTokenA\n  }, [isFixedDisplayTokenA])\n\n  // ÂêàÁ∫¶Âõ∫ÂÆöÂì™‰∏ÄËæπ\n  const [fixAmountA, setFixAmountA] = useState(false)\n  const [preCalculateLoading, setPreCalculateLoading] = useState(false)\n  const [calculateLpLoading, setCalculateLpLoading] = useState(false)\n\n  const amountInputARef = useRef<string>('')\n  const amountInputBRef = useRef<string>('')\n  useEffect(() => {\n    amountInputARef.current = amountInputA\n  }, [amountInputA])\n\n  useEffect(() => {\n    amountInputBRef.current = amountInputB\n  }, [amountInputB])\n\n  // È¢ÑËÆ°ÁÆóÊ®°Âºè\n  const mode = useMemo(() => {\n    if (isCheckedZAP) {\n      return assetAction == 'both' ? 'FlexibleBoth' : assetAction == tokenA?.coin_type ? 'OnlyCoinA' : 'OnlyCoinB'\n    } else {\n      return category == 'cetus-dlmm' ? 'FixedOneSide' : 'FixedOneSide'\n    }\n  }, [isCheckedZAP, assetAction, tokenA, category])\n\n  // È¢ÑËÆ°ÁÆóÁªìÊùü ÁªôËæìÂÖ•Ê°ÜËµãÂÄº\n  const wrapRes = (res: any, isFixedDisplayTokenA: boolean, isSlider = false) => {\n    console.log('üöÄüöÄüöÄ ~ useVaultsAdd.ts:141 ~ wrapRes ~ res:', res)\n    if (res) {\n      if (category == 'haedal' || category == 'cetus-dlmm') {\n        const amountA = d(res.deposit_amount_a)\n          .div(10 ** tokenA.decimals)\n          .toString()\n        console.log('üöÄüöÄüöÄ ~ useVaultsAdd.ts:162 ~ wrapRes ~ amountA:', amountA)\n        const amountB = d(res.deposit_amount_b)\n          .div(10 ** tokenB.decimals)\n          .toString()\n        if (isSlider) {\n          if (assetAction == 'both' || assetAction == displayTokenA?.coin_type) {\n            setAmountInputA(isReverse ? amountB : amountA)\n          }\n          if (assetAction == 'both' || assetAction == displayTokenB?.coin_type) {\n            setAmountInputB(isReverse ? amountA : amountB)\n          }\n        } else {\n          // È°µÈù¢Âõ∫ÂÆöÊüê‰∏ÄËæπ Âè™ÈúÄË¶ÅsetÂè¶‰∏ÄËæπ\n          if (isFixedDisplayTokenA) {\n            setAmountInputB(isReverse ? amountA : amountB)\n          } else {\n            setAmountInputA(isReverse ? amountB : amountA)\n          }\n        }\n      } else {\n        const amountA = d(res.amount_a)\n          .div(10 ** tokenA.decimals)\n          .toString()\n        const amountB = d(res.amount_b)\n          .div(10 ** tokenB.decimals)\n          .toString()\n        // È°µÈù¢Âõ∫ÂÆöÊüê‰∏ÄËæπ Âè™ÈúÄË¶ÅsetÂè¶‰∏ÄËæπ\n        if (isFixedDisplayTokenA) {\n          setAmountInputB(isReverse ? amountA : amountB)\n        } else {\n          setAmountInputA(isReverse ? amountB : amountA)\n        }\n      }\n    }\n  }\n\n  // È¢ÑËÆ°ÁÆó\n  const preCalculate = async (amount: string, isFixedDisplayTokenA: boolean, otherAmount: string) => {\n    try {\n      setCalculateLpLoading(true)\n      const fixToken = (isReverse ? !isFixedDisplayTokenA : isFixedDisplayTokenA) ? tokenA : tokenB\n      const fixOtherToken = (isReverse ? !isFixedDisplayTokenA : isFixedDisplayTokenA) ? tokenB : tokenA\n      const inputAmount = toDecimalsAmount(amount, fixToken.decimals)\n      const otherInputAmount = toDecimalsAmount(otherAmount || 0, fixOtherToken.decimals)\n      const fixedCoinA = isReverse ? !isFixedDisplayTokenA : isFixedDisplayTokenA\n\n      setFixAmountA(fixedCoinA)\n      if (category == 'haedal') {\n        haedalPreCalculate(inputAmount, isFixedDisplayTokenA, otherInputAmount, fixedCoinA)\n      } else if (category == 'cetus-dlmm') {\n        haedalPreCalculate(inputAmount, isFixedDisplayTokenA, otherInputAmount, fixedCoinA, true)\n      } else {\n        lstPreCalculate(inputAmount, isFixedDisplayTokenA, fixedCoinA)\n      }\n    } catch (error) {}\n  }\n  const [preCalcError, setPreCalcError] = useState<string | undefined>(undefined)\n  // headalÈ¢ÑËÆ°ÁÆó\n  const haedalPreCalculate = async (\n    inputAmount: string,\n    isFixedDisplayTokenA: boolean,\n    otherInputAmount: string,\n    fixedCoinA: boolean,\n    isDlmm = false\n  ) => {\n    const uuid = v4()\n    setUuid(uuid)\n    uuidRef.current = uuid // Á´ãÂç≥ÂêåÊ≠•Êõ¥Êñ∞ ref\n    let params: DepositCalculationOptions = {\n      uuid,\n      mode: 'FixedOneSide',\n      fixed_amount: '0',\n      fixed_coin_a: fixedCoinA,\n      pool_id: vaultId\n    }\n    // ÂºÄÂêØZAPÊ®°Âºè\n    if (isCheckedZAP) {\n      if (mode === 'OnlyCoinA') {\n        params = {\n          uuid,\n          mode,\n          pool_id: vaultId,\n          coin_amount_a: inputAmount\n        }\n      }\n      if (mode === 'OnlyCoinB') {\n        params = {\n          uuid,\n          mode,\n          pool_id: vaultId,\n          coin_amount_b: inputAmount\n        }\n      }\n      if (mode == 'FlexibleBoth') {\n        params = {\n          uuid,\n          mode,\n          pool_id: vaultId,\n          coin_amount_a: fixedCoinA ? inputAmount : otherInputAmount,\n          coin_amount_b: fixedCoinA ? otherInputAmount : inputAmount\n        }\n      }\n    } else {\n      params = {\n        uuid,\n        mode: 'FixedOneSide',\n        fixed_amount: inputAmount,\n        fixed_coin_a: fixedCoinA,\n        pool_id: vaultId\n      }\n    }\n    let res: any\n    console.log('üöÄüöÄüöÄ ~ useVaultsAdd.ts:273 ~ haedalPreCalculate ~ isDlmm:', isDlmm)\n    if (isDlmm) {\n      try {\n        setPreCalcError(undefined)\n        res = await volatileVaultsSdk.VaultsV2.preCalculateDepositAmount(params, {\n          onSuccess: receive_lp_amount => {\n            console.log('üöÄüöÄüöÄ ~ useVaultsAdd.ts:274 ~ haedalPreCalculate ~ receive_lp_amount:', receive_lp_amount, mode, uuid, uuidRef.current)\n            if (\n              uuid == uuidRef.current &&\n              (mode == 'FixedOneSide' || mode == 'OnlyCoinA' || mode == 'OnlyCoinB'\n                ? amountInputARef.current || amountInputBRef.current\n                : amountInputARef.current && amountInputBRef.current)\n            ) {\n              if (receive_lp_amount == '0') {\n                // setPreCalcError('amountTooSmall')\n                setCalculateResult(undefined)\n              } else {\n                setCalculateResult({\n                  amount_a: isReverse ? res.deposit_amount_b : res.deposit_amount_a,\n                  amount_b: isReverse ? res.deposit_amount_a : res.deposit_amount_b,\n                  ft_amount: receive_lp_amount\n                })\n              }\n              setTimeout(() => {\n                setCalculateLpLoading(false)\n              }, 500)\n            } else {\n              setCalculateLpLoading(false)\n              setCalculateResult(undefined)\n            }\n          },\n          onError: (error, uuid) => {\n            setCalculateLpLoading(false)\n          }\n        })\n      } catch (error) {\n        setCalculateResult(undefined)\n        setPreCalcError(undefined)\n        console.log('üöÄüöÄüöÄ ~ useVaultsAdd.ts:302 ~ haedalPreCalculate ~ error:', error)\n        if (String(error).includes('is less than 1')) {\n          setPreCalcError('amountTooSmall')\n        }\n      }\n    } else {\n      res = await volatileVaultsSdk.Vaults.preCalculateDepositAmount(params, {\n        onSuccess: receive_lp_amount => {\n          console.log('üöÄüöÄüöÄ ~ useVaultsAdd.ts:301 ~ haedalPreCalculate ~ receive_lp_amount:', receive_lp_amount)\n          if (\n            uuid == uuidRef.current &&\n            (mode == 'FixedOneSide' || mode == 'OnlyCoinA' || mode == 'OnlyCoinB'\n              ? amountInputARef.current || amountInputBRef.current\n              : amountInputARef.current && amountInputBRef.current)\n          ) {\n            setCalculateResult({\n              amount_a: isReverse ? res.deposit_amount_b : res.deposit_amount_a,\n              amount_b: isReverse ? res.deposit_amount_a : res.deposit_amount_b,\n              ft_amount: receive_lp_amount\n            })\n            setCalculateLpLoading(false)\n          } else {\n            setCalculateLpLoading(false)\n            setCalculateResult(undefined)\n          }\n        },\n        onError: (error, uuid) => {\n          console.log('üöÄüöÄüöÄ ~ useVaultsAdd.ts:321 ~ haedalPreCalculate ~ error:', error)\n          setCalculateLpLoading(false)\n        }\n      })\n    }\n    console.log('üöÄüöÄüöÄ ~ useVaultsAdd.ts:279 ~ res:', res, mode)\n    console.log('üöÄüöÄüöÄ ~ useVaultsAdd.ts:327 ~ haedalPreCalculate ~ uuidRef.current:', uuidRef?.current, uuid, mode)\n    if (uuidRef.current !== uuid) return\n    // setPreCalculateLoading(false)\n    if (mode == 'FixedOneSide' && uuid == uuidRef.current) {\n      wrapRes(res, isFixedDisplayTokenA)\n    }\n    if (\n      mode == 'FixedOneSide' || mode == 'OnlyCoinA' || mode == 'OnlyCoinB'\n        ? amountInputARef.current || amountInputBRef.current\n        : amountInputARef.current && amountInputBRef.current\n    ) {\n      calculateDepositRatioWithAvailableCapacity(res)\n    }\n  }\n\n  // cetusÈ¢ÑËÆ°ÁÆó\n  const lstPreCalculate = async (inputAmount: string, isFixedDisplayTokenA: boolean, fixedCoinA: boolean) => {\n    if (tokenA && tokenB && vaultId) {\n      const uuid = v4()\n      setUuid(uuid)\n      uuidRef.current = uuid // Á´ãÂç≥ÂêåÊ≠•Êõ¥Êñ∞ ref\n      try {\n        setCalculateLpLoading(true)\n        const params: CalculateAmountParams = {\n          vault_id: vaultId,\n          fix_amount_a: fixedCoinA,\n          input_amount: inputAmount,\n          slippage: Number(vaultsSlippage),\n          request_id: uuid,\n          side: assetAction === 'both' ? InputType.Both : InputType.OneSide\n        }\n        const res = await vaultsSdk!.Vaults.calculateDepositAmount(params, true, true)\n        console.log('üöÄüöÄüöÄ ~ useVaultsAdd.ts:204 ~ lstPreCalculate ~ res:', res)\n\n        if (uuidRef.current === uuid) {\n          if (!isCheckedZAP) {\n            wrapRes(res, isFixedDisplayTokenA)\n          }\n          setCalculateResult(res)\n          setCalculateLpLoading(false)\n        }\n      } catch (error) {\n        setCalculateResult(undefined)\n      } finally {\n        setCalculateLpLoading(false)\n      }\n    }\n  }\n\n  // È¢ÑËÆ°ÁÆóÈò≤Êäñ\n  const debouncedPreCalculate = useDebounceFunction(preCalculate, 500)\n\n  // ËæìÂÖ•Ê°ÜA„ÄÅBÂÄºÂèòÂåñ\n  const handleAmountInputChange = async (amount: string, isFixedDisplayTokenA: boolean, otherAmount: string) => {\n    if (isFixedDisplayTokenA) {\n      setAmountInputA(amount)\n    } else {\n      setAmountInputB(amount)\n    }\n    if (availableCapacityUSD == '0' && (category == 'haedal' || category == 'cetus-dlmm')) return\n    setIsFixedDisplayTokenA(isFixedDisplayTokenA)\n    if (!amount && !otherAmount) {\n      resetInputAmount()\n      return\n    }\n\n    if (assetAction == 'both' && isCheckedZAP && (!+amount || !+otherAmount)) {\n      setCalculateLpLoading(false)\n      setCalculateResult(undefined)\n      setPercentage(0)\n      return\n    }\n\n    // ZAPÊ®°Âºè‰∏ãÂ§ß‰∫é10000 ÊàñËÄÖÂ∞è‰∫é0.0001‰∏çËøõË°åÈ¢ÑËÆ°ÁÆó\n    const amountVaule =\n      category == 'haedal'\n        ? getTokenAmountValueByPyth(isFixedDisplayTokenA ? displayTokenA.coin_type : displayTokenB.coin_type, amount)\n        : getTokenAmountValue(isFixedDisplayTokenA ? displayTokenA.coin_type : displayTokenB.coin_type, amount)\n\n    const otherAmountValue =\n      category == 'haedal'\n        ? getTokenAmountValueByPyth(isFixedDisplayTokenA ? displayTokenB.coin_type : displayTokenA.coin_type, otherAmount)\n        : getTokenAmountValue(isFixedDisplayTokenA ? displayTokenB.coin_type : displayTokenA.coin_type, otherAmount)\n    const totalValue = d(amountVaule).add(d(otherAmountValue))\n\n    if (isCheckedZAP && (totalValue.gt(10000) || (totalValue.gt(0) && totalValue.lt(0.0001)))) {\n      setPercentage(0)\n      return\n    }\n\n    console.log('üöÄüöÄüöÄ ~ useVaultsAdd.ts:436 ~ handleAmountInputChange ~ +amount:', +amount)\n    if (+amount) {\n      debouncedPreCalculate(amount, isFixedDisplayTokenA, otherAmount)\n    } else {\n      if (!isCheckedZAP && (!amount || +amount == 0) && isDecimalWithZeros(amount)) {\n        resetInputAmount()\n      } else {\n        isFixedDisplayTokenA ? setAmountInputB('') : setAmountInputA('')\n        setCalculateResult(undefined)\n      }\n    }\n  }\n\n  // ÈáçÁΩÆËæìÂÖ•Ê°Ü\n  const resetInputAmount = () => {\n    setAmountInputA('')\n    setAmountInputB('')\n    setPercentage(0)\n    setUuid('')\n    setCalculateResult(undefined)\n    setCalculateLpLoading(false)\n  }\n\n  // ÊÄª‰ª∑ÂÄº 100% = Á°¨È°∂ - ÂΩìÂâçTVL ‰∏çÊòØÁôæÂàÜÁôæ ÊòæÁ§∫ËæìÂÖ•Ê°ÜA„ÄÅBÁöÑÂÄºÁõ∏Âä†\n  const inputTotalValue = useMemo(() => {\n    return d(amountValueA || '0')\n      .add(amountValueB || '0')\n      .toString()\n  }, [amountValueA, amountValueB])\n\n  // ZAPÊ®°Âºè‰∏ã‰∏çËÉΩË∂ÖËøá10000\n  const zapNumGtError = useMemo(() => {\n    if (isCheckedZAP) return d(inputTotalValue).gt(d(10000))\n    return false\n  }, [inputTotalValue, isCheckedZAP])\n\n  // ZAPÊ®°Âºè‰∏ã‰∏çËÉΩÂ∞è‰∫é0.0001\n  const zapNumLtError = useMemo(() => {\n    if (isCheckedZAP) return d(inputTotalValue).gt(0) && d(inputTotalValue).lt(d(0.0001))\n    return false\n  }, [inputTotalValue, isCheckedZAP])\n\n  // ÂçïËæπÊèêÁ§∫ÊñáÊ°à\n  const { stakeProtocolName } = useGetSuiStakeProtocol(!fixAmountA ? tokenA?.coin_type : tokenB?.coin_type)\n  const showOnlySideTips = useMemo(() => {\n    if (category == 'haedal') return undefined\n    if (assetAction !== 'both' && tokenA && tokenB && (+amountInputA || +amountInputB)) {\n      const amount = fixAmountA ? amountInputA : amountInputB\n      const fixToken = fixAmountA ? tokenA : tokenB\n      const targetToken = fixAmountA ? tokenB : tokenA\n\n      if (calculateResult && calculateResult.swap_result) {\n        const swapInAmount = fromDecimalsAmountFix(calculateResult.swap_result.swap_in_amount, fixToken.decimals)\n        const swapOutAmount = fromDecimalsAmountFix(\n          d(calculateResult.swap_result.swap_out_amount)\n            .mul(1 - Number(vaultsSlippage))\n            .toString(),\n          targetToken.decimals\n        )\n\n        if (CoinAssist.isSuiCoin(fixToken.coin_type)) {\n          return `By depositing ${convertScientificToDecimal(formatNumber(amount, 9).toString(), 9)} SUI, ${convertScientificToDecimal(formatNumber(swapInAmount, 9).toString(), 9)} SUI will be converted to ${targetToken?.symbol} via ${stakeProtocolName} liquid staking and added to the pool together.`\n        }\n        return `By depositing ${convertScientificToDecimal(formatNumber(amount, 9).toString(), 9)} ${fixToken?.symbol}, ${convertScientificToDecimal(formatNumber(swapInAmount, 9).toString(), 9)} ${fixToken?.symbol} will be traded for ${convertScientificToDecimal(formatNumber(swapOutAmount, 9).toString(), 9)} ${targetToken?.symbol} and then added to the pool together.`\n      } else {\n        if (!CoinAssist.isSuiCoin(assetAction)) {\n          const amountValue = getTokenAmountValue(assetAction, amount)\n          if (d(amountValue).gt(10000)) {\n            return \"Single-asset deposit can't be higher than $10,000 at a time.\"\n          }\n        }\n      }\n    }\n\n    return undefined\n  }, [assetAction, calculateResult, amountInputA, amountInputB, category])\n\n  useEffect(() => {\n    if (category !== 'cetus-dlmm') {\n      setPreCalcError(undefined)\n    }\n  }, [category])\n\n  const { signAndExecuteTransaction, transactionConfirmation, transactionRejected } = useTransaction()\n\n  // ÈáçÊñ∞ËÆ°ÁÆó\n  const reCalculateResult = () => {\n    console.log('üöÄüöÄüöÄ ~ useVaultsAdd.ts:492 ~ reCalculateResult ~ availableCapacityUSD:', availableCapacityUSD, category)\n    if (availableCapacityUSD == '0' && category == 'haedal') {\n      setAmountInputA('')\n      setAmountInputB('')\n      setPercentage(0)\n      setCalculateLpLoading(false)\n      setCalculateResult(undefined)\n      return\n    }\n\n    if (assetAction == 'both' && (!+amountInputA || !+amountInputB)) {\n      return\n    }\n\n    if (isSlider) {\n      debouncedPreCalculateDepositValue(percentageRef.current, availableCapacityWithQuoteCoin as string, quoteCoin as Token, uuid)\n    } else {\n      const amount = isFixedDisplayTokenARef.current ? amountInputARef.current : amountInputBRef.current\n      const otherAmount = isFixedDisplayTokenA ? amountInputBRef.current : amountInputARef.current\n      if (+amount) {\n        debouncedPreCalculate(amount, isFixedDisplayTokenA, otherAmount)\n      } else {\n        setPreCalcError(undefined)\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (calculateResult) {\n      setPreCalcError(undefined)\n    }\n  }, [calculateResult])\n\n  // ÊªëÊùÜÈ¢ÑËÆ°ÁÆó\n  const preCalculateDepositValue = async (percent: number, availableCapacityWithCoin: string, coin: Token, uuid: string) => {\n    console.log('üöÄüöÄüöÄ ~ useVaultsAdd.ts:520 ~ preCalculateDepositValue ~ coin:', coin)\n    const coinPrice = pythPriceMap[fixCoinType(coin?.coin_type || coin?.coinType, false)]?.price\n    if (tokenA && tokenB && vaultId) {\n      const amountUSD = d(availableCapacityWithCoin).mul(percent).div(100).mul(coinPrice).toString()\n      if (amountUSD == '0') {\n        setCalculateResult(undefined)\n        setAmountInputA('')\n        setAmountInputB('')\n        setPercentage(0)\n        setCalculateLpLoading(false)\n        return\n      }\n      const amount = d(availableCapacityWithCoin).mul(percent).div(100).toString()\n      setCalculateLpLoading(true)\n      const params = {\n        mode: mode === 'FixedOneSide' ? 'FlexibleBoth' : (mode as DepositMode),\n        pool_id: vaultId,\n        amount_usd: amountUSD,\n        uuid\n      }\n      console.log('üöÄüöÄüöÄ ~ useVaultsAdd.ts:472 ~ preCalculateDepositValue ~ params:', JSON.stringify(params))\n      let res: any\n      if (category == 'cetus-dlmm') {\n        res = await volatileVaultsSdk.VaultsV2.preCalculateDepositValue(params, {\n          onSuccess: (receive_lp_amount, uuid) => {\n            if (\n              uuid == uuidRef.current &&\n              (mode == 'FixedOneSide' || mode == 'OnlyCoinA' || mode == 'OnlyCoinB'\n                ? amountInputARef.current || amountInputBRef.current\n                : amountInputARef.current && amountInputBRef.current)\n            ) {\n              setCalculateResult({\n                amount_a: isReverse ? res.deposit_amount_b : res.deposit_amount_a,\n                amount_b: isReverse ? res.deposit_amount_a : res.deposit_amount_b,\n                ft_amount: receive_lp_amount\n              })\n              setCalculateLpLoading(false)\n            } else {\n              setCalculateLpLoading(false)\n              setCalculateResult(undefined)\n            }\n          },\n          onError: (error, uuid) => {\n            console.log('üöÄ ~ preCalculate ~ error:', error)\n          }\n        })\n      } else {\n        res = await volatileVaultsSdk.Vaults.preCalculateDepositValue(params as DepositCalculationValueOptions, {\n          onSuccess: (receive_lp_amount, uuid) => {\n            if (\n              uuid == uuidRef.current &&\n              (mode == 'FixedOneSide' || mode == 'OnlyCoinA' || mode == 'OnlyCoinB'\n                ? amountInputARef.current || amountInputBRef.current\n                : amountInputARef.current && amountInputBRef.current)\n            ) {\n              setCalculateResult({\n                amount_a: isReverse ? res.deposit_amount_b : res.deposit_amount_a,\n                amount_b: isReverse ? res.deposit_amount_a : res.deposit_amount_b,\n                ft_amount: receive_lp_amount\n              })\n              setCalculateLpLoading(false)\n            } else {\n              setCalculateLpLoading(false)\n              setCalculateResult(undefined)\n            }\n          },\n          onError: (error, uuid) => {\n            console.log('üöÄ ~ preCalculate ~ error:', error)\n          }\n        })\n      }\n      if (uuid !== uuidRef.current) return\n      console.log('üöÄüöÄüöÄ ~ useVaultsAdd.ts:492 ~ preCalculateDepositValue ~ res:', res)\n\n      wrapRes(res, true, true)\n    }\n  }\n\n  const debouncedPreCalculateDepositValue = useDebounceFunction(preCalculateDepositValue, 500)\n\n  const handlePercentInputChange = (percent: number, availableCapacityWithQuoteCoin: string, quoteCoin: Token, uuid: string) => {\n    console.log('üöÄüöÄüöÄ ~ useVaultsAdd.ts:536 ~ handlePercentInputChange ~ percent:', percent)\n    if (d(percent).lte(0)) {\n      setCalculateResult(undefined)\n      setPreCalcError(undefined)\n      setAmountInputA('')\n      setAmountInputB('')\n      setCalculateLpLoading(false)\n      return\n    }\n\n    debouncedPreCalculateDepositValue(percent, availableCapacityWithQuoteCoin, quoteCoin, uuid)\n  }\n\n  const calculateDepositRatioWithAvailableCapacity = async (wrapRes: any) => {\n    console.log('üöÄüöÄüöÄ ~ useVaultsAdd.ts:503 ~ calculateDepositRatioWithAvailableCapacity ~ wrapRes:', wrapRes)\n    if (tokenA && tokenB) {\n      const amountA = fromDecimalsAmount(wrapRes.deposit_amount_a, tokenA?.decimals)\n      const amountB = fromDecimalsAmount(wrapRes.deposit_amount_b, tokenB?.decimals)\n      const amountValueA = getTokenAmountValueByPyth(tokenA?.coin_type, String(amountA))\n      const amountValueB = getTokenAmountValueByPyth(tokenB?.coin_type, String(amountB))\n      const amountUSD = d(amountValueA).add(d(amountValueB)).toString()\n      const ratio = d(amountUSD).div(d(availableCapacityUSD)).mul(100)\n      console.log('üöÄüöÄüöÄ ~ useVaultsAdd.ts:624 ~ calculateDepositRatioWithAvailableCapacity ~ availableCapacityUSD:', availableCapacityUSD)\n      if (availableCapacityUSD == '0') {\n        setPercentage(0)\n        setAmountInputA('')\n        setAmountInputB('')\n        setCalculateResult(undefined)\n        setCalculateLpLoading(false)\n        return\n      }\n      if (ratio.gt(100)) {\n        const uuid = v4()\n        setUuid(uuid)\n        uuidRef.current = uuid // Á´ãÂç≥ÂêåÊ≠•Êõ¥Êñ∞ ref\n        setPercentage(100)\n        debouncedPreCalculateDepositValue(100, availableCapacityWithQuoteCoin as string, quoteCoin as Token, uuid)\n      } else {\n        if (amountInputARef.current || amountInputBRef.current) {\n          const ratioValue = formatNumber(ratio.toString(), 2)\n          setPercentage(Number(ratioValue))\n        }\n      }\n    }\n  }\n\n  // Êèê‰∫§‰∫§Êòì\n  const doAddAction = async () => {\n    if (vaultId) {\n      // Â§ÑÁêÜÈ°µÈù¢‰∏äÁöÑÂÄº ‰øùËØÅÊåâÁÖßÂêàÁ∫¶A,B‰º†ÂÖ•\n      let depositParams: any\n      if (category == 'haedal' || category == 'cetus-dlmm') {\n        depositParams = {\n          pool_id: vaultId,\n          amount_a: String(\n            isReverse ? toDecimalsAmount(amountInputB || 0, String(tokenA?.decimals)) : toDecimalsAmount(amountInputA || 0, String(tokenA?.decimals))\n          ),\n          amount_b: String(\n            isReverse ? toDecimalsAmount(amountInputA || 0, String(tokenB?.decimals)) : toDecimalsAmount(amountInputB || 0, String(tokenB?.decimals))\n          )\n        }\n      } else {\n        depositParams = {\n          vault_id: vaultId,\n          slippage: Number(vaultsSlippage),\n          deposit_result: calculateResult\n        }\n      }\n      console.log('üöÄüöÄüöÄ ~ useVaultsAdd.ts:261 ~ doAddAction ~ depositParams:', calculateResult)\n      // ÊûÑÂª∫ ‰∫§ÊòìÊèêÁ§∫\n      const toastInfo: ToastType = {\n        getShowInfo: (status: TransactionStatusType, balanceChanges?: Record<string, BalanceChanges>, res?: any) => {\n          console.log('üöÄüöÄüöÄ ~ useVaultsAdd.ts:306 ~ doAddAction ~ res:', res)\n          // ÊèêÁ§∫ËØ≠‰πüÈúÄË¶ÅÂ§ÑÁêÜÊñπÂêë\n          const description =\n            'Deposit ' +\n            [\n              formatDescription(isReverse ? amountInputA : amountInputA, isReverse ? tokenB?.symbol : tokenA?.symbol),\n              formatDescription(isReverse ? amountInputB : amountInputB, isReverse ? tokenA?.symbol : tokenB?.symbol)\n            ]\n              .filter(Boolean)\n              .join(' and ')\n\n          const info: CommonTypeInfo = {\n            modalDescriptionText: description,\n            toastTitleText: description\n          }\n\n          if (status === 'success') {\n            let amountA = amountInputA\n            let amountB = amountInputB\n\n            if (res) {\n              res.events.forEach((event: any) => {\n                if ((event.type.indexOf('::pool::DepositEvent') > -1 || event.type.indexOf('::vault::DepositEvent') > -1) && tokenA && tokenB) {\n                  amountA = String(fromDecimalsAmount(event.parsedJson.amount_a, tokenA.decimals))\n                  amountB = String(fromDecimalsAmount(event.parsedJson.amount_b, tokenB.decimals))\n                }\n              })\n            }\n            const description =\n              'Deposit ' +\n              [\n                formatDescription(isReverse ? amountB : amountA, isReverse ? tokenB?.symbol : tokenA?.symbol),\n                formatDescription(isReverse ? amountA : amountB, isReverse ? tokenA?.symbol : tokenB?.symbol)\n              ]\n                .filter(Boolean)\n                .join(' and ')\n\n            info.toastDescriptionContent = description\n            info.modalDescriptionText = description\n            info.toastTitleText = 'Deposit successful'\n          }\n\n          return info\n        }\n      }\n      transactionConfirmation(toastInfo)\n      console.log('üöÄüöÄüöÄ ~ useVaultsAdd.ts:662 ~ doAddAction ~ vaultsFarmingStaked:', { vaultsFarmingStaked, currentVaultsFarmsReward })\n      if (currentVaultsFarming?.isVaultsFarming && autoClaimStakeFarming) {\n        depositParams['return_lp_coin'] = true\n      }\n      try {\n        const tx = new Transaction()\n        tx.setSender(currentAccount.address)\n        if (category == 'haedal') {\n          const lpCoin = await volatileVaultsSdk.Vaults.buildDepositPayload(depositParams, tx)\n          if (currentVaultsFarming?.isVaultsFarming && autoClaimStakeFarming) {\n            await haedalFarmSdk.Farms.buildStakePayload(\n              {\n                poolId: currentVaultsFarming?.poolId,\n                stakeCoinType: currentVaultsFarming?.stakeCoinType,\n                stakeObjectId: vaultsFarmingStaked?.stakeObjectId,\n                lpCoin,\n                decimals: currentVaultsFarming?.coinDetail?.decimals\n              },\n              tx\n            )\n          }\n        } else if (category == 'cetus-dlmm') {\n          const lpCoin = await volatileVaultsSdk.VaultsV2.buildDepositPayload(depositParams, tx)\n        } else {\n          console.log('üöÄüöÄüöÄ ~ useVaultsAdd.ts:447 ~ doAddAction ~ vaultsSdk:', vaultsSdk, depositParams)\n          await vaultsSdk!.Vaults.deposit(depositParams, tx)\n        }\n\n        console.log('üöÄ ~ doAddAction ~ depositParams11111:', depositParams)\n        const res = await signAndExecuteTransaction(tx, toastInfo, {\n          useMev: mevProtect,\n          txAction: 'signTransactionBlock',\n          useFastMode: transactionMode === 'Fast Mode',\n          maxCapForGas,\n          customGasPrice,\n          msafeParams: {\n            action: MsafeTransactionSubType.AddVaultsPosition,\n            txbParams: depositParams\n          }\n        })\n\n        if (res) {\n          resetInputAmount()\n          setTimeout(() => {\n            fetchAccountBalance()\n            updateCurrentVaultById(vaultId)\n          }, 2000)\n          if (currentVaultsFarming?.isVaultsFarming) {\n            getVaultsFarmingStaked({ stakeCoinType: vaultsFarmingStaked.stakeCoinType, poolId: vaultsFarmingStaked.poolId }, vaultId)\n            console.log('üöÄüöÄüöÄ ~ useVaultsAdd.ts:714 ~ doAddAction ~ vaultsFarmingStaked:', vaultsFarmingStaked)\n          }\n        } else {\n          reCalculateResult()\n        }\n      } catch (error) {\n        console.log('üöÄüöÄüöÄ ~ useVaultsAdd.ts:418 ~ doAddAction ~ error:', error)\n        transactionRejected(toastInfo)\n      }\n    }\n  }\n\n  const isQuoteCoin = useMemo(() => {\n    return assetAction == quoteCoin?.coin_type || assetAction == 'both'\n  }, [assetAction, quoteCoin])\n\n  useEffect(() => {\n    return () => {\n      uuidRef.current = ''\n    }\n  }, [])\n\n  return {\n    balanceInfoA,\n    balanceInfoB,\n    amountValueA,\n    amountValueB,\n    handleAmountInputChange,\n    amountInputA,\n    amountInputB,\n    setAmountInputA,\n    setAmountInputB,\n    resetInputAmount,\n    preCalculateLoading,\n    isFixedDisplayTokenA,\n    zapNumGtError,\n    zapNumLtError,\n    calculateLpLoading,\n    inputTotalValue,\n    showOnlySideTips,\n    doAddAction,\n    reCalculateResult,\n    percentage,\n    setPercentage,\n    isSlider,\n    setIsSlider,\n    handlePercentInputChange,\n    isQuoteCoin,\n    setUuid,\n    uuidRef,\n    preCalcError\n  }\n}\n","import useVaultsActionStore from '@/store/vaults-v2/useVaultsAction'\nimport { useAccountStore } from '@cetus/stores'\nimport { Token } from '@cetus/types'\nimport { CoinAssist, d } from '@cetusprotocol/common-sdk'\nimport { useMemo } from 'react'\n\nexport default function useVaultsButtonStatus(\n  amountInputA: string,\n  amountInputB: string,\n  balanceA: string,\n  balanceB: string,\n  tokenA: Token,\n  tokenB: Token,\n  assetAction: string,\n  isAdd: boolean,\n  zapNumGtError: boolean,\n  zapNumLtError: boolean,\n  category: string,\n  isCheckedZAP: boolean\n) {\n  const { currentAccount } = useAccountStore()\n  const { calculateResult } = useVaultsActionStore()\n\n  // ÊåâÈíÆÁä∂ÊÄÅ\n  const submitBtnInfo = useMemo(() => {\n    const btnInfo: {\n      text?: string\n      disabled: boolean\n    } = {\n      text: undefined,\n      disabled: false\n    }\n\n    // Âà§Êñ≠Èí±ÂåÖ\n    if (!currentAccount?.address) {\n      btnInfo.text = 'Connect Wallet'\n      btnInfo.disabled = false\n      return btnInfo\n    }\n\n    if (!tokenA || !tokenB) {\n      btnInfo.disabled = true\n      return btnInfo\n    }\n\n    // Âà§Êñ≠ËæìÂÖ•\n    // ÂèåËæπ\n    if (assetAction === 'both') {\n      if (!+amountInputA && !+amountInputB) {\n        btnInfo.text = 'Enter an amount'\n        btnInfo.disabled = true\n        return btnInfo\n      }\n      if (isCheckedZAP && (!+amountInputA || !+amountInputB)) {\n        btnInfo.text = 'Enter an amount'\n        btnInfo.disabled = true\n        return btnInfo\n      }\n    } else {\n      // ÂçïËæπ‰∏∫Á©∫\n      if ((assetAction == tokenA?.coin_type && !+amountInputA) || (assetAction == tokenB?.coin_type && !+amountInputB)) {\n        btnInfo.text = 'Enter an amount'\n        btnInfo.disabled = true\n        return btnInfo\n      }\n\n      // cetusÂçïËæπSUIÊ∑ªÂä†ÊµÅÂä®ÊÄßÊúÄÂ∞ë10 sui\n      if (category == 'cetus') {\n        if (isAdd) {\n          const isSUI = CoinAssist.isSuiCoin(assetAction)\n          if (\n            (isSUI && assetAction === tokenA?.coin_type && d(amountInputA).lt(3)) ||\n            (isSUI && assetAction === tokenB?.coin_type && d(amountInputB).lt(3))\n          ) {\n            btnInfo.text = 'Minimum deposit 3 SUI'\n            btnInfo.disabled = true\n            return btnInfo\n          }\n        }\n      }\n    }\n\n    // Âà§Êñ≠‰ΩôÈ¢ù\n    // ÂèåËæπ\n    if (assetAction == 'both') {\n      if (d(amountInputA || '0').gt(balanceA || '0')) {\n        btnInfo.disabled = true\n        btnInfo.text = isAdd ? `Insufficient ${tokenA?.symbol} Balance` : 'Invalid Amount'\n        return btnInfo\n      }\n      if (d(amountInputB || '0').gt(balanceB || '0')) {\n        btnInfo.disabled = true\n        btnInfo.text = isAdd ? `Insufficient ${tokenB?.symbol} Balance` : 'Invalid Amount'\n        return btnInfo\n      }\n    }\n\n    // ÂçïËæπ\n    if (assetAction !== 'both') {\n      if (d(amountInputA || '0').gt(balanceA || '0')) {\n        btnInfo.disabled = true\n        btnInfo.text = isAdd ? `Insufficient ${tokenA?.symbol} Balance` : 'Invalid Amount'\n        return btnInfo\n      }\n      if (d(amountInputB || '0').gt(balanceB || '0')) {\n        btnInfo.disabled = true\n        btnInfo.text = isAdd ? `Insufficient ${tokenB?.symbol} Balance` : 'Invalid Amount'\n        return btnInfo\n      }\n    }\n\n    // ZAPÊ®°ÂºèÊ∑ªÂä† Ë∂ÖËøá$10000\n    if (isAdd && zapNumGtError) {\n      btnInfo.text = 'Enter an amount'\n      btnInfo.disabled = true\n      return btnInfo\n    }\n\n    // ZAPÊ®°ÂºèÊ∑ªÂä† Â∞è‰∫é0.0001\n    if (isAdd && zapNumLtError) {\n      btnInfo.text = 'Enter an amount'\n      btnInfo.disabled = true\n      return btnInfo\n    }\n\n    //ZAPÊ®°ÂºèÊ∑ªÂä† È¢ÑËÆ°ÁÆóÁªìÊûú‰∏∫0\n    if ((calculateResult && calculateResult.ft_amount == '0') || (calculateResult && calculateResult.burn_ft_amount == '0') || !calculateResult) {\n      btnInfo.disabled = true\n      btnInfo.text = 'Enter an amount'\n      return btnInfo\n    }\n\n    return btnInfo\n  }, [\n    amountInputA,\n    amountInputB,\n    balanceA,\n    balanceB,\n    tokenA,\n    tokenB,\n    assetAction,\n    zapNumGtError,\n    zapNumLtError,\n    category,\n    currentAccount?.address,\n    calculateResult\n  ])\n\n  return {\n    btnText: submitBtnInfo.text,\n    btnDisabled: submitBtnInfo.disabled\n  }\n}\n","import { create, StateCreator } from 'zustand'\nimport { persist } from 'zustand/middleware'\n\ninterface VaultsRiskState {\n  isCheckedAcceptWalletObj: Record<string, boolean>\n  setIsCheckedAcceptWalletObj: (isCheckedWalletObj: Record<string, boolean>) => void\n  isCheckedDontRemindWalletObj: Record<string, boolean>\n  setIsCheckedDontRemindWalletObj: (isCheckedDontRemindWalletObj: Record<string, boolean>) => void\n}\n\nconst store: StateCreator<VaultsRiskState> = (set, get) => ({\n  isCheckedAcceptWalletObj: {},\n  setIsCheckedAcceptWalletObj: (isCheckedWalletObj: Record<string, boolean>) =>\n    set(() => ({\n      isCheckedAcceptWalletObj: {\n        ...get().isCheckedAcceptWalletObj,\n        ...isCheckedWalletObj\n      }\n    })),\n  isCheckedDontRemindWalletObj: {},\n  setIsCheckedDontRemindWalletObj: (isCheckedDontRemindWalletObj: Record<string, boolean>) =>\n    set(() => ({\n      isCheckedDontRemindWalletObj: {\n        ...get().isCheckedDontRemindWalletObj,\n        ...isCheckedDontRemindWalletObj\n      }\n    }))\n})\n\nconst useVaultsRiskStore = create(\n  persist(store, {\n    name: 'useVaultsRiskStore',\n    partialize: state => {\n      const { isCheckedAcceptWalletObj, isCheckedDontRemindWalletObj } = state\n      return { isCheckedAcceptWalletObj, isCheckedDontRemindWalletObj }\n    }\n  })\n)\n\nexport default useVaultsRiskStore\n","import { Block } from '@cetus/design'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { HStack, Popover, PopoverBody, PopoverContent, PopoverTrigger, Switch, Text } from '@chakra-ui/react'\n\ntype ZapTooltipTextType = {\n  [key: string]: string\n}\nconst ZapTooltipText: ZapTooltipTextType = {\n  customDeposit:\n    'Through Zap-In, you can deposit your liquidity in single token or with customized token ratio. Tokens will be auto converted to match the required ratio. ',\n  deposit: 'Through Zap-In, you can deposit your liquidity in single token. Tokens will be auto converted to match the required ratio.',\n  withdraw: 'Through Zap-Out, you can withdraw your liquidity in one token. The liquidity will be auto converted to one token you selected.'\n}\n\ntype ZapSwitchProps = {\n  zapText: string\n  isCheckedZAP: boolean\n  tooltipType: 'customDeposit' | 'deposit' | 'withdraw'\n  zapSwitchChange: (status: boolean) => void\n}\nfunction ZapSwitch(props: ZapSwitchProps) {\n  const { isCheckedZAP, zapText, tooltipType, zapSwitchChange } = props\n  const { isApp } = useWindowWidth()\n  return (\n    <Block bg=\"none\" border=\"none\" padding=\"6px 0px\" borderRadius=\"8px\" width=\"unset\">\n      <Popover isLazy trigger={isApp ? 'click' : 'hover'} placement=\"top\" autoFocus={false} returnFocusOnClose={false}>\n        <PopoverTrigger>\n          <HStack h=\"14px\" cursor=\"pointer\" as=\"button\">\n            <Text fontSize=\"14px\" color={isCheckedZAP ? 'primary' : ''} fontWeight=\"500\">\n              {zapText}\n            </Text>\n            <Switch isChecked={isCheckedZAP} onChange={() => zapSwitchChange(!isCheckedZAP)} />\n          </HStack>\n        </PopoverTrigger>\n        <PopoverContent minW=\"fit-content\" w=\"fit-content\">\n          <PopoverBody p=\"12px\" lineHeight=\"20px\" fontSize=\"12px\" maxWidth=\"320px\">\n            {ZapTooltipText[tooltipType]}\n          </PopoverBody>\n        </PopoverContent>\n      </Popover>\n    </Block>\n  )\n}\n\nexport default ZapSwitch\n","import { useGetSuiStakeProtocol } from '@/hooks/vault-v2/useVaultsHelper'\nimport { AssetActionType } from '@/types/vaults'\nimport { SelectTab } from '@cetus/design'\nimport { Tab } from '@cetus/design/src/components/common/SelectTab'\nimport { Token } from '@cetus/types'\nimport { HStack, Text, VStack } from '@chakra-ui/react'\nimport { useMemo } from 'react'\nimport ZapSwitch from '../common/ZapSwitch'\n\nconst hoverCoinTips =\n  'You can also choose to deposit in only one asset type. In that case, the vault will convert your asset to the required propositions using Cetus. Please note that trading fees & slippage will be applied. When slippage is involved, a certain amount of post-swap dust (no loss of funds) will be returned to you.'\n\nconst hoverSuiTips = (stakeProtocolName?: string, symbol?: string) =>\n  `When you deposit in only SUI tokens, a part of your SUI amount will be converted to ${symbol} via ${stakeProtocolName} liquid staking services to match required liquidity compositions of the liquidity pool on Cetus. A certain amount of dust (no loss of funds) will be returned to you if slippage is involved.`\n\nconst ActionTabEnum = {\n  Deposit: 'Deposit',\n  Withdraw: 'Withdraw'\n} as const\n\n// deposit withdraw ÂàáÊç¢\nexport function SwitchAssetTab(props: {\n  displayTokenA?: Token\n  displayTokenB?: Token\n  onSelectAssetTab: (assetTab: AssetActionType) => void\n  label?: string\n  setAssetAction: (value: string) => void\n  assetAction: string\n  isCheckedZAP: boolean\n  setIsCheckedZAP: (value: boolean) => void\n  category?: string\n  currentActionTab?: string\n}) {\n  const {\n    displayTokenA,\n    displayTokenB,\n    onSelectAssetTab,\n    label = 'Deposit Amounts',\n    isCheckedZAP,\n    setIsCheckedZAP,\n    assetAction,\n    setAssetAction,\n    category,\n    currentActionTab\n  } = props\n\n  const { stakeProtocolName } = useGetSuiStakeProtocol(displayTokenA?.coin_type)\n  const isUnstableVault = useMemo(() => category === 'haedal' || category === 'cetus-dlmm', [category])\n\n  const generateTabList = (): Tab<{ action: AssetActionType }>[] => {\n    if (!displayTokenA || !displayTokenB) return []\n\n    const baseTabs: Tab<{ action: AssetActionType }>[] = [\n      {\n        label: `${displayTokenA.symbol} only`,\n        action: displayTokenA.coin_type,\n        afterIcon: isCheckedZAP && currentActionTab === ActionTabEnum.Deposit && !isUnstableVault ? { xlinkHref: '#icon-icon_tips' } : undefined,\n        tooltip: isUnstableVault\n          ? currentActionTab === ActionTabEnum.Deposit\n            ? `You can add liquidity in this pool with only ${displayTokenA.symbol}.`\n            : ''\n          : hoverCoinTips\n      },\n      {\n        label: `${displayTokenB.symbol} only`,\n        action: displayTokenB.coin_type,\n        afterIcon: isCheckedZAP && currentActionTab === ActionTabEnum.Deposit && !isUnstableVault ? { xlinkHref: '#icon-icon_tips' } : undefined,\n        tooltip: isUnstableVault\n          ? currentActionTab === ActionTabEnum.Deposit\n            ? `You can add liquidity in this pool with only ${displayTokenB.symbol}.`\n            : ''\n          : hoverSuiTips(stakeProtocolName, displayTokenA?.symbol)\n      }\n    ]\n\n    if (isUnstableVault && currentActionTab === ActionTabEnum.Deposit) {\n      baseTabs.splice(1, 0, {\n        label: `${displayTokenA.symbol}+${displayTokenB.symbol}`,\n        action: 'both',\n        tooltip: 'You can add any value you want from both assets.'\n      })\n    }\n\n    return baseTabs\n  }\n\n  const tabList = useMemo(generateTabList, [displayTokenA, displayTokenB, isCheckedZAP, stakeProtocolName, isUnstableVault, currentActionTab])\n\n  const currentTab = useMemo(() => {\n    if (tabList.length === 0) return undefined\n\n    if (assetAction === displayTokenA?.coin_type) return tabList[0].label\n\n    if (assetAction === displayTokenB?.coin_type) {\n      if (isUnstableVault && currentActionTab === ActionTabEnum.Deposit) {\n        return tabList[2]?.label\n      }\n      return tabList[1]?.label\n    }\n\n    return tabList[1]?.label\n  }, [assetAction, tabList, isUnstableVault, currentActionTab, displayTokenA?.coin_type, displayTokenB?.coin_type])\n\n  const tooltipType = useMemo(() => {\n    if (currentActionTab === ActionTabEnum.Deposit) {\n      return isUnstableVault ? 'customDeposit' : 'deposit'\n    }\n    return 'withdraw'\n  }, [currentActionTab, isUnstableVault])\n\n  return (\n    <VStack w=\"100%\" gap=\"16px\">\n      <HStack w=\"100%\" justifyContent=\"space-between\">\n        <Text fontWeight=\"500\">{label}</Text>\n        <ZapSwitch\n          isCheckedZAP={isCheckedZAP}\n          zapText={currentActionTab === ActionTabEnum.Deposit ? 'Zap In' : 'Zap Out'}\n          tooltipType={tooltipType}\n          zapSwitchChange={(status: boolean) => {\n            setIsCheckedZAP(!isCheckedZAP)\n            setAssetAction(status ? (displayTokenA?.coin_type ?? '') : 'both')\n          }}\n        />\n      </HStack>\n\n      {isCheckedZAP && tabList.length > 0 && (\n        <SelectTab\n          wrapStyle={{\n            w: '100%',\n            h: '48px',\n            borderRadius: '12px',\n            p: '3px'\n          }}\n          itemStyle={{\n            w: '50%',\n            fontSize: '14px',\n            borderRadius: '8px',\n            fontWeight: '500'\n          }}\n          type=\"outlineTab\"\n          currentTab={currentTab}\n          tabList={tabList}\n          handleChangeTab={(item: Tab<{ action: AssetActionType }>) => {\n            setAssetAction(item.action)\n            onSelectAssetTab(item.action)\n          }}\n        />\n      )}\n    </VStack>\n  )\n}\n","import useVaultsRiskStore from '@/store/vaults-v2/useVaultsRisk'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { useAccountStore } from '@cetus/stores'\nimport { CheckBox } from '@cetus/ui-kit'\nimport { Button, HStack, Modal, ModalBody, ModalCloseButton, ModalContent, ModalHeader, ModalOverlay, Text, VStack } from '@chakra-ui/react'\nimport { useState } from 'react'\n\ntype RiskModalProps = {\n  isOpen: boolean\n  setIsOpen: (status: boolean) => void\n  continueFunc: () => void\n}\n\n// ÈÄöÁî®Â∏¶ÂúÜÁÇπÊñáÊú¨ÁªÑ‰ª∂\nconst RiskBulletText = ({ children }: { children: React.ReactNode }) => (\n  <Text\n    lineHeight=\"20px\"\n    color=\"text_caption\"\n    fontSize=\"12px\"\n    position=\"relative\"\n    pl=\"10px\"\n    _before={{\n      content: '\"\"',\n      display: 'inline-block',\n      w: '4px',\n      h: '4px',\n      borderRadius: '50%',\n      bg: 'primary',\n      position: 'absolute',\n      left: '0',\n      top: '8px'\n    }}\n  >\n    {children}\n  </Text>\n)\n\n// VaultÈ£éÈô©Á°ÆËÆ§ÂºπÁ™ó\nexport default function RiskModal(props: RiskModalProps) {\n  const { isOpen, setIsOpen, continueFunc } = props\n  const [isCheckedAccept, setIsCheckedAccept] = useState(false)\n  const [isCheckedDontRemind, setIsCheckedDontRemind] = useState(false)\n  const { setIsCheckedAcceptWalletObj, setIsCheckedDontRemindWalletObj } = useVaultsRiskStore()\n  const { currentAccount } = useAccountStore()\n\n  const riskContinue = () => {\n    const newIsCheckedAcceptWalletObj = {\n      [currentAccount?.address]: isCheckedAccept\n    }\n    setIsCheckedAcceptWalletObj(newIsCheckedAcceptWalletObj)\n    const newIsCheckedDontRemindWalletObj = {\n      [currentAccount?.address]: isCheckedDontRemind\n    }\n    setIsCheckedDontRemindWalletObj(newIsCheckedDontRemindWalletObj)\n    continueFunc()\n  }\n\n  const { isApp } = useWindowWidth()\n\n  return (\n    <Modal\n      isCentered\n      isOpen={isOpen}\n      onClose={() => {\n        setIsOpen(false)\n      }}\n    >\n      <ModalOverlay />\n      <ModalContent width={{ base: '100%', lg: '480px' }}>\n        <ModalHeader>\n          <Text fontSize={isApp ? '14px' : '16px'} fontWeight=\"500\" color=\"caption\" lineHeight={isApp ? '20px' : '40px'}>\n            Risk Acknowledgement\n          </Text>\n        </ModalHeader>\n        <ModalCloseButton m={isApp ? '' : '12px 2px 0 0'} />\n\n        <ModalBody p=\"0 16px\">\n          <VStack bg=\"menu_item_bg\" borderRadius=\"8px\" border=\"1px solid\" borderColor=\"border\" p=\"16px 12px\" gap={isApp ? '12px' : '16px'}>\n            <Text w=\"100%\" textAlign=\"left\" fontSize=\"12px\">\n              Before you provide liquidity via this vault:\n            </Text>\n            <VStack gap={isApp ? '12px' : '16px'}>\n              <RiskBulletText>\n                You acknowledge that this vault strategy is provided by a third party. Cetus integrates it at the UI level for user convenience but\n                does not operate this product or take responsibility for third-party risks.\n              </RiskBulletText>\n              <RiskBulletText>\n                You acknowledge that the displayed APR and APY are based on historical data and not a guaranteed return.\n              </RiskBulletText>\n              <RiskBulletText>\n                You understand that APR and APY figures reflect past trading fees and rewards only, excluding impermanent loss and price volatility.\n              </RiskBulletText>\n              <RiskBulletText>\n                You recognize the risks associated with automated liquidity strategies, including market fluctuations and third-party operational\n                risks.\n              </RiskBulletText>\n              <Text fontSize=\"12px\" color=\"text_paragraph\" lineHeight=\"20px\">\n                Please assess these risks carefully and proceed only if you fully understand and accept them.\n              </Text>\n            </VStack>\n          </VStack>\n          <VStack\n            bg=\"menu_item_bg\"\n            borderRadius=\"8px\"\n            border=\"1px solid\"\n            borderColor=\"border\"\n            p={isApp ? '12px 16px' : '16px'}\n            justifyContent=\"flex-start\"\n            alignItems=\"flex-start\"\n            m=\"16px 0\"\n            userSelect=\"none\"\n            gap={isApp ? '8px' : '12px'}\n          >\n            <HStack>\n              <CheckBox checked={isCheckedAccept} onClick={() => setIsCheckedAccept(!isCheckedAccept)} />\n              <Text fontWeight=\"500\" color=\"text_caption\">\n                I acknowledge and accept all the risks.\n              </Text>\n            </HStack>\n            <HStack>\n              <CheckBox checked={isCheckedDontRemind} onClick={() => setIsCheckedDontRemind(!isCheckedDontRemind)} />\n              <Text fontSize=\"12px\" color=\"text_paragraph\">\n                Don't remind me again.\n              </Text>\n            </HStack>\n          </VStack>\n          <Button\n            w=\"calc(100% + 32px)\"\n            h=\"52px\"\n            bg=\"primary\"\n            borderRadius=\"12px\"\n            fontWeight=\"600\"\n            ml=\"-16px\"\n            isDisabled={!isCheckedAccept}\n            onClick={riskContinue}\n          >\n            Continue\n          </Button>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  )\n}\n","import { CetusTooltip } from '@cetus/design'\nimport { Token } from '@cetus/types'\nimport { formatNumber, formatPercentage, symbolDataDisplayProcessing } from '@cetus/utils'\nimport {\n  HStack,\n  Image,\n  Skeleton,\n  Slider,\n  SliderFilledTrack,\n  SliderMark,\n  SliderMarkProps,\n  SliderThumb,\n  SliderTrack,\n  Text,\n  VStack\n} from '@chakra-ui/react'\nimport { useMemo } from 'react'\n\ntype AvailableCapacityProps = {\n  percentage: string | number\n  onChange: (value: string | number) => void\n  depositRatio: string | number\n  hardCapUSD: string | number\n  vaultTvl: string | number\n  availableCapacityUSD: string | number\n  quoteCoin?: Token\n  maxCapNum?: string\n  availableCapacityWithQuoteCoin?: string\n}\n\n// Ââ©‰ΩôÂèØÁî®ÈÉ®ÂàÜ ÁôæÂàÜÊØîÊ∑ªÂä†Êìç‰ΩúÊªëÊùÜ\nexport default function AvailableCapacity({\n  percentage,\n  onChange,\n  quoteCoin,\n  availableCapacityWithQuoteCoin,\n  availableCapacityUSD\n}: AvailableCapacityProps) {\n  const loading = useMemo(() => {\n    return !availableCapacityUSD\n  }, [availableCapacityUSD])\n\n  const labelStyles = {\n    fontSize: 'sm',\n    position: 'absolute',\n    ml: '-5px',\n    top: '50%',\n    transform: 'translateY(-50%)',\n    zIndex: '100',\n    borderRadius: '50%'\n  }\n\n  const sliderMarkList = [0, 25, 50, 75, 100]\n\n  return (\n    <>\n      {loading ? (\n        <VStack width=\"100%\" maxHeight=\"164px\" justifyContent=\"space-between\">\n          <Skeleton width=\"100%\" />\n          <Skeleton width=\"100%\" />\n          <Skeleton width=\"100%\" />\n        </VStack>\n      ) : (\n        <VStack width=\"100%\" alignItems=\"start\" gap=\"0px\">\n          <Text textAlign=\"left\">Available Capacity</Text>\n          <HStack w=\"100%\" alignItems=\"center\" justifyContent=\"space-between\" mt=\"12px\">\n            <CetusTooltip\n              tooltip={\n                <HStack>\n                  <Image key={quoteCoin?.coin_type} src={quoteCoin?.logo_url} w=\"20px\" h=\"20px\" />\n                  <Text color=\"text_caption\">{formatNumber(availableCapacityWithQuoteCoin, 2)}</Text>\n                  <Text color=\"text_caption\">{quoteCoin?.symbol}</Text>\n                </HStack>\n              }\n            >\n              <HStack w=\"100%\" alignItems=\"center\" justifyContent=\"space-between\">\n                <Text color=\"text_caption\" height=\"14px\" textAlign=\"left\" fontSize=\"16px\" textDecoration=\"underline dotted\">\n                  {symbolDataDisplayProcessing(availableCapacityUSD, '$')}\n                </Text>\n              </HStack>\n            </CetusTooltip>\n            <Slider\n              aria-label=\"slider-ex-6\"\n              min={0}\n              max={100}\n              focusThumbOnChange={false}\n              value={percentage == '--' ? 0 : Number(percentage)}\n              onChange={value => onChange(value)}\n              w={{ base: '165px', lg: '210px' }}\n              isDisabled={Number(availableCapacityUSD) <= 0}\n            >\n              {sliderMarkList\n                .filter(item => item !== Number(percentage))\n                .map((item, index) => (\n                  <SliderMark\n                    key={index}\n                    {...(labelStyles as SliderMarkProps)}\n                    value={item}\n                    w=\"8px\"\n                    h=\"8px\"\n                    bg={Number(percentage) >= item ? 'primary' : '#384651'}\n                    onClick={() => onChange(item)}\n                  />\n                ))}\n              <SliderMark\n                value={Number(percentage)}\n                textAlign=\"center\"\n                bg=\"primary_opacity.10\"\n                p=\"2px 4px\"\n                borderRadius=\"4px\"\n                fontSize=\"12px\"\n                color=\"primary\"\n                mt=\"-28px\"\n                ml=\"-15px\"\n              >\n                {formatPercentage(percentage, 2)}\n              </SliderMark>\n              <SliderTrack bg=\"#384651\" height=\"2px\" borderRadius=\"4px\">\n                <SliderFilledTrack height=\"2px\" bg=\"primary\" borderRadius=\"2px\" />\n              </SliderTrack>\n              <SliderThumb\n                p=\"1px\"\n                w=\"10px\"\n                h=\"10px\"\n                border=\"1px solid primary\"\n                position=\"relative\"\n                zIndex=\"100\"\n                borderRadius=\"50%\"\n                _before={{\n                  content: '\"\"',\n                  w: '6px',\n                  h: '6px',\n                  borderRadius: '50%',\n                  // bg: [0, 25, 50, 75, 100].includes(Number(percentage)) ? 'primary' : 'bg_secondary',\n                  border: '1px solid #2b2e32'\n                }}\n              />\n            </Slider>\n          </HStack>\n          {!loading && availableCapacityUSD == 0 ? (\n            <VStack w=\"100%\" alignItems=\"start\" mt=\"16px\">\n              <Text\n                color=\"primary_yellow\"\n                fontSize=\"12px\"\n                textAlign=\"left\"\n                w=\"100%\"\n                bg=\"primary_yellow_opacity.10\"\n                p=\"12px\"\n                borderRadius=\"8px\"\n                lineHeight=\"20px\"\n              >\n                The vault has reached its current capacity. New deposits are not accepted at this time.\n              </Text>\n            </VStack>\n          ) : null}\n        </VStack>\n      )}\n    </>\n  )\n}\n","import VaultsAddConfirmModel from '@/components/modal/VaultsAddConfirmModel'\nimport useVaultAvaiableCapacity from '@/hooks/vault-v2/useVaultAvaiableCapacity'\nimport useVaultsAdd from '@/hooks/vault-v2/useVaultsAdd'\nimport useVaultsButtonStatus from '@/hooks/vault-v2/useVaultsButtonStatus'\nimport { useCalculateChangeLpRate, useCalculateSlippageAmount } from '@/hooks/vault-v2/useVaultsHelper'\nimport useGlobalStore from '@/store/common/global'\nimport useVaultsActionStore from '@/store/vaults-v2/useVaultsAction'\nimport useVaultsPoolStore from '@/store/vaults-v2/useVaultsPool'\nimport useVaultsPythPriceStore from '@/store/vaults-v2/useVaultsPythPrice'\nimport useVaultsRiskStore from '@/store/vaults-v2/useVaultsRisk'\nimport { VaultsAddModelData } from '@/types'\nimport { Block, ErrorTips, TradeInputGroup } from '@cetus/design'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { useAccountStore } from '@cetus/stores'\nimport { isAvailableObject } from '@cetus/utils'\nimport { Button, Text, VStack } from '@chakra-ui/react'\nimport { SetStateAction, useEffect, useMemo, useRef, useState } from 'react'\nimport { v4 } from 'uuid'\nimport { SwitchAssetTab } from '../common/SwitchAssetTab'\nimport RiskModal from '../risk-modal'\nimport AvailableCapacity from './AvailableCapacity'\nimport { VaultsAddResult } from './VaultsAddResult'\n\ntype VaultsAddProps = {\n  category: string\n  isReverse: boolean\n  vaultId: string\n  currentActionTab: string\n  totalSupply: string\n  lpTokenInfo: any\n  feeTier: string\n  isModal?: boolean\n  isAutoRefresh?: boolean\n  currentVaultsFarm?: any\n  vaultsFarmingStaked?: any\n  binStep?: string\n}\n\n// VaultÊ∑ªÂä†\nexport default function VaultsAdd(props: VaultsAddProps) {\n  const { currentAccount, onWalletModal } = useAccountStore()\n  const { assetAction, setAssetAction, isCheckedZAP, setIsCheckedZAP } = useVaultsActionStore()\n  // const [assetAction, setAssetAction] = useState('both')\n  // const [isCheckedZAP, setIsCheckedZAP] = useState(false)\n  const {\n    category,\n    isReverse,\n    vaultId,\n    currentActionTab,\n    totalSupply,\n    lpTokenInfo,\n    feeTier,\n    isModal,\n    isAutoRefresh,\n    currentVaultsFarm,\n    vaultsFarmingStaked,\n    binStep\n  } = props\n  const { fromToken, toToken, calculateResult } = useVaultsActionStore()\n  const { vaultsPoolObj } = useVaultsPoolStore()\n\n  const currentVaultPool = useMemo(() => {\n    return vaultsPoolObj[vaultId as string]\n  }, [vaultsPoolObj, vaultId])\n  console.log('üöÄüöÄüöÄ ~ VaultsAdd.tsx:63 ~ VaultsAdd ~ currentVaultPool:', currentVaultPool)\n\n  const avaiableCapacityInfo = useVaultAvaiableCapacity(currentVaultPool)\n  console.log('üöÄüöÄüöÄ ~ VaultsAdd.tsx:65 ~ VaultsAdd ~ avaiableCapacityInfo:', avaiableCapacityInfo)\n  const {\n    balanceInfoA,\n    balanceInfoB,\n    amountValueA,\n    amountValueB,\n    handleAmountInputChange,\n    amountInputA,\n    amountInputB,\n    resetInputAmount,\n    preCalculateLoading,\n    zapNumGtError,\n    zapNumLtError,\n    calculateLpLoading,\n    inputTotalValue,\n    showOnlySideTips,\n    doAddAction,\n    reCalculateResult,\n    percentage,\n    setPercentage,\n    setIsSlider,\n    preCalcError,\n    handlePercentInputChange,\n    isQuoteCoin,\n    setUuid,\n    uuidRef,\n    isSlider\n  } = useVaultsAdd(\n    vaultId,\n    category,\n    fromToken,\n    toToken,\n    isReverse,\n    assetAction,\n    isCheckedZAP,\n    avaiableCapacityInfo?.quoteCoin,\n    avaiableCapacityInfo?.availableCapacityUSD,\n    avaiableCapacityInfo?.availableCapacityWithQuoteCoin,\n    currentVaultsFarm,\n    vaultsFarmingStaked\n  )\n\n  // ÂàáÊç¢ZAPÊàñËÄÖËµÑ‰∫ßÁ±ªÂûãÔºåÊ∏ÖÁ©∫ËæìÂÖ•Ê°Ü\n  useEffect(() => {\n    resetInputAmount()\n  }, [isCheckedZAP, assetAction, vaultId])\n\n  const [isOpenAddModel, setIsOpenAddModel] = useState(false)\n\n  const { isApp } = useWindowWidth()\n\n  const { btnText, btnDisabled } = useVaultsButtonStatus(\n    amountInputA,\n    amountInputB,\n    balanceInfoA?.balanceFormat || '',\n    balanceInfoB?.balanceFormat || '',\n    fromToken,\n    toToken,\n    assetAction,\n    true,\n    zapNumGtError,\n    zapNumLtError,\n    category,\n    isCheckedZAP\n  )\n\n  const { vaultsSlippage } = useGlobalStore()\n\n  // Âç†ÊØî\n  const { lpRate } = useCalculateChangeLpRate(calculateResult?.ft_amount, totalSupply)\n  // ÊúÄÂ∞èÂèØÊé•Êî∂\n  const { amountLimit } = useCalculateSlippageAmount(Number(vaultsSlippage), calculateResult?.ft_amount, false)\n\n  const getSecondModelData = () => {\n    console.log('üöÄüöÄüöÄ ~ VaultsAdd.tsx:140 ~ getSecondModelData ~ currentVaultPool:', binStep)\n    const data: VaultsAddModelData = {\n      feeTier: feeTier || '',\n      displayTokenA: fromToken!,\n      displayTokenB: toToken!,\n      displayAmountA: amountInputA,\n      displayAmountB: amountInputB,\n      totalAmountValue: inputTotalValue,\n      sharePool: lpRate,\n      lpAmountLimit: amountLimit || '0',\n      lpDecimals: lpTokenInfo?.decimals,\n      category,\n      binStep\n    }\n\n    return data\n  }\n\n  const { pythPriceMap } = useVaultsPythPriceStore()\n  const isMounted = useRef(false)\n  useEffect(() => {\n    isMounted.current = true\n  }, [])\n  useEffect(() => {\n    if (isMounted.current) {\n      reCalculateResult()\n    }\n    isMounted.current = true\n  }, [pythPriceMap])\n\n  useEffect(() => {\n    if (isMounted.current) {\n      reCalculateResult()\n    }\n  }, [isAutoRefresh])\n\n  const { isCheckedDontRemindWalletObj } = useVaultsRiskStore()\n  const [isOpenRiskModal, setIsOpenRiskModal] = useState(false)\n  const isShowRiskModal = useMemo(() => {\n    return !isCheckedDontRemindWalletObj[currentAccount?.address]\n  }, [isCheckedDontRemindWalletObj, currentAccount?.address])\n\n  useEffect(() => {\n    return () => {\n      uuidRef.current = ''\n    }\n  }, [])\n\n  return (\n    <VStack gap={isModal ? '8px' : '12px'} w=\"100%\" align=\"flex-start\">\n      <Block bg={isModal ? 'transparent' : 'none'} border=\"none\" borderRadius=\"12px\" p={{ base: '0px 0px 8px', lg: isModal ? '0' : '0px' }} w=\"100%\">\n        <SwitchAssetTab\n          displayTokenA={fromToken}\n          displayTokenB={toToken}\n          onSelectAssetTab={assetAction => {\n            setAssetAction(assetAction)\n          }}\n          setIsCheckedZAP={() => setIsCheckedZAP(!isCheckedZAP)}\n          setAssetAction={setAssetAction}\n          assetAction={assetAction}\n          isCheckedZAP={isCheckedZAP}\n          category={category}\n          currentActionTab={currentActionTab}\n          handleRefreshClick={() => {\n            console.log('üöÄüöÄüöÄ ~ vaultsAdd.tsx:174 ~ VaultsAdd ~ handleRefreshClick:')\n            reCalculateResult()\n          }}\n        />\n        <VStack mt={isModal ? '8px' : '12px'} position=\"relative\">\n          <TradeInputGroup\n            from={{\n              wrapStyle: {\n                h: 'unset',\n                p: { base: '20px 8px', lg: '20px 16px' }\n              },\n              hideSelf: assetAction !== 'both' && assetAction !== fromToken?.coin_type,\n              balance: balanceInfoA?.balanceFormat || '',\n              value: amountInputA,\n              amountValue: amountInputA && amountValueA,\n              loading: false,\n              onChange: value => {\n                if (category == 'haedal') {\n                  setIsSlider(false)\n                }\n                handleAmountInputChange(value, true, amountInputB)\n              },\n              selectable: false,\n              placeholder: '0.0',\n              token: fromToken\n            }}\n            to={{\n              wrapStyle: {\n                h: 'unset',\n                p: { base: '20px 8px', lg: '20px 16px' }\n              },\n              hideSelf: assetAction !== 'both' && assetAction !== toToken?.coin_type,\n              balance: balanceInfoB?.balanceFormat || '',\n              value: amountInputB,\n              amountValue: amountInputB && amountValueB,\n              loading: false,\n              onChange: value => {\n                if (category == 'haedal') {\n                  setIsSlider(false)\n                }\n                handleAmountInputChange(value, false, amountInputA)\n              },\n              selectable: false,\n              placeholder: '0.0',\n              token: toToken\n            }}\n            iconParams={{\n              xlinkHref: '#icon-icon_add',\n              svgFill: 'text_caption',\n              iconCursor: 'default'\n            }}\n            iconHover={false}\n          />\n        </VStack>\n      </Block>\n      {category == 'haedal' ||\n        (category == 'cetus-dlmm' && isAvailableObject(pythPriceMap) && (\n          <Block bg=\"primary_opacity.10\" border=\"none\" borderRadius=\"16px\" p=\"16px\" key={vaultId}>\n            <AvailableCapacity\n              depositRatio={avaiableCapacityInfo.depositRatio || ''}\n              percentage={percentage}\n              hardCapUSD={avaiableCapacityInfo.hardCapUSD || ''}\n              vaultTvl={avaiableCapacityInfo.vaultTvl || ''}\n              availableCapacityUSD={avaiableCapacityInfo.availableCapacityUSD || ''}\n              quoteCoin={avaiableCapacityInfo.quoteCoin}\n              maxCapNum={avaiableCapacityInfo.hardCap || ''}\n              availableCapacityWithQuoteCoin={avaiableCapacityInfo.availableCapacityWithQuoteCoin || ''}\n              onChange={(value: string | number) => {\n                setIsSlider(true)\n                setPercentage(value as SetStateAction<number>)\n                const uuid = v4()\n                setUuid(uuid)\n                handlePercentInputChange(\n                  value as number,\n                  isQuoteCoin\n                    ? (avaiableCapacityInfo?.availableCapacityWithQuoteCoin as string)\n                    : (avaiableCapacityInfo?.availableCapacityWithBaseCoin as string),\n                  isQuoteCoin ? avaiableCapacityInfo.quoteCoin : avaiableCapacityInfo.baseCoin,\n                  uuid\n                )\n              }}\n            />\n          </Block>\n        ))}\n      <VStack w=\"100%\" gap=\"16px\">\n        <Button\n          m=\"-1px\"\n          isLoading={calculateLpLoading || isOpenAddModel}\n          w=\"100%\"\n          borderRadius=\"12px\"\n          h=\"52px\"\n          fontSize={isApp ? '18px' : '18px'}\n          fontWeight=\"500\"\n          isDisabled={btnDisabled || isOpenAddModel || calculateLpLoading}\n          onClick={() => {\n            if (currentAccount) {\n              if (isShowRiskModal && category == 'haedal') {\n                setIsOpenRiskModal(true)\n              } else {\n                setIsOpenAddModel(true)\n              }\n            } else {\n              onWalletModal(true)\n            }\n          }}\n        >\n          {btnText || (isCheckedZAP ? 'Zap In' : 'Deposit')}\n        </Button>\n\n        {preCalcError && !preCalculateLoading && category == 'cetus-dlmm' && (\n          <ErrorTips tips={'Amount too small to allocate across bins. Please increase the amount.'} type=\"warning\" />\n        )}\n\n        {zapNumGtError && (amountInputA || amountInputB) && (\n          <VStack w=\"100%\" alignItems=\"start\" gap=\"20px\">\n            <Text\n              color=\"primary_yellow\"\n              fontSize=\"12px\"\n              textAlign=\"left\"\n              w=\"100%\"\n              bg=\"primary_yellow_opacity.10\"\n              p=\"12px\"\n              borderRadius=\"8px\"\n              lineHeight=\"20px\"\n            >\n              Single-asset deposit can't be higher than $10,000 at a time.\n            </Text>\n          </VStack>\n        )}\n\n        {zapNumLtError && (amountInputA || amountInputB) && (\n          <VStack w=\"100%\" alignItems=\"start\">\n            <Text\n              color=\"primary_red\"\n              fontSize=\"12px\"\n              textAlign=\"left\"\n              w=\"100%\"\n              bg=\"primary_red_opacity.10\"\n              p=\"12px\"\n              borderRadius=\"8px\"\n              lineHeight=\"20px\"\n            >\n              The input is too small. Zap mode is not available.\n            </Text>\n          </VStack>\n        )}\n\n        {/* Â±ïÁ§∫ËÆ°ÁÆóÁªìÊûú */}\n        {(calculateResult || showOnlySideTips) && (amountInputA || amountInputB) && (\n          <VStack w=\"100%\" alignItems=\"start\" gap=\"0\" mb={isModal ? '12px' : '0px'}>\n            {assetAction !== 'both' && showOnlySideTips && (\n              <Text color=\"text_paragraph\" fontSize=\"12px\" lineHeight=\"1.8\" pb={calculateResult ? '20px' : '0'}>\n                {showOnlySideTips}\n              </Text>\n            )}\n            {calculateResult && (\n              <VaultsAddResult\n                amountLimit={amountLimit}\n                inputTotalValue={inputTotalValue}\n                preCalculateLoading={preCalculateLoading}\n                calculateLpLoading={calculateLpLoading}\n                lpRate={lpRate}\n                lpDecimals={lpTokenInfo?.decimals}\n                poolName={`${fromToken?.symbol} - ${toToken?.symbol}`}\n                labelColor=\"primary_gray\"\n              />\n            )}\n          </VStack>\n        )}\n      </VStack>\n      {isOpenRiskModal && (\n        <RiskModal\n          isOpen={isOpenRiskModal}\n          setIsOpen={setIsOpenRiskModal}\n          continueFunc={() => {\n            setIsOpenRiskModal(false)\n            setIsOpenAddModel(true)\n          }}\n        />\n      )}\n      {isOpenAddModel && (\n        <VaultsAddConfirmModel\n          data={getSecondModelData()}\n          isOpen={isOpenAddModel}\n          calculateLpLoading={calculateLpLoading}\n          onClose={() => {\n            setIsOpenAddModel(false)\n          }}\n          onSubmitClick={() => {\n            setIsOpenAddModel(false)\n            doAddAction()\n          }}\n        />\n      )}\n    </VStack>\n  )\n}\n","import useGlobalStore from '@/store/common/global'\nimport useVaultsFarmingStore from '@/store/vaults-farming'\nimport useVaultsActionStore from '@/store/vaults-v2/useVaultsAction'\nimport { MsafeTransactionSubType } from '@/types'\nimport { formatDescription, isDecimalWithZeros } from '@/utils'\nimport { useAccountBalance, useDebounceFunction } from '@cetus/hooks'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport { useSdk } from '@cetus/sdk-factory'\nimport { useAccountStore } from '@cetus/stores'\nimport usePeripherySDKStore from '@cetus/stores/src/usePeripherySDKStore'\nimport useWebConfigStore from '@cetus/stores/src/useWebConfigStore'\nimport { BalanceChanges, CommonTypeInfo, ToastType, Token, TransactionStatusType } from '@cetus/types'\nimport { formatNumber, formatNumberWithDown, fromDecimalsAmountFix, getBalanceChanges } from '@cetus/utils'\nimport { d, toDecimalsAmount } from '@cetusprotocol/common-sdk'\nimport { CalculateRemoveAmountParams, InputType, WithdrawBothParams, WithdrawOneSideParams } from '@cetusprotocol/vaults-sdk'\nimport { Transaction } from '@mysten/sui/transactions'\nimport { WithdrawCalculationOptions, WithdrawMode, WithdrawOptions } from 'kk-vault-sdk'\nimport { useEffect, useMemo, useRef, useState } from 'react'\nimport { v4 } from 'uuid'\nimport useTransaction from '../common/useTransaction'\nimport { useFindBestRouting } from '../swap/useFindBestRouting'\nimport useCurrentVaultsFarm from '../vaults-farming/useCurrentVaultsFarm'\nimport useGetPythTokenPrice from './pyth-price/useGetPythTokenPrice'\nimport useCurrentVaultDetail from './useCurrentVaultDetail'\n\nexport default function useVaultsRemove(\n  vaultId: string,\n  category: string,\n  displayTokenA: Token,\n  displayTokenB: Token,\n  isReverse: boolean,\n  assetAction: string,\n  isCheckedZAP: boolean,\n  currentVaultPosition: any,\n  vaultsFarmingStaked: any\n) {\n  const { autoClaimFarmingReward } = useVaultsFarmingStore()\n  const { currentVaultsFarm } = useCurrentVaultsFarm(vaultId)\n\n  const { amountInputA, amountInputB, calculateResult, setAmountInputA, setAmountInputB, setCalculateResult } = useVaultsActionStore()\n  const { findBestRouters } = useFindBestRouting()\n  const { vaultsSlippage, mevProtect, maxCapForGas, transactionMode, customGasPrice } = useGlobalStore()\n  const { getTokenAmountValue } = useTokenPrice()\n  const { volatileVaultsSdk, haedalFarmSdk } = usePeripherySDKStore()\n  const vaultsSdk = useSdk('vaults')\n  const { getTokenAmountValueByPyth } = useGetPythTokenPrice()\n  const [preCalculateLoading, setPreCalculateLoading] = useState(false)\n  const [fixAmountA, setFixAmountA] = useState(false)\n  const { fetchAccountBalance } = useAccountBalance()\n  const { updateCurrentVaultById } = useCurrentVaultDetail()\n  const { providers } = useWebConfigStore()\n\n  const fixAmountARef = useRef(fixAmountA)\n  useEffect(() => {\n    fixAmountARef.current = fixAmountA\n  }, [fixAmountA])\n  const [isSlider, setIsSlider] = useState(false)\n  const [uuid, setUuid] = useState('')\n\n  const uuidRef = useRef(uuid)\n  useEffect(() => {\n    uuidRef.current = uuid\n  }, [uuid])\n\n  const amountInputARef = useRef(amountInputA)\n  const amountInputBRef = useRef(amountInputB)\n  useEffect(() => {\n    amountInputARef.current = amountInputA\n  }, [amountInputA])\n\n  useEffect(() => {\n    amountInputBRef.current = amountInputB\n  }, [amountInputB])\n\n  const tokenA = useMemo(() => {\n    return isReverse ? displayTokenB : displayTokenA\n  }, [isReverse, displayTokenA, displayTokenB])\n\n  const tokenB = useMemo(() => {\n    return isReverse ? displayTokenA : displayTokenB\n  }, [isReverse, displayTokenA, displayTokenB])\n\n  // ‰ª∑ÂÄº\n  const amountValueA =\n    category == 'haedal'\n      ? getTokenAmountValueByPyth(displayTokenA?.coin_type, amountInputA || '0')\n      : getTokenAmountValue(displayTokenA?.coin_type, amountInputA || '0')\n  const amountValueB =\n    category == 'haedal'\n      ? getTokenAmountValueByPyth(displayTokenB?.coin_type, amountInputB || '0')\n      : getTokenAmountValue(displayTokenB?.coin_type, amountInputB || '0')\n\n  // ÂèØÁî®Êï∞Èáè\n  const [availableAmountA, setAvailableAmountA] = useState(isReverse ? currentVaultPosition?.amountB : currentVaultPosition?.amountA)\n  const [availableAmountB, setAvailableAmountB] = useState(isReverse ? currentVaultPosition?.amountA : currentVaultPosition?.amountB)\n\n  const [calculateAvailableLoading, setCalculateAvailableLoading] = useState<boolean>(false)\n\n  // ËÆ°ÁÆóÂèØÁî®ËµÑ‰∫ß\n  const calculateAvailableAmount = async () => {\n    // console.log('üöÄüöÄüöÄ ~ useVaultsRemove.ts:103 ~ calculateAvailableAmount ~ calculateAvailableAmount:')\n    const { amountA, amountB } = currentVaultPosition\n    setCalculateAvailableLoading(false)\n    if (assetAction === 'both') {\n      setAvailableAmountA(isReverse ? amountB : amountA)\n      setAvailableAmountB(isReverse ? amountA : amountB)\n      return\n    }\n\n    const isOnlyReceiveCoinA = assetAction === tokenA?.coin_type\n    const fromAmount = isOnlyReceiveCoinA ? amountB : amountA\n    const targetAmount = isOnlyReceiveCoinA ? amountA : amountB\n    if (category == 'haedal' || category === 'cetus-dlmm') {\n      haedalCalculateAvailableAmount(fromAmount, targetAmount, isOnlyReceiveCoinA)\n    } else {\n      // Âà©Áî®findRouter ËΩ¨Âåñ‰∏∫ Âçï‰∏ÄËµÑ‰∫ß\n      lstCalculateAvailableAmount(fromAmount, targetAmount, isOnlyReceiveCoinA)\n    }\n  }\n\n  // haedal ËÆ°ÁÆóÂèØÁî®ËµÑ‰∫ß\n  const haedalCalculateAvailableAmount = async (fromAmount: string, targetAmount: string, isOnlyReceiveCoinA: boolean) => {\n    if (d(fromAmount).gt(0)) {\n      setCalculateAvailableLoading(true)\n      // mode‰∏∫ÂêàÁ∫¶ÊñπÂêë\n      const params: any = {\n        pool_id: vaultId,\n        mode,\n        burn_lp_amount: currentVaultPosition?.balance,\n        available_lp_amount: currentVaultPosition?.balance\n      }\n      try {\n        const res =\n          category === 'cetus-dlmm'\n            ? await volatileVaultsSdk.VaultsV2.preCalculateWithdrawAmount(params)\n            : await volatileVaultsSdk.Vaults.preCalculateWithdrawAmount(params)\n        console.log('üöÄüöÄüöÄ ~ useVaultsRemove.ts:127 ~ haedalCalculateAvailableAmount ~ res:', res)\n        // console.log('üöÄüöÄüöÄ ~ useVaultsRemove.ts:110 ~ calculateAvailableAmount ~ res:', res)\n        // mode ‰∏∫ÂêàÁ∫¶ÊñπÂêë\n        if (mode == 'OnlyCoinA') {\n          const amount = fromDecimalsAmountFix(res.receive_amount_a, tokenA?.decimals)\n          if (isReverse) {\n            setAvailableAmountB(amount)\n          } else {\n            setAvailableAmountA(amount)\n          }\n        } else {\n          const amount = fromDecimalsAmountFix(res.receive_amount_b, tokenB?.decimals)\n          if (isReverse) {\n            setAvailableAmountA(amount)\n          } else {\n            setAvailableAmountB(amount)\n          }\n        }\n        setCalculateAvailableLoading(false)\n      } catch (error) {\n        console.log('üöÄüöÄüöÄ ~ useVaultsRemove.ts:145 ~ calculateAvailableAmount ~ error:', error)\n      }\n    } else {\n      if (isOnlyReceiveCoinA) {\n        setAvailableAmountA(targetAmount)\n      } else {\n        setAvailableAmountB(targetAmount)\n      }\n    }\n    setCalculateAvailableLoading(false)\n  }\n\n  // cetus ËÆ°ÁÆóÂèØÁî®ËµÑ‰∫ß\n  const lstCalculateAvailableAmount = async (fromAmount: string, targetAmount: string, isOnlyReceiveCoinA: boolean) => {\n    if (d(fromAmount).gt(0)) {\n      setCalculateAvailableLoading(true)\n      const fromToken = isOnlyReceiveCoinA ? tokenB! : tokenA!\n      const toToken = isOnlyReceiveCoinA ? tokenA! : tokenB!\n\n      findBestRouters({\n        fromToken,\n        toToken,\n        amount: toDecimalsAmount(fromAmount, fromToken.decimals).toString(),\n        providersKeys: providers,\n        by_amount_in: true,\n        uuid: v4()\n      })\n        .then(result => {\n          if (result.toAmountUi) {\n            targetAmount = d(targetAmount).add(result.toAmountUi).toString()\n          }\n          if (isOnlyReceiveCoinA) {\n            setAvailableAmountA(targetAmount)\n          } else {\n            setAvailableAmountB(targetAmount)\n          }\n        })\n        .finally(() => {\n          setCalculateAvailableLoading(false)\n        })\n    } else {\n      if (isOnlyReceiveCoinA) {\n        setAvailableAmountA(targetAmount)\n      } else {\n        setAvailableAmountB(targetAmount)\n      }\n    }\n  }\n\n  // ÊÄª‰ª∑ÂÄº 100% = Á°¨È°∂ - ÂΩìÂâçTVL ‰∏çÊòØÁôæÂàÜÁôæ ÊòæÁ§∫ËæìÂÖ•Ê°ÜA„ÄÅBÁöÑÂÄºÁõ∏Âä†\n  const inputTotalValue = useMemo(() => {\n    return d(amountValueA || '0')\n      .add(amountValueB || '0')\n      .toString()\n  }, [amountValueA, amountValueB])\n\n  // ZAPÊ®°Âºè‰∏ã‰∏çËÉΩË∂ÖËøá10000\n  const zapNumGtError = useMemo(() => {\n    if (isCheckedZAP) return d(inputTotalValue).gt(d(10000))\n    return false\n  }, [inputTotalValue, isCheckedZAP])\n\n  // ZAPÊ®°Âºè‰∏ã‰∏çËÉΩÂ∞è‰∫é0.0001\n  const zapNumLtError = useMemo(() => {\n    if (isCheckedZAP) return d(inputTotalValue).gt(0) && d(inputTotalValue).lt(d(0.0001))\n    return false\n  }, [inputTotalValue, isCheckedZAP])\n\n  const [removePercent, setRemovePercent] = useState<number>(0)\n\n  // Ê∏ÖÁ©∫ËæìÂÖ•Ê°Ü\n  const resetInputAmount = () => {\n    setAmountInputA('')\n    setAmountInputB('')\n    setRemovePercent(0)\n    setPreCalculateLoading(false)\n    setCalculateResult(undefined)\n    setUuid('')\n  }\n\n  // È¢ÑËÆ°ÁÆóÁªìÊùü ÁªôËæìÂÖ•Ê°ÜËµãÂÄº\n  const wrapRes = (res: any, isFixedDisplayTokenA: boolean, isSlider: boolean, displayRatio: number) => {\n    console.log('üöÄüöÄüöÄ ~ useVaultsRemove.ts:96 ~ wrapRes ~ res:', res, isSlider, displayRatio)\n    if (res) {\n      const amountA = d(category == 'haedal' || category == 'cetus-dlmm' ? res.receive_amount_a : res.amount_a)\n        .div(10 ** tokenA.decimals)\n        .toString()\n      const amountB = d(category == 'haedal' || category == 'cetus-dlmm' ? res.receive_amount_b : res.amount_b)\n        .div(10 ** tokenB.decimals)\n        .toString()\n      const swapOutAmount = d(res.swap_result?.swap_out_amount || '0')\n        .div(10 ** (isFixedDisplayTokenA ? displayTokenA.decimals : displayTokenB.decimals))\n        .toString()\n      console.log('üöÄüöÄüöÄ ~ useVaultsRemove.ts:239 ~ wrapRes ~ swapOutAmount:', swapOutAmount, amountA, amountB)\n      // if (displayRatio === 100 && assetAction == 'both') {\n      //   setAvailableAmountA(isReverse ? amountB : amountA)\n      //   setAvailableAmountB(isReverse ? amountA : amountB)\n      // }\n      // ËæìÂÖ•Ê®°Âºè ÊªëÊùÜÊ®°Âºè\n      // ËæìÂÖ•Ê®°Âºè‰∏ã Âè™ÈúÄË¶ÅsetÂè¶‰∏ÄËæπ\n      // ÊªëÊùÜÊ®°Âºè‰∏ã ÈúÄË¶Åset‰∏§Ëæπ\n\n      if (!isSlider) {\n        if (assetAction !== 'both') return\n        if (isFixedDisplayTokenA) {\n          setAmountInputB(isReverse ? amountA : amountB)\n        } else {\n          setAmountInputA(isReverse ? amountB : amountA)\n        }\n      } else {\n        if (assetAction == 'both') {\n          setAmountInputA(isReverse ? amountB : amountA)\n          setAmountInputB(isReverse ? amountA : amountB)\n        } else {\n          if (assetAction == displayTokenA?.coin_type) {\n            // const amount = d(swapOutAmount)\n            //   .add(category == 'cetus' ? amountA : isReverse ? amountB : amountA)\n            //   .toString()\n            if (displayRatio == 100) {\n              // setAvailableAmountA(amount)\n            }\n            const amount = d(availableAmountA).mul(displayRatio).div(100).toString()\n            console.log('üöÄüöÄüöÄ ~ useVaultsRemove.ts:264 ~ wrapRes ~ amount:', amount)\n            setAmountInputA(amount)\n          } else {\n            // const amount = d(swapOutAmount)\n            //   .add(category == 'cetus' ? amountB : isReverse ? amountA : amountB)\n            //   .toString()\n            if (displayRatio == 100) {\n              // setAvailableAmountB(amount)\n            }\n            const amount = d(availableAmountB).mul(displayRatio).div(100).toString()\n            setAmountInputB(amount)\n          }\n          // if (isFixedDisplayTokenA) {\n          //   setAmountInputA(isReverse ? amountB : amountA)\n          // } else {\n          //   setAmountInputB(isReverse ? amountA : amountB)\n          // }\n        }\n      }\n    }\n  }\n  /**\n   * È¢ÑËÆ°ÁÆó\n   * @param amount\n   * @param isPercentInput\n   * @param fix_amount_a\n   * @param uuid\n   */\n  const preCalculate = async (amount: string, is_ft_input: boolean, isFixedDisplayTokenA: boolean, uuid: string, removePercent?: number) => {\n    if (tokenA && tokenB && vaultId) {\n      // ÈùûÁôæÂàÜÊØîËæìÂÖ•ÔºåË¶ÅÂà§Êñ≠‰ΩôÈ¢ùÊòØÂê¶Ë∂≥Â§ü\n      if (!removePercent) {\n        if (isFixedDisplayTokenA) {\n          if (d(amount).gt(availableAmountA)) {\n            setUuid('')\n            setAmountInputB('')\n            setRemovePercent(0)\n            setCalculateResult(undefined)\n            setPreCalculateLoading(false)\n            return\n          }\n        } else {\n          if (d(amount).gt(availableAmountB)) {\n            setUuid('')\n            setAmountInputA('')\n            setCalculateResult(undefined)\n            setPreCalculateLoading(false)\n            setRemovePercent(0)\n            return\n          }\n        }\n      }\n\n      if (+amountInputARef.current || +amountInputBRef.current || removePercent) {\n        setPreCalculateLoading(true)\n      }\n\n      const fixToken = (isReverse ? !isFixedDisplayTokenA : isFixedDisplayTokenA) ? tokenA : tokenB\n      const inputAmount = toDecimalsAmount(amount, fixToken.decimals)\n      const availableRemoveAmount = isFixedDisplayTokenA\n        ? toDecimalsAmount(availableAmountA, fixToken.decimals)\n        : toDecimalsAmount(availableAmountB, fixToken.decimals)\n      const fixedCoinA = isReverse ? !isFixedDisplayTokenA : isFixedDisplayTokenA\n      const ratio = d(inputAmount).div(d(availableRemoveAmount))\n      const removeLpAmount = formatNumberWithDown(ratio.mul(currentVaultPosition?.balance).toString(), 0, true)\n      const displayRatio = Number(formatNumberWithDown(ratio.mul(100).toString(), 2))\n      console.log('üöÄüöÄüöÄ ~ useVaultsRemove.ts:324 ~ preCalculate ~ fixedCoinA:', fixedCoinA)\n      setFixAmountA(fixedCoinA)\n      if (category === 'haedal') {\n        haedalPreCalculate(removeLpAmount as string, isFixedDisplayTokenA, uuid, displayRatio, false)\n      } else if (category == 'cetus-dlmm') {\n        haedalPreCalculate(removeLpAmount as string, isFixedDisplayTokenA, uuid, displayRatio, false, true)\n      } else {\n        lstPreCalculate(removeLpAmount as string, isFixedDisplayTokenA, fixedCoinA, uuid, displayRatio, false)\n      }\n    }\n  }\n\n  // haedal È¢ÑËÆ°ÁÆó\n  const haedalPreCalculate = async (\n    removeLpAmount: string,\n    isFixedDisplayTokenA: boolean,\n    uuid: string,\n    displayRatio: number,\n    isSlider: boolean,\n    isDlmm = false\n  ) => {\n    let params: WithdrawCalculationOptions\n\n    if (assetAction == 'both') {\n      params = {\n        pool_id: vaultId,\n        mode: 'FixedOneSide',\n        burn_lp_amount: String(removeLpAmount)\n        // request_id: uuid\n      }\n    } else {\n      const mode = assetAction == tokenA?.coin_type ? 'OnlyCoinA' : 'OnlyCoinB'\n      params = {\n        pool_id: vaultId,\n        mode,\n        burn_lp_amount: String(removeLpAmount)\n        // request_id: uuid\n      }\n    }\n\n    try {\n      let res: any\n      if (isDlmm) {\n        res = await volatileVaultsSdk.VaultsV2.preCalculateWithdrawAmount(params)\n      } else {\n        res = await volatileVaultsSdk.Vaults.preCalculateWithdrawAmount(params)\n      }\n      console.log('üöÄüöÄüöÄ ~ useVaultsRemove.ts:386 ~ haedalPreCalculate ~ res:', res, uuid, uuidRef.current)\n      // console.log('üöÄüöÄüöÄ ~ useVaultsRemove.ts:202 ~ haedalPreCalculate ~ res:', res)\n      // console.log('üöÄüöÄüöÄ ~ useVaultsRemove.ts:215 ~ haedalPreCalculate ~ uuidRef.current:', uuidRef.current, uuid)\n      // if (uuidRef.current !== params.request_id) return\n\n      // console.log('üöÄüöÄüöÄ ~ useVaultsRemove.ts:224 ~ haedalPreCalculate ~ res:', res)\n      if (res.burn_lp_amount == '0') {\n        setPreCalculateLoading(false)\n        setCalculateResult(undefined)\n        return\n      }\n      if (uuidRef.current !== uuid) return\n\n      wrapRes(res, isFixedDisplayTokenA, isSlider, displayRatio)\n      setCalculateResult({\n        ...res,\n        burn_ft_amount: res.burn_lp_amount\n      } as any)\n      setRemovePercent(displayRatio)\n    } catch (error) {\n      console.log('üöÄüöÄüöÄ ~ useVaultsRemove.ts:388 ~ haedalPreCalculate ~ error:', error)\n      setCalculateResult(undefined)\n    } finally {\n      setPreCalculateLoading(false)\n    }\n  }\n\n  const lstPreCalculate = async (\n    removeLpAmount: string,\n    isFixedDisplayTokenA: boolean,\n    fixedCoinA: boolean,\n    uuid: string,\n    displayRatio: number,\n    isSlider: boolean\n  ) => {\n    const params: CalculateRemoveAmountParams = {\n      vault_id: vaultId,\n      fix_amount_a: fixedCoinA,\n      input_amount: removeLpAmount,\n      slippage: Number(vaultsSlippage),\n      request_id: uuid,\n      side: assetAction === 'both' ? InputType.Both : InputType.OneSide,\n      is_ft_input: true,\n      max_ft_amount: currentVaultPosition?.balance\n    }\n    console.log('üöÄüöÄüöÄ ~ useVaultsRemove.ts:275 ~ lstPreCalculate ~ params:', params)\n\n    try {\n      const res = await vaultsSdk!.Vaults.calculateWithdrawAmount(params)\n      console.log('üöÄüöÄüöÄ ~ useVaultsRemove.ts:386 ~ res:', res, displayRatio)\n      // console.log('üöÄüöÄüöÄ ~ useVaultsRemove.ts:202 ~ haedalPreCalculate ~ res:', res)\n      console.log('üöÄüöÄüöÄ ~ useVaultsRemove.ts:215 ~ haedalPreCalculate ~ uuidRef.current:', uuidRef.current, uuid)\n      // if (uuidRef.current !== uuid) return\n\n      // console.log('üöÄüöÄüöÄ ~ useVaultsRemove.ts:224 ~ haedalPreCalculate ~ res:', res)\n      if (res.burn_ft_amount == '0') {\n        setPreCalculateLoading(false)\n        setCalculateResult(undefined)\n        return\n      }\n      if (uuidRef.current !== uuid) return\n      wrapRes(res, isFixedDisplayTokenA, isSlider, displayRatio)\n      setCalculateResult(res)\n      setRemovePercent(displayRatio)\n    } catch (error) {\n      // console.log('üöÄüöÄüöÄ ~ useVaultsRemove.ts:297 ~ lstPreCalculate ~ error:', error)\n      setCalculateResult(undefined)\n    } finally {\n      setPreCalculateLoading(false)\n    }\n  }\n  const debouncedPreCalculate = useDebounceFunction(preCalculate, 500)\n  const debouncedPercentInputChange = useDebounceFunction(category == 'cetus' ? lstPreCalculate : haedalPreCalculate, 500)\n\n  // ÁôæÂàÜÊØîËæìÂÖ•\n  const handlePercentInputChange = (value: number, isFixedDisplayTokenA: boolean) => {\n    if (value == 0) {\n      resetInputAmount()\n      return\n    }\n    console.log('üöÄüöÄüöÄ ~ useVaultsRemove.ts:218 ~ handlePercentInputChange ~ value:', value, category)\n    setIsSlider(true)\n    setPreCalculateLoading(true)\n    setRemovePercent(value)\n    const uuid = v4()\n    console.log('üöÄüöÄüöÄ ~ useVaultsRemove.ts:225 ~ handlePercentInputChange ~ uuid:', uuid)\n    setUuid(uuid)\n    const removeLpAmount = formatNumberWithDown(\n      d(currentVaultPosition?.balance)\n        .mul(value / 100)\n        .toString(),\n      0,\n      true\n    )\n    console.log('üöÄüöÄüöÄ ~ useVaultsRemove.ts:459 ~ handlePercentInputChange ~ removeLpAmount:', removeLpAmount, currentVaultPosition?.balance)\n\n    const fixedCoinA = isReverse ? !isFixedDisplayTokenA : isFixedDisplayTokenA\n    setFixAmountA(fixedCoinA)\n\n    if (category === 'haedal') {\n      debouncedPercentInputChange(removeLpAmount as string, isFixedDisplayTokenA, uuid, value, true)\n    } else if (category == 'cetus-dlmm') {\n      debouncedPercentInputChange(removeLpAmount as string, isFixedDisplayTokenA, uuid, value, true, true)\n    } else {\n      debouncedPercentInputChange(removeLpAmount as string, isFixedDisplayTokenA, fixedCoinA, uuid, value, true)\n    }\n  }\n\n  const handleAmountInputChange = (amount: string, isFixedDisplayTokenA: boolean, isClickMax?: boolean, isClickHalf?: boolean) => {\n    // ÁßªÈô§ÂÖ®ÈÉ®ÔºåËµ∞LP ÁßªÈô§\n    if (isClickHalf || isClickMax) {\n      // ÂçïtokenÁßªÈô§ËøôÈáåËµãÂÄº\n      if (assetAction !== 'both') {\n        if (isFixedDisplayTokenA) {\n          setAmountInputA(amount)\n        } else {\n          setAmountInputB(amount)\n        }\n      }\n    }\n    if (isClickMax) {\n      handlePercentInputChange(100, isFixedDisplayTokenA)\n      return\n    }\n\n    if (isClickHalf) {\n      handlePercentInputChange(50, isFixedDisplayTokenA)\n      return\n    }\n    setIsSlider(false)\n\n    // console.log('üöÄüöÄüöÄ ~ useVaultsRemove.ts:423 ~ handleAmountInputChange ~ isFixedDisplayTokenA:', isFixedDisplayTokenA)\n    if (isFixedDisplayTokenA) {\n      setAmountInputA(amount)\n    } else {\n      setAmountInputB(amount)\n    }\n\n    if (+amount) {\n      const uuid = v4()\n      setUuid(uuid)\n      console.log('üöÄüöÄüöÄ ~ useVaultsRemove.ts:515 ~ handleAmountInputChange ~ amount:', amount)\n      debouncedPreCalculate(amount, false, isFixedDisplayTokenA, uuid)\n    } else {\n      // resetInputAmount()\n      console.log('üöÄüöÄüöÄ ~ useVaultsRemove.ts:516 ~ handleAmountInputChange ~ amount:', amount, !amount && isDecimalWithZeros(amount))\n      if (!amount && isDecimalWithZeros(amount)) {\n        resetInputAmount()\n      } else {\n        console.log('üöÄüöÄüöÄ ~ useVaultsRemove.ts:522 ~ handleAmountInputChange ~ isFixedDisplayTokenA:', isFixedDisplayTokenA)\n        isFixedDisplayTokenA ? setAmountInputB('') : setAmountInputA('')\n        setRemovePercent(0)\n        setCalculateResult(undefined)\n        setUuid('')\n      }\n    }\n  }\n\n  const mode: WithdrawMode = useMemo(() => {\n    if (isCheckedZAP) {\n      return assetAction == 'both' ? 'FixedOneSide' : assetAction == tokenA?.coin_type ? 'OnlyCoinA' : 'OnlyCoinB'\n    } else {\n      return 'FixedOneSide'\n    }\n  }, [isCheckedZAP, assetAction, tokenA])\n\n  // ÈáçÊñ∞ËÆ°ÁÆó\n  const reCalculateResult = () => {\n    const isDisplayTokenA = isReverse ? !fixAmountARef.current : fixAmountARef.current\n    if (isSlider) {\n      handlePercentInputChange(removePercent, isDisplayTokenA)\n    } else {\n      const amount = fixAmountARef.current\n        ? isReverse\n          ? amountInputBRef.current\n          : amountInputARef.current\n        : isReverse\n          ? amountInputARef.current\n          : amountInputBRef.current\n      handleAmountInputChange(amount, isDisplayTokenA)\n    }\n  }\n\n  const { signAndExecuteTransaction, transactionConfirmation, transactionRejected } = useTransaction()\n  const [submitLoading, setSubmitLoading] = useState(false)\n  const doRemoveAction = async () => {\n    if (vaultId && calculateResult && currentVaultPosition?.balance) {\n      setSubmitLoading(true)\n\n      let param: WithdrawOptions | WithdrawBothParams | WithdrawOneSideParams\n      if (category == 'haedal' || category === 'cetus-dlmm') {\n        param = {\n          pool_id: vaultId,\n          burn_lp_amount: removePercent == 100 ? currentVaultPosition?.balance : calculateResult.burn_ft_amount,\n          mode,\n          slippage: Number(vaultsSlippage)\n        }\n      } else {\n        if (assetAction === 'both') {\n          param = {\n            vault_id: vaultId,\n            ft_amount: calculateResult?.burn_ft_amount as string,\n            slippage: Number(vaultsSlippage)\n          }\n        } else {\n          const fix_amount_a = assetAction === tokenA?.coin_type\n          if (removePercent === 100) {\n            param = {\n              vault_id: vaultId,\n              is_ft_input: true,\n              input_amount: currentVaultPosition?.balance,\n              slippage: Number(vaultsSlippage),\n              max_ft_amount: currentVaultPosition?.balance,\n              fix_amount_a\n            }\n          } else {\n            const input_amount = toDecimalsAmount(fixAmountA ? amountInputA : amountInputB, 9)\n            param = {\n              vault_id: vaultId,\n              is_ft_input: false,\n              input_amount: input_amount.toString(),\n              slippage: Number(vaultsSlippage),\n              max_ft_amount: currentVaultPosition?.balance,\n              fix_amount_a\n            }\n          }\n        }\n      }\n      // console.log('üöÄüöÄüöÄ ~ useVaultsRemove.ts:567 ~ doRemoveAction ~ calculateResult:', calculateResult)\n\n      console.log('üöÄ ~ doRemoveAction ~ params:', param)\n\n      // ÊûÑÂª∫ ‰∫§ÊòìÊèêÁ§∫\n      const toastInfo: ToastType = {\n        getShowInfo: (status: TransactionStatusType, balanceChanges?: Record<string, BalanceChanges>) => {\n          const description =\n            'Withdraw ' +\n            [formatDescription(amountInputA, displayTokenA.symbol), formatDescription(amountInputB, displayTokenB.symbol)]\n              .filter(Boolean)\n              .join(' and ')\n\n          const info: CommonTypeInfo = {\n            modalDescriptionText: description,\n            toastDescriptionContent: description\n          }\n\n          if (status === 'success') {\n            let amountA = amountInputA || '0'\n            let amountB = amountInputB || '0'\n\n            // if (res) {\n            //   res.events.forEach(event => {\n            // //     console.log('üöÄüöÄüöÄ ~ useVaultsAdd.ts:367 ~ doAddAction ~ event:', event)\n            //     if (event.type.indexOf('::pool::WithdrawEvent') > -1 && tokenA && tokenB) {\n            //       amountA = String(fromDecimalsAmount(event.parsedJson.amount_a, tokenA.decimals))\n            // //       console.log('üöÄüöÄüöÄ ~ useVaultsAdd.ts:361 ~ doAddAction ~ amountA:', amountA)\n            //       amountB = String(fromDecimalsAmount(event.parsedJson.amount_b, tokenB.decimals))\n            // //       console.log('üöÄüöÄüöÄ ~ useVaultsAdd.ts:363 ~ doAddAction ~ amountB:', amountB)\n            //     }\n            //   })\n            // }\n\n            console.log('üöÄüöÄüöÄ ~ useVaultsRemove.ts:582 ~ doRemoveAction ~ balanceChanges:', balanceChanges, amountInputA, amountInputB)\n            if (balanceChanges) {\n              amountA = d(amountInputA || '0').gt(0) ? getBalanceChanges(balanceChanges, displayTokenA) || amountInputA : ''\n              amountB = d(amountInputB || '0').gt(0) ? getBalanceChanges(balanceChanges, displayTokenB) || amountInputB : ''\n            }\n            // console.log('üöÄüöÄüöÄ ~ useVaultsRemove.ts:584 ~ doRemoveAction ~ amount:', amountA, amountB)\n\n            const descriptionList = [formatDescription(amountA, displayTokenA.symbol), formatDescription(amountB, displayTokenB.symbol)].filter(\n              Boolean\n            )\n\n            const description =\n              (descriptionList && descriptionList.length > 1 ? 'Removed ' : 'Withdraw ') +\n              [formatDescription(amountA, displayTokenA?.symbol), formatDescription(amountB, displayTokenB?.symbol)].filter(Boolean).join(' and ')\n\n            info.toastDescriptionContent = description\n            info.modalDescriptionText = description\n          }\n\n          return info\n        }\n      }\n      transactionConfirmation(toastInfo)\n\n      try {\n        let tx = new Transaction()\n        let lpCoin\n        if (category == 'haedal') {\n          // ÊèêÂèñÊï∞ÈáèÂ§ß‰∫évaultÂèØÁî® ÈúÄË¶ÅÂÖà‰ªéfarmingÊèêÂèñ\n          if (d(calculateResult.burn_ft_amount).gt(currentVaultPosition?.vaultBalance)) {\n            lpCoin = await haedalFarmSdk.Farms.buildRawWithdrawPayload(\n              {\n                poolId: currentVaultsFarm.poolId,\n                stakeCoinType: currentVaultsFarm.stakeCoinType,\n                stakeObjectId: vaultsFarmingStaked.stakeObjectId,\n                amount: d(calculateResult.burn_ft_amount).sub(currentVaultPosition?.vaultBalance).toString(),\n                claimReward: autoClaimFarmingReward,\n                rewardConfigs: autoClaimFarmingReward ? currentVaultsFarm.rewardConfigs : undefined\n              },\n              tx\n            )\n            console.log('üöÄüöÄüöÄ ~ useVaultsRemove.ts:672 ~ doRemoveAction ~ lpCoin:', lpCoin)\n          } else {\n            // Â¶ÇÊûúÊòØvault farmingÈúÄË¶ÅÊî∂Ââ≤Â•ñÂä±\n            if (currentVaultsFarm?.poolId && autoClaimFarmingReward && d(vaultsFarmingStaked?.stakedBalance || '0').gt(0)) {\n              await haedalFarmSdk.Farms.buildHarvestPayload(\n                {\n                  poolId: currentVaultsFarm.poolId,\n                  stakeCoinType: currentVaultsFarm.stakeCoinType,\n                  stakeObjectId: vaultsFarmingStaked.stakeObjectId,\n                  rewardCoinType: vaultsFarmingStaked.rewardConfigs[0]?.rewardCoinType,\n                  rewardBank: vaultsFarmingStaked.rewardConfigs[0]?.bank\n                },\n                tx\n              )\n            }\n          }\n          // vault ÊèêÂèñ\n\n          await volatileVaultsSdk.Vaults.buildWithdrawPayload(\n            {\n              ...param,\n              burn_lp_amount: d(calculateResult.burn_ft_amount).gt(currentVaultPosition?.vaultBalance)\n                ? currentVaultPosition?.vaultBalance\n                : calculateResult.burn_ft_amount,\n              extra_burn: lpCoin\n                ? {\n                    lp_burn_coin: lpCoin,\n                    burn_lp_amount: d(calculateResult.burn_ft_amount).sub(currentVaultPosition?.vaultBalance).toString()\n                  }\n                : undefined\n            },\n            tx\n          )\n        } else if (category == 'cetus-dlmm') {\n          console.log('üöÄüöÄüöÄ ~ useVaultsRemove.ts:726 ~ doRemoveAction ~ param:', param)\n          const result = {\n            ...param,\n            pool_id: vaultId,\n            burn_lp_amount: d(calculateResult.burn_ft_amount).gt(currentVaultPosition?.vaultBalance)\n              ? currentVaultPosition?.vaultBalance\n              : calculateResult.burn_ft_amount,\n            mode\n          }\n          console.log('üöÄüöÄüöÄ ~ useVaultsRemove.ts:733 ~ doRemoveAction ~ result:', result)\n          await volatileVaultsSdk.VaultsV2.buildWithdrawPayload(\n            {\n              ...param,\n              pool_id: vaultId,\n              burn_lp_amount: d(calculateResult.burn_ft_amount).gt(currentVaultPosition?.vaultBalance)\n                ? currentVaultPosition?.vaultBalance\n                : calculateResult.burn_ft_amount,\n              mode\n            },\n            tx\n          )\n        } else {\n          await vaultsSdk!.Vaults.withdraw(param as WithdrawBothParams | WithdrawOneSideParams, tx)\n        }\n        const res = await signAndExecuteTransaction(tx, toastInfo, {\n          useMev: mevProtect,\n          txAction: 'signTransactionBlock',\n          useFastMode: transactionMode === 'Fast Mode',\n          maxCapForGas,\n          customGasPrice,\n          msafeParams: {\n            action: MsafeTransactionSubType.AddVaultsPosition,\n            txbParams: param\n          }\n        })\n\n        if (res) {\n          resetInputAmount()\n          setTimeout(() => {\n            fetchAccountBalance()\n            updateCurrentVaultById(vaultId)\n          }, 2000)\n          // autoRefresh()\n        } else {\n          reCalculateResult()\n        }\n        setSubmitLoading(false)\n      } catch (error) {\n        console.log('üöÄüöÄüöÄ ~ useVaultsRemove.ts:675 ~ doRemoveAction ~ error:', error)\n        setSubmitLoading(false)\n        transactionRejected(toastInfo)\n      }\n    }\n  }\n\n  // ÂçïËæπÊèêÁ§∫ÊñáÊ°à\n  const showOnlySideTips = useMemo(() => {\n    // if (category == 'haedal') {\n    //   return undefined\n    // }\n    if (calculateResult && (calculateResult.swap_result || calculateResult.swap) && assetAction !== 'both' && tokenA && tokenB) {\n      let amountIn = category == 'cetus' ? calculateResult.swap_result.swap_in_amount : calculateResult.swap.swap_amount_in\n      let amountOut = category == 'cetus' ? calculateResult.swap_result.swap_out_amount : calculateResult.swap.swap_amount_out\n\n      const fixedAmountA = category == 'cetus' ? fixAmountA : isReverse ? !fixAmountA : fixAmountA\n      const amount = fixedAmountA ? amountInputA : amountInputB\n\n      const fixToken = fixedAmountA ? displayTokenA : displayTokenB\n\n      const targetToken = fixedAmountA ? displayTokenB : displayTokenA\n\n      const swapInAmount = fromDecimalsAmountFix(amountIn, targetToken.decimals)\n\n      const swapOutAmount = fromDecimalsAmountFix(\n        d(amountOut)\n          .mul(1 - Number(vaultsSlippage))\n          .toString(),\n        fixToken.decimals\n      )\n\n      return `To withdraw ${formatNumber(amount, fixToken?.decimals)} ${fixToken?.symbol}, ${formatNumber(swapInAmount, targetToken?.decimals)} ${targetToken?.symbol} in the pool will be traded for ${formatNumber(swapOutAmount, fixToken?.decimals)} ${fixToken?.symbol}`\n    }\n    return undefined\n  }, [assetAction, calculateResult, amountInputA, amountInputB, fixAmountA, category])\n\n  useEffect(() => {\n    reCalculateResult()\n  }, [availableAmountA, availableAmountB])\n\n  const { currentAccount } = useAccountStore()\n\n  useEffect(() => {\n    resetInputAmount()\n    setTimeout(() => {\n      if (currentVaultPosition?.amountA && currentVaultPosition?.amountB) {\n        calculateAvailableAmount()\n      }\n    }, 200)\n  }, [isCheckedZAP, assetAction, currentAccount?.address])\n\n  useEffect(() => {\n    calculateAvailableAmount()\n  }, [currentVaultPosition?.amountA, currentVaultPosition?.amountB])\n\n  return {\n    calculateAvailableLoading,\n    availableAmountA,\n    availableAmountB,\n    amountInputA,\n    amountInputB,\n    amountValueA,\n    amountValueB,\n    zapNumGtError,\n    zapNumLtError,\n    handleAmountInputChange,\n    handlePercentInputChange,\n    debouncedPercentInputChange,\n    removePercent,\n    showOnlySideTips,\n    preCalculateLoading,\n    doRemoveAction,\n    inputTotalValue,\n    calculateResult,\n    setIsSlider,\n    resetInputAmount,\n    calculateAvailableAmount,\n    submitLoading,\n    isSlider,\n    fixAmountA,\n    reCalculateResult\n  }\n}\n","import { PositionSlider } from '@/components/position/clmm/details/RemoveBlock'\nimport useVaultsButtonStatus from '@/hooks/vault-v2/useVaultsButtonStatus'\nimport { useCalculateSlippageAmount } from '@/hooks/vault-v2/useVaultsHelper'\nimport useVaultsRemove from '@/hooks/vault-v2/useVaultsRemove'\nimport useVaultsFarmingStore from '@/store/vaults-farming'\nimport useVaultsActionStore from '@/store/vaults-v2/useVaultsAction'\nimport useVaultsPositionStore from '@/store/vaults-v2/useVaultsPosition'\nimport { Block, TradeInputGroup } from '@cetus/design'\nimport { useAccountStore } from '@cetus/stores'\nimport { Token } from '@cetus/types'\nimport { HTextLabelBox } from '@cetus/ui-kit'\nimport { formatCurrency, formatNumber, fromDecimalsAmountFix } from '@cetus/utils'\nimport { Box, Button, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { SwitchAssetTab } from '../common/SwitchAssetTab'\ntype VaultsRemoveProps = {\n  category: string\n  isReverse: boolean\n  vaultId: string\n  currentActionTab: string\n  lpTokenInfo: Token\n  isModal?: boolean\n  isAutoRefresh?: boolean\n}\nexport default function VaultsRemove(props: VaultsRemoveProps) {\n  const { currentAccount, onWalletModal } = useAccountStore()\n  const { fromToken, toToken, calculateResult } = useVaultsActionStore()\n  const { currentVaultPosition } = useVaultsPositionStore()\n  const { assetAction, setAssetAction, isCheckedZAP, setIsCheckedZAP } = useVaultsActionStore()\n  const { category, isReverse, vaultId, currentActionTab, lpTokenInfo, isModal, isAutoRefresh } = props\n  const { vaultsFarmingStaked } = useVaultsFarmingStore()\n  const currentVaultsFarmingStaked: any = useMemo(() => {\n    return vaultsFarmingStaked[vaultId]\n  }, [vaultsFarmingStaked, vaultId])\n  const currentPosition = useMemo(() => {\n    return currentVaultPosition\n  }, [currentVaultPosition])\n  const {\n    amountInputA,\n    amountInputB,\n    amountValueA,\n    amountValueB,\n    calculateAvailableLoading,\n    availableAmountA,\n    availableAmountB,\n    zapNumGtError,\n    zapNumLtError,\n    handleAmountInputChange,\n    removePercent,\n    handlePercentInputChange,\n    doRemoveAction,\n    showOnlySideTips,\n    preCalculateLoading,\n    inputTotalValue,\n    setIsSlider,\n    resetInputAmount,\n    isSlider,\n    fixAmountA,\n    reCalculateResult\n  } = useVaultsRemove(vaultId, category, fromToken, toToken, isReverse, assetAction, isCheckedZAP, currentPosition, currentVaultsFarmingStaked)\n\n  const { btnText, btnDisabled } = useVaultsButtonStatus(\n    amountInputA,\n    amountInputB,\n    availableAmountA || '',\n    availableAmountB || '',\n    fromToken,\n    toToken,\n    assetAction,\n    false,\n    zapNumGtError,\n    zapNumLtError,\n    category,\n    isCheckedZAP\n  )\n\n  // ÊúÄÂ∞èÂèØÊé•Êî∂\n  const { amountLimit } = useCalculateSlippageAmount(0, calculateResult?.burn_ft_amount, false)\n\n  const LPBurnAmount = useMemo(() => {\n    return formatNumber(fromDecimalsAmountFix(amountLimit || '0', lpTokenInfo?.decimals), lpTokenInfo?.decimals)\n  }, [amountLimit, lpTokenInfo])\n\n  useEffect(() => {\n    resetInputAmount()\n  }, [isCheckedZAP, assetAction])\n\n  const showTokenALoading = useMemo(() => {\n    if (preCalculateLoading) {\n      if (isSlider) {\n        return true\n      }\n      if (isReverse) {\n        return fixAmountA\n      }\n      return !fixAmountA\n    }\n    return false\n  }, [preCalculateLoading, isSlider])\n\n  const showTokenBLoading = useMemo(() => {\n    if (preCalculateLoading) {\n      if (isSlider) {\n        return true\n      }\n      if (isReverse) {\n        return !fixAmountA\n      }\n      return fixAmountA\n    }\n    return false\n  }, [preCalculateLoading, isSlider])\n\n  const isMounted = useRef(false)\n  useEffect(() => {\n    isMounted.current = true\n  }, [])\n\n  // useEffect(() => {\n  //   if (isMounted.current) {\n  //     reCalculateResult()\n  //   }\n  // }, [isAutoRefresh])\n\n  return (\n    <VStack gap={isModal ? '8px' : '12px'} w=\"100%\" align=\"flex-start\">\n      {/* <Block bg=\"bg_six\" borderColor=\"border_secondary\" borderRadius=\"12px\" p={{ base: '16px 8px 8px', lg: '16px' }} w=\"100%\"> */}\n      <Block bg={isModal ? 'transparent' : 'none'} border=\"none\" borderRadius=\"12px\" p={{ base: '16px 8px 8px', lg: isModal ? '0' : '0px' }} w=\"100%\">\n        <SwitchAssetTab\n          label=\"Remove Amounts\"\n          displayTokenA={fromToken}\n          displayTokenB={toToken}\n          onSelectAssetTab={assetAction => {\n            setAssetAction(assetAction)\n          }}\n          isCheckedZAP={isCheckedZAP}\n          setIsCheckedZAP={setIsCheckedZAP}\n          assetAction={assetAction}\n          setAssetAction={setAssetAction}\n          currentActionTab={currentActionTab}\n          category={category}\n        />\n        <Box w=\"100%\" position=\"relative\" mt={isModal ? '8px' : '12px'}>\n          <TradeInputGroup\n            borderRadius=\"12px\"\n            from={{\n              wrapStyle: {\n                borderRadius: '12px',\n                h: 'unset',\n                p: { base: '20px 8px', lg: '20px 16px' }\n              },\n              calculateAvailableLoading,\n              hideSelf: assetAction !== 'both' && assetAction !== fromToken?.coin_type,\n              balance: availableAmountA || '',\n              value: amountInputA,\n              amountValue: amountValueA && !showTokenALoading ? amountValueA : '',\n              loading: showTokenALoading,\n              onChange: (value: string, isClickMax?: boolean, isClickHalf?: boolean) => {\n                if (currentAccount?.address && !calculateAvailableLoading) {\n                  setIsSlider(false)\n                  handleAmountInputChange(value, true, isClickMax, isClickHalf)\n                }\n              },\n              needRemainBalance: false,\n              selectable: false,\n              placeholder: '0.0',\n              token: fromToken,\n              balanceLabel: 'Available'\n            }}\n            to={{\n              wrapStyle: {\n                borderRadius: '12px',\n                h: 'unset',\n                p: { base: '20px 8px', lg: '20px 16px' }\n              },\n              balanceLabel: 'Available',\n              calculateAvailableLoading,\n              needRemainBalance: false,\n              hideSelf: assetAction !== 'both' && assetAction !== toToken?.coin_type,\n              balance: availableAmountB || '',\n              value: amountInputB,\n              amountValue: amountValueB && !showTokenBLoading ? amountValueB : '',\n              loading: showTokenBLoading,\n              onChange: (value: string, isClickMax?: boolean, isClickHalf?: boolean) => {\n                if (currentAccount?.address && !calculateAvailableLoading) {\n                  setIsSlider(false)\n                  handleAmountInputChange(value, false, isClickMax, isClickHalf)\n                }\n              },\n              selectable: false,\n              placeholder: '0.0',\n              token: toToken\n            }}\n            iconParams={{\n              xlinkHref: '#icon-icon_add',\n              svgFill: 'text_caption',\n              iconCursor: 'default'\n            }}\n            iconHover={false}\n          />\n        </Box>\n      </Block>\n      {!isModal && (\n        <Block bg=\"none\" border=\"none\" borderRadius=\"12px\" p={{ base: '16px 8px', lg: '0px' }}>\n          {/* <Text color=\"primary_gray\" mb=\"10px\">\n            Amount\n          </Text> */}\n          <PositionSlider\n            textFontSize=\"20px\"\n            sliderTrackHeight=\"8px\"\n            sliderBg=\"bg_secondary\"\n            percentage={removePercent}\n            onChange={(value: string | number) => {\n              if (!calculateAvailableLoading) {\n                console.log('üöÄüöÄüöÄ ~ VaultsRemove.tsx:213 ~ VaultsRemove ~ assetAction:', assetAction)\n                console.log('üöÄüöÄüöÄ ~ VaultsRemove.tsx:214 ~ VaultsRemove ~ fromToken.address:', fromToken.address)\n                handlePercentInputChange(Number(value.toString().replace('%', '')), assetAction == 'both' ? true : assetAction == fromToken.coin_type)\n              }\n            }}\n          />\n        </Block>\n      )}\n\n      <VStack w=\"100%\" gap=\"12px\">\n        <Button\n          m=\"-1px\"\n          isLoading={preCalculateLoading}\n          w=\"100%\"\n          borderRadius=\"12px\"\n          h=\"52px\"\n          fontSize=\"18px\"\n          fontWeight=\"500\"\n          isDisabled={btnDisabled || preCalculateLoading}\n          onClick={() => {\n            if (currentAccount) {\n              doRemoveAction()\n            } else {\n              onWalletModal(true)\n            }\n          }}\n        >\n          {btnText || (isCheckedZAP ? 'Zap Out' : 'Withdraw')}\n        </Button>\n\n        {zapNumGtError && (\n          <VStack w=\"100%\" alignItems=\"start\">\n            <Text\n              color=\"primary_yellow\"\n              fontSize=\"12px\"\n              textAlign=\"left\"\n              w=\"100%\"\n              bg=\"primary_yellow_opacity.10\"\n              p=\"12px\"\n              borderRadius=\"8px\"\n              lineHeight=\"20px\"\n            >\n              Single-asset withdraw can't be higher than $10,000 at a time.\n            </Text>\n          </VStack>\n        )}\n\n        {/* Â±ïÁ§∫ËÆ°ÁÆóÁªìÊûú */}\n        {calculateResult && !zapNumGtError && (amountInputA || amountInputB) && (\n          <VStack w=\"100%\" gap=\"0px\" mt={assetAction !== 'both' && showOnlySideTips ? '0px' : '6px'}>\n            {assetAction !== 'both' && showOnlySideTips && (\n              <Text color=\"text_paragraph\" width=\"100%\" fontSize=\"12px\" lineHeight=\"1.8\" pb=\"20px\">\n                {showOnlySideTips}\n              </Text>\n            )}\n            <VStack w=\"100%\" gap=\"20px\">\n              <HTextLabelBox\n                label=\"Total Withdraw\"\n                labelStyle={{\n                  fontSize: '14px'\n                }}\n                value={formatCurrency(inputTotalValue, 2)}\n                valueStyle={{\n                  fontSize: '14px'\n                }}\n                skeletonStyle={{\n                  valueH: '14px'\n                }}\n                isLoading={preCalculateLoading}\n              />\n              <HTextLabelBox\n                label=\"LP Burn Amount\"\n                value={`${LPBurnAmount} ${`${fromToken?.symbol} - ${toToken?.symbol}`}`}\n                labelStyle={{\n                  fontSize: '14px'\n                }}\n                valueStyle={{\n                  fontSize: '14px'\n                }}\n                skeletonStyle={{\n                  valueH: '14px'\n                }}\n                isLoading={preCalculateLoading}\n              />\n            </VStack>\n          </VStack>\n        )}\n      </VStack>\n    </VStack>\n  )\n}\n","import Slippage from '@/components/common/Slippage'\nimport useCurrentVaultsFarm from '@/hooks/vaults-farming/useCurrentVaultsFarm'\nimport useVaultsFarmingStore from '@/store/vaults-farming'\nimport useVaultsActionStore from '@/store/vaults-v2/useVaultsAction'\nimport useVaultsListV2Store from '@/store/vaults-v2/useVaultsList'\nimport useVaultsPoolStore from '@/store/vaults-v2/useVaultsPool'\nimport { SelectTab } from '@cetus/design'\nimport { useAccountStore } from '@cetus/stores'\nimport { RefreshButton } from '@cetus/ui-kit'\nimport { HStack, Switch, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useMemo, useState } from 'react'\nimport FarmingIncentives from '../farming/FarmingIncentives'\nimport VaultsAdd from './VaultsAdd'\nimport VaultsRemove from './VaultsRemove'\n\nconst tabList = [\n  {\n    label: 'Deposit',\n    value: 'Deposit'\n  },\n  {\n    label: 'Withdraw',\n    value: 'Withdraw'\n  }\n]\n// Vault Êìç‰ΩúÈÉ®ÂàÜ ÂºπÁ™óËØ¶ÊÉÖÂÖ±Áî® isModalÂèÇÊï∞Âå∫ÂàÜ\nexport default function VaultsAction({\n  vaultId,\n  autoRefresh,\n  isRefresh,\n  isModal,\n  setIsOpenFarmingModal,\n  setIsOpenPre,\n  setFarmingModalAction\n}: {\n  vaultId: string\n  autoRefresh: () => void\n  isModal: boolean\n  isRefresh?: boolean\n  setIsOpenFarmingModal: (status: boolean) => void\n  setIsOpenPre: (status: boolean) => void\n  setFarmingModalAction: (value: string) => void\n}) {\n  const { setAmountInputA, setAmountInputB, currTab, setCurrTab, setIsCheckedZAP, setAssetAction } = useVaultsActionStore()\n  const { vaultListObj, lpTokenInfoObj } = useVaultsListV2Store()\n  const { vaultsPoolObj } = useVaultsPoolStore()\n  const currentVaultPoolApiInfo = useMemo(() => {\n    return vaultListObj[vaultId as string]\n  }, [vaultListObj, vaultId])\n  const currentVaultPoolContractInfo = useMemo(() => {\n    return vaultsPoolObj[vaultId as string]\n  }, [vaultsPoolObj])\n\n  const lpTokenInfo = useMemo(() => {\n    return lpTokenInfoObj[currentVaultPoolApiInfo?.lpTokenType]\n  }, [lpTokenInfoObj, currentVaultPoolApiInfo?.lpTokenType])\n\n  const [isModalRefresh, setIsModalRefresh] = useState(false)\n\n  const handleRefresh = () => {\n    autoRefresh()\n    setIsModalRefresh(prev => !prev)\n  }\n\n  const { autoClaimStakeFarming, setAutoClaimStakeFarming } = useVaultsFarmingStore()\n\n  const { currentVaultsFarm, isVaultsFarming } = useCurrentVaultsFarm(currentVaultPoolApiInfo?.vaultId)\n\n  const { vaultsFarmingStaked, autoClaimFarmingReward, setAutoCliamFarmingReward } = useVaultsFarmingStore()\n\n  const { currentAccount } = useAccountStore()\n\n  const currentVaultsFarmingStaked: any = useMemo(() => {\n    return vaultsFarmingStaked[currentVaultPoolApiInfo?.vaultId]\n  }, [vaultsFarmingStaked, currentVaultPoolApiInfo?.vaultId])\n\n  useEffect(() => {\n    return () => {\n      setCurrTab('Deposit')\n      setIsCheckedZAP(false)\n      setAssetAction('both')\n    }\n  }, [])\n\n  return (\n    <VStack w={{ base: '100%', lg: '100%' }} justifyContent=\"start\" gap={isModal ? '8px' : '12px'}>\n      {/* ÂàáÊç¢Tab */}\n      {/* <Block p=\"0\" borderRadius=\"12px\" bg=\"bg_six\" borderColor=\"border_secondary\"> */}\n      <HStack w=\"100%\">\n        <SelectTab\n          type=\"borderTab\"\n          wrapStyle={{\n            w: '100%',\n            h: isModal ? '54px' : '60px',\n            border: 'none',\n            bg: 'transparent'\n          }}\n          itemStyle={{\n            fontSize: isModal ? '14px' : '16px',\n            mr: '28px'\n          }}\n          tabList={tabList}\n          currentTab={currTab}\n          handleChangeTab={(item: any) => {\n            setAmountInputA('')\n            setAmountInputB('')\n            setCurrTab(item?.value)\n            setAssetAction('both')\n            setIsCheckedZAP(false)\n            if (item.value == 'Withdraw') {\n              setAutoCliamFarmingReward(true)\n            } else {\n              setAutoCliamFarmingReward(true)\n            }\n          }}\n        />\n        <HStack>\n          {(currTab !== 'Deposit' || currentVaultPoolApiInfo?.category === 'cetus') && <Slippage slippageType=\"vaults\" compact={true} />}\n          {isModal && (\n            <RefreshButton\n              handleRefresh={() => handleRefresh()}\n              isAutoRefresh={true}\n              refreshInterval={20}\n              innerStyle={{ bg: 'bg_secondary' }}\n              w=\"28px\"\n              h=\"28px\"\n              borderRadius=\"8px\"\n              bg=\"bg_secondary\"\n            />\n          )}\n        </HStack>\n      </HStack>\n\n      {currTab === 'Deposit' && (\n        <VaultsAdd\n          category={currentVaultPoolApiInfo?.category}\n          isReverse={currentVaultPoolApiInfo?.isReverse}\n          vaultId={currentVaultPoolApiInfo?.vaultId}\n          currentActionTab=\"Deposit\"\n          totalSupply={currentVaultPoolContractInfo?.totalSupply}\n          lpTokenInfo={lpTokenInfo}\n          feeTier={currentVaultPoolApiInfo?.feeDisplay}\n          isModal={isModal}\n          binStep={currentVaultPoolApiInfo?.binStep}\n          isAutoRefresh={isModal ? isModalRefresh : isRefresh}\n          currentVaultsFarm={currentVaultsFarm}\n          vaultsFarmingStaked={currentVaultsFarmingStaked}\n        />\n      )}\n      {currTab === 'Withdraw' && currentVaultPoolApiInfo && (\n        <VaultsRemove\n          category={currentVaultPoolApiInfo?.category}\n          isReverse={currentVaultPoolApiInfo?.isReverse}\n          vaultId={currentVaultPoolApiInfo?.vaultId}\n          currentActionTab=\"Withdraw\"\n          lpTokenInfo={lpTokenInfo}\n          isModal={isModal}\n        />\n      )}\n      {currTab === 'Deposit' && isVaultsFarming && (\n        <HStack p=\"8px 12px\" bg=\"primary_opacity.10\" borderRadius=\"8px\">\n          <Text w=\"100%\" fontSize=\"12px\" lineHeight=\"16px\" color=\"primary\">\n            Automatically stake your LP token into the 3rd party farm to enjoy higher yield.\n          </Text>\n          <Switch isChecked={autoClaimStakeFarming} onChange={() => setAutoClaimStakeFarming(!autoClaimStakeFarming)} />\n        </HStack>\n      )}\n\n      {currTab === 'Withdraw' && isVaultsFarming && currentVaultsFarmingStaked?.stakedBalance > 0 && (\n        <HStack w=\"100%\" p=\"8px 12px\" bg=\"primary_opacity.10\" borderRadius=\"8px\" fontSize=\"12px\" color=\"primary\" justifyContent=\"space-between\">\n          <Text fontSize=\"12px\"> Automatically claim pending farming rewards.</Text>\n          <Switch isChecked={autoClaimFarmingReward} onChange={() => setAutoCliamFarmingReward(!autoClaimFarmingReward)} />\n        </HStack>\n      )}\n\n      {isModal && isVaultsFarming && currentAccount?.address && (\n        <FarmingIncentives\n          apiVaultInfo={currentVaultPoolApiInfo}\n          setIsOpenFarmingModal={setIsOpenFarmingModal}\n          setIsOpenPre={setIsOpenPre}\n          setFarmingModalAction={setFarmingModalAction}\n        />\n      )}\n    </VStack>\n  )\n}\n"],"names":["store","set","get","isProfileOpenVaultModal","profilePoolInfo","value","profileActionTab","fromToken","toToken","calculateResult","status","useVaultsActionStore","create","useVaultFarmsButtonStatus","availableBalance","stakeAmount","currentFarm","isAdd","btnInfo","d","useCurrentVaultDetail","setCurrentVaultPosition","vaultsPositionObj","setCurrentVaultPositionLoading","setVaultsPositionObj","useVaultsPositionStore","vaultClmmPoolContractInfoObj","setLstVaultContractInfoObj","setHaedalVaultContractInfoObj","vaultDlmmPoolContractInfoObj","useVaultsPoolContractStore","setVaultsFarmingStakeLoading","useVaultsFarmingStore","volatileVaultsSdk","usePeripherySDKStore","vaultsSdk","useSdk","vaultsList","useVaultsListV2Store","getVaultPoolList","useGetVaultPoolList","getVaultPosition","useGetVaultsPosition","getVaultsContractInfo","useGetVaultsContract","getPythLastPrice","useGetPythLastPrice","fetchTokenPrices","useTokenPrice","setFromToken","setToToken","getVaultsLpTokenList","useVaultList","currentAccount","useAccountStore","currentAcc","useRef","useEffect","vaultId","useParams","pathname","useLocation","vaultIdRef","getCurrentVaultDetail","isRefresh","isAvailableObject","currentVaultPositionData","displayTokenA","displayTokenB","getCurrentVaultByVaultId","getCurrentVaultContractInfo","list","lpTokenInfoObj","vault","item","fixCoinType","lstVaultContractInfoObj","haedalVaultContractInfoObj","allClmmPoolContractInfoObj","dlmmVaultContractInfoObj","allDlmmPoolContractInfoObj","clmmContractInfo","dlmmContractInfo","vaultContractInfo","category","currentVaultPosition","useVaultFarmingPage","vaultsId","currentVaultsFarming","vaultsFarmingStaked","setStakeAmount","useState","haedalFarmSdk","signAndExecuteTransaction","transactionRejected","useTransaction","mevProtect","maxCapForGas","transactionMode","customGasPrice","useGlobalStore","isLoading","setIsLoading","updateCurrentVaultById","getVaultsFarmingStaked","useGetVaultFarmingStaked","toastInfo","balanceChanges","description","formatDescription","_a","stakeParams","tx","Transaction","MsafeTransactionSubType","error","unStakeParams","claimParams","i","_b","_c","FarmingStake","currentVaultsFarmingStaked","useMemo","handleChangeStakeValue","farmStakeAction","isDisabled","btnText","jsxs","Fragment","jsx","TradeInput","Button","UnstakeAndWithdraw","percentage","setPercentage","currentActionTab","setCurrentActionTab","tabList","HStack","Text","Slippage","RefreshButton","VStack","Block","PercentageTab","Icon","SelectTab","TradeInputGroup","HTextLabelBox","UnstakeLp","props","farmUnStakeAction","FarmingUnstake","FarmingModal","isOpen","onClose","setIsOpen","setIsOpenPre","farmingModalAction","isDetail","currentVaultsFarm","useCurrentVaultsFarm","Modal","ModalOverlay","ModalContent","ModalHeader","BackButton","ModalCloseButton","ModalBody","useCalculateVaultFarmingRewardUSD","vaultsFarmingRewards","getTokenAmountValue","setVaultsFarmingRewardsLoading","vaultsFarmingRewardsLoading","vaultFarmingRewardAmountUSD","setVaultFarmingRewardAmountUSD","vaultFarmingRewardAmount","setVaultFarmingRewardAmount","totalUSD","totalAmount","amountUSD","err","useGetStakedVaultFarmingTvl","currentVaultContractInfo","currentVaultClmmContractInfo","apiVaultInfo","stakeVaultFarmingTvl","setStakeVaultFarmingTvl","stakeVaultFarmingTvlLoading","setStakeVaultFarmingTvlLoading","coin_type_a","coin_type_b","tokenA","tokenB","positionInfo","buildVaultsBalance","stakeTokenA","stakeTokenB","stakeTokenAUSD","stakeTokenBUSD","total","useVaultFarmingOverview","currentVaults","useCurrentVaults","vaultsFarmingStakeLoading","clearVaultsFarmingInfo","currentVaultsFarmingAvailableRewards","currentVaultPositionLoading","vaultsFarmObj","vaultFarmingAprDisplay","farmingTvlDisplay","vaultFarmingApr","farmingTvl","vaultFarmingLoading","useCalculateVaultFarmingApr","currentVaultPositionInfo","holdingAmountDisplay","holdCoinAValue","holdCoinBValue","holdingVaultAmountDisplay","useVaultHoadings","farmClaimAction","farmClaimLoading","stakeButtonDisabled","claimButtonDisabled","result","reward","unStakeButtonDisabled","RewardItem","rewardInfo","Image","FarmingIncentives","setIsOpenFarmingModal","setFarmingModalAction","TooltipIcon","symbolDataDisplayProcessing","SingleCoinImage","VaultsAddResult","poolName","amountLimit","lpRate","inputTotalValue","preCalculateLoading","labelColor","lpDecimals","calculateLpLoading","TotalAmount","convertScientificToDecimal","formatNumber","fromDecimalsAmount","VaultsAddConfirmModel","data","onSubmitClick","feeTier","displayAmountA","displayAmountB","totalAmountValue","sharePool","lpAmountLimit","binStep","Heading","CoinPairImage","PoolTag","TradeConfirmAmountInfo","Box","useVaultAvaiableCapacity","currentVaultPool","getTokenAmountValueByPyth","getTokenPriceByPyth","useGetPythTokenPrice","hardCap","quoteCoinType","displayCoinTypeA","displayCoinTypeB","quoteCoin","baseCoin","baseCoinType","hardCapUSD","displayHardCapUSD","holdingAmountA","holdingAmountB","vaultTvl","depositRatio","displayDepositRatio","quoteCoinPrice","baseCoinPrice","availableCapacityUSD","availableCapacityWithQuoteCoin","availableCapacityWithBaseCoin","useCalculateChangeLpRate","changeLp","totalLp","formatNumberWithThreshold","useCalculateSlippageAmount","slippage","amount","isUp","useGetSuiStakeProtocol","coinType","useVaultsAdd","isReverse","assetAction","isCheckedZAP","currentVaultsFarmsReward","balanceInfoA","useGetTokenBalance","balanceInfoB","amountInputA","amountInputB","setAmountInputA","setAmountInputB","setCalculateResult","vaultsSlippage","fetchAccountBalance","useAccountBalance","isSlider","setIsSlider","pythPriceMap","useVaultsPythPrice","autoClaimStakeFarming","percentageRef","amountValueA","amountValueB","uuid","setUuid","uuidRef","isFixedDisplayTokenA","setIsFixedDisplayTokenA","isFixedDisplayTokenARef","fixAmountA","setFixAmountA","setPreCalculateLoading","setCalculateLpLoading","amountInputARef","amountInputBRef","mode","wrapRes","res","amountA","amountB","preCalculate","otherAmount","fixToken","fixOtherToken","inputAmount","toDecimalsAmount","otherInputAmount","fixedCoinA","haedalPreCalculate","lstPreCalculate","preCalcError","setPreCalcError","isDlmm","v4","params","receive_lp_amount","calculateDepositRatioWithAvailableCapacity","InputType","debouncedPreCalculate","useDebounceFunction","handleAmountInputChange","resetInputAmount","amountVaule","otherAmountValue","totalValue","isDecimalWithZeros","zapNumGtError","zapNumLtError","stakeProtocolName","showOnlySideTips","targetToken","swapInAmount","fromDecimalsAmountFix","swapOutAmount","CoinAssist","amountValue","transactionConfirmation","reCalculateResult","debouncedPreCalculateDepositValue","percent","availableCapacityWithCoin","coin","coinPrice","handlePercentInputChange","ratio","ratioValue","doAddAction","depositParams","info","event","lpCoin","isQuoteCoin","useVaultsButtonStatus","balanceA","balanceB","submitBtnInfo","isSUI","isCheckedWalletObj","isCheckedDontRemindWalletObj","useVaultsRiskStore","persist","state","isCheckedAcceptWalletObj","ZapTooltipText","ZapSwitch","zapText","tooltipType","zapSwitchChange","isApp","useWindowWidth","Popover","PopoverTrigger","Switch","PopoverContent","PopoverBody","hoverCoinTips","hoverSuiTips","symbol","ActionTabEnum","SwitchAssetTab","onSelectAssetTab","label","setIsCheckedZAP","setAssetAction","isUnstableVault","generateTabList","baseTabs","currentTab","RiskBulletText","children","RiskModal","continueFunc","isCheckedAccept","setIsCheckedAccept","isCheckedDontRemind","setIsCheckedDontRemind","setIsCheckedAcceptWalletObj","setIsCheckedDontRemindWalletObj","riskContinue","newIsCheckedAcceptWalletObj","newIsCheckedDontRemindWalletObj","CheckBox","AvailableCapacity","onChange","loading","labelStyles","sliderMarkList","Skeleton","CetusTooltip","Slider","index","SliderMark","formatPercentage","SliderTrack","SliderFilledTrack","SliderThumb","VaultsAdd","onWalletModal","totalSupply","lpTokenInfo","isModal","isAutoRefresh","vaultsPoolObj","useVaultsPoolStore","avaiableCapacityInfo","isOpenAddModel","setIsOpenAddModel","btnDisabled","getSecondModelData","useVaultsPythPriceStore","isMounted","isOpenRiskModal","setIsOpenRiskModal","isShowRiskModal","ErrorTips","useVaultsRemove","autoClaimFarmingReward","findBestRouters","useFindBestRouting","providers","useWebConfigStore","fixAmountARef","availableAmountA","setAvailableAmountA","availableAmountB","setAvailableAmountB","calculateAvailableLoading","setCalculateAvailableLoading","calculateAvailableAmount","isOnlyReceiveCoinA","fromAmount","targetAmount","haedalCalculateAvailableAmount","lstCalculateAvailableAmount","removePercent","setRemovePercent","displayRatio","is_ft_input","availableRemoveAmount","removeLpAmount","formatNumberWithDown","debouncedPercentInputChange","isClickMax","isClickHalf","isDisplayTokenA","submitLoading","setSubmitLoading","doRemoveAction","param","fix_amount_a","input_amount","getBalanceChanges","descriptionList","amountIn","amountOut","fixedAmountA","VaultsRemove","currentPosition","LPBurnAmount","showTokenALoading","showTokenBLoading","PositionSlider","formatCurrency","VaultsAction","autoRefresh","currTab","setCurrTab","vaultListObj","currentVaultPoolApiInfo","currentVaultPoolContractInfo","isModalRefresh","setIsModalRefresh","handleRefresh","prev","setAutoClaimStakeFarming","isVaultsFarming","setAutoCliamFarmingReward"],"mappings":"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"}