{"version":3,"file":"RemoveBlock-6_DpKj6X.js","sources":["../../src/components/zap/ZapTabs.tsx","../../src/hooks/zap/useZap.ts","../../src/components/zap/ZapDeposite.tsx","../../src/hooks/zap/useZapSubmit.ts","../../src/components/zap/ZapSubmiteInfo.tsx","../../src/hooks/position/useCurrentApiPool.ts","../../src/hooks/clmm/useGetCurrentPrice.ts","../../src/hooks/pool/useGetContractPoolInfo.ts","../../src/hooks/position/usePosRemovePage.ts","../../src/components/position/clmm/details/FarmsBlock.tsx","../../src/components/zap/ZapSwitch.tsx","../../src/components/position/clmm/details/TradeTitle.tsx","../../src/components/position/clmm/details/RemoveBlock.tsx"],"sourcesContent":["import { SelectTab } from '@cetus/design'\nimport { Box } from '@chakra-ui/react'\nimport { useMemo } from 'react'\n\nexport default function ZapTabs({ tokens, current, onSelect }: { tokens: any; current: any; onSelect: (value: string) => void }) {\n  const zapTabList = useMemo(() => {\n    return tokens?.map((item: any) => {\n      return {\n        label: item?.symbol,\n        value: item?.coin_type\n      }\n    })\n  }, [tokens])\n\n  const currentTab = useMemo(() => {\n    return zapTabList?.filter((item: any) => item?.value === current?.coin_type)?.[0]\n  }, [zapTabList, current?.coin_type])\n\n  const handleChangeTab = (item: any) => {\n    const currentToken = tokens?.filter((token: any) => token?.coin_type === item?.value)?.[0]\n    onSelect(currentToken)\n  }\n\n  return (\n    <Box w=\"100%\" mb=\"8px\">\n      <SelectTab\n        wrapStyle={{\n          w: '100%',\n          h: '48px',\n          borderRadius: '12px',\n          p: '3px'\n        }}\n        itemStyle={{\n          w: '50%',\n          fontSize: '14px',\n          borderRadius: '8px',\n          fontWeight: '500'\n        }}\n        type=\"outlineTab\"\n        currentTab={currentTab?.label}\n        tabList={zapTabList}\n        handleChangeTab={handleChangeTab}\n      />\n    </Box>\n  )\n}\n","import useZapStore from '@/store/zap/index'\nimport { useGetTokenBalance } from '@cetus/hooks/src/useTokenBalance'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\n\nimport useGlobalStore from '@/store/common/global'\n// import { useDebounceValue } from '@cetus/hooks'\nimport { Token } from '@cetus/types'\n// import { d, fixDown } from '@cetus/utils'\nimport { TickMath } from '@cetusprotocol/common-sdk'\nimport BN from 'bn.js'\nimport { useEffect, useState } from 'react'\n\nexport default function useZap(\n  action: 'Deposit' | 'Withdraw',\n  apiPoolInfo: any,\n  currentSqrtPrice: string,\n  lowerTick?: any,\n  upperTick?: any,\n  onlyAmountA?: string,\n  onlyAmountB?: string,\n  liquidity?: string,\n  slideValue?: string,\n  currentPosLiquidityData?: any\n) {\n  const {\n    currentTokens,\n    setCurrentTokens,\n    zapAmount,\n    setZapAmount,\n    currentZapToken,\n    setCurrentZapToken,\n    zapAmountRate,\n    setZapAmountRate,\n    setZapTokenBalance,\n    zapTokenBalance,\n    setPreDepositeData,\n    setIsPreLoading,\n    setZapApiPool,\n    lower,\n    upper,\n    setLower,\n    setUpper,\n    setZapCurrPriceData,\n    resetZapData,\n    setLiquidity,\n    setZapSlideValue,\n    setPosOriginAmounts\n  } = useZapStore()\n  const { zapSlippage } = useGlobalStore()\n  const { balanceInfo } = useGetTokenBalance(currentZapToken)\n  const { getTokenAmountValue } = useTokenPrice()\n  const [uuid, setUuid] = useState<string>('')\n\n  useEffect(() => {\n    setLower(lowerTick)\n  }, [lowerTick])\n\n  useEffect(() => {\n    setUpper(upperTick)\n  }, [upperTick])\n\n  useEffect(() => {\n    setLiquidity(liquidity || '')\n  }, [liquidity])\n\n  useEffect(() => {\n    setZapSlideValue(slideValue || 0)\n  }, [slideValue])\n\n  useEffect(() => {\n    setPosOriginAmounts({\n      coinAmountA: currentPosLiquidityData?.coinAmountA,\n      coinAmountB: currentPosLiquidityData?.coinAmountB\n    })\n  }, [currentPosLiquidityData])\n\n  useEffect(() => {\n    if (apiPoolInfo?.poolAddress && currentSqrtPrice) {\n      const decimalsA = apiPoolInfo?.tokenA?.decimals\n      const decimalsB = apiPoolInfo?.tokenB?.decimals\n      const currentPrice = TickMath.sqrtPriceX64ToPrice(new BN(currentSqrtPrice), decimalsA, decimalsB).toString()\n      setZapCurrPriceData({\n        currentPrice,\n        currentSqrtPrice\n      })\n    }\n  }, [currentSqrtPrice, apiPoolInfo?.poolAddress])\n\n  useEffect(() => {\n    let arr: Token[] = []\n    if (apiPoolInfo?.poolAddress) {\n      arr = [apiPoolInfo?.displayTokenA, apiPoolInfo?.displayTokenB]\n      setCurrentZapToken(apiPoolInfo?.displayTokenA)\n    }\n    setCurrentTokens(arr)\n    setZapApiPool(apiPoolInfo)\n  }, [apiPoolInfo?.poolAddress])\n\n  const handleChangeAmount = (value: string) => {\n    setZapAmount(value)\n  }\n\n  const handleChangeZapToken = (value: any) => {\n    setCurrentZapToken(value)\n    setZapAmount('')\n  }\n\n  useEffect(() => {\n    let rate\n    if (zapAmount && currentZapToken?.coin_type) {\n      rate = getTokenAmountValue(currentZapToken?.coin_type, zapAmount)\n    }\n    setZapAmountRate(rate || '')\n  }, [zapAmount, currentZapToken?.coin_type])\n\n  useEffect(() => {\n    if (action === 'Deposit') {\n      setZapTokenBalance(balanceInfo)\n    } else {\n      const isCoinA = currentZapToken?.coin_type === apiPoolInfo?.tokenA?.coin_type\n      if (isCoinA) {\n        setZapTokenBalance({ balanceFormat: onlyAmountA })\n      } else {\n        setZapTokenBalance({ balanceFormat: onlyAmountB })\n      }\n    }\n  }, [action, balanceInfo, onlyAmountA, onlyAmountB, currentZapToken?.coin_type, apiPoolInfo?.poolAddress])\n\n  useEffect(() => {\n    return () => {\n      resetZapData()\n    }\n  }, [])\n\n  return {\n    currentTokens,\n    zapAmount,\n    zapAmountRate,\n    handleChangeAmount,\n    currentZapToken,\n    handleChangeZapToken,\n    zapTokenBalance,\n    zapSlippage\n    // zapProgressRef,\n    // handleResetZapProgress\n  }\n}\n","import ZapTabs from '@/components/zap/ZapTabs'\nimport useZap from '@/hooks/zap/useZap'\n\nimport { TradeInput } from '@cetus/design'\nimport { d } from '@cetus/utils'\nimport { VStack } from '@chakra-ui/react'\nimport { useEffect } from 'react'\n\nexport default function ZapDeposite({\n  action,\n  apiPoolInfo,\n  currentSqrtPrice,\n  lowerTick,\n  upperTick,\n  onlyAmountA,\n  onlyAmountB,\n  liquidity,\n  slideValue,\n  currentPosLiquidityData\n}: {\n  action: 'Deposit' | 'Withdraw'\n  apiPoolInfo: any\n  currentSqrtPrice: string\n  lowerTick?: any\n  upperTick?: any\n  onlyAmountA?: string\n  onlyAmountB?: string\n  liquidity?: string\n  slideValue?: string\n  currentPosLiquidityData?: any\n}) {\n  const { currentTokens, currentZapToken, handleChangeZapToken, zapAmount, zapAmountRate, handleChangeAmount, zapTokenBalance } = useZap(\n    action,\n    apiPoolInfo,\n    currentSqrtPrice,\n    lowerTick,\n    upperTick,\n    onlyAmountA,\n    onlyAmountB,\n    liquidity,\n    slideValue,\n    currentPosLiquidityData\n  )\n\n  useEffect(() => {\n    if (action === 'Withdraw') {\n      if (d(zapAmount).gt(zapTokenBalance?.balanceFormat || '0')) {\n        handleChangeAmount(zapTokenBalance?.balanceFormat)\n      }\n    }\n  }, [zapAmount, action, zapTokenBalance?.balanceFormat])\n\n  return (\n    <VStack w=\"100%\">\n      <ZapTabs tokens={currentTokens} current={currentZapToken} onSelect={handleChangeZapToken} />\n      <TradeInput\n        wrapStyle={{ h: '108px' }}\n        placeholder=\"0.0\"\n        value={zapAmount}\n        onChange={handleChangeAmount}\n        balance={zapTokenBalance?.balanceFormat || ''}\n        amountValue={zapAmountRate}\n        token={currentZapToken}\n        needRemainBalance={action === 'Withdraw' ? false : true}\n        balanceLabel={action === 'Withdraw' ? 'Available' : undefined}\n      />\n    </VStack>\n  )\n}\n","import { FreshProgressRef } from '@/components/swap/FreshProgressV2'\nimport useAddLiquidityStore from '@/store/clmm/addLiquidity'\nimport useGlobalStore from '@/store/common/global'\nimport useZapStore from '@/store/zap/index'\nimport { useDebounceFunction } from '@cetus/hooks'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport { useSdk } from '@cetus/sdk-factory'\nimport { useAccountStore } from '@cetus/stores'\nimport { BalanceChanges, CommonTypeInfo, ToastType, TransactionStatusType } from '@cetus/types'\nimport { bnToAmount, d, fixDown, formatNumberWithDown, getBalanceChanges, textEllipses } from '@cetus/utils'\nimport { WithdrawCalculationOptions } from '@cetusprotocol/zap-sdk'\nimport { debounce } from 'lodash-es'\nimport { useEffect, useMemo, useRef, useState } from 'react'\nimport { v4 } from 'uuid'\n\nexport default function useZapSubmit(type = 'Deposit') {\n  const {\n    zapAmount,\n    currentZapToken,\n    zapAmountRate,\n    zapTokenBalance,\n    isPreLoading,\n    preDepositeData,\n    zapApiPool,\n    setIsPreLoading,\n    lower,\n    upper,\n    liquidity,\n    zapCurrPriceData,\n    setPreDepositeData,\n    zapSlideValue\n  } = useZapStore()\n  const { currentAccount, onWalletModal } = useAccountStore()\n  const { setConfirmModalOpen } = useAddLiquidityStore()\n  const zapSdk = useSdk('zap')\n  const { zapSlippage, slippage } = useGlobalStore()\n  const [uuid, setUuid] = useState<string>('')\n  const [zapNotAvailable, setZapNotAvailable] = useState<boolean>(false)\n\n  const { getTokenPrice } = useTokenPrice()\n\n  const tokenAPrice = getTokenPrice(zapApiPool?.tokenA?.coin_type)\n  const tokenBPrice = getTokenPrice(zapApiPool?.tokenB?.coin_type)\n\n  const marketPrice = useMemo(() => {\n    if (tokenAPrice && tokenBPrice) {\n      return d(tokenAPrice.price).div(tokenBPrice.price).toString()\n    }\n    return undefined\n  }, [tokenAPrice?.price, tokenBPrice?.price])\n\n  const submitBtnInfo = useMemo(() => {\n    const btnInfo: {\n      text?: string\n      disabled: boolean\n    } = {\n      text: type === 'Withdraw' ? 'Zap Out' : 'Zap In',\n      disabled: false\n    }\n\n    // if (isPreLoading) {\n    //   btnInfo.disabled = true\n    //   return btnInfo\n    // }\n\n    // 判断钱包\n    if (!currentAccount?.address) {\n      btnInfo.text = 'Connect Wallet'\n      btnInfo.disabled = false\n      return btnInfo\n    }\n\n    // 判断输入\n    if (!zapAmount || (zapAmount && !+zapAmount)) {\n      btnInfo.text = 'Enter an amount'\n      btnInfo.disabled = true\n      return btnInfo\n    }\n\n    //判断余额\n    if (d(zapAmount).gt(zapTokenBalance?.balanceFormat || 0)) {\n      btnInfo.disabled = true\n      btnInfo.text = `Insufficient ${textEllipses(zapTokenBalance?.symbol, 10)} Balance`\n      return btnInfo\n    }\n\n    if (d(zapAmountRate).gt(10000) || (d(zapAmountRate).gt(0) && d(zapAmountRate).lt(0.0001))) {\n      btnInfo.disabled = true\n    }\n\n    return btnInfo\n  }, [currentAccount?.address, zapAmount, currentZapToken?.coin_type, isPreLoading, type, zapTokenBalance?.balanceFormat])\n\n  const handleZapIn = debounce(\n    () => {\n      if (!currentAccount) {\n        onWalletModal(true)\n      } else {\n        setConfirmModalOpen(true)\n      }\n    },\n    300,\n    {\n      leading: true,\n      trailing: false\n    }\n  )\n\n  const getSubmitBaseInfo = () => {\n    const amountA = preDepositeData?.amount_a\n    const amountB = preDepositeData?.amount_b\n    const tokenA = zapApiPool?.tokenA\n    const tokenB = zapApiPool?.tokenB\n    const displayTokenA = zapApiPool?.displayTokenA\n    const displayTokenB = zapApiPool?.displayTokenB\n    const dispalyAmountA = bnToAmount(!zapApiPool?.isReverse ? amountA : amountB, !zapApiPool?.isReverse ? tokenA?.decimals : tokenB?.decimals)\n    const dispalyAmountB = bnToAmount(!zapApiPool?.isReverse ? amountB : amountA, !zapApiPool?.isReverse ? tokenB?.decimals : tokenA?.decimals)\n\n    return {\n      amountA,\n      amountB,\n      tokenA,\n      tokenB,\n      displayTokenA,\n      displayTokenB,\n      dispalyAmountA,\n      dispalyAmountB\n    }\n  }\n\n  const getZapDepositToastInfo = () => {\n    const { displayTokenA, displayTokenB, dispalyAmountA, dispalyAmountB } = getSubmitBaseInfo()\n    // toDo: 是否为单边，可能还是需要用价格区间判断后得到fromTokenLock, toTokenLock, 暂直接用数量判断\n    const toastInfo: ToastType = {\n      getShowInfo: (status: TransactionStatusType, balanceChanges?: Record<string, BalanceChanges>) => {\n        const description =\n          !dispalyAmountA && !dispalyAmountB\n            ? `Add ${dispalyAmountA} ${displayTokenA?.symbol} and ${dispalyAmountB} ${displayTokenB?.symbol}`\n            : !dispalyAmountA\n              ? `Add ${dispalyAmountA} ${displayTokenA?.symbol}`\n              : !dispalyAmountB\n                ? `Add ${dispalyAmountB} ${displayTokenB?.symbol}`\n                : 'Add Liquidity'\n\n        const info: CommonTypeInfo = {\n          modalDescriptionText: description,\n          toastTitleText: description\n        }\n\n        if (status === 'success') {\n          let amountAF = dispalyAmountA\n          let amountBF = dispalyAmountB\n\n          if (balanceChanges) {\n            amountAF = getBalanceChanges(balanceChanges, displayTokenA) || dispalyAmountA\n            amountBF = getBalanceChanges(balanceChanges, displayTokenB) || dispalyAmountB\n          }\n          const description =\n            !dispalyAmountA && !dispalyAmountB\n              ? `Add ${amountAF} ${displayTokenA?.symbol} and ${amountBF} ${displayTokenB?.symbol}`\n              : !dispalyAmountA && dispalyAmountB\n                ? `Add ${amountAF} ${displayTokenA?.symbol}`\n                : !dispalyAmountB && dispalyAmountA\n                  ? `Add ${amountBF} ${displayTokenB?.symbol}`\n                  : 'Add Liquidity'\n\n          info.toastDescriptionContent = description\n          info.modalDescriptionText = description\n          info.toastTitleText = 'Supplied Successful'\n        }\n\n        return info\n      }\n    }\n\n    return toastInfo\n  }\n\n  const getZapDepositTx = async (lower?: any, upper?: any, isFarm?: boolean, posObj?: any) => {\n    console.log('🚀 ~ getZapDepositTx ~ isFarm:', isFarm)\n    const { tokenA, tokenB } = getSubmitBaseInfo()\n\n    // transactionConfirmation(toastInfo)\n\n    const params: any = {\n      deposit_obj: preDepositeData,\n      pool_id: zapApiPool?.poolAddress,\n      coin_type_a: tokenA?.coin_type,\n      coin_type_b: tokenB?.coin_type,\n      tick_lower: lower,\n      tick_upper: upper,\n      slippage: Number(slippage),\n      swap_slippage: Number(zapSlippage)\n    }\n\n    if (posObj) {\n      params['pos_obj'] = posObj\n    }\n\n    if (isFarm) {\n      params['farms_pool_id'] = zapApiPool?.farmsPoolAddress\n    }\n\n    console.log('getZapTx buildDepositPayload params: ', params)\n\n    const tx = await zapSdk!.Zap.buildDepositPayload(params)\n    console.log('🚀 ~ getZapTx ~ tx:', tx)\n\n    // const res = await signAndExecuteTransaction(tx, toastInfo, {\n    //   useDevInspect: true,\n    //   useMev: mevProtect,\n    //   showSuccessModal: false,\n    //   useFastMode: transactionMode === 'Fast Mode',\n    //   maxCapForGas,\n    //   customGasPrice\n    // })\n\n    return tx\n  }\n\n  const getZapWithdrawToastInfo = (showDisplayTokenALock: boolean, showDisplayTokenBLock: boolean) => {\n    const { displayTokenA, displayTokenB, dispalyAmountA, dispalyAmountB } = getSubmitBaseInfo()\n\n    const toastInfo = {\n      getShowInfo: (status: TransactionStatusType, balanceChanges?: Record<string, BalanceChanges>) => {\n        const description = `Withdraw ${formatNumberWithDown(zapAmount, currentZapToken?.decimals)} ${currentZapToken?.symbol}`\n\n        const info: CommonTypeInfo = {\n          modalDescriptionText: description,\n          toastTitleText: description\n        }\n\n        if (status === 'success') {\n          let amountAF = dispalyAmountA\n          let amountBF = dispalyAmountB\n\n          if (balanceChanges) {\n            amountAF = getBalanceChanges(balanceChanges, displayTokenA) || dispalyAmountA\n            amountBF = getBalanceChanges(balanceChanges, displayTokenB) || dispalyAmountB\n          }\n\n          info.toastDescriptionContent = ''\n          info.modalDescriptionText = ''\n          info.toastTitleText = 'Remove Liquidity Successful'\n        }\n\n        return info\n      }\n    }\n\n    return toastInfo\n  }\n\n  const getZapWithdrawTx = async (\n    posId: string,\n    liquidity: string,\n    lower: any,\n    upper: any,\n    collect_rewarder_types: any,\n    isFarm?: boolean,\n    isVestingPos?: boolean,\n    isAutoClaim?: boolean\n  ) => {\n    const { tokenA, tokenB } = getSubmitBaseInfo()\n\n    const isRemoveAll = preDepositeData?.burn_liquidity === liquidity\n\n    const params: any = {\n      withdraw_obj: preDepositeData,\n      pool_id: zapApiPool?.poolAddress,\n      pos_id: posId,\n      close_pos: !isVestingPos && isRemoveAll ? true : false,\n      collect_farms_rewarder: isAutoClaim || isRemoveAll ? true : false,\n      // close_pos: preDepositeData?.burn_liquidity === liquidity ? true : false,\n      collect_fee: isAutoClaim || isRemoveAll,\n      collect_rewarder_types: isAutoClaim || isRemoveAll ? collect_rewarder_types : [],\n      coin_type_a: tokenA?.coin_type,\n      coin_type_b: tokenB?.coin_type,\n      tick_lower: lower,\n      tick_upper: upper,\n      slippage: Number(slippage),\n      swap_slippage: Number(zapSlippage)\n    }\n\n    if (isFarm) {\n      params['farms_pool_id'] = zapApiPool?.farmsPoolAddress\n    }\n    console.log('🚀 ~ useZapSubmit ~ getZapWithdrawTx params:', params)\n\n    const tx = await zapSdk!.Zap.buildWithdrawPayload(params)\n\n    return {\n      tx,\n      isClose: preDepositeData?.burn_liquidity === liquidity\n    }\n  }\n\n  const preZapParamsRef = useRef<any>({})\n  const zapProgressRef = useRef<FreshProgressRef>(null)\n  const zapUuidRef = useRef<string>('')\n\n  useEffect(() => {\n    preZapParamsRef.current = {\n      currentZapToken,\n      zapApiPool,\n      zapAmount,\n      currentSqrtPrice: zapCurrPriceData?.currentSqrtPrice,\n      lower,\n      upper,\n      liquidity,\n      zapSlippage,\n      zapAmountRate,\n      marketPrice\n    }\n  }, [\n    currentZapToken?.coin_type,\n    zapApiPool?.poolAddress,\n    zapAmount,\n    zapCurrPriceData?.currentSqrtPrice,\n    lower,\n    upper,\n    liquidity,\n    zapSlippage,\n    zapAmountRate,\n    marketPrice\n  ])\n\n  const isMinimumPrecision = useMemo(() => {\n    if (currentZapToken?.decimals && d(zapAmount).mul(Math.pow(10, currentZapToken?.decimals)).eq(1)) return true\n    return false\n  }, [currentZapToken?.decimals, zapAmount])\n\n  const preZapIn = async (uuid?: string) => {\n    console.log('🚀 ~ preZapIn ~ preZapIn:', preZapIn)\n    const { currentZapToken, zapApiPool, zapAmount, currentSqrtPrice, lower, upper, liquidity, zapSlippage, marketPrice } = preZapParamsRef.current\n\n    setIsPreLoading(true)\n    const isCoinA = currentZapToken?.coin_type === zapApiPool?.tokenA?.coin_type\n    const mode = isCoinA ? 'OnlyCoinA' : 'OnlyCoinB'\n    const coinAmount = fixDown(d(zapAmount).mul(Math.pow(10, currentZapToken?.decimals)).toString(), 0)\n    console.log('🚀 ~ preZapIn ~ options.zapSlippage:', slippage, zapSlippage)\n    const options = {\n      pool_id: zapApiPool?.poolAddress,\n      tick_lower: lower,\n      tick_upper: upper,\n      current_sqrt_price: currentSqrtPrice,\n      slippage: Number(slippage),\n      swap_slippage: Number(zapSlippage),\n      // mark_price: marketPrice ? (isCoinA ? marketPrice : d(1).div(marketPrice).toString()) : undefined\n      mark_price: marketPrice\n    }\n    console.log('🚀 ~ preZapIn ~ options123:', options)\n\n    const modeOptions = {\n      mode,\n      coin_amount: coinAmount,\n      coin_type_a: zapApiPool?.tokenA?.coin_type,\n      coin_type_b: zapApiPool?.tokenB?.coin_type,\n      coin_decimal_a: zapApiPool?.tokenA?.decimals,\n      coin_decimal_b: zapApiPool?.tokenB?.decimals,\n      max_remain_rate: 0.01\n    }\n    console.log('🚀 ~ preZapIn ~ modeOptions:', modeOptions)\n\n    let res: any\n    try {\n      res = await zapSdk!.Zap.preCalculateDepositAmount(options, modeOptions as any)\n      console.log('🚀 ~ preZapIn ~ res:', res)\n    } catch (error) {\n      console.log('🚀 ~ preZapIn ~ error:', error)\n      setZapNotAvailable(true)\n    }\n\n    if (uuid === zapUuidRef.current) {\n      setPreDepositeData(res)\n    }\n    setIsPreLoading(false)\n  }\n\n  const preZapOut = async (uuid?: string) => {\n    setIsPreLoading(true)\n    const { currentZapToken, zapApiPool, zapAmount, currentSqrtPrice, lower, upper, liquidity, zapSlippage } = preZapParamsRef.current\n\n    const isCoinA = currentZapToken?.coin_type === zapApiPool?.tokenA?.coin_type\n    const mode = isCoinA ? 'OnlyCoinA' : 'OnlyCoinB'\n    const coinAmount = d(zapAmount).mul(Math.pow(10, currentZapToken?.decimals)).toString()\n    const options = {\n      mode,\n      pool_id: zapApiPool?.poolAddress,\n      tick_lower: lower,\n      tick_upper: upper,\n      current_sqrt_price: currentSqrtPrice,\n      coin_type_a: zapApiPool?.tokenA?.coin_type,\n      coin_type_b: zapApiPool?.tokenB?.coin_type,\n      coin_decimal_a: zapApiPool?.tokenA?.decimals,\n      coin_decimal_b: zapApiPool?.tokenB?.decimals\n    } as WithdrawCalculationOptions\n\n    if (d(zapAmount).gte(zapTokenBalance?.balanceFormat)) {\n      options['burn_liquidity'] = liquidity\n    } else {\n      options['burn_liquidity'] = fixDown(d(liquidity).mul(d(zapSlideValue).div(100)).toString(), 0)\n    }\n\n    console.log('🚀 ~ preZapInRemove ~ options:', options)\n\n    let res: any\n    try {\n      res = await zapSdk!.Zap.preCalculateWithdrawAmount(options)\n      console.log('🚀 ~ preZapInRemove ~ res:', res)\n    } catch (error) {\n      console.log('🚀 ~ preZapOut ~ error:', error)\n      setZapNotAvailable(true)\n    }\n\n    if (uuid === zapUuidRef.current) {\n      setPreDepositeData(res)\n    }\n    setIsPreLoading(false)\n  }\n\n  const debouncedPreZapIn = useDebounceFunction(preZapIn, 300)\n  const debouncedPreZapOut = useDebounceFunction(preZapOut, 300)\n\n  useEffect(() => {\n    // if (!Number(zapAmount) || d(zapAmountRate).gt(10000) || d(zapAmountRate).lt(0.0001)) {\n    //   setPreDepositeData(undefined)\n    //   return\n    // }\n    // if (type === 'Deposit') {\n    //   setIsPreLoading(true)\n    //   debouncedPreZapIn()\n    // } else {\n    //   if (zapSlideValue) {\n    //     setIsPreLoading(true)\n    //     debouncedPreZapOut()\n    //   }\n    // }\n    reCalculateZapData()\n  }, [zapAmount, currentZapToken?.coin_type, zapCurrPriceData?.currentSqrtPrice, lower, upper, zapSlideValue, zapAmountRate])\n\n  const handleResetZapProgress = () => {\n    zapProgressRef.current?.reset()\n  }\n\n  const reCalculateZapData = () => {\n    setZapNotAvailable(false)\n    const { zapAmount, zapAmountRate } = preZapParamsRef.current\n    console.log('🚀 ~ reCalculateZapData ~ zapAmount:', zapAmount)\n    console.log('🚀 ~ reCalculateZapData ~ zapAmountRate:', zapAmountRate)\n    console.log('🚀 ~ reCalculateZapData ~ zapAmountRate:', zapAmountRate)\n    if (!Number(zapAmount) || d(zapAmountRate).gt(10000) || d(zapAmountRate).lt(0.0001) || isMinimumPrecision) {\n      const uuid = v4()\n      zapUuidRef.current = uuid\n      setPreDepositeData(undefined)\n      setIsPreLoading(false)\n      return\n    }\n\n    setIsPreLoading(true)\n    const uuid = v4()\n    zapUuidRef.current = uuid\n    if (type == 'Deposit') {\n      debouncedPreZapIn(uuid)\n    } else {\n      debouncedPreZapOut(uuid)\n    }\n  }\n\n  useEffect(() => {\n    handleResetZapProgress()\n  }, [zapAmount, zapApiPool?.poolAddress, type])\n\n  useEffect(() => {\n    return () => {\n      handleResetZapProgress()\n      preZapParamsRef.current = null\n    }\n  }, [])\n\n  return {\n    btnText: submitBtnInfo.text,\n    btnDisabled: submitBtnInfo.disabled,\n    handleZapIn,\n    isPreLoading,\n    getZapDepositToastInfo,\n    getZapDepositTx,\n    getZapWithdrawToastInfo,\n    getZapWithdrawTx,\n    zapProgressRef,\n    handleResetZapProgress,\n    reCalculateZapData,\n    isMinimumPrecision,\n    zapNotAvailable\n  }\n}\n","// import { Item } from '@/components/liquidity/provideLiquidity/common'\nimport useZapSubmit from '@/hooks/zap/useZapSubmit'\n// import useLiquidityStore from '@/store/liquidity'\n// import usePriceRangeStore from '@/store/liquidity/priceRange'\nimport DepositRatio from '@/components/common/DepositRatio'\nimport FreshProgressV2 from '@/components/swap/FreshProgressV2'\nimport { usePriceImpact } from '@/hooks/swap/usePriceImpact'\nimport useGlobalStore from '@/store/common/global'\nimport useZapStore from '@/store/zap/index'\nimport { calcCoinProportion, checkFullRange } from '@/utils/pool'\nimport { ErrorTips, MarketSource, MarketType } from '@cetus/design'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { useAccountStore } from '@cetus/stores'\nimport { Icon, SingleCoinImage } from '@cetus/ui-kit'\nimport { bnToAmount, d, formatCurrencyWithKMB, formatNumberWithDown, formatPrice, textEllipses } from '@cetus/utils'\nimport { Box, Button, HStack, Skeleton, SkeletonCircle, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useMemo, useState } from 'react'\nimport Slippage from '../common/Slippage'\n\nexport default function ZapSubmiteInfo({\n  action,\n  onClick,\n  hideAmountInfo,\n  otherLoading,\n  isReverse,\n  inConfirmModal,\n  hideDepositRatio,\n  isPositionStyle\n}: {\n  action: 'Deposit' | 'Withdraw'\n  onClick?: () => void\n  hideAmountInfo?: boolean\n  otherLoading?: boolean\n  isReverse?: boolean\n  inConfirmModal?: boolean\n  isPositionStyle?: boolean\n  hideDepositRatio?: boolean\n}) {\n  const { currentAccount, onWalletModal } = useAccountStore()\n  const { btnDisabled, btnText, handleZapIn, zapProgressRef, reCalculateZapData, isMinimumPrecision, zapNotAvailable } = useZapSubmit(action)\n\n  const handleOnClick = () => {\n    if (!currentAccount) {\n      onWalletModal(true)\n      return\n    }\n    onClick ? onClick() : handleZapIn()\n  }\n\n  const [isOpen, setIsOpen] = useState(false)\n  const { zapSlippage } = useGlobalStore()\n  const { getTokenAmountValue } = useTokenPrice()\n\n  const {\n    zapSlideValue,\n    preDepositeData,\n    currentTokens,\n    currentZapToken,\n    zapAmount,\n    isPreLoading,\n    zapApiPool,\n    lower,\n    upper,\n    zapCurrPriceData,\n    posOriginAmounts,\n    zapAmountRate\n  } = useZapStore()\n  const { fromCoin, toCoin } = useMemo(() => {\n    const fromCoin = currentZapToken\n    const toCoin = currentTokens?.filter((item: any) => item?.coin_type !== currentZapToken?.coin_type)?.[0]\n    if (action === 'Withdraw') {\n      return {\n        fromCoin: toCoin,\n        toCoin: fromCoin\n      }\n    } else {\n      return {\n        fromCoin,\n        toCoin\n      }\n    }\n  }, [currentZapToken?.coin_type, currentTokens, action])\n\n  const { fromAmount, toAmount } = useMemo(() => {\n    let fromAmount, toAmount\n    if (preDepositeData && fromCoin?.coin_type && toCoin?.coin_type) {\n      fromAmount = bnToAmount(preDepositeData?.swap_result?.swap_in_amount, fromCoin?.decimals)\n      toAmount = bnToAmount(preDepositeData?.swap_result?.swap_out_amount, toCoin?.decimals)\n    }\n    return {\n      fromAmount,\n      toAmount\n    }\n  }, [preDepositeData, fromCoin?.coin_type, toCoin?.coin_type])\n\n  const { sources, priceImpactTextInfo, showPriceImpactTips } = usePriceImpact(fromCoin, toCoin, fromAmount, toAmount)\n\n  const [isToggle, setIsToggle] = useState(false)\n\n  const handleToggleRate = () => {\n    setIsToggle(!isToggle)\n  }\n\n  const minimumReceived = useMemo(() => {\n    if (toAmount) {\n      return formatNumberWithDown(d(toAmount).sub(d(toAmount).mul(zapSlippage)).toString())\n    }\n    return '--'\n  }, [zapSlippage, toAmount])\n\n  const currentPriceRate = useMemo(() => {\n    return preDepositeData?.swap_result?.swap_price\n  }, [preDepositeData])\n\n  const handleRefresh = () => {\n    console.log('ZapRoute handleRefresh')\n    reCalculateZapData()\n  }\n\n  const {\n    tokenA,\n    tokenB,\n    coinAmountA,\n    coinAmountB,\n    displayCoinAmountA,\n    displayCoinAmountB,\n    displayTokenA,\n    displayTokenB,\n    displayAmountARate,\n    displayAmountBRate,\n    amountARate,\n    amountBRate\n  } = useMemo(() => {\n    let coinAmountA, coinAmountB, tokenA, tokenB, amountARate, amountBRate\n    const isReverse = zapApiPool?.isReverse\n    if (preDepositeData && zapApiPool?.poolAddress) {\n      tokenA = zapApiPool?.tokenA\n      tokenB = zapApiPool?.tokenB\n      coinAmountA = bnToAmount(preDepositeData?.amount_a, tokenA?.decimals)\n      coinAmountB = bnToAmount(preDepositeData?.amount_b, tokenB?.decimals)\n      amountARate = getTokenAmountValue(tokenA?.coin_type, coinAmountA)\n      amountBRate = getTokenAmountValue(tokenB?.coin_type, coinAmountB)\n    }\n\n    return {\n      displayCoinAmountA: !isReverse ? coinAmountA : coinAmountB,\n      displayCoinAmountB: !isReverse ? coinAmountB : coinAmountA,\n      displayTokenA: !isReverse ? tokenA : tokenB,\n      displayTokenB: !isReverse ? tokenB : tokenA,\n      displayAmountARate: !isReverse ? amountARate : amountBRate,\n      displayAmountBRate: !isReverse ? amountBRate : amountARate,\n      tokenA,\n      tokenB,\n      coinAmountA,\n      coinAmountB,\n      amountARate,\n      amountBRate\n    }\n  }, [preDepositeData, zapApiPool?.poolAddress])\n\n  const { originPosAmountA, originPosAmountB } = useMemo(() => {\n    let originPosAmountA = ''\n    let originPosAmountB = ''\n    if (zapApiPool?.poolAddress && (posOriginAmounts?.coinAmountA || posOriginAmounts?.coinAmountB)) {\n      const tokenA = zapApiPool?.tokenA\n      const tokenB = zapApiPool?.tokenB\n      originPosAmountA = bnToAmount(posOriginAmounts?.coinAmountA, tokenA?.decimals)\n      originPosAmountB = bnToAmount(posOriginAmounts?.coinAmountB, tokenB?.decimals)\n    }\n\n    return { originPosAmountA, originPosAmountB }\n  }, [posOriginAmounts, zapApiPool?.poolAddress])\n\n  // 占比\n  const [percentMap, setPercentMap] = useState<any>({})\n  useEffect(() => {\n    if (coinAmountA || coinAmountB) {\n      const isFullRange = checkFullRange(lower, upper)\n      const rateMap = calcCoinProportion(coinAmountA || 0, coinAmountB || 0, zapCurrPriceData?.currentPrice, isFullRange)\n      setPercentMap(rateMap)\n    }\n  }, [coinAmountA, coinAmountB, zapCurrPriceData?.currentPrice])\n\n  const { isApp } = useWindowWidth()\n\n  const errorTips = useMemo(() => {\n    if (d(zapAmountRate).gt(50000)) {\n      return 'In Zap mode, each request should be within $50,000.'\n    } else if (d(zapAmountRate).gt(0) && (d(zapAmountRate).lt(0.0001) || isMinimumPrecision)) {\n      return 'The input is too small. Zap mode is not available.'\n    } else if (zapNotAvailable) {\n      return 'Zap mode is not available.'\n    }\n    return ''\n  }, [zapAmountRate, action, isMinimumPrecision, zapNotAvailable])\n\n  return (\n    <>\n      <VStack\n        gap=\"0px\"\n        w=\"100%\"\n        borderRadius=\"16px\"\n        border={isPositionStyle ? 'none' : '1px solid'}\n        borderColor={inConfirmModal ? 'rgba(0,0,0,0)' : 'border'}\n        bg={inConfirmModal || isPositionStyle ? 'none' : 'bg_six'}\n        p={{ base: inConfirmModal || isPositionStyle ? '0px' : '0px 8px', lg: inConfirmModal || isPositionStyle ? '0px' : '0px 16px' }}\n      >\n        {!inConfirmModal && (\n          <Button\n            w={{ base: isPositionStyle ? '100%' : 'calc(100% + 16px)', lg: isPositionStyle ? '100%' : 'calc(100% + 34px)' }}\n            h=\"52px\"\n            margin=\"-1px -1px 0px\"\n            fontSize=\"18px\"\n            fontWeight=\"500\"\n            borderRadius=\"12px\"\n            isDisabled={(isPreLoading || btnDisabled || otherLoading || showPriceImpactTips || !!errorTips) && currentAccount?.address}\n            isLoading={isPreLoading || otherLoading}\n            onClick={handleOnClick}\n          >\n            {btnText}\n          </Button>\n        )}\n\n        {!!Number(zapAmount) && (\n          <VStack w=\"100%\" gap=\"0px\">\n            {errorTips ? (\n              <Box w=\"100%\" p={isPositionStyle ? '12px 0px 0px' : '12px 0px'}>\n                <ErrorTips tips={errorTips} />\n              </Box>\n            ) : (\n              <>\n                {showPriceImpactTips && (\n                  <Box w=\"100%\" pt=\"12px\">\n                    <ErrorTips tips=\"High price difference. Be cautious before submitting your order.\" />\n                  </Box>\n                )}\n                {inConfirmModal && (\n                  <HStack w=\"100%\" justify=\"space-between\">\n                    <Text fontSize=\"14px\" color=\"text_paragraph\">\n                      Zap Amount\n                    </Text>\n                    <Text fontSize=\"14px\" color=\"text_caption\">\n                      {formatCurrencyWithKMB(zapAmountRate, 2)}\n                    </Text>\n                  </HStack>\n                )}\n                {Number(zapAmount) > 0 && Number(fromAmount) > 0 && (\n                  <VStack w=\"100%\" gap=\"12px\" pt=\"16px\" pb={inConfirmModal || isPositionStyle ? '0px' : '16px'}>\n                    <HStack w=\"100%\" justify=\"space-between\">\n                      <Text fontSize=\"14px\" color=\"text_paragraph\">\n                        Zap Route\n                      </Text>\n                    </HStack>\n                    <VStack\n                      w=\"100%\"\n                      bg={inConfirmModal ? 'bg_secondary' : 'none'}\n                      borderRadius=\"12px\"\n                      p={inConfirmModal ? '0px 12px' : '0px'}\n                      gap={inConfirmModal ? '4px' : '12px'}\n                      border=\"1px solid\"\n                      borderColor={inConfirmModal ? 'border' : 'rgba(0,0,0,0)'}\n                      flexDirection={action === 'Withdraw' ? 'column-reverse' : 'column'}\n                    >\n                      <VStack\n                        w=\"100%\"\n                        align=\"flex-start\"\n                        bg={inConfirmModal ? 'none' : 'button_outline_hov_bg'}\n                        p={inConfirmModal ? '16px 0px' : '16px 12px'}\n                        borderRadius={inConfirmModal ? '0px' : '12px'}\n                        borderBottom=\"1px solid\"\n                        borderColor={inConfirmModal ? 'border' : 'rgba(0,0,0,0)'}\n                      >\n                        <HStack w=\"100%\" align=\"center\">\n                          <VStack\n                            w=\"100%\"\n                            align=\"flex-start\"\n                            onClick={() => {\n                              setIsOpen(!isOpen)\n                            }}\n                          >\n                            <HStack w=\"100%\" justify=\"flex-start\">\n                              {isPreLoading ? (\n                                <Skeleton w=\"100%\" h=\"16px\" />\n                              ) : (\n                                <Text w=\"100%\" fontSize=\"12px\" color=\"text_caption\" textAlign=\"left\">\n                                  Swap {formatNumberWithDown(fromAmount)} {fromCoin?.symbol} for {minimumReceived} {toCoin?.symbol}\n                                </Text>\n                              )}\n                            </HStack>\n                            {isPreLoading ? (\n                              <Skeleton w=\"150px\" h=\"16px\" />\n                            ) : (\n                              <HStack\n                                w=\"100%\"\n                                justify=\"space-between\"\n                                align={{ base: 'flex-start', lg: 'center' }}\n                                flexDirection={{ base: 'column', lg: 'row' }}\n                              >\n                                <HStack gap=\"4px\" justify=\"space-between\" w={{ base: '100%', lg: 'unset' }}>\n                                  <HStack gap=\"4px\">\n                                    <FreshProgressV2\n                                      callbackInterval={20}\n                                      ref={zapProgressRef}\n                                      min={0}\n                                      max={20}\n                                      size=\"14px\"\n                                      noBg={true}\n                                      thickness=\"16px\"\n                                      onClick={handleRefresh}\n                                    />\n                                    <HStack flexWrap=\"wrap\">\n                                      <Text fontSize=\"12px\" color=\"text_paragraph\">\n                                        Price Difference\n                                      </Text>\n                                      <Text color={priceImpactTextInfo?.textColor} fontSize=\"12px\">\n                                        {priceImpactTextInfo?.priceImpactText}\n                                      </Text>\n                                      {!sources.includes('cetus') &&\n                                        sources?.map((source: any) => {\n                                          return <MarketSource key={source} market={source as MarketType} />\n                                        })}\n                                    </HStack>\n                                  </HStack>\n                                  {isApp && (\n                                    <Icon\n                                      xlinkHref=\"#icon-icon_arrow\"\n                                      svgW=\"12px\"\n                                      svgH=\"12px\"\n                                      transform={isOpen ? 'rotate(180deg)' : 'rotate(0deg)'}\n                                    />\n                                  )}\n                                </HStack>\n                                <HStack align=\"center\" gap=\"2px\">\n                                  {inConfirmModal ? (\n                                    <HStack gap=\"4px\">\n                                      <Text fontSize=\"12px\" color=\"text_paragraph\">\n                                        Slippage\n                                      </Text>\n                                      <Text fontSize=\"12px\" color=\"text_caption\">\n                                        {d(zapSlippage).mul(100).toString()}%\n                                      </Text>\n                                    </HStack>\n                                  ) : (\n                                    <Slippage slippageType=\"zap\" toolTipText=\"Slippage Tolerance\" />\n                                  )}\n                                  {!isApp && (\n                                    <Icon\n                                      xlinkHref=\"#icon-icon_arrow\"\n                                      svgW=\"12px\"\n                                      svgH=\"12px\"\n                                      transform={isOpen ? 'rotate(180deg)' : 'rotate(0deg)'}\n                                    />\n                                  )}\n                                </HStack>\n                              </HStack>\n                            )}\n                            {/* {showPriceImpactTips && (\n                              <Text fontSize=\"12px\" color=\"primary_red\" w=\"100%\">\n                                High price difference. Be cautious before submitting your order.\n                              </Text>\n                            )} */}\n                          </VStack>\n                        </HStack>\n                        {isOpen && (\n                          <HStack w=\"100%\" justify=\"space-between\" bg=\"bg_fifth\" h=\"52px\" borderRadius=\"12px\" p=\"0px 8px\">\n                            <Text fontSize=\"12px\" color=\"text_paragraph\">\n                              Swap Rate\n                            </Text>\n                            {isPreLoading ? (\n                              <Skeleton w=\"150px\" h=\"16px\" />\n                            ) : (\n                              <HStack>\n                                {isToggle ? (\n                                  <Text fontSize=\"12px\" color=\"text_caption\">\n                                    1 {toCoin?.symbol} = {formatPrice(1 / currentPriceRate)} {fromCoin?.symbol}\n                                  </Text>\n                                ) : (\n                                  <Text fontSize=\"12px\" color=\"text_caption\">\n                                    1 {fromCoin?.symbol} = {formatPrice(currentPriceRate)} {toCoin?.symbol}\n                                  </Text>\n                                )}\n                                <Icon xlinkHref=\"#icon-icon_swap1\" svgW=\"16px\" svgH=\"16px\" onClick={handleToggleRate} />\n                              </HStack>\n                            )}\n                          </HStack>\n                        )}\n                      </VStack>\n\n                      <VStack\n                        w=\"100%\"\n                        p={inConfirmModal ? '16px 0px' : '16px 12px'}\n                        bg={inConfirmModal ? 'none' : 'button_outline_hov_bg'}\n                        borderRadius=\"12px\"\n                        gap=\"12px\"\n                      >\n                        {hideDepositRatio ? (\n                          <Text w=\"100%\" textAlign=\"left\" fontSize=\"12px\" color=\"text_caption\">\n                            {action === 'Withdraw' ? 'Expected Amounts of Remove' : 'Expected Amounts to Add'}\n                          </Text>\n                        ) : (\n                          <DepositRatio\n                            tokenA={tokenA}\n                            tokenB={tokenB}\n                            percentMap={percentMap}\n                            type=\"zap\"\n                            isLoading={isPreLoading}\n                            isReverse={isReverse}\n                            label=\"Expected Amounts to Add\"\n                          />\n                        )}\n                        <HStack\n                          //  bg={!isPositionStyle ? 'text_highlight_opacity.10' : 'none'}\n                          bg=\"text_highlight_opacity.10\"\n                          p=\"12px\"\n                          w=\"100%\"\n                          // h={isPositionStyle ? '32px' : '52px'}\n                          h=\"52px\"\n                          justify=\"space-between\"\n                          align=\"center\"\n                          borderRadius=\"12px\"\n                        >\n                          <PosAmountInfo\n                            isPositionStyle={isPositionStyle}\n                            token={!isReverse ? tokenA : tokenB}\n                            amount={\n                              !isReverse\n                                ? formatNumberWithDown(zapSlideValue == 100 ? originPosAmountA : coinAmountA)\n                                : formatNumberWithDown(zapSlideValue == 100 ? originPosAmountB : coinAmountB)\n                            }\n                            rate={!isReverse ? amountARate : amountBRate}\n                            loading={isPreLoading}\n                          />\n                          {<Box bg=\"bg_fifth\" w=\"1px\" h=\"100%\" />}\n                          <PosAmountInfo\n                            isPositionStyle={isPositionStyle}\n                            token={!isReverse ? tokenB : tokenA}\n                            amount={\n                              !isReverse\n                                ? formatNumberWithDown(zapSlideValue == 100 ? originPosAmountB : coinAmountB)\n                                : formatNumberWithDown(zapSlideValue == 100 ? originPosAmountA : coinAmountA)\n                            }\n                            loading={isPreLoading}\n                            rate={!isReverse ? amountBRate : amountARate}\n                            align=\"right\"\n                          />\n                        </HStack>\n                      </VStack>\n                      {/* )} */}\n                    </VStack>\n                  </VStack>\n                )}\n              </>\n            )}\n          </VStack>\n        )}\n      </VStack>\n    </>\n  )\n}\n\nfunction PosAmountInfo({\n  token,\n  amount,\n  rate,\n  loading,\n  align = 'left',\n  isPositionStyle\n}: {\n  token: any\n  amount: any\n  rate: any\n  loading: boolean\n  align?: string\n  isPositionStyle?: boolean\n}) {\n  return (\n    <HStack flex=\"1\" gap=\"8px\" p={isPositionStyle ? '0' : '12px'} justify=\"flex-start\" flexDirection={align === 'left' ? 'row' : 'row-reverse'}>\n      {loading ? <SkeletonCircle size=\"20px\" /> : <SingleCoinImage imageUrl={token?.logo_url} w=\"20px\" h=\"20px\" />}\n      <VStack align={`flex-${align === 'left' ? 'start' : 'end'}`} gap=\"4px\">\n        {loading ? (\n          <Skeleton w=\"50px\" h=\"14px\" />\n        ) : (\n          <Text fontSize=\"12px\" color=\"text_caption\" textAlign={`${align === 'left' ? 'left' : 'right'}`}>\n            {amount} {textEllipses(token?.symbol, 10)}\n          </Text>\n        )}\n        {loading ? (\n          <Skeleton w={{ base: '70px', lg: '100px' }} h=\"12px\" />\n        ) : (\n          <Text fontSize=\"12px\" color=\"text_paragraph\">\n            {/* {rate && !!+rate ? `${formatCurrencyWithKMB(rate, 2)}` : null} */}\n            {formatCurrencyWithKMB(rate, 2)}\n          </Text>\n        )}\n      </VStack>\n    </HStack>\n  )\n}\n","import { useMemo } from 'react'\n\nexport default function useCurrentApiPool(currentPosBaseInfo: any, posApiPoolData: any) {\n  const currentApiPoolInfo = useMemo(() => {\n    if (currentPosBaseInfo?.clmmPool) {\n      return posApiPoolData?.[currentPosBaseInfo?.clmmPool]\n    }\n    return undefined\n  }, [currentPosBaseInfo?.clmmPool, posApiPoolData])\n\n  return {\n    currentApiPoolInfo\n  }\n}\n","import useLiquidityStore from '@/store/clmm'\nimport { PoolApiInfo } from '@/types'\nimport { d } from '@cetus/utils'\nimport { TickMath } from '@cetusprotocol/common-sdk'\nimport BN from 'bn.js'\n\nexport default function useGetCurrentPrice() {\n  const { setCurrentPriceData } = useLiquidityStore()\n\n  const getCurrentPrice = (currentSqrtPrice: string, apiPoolInfo: PoolApiInfo, currentTickIndex?: number) => {\n    if (apiPoolInfo.tokenA && apiPoolInfo.tokenB) {\n      const decimalsA = apiPoolInfo.tokenA.decimals\n      const decimalsB = apiPoolInfo.tokenB.decimals\n      // const currentPrice = TickMath.sqrtPriceX64ToPrice(new BN(currentSqrtPrice), decimalsA, decimalsB).toString()\n      const currentPrice =\n        currentTickIndex !== undefined\n          ? TickMath.tickIndexToPrice(currentTickIndex, decimalsA, decimalsB).toString()\n          : TickMath.sqrtPriceX64ToPrice(new BN(currentSqrtPrice), decimalsA, decimalsB).toString()\n      const reverseCurrentPrice = d(1).div(currentPrice).toString()\n\n      const data = {\n        currentPrice,\n        reverseCurrentPrice,\n        currentSqrtPrice,\n        pool: apiPoolInfo.poolAddress\n      }\n      setCurrentPriceData(data)\n    }\n  }\n\n  return {\n    getCurrentPrice\n  }\n}\n","import { FrozenPools } from '@/constant/pool'\nimport useLiquidityStore from '@/store/clmm'\nimport useAddLiquidityStore from '@/store/clmm/addLiquidity'\nimport { PoolApiInfo, PoolContractInfo } from '@/types'\nimport { getPoolDirection } from '@/utils/pool'\nimport { useGetToken } from '@cetus/hooks/src/useToken'\nimport { useSdk } from '@cetus/sdk-factory'\nimport { d } from '@cetusprotocol/common-sdk'\nimport useGetCurrentPrice from '../clmm/useGetCurrentPrice'\n\nexport default function useGetContractPoolInfo() {\n  const clmmSdk = useSdk('clmm')\n  const { fetchTokenInfo } = useGetToken()\n  const { contractPoolInfo, setContractPoolInfo, setContractPoolInfoLoading, apiPoolInfo, setApiPoolInfo, setApiPoolInfoLoading } =\n    useLiquidityStore()\n  const { setFromToken, setToToken } = useAddLiquidityStore()\n  const { getCurrentPrice } = useGetCurrentPrice()\n\n  const getContractPoolInfo = async (poolAddress: string): Promise<PoolContractInfo | null> => {\n    setContractPoolInfoLoading(true)\n    let poolInfo: PoolContractInfo | null = null\n    try {\n      const res = await clmmSdk!.Pool.getPool(poolAddress)\n      poolInfo = {\n        ...res,\n        coinAmountA: String(res.coin_amount_a),\n        coinAmountB: String(res.coin_amount_b),\n        coinTypeA: res.coin_type_a,\n        coinTypeB: res.coin_type_b,\n        poolAddress: res.id,\n        poolType: res.pool_type,\n        tickSpacing: Number(res.tick_spacing),\n        current_sqrt_price: String(res.current_sqrt_price),\n        fee_growth_global_a: String(res.fee_growth_global_a),\n        fee_growth_global_b: String(res.fee_growth_global_b),\n        fee_protocol_coin_a: String(res.fee_protocol_coin_a),\n        fee_protocol_coin_b: String(res.fee_protocol_coin_b),\n        fee_rate: String(res.fee_rate),\n        liquidity: String(res.liquidity),\n        rewarder_infos: res.rewarder_infos.map(r => {\n          return {\n            coinAddress: r.coin_type,\n            emissionsEveryDay: r.emissions_per_second,\n            emissions_per_second: String(r.emissions_per_second),\n            growth_global: String(r.growth_global)\n          }\n        })\n      }\n      console.log(poolAddress, poolInfo, 'poolAddress')\n      console.log('🚀 ~ getContractPoolInfo ~ poolInfo:', {\n        poolInfo,\n        apiPoolInfo\n      })\n\n      // 如果没拿到apiPoolInfo 信息，则用合约信息转化一份\n      if (apiPoolInfo?.displayTokenA === undefined) {\n        const apiPool = await formatApiPoolByContractPool(poolInfo)\n        console.log('🚀🚀🚀 ~ useGetContractPoolInfo.ts:59 ~ getContractPoolInfo ~ apiPool:', apiPool)\n\n        if (apiPool) {\n          setApiPoolInfo(apiPool)\n          setApiPoolInfoLoading(false)\n          getCurrentPrice(poolInfo?.current_sqrt_price, apiPool, poolInfo?.current_tick_index)\n          setFromToken(apiPool?.displayTokenA)\n          setToToken(apiPool?.displayTokenB)\n        }\n      }\n    } catch (error) {\n      console.log('getContractPoolInfo ~ error:', error)\n    } finally {\n      setContractPoolInfoLoading(false)\n    }\n    if (!contractPoolInfo) {\n      setContractPoolInfo(poolInfo || null)\n\n      return poolInfo\n    } else {\n      if (poolInfo) {\n        setContractPoolInfo(poolInfo)\n        return poolInfo\n      } else {\n        return contractPoolInfo\n      }\n    }\n  }\n\n  async function formatApiPoolByContractPool(cPool: PoolContractInfo) {\n    const tokenA = await fetchTokenInfo(cPool.coinTypeA)\n    const tokenB = await fetchTokenInfo(cPool.coinTypeB)\n\n    if (tokenA && tokenB) {\n      const name = `${tokenA?.symbol} - ${tokenB?.symbol}`\n      const feeRate = d(cPool.fee_rate).div(100).toString()\n      const fee = d(cPool.fee_rate).div(10000).toString()\n      const feeDisplay = d(feeRate).div(100).toString() + '%'\n      const isReverse = !getPoolDirection(cPool.coinTypeA, cPool.coinTypeB)\n      const isFrozen = FrozenPools.includes(cPool.poolAddress)\n\n      const pool: PoolApiInfo & { isFrozen?: boolean } = {\n        poolAddress: cPool.poolAddress,\n        name,\n        isReverse,\n        tokenA,\n        tokenB,\n        displayTokenA: isReverse ? tokenB : tokenA,\n        displayTokenB: isReverse ? tokenA : tokenB,\n        haveMining: false,\n        miningRewardList: null,\n        miningAprList: null,\n        haveFarming: false,\n        farmsRewarderList: null,\n        farmsApr: '',\n        farmingAprDisplay: '',\n        feeApr: '',\n        feeAprDisplay: '',\n        miningAprTotal: '',\n        feeAndMiningAprDisplay: '',\n        totalAprDisplay: '',\n        fee,\n        feeRate,\n        feeDisplay,\n        tvlDisplay: '0',\n        volume24Display: '0',\n        fees24Display: '0',\n        isVaults: false,\n        tickSpacing: cPool.tickSpacing.toString(),\n        isFrozen\n      }\n\n      return pool\n    }\n\n    return undefined\n  }\n\n  return {\n    getContractPoolInfo\n  }\n}\n","import useTransaction from '@/hooks/common/useTransaction'\nimport useCurrentApiPool from '@/hooks/position/useCurrentApiPool'\nimport useZapSubmit from '@/hooks/zap/useZapSubmit'\nimport useGlobalStore from '@/store/common/global'\nimport usePositionStore from '@/store/position'\nimport usePositionDetailStore from '@/store/position/detail'\nimport useZapStore from '@/store/zap'\nimport { PosBaseInfo, PosReward } from '@/types'\nimport { formatDescription } from '@/utils'\nimport { useAccountBalance, useDebounceFunction } from '@cetus/hooks'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport useTransactionModal from '@cetus/hooks/src/useTransactionModal'\nimport { useAccountStore } from '@cetus/stores'\nimport { BalanceChanges, CommonTypeInfo, Token, TransactionStatusType } from '@cetus/types'\nimport { amountToBN, bnToAmount, d, Decimal, formatNumber, formatNumberWithDown, getBalanceChanges, isAvailableObject } from '@cetus/utils'\nimport { useEffect, useMemo, useRef, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { v4 } from 'uuid'\nimport useGetContractPoolInfo from '../pool/useGetContractPoolInfo'\nimport useCurrentPos from './useCurrentPos'\nimport useGetPosLiquiditys from './useGetPosLiquiditys'\nimport usePosAdd from './usePosAdd'\nimport usePosHelper from './usePosHelper'\nimport usePosRemove from './usePosRemove'\n\nexport default function usePosRemovePage() {\n  const { transactionConfirmation } = useTransactionModal()\n  const { getTokenAmountValue } = useTokenPrice()\n  const { getCoinAmountFromLiquidity } = useGetPosLiquiditys()\n  const { currentPosBaseInfo, posLiquidityData, posRewardsData, setPosBaseList, posApiPoolData } = usePositionStore()\n  const { getCurrentPosBaseInfo, getCurrentPosHistory } = useCurrentPos()\n  const { preAdd } = usePosAdd()\n  const { getRemoveTsPayload, getCloseTsPayload } = usePosRemove()\n  const { getTokenALock, getTokenBLock } = usePosHelper()\n  const {\n    setTokenAmountAfterA,\n    setTokenAmountAfterB,\n    currentPosPoolInfo,\n    currentPoolSqrtPrice,\n    setIsFixedDisplayTokenA,\n    slideValue,\n    setSlideValue,\n    isFixedDisplayTokenA,\n    isPosDetailRefresh,\n    currentPosDetailTab,\n    useZapIn,\n    curPosContractPoolInfo,\n    isAutoClaim,\n    setIsAutoClaim\n  } = usePositionDetailStore()\n\n  const { getZapWithdrawToastInfo, getZapWithdrawTx, reCalculateZapData } = useZapSubmit('Withdraw')\n  const { getContractPoolInfo } = useGetContractPoolInfo()\n\n  const { preDepositeData, currentZapToken, setZapAmount, zapAmount } = useZapStore()\n\n  const { currentApiPoolInfo } = useCurrentApiPool(currentPosBaseInfo, posApiPoolData)\n\n  const currentPosRewardsData = posRewardsData[currentPosBaseInfo?.posId as string]\n\n  const { mevProtect, maxCapForGas, transactionMode, customGasPrice, slippage, zapSlippage } = useGlobalStore()\n\n  const [tokenAmountA, setTokenAmountA] = useState('')\n  const [tokenAmountB, setTokenAmountB] = useState('')\n  const [preRemoveLoading, setPreRemoveLoading] = useState(false)\n  const [removeLiquidityAmount, setRemoveLiquidityAmount] = useState('')\n\n  const displayTokenA: Token | undefined = currentPosBaseInfo?.displayTokenA\n  const displayTokenB: Token | undefined = currentPosBaseInfo?.displayTokenB\n\n  const currentPosLiquidityData = posLiquidityData[currentPosBaseInfo?.posId as string]\n  // 余额\n  const tokenABalance = formatNumberWithDown(currentPosLiquidityData?.displayCoinAmountA, undefined, true)\n  const tokenBBalance = formatNumberWithDown(currentPosLiquidityData?.displayCoinAmountB, undefined, true)\n\n  // 价值\n  const tokenAmountValueA = getTokenAmountValue(displayTokenA?.coin_type, tokenAmountA)\n  const tokenAmountValueB = getTokenAmountValue(displayTokenB?.coin_type, tokenAmountB)\n\n  useEffect(() => {\n    if (+tokenAmountA || +tokenAmountB) {\n      const amountA = +tokenAmountA\n      const amountB = +tokenAmountB\n      const numA = d(+tokenABalance).sub(amountA)\n      const numB = d(tokenBBalance).sub(amountB)\n      console.log('🚀 ~ useEffect ~ numA.gt(0):', numA.toString(), numB.toString())\n      setTokenAmountAfterA(numA.gt(0) ? numA.toString() : '0')\n      setTokenAmountAfterB(numB.gt(0) ? numB.toString() : '0')\n    } else {\n      setTokenAmountAfterA('')\n      setTokenAmountAfterB('')\n    }\n  }, [tokenAmountA, tokenAmountB])\n\n  const [uuid, setUuid] = useState<string>('')\n  const uuidRef = useRef<string>('')\n\n  useEffect(() => {\n    console.log('🚀 ~ usePosRemovePage ~ uuid:', uuid)\n    uuidRef.current = uuid\n  }, [uuid])\n\n  const resetInputAmount = () => {\n    setTokenAmountA('')\n    setTokenAmountB('')\n    setPreRemoveLoading(false)\n    setUuid('')\n    setSlideValue('--')\n  }\n\n  const showTokenALock = useMemo(() => {\n    return getTokenALock(currentPosBaseInfo as PosBaseInfo, curPosContractPoolInfo?.current_sqrt_price)\n  }, [curPosContractPoolInfo?.current_tick_index, currentPosBaseInfo])\n\n  const showTokenBLock = useMemo(() => {\n    return getTokenBLock(currentPosBaseInfo as PosBaseInfo, curPosContractPoolInfo?.current_sqrt_price)\n  }, [curPosContractPoolInfo?.current_tick_index, currentPosBaseInfo])\n\n  const showDisplayTokenALock = !currentPosBaseInfo?.isReverse ? showTokenALock : showTokenBLock\n  const showDisplayTokenBLock = !currentPosBaseInfo?.isReverse ? showTokenBLock : showTokenALock\n\n  useEffect(() => {\n    resetInputAmount()\n  }, [showDisplayTokenALock, showDisplayTokenBLock])\n\n  const debouncedPreCalculate = useDebounceFunction((amount, is_fixed_displaytokenA, uuid) => {\n    console.log('🚀 ~ debouncedPreCalculate ~ params:', amount)\n    const decimals = is_fixed_displaytokenA ? currentPosBaseInfo?.displayTokenA?.decimals : currentPosBaseInfo?.displayTokenB?.decimals\n    const amountBN = amountToBN(amount, decimals)\n    const tokenA = currentPosBaseInfo?.tokenA\n    const tokenB = currentPosBaseInfo?.tokenB\n    const lowerTick = currentPosBaseInfo?.lowerTick\n    const upperTick = currentPosBaseInfo?.upperTick\n    const isReverse = currentPosBaseInfo?.isReverse\n    // const curSqrtPrice = currentPosPoolsOriginalData.current_sqrt_price\n    const curSqrtPrice = currentPoolSqrtPrice\n\n    const params = {\n      amount: amountBN,\n      tokenA,\n      tokenB,\n      isTokenA: isReverse ? !is_fixed_displaytokenA : is_fixed_displaytokenA,\n      lowerTick,\n      upperTick,\n      curSqrtPrice,\n      isReverse,\n      roundUp: false\n    }\n    console.log('🚀 ~ debouncedPreCalculate ~ params:', params)\n    const { displayCoinAmountA, displayCoinAmountB, liquidityAmount } = preAdd(params)\n    console.log('🚀 ~ debouncedPreCalculate:', displayCoinAmountA, displayCoinAmountB, params, is_fixed_displaytokenA, uuid)\n    if (uuidRef.current === uuid) {\n      setRemoveLiquidityAmount(liquidityAmount)\n      console.log('🚀 ~ debouncedPreCalculate ~ liquidityAmount:', removeLiquidityAmount, liquidityAmount)\n\n      const slide = formatNumber(d(liquidityAmount).div(currentPosBaseInfo?.liquidity).mul(100).toNumber(), 2, true)\n      if (d(slide).gt(100) || d(slide).eq(100)) {\n        setSlideValue(100)\n        setTokenAmountA(tokenABalance as string)\n        setTokenAmountB(tokenBBalance as string)\n      } else {\n        setSlideValue(slide)\n        if (is_fixed_displaytokenA) {\n          setTokenAmountB(displayCoinAmountB || '')\n        } else {\n          setTokenAmountA(displayCoinAmountA || '')\n        }\n      }\n    } else {\n      resetInputAmount()\n    }\n    setPreRemoveLoading(false)\n  }, 500)\n  const [isUpdateSlider, setIsUpdateSlider] = useState(false)\n  // 重新计算 (刷新按钮价格更新时 交易失败时)\n  const reCalculateResult = () => {\n    if ((tokenAmountA || tokenAmountB) && isAvailableObject(currentPosBaseInfo)) {\n      console.log('🚀 ~ reCalculateResult ~ isFixedDisplayTokenA:', isUpdateSlider, slideValue)\n      if (slideValue === '--') return\n      if (isUpdateSlider || Number(slideValue) == 100) {\n        changeSlideFun(Number(slideValue))\n      } else {\n        console.log('🚀 ~ reCalculateResult ~ currentPosBaseInfo:', currentPosBaseInfo)\n        const amount = isFixedDisplayTokenA ? tokenAmountA : tokenAmountB\n        if (+amount) {\n          const uuid = v4()\n          setUuid(uuid)\n          debouncedPreCalculate(amount, isFixedDisplayTokenA, uuid)\n        }\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (currentPosDetailTab == 'remove') {\n      console.log('🚀 ~ usePosRemovePage ~ tokenABalance, tokenBBalance:', isPosDetailRefresh, tokenABalance, tokenBBalance)\n      reCalculateResult()\n    }\n  }, [tokenABalance, tokenBBalance])\n\n  /**\n   * 输入数量监听\n   * @param amount\n   */\n\n  const handleAmountChange = (amount: string, is_fixed_displaytokenA: boolean) => {\n    console.log('🚀 ~ h111andleAmountChange ~ amount:', amount)\n    setIsUpdateSlider(false)\n    setRemoveLiquidityAmount('')\n    if (!amount) {\n      resetInputAmount()\n      return\n    }\n    setPreRemoveLoading(true)\n    setIsFixedDisplayTokenA(is_fixed_displaytokenA)\n    if (is_fixed_displaytokenA) {\n      setTokenAmountA(amount)\n      if (d(amount).eq(tokenABalance)) {\n        setTokenAmountB(tokenBBalance as string)\n        setSlideValue(100)\n        setUuid('')\n        setPreRemoveLoading(false)\n        return\n      }\n    } else {\n      setTokenAmountB(amount)\n      if (d(amount).eq(tokenBBalance)) {\n        setTokenAmountA(tokenABalance as string)\n        setSlideValue(100)\n        setUuid('')\n        setPreRemoveLoading(false)\n        return\n      }\n    }\n\n    console.log('🚀 ~ handleAmountChange ~ amount:', amount, +amount)\n    if (+amount) {\n      const uuid = v4()\n      setUuid(uuid)\n      console.log('🚀 ~ handleAmountChange ~ params:', amount)\n      debouncedPreCalculate(amount, is_fixed_displaytokenA, uuid)\n    } else {\n      setPreRemoveLoading(false)\n      if (is_fixed_displaytokenA) {\n        setTokenAmountB('')\n      } else {\n        setTokenAmountA('')\n      }\n      setSlideValue('--')\n    }\n  }\n\n  // //滑杆数值改变时用流动性改变input的值\n  const changeSlideFun = (num: number) => {\n    setIsUpdateSlider(true)\n    console.log('🚀 ~ changeSlideFun ~ changeSlideFun:', tokenABalance, tokenBBalance, num)\n\n    if (!useZapIn) {\n      if (num == 100) {\n        setTokenAmountA(tokenABalance)\n        setTokenAmountB(tokenBBalance)\n      } else {\n        const tokenA: Token = currentPosBaseInfo?.tokenA\n        const tokenB: Token = currentPosBaseInfo?.tokenB\n        const liquidity = formatNumberWithDown(d(currentPosBaseInfo?.liquidity).mul(num).div(100).toString() || '0', 0, true)\n        console.log('🚀 ~ changeSlideFun ~ liquidity1111111:', currentPosBaseInfo?.liquidity, liquidity)\n        const lowerTick = currentPosBaseInfo?.lowerTick\n        const upperTick = currentPosBaseInfo?.upperTick\n        const isReverse = currentPosBaseInfo?.isReverse\n        const params = { tokenA, tokenB, liquidity, currentSqrtPrice: currentPoolSqrtPrice, lowerTick, upperTick, roundUp: false }\n        try {\n          const { amountA, amountB } = getCoinAmountFromLiquidity(params)\n          setRemoveLiquidityAmount(liquidity)\n          const displayCoinAmountA = !isReverse ? amountA : amountB\n          const displayCoinAmountB = !isReverse ? amountB : amountA\n          console.log('🚀 ~ changeSlideFun ~  coinAmountA, coinAmountB:', amountA, amountB)\n          setTokenAmountA(d(displayCoinAmountA).gt(0) ? displayCoinAmountA : '')\n          setTokenAmountB(d(displayCoinAmountB).gt(0) ? displayCoinAmountB : '')\n        } catch (error) {\n          console.log('🚀 ~ changeSlideFun ~ error:', error)\n          setTokenAmountA('')\n          setTokenAmountB('')\n        }\n      }\n    } else {\n      const isCoin = currentApiPoolInfo?.tokenA?.coin_type === currentZapToken?.coin_type\n      const balance = isCoin ? onlyAmountA : onlyAmountB\n      if (num === 100) {\n        setZapAmount(balance)\n      } else {\n        const value = d(balance).mul(d(num).div(100)).toString()\n        setZapAmount(value)\n      }\n    }\n  }\n\n  const { currentAccount } = useAccountStore()\n  const btnStatusText = useMemo(() => {\n    const btnInfo: {\n      text?: string\n      disabled: boolean\n    } = {\n      text: 'Remove',\n      disabled: false\n    }\n    if (!currentAccount?.address) {\n      btnInfo.text = 'Connect Wallet'\n      btnInfo.disabled = false\n      return btnInfo\n    }\n\n    // 判断输入\n    if (!+tokenAmountA && !+tokenAmountB) {\n      btnInfo.text = 'Enter an amount'\n      btnInfo.disabled = true\n      return btnInfo\n    }\n    //判断余额\n    if (!showDisplayTokenALock && tokenAmountA && d(tokenAmountA).gt(tokenABalance || 0)) {\n      btnInfo.disabled = true\n      btnInfo.text = `Invalid Amount`\n      return btnInfo\n    }\n    //判断余额\n    if (!showDisplayTokenBLock && tokenAmountB && d(tokenAmountB).gt(tokenBBalance || 0)) {\n      btnInfo.disabled = true\n      btnInfo.text = `Invalid Amount`\n      return btnInfo\n    }\n\n    if (currentPosBaseInfo?.posType == 'burn') {\n      btnInfo.disabled = true\n      return btnInfo\n    }\n    return btnInfo\n  }, [tokenAmountA, tokenAmountB, tokenABalance, tokenBBalance, currentAccount?.address])\n\n  const { signAndExecuteTransaction } = useTransaction()\n  const { fetchAccountBalance } = useAccountBalance()\n  const [isRemoveLoading, setIsRemoveLoading] = useState(false)\n  const navigate = useNavigate()\n  const toRemove = async () => {\n    setIsRemoveLoading(true)\n    const isVestingPos = !!currentPosBaseInfo?.vestData\n    console.log('🚀 ~ toRemove ~ isVestingPos:', isVestingPos)\n    let isClosed = slideValue == 100 && !isVestingPos\n    const isVestingPosAndRemoveAll = isVestingPos && slideValue === 100\n    console.log('🚀 ~ toRemove ~ isClosed:', isClosed)\n    console.log('🚀 ~ toRemove ~ currentPosRewardsData:', currentPosRewardsData)\n    console.log('🚀 ~ toRemove ~ currentPosBaseInfo:', currentPosBaseInfo)\n    console.log('🚀 ~ toRemove ~ currentPosPoolInfo?.miningRewardList:', currentPosPoolInfo?.miningRewardList)\n\n    let rewarderCoinTypes: string[] = []\n    if (curPosContractPoolInfo) {\n      curPosContractPoolInfo.rewarder_infos.map((item: any) => {\n        rewarderCoinTypes.push(item.coinAddress)\n      })\n    }\n    console.log('🚀 ~ toRemove ~ rewarderCoinTypes1:', rewarderCoinTypes)\n    if (rewarderCoinTypes.length === 0) {\n      rewarderCoinTypes = isClosed\n        ? !currentPosRewardsData || currentPosRewardsData?.length == 0\n          ? (currentPosPoolInfo?.miningRewardList || [])?.reduce((arr: string[], item: any) => {\n              arr.push(item.coinType)\n              return arr\n            }, [])\n          : (currentPosRewardsData || [])?.reduce((arr: string[], item: PosReward) => {\n              arr.push(item.coin_address)\n              return arr\n            }, [])\n        : (currentPosRewardsData || [])?.reduce((arr: string[], item: PosReward) => {\n            if (d(item?.amount_owed).gt(0)) {\n              arr.push(item.coin_address)\n            }\n            return arr\n          }, [])\n    }\n\n    console.log('🚀 ~ toRemove ~ rewarderCoinTypes2:', rewarderCoinTypes)\n\n    let amountA, amountB\n    try {\n      let tx\n      let msafeParams\n      let toastInfo\n      if (!useZapIn) {\n        amountA = !currentPosBaseInfo?.isReverse\n          ? d(tokenAmountA).mul(Decimal.pow(10, displayTokenA!.decimals)).toString()\n          : d(tokenAmountB).mul(Decimal.pow(10, displayTokenB!.decimals)).toString()\n        amountB = !currentPosBaseInfo?.isReverse\n          ? d(tokenAmountB).mul(Decimal.pow(10, displayTokenB!.decimals)).toString()\n          : d(tokenAmountA).mul(Decimal.pow(10, displayTokenA!.decimals)).toString()\n\n        console.log('🚀 ~ toAdd ~ rewarderCoinTypes:', currentPosPoolInfo, currentPosRewardsData, rewarderCoinTypes)\n\n        const params: any = {\n          posId: currentPosBaseInfo?.posType == 'farms' ? currentPosBaseInfo?.id : currentPosBaseInfo?.posId,\n          poolAddress: currentPosBaseInfo?.clmmPool,\n          coinTypeA: currentPosBaseInfo?.coinTypeA,\n          coinTypeB: currentPosBaseInfo?.coinTypeB,\n          amountA,\n          amountB,\n          liquidity: removeLiquidityAmount,\n          lowerTick: currentPosBaseInfo?.lowerTick,\n          upperTick: currentPosBaseInfo?.upperTick,\n          posType: currentPosBaseInfo?.posType,\n          rewarderCoinTypes,\n          isAutoClaim\n        }\n        if (currentPosBaseInfo?.posType == 'farms') {\n          params['farmsPoolId'] = currentPosBaseInfo?.farmsPool\n          params['farmsPosId'] = currentPosBaseInfo?.id\n        }\n\n        if (isVestingPosAndRemoveAll) {\n          params['liquidity'] = currentPosBaseInfo.liquidity\n        }\n\n        toastInfo = {\n          getShowInfo: (status: TransactionStatusType, balanceChanges?: Record<string, BalanceChanges>) => {\n            const description =\n              'Remove ' +\n              [formatDescription(tokenAmountA, displayTokenA?.symbol), formatDescription(tokenAmountB, displayTokenB?.symbol)]\n                .filter(Boolean)\n                .join(' and ')\n\n            const info: CommonTypeInfo = {\n              modalDescriptionText: description,\n              toastTitleText: description\n            }\n\n            if (status === 'success') {\n              let amountAF = tokenAmountA\n              let amountBF = tokenAmountB\n\n              if (balanceChanges) {\n                amountAF = getBalanceChanges(balanceChanges, displayTokenA) || tokenAmountA\n                amountBF = getBalanceChanges(balanceChanges, displayTokenB) || tokenAmountB\n              }\n\n              info.toastDescriptionContent = ''\n              info.modalDescriptionText = ''\n              info.toastTitleText = 'Remove Liquidity Successful'\n            }\n\n            return info\n          }\n        }\n        transactionConfirmation(toastInfo)\n\n        console.log('🚀 ~ toAdd ~ params:', removeLiquidityAmount, isClosed, slideValue, params)\n        const payload = isClosed ? await getCloseTsPayload(params) : await getRemoveTsPayload(params, isVestingPosAndRemoveAll)\n        tx = payload.tx\n        msafeParams = payload.msafeParams\n      } else {\n        const posId: any = currentPosBaseInfo?.posType == 'farms' ? currentPosBaseInfo?.id : currentPosBaseInfo?.posId\n        toastInfo = getZapWithdrawToastInfo(showDisplayTokenALock, showDisplayTokenBLock)\n        transactionConfirmation(toastInfo)\n        const zapRes = await getZapWithdrawTx(\n          posId,\n          currentPosBaseInfo!.liquidity,\n          currentPosBaseInfo!.lowerTick,\n          currentPosBaseInfo!.upperTick,\n          rewarderCoinTypes,\n          currentPosBaseInfo?.posType == 'farms',\n          isVestingPos,\n          isAutoClaim\n        )\n\n        tx = zapRes.tx\n\n        if (zapRes.isClose) {\n          isClosed = true\n        }\n      }\n\n      const trackData = {\n        posId: currentPosBaseInfo?.posType == 'farms' ? currentPosBaseInfo?.id : currentPosBaseInfo?.posId,\n        poolAddress: currentPosBaseInfo?.clmmPool,\n        coinTypeA: currentPosBaseInfo?.coinTypeA,\n        coinTypeB: currentPosBaseInfo?.coinTypeB,\n        amountA,\n        amountB,\n        liquidity: removeLiquidityAmount,\n        lowerTick: currentPosBaseInfo?.lowerTick,\n        upperTick: currentPosBaseInfo?.upperTick,\n        posType: currentPosBaseInfo?.posType,\n        rewarderCoinType1: rewarderCoinTypes?.[0],\n        rewarderCoinType2: rewarderCoinTypes?.[1],\n        rewarderCoinType3: rewarderCoinTypes?.[2],\n        farmsPoolId: currentPosBaseInfo?.posType == 'farms' ? currentPosBaseInfo?.farmsPool : undefined,\n        slippage,\n        zapSlippage,\n        txAction: useZapIn ? 'removeLiquidity-zap' : 'removeLiquidity'\n      }\n\n      const res = await signAndExecuteTransaction(tx, toastInfo, {\n        useMev: mevProtect,\n        useFastMode: transactionMode === 'Fast Mode',\n        maxCapForGas,\n        customGasPrice,\n        msafeParams,\n        trackData\n      })\n      console.log('🚀 ~ toClaim ~ res:', res)\n\n      if (res) {\n        fetchAccountBalance()\n        resetInputAmount()\n        setZapAmount('')\n        if (isClosed || isVestingPosAndRemoveAll) {\n          setPosBaseList([])\n          navigate('/pools?tab=positions')\n        } else {\n          getCurrentPosBaseInfo(currentAccount!.address, currentPosBaseInfo!.id, true)\n          // getCurrentPosHistory(currentPosBaseInfo?.id as string, currentPosBaseInfo?.posId as string)\n        }\n      } else {\n        if (currentPosBaseInfo?.clmmPool) {\n          getContractPoolInfo(currentPosBaseInfo?.clmmPool).then(res => {\n            console.log('🚀 ~ toClaim ~ res:', res)\n            if (useZapIn) {\n              reCalculateZapData()\n            } else {\n              reCalculateResult()\n            }\n          })\n        }\n      }\n      setIsRemoveLoading(false)\n    } catch (error) {\n      reCalculateResult()\n      setIsRemoveLoading(false)\n      console.log('🚀 ~ toClaim ~ error:', error)\n    }\n  }\n\n  const amountBalance = useMemo(() => {\n    if (currentPosBaseInfo?.posId) {\n      const tokenA: Token = currentPosBaseInfo?.tokenA\n      const tokenB: Token = currentPosBaseInfo?.tokenB\n      const liquidity = currentPosBaseInfo?.liquidity\n      const lowerTick = currentPosBaseInfo?.lowerTick\n      const upperTick = currentPosBaseInfo?.upperTick\n\n      const params = { tokenA, tokenB, liquidity, currentSqrtPrice: currentPoolSqrtPrice, lowerTick, upperTick, roundUp: false }\n      const { amountA, amountB } = getCoinAmountFromLiquidity(params)\n    }\n  }, [currentPosBaseInfo?.posId, currentPoolSqrtPrice])\n\n  // 为方便zap时候展示某个币总额\n  const { onlyAmountA, onlyAmountB } = useMemo(() => {\n    return {\n      onlyAmountA: currentPosLiquidityData?.onlyAmountA,\n      onlyAmountB: currentPosLiquidityData?.onlyAmountB\n    }\n  }, [currentPosLiquidityData])\n\n  useEffect(() => {\n    if (useZapIn) {\n      if (zapAmount) {\n        const isCoin = currentApiPoolInfo?.tokenA?.coin_type === currentZapToken?.coin_type\n        const balance = isCoin ? onlyAmountA : onlyAmountB\n        if (balance) {\n          const value = formatNumber(d(zapAmount).div(balance).mul(100).toString(), 2, true)\n          setSlideValue(value)\n        } else {\n          setSlideValue('--')\n        }\n      } else {\n        setSlideValue('--')\n      }\n    } else {\n      setSlideValue('--')\n    }\n  }, [useZapIn, zapAmount])\n\n  // zapIn时候根据计算结果设置amountA,B,  主要为了左侧after相关展示\n  useEffect(() => {\n    if (currentPosDetailTab === 'increase') return\n    if (useZapIn) {\n      console.log('🚀 ~ usePosRemovePage111 ~ preDepositeData:', preDepositeData)\n      if (preDepositeData?.amount_a || preDepositeData?.amount_b) {\n        const tokenA = currentPosBaseInfo?.tokenA\n        const tokenB = currentPosBaseInfo?.tokenB\n        const amountA = bnToAmount(preDepositeData?.amount_a, tokenA?.decimals)\n        const amountB = bnToAmount(preDepositeData?.amount_b, tokenB?.decimals)\n\n        // 100%时候after设置为0\n        if (slideValue == 100) {\n          setTokenAmountA(String(tokenABalance))\n          setTokenAmountB(String(tokenBBalance))\n        } else {\n          const a = !currentPosBaseInfo?.isReverse ? amountA : amountB\n          const b = !currentPosBaseInfo?.isReverse ? amountB : amountA\n          setTokenAmountA(d(a).gt(tokenABalance) ? String(tokenABalance) : a)\n          setTokenAmountB(d(b).gt(tokenBBalance) ? String(tokenBBalance) : b)\n        }\n\n        return\n      }\n\n      setTokenAmountA('')\n      setTokenAmountB('')\n    }\n  }, [useZapIn, preDepositeData, slideValue])\n\n  useEffect(() => {\n    setTokenAmountA('')\n    setTokenAmountB('')\n  }, [])\n\n  useEffect(() => {\n    if (+slideValue && d(slideValue).eq(100)) {\n      setIsAutoClaim(true)\n    }\n  }, [slideValue])\n\n  return {\n    tokenAmountA,\n    tokenAmountB,\n    resetInputAmount,\n    showDisplayTokenALock,\n    showDisplayTokenBLock,\n    currentPosLiquidityData,\n    tokenABalance,\n    tokenBBalance,\n    displayTokenA,\n    displayTokenB,\n    tokenAmountValueA,\n    tokenAmountValueB,\n    preRemoveLoading,\n    handleAmountChange,\n    btnStatusText,\n    changeSlideFun,\n    toRemove,\n    isRemoveLoading,\n    onlyAmountA,\n    onlyAmountB,\n    currentApiPoolInfo,\n    currentPoolSqrtPrice\n  }\n}\n","import { RewardsCoin } from '@/components/farms/ExpendItem'\nimport useFarmsActions from '@/hooks/farms/useFarmsAction'\nimport useCurrentPos from '@/hooks/position/useCurrentPos'\nimport useGetFarmsPosRewards from '@/hooks/position/useGetFarmsPosRewards'\nimport usePosHelper from '@/hooks/position/usePosHelper'\nimport usePositionStore from '@/store/position'\nimport usePositionDetailStore from '@/store/position/detail'\nimport { PosBaseInfo, PosReward } from '@/types'\nimport { Block, CetusTooltip } from '@cetus/design/src/components/common'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { useAccountStore } from '@cetus/stores'\nimport { Icon } from '@cetus/ui-kit'\nimport { d } from '@cetusprotocol/common-sdk'\nimport { Box, Button, HStack, Image, Text, VStack } from '@chakra-ui/react'\nimport React, { useMemo } from 'react'\nimport { useNavigate } from 'react-router-dom'\n\ntype FarmsBlockProps = {\n  haveFarming: boolean\n}\n\nfunction FarmsBlock({ haveFarming }: FarmsBlockProps) {\n  const { isApp } = useWindowWidth()\n  const { currentPosBaseInfo, farmsPosRewardsData, posPoolsRelatedData, posBaseListLoading, posPoolsOriginalData } = usePositionStore()\n  const { currentPosPoolInfo } = usePositionDetailStore()\n  const { currentAccount } = useAccountStore()\n  const { getCurrentPosBaseInfo, getCurrentPosHistory } = useCurrentPos()\n  const { getFarmsRewardsData } = useGetFarmsPosRewards()\n\n  const { getClmmPosName } = usePosHelper()\n  const tokenName = useMemo(() => {\n    if (currentPosBaseInfo?.tokenName) {\n      return currentPosBaseInfo?.tokenName\n    } else {\n      const position_index = posPoolsOriginalData?.[currentPosBaseInfo?.clmmPool as string]?.index\n      return getClmmPosName(currentPosBaseInfo?.index as number, position_index) || ''\n    }\n  }, [currentPosBaseInfo?.tokenName, currentPosBaseInfo?.index, currentPosBaseInfo?.clmmPool, posPoolsOriginalData])\n\n  const currentPosPoolsRelatedData = posPoolsRelatedData[currentPosBaseInfo?.posId as string]\n  // const isActive = currentPosPoolsRelatedData?.currentStatus == 'Active'\n  const { getPosIsActive } = usePosHelper()\n\n  const isActive = useMemo(() => {\n    return getPosIsActive(currentPosBaseInfo as PosBaseInfo, posPoolsOriginalData?.[currentPosBaseInfo?.clmmPool || '']?.current_sqrt_price)\n  }, [currentPosBaseInfo, posPoolsOriginalData])\n\n  const posFarmsData = farmsPosRewardsData[currentPosBaseInfo?.id as string]\n  const farmsRewarderList = currentPosPoolInfo?.farmsRewarderList || []\n  const totalRewards = posFarmsData?.reduce((sum: number, item: any) => d(sum).add(item.display_amount_owed).toString(), 0)\n\n  const { toStakePos, toUnStakePos, toClaimPos, unstakeLoading, claimLoading } = useFarmsActions()\n\n  const navigate = useNavigate()\n\n  const stakeRefresh = (events: any) => {\n    navigate(`/position-detail/${events[0].parsedJson.wrapped_position_id}`, { replace: true })\n    setTimeout(() => {\n      getCurrentPosBaseInfo(currentAccount?.address as string, events[0].parsedJson.wrapped_position_id, true)\n    }, 2000)\n  }\n  const toStake = async () => {\n    toStakePos(currentPosBaseInfo as string, currentPosPoolInfo?.farmsPoolAddress, tokenName, stakeRefresh)\n  }\n\n  const unstakeRefresh = () => {\n    navigate(`/position-detail/${currentPosBaseInfo?.posId}`, { replace: true })\n    setTimeout(() => {\n      getCurrentPosBaseInfo(currentAccount?.address as string, currentPosBaseInfo?.posId as string, true)\n      // getCurrentPosHistory(currentPosBaseInfo?.id as string, currentPosBaseInfo?.posId as string)\n    }, 2000)\n  }\n  const toUnstack = async () => {\n    toUnStakePos(currentPosBaseInfo?.id as string, currentPosBaseInfo?.farmsPool as string, tokenName, unstakeRefresh)\n  }\n\n  const claimRefresh = () => {\n    setTimeout(() => {\n      getFarmsRewardsData([currentPosBaseInfo])\n      // getCurrentPosHistory(currentPosBaseInfo?.id as string, currentPosBaseInfo?.posId as string)\n    }, 2000)\n  }\n\n  const toClaim = async () => {\n    toClaimPos(currentPosBaseInfo?.id as string, currentPosBaseInfo?.farmsPool as string, claimRefresh)\n  }\n\n  // 计算仓位的amount 判断用哪个list做奖励的循环展示\n  const totalAmount = useMemo(() => {\n    if (posFarmsData?.length > 0) {\n      return posFarmsData.reduce((sum: any, rewardData: PosReward) => {\n        return d(sum).plus(rewardData?.display_amount_owed).toString()\n      }, '0')\n    }\n    return '0'\n  }, [posFarmsData, currentAccount?.address, claimLoading, unstakeLoading])\n\n  const isCanStake = useMemo(() => {\n    if (currentPosBaseInfo && currentPosPoolInfo) {\n      return currentPosBaseInfo.posType == 'clmm' && currentPosPoolInfo.haveFarming === true\n    }\n    return false\n  }, [currentPosBaseInfo?.posType, currentPosPoolInfo?.haveFarming])\n\n  if (!haveFarming && d(totalRewards).eq(0)) {\n    return null\n  }\n\n  return (\n    <>\n      {(currentPosPoolInfo?.farmsPoolAddress || d(totalAmount).gt(0)) && (\n        <VStack position=\"relative\" w=\"100%\" borderRadius=\"16px\" bg=\"linear-gradient( 180deg, #003125 0%, #111111 100%)\">\n          {haveFarming && (\n            <HStack position=\"relative\" zIndex={1} w=\"100%\" p={{ base: '12px 8px', lg: '12px 16px' }} justify=\"space-between\">\n              <VStack align=\"flex-start\">\n                <Text color=\"text_caption\">Farming</Text>\n                <Text color=\"primary_gray\" fontSize=\"12px\">\n                  Stake Position to Earn\n                </Text>\n              </VStack>\n              <HStack gap=\"4px\" p=\"12px 16px\">\n                <Text color=\"primary\" fontSize=\"12px\" fontWeight=\"500\">\n                  APR\n                </Text>\n                <Text color=\"primary\" fontSize=\"12px\" fontWeight=\"500\">\n                  {currentPosPoolInfo?.farmingAprDisplay}\n                  {/* <AprTooltip poolInfo={currentPosPoolInfo} isPosition={true} showAprSize=\"12px\" /> */}\n                </Text>\n                <HStack\n                  gap=\"4px\"\n                  cursor=\"pointer\"\n                  onClick={() => navigate('/farms')}\n                  sx={{\n                    _hover: {\n                      p: {\n                        color: 'text_caption'\n                      },\n                      svg: {\n                        fill: 'text_caption'\n                      }\n                    }\n                  }}\n                >\n                  <Icon boxW=\"14px\" boxH=\"14px\" xlinkHref=\"#icon-icon_list_token\" />\n                </HStack>\n              </HStack>\n            </HStack>\n          )}\n\n          <Block\n            position=\"relative\"\n            zIndex={1}\n            mt={haveFarming ? '-20px' : '0px'}\n            bg=\"none\"\n            p={{ base: '16px 8px 12px', lg: '20px 16px 16px' }}\n            borderRadius={haveFarming ? '0 0 12px 12px' : '12px'}\n            border=\"none\"\n          >\n            <Text fontSize=\"12px\" color=\"primary_gray\">\n              Farming Rewards\n            </Text>\n            <HStack w=\"100%\" flexWrap=\"wrap\">\n              {posFarmsData?.length > 0 && d(totalAmount).gt(0) ? (\n                posFarmsData?.map((item: any) => {\n                  return (\n                    <React.Fragment key={item?.rewarder_type}>\n                      {d(item?.display_amount_owed).gt(0) && (\n                        <RewardsCoin\n                          key={item?.coinType}\n                          coinType={item?.token?.coin_type}\n                          amount={item?.display_amount_owed}\n                          tokenInfo={item?.token}\n                          boxStyle={{ mt: '16px', w: 'calc(50% - 4px) ' }}\n                          textAlign=\"left\"\n                        />\n                      )}\n                    </React.Fragment>\n                  )\n                })\n              ) : farmsRewarderList?.length > 0 ? (\n                farmsRewarderList?.map((item: any) => {\n                  return (\n                    <RewardsCoin\n                      key={item?.coinType}\n                      coinType={item?.coinType}\n                      amount=\"0\"\n                      boxStyle={{ mt: '16px', w: 'calc(50% - 4px) ' }}\n                      textAlign=\"left\"\n                    />\n                  )\n                })\n              ) : (\n                <Text textColor=\"text_caption\" textAlign=\"right\" mt=\"8px\">\n                  --\n                </Text>\n              )}\n            </HStack>\n            <HStack w=\"100%\" justify=\"space-between\" mt=\"16px\">\n              {currentPosBaseInfo?.posType == 'farms' && (\n                <Button\n                  isDisabled={claimLoading || unstakeLoading}\n                  isLoading={unstakeLoading}\n                  variant=\"outline\"\n                  h=\"32px\"\n                  borderRadius=\"8px\"\n                  w=\"50%\"\n                  fontSize=\"14px\"\n                  bg=\"none\"\n                  onClick={toUnstack}\n                >\n                  Unstake\n                </Button>\n              )}\n              {isCanStake && !isActive && (\n                <Box w=\"50%\" sx={{ '>button': { w: '100%' } }}>\n                  <CetusTooltip\n                    placement=\"top\"\n                    tooltip={\n                      <Text fontSize=\"12px\" lineHeight=\"20px\" w=\"200px\">\n                        Farming rewards are only available for active positions.\n                      </Text>\n                    }\n                  >\n                    <Box w=\"100%\">\n                      <Button bg=\"none\" isDisabled={true} h=\"32px\" borderRadius=\"8px\" w=\"100%\" fontSize=\"14px\">\n                        Stake\n                      </Button>\n                    </Box>\n                  </CetusTooltip>\n                </Box>\n              )}\n\n              {isCanStake && isActive && (\n                <Button\n                  isDisabled={claimLoading || unstakeLoading}\n                  isLoading={unstakeLoading}\n                  h=\"32px\"\n                  borderRadius=\"8px\"\n                  w=\"50%\"\n                  fontSize=\"14px\"\n                  onClick={toStake}\n                >\n                  Stake\n                </Button>\n              )}\n              <Button\n                isDisabled={claimLoading || unstakeLoading || d(totalRewards).eq(0)}\n                isLoading={claimLoading}\n                variant=\"outline\"\n                h=\"32px\"\n                borderRadius=\"8px\"\n                w=\"50%\"\n                bg=\"none\"\n                fontSize=\"14px\"\n                onClick={toClaim}\n              >\n                Claim rewards\n              </Button>\n            </HStack>\n          </Block>\n          <Image\n            src=\"/images/img_farming@2x.png\"\n            w={haveFarming ? '169px' : '128px'}\n            h={haveFarming ? '169px' : '128px'}\n            position=\"absolute\"\n            right=\"20px\"\n            top=\"50%\"\n            transform=\"translateY(-50%)\"\n            opacity=\"0.1\"\n          />\n        </VStack>\n      )}\n    </>\n  )\n}\nexport default FarmsBlock\n","import { Block } from '@cetus/design'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { HStack, Popover, PopoverBody, PopoverContent, PopoverTrigger, Switch, Text } from '@chakra-ui/react'\n\ntype ZapSwitchProps = {\n  value: boolean\n  action: 'Deposit' | 'Withdraw'\n  onChange: () => void\n}\nfunction ZapSwitch(props: ZapSwitchProps) {\n  const { value, action, onChange } = props\n  const { isApp } = useWindowWidth()\n  return (\n    <Block bg=\"none\" border=\"none\" padding=\"6px 0px\" borderRadius=\"8px\" width=\"unset\">\n      <Popover isLazy trigger={isApp ? 'click' : 'hover'} placement=\"top\" autoFocus={false} returnFocusOnClose={false}>\n        <PopoverTrigger>\n          <HStack h=\"14px\" cursor=\"pointer\">\n            <Text whiteSpace=\"nowrap\" fontSize=\"14px\" color={value ? 'primary' : ''} fontWeight=\"500\">\n              Zap {action === 'Deposit' ? 'In' : 'Out'}\n            </Text>\n            <Switch\n              isChecked={value}\n              onChange={() => {\n                onChange()\n              }}\n            />\n          </HStack>\n        </PopoverTrigger>\n        <PopoverContent>\n          <PopoverBody p=\"12px\" lineHeight=\"20px\" fontSize=\"12px\">\n            {action == 'Deposit'\n              ? 'Through Zap-In, you can deposit your liquidity in single token or with customized token ratio. Tokens will be auto converted to match the required ratio. '\n              : 'Through Zap-Out, you can withdraw your liquidity in one token. The liquidity will be auto converted to one token you selected.'}\n          </PopoverBody>\n        </PopoverContent>\n      </Popover>\n    </Block>\n  )\n}\n\nexport default ZapSwitch\n","import ZapSwitch from '@/components/zap/ZapSwitch'\nimport usePositionDetailStore from '@/store/position/detail'\nimport useZapStore from '@/store/zap'\nimport { HStack, Text } from '@chakra-ui/react'\nimport { useEffect } from 'react'\n\nexport default function TradeTitle({\n  action,\n  haveZap,\n  resetInputAmount\n}: {\n  action: 'Deposit' | 'Withdraw'\n  haveZap?: boolean\n  resetInputAmount?: () => void\n}) {\n  const { useZapIn, setUseZapIn } = usePositionDetailStore()\n  const { setZapAmount, setPreDepositeData } = useZapStore()\n\n  const handleChangeZap = () => {\n    resetInputAmount?.()\n    setUseZapIn(!useZapIn)\n    setZapAmount('')\n  }\n\n  useEffect(() => {\n    setUseZapIn(false)\n    setPreDepositeData(undefined)\n  }, [action])\n\n  return (\n    <HStack w=\"100%\" justify=\"space-between\" align=\"center\" mb=\"16px\">\n      <Text color=\"primary_gray\" fontSize=\"14px\">\n        {action === 'Withdraw' ? 'Remove Amounts' : 'Deposit Amounts'}\n      </Text>\n      <ZapSwitch action={action} value={useZapIn} onChange={handleChangeZap} />\n    </HStack>\n  )\n}\n","import ZapDeposite from '@/components/zap/ZapDeposite'\nimport ZapSubmiteInfo from '@/components/zap/ZapSubmiteInfo'\n\nimport usePosRemovePage from '@/hooks/position/usePosRemovePage'\nimport usePositionStore from '@/store/position'\nimport usePositionDetailStore from '@/store/position/detail'\nimport { SelectTab, TradeInputGroup } from '@cetus/design'\nimport { Tab } from '@cetus/design/src/components/common/SelectTab'\nimport { d, formatNumberWithDown } from '@cetus/utils'\nimport { Box, Button, HStack, Slider, SliderFilledTrack, SliderThumb, SliderTrack, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useMemo } from 'react'\nimport { AutoClaimCheckBox } from '../../common/AutoClaimCheckBox'\nimport FarmsBlock from './FarmsBlock'\nimport TradeTitle from './TradeTitle'\n\nexport default function RemoveBlock() {\n  const { currentPosBaseInfo, posPoolsRelatedData } = usePositionStore()\n  const { isFixedDisplayTokenA, slideValue, setSlideValue, curPosContractPoolInfo, useZapIn, currentPosPoolInfo, isAutoClaim, setIsAutoClaim } =\n    usePositionDetailStore()\n  const {\n    tokenAmountA,\n    tokenAmountB,\n    tokenABalance,\n    tokenBBalance,\n    displayTokenA,\n    displayTokenB,\n    tokenAmountValueA,\n    tokenAmountValueB,\n    preRemoveLoading,\n    handleAmountChange,\n    changeSlideFun,\n    btnStatusText,\n    toRemove,\n    isRemoveLoading,\n    showDisplayTokenALock,\n    showDisplayTokenBLock,\n    resetInputAmount,\n    onlyAmountA,\n    onlyAmountB,\n    currentApiPoolInfo,\n    currentPoolSqrtPrice,\n    currentPosLiquidityData\n  } = usePosRemovePage()\n\n  useEffect(() => {\n    return () => {\n      resetInputAmount()\n    }\n  }, [])\n\n  const changeSlideValue = (value: string | number) => {\n    console.log('🚀 ~ changeSlideValue ~ value:', value)\n    if (value == 'MAX' || value == 100) {\n      setSlideValue(100)\n\n      changeSlideFun(100)\n    } else {\n      setSlideValue(Number((value + '').split('%')[0]))\n      changeSlideFun(Number((value + '').split('%')[0]))\n    }\n  }\n  useEffect(() => {\n    return setSlideValue('--')\n  }, [])\n\n  const currentPosPoolsRelatedData = posPoolsRelatedData[currentPosBaseInfo?.posId]\n\n  return (\n    <VStack w=\"100%\" gap=\"16px\">\n      <VStack w=\"100%\" position=\"relative\" gap=\"16px\" p=\"0 16px 16px\" bg=\"card_bg\" borderRadius=\"0px 0px 16px 16px\">\n        <Box w=\"100%\">\n          {currentApiPoolInfo?.haveZap && currentPosBaseInfo?.posType !== 'burn' && !showDisplayTokenALock && !showDisplayTokenBLock && (\n            <TradeTitle action=\"Withdraw\" resetInputAmount={resetInputAmount} />\n          )}\n          {useZapIn ? (\n            <ZapDeposite\n              action=\"Withdraw\"\n              apiPoolInfo={currentApiPoolInfo}\n              currentSqrtPrice={currentPoolSqrtPrice}\n              onlyAmountA={onlyAmountA}\n              onlyAmountB={onlyAmountB}\n              liquidity={currentPosBaseInfo?.liquidity}\n              lowerTick={currentPosBaseInfo?.lowerTick}\n              upperTick={currentPosBaseInfo?.upperTick}\n              slideValue={String(slideValue)}\n              currentPosLiquidityData={currentPosLiquidityData}\n              changeSlideValue={changeSlideValue}\n            />\n          ) : (\n            <>\n              <TradeInputGroup\n                from={{\n                  rightJustify: 'space-around',\n                  wrapStyle: {\n                    h: '108px',\n                    borderRadius: '12px'\n                  },\n                  balance: tokenABalance || '',\n                  value: tokenAmountA,\n                  amountValue: tokenAmountValueA,\n                  loading: !isFixedDisplayTokenA && preRemoveLoading,\n                  onChange: value => {\n                    handleAmountChange(value, true)\n                  },\n                  needRemainBalance: false,\n                  placeholder: '0.0',\n                  balanceLabel: 'Available',\n                  token: displayTokenA,\n                  half: false,\n                  lock: {\n                    isLock: currentPosBaseInfo && curPosContractPoolInfo && showDisplayTokenALock,\n                    style: {\n                      borderRadius: '12px'\n                    }\n                  }\n                }}\n                to={{\n                  rightJustify: 'space-around',\n                  wrapStyle: {\n                    h: '108px',\n                    borderRadius: '12px'\n                  },\n                  balance: tokenBBalance || '',\n                  value: tokenAmountB,\n                  amountValue: tokenAmountValueB,\n                  loading: isFixedDisplayTokenA && preRemoveLoading,\n                  onChange: value => {\n                    handleAmountChange(value, false)\n                  },\n                  needRemainBalance: false,\n                  placeholder: '0.0',\n                  balanceLabel: 'Available',\n                  token: displayTokenB,\n                  half: false,\n                  lock: {\n                    isLock: currentPosBaseInfo && curPosContractPoolInfo && showDisplayTokenBLock,\n                    style: {\n                      borderRadius: '12px'\n                    }\n                  }\n                }}\n                lock={{\n                  isLock: !currentPosBaseInfo || !curPosContractPoolInfo || (currentPosBaseInfo && currentPosBaseInfo?.posType == 'burn'),\n                  text: currentPosBaseInfo && currentPosBaseInfo?.posType == 'burn' ? 'Your liquidity has been permanently locked' : undefined,\n                  style: {\n                    h: '224px',\n                    borderRadius: '12px'\n                  }\n                }}\n              />\n            </>\n          )}\n        </Box>\n        {currentPosBaseInfo?.posType !== 'burn' && (\n          <PositionSlider\n            sliderBg=\"bg_secondary\"\n            percentage={slideValue}\n            onChange={(value: string | number) => changeSlideValue(value)}\n            textFontSize=\"20px\"\n            sliderTrackHeight=\"8px\"\n          />\n        )}\n\n        <AutoClaimCheckBox\n          checked={isAutoClaim}\n          isDisabled={+slideValue ? d(slideValue).eq(100) : false}\n          onChange={() => {\n            setIsAutoClaim(!isAutoClaim)\n          }}\n        />\n\n        {useZapIn ? (\n          <ZapSubmiteInfo\n            action=\"Withdraw\"\n            onClick={toRemove}\n            hideDepositRatio={true}\n            isPositionStyle={true}\n            otherLoading={isRemoveLoading}\n            isReverse={currentPosBaseInfo?.isReverse}\n          />\n        ) : (\n          <Button\n            isLoading={isRemoveLoading}\n            onClick={toRemove}\n            disabled={btnStatusText.disabled || isRemoveLoading || currentPosBaseInfo?.isFrozen}\n            w=\"100%\"\n            h=\"56px\"\n            fontSize=\"20px\"\n            fontWeight=\"500\"\n          >\n            {btnStatusText.text}\n          </Button>\n        )}\n      </VStack>\n\n      {currentPosBaseInfo?.posType !== 'burn' && <FarmsBlock haveFarming={currentPosPoolInfo?.haveFarming} />}\n      {/* {currentPosPoolsRelatedData && currentPosPoolsRelatedData?.minPrice !== '0' && currentPosPoolsRelatedData?.maxPrice !== '∞' && (\n        <RangeAlerts subscriptionSource=\"PositionDetail\" />\n      )} */}\n    </VStack>\n  )\n}\n\nexport function PercentageTab(props: {\n  percentage: string | number\n  onChange: (value: string | number) => void\n  wrapStyle?: {}\n  selectTabStyle?: {}\n  selectTabItemStyle?: {}\n  selectTabItemTextStyle?: {}\n  textFontSize?: string\n  isShowPercentageText?: boolean\n  percentageTextMinW?: string\n}) {\n  const {\n    percentage,\n    onChange,\n    wrapStyle,\n    textFontSize,\n    selectTabStyle,\n    selectTabItemStyle,\n    selectTabItemTextStyle,\n    isShowPercentageText = true,\n    percentageTextMinW = '62px'\n  } = props\n  const tabList: Tab[] = [{ label: '25%' }, { label: '50%' }, { label: '75%' }, { label: 'MAX' }]\n\n  const currentTab = useMemo(() => {\n    if (percentage === '--' || Number(percentage) !== 100) {\n      return `${percentage}%`\n    } else {\n      return 'MAX'\n    }\n  }, [percentage])\n\n  return (\n    <HStack w=\"100%\" {...wrapStyle}>\n      {isShowPercentageText && (\n        <Text minW={percentageTextMinW} fontSize={textFontSize} color=\"text_caption\">\n          {percentage == '--' ? '--' : d(percentage).gt(0) && Number(percentage) < 0.01 ? '<0.01' : formatNumberWithDown(percentage, 2)}%\n        </Text>\n      )}\n\n      <SelectTab\n        type=\"outlineTab\"\n        tabList={tabList}\n        currentTab={currentTab}\n        handleChangeTab={tab => {\n          if (tab.label === 'MAX') {\n            onChange(100)\n          } else {\n            onChange(tab.label.replace('%', ''))\n          }\n        }}\n        wrapStyle={selectTabStyle}\n        itemStyle={selectTabItemStyle}\n        selectTabItemTextStyle={selectTabItemTextStyle}\n      />\n    </HStack>\n  )\n}\n\nexport function PositionSlider(props: {\n  percentage: string | number\n  onChange: (value: string | number) => void\n  percentageTextMinW?: '62px'\n  textFontSize?: string\n  sliderBg?: string\n  sliderTrackHeight?: string\n}) {\n  const { percentage, onChange, percentageTextMinW, textFontSize = '24px', sliderBg = 'bg_four', sliderTrackHeight = '4px' } = props\n  return (\n    <Box w=\"100%\">\n      <PercentageTab\n        percentage={percentage}\n        onChange={onChange}\n        percentageTextMinW={percentageTextMinW}\n        wrapStyle={{\n          justifyContent: 'space-between'\n        }}\n        selectTabStyle={{\n          w: { base: '220px', lg: '310px' },\n          h: '32px',\n          p: '3px',\n          borderRadius: '8px'\n        }}\n        selectTabItemStyle={{\n          flex: '1',\n          fontSize: '14px',\n          margin: '0px'\n        }}\n        textFontSize={textFontSize}\n      />\n      <Box mt=\"10px\" w=\"100%\">\n        <Slider\n          aria-label=\"slider-ex-1\"\n          min={0}\n          max={100}\n          focusThumbOnChange={false}\n          value={percentage == '--' ? 0 : Number(percentage)}\n          onChange={value => onChange(value + '%')}\n        >\n          <SliderTrack bg={sliderBg} h={sliderTrackHeight}>\n            <SliderFilledTrack h=\"4px\" />\n          </SliderTrack>\n          <SliderThumb />\n        </Slider>\n      </Box>\n    </Box>\n  )\n}\n"],"names":["ZapTabs","tokens","current","onSelect","zapTabList","useMemo","item","currentTab","_a","handleChangeTab","currentToken","token","jsx","Box","SelectTab","useZap","action","apiPoolInfo","currentSqrtPrice","lowerTick","upperTick","onlyAmountA","onlyAmountB","liquidity","slideValue","currentPosLiquidityData","currentTokens","setCurrentTokens","zapAmount","setZapAmount","currentZapToken","setCurrentZapToken","zapAmountRate","setZapAmountRate","setZapTokenBalance","zapTokenBalance","setPreDepositeData","setIsPreLoading","setZapApiPool","lower","upper","setLower","setUpper","setZapCurrPriceData","resetZapData","setLiquidity","setZapSlideValue","setPosOriginAmounts","useZapStore","zapSlippage","useGlobalStore","balanceInfo","useGetTokenBalance","getTokenAmountValue","useTokenPrice","uuid","setUuid","useState","useEffect","decimalsA","decimalsB","_b","currentPrice","TickMath","BN","arr","handleChangeAmount","value","handleChangeZapToken","rate","isCoinA","ZapDeposite","d","jsxs","VStack","TradeInput","useZapSubmit","type","isPreLoading","preDepositeData","zapApiPool","zapCurrPriceData","zapSlideValue","currentAccount","onWalletModal","useAccountStore","setConfirmModalOpen","useAddLiquidityStore","zapSdk","useSdk","slippage","zapNotAvailable","setZapNotAvailable","getTokenPrice","tokenAPrice","tokenBPrice","marketPrice","submitBtnInfo","btnInfo","textEllipses","handleZapIn","debounce","getSubmitBaseInfo","amountA","amountB","tokenA","tokenB","displayTokenA","displayTokenB","dispalyAmountA","bnToAmount","dispalyAmountB","getZapDepositToastInfo","status","balanceChanges","description","info","amountAF","amountBF","getBalanceChanges","getZapDepositTx","isFarm","posObj","params","tx","getZapWithdrawToastInfo","showDisplayTokenALock","showDisplayTokenBLock","formatNumberWithDown","getZapWithdrawTx","posId","collect_rewarder_types","isVestingPos","isAutoClaim","isRemoveAll","preZapParamsRef","useRef","zapProgressRef","zapUuidRef","isMinimumPrecision","preZapIn","mode","coinAmount","fixDown","options","modeOptions","res","error","preZapOut","debouncedPreZapIn","useDebounceFunction","debouncedPreZapOut","reCalculateZapData","handleResetZapProgress","v4","ZapSubmiteInfo","onClick","hideAmountInfo","otherLoading","isReverse","inConfirmModal","hideDepositRatio","isPositionStyle","btnDisabled","btnText","handleOnClick","isOpen","setIsOpen","posOriginAmounts","fromCoin","toCoin","fromAmount","toAmount","sources","priceImpactTextInfo","showPriceImpactTips","usePriceImpact","isToggle","setIsToggle","handleToggleRate","minimumReceived","currentPriceRate","handleRefresh","coinAmountA","coinAmountB","displayCoinAmountA","displayCoinAmountB","displayAmountARate","displayAmountBRate","amountARate","amountBRate","originPosAmountA","originPosAmountB","percentMap","setPercentMap","isFullRange","checkFullRange","rateMap","calcCoinProportion","isApp","useWindowWidth","errorTips","Fragment","Button","ErrorTips","HStack","Text","formatCurrencyWithKMB","Skeleton","FreshProgressV2","source","MarketSource","Icon","Slippage","formatPrice","DepositRatio","PosAmountInfo","amount","loading","align","SkeletonCircle","SingleCoinImage","useCurrentApiPool","currentPosBaseInfo","posApiPoolData","useGetCurrentPrice","setCurrentPriceData","useLiquidityStore","currentTickIndex","reverseCurrentPrice","data","useGetContractPoolInfo","clmmSdk","fetchTokenInfo","useGetToken","contractPoolInfo","setContractPoolInfo","setContractPoolInfoLoading","setApiPoolInfo","setApiPoolInfoLoading","setFromToken","setToToken","getCurrentPrice","getContractPoolInfo","poolAddress","poolInfo","r","apiPool","formatApiPoolByContractPool","cPool","name","feeRate","fee","feeDisplay","getPoolDirection","isFrozen","FrozenPools","usePosRemovePage","transactionConfirmation","useTransactionModal","getCoinAmountFromLiquidity","useGetPosLiquiditys","posLiquidityData","posRewardsData","setPosBaseList","usePositionStore","getCurrentPosBaseInfo","useCurrentPos","preAdd","usePosAdd","getRemoveTsPayload","getCloseTsPayload","usePosRemove","getTokenALock","getTokenBLock","usePosHelper","setTokenAmountAfterA","setTokenAmountAfterB","currentPosPoolInfo","currentPoolSqrtPrice","setIsFixedDisplayTokenA","setSlideValue","isFixedDisplayTokenA","isPosDetailRefresh","currentPosDetailTab","useZapIn","curPosContractPoolInfo","setIsAutoClaim","usePositionDetailStore","currentApiPoolInfo","currentPosRewardsData","mevProtect","maxCapForGas","transactionMode","customGasPrice","tokenAmountA","setTokenAmountA","tokenAmountB","setTokenAmountB","preRemoveLoading","setPreRemoveLoading","removeLiquidityAmount","setRemoveLiquidityAmount","tokenABalance","tokenBBalance","tokenAmountValueA","tokenAmountValueB","numA","numB","uuidRef","resetInputAmount","showTokenALock","showTokenBLock","debouncedPreCalculate","is_fixed_displaytokenA","decimals","amountBN","amountToBN","liquidityAmount","slide","formatNumber","isUpdateSlider","setIsUpdateSlider","reCalculateResult","isAvailableObject","changeSlideFun","handleAmountChange","num","balance","btnStatusText","signAndExecuteTransaction","useTransaction","fetchAccountBalance","useAccountBalance","isRemoveLoading","setIsRemoveLoading","navigate","useNavigate","toRemove","isClosed","isVestingPosAndRemoveAll","rewarderCoinTypes","_c","msafeParams","toastInfo","zapRes","Decimal","formatDescription","payload","trackData","a","b","FarmsBlock","haveFarming","farmsPosRewardsData","posPoolsRelatedData","posBaseListLoading","posPoolsOriginalData","getFarmsRewardsData","useGetFarmsPosRewards","getClmmPosName","tokenName","position_index","getPosIsActive","isActive","posFarmsData","farmsRewarderList","totalRewards","sum","toStakePos","toUnStakePos","toClaimPos","unstakeLoading","claimLoading","useFarmsActions","stakeRefresh","events","toStake","unstakeRefresh","toUnstack","claimRefresh","toClaim","totalAmount","rewardData","isCanStake","Block","React","RewardsCoin","CetusTooltip","Image","ZapSwitch","props","onChange","Popover","PopoverTrigger","Switch","PopoverContent","PopoverBody","TradeTitle","haveZap","setUseZapIn","handleChangeZap","RemoveBlock","changeSlideValue","TradeInputGroup","PositionSlider","AutoClaimCheckBox","PercentageTab","percentage","wrapStyle","textFontSize","selectTabStyle","selectTabItemStyle","selectTabItemTextStyle","isShowPercentageText","percentageTextMinW","tabList","tab","sliderBg","sliderTrackHeight","Slider","SliderTrack","SliderFilledTrack","SliderThumb"],"mappings":"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"}