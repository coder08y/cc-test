{"version":3,"file":"useTokenBalance-EOIPKTy-.js","sources":["../../../hooks/src/useTokenBalance.ts"],"sourcesContent":["import { useAccountStore } from '@cetus/stores'\nimport useTokenBalanceStore from '@cetus/stores/src/tokenBalance'\nimport { BalanceInfo, Token } from '@cetus/types/src/common-types'\nimport { bnToAmount } from '@cetus/utils'\nimport { extractStructTagFromType } from '@cetusprotocol/common-sdk'\nimport Decimal from 'decimal.js'\nimport { useCallback, useMemo } from 'react'\nimport { useAccountBalance } from '.'\nimport { formatNumber } from '../../utils/src/formatter'\n\nexport function useGetTokenBalance(coin?: Token) {\n  const { tokenBalanceObj } = useTokenBalanceStore()\n  const { currentAccount } = useAccountStore()\n  const { fetchCoinBalance } = useAccountBalance()\n\n  const getBalanceInfoFromCache = useCallback(\n    (token?: Token): BalanceInfo | undefined => {\n      if (token) {\n        const info = tokenBalanceObj[extractStructTagFromType(token.coin_type).full_address]\n\n        if (info) {\n          const totalBalance = info.totalBalance\n          const balanceFormat = bnToAmount(totalBalance, token.decimals).toString()\n          const balanceDisplay = formatNumber(balanceFormat, undefined, undefined, Decimal.ROUND_DOWN).toString()\n          return {\n            balance: info.totalBalance,\n            balanceFormat,\n            balanceDisplay\n          }\n        }\n        return undefined\n      }\n\n      return undefined\n    },\n    [tokenBalanceObj]\n  )\n\n  const balanceInfo = useMemo((): BalanceInfo | undefined => {\n    return getBalanceInfoFromCache(coin)\n  }, [coin?.coin_type, tokenBalanceObj, currentAccount?.address])\n\n  return {\n    balanceInfo,\n    getBalanceInfoFromCache,\n    fetchCoinBalance,\n    tokenBalanceObj\n  }\n}\n"],"names":["useGetTokenBalance","coin","tokenBalanceObj","useTokenBalanceStore","currentAccount","useAccountStore","fetchCoinBalance","useAccountBalance","getBalanceInfoFromCache","useCallback","token","info","extractStructTagFromType","totalBalance","balanceFormat","bnToAmount","balanceDisplay","formatNumber","Decimal","useMemo"],"mappings":"qKAUO,SAASA,EAAmBC,EAAc,CAC/C,KAAM,CAAE,gBAAAC,CAAA,EAAoBC,EAAA,EACtB,CAAE,eAAAC,CAAA,EAAmBC,EAAA,EACrB,CAAE,iBAAAC,CAAA,EAAqBC,EAAA,EAEvBC,EAA0BC,EAAAA,YAC7BC,GAA2C,CAC1C,GAAIA,EAAO,CACT,MAAMC,EAAOT,EAAgBU,EAAyBF,EAAM,SAAS,EAAE,YAAY,EAEnF,GAAIC,EAAM,CACR,MAAME,EAAeF,EAAK,aACpBG,EAAgBC,EAAWF,EAAcH,EAAM,QAAQ,EAAE,SAAA,EACzDM,EAAiBC,EAAaH,EAAe,OAAW,OAAWI,EAAQ,UAAU,EAAE,SAAA,EAC7F,MAAO,CACL,QAASP,EAAK,aACd,cAAAG,EACA,eAAAE,CAAA,CAEJ,CACA,MACF,CAGF,EACA,CAACd,CAAe,CAAA,EAOlB,MAAO,CACL,YALkBiB,EAAAA,QAAQ,IACnBX,EAAwBP,CAAI,EAClC,CAACA,GAAA,YAAAA,EAAM,UAAWC,EAAiBE,GAAA,YAAAA,EAAgB,OAAO,CAAC,EAI5D,wBAAAI,EACA,iBAAAF,EACA,gBAAAJ,CAAA,CAEJ"}