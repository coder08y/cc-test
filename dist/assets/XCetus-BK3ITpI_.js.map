{"version":3,"file":"XCetus-BK3ITpI_.js","sources":["../../src/components/xcetus/RewardCountDown.tsx","../../src/components/xcetus/RewardVesting.tsx","../../src/components/xcetus/ESTAprTooltip.tsx","../../src/components/xcetus/StakeRewardSummary.tsx","../../src/components/xcetus/XCetusTopHerder.tsx","../../src/pages/XCetus.tsx"],"sourcesContent":["import { Block } from '@cetus/design'\nimport useCountdown from '@cetus/hooks/src/useCountdown'\nimport { Center, HStack, Text, VStack } from '@chakra-ui/react'\n\nexport function RewardCountDown({ nextStartTime, refresh }: { nextStartTime: number; refresh: () => void }) {\n  const { days, hours, minutes, seconds } = useCountdown(nextStartTime * 1000, refresh)\n  return (\n    <VStack\n      w=\"100%\"\n      gap=\"16px\"\n      borderRadius=\"16px\"\n      m=\"-1px\"\n      p={{ base: '24px 12px', lg: '24px' }}\n      sx={{\n        backgroundImage: \"url('/images/img_xcetus@2x.png')\",\n        backgroundPosition: 'top center',\n        backgroundRepeat: 'no-repeat',\n        backgroundSize: 'cover'\n      }}\n    >\n      <Text fontSize=\"16px\" color=\"text_caption\">\n        Convert CETUS to xCETUS to start earning\n      </Text>\n      <Text>Reward distribution in </Text>\n      {/* 奖励倒计时 */}\n      <HStack>\n        {/* 天 */}\n        <Block borderRadius=\"4px\" p=\"0px\" bg=\"block_color\" borderColor=\"transparent\">\n          <Center w=\"40px\" h=\"40px\" textAlign=\"center\">\n            <Text fontSize=\"16px\" textColor=\"text_caption\">\n              {days}d\n            </Text>\n          </Center>\n        </Block>\n        <Text fontSize=\"16px\" textColor=\"text_caption\">\n          :\n        </Text>\n\n        {/* 时 */}\n        <Block borderRadius=\"4px\" w=\"40px\" h=\"40px\" p=\"0px\" bg=\"block_color\" borderColor=\"transparent\">\n          <Center w=\"40px\" h=\"40px\" textAlign=\"center\">\n            <Text fontSize=\"16px\" textColor=\"text_caption\">\n              {hours}h\n            </Text>\n          </Center>\n        </Block>\n        <Text fontSize=\"16px\" textColor=\"text_caption\">\n          :\n        </Text>\n\n        {/* 分 */}\n        <Block borderRadius=\"4px\" w=\"40px\" h=\"40px\" p=\"0px\" bg=\"block_color\" borderColor=\"transparent\">\n          <Center w=\"40px\" h=\"40px\" textAlign=\"center\">\n            <Text fontSize=\"16px\" textColor=\"text_caption\">\n              {minutes}m\n            </Text>\n          </Center>\n        </Block>\n        <Text fontSize=\"16px\" textColor=\"text_caption\">\n          :\n        </Text>\n\n        {/* 秒 */}\n        <Block borderRadius=\"4px\" w=\"40px\" h=\"40px\" p=\"0px\" bg=\"block_color\" borderColor=\"transparent\">\n          <Center w=\"40px\" h=\"40px\" textAlign=\"center\">\n            <Text fontSize=\"16px\" textColor=\"text_caption\">\n              {seconds}s\n            </Text>\n          </Center>\n        </Block>\n      </HStack>\n    </VStack>\n  )\n}\n","import useXCetusCancelAction from '@/hooks/xcetus/useXCetusCancelAction'\nimport useXCetusClaimAction from '@/hooks/xcetus/useXCetusClaimAction'\nimport { Block } from '@cetus/design'\nimport useCountdown from '@cetus/hooks/src/useCountdown'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { LockCetus, XCetusUtil } from '@cetusprotocol/xcetus-sdk'\nimport { Button, HStack, Stack, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useState } from 'react'\nimport XCetusToCetus from './XCetusToCetus'\n\ntype RewardVestingProps = {\n  lockCetusList: LockCetus[]\n}\n\nexport function RewardVesting(props: RewardVestingProps) {\n  const { lockCetusList } = props\n  return (\n    <Block p={{ base: '16px 8px 8px', lg: '16px' }} borderRadius=\"16px\">\n      <VStack w=\"100%\" alignItems=\"start\" gap=\"16px\">\n        <Text fontSize=\"16px\" color=\"text_caption\" mt=\"4px\">\n          Vesting\n        </Text>\n\n        {lockCetusList.map(item => {\n          return <RewardVestingItem key={item.id} info={item} />\n        })}\n      </VStack>\n    </Block>\n  )\n}\n\ntype RewardVestingItemProps = {\n  info: LockCetus\n}\n\nfunction RewardVestingItem(props: RewardVestingItemProps) {\n  const { info } = props\n  const [isCanClaim, setIsCanClaim] = useState<boolean>(false)\n  const { days, hours, minutes, seconds } = useCountdown(\n    info.locked_until_time * 1000,\n    () => {\n      setIsCanClaim(true)\n    },\n    'days'\n  )\n\n  useEffect(() => {\n    setIsCanClaim(!XCetusUtil.isLocked(info))\n  }, [])\n\n  const { cancelOrderLoading, handleCancelOrder } = useXCetusCancelAction()\n  const { claimOrderLoading, handleClaimOrder } = useXCetusClaimAction()\n  const handleButtonClick = (isClickClaim: boolean) => {\n    if (isClickClaim) {\n      handleClaimOrder(info.id)\n    } else {\n      handleCancelOrder(info)\n    }\n  }\n  const { isApp } = useWindowWidth()\n  return (\n    <Block borderRadius=\"12px\" p={{ base: '20px 12px', lg: '20px 24px' }} bg=\"bg_primary\">\n      <Stack\n        flexDir={{ base: 'column', lg: 'row' }}\n        w=\"100%\"\n        justifyContent={{ base: 'flex-start', lg: 'space-between' }}\n        gap={{ base: '20px', lg: '8px' }}\n      >\n        <VStack gap={{ base: '20px', lg: '8px' }} alignItems=\"start\">\n          <HStack gap=\"6px\">\n            <Text color=\"primary_gray\">Available {isCanClaim ? '' : ' in'} </Text>\n            {!isCanClaim && (\n              <Text color=\"text_caption\">\n                {days}d : {hours}h : {minutes}m : {seconds}s\n              </Text>\n            )}\n          </HStack>\n          <XCetusToCetus xcetus_amount={info?.xcetus_amount} cetus_amount={info?.cetus_amount} />\n        </VStack>\n        <HStack w={{ base: '100%', lg: 'auto' }} justify=\"center\">\n          <Button\n            onClick={() => {\n              if (cancelOrderLoading || claimOrderLoading) {\n                return\n              }\n\n              if (isCanClaim) {\n                handleButtonClick(true)\n              } else {\n                handleButtonClick(false)\n              }\n            }}\n            variant=\"outline\"\n            h={{ base: '40px', lg: '28px' }}\n            w={{ base: '168px', lg: '80px' }}\n            borderRadius={{ base: '12px', lg: '8px' }}\n            fontSize=\"14px\"\n            isLoading={cancelOrderLoading || claimOrderLoading}\n            color={isCanClaim ? 'text_highlight' : 'primary_gray'}\n            bg=\"button_ghost_bg\"\n          >\n            {isCanClaim ? 'Claim' : 'Cancel'}\n          </Button>\n        </HStack>\n      </Stack>\n    </Block>\n  )\n}\n","import { CetusTooltip } from '@cetus/design'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { Box, Text } from '@chakra-ui/react'\n\ntype Props = {\n  children: React.ReactNode\n}\nfunction ESTAprTooltip({ children }: Props) {\n  const { isApp } = useWindowWidth()\n  return (\n    <CetusTooltip\n      placement={isApp ? 'bottom-end' : 'top-start'}\n      maxW={{ base: 'calc(100vw - 16px)', lg: 'unset' }}\n      tooltip={\n        <Box as=\"div\" lineHeight=\"20px\" maxW=\"280px\">\n          <Text as=\"span\" fontSize=\"12px\" color=\"text_caption\">\n            The estimated APR of the current epoch for all xCETUS holders.&nbsp;\n          </Text>\n          <Text as=\"span\" fontSize=\"12px\" color=\"text_highlight\">\n            APR = ($ Rewards of the upcoming week * 52) / $ Total xCETUS staked * 100%&nbsp;\n          </Text>\n          <Text as=\"span\" fontSize=\"12px\" color=\"text_caption\">\n            Both real-time value of rewards and CETUS price will affect the APR fluctuation.\n          </Text>\n        </Box>\n      }\n    >\n      {children}\n    </CetusTooltip>\n  )\n}\n\nexport default ESTAprTooltip\n","import useXCetusClaimRewardAction from '@/hooks/xcetus/useXCetusClaimRewardAction'\nimport useXCetusStore from '@/store/xcetus/useXCetus'\nimport { XCetusRewardInfo } from '@/types/xcetus'\nimport { Block } from '@cetus/design'\nimport { useGetToken } from '@cetus/hooks/src/useToken'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { useAccountStore } from '@cetus/stores'\nimport { CoinType } from '@cetus/types'\nimport { HTextLabelBox, Icon, SingleCoinImage, VTextLabelBox } from '@cetus/ui-kit'\nimport { d, formatCurrency, formatPercentage } from '@cetus/utils'\nimport { DividendReward } from '@cetusprotocol/xcetus-sdk'\nimport { Box, Button, HStack, Skeleton, Stack, Text, VStack } from '@chakra-ui/react'\nimport { useMemo } from 'react'\nimport ESTAprTooltip from './ESTAprTooltip'\n\ntype StakeRewardSummaryProps = {\n  myShare: string\n  cetusApr?: string\n  totalRewardValue: string\n  summaryRewardList: XCetusRewardInfo[]\n  rewardList: DividendReward[]\n}\n\nexport function StakeRewardSummary(props: StakeRewardSummaryProps) {\n  const { myShare, cetusApr, totalRewardValue, summaryRewardList, rewardList } = props\n  console.log('🚀🚀🚀 ~ StakeRewardSummary.tsx:25 ~ StakeRewardSummary ~ summaryRewardList:', summaryRewardList)\n  const { claimRewardLoading, handleClaimReward } = useXCetusClaimRewardAction()\n  const { currentAccount } = useAccountStore()\n  const { veNFTLoading } = useXCetusStore()\n  const { isApp } = useWindowWidth()\n\n  const showAmount = useMemo(() => {\n    return Number(summaryRewardList?.[0]?.value) > 0 || summaryRewardList.length == 0\n  }, [summaryRewardList])\n\n  return (\n    <VStack w=\"100%\" alignItems=\"start\" p={{ base: '4px 8px 8px', lg: '4px 16px 16px' }} gap=\"16px\">\n      <Text fontSize=\"16px\" color=\"text_caption\">\n        xCETUS Staking Rewards\n      </Text>\n      {/* <Flex p={isApp ? '12px' : '12px 40px'} bg=\"primary_yellow_opacity.10\" borderRadius=\"12px\">\n        <Text color=\"primary_yellow\" align=\"left\" lineHeight=\"1.5\">\n          xCETUS staking rewards will be suspended for one week. We apologize for the inconvenience caused to you.{' '}\n        </Text>\n      </Flex> */}\n      <Stack flexDir={{ base: 'column', lg: 'row' }} w=\"100%\" gap=\"16px\" justifyContent=\"space-between\">\n        {/* apr */}\n        <Block h={{ base: '60px', lg: '88px' }} p={{ base: '20px 12px', lg: '20px 24px' }} borderRadius=\"12px\" w=\"100%\" bg=\"bg_primary\">\n          <HStack h=\"100%\" w=\"100%s\" justifyContent=\"space-between\">\n            <HStack gap=\"4px\">\n              <Text color=\"primary_gray\">est.APR</Text>\n              <ESTAprTooltip>\n                <Box>\n                  <Icon xlinkHref=\"#icon-icon_tips\" />\n                </Box>\n              </ESTAprTooltip>\n            </HStack>\n            <Skeleton isLoaded={cetusApr !== '0'}>\n              <Text fontSize=\"18px\" color=\"text_caption\">\n                ≈{formatPercentage(cetusApr, 2)}\n              </Text>\n            </Skeleton>\n          </HStack>\n        </Block>\n        {/* 我的持有率 */}\n        <Block h={{ base: '60px', lg: '88px' }} p={{ base: '20px 12px', lg: '20px 24px' }} borderRadius=\"12px\" w=\"100%\" bg=\"bg_primary\">\n          <HStack h=\"100%\" w=\"100%s\" justifyContent=\"space-between\">\n            <Text color=\"primary_gray\">Your Share</Text>\n            <Skeleton isLoaded={!veNFTLoading}>\n              <Text fontSize=\"18px\" color=\"text_caption\">\n                {myShare !== '--' ? `≈${myShare}` : myShare}\n              </Text>\n            </Skeleton>\n          </HStack>\n        </Block>\n      </Stack>\n      {/* 待收割奖励 */}(\n      <Block borderRadius=\"12px\" w=\"100%\" p={{ base: '20px 12px', lg: '20px 24px' }} bg=\"bg_primary\">\n        <VStack h=\"100%\" w=\"100%\" gap={{ base: '20px', lg: '14px' }}>\n          <HStack w=\"100%\" justifyContent=\"space-between\">\n            <Text color=\"primary_gray\">Claimable Yield</Text>\n            <HStack justifyContent=\"end\" gap=\"12px\">\n              <Text fontSize=\"18px\" color=\"text_caption\">\n                {currentAccount && showAmount ? formatCurrency(totalRewardValue, 2) : '--'}\n              </Text>\n              {!isApp && summaryRewardList.length > 0 && (\n                <Button\n                  onClick={() => {\n                    if (claimRewardLoading) {\n                      return\n                    }\n                    handleClaimReward(rewardList)\n                  }}\n                  variant=\"outline\"\n                  h=\"28px\"\n                  w=\"80px\"\n                  borderRadius=\"8px\"\n                  fontSize=\"14px\"\n                  isDisabled={claimRewardLoading}\n                  isLoading={claimRewardLoading}\n                  bg=\"button_ghost_bg\"\n                >\n                  Claim\n                </Button>\n              )}\n            </HStack>\n          </HStack>\n          {/* 奖励明细 */}\n          {summaryRewardList.length > 0 && (\n            <Stack\n              w=\"100%\"\n              flexDir={{ base: 'column', lg: 'row' }}\n              align=\"center\"\n              justify={{ base: 'center', lg: 'flex-start' }}\n              gap={{ base: '20px', lg: '8px' }}\n            >\n              {summaryRewardList.map(item => (\n                <RewardItem key={item.coin_type} info={item} />\n              ))}\n            </Stack>\n          )}\n          {isApp && summaryRewardList.length > 0 && (\n            <Button\n              onClick={() => {\n                if (claimRewardLoading) {\n                  return\n                }\n                handleClaimReward(rewardList)\n              }}\n              variant=\"outline\"\n              h=\"40px\"\n              w=\"168px\"\n              borderRadius=\"12px\"\n              fontSize=\"14px\"\n              isDisabled={claimRewardLoading}\n              isLoading={claimRewardLoading}\n              bg=\"button_ghost_bg\"\n            >\n              Claim\n            </Button>\n          )}\n        </VStack>\n      </Block>\n      )\n    </VStack>\n  )\n}\n\ntype RewardItemProps = {\n  info: XCetusRewardInfo\n}\n\nfunction RewardItem(props: RewardItemProps) {\n  const { info } = props\n  const { tokenInfo } = useGetToken<CoinType>(info.coin_type as CoinType)\n  const { isApp } = useWindowWidth()\n  return isApp ? (\n    <HTextLabelBox\n      label={\n        <HStack>\n          <SingleCoinImage\n            imageUrl={tokenInfo?.logo_url}\n            imageStyle={{\n              w: '24px',\n              h: '24px'\n            }}\n          />\n          <Text>{tokenInfo?.symbol}</Text>\n        </HStack>\n      }\n      value={\n        <VStack alignItems=\"flex-end\" gap=\"4px\">\n          <Text color=\"text_caption\">{info.amount}</Text>\n          {d(info.value).gt('0') && <Text>{formatCurrency(info.value, 2)}</Text>}\n        </VStack>\n      }\n    />\n  ) : (\n    <VTextLabelBox\n      wrapStyle={{\n        gap: '10px',\n        flex: 1,\n        alignItems: 'flex-start'\n      }}\n      title={\n        <HStack>\n          <SingleCoinImage\n            imageUrl={tokenInfo?.logo_url}\n            imageStyle={{\n              w: '24px',\n              h: '24px'\n            }}\n          />\n          <Text>{tokenInfo?.symbol}</Text>\n        </HStack>\n      }\n      value={\n        <VStack alignItems=\"flex-start\" gap=\"4px\">\n          <Text color=\"text_caption\">{info.amount}</Text>\n          {d(info.value).gt('0') && <Text>{formatCurrency(info.value, 2)}</Text>}\n        </VStack>\n      }\n    />\n  )\n}\n","import useXCetusStore from '@/store/xcetus/useXCetus'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { useAccountStore } from '@cetus/stores'\nimport { HTextLabelBox } from '@cetus/ui-kit'\nimport VTextLabelBox from '@cetus/ui-kit/src/components/VTextLabelBox'\nimport { formatNumber, fromDecimalsAmountFix } from '@cetus/utils'\nimport { Button, HStack, Image, ImageProps, Stack, StackProps, Text, VStack } from '@chakra-ui/react'\n\ntype XCetusTopHerderProps = {\n  totalAmount: string\n  availableAmount: string\n  redeemingAmount: string\n  isLoading: boolean\n}\n\nexport function XCetusTopHerder(props: XCetusTopHerderProps) {\n  const { totalAmount, availableAmount, redeemingAmount, isLoading } = props\n  const { currentAccount } = useAccountStore()\n  const { availableXCetusAmountLoading } = useXCetusStore()\n\n  return (\n    <VStack w={{ base: '100%', lg: '100%' }} gap={{ base: '20px', lg: '28px' }} zIndex=\"100\" mt={{ base: '20px', lg: '32px' }}>\n      <VStack\n        w=\"100%\"\n        h=\"140px\"\n        gap=\"20px\"\n        borderRadius=\"20px\"\n        bg={{ base: 'none', lg: \"center / cover no-repeat url('/images/xcetus_banner.png')\" }}\n        align=\"center\"\n        justify=\"center\"\n      >\n        <Text\n          h={{ base: '28px', lg: '32px' }}\n          fontSize={{ base: '22px', lg: '32px' }}\n          lineHeight={{ base: '28px', lg: '32px' }}\n          fontWeight=\"600\"\n          fontStyle=\"normal\"\n          color=\"text_caption\"\n        >\n          Manage your{' '}\n          <Text\n            as=\"span\"\n            h={{ base: '28px', lg: '32px' }}\n            fontSize={{ base: '22px', lg: '32px' }}\n            lineHeight={{ base: '28px', lg: '32px' }}\n            fontWeight=\"600\"\n            fontStyle=\"normal\"\n            color=\"text_green\"\n          >\n            CETUS\n          </Text>{' '}\n          and{' '}\n          <Text\n            as=\"span\"\n            h={{ base: '28px', lg: '32px' }}\n            fontSize={{ base: '22px', lg: '32px' }}\n            lineHeight={{ base: '28px', lg: '32px' }}\n            fontWeight=\"600\"\n            fontStyle=\"normal\"\n            color=\"primary\"\n          >\n            xCETUS\n          </Text>\n        </Text>\n        <Button\n          h=\"28px\"\n          w=\"132px\"\n          fontSize=\"14px\"\n          fontWeight=\"600\"\n          variant=\"outline\"\n          bg=\"transparent\"\n          borderRadius=\"8px\"\n          borderColor=\"text_highlight\"\n          color=\"text_highlight\"\n          onClick={() => {\n            window.open('https://cetus-1.gitbook.io/cetus-docs/tokenomics/xcetus', '_blank')\n          }}\n        >\n          Learn more\n        </Button>\n      </VStack>\n\n      <Stack\n        flexDir={{ base: 'column', lg: 'row' }}\n        w={{ base: '100%', lg: '80%' }}\n        justifyContent={{ base: 'space-between', lg: 'space-around' }}\n        align={{ base: 'flex-start', lg: 'center' }}\n        gap={{ base: '16px', lg: '40px' }}\n      >\n        <StakeSummaryItem\n          isLoading={isLoading}\n          icon=\"/images/icon_my_total_xWHALE@2x.png\"\n          title=\"My total xCETUS\"\n          amount={currentAccount ? formatNumber(fromDecimalsAmountFix(totalAmount, 9), 9).toString() : '--'}\n          w={{ base: '28px', lg: '42px' }}\n          h={{ base: '24px', lg: '36px' }}\n          wrapStyle={{ gap: '2px' }}\n        />\n        <StakeSummaryItem\n          isLoading={isLoading || availableXCetusAmountLoading}\n          icon=\"/images/icon_available_xWHALE@2x.png\"\n          title=\"Available xCETUS\"\n          amount={currentAccount ? formatNumber(fromDecimalsAmountFix(availableAmount, 9), 9).toString() : '--'}\n          w={{ base: '24px', lg: '36px' }}\n          h={{ base: '24px', lg: '36px' }}\n        />\n        <StakeSummaryItem\n          isLoading={isLoading || availableXCetusAmountLoading}\n          icon=\"/images/icon_redeeming_xWHALE@2x.png\"\n          title=\"Redeeming xCETUS\"\n          amount={currentAccount ? formatNumber(fromDecimalsAmountFix(redeemingAmount, 9), 9).toString() : '--'}\n          w={{ base: '26px', lg: '38px' }}\n          h={{ base: '26px', lg: '38px' }}\n        />\n      </Stack>\n    </VStack>\n  )\n}\n\ntype StakeSummaryItemProps = {\n  isLoading: boolean\n  icon: string\n  title: string\n  amount: string\n  w: ImageProps['w']\n  h: ImageProps['h']\n  wrapStyle?: StackProps\n}\n\nfunction StakeSummaryItem(props: StakeSummaryItemProps) {\n  const { isLoading, icon, title, amount, w, h, wrapStyle = {} } = props\n  const { isApp } = useWindowWidth()\n  return isApp ? (\n    <HTextLabelBox\n      label={\n        <HStack {...wrapStyle}>\n          <Image src={icon} w={w} h={h} />\n          <Text>{title}</Text>\n        </HStack>\n      }\n      value={amount}\n      isLoading={isLoading}\n      labelStyle={{\n        fontSize: '14px',\n        color: 'primary_gray'\n      }}\n      valueStyle={{\n        fontSize: '14px'\n      }}\n    />\n  ) : (\n    <HStack gap=\"6px\" alignItems=\"center\" w={{ base: '100%', lg: 'auto' }} {...wrapStyle}>\n      <Image src={icon} w={w} h={h} />\n      <VTextLabelBox\n        wrapStyle={{\n          gap: '8px'\n        }}\n        title={title}\n        titleStyle={{\n          fontSize: '14px',\n          color: 'primary_gray'\n        }}\n        valueStyle={{\n          fontSize: '16px',\n          fontWeight: '500'\n        }}\n        value={amount}\n        isLoading={isLoading}\n      />\n    </HStack>\n  )\n}\n","import { CetusAdd } from '@/components/xcetus/CetusAdd'\nimport { CetusRedeem } from '@/components/xcetus/CetusRedeem'\nimport { RewardCountDown } from '@/components/xcetus/RewardCountDown'\nimport { RewardVesting } from '@/components/xcetus/RewardVesting'\nimport { StakeRewardSummary } from '@/components/xcetus/StakeRewardSummary'\nimport { XCetusTopHerder } from '@/components/xcetus/XCetusTopHerder'\nimport { useXCetus } from '@/hooks/xcetus/useXCetus'\nimport useXCetusStore from '@/store/xcetus/useXCetus'\nimport { Block, SelectTab } from '@cetus/design'\nimport { useAccountBalance, useRpcListener } from '@cetus/hooks'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { useSdkStore } from '@cetus/sdk-factory'\nimport { useAccountStore } from '@cetus/stores'\nimport { fromDecimalsAmountFix } from '@cetus/utils'\nimport { Stack, VStack } from '@chakra-ui/react'\nimport { useEffect, useState } from 'react'\n\nexport type TabTypes = 'Get xCETUS' | 'Redeem CETUS'\n\nconst tabList: { label: TabTypes; value: TabTypes }[] = [\n  {\n    label: 'Get xCETUS',\n    value: 'Get xCETUS'\n  },\n  {\n    label: 'Redeem CETUS',\n    value: 'Redeem CETUS'\n  }\n]\n\nfunction XCetus() {\n  const { currentAccount } = useAccountStore()\n  const { isInitialized } = useSdkStore()\n  const {\n    fetchOwnerVeNFT,\n    fetchXCetusManager,\n    fetchVeNFTDividendInfo,\n    availableXCetusAmount,\n    veNFT,\n    veNFTLoading,\n    lockCetusListLoading,\n    redeemingXCetusAmount,\n    fetchDividendManager,\n    myShare,\n    nextStartTime,\n    cetusApr,\n    summaryRewardList,\n    totalRewardValue,\n    lockCetusList,\n    rewardList,\n    calculateCurrPeriod\n  } = useXCetus()\n  const { dividendManager } = useXCetusStore()\n\n  const [currTab, setCurrTab] = useState<TabTypes>('Get xCETUS')\n  const { fetchAccountBalance } = useAccountBalance()\n  useRpcListener({\n    onRpcChange: () => {\n      fetchXCetusManager(false)\n      fetchDividendManager(false)\n      if (currentAccount) {\n        fetchOwnerVeNFT(currentAccount.address, true)\n        fetchAccountBalance()\n      }\n    }\n  })\n\n  useEffect(() => {\n    if (currentAccount) {\n      fetchOwnerVeNFT(currentAccount.address, true)\n    }\n  }, [currentAccount?.address])\n\n  useEffect(() => {\n    if (!isInitialized) return\n    fetchXCetusManager(false)\n    fetchDividendManager(false)\n    if (currentAccount?.address) {\n      fetchAccountBalance()\n    }\n  }, [isInitialized])\n\n  const [tradeIcon, setTradeIcon] = useState('#icon-a-icon_trade')\n\n  const onTradeIconMouseEnter = () => {\n    setTradeIcon('#icon-icon_swap1')\n  }\n\n  const onTradeIconMouseLeave = () => {\n    setTradeIcon('#icon-a-icon_trade')\n  }\n\n  const onIconClick = () => {\n    const value = tabList?.find(tab => tab?.value !== currTab)?.value\n    if (value) {\n      setCurrTab(value)\n    }\n  }\n  const { isApp } = useWindowWidth()\n  return (\n    <VStack\n      gap=\"0px\"\n      w=\"100%\"\n      pos=\"relative\"\n      sx={\n        isApp\n          ? {\n              backgroundImage: \"url('/images/xcetus_h5_bg.png')\",\n              backgroundPosition: 'center 256px',\n              backgroundRepeat: 'no-repeat',\n              backgroundSize: '375px 200px'\n            }\n          : {}\n      }\n    >\n      {/* 顶部区域 */}\n      <XCetusTopHerder\n        totalAmount={veNFT?.xcetus_balance || '0'}\n        availableAmount={availableXCetusAmount}\n        redeemingAmount={redeemingXCetusAmount}\n        isLoading={lockCetusListLoading || veNFTLoading}\n      />\n      <Stack\n        flexDir={{ base: 'column-reverse', lg: 'row' }}\n        mt={{ base: '118px', lg: '28px' }}\n        zIndex={100}\n        w=\"100%\"\n        gap=\"16px\"\n        alignItems=\"start\"\n        justifyContent=\"space-between\"\n      >\n        {/* 左边 */}\n        <VStack w=\"60%\" gap=\"16px\" minW={{ base: '100%', lg: '600px' }}>\n          <Block p=\"0px\" borderRadius=\"16px\" w=\"100%\">\n            <VStack w=\"100%\" gap=\"16px\">\n              {/* 奖励倒计时 */}\n              <RewardCountDown\n                nextStartTime={nextStartTime || 0}\n                refresh={() => {\n                  if (veNFT) {\n                    fetchVeNFTDividendInfo(veNFT.id)\n                  }\n                  fetchDividendManager(true)\n                  if (dividendManager) {\n                    calculateCurrPeriod(dividendManager)\n                  }\n                }}\n              />\n              {/* 质押奖励汇总 */}\n              <StakeRewardSummary\n                myShare={myShare.toString()}\n                cetusApr={cetusApr}\n                totalRewardValue={totalRewardValue}\n                summaryRewardList={summaryRewardList}\n                rewardList={rewardList}\n              />\n            </VStack>\n          </Block>\n          {lockCetusList.length > 0 && <RewardVesting lockCetusList={lockCetusList} />}\n        </VStack>\n        {/* 右边  */}\n        <VStack w=\"40%\" gap=\"8px\" minW={{ base: '100%', lg: '380px' }}>\n          {/* 切换Tab */}\n          <SelectTab\n            type=\"borderTab\"\n            wrapStyle={{\n              w: '100%',\n              h: '60px'\n            }}\n            itemStyle={{\n              w: '50%',\n              fontSize: '16px'\n            }}\n            tabList={tabList}\n            currentTab={currTab}\n            handleChangeTab={(item: any) => {\n              setCurrTab(item?.value)\n            }}\n          />\n          {currTab === 'Get xCETUS' && (\n            <CetusAdd\n              availableXCetusAmount={availableXCetusAmount}\n              onIconClick={onIconClick}\n              iconParams={{\n                xlinkHref: tradeIcon,\n                svgFill: 'text_caption',\n                transform: tradeIcon === '#icon-a-icon_trade' ? '' : 'rotate(90deg)',\n                fontSize: tradeIcon === '#icon-a-icon_trade' ? '12px' : '16px',\n                onMouseEnter: onTradeIconMouseEnter,\n                onMouseLeave: onTradeIconMouseLeave\n              }}\n            />\n          )}\n          {currTab === 'Redeem CETUS' && (\n            <CetusRedeem\n              availableXCetusAmount={fromDecimalsAmountFix(availableXCetusAmount, 9)}\n              onIconClick={onIconClick}\n              iconParams={{\n                xlinkHref: tradeIcon,\n                svgFill: 'text_caption',\n                transform: tradeIcon === '#icon-a-icon_trade' ? '' : 'rotate(90deg)',\n                fontSize: tradeIcon === '#icon-a-icon_trade' ? '12px' : '16px',\n                onMouseEnter: onTradeIconMouseEnter,\n                onMouseLeave: onTradeIconMouseLeave\n              }}\n            />\n          )}\n        </VStack>\n      </Stack>\n    </VStack>\n  )\n}\n\nexport default XCetus\n"],"names":["RewardCountDown","nextStartTime","refresh","days","hours","minutes","seconds","useCountdown","jsxs","VStack","jsx","Text","HStack","Block","Center","RewardVesting","props","lockCetusList","item","RewardVestingItem","info","isCanClaim","setIsCanClaim","useState","useEffect","XCetusUtil","cancelOrderLoading","handleCancelOrder","useXCetusCancelAction","claimOrderLoading","handleClaimOrder","useXCetusClaimAction","handleButtonClick","isClickClaim","useWindowWidth","Stack","XCetusToCetus","Button","ESTAprTooltip","children","isApp","CetusTooltip","Box","StakeRewardSummary","myShare","cetusApr","totalRewardValue","summaryRewardList","rewardList","claimRewardLoading","handleClaimReward","useXCetusClaimRewardAction","currentAccount","useAccountStore","veNFTLoading","useXCetusStore","showAmount","useMemo","_a","Icon","Skeleton","formatPercentage","formatCurrency","RewardItem","tokenInfo","useGetToken","HTextLabelBox","SingleCoinImage","d","VTextLabelBox","XCetusTopHerder","totalAmount","availableAmount","redeemingAmount","isLoading","availableXCetusAmountLoading","StakeSummaryItem","formatNumber","fromDecimalsAmountFix","icon","title","amount","w","h","wrapStyle","Image","tabList","XCetus","isInitialized","useSdkStore","fetchOwnerVeNFT","fetchXCetusManager","fetchVeNFTDividendInfo","availableXCetusAmount","veNFT","lockCetusListLoading","redeemingXCetusAmount","fetchDividendManager","calculateCurrPeriod","useXCetus","dividendManager","currTab","setCurrTab","fetchAccountBalance","useAccountBalance","useRpcListener","tradeIcon","setTradeIcon","onTradeIconMouseEnter","onTradeIconMouseLeave","onIconClick","value","tab","SelectTab","CetusAdd","CetusRedeem"],"mappings":"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"}