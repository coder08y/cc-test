{"version":3,"file":"useFindBestRouting-BrNyL9M1.js","sources":["../../src/hooks/swap/useFindBestRouting.ts"],"sourcesContent":["import { AggregatorServerErrorCode, SwapRouterData } from '@/types/swap'\nimport useClmmSDKStore from '@cetus/stores/src/useClmmSDKStore'\nimport useWebConfigStore from '@cetus/stores/src/useWebConfigStore'\nimport { Token } from '@cetus/types'\nimport { bnToAmount } from '@cetus/utils'\nimport { FindRouterParams, RouterData, SwapInPoolsParams } from '@cetusprotocol/aggregator-sdk'\nimport { toDecimalsAmount } from '@cetusprotocol/common-sdk'\nimport BN from 'bn.js'\nimport { useGetSwapPoolAddressList } from './useSwapHelper'\n\nexport function useFindBestRouting() {\n  const { aggregatorSDK } = useClmmSDKStore()\n  const { getSwapPoolAddress } = useGetSwapPoolAddressList()\n  const { deepbookV3Config, setDeepbookV3Config, providers } = useWebConfigStore()\n\n  /**\n   * 是否禁用降级\n   * @param res\n   * @returns\n   */\n  const isDisableDegrade = (res: RouterData | null) => {\n    console.log('🚀 ~ isDisableDegrade ~ res:', res)\n    if (res && res.error) {\n      const code = res.error.code\n      return (\n        code === AggregatorServerErrorCode.InsufficientLiquidity ||\n        code === AggregatorServerErrorCode.HoneyPot ||\n        code === AggregatorServerErrorCode.NumberTooLarge\n      )\n    }\n\n    return false\n  }\n\n  const checkProvidersKeys = async (providersKeys: string[]) => {\n    console.log('🚀🚀🚀 ~ useFindBestRouting.ts:35 ~ checkProvidersKeys ~ providersKeys:', providersKeys)\n    const tempProvidersKeys = providers.length > 0 ? providersKeys.filter(item => providers.includes(item)) : providersKeys\n    if (providersKeys.includes('DEEPBOOKV3')) {\n      let config = deepbookV3Config as any\n      const nowTime = new Date().getTime() / 1000\n      if (config === null || nowTime - (config?.last_update_time || 0) > 60) {\n        try {\n          config = await aggregatorSDK.getDeepBookV3Config()\n\n          setDeepbookV3Config(config)\n        } catch (error) {\n          console.log('🚀 ~ checkProvidersKeys ~ error:', error)\n        }\n      }\n      if (config && config.is_alternative_payment) {\n        const { deep_fee_vault } = config\n        if (deep_fee_vault < Number(toDecimalsAmount(20, 6))) {\n          return tempProvidersKeys.filter(item => item !== 'DEEPBOOKV3')\n        }\n      }\n    }\n\n    return tempProvidersKeys\n  }\n\n  /**\n   * 预计算\n   */\n  const findBestRouters = async (options: {\n    fromToken: Token\n    toToken: Token\n    amount: string\n    providersKeys: string[]\n    by_amount_in: boolean\n    uuid: string\n  }): Promise<SwapRouterData> => {\n    const { fromToken, toToken, amount, providersKeys, by_amount_in, uuid } = options\n    console.log('🚀 ~ useFindBestRouting ~ options:', options)\n\n    let routerData: SwapRouterData = {\n      uuid,\n      byAmountIn: by_amount_in,\n      isDegrade: false\n    }\n\n    try {\n      // 如果providersKeys为空，则不进行路由计算\n      if (providersKeys.length === 0) {\n        routerData = handleRouterData(false, by_amount_in, uuid, fromToken, toToken, {\n          error: {\n            code: AggregatorServerErrorCode.InsufficientLiquidity,\n            msg: ''\n          },\n          amountIn: new BN(amount),\n          amountOut: new BN('0'),\n          byAmountIn: by_amount_in,\n          routes: [],\n          insufficientLiquidity: true\n        })\n        return routerData\n      }\n\n      const routerParams: FindRouterParams = {\n        from: fromToken.coin_type,\n        target: toToken.coin_type,\n        amount: new BN(amount),\n        byAmountIn: by_amount_in,\n        depth: 3,\n        splitAlgorithm: undefined,\n        splitFactor: undefined,\n        splitCount: undefined,\n        providers: providersKeys\n      }\n\n      console.log('🚀 ~ file: useFindBestRouting.ts:26 ~ findBestRouters ~ routerParams:', routerParams)\n\n      const routerRes = await aggregatorSDK.findRouters(routerParams)\n\n      console.log('🚀 ~ file: useFindBestRouting.ts:145 ~ findBestRouters ~ routerRes:', {\n        routerRes\n      })\n\n      if (routerRes && isDisableDegrade(routerRes)) {\n        // 流动性不足\n        routerData = handleRouterData(false, by_amount_in, uuid, fromToken, toToken, routerRes)\n      } else {\n        if (!routerRes || routerRes?.paths?.length === 0) {\n          throw Error('not find router')\n        }\n        routerData = handleRouterData(false, by_amount_in, uuid, fromToken, toToken, routerRes)\n      }\n    } catch (error) {\n      //走降级\n      try {\n        console.log('🚀 ~ file: useFindBestRouting.ts:105 ~ findRouters ~ error:', error)\n\n        const pools = await getSwapPoolAddress(fromToken, toToken)\n        if (pools.length === 0) {\n          const dd: RouterData = {\n            amountIn: new BN('0'),\n            amountOut: new BN('0'),\n            byAmountIn: by_amount_in,\n            routes: [],\n            insufficientLiquidity: true,\n            error: {\n              code: AggregatorServerErrorCode.NoRouter,\n              msg: ''\n            }\n          }\n          routerData = handleRouterData(true, by_amount_in, uuid, fromToken, toToken, dd)\n        }\n\n        const routerParams: SwapInPoolsParams = {\n          from: fromToken.coin_type,\n          target: toToken.coin_type,\n          amount: new BN(amount),\n          byAmountIn: by_amount_in,\n          pools\n        }\n\n        console.log('🚀 ~ file: useFindBestRouting.ts:115 ~ findRouters ~ routerParams:', routerParams)\n\n        const res = await aggregatorSDK.swapInPools(routerParams)\n        console.log('🚀 ~ findBestRouters ~ swapInPools res:', res)\n\n        if (!res || !res.routeData) {\n          routerData = handleRouterData(true, by_amount_in, uuid, fromToken, toToken)\n        } else {\n          if (by_amount_in) {\n            res.routeData.amountIn = new BN(amount)\n          } else {\n            res.routeData.amountOut = new BN(amount)\n          }\n          return handleRouterData(true, by_amount_in, uuid, fromToken, toToken, res.routeData)\n        }\n      } catch (error) {\n        console.log('🚀 ~ file: useFindBestRouting.ts:120 ~ swapInPools ~  error:', error)\n        routerData = {\n          uuid,\n          byAmountIn: by_amount_in,\n          isDegrade: true\n        }\n      }\n    }\n\n    return routerData\n  }\n\n  const handleRouterData = (isDegrade: boolean, by_amount_in: boolean, uuid: string, fromToken: Token, toToken: Token, res?: RouterData) => {\n    console.log('🚀 ~ file: useSwap.ts:166 ~ handleRouterData ~ res:', {\n      isDegrade,\n      routerData: res\n    })\n    if (res) {\n      const isError = res.error !== undefined\n\n      const fromAmountUi = bnToAmount(res.amountIn.toString(), fromToken.decimals)\n      const toAmountUi = bnToAmount(res.amountOut.toString(), toToken.decimals)\n\n      const result: SwapRouterData = {\n        routerData: isError ? undefined : res,\n        fromAmountUi: isError ? (by_amount_in ? fromAmountUi : '') : fromAmountUi,\n        toAmountUi: isError ? (by_amount_in ? '' : toAmountUi) : toAmountUi,\n        uuid,\n        byAmountIn: by_amount_in,\n        isDegrade,\n        errorCode: res.error?.code\n      }\n\n      return result\n    } else {\n      const result: SwapRouterData = {\n        uuid,\n        byAmountIn: by_amount_in,\n        isDegrade\n      }\n\n      return result\n    }\n  }\n  return {\n    findBestRouters,\n    checkProvidersKeys\n  }\n}\n"],"names":["useFindBestRouting","aggregatorSDK","useClmmSDKStore","getSwapPoolAddress","useGetSwapPoolAddressList","deepbookV3Config","setDeepbookV3Config","providers","useWebConfigStore","isDisableDegrade","res","code","AggregatorServerErrorCode","checkProvidersKeys","providersKeys","tempProvidersKeys","item","config","nowTime","error","deep_fee_vault","toDecimalsAmount","findBestRouters","options","fromToken","toToken","amount","by_amount_in","uuid","routerData","handleRouterData","BN","routerParams","routerRes","_a","pools","dd","isDegrade","isError","fromAmountUi","bnToAmount","toAmountUi"],"mappings":"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"}