{"version":3,"mappings":"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","names":["SwapTrade","lazy","__vitePreload","ProModeAndChart","Swap","windowWidth","isApp","useWindowWidth","isShowTradeChart","useGlobalStore","fromCoin","toCoin","setToAmount","setFromAmount","useSwapStore","isChangeDirect","setIsChangeDirect","useState","isProMode","currentProTab","setCurrentProTab","showTokenInfo","setShowTokenInfo","setAnotherTokenInfo","coinBvPriceUnit","setIsCoinSelect","useProStore","handleToggleDirect","fixCoinType","navigate","useNavigate","onCoinSelect","item","useEffect","jsx","Box","Stack","jsxs","VStack","TradeTab","TradeTabs","Suspense","ProChart","LimitPriceChart"],"ignoreList":[],"sources":["../../src/pages/Swap.tsx"],"sourcesContent":["import ProChart from '@/components/chart/ProChart.tsx'\nimport { TradeTab } from '@/components/common/TradeTab'\nimport { LimitPriceChart } from '@/components/limit/LimitPriceChart.tsx'\n// import { LimitPriceChart } from '@/components/limit/LimitPriceChart.tsx'\n// import { SwapTrade } from '@/components/swap'\nimport { TradeTabs } from '@/components/swap/type'\nimport useGlobalStore from '@/store/common/global.ts'\nimport useProStore from '@/store/pro/index.ts'\nimport useSwapStore from '@/store/swap/swap.ts'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { fixCoinType } from '@cetusprotocol/common-sdk'\nimport { Box, Stack, VStack } from '@chakra-ui/react'\nimport { lazy, Suspense, useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nconst SwapTrade = lazy(() => import('../components/swap/Swap.tsx'))\nconst ProModeAndChart = lazy(() => import('../components/common/proModeAndChart/index.tsx'))\n\nfunction Swap() {\n  const { windowWidth, isApp } = useWindowWidth()\n  const { isShowTradeChart } = useGlobalStore()\n\n  const { fromCoin, toCoin, setToAmount, setFromAmount } = useSwapStore()\n\n  const [isChangeDirect, setIsChangeDirect] = useState(false)\n  const { isProMode, currentProTab, setCurrentProTab, showTokenInfo, setShowTokenInfo, setAnotherTokenInfo, coinBvPriceUnit, setIsCoinSelect } =\n    useProStore()\n  const handleToggleDirect = () => {\n    setIsChangeDirect(!isChangeDirect)\n    if (showTokenInfo && fixCoinType(showTokenInfo?.coin_type || '') == fixCoinType(fromCoin?.coin_type || '')) {\n      setShowTokenInfo(toCoin)\n      setAnotherTokenInfo(fromCoin)\n    } else {\n      setShowTokenInfo(fromCoin)\n      setAnotherTokenInfo(toCoin)\n    }\n  }\n  const navigate = useNavigate()\n  const onCoinSelect = (item: any) => {\n    setFromAmount('')\n    setToAmount('')\n    setIsCoinSelect(true)\n    setShowTokenInfo(item)\n    if (currentProTab == 'Buy') {\n      if (fixCoinType(item?.coin_type) == fixCoinType(fromCoin?.coin_type || '')) {\n        setIsChangeDirect(!isChangeDirect)\n        setAnotherTokenInfo(toCoin)\n        navigate(`/swap/${toCoin?.coin_type}/${item?.coin_type}`)\n      } else if (fixCoinType(item?.coin_type) === fixCoinType(toCoin?.coin_type || '')) {\n        setAnotherTokenInfo(fromCoin)\n      } else {\n        navigate(`/swap/${fromCoin?.coin_type}/${item?.coin_type}`)\n        setAnotherTokenInfo(fromCoin)\n      }\n    } else {\n      if (fixCoinType(item?.coin_type) == fixCoinType(toCoin?.coin_type || '')) {\n        setIsChangeDirect(!isChangeDirect)\n        setAnotherTokenInfo(fromCoin)\n        navigate(`/swap/${item?.coin_type}/${fromCoin?.coin_type}`)\n      } else if (fixCoinType(item?.coin_type) === fixCoinType(fromCoin?.coin_type || '')) {\n        setAnotherTokenInfo(toCoin)\n      } else {\n        navigate(`/swap/${item?.coin_type}/${toCoin?.coin_type}`)\n        setAnotherTokenInfo(toCoin)\n      }\n    }\n  }\n\n  useEffect(() => {\n    return () => {\n      setIsCoinSelect(false)\n    }\n  }, [])\n\n  return (\n    <Box\n      mt={{ base: '0px', lg: windowWidth && windowWidth < 1024 ? '0' : isProMode ? '0px' : '42px' }}\n      p={{ base: '0', lg: isProMode || isShowTradeChart ? '0' : '0 345px' }}\n      className={isProMode || isApp || isShowTradeChart ? '' : 'bg_img'}\n      w=\"100%\"\n    >\n      <Stack w=\"100%\" flexDir={{ base: 'column-reverse', lg: 'row' }} gap=\"0px\" align=\"flex-start\" justify=\"center\">\n        {/* pc chart and orders */}\n        {(isProMode || isShowTradeChart) && (\n          <ProModeAndChart\n            onCoinSelect={(item: any) => onCoinSelect(item)}\n            isChangeDirect={isChangeDirect}\n            tokenA={fromCoin}\n            tokenB={toCoin}\n            handleToggleDirect={handleToggleDirect}\n          />\n        )}\n\n        {/* input交易框 */}\n        <VStack gap=\"16px\" w={{ base: '100%', lg: isProMode ? '380px' : '470px' }} alignItems=\"start\">\n          <TradeTab currTradeTab={TradeTabs.Swap} />\n          <Suspense fallback={<div />}>\n            <SwapTrade />\n          </Suspense>\n        </VStack>\n\n        {/* h5chart */}\n        {isApp && (isShowTradeChart || isProMode) ? (\n          isProMode ? (\n            <ProChart\n              onCoinSelect={(item: any) => onCoinSelect(item)}\n              handleToggleDirect={handleToggleDirect}\n              token={showTokenInfo}\n              tokenPriceUnit={coinBvPriceUnit}\n            />\n          ) : (\n            <VStack w=\"100%\">\n              <Suspense fallback={<div />}>\n                <LimitPriceChart baseToken={fromCoin} quoteToken={toCoin} />\n              </Suspense>\n            </VStack>\n          )\n        ) : null}\n      </Stack>\n    </Box>\n  )\n}\n\nexport default Swap\n"],"file":"assets/Swap-Uwgivf3D.js"}