{"version":3,"file":"useGetDcaOrderHistory-D2emN1Os.js","sources":["../../src/hooks/dca/useDcaCancel.ts","../../src/hooks/dca/useDcaClaim.ts","../../src/utils/dca.ts","../../src/hooks/dca/useGetDcaOrderList.ts","../../src/store/dca/index.ts","../../src/hooks/dca/useGetDcaOrderHistory.ts"],"sourcesContent":["import { useSdk } from '@cetus/sdk-factory'\nimport { CloseDcaOrderParams } from '@cetusprotocol/dca-sdk'\n\nexport default function () {\n  const dcaSdk = useSdk('dca')\n\n  const dcaCloseOrderPayload = async (params: Array<CloseDcaOrderParams>) => {\n    const tx = await dcaSdk!.Dca.dcaCloseOrderPayload(params)\n    return tx\n  }\n  return { dcaCloseOrderPayload }\n}\n","import { useSdk } from '@cetus/sdk-factory'\nimport { WithdrawDcaParams } from '@cetusprotocol/dca-sdk'\n\nexport default function () {\n  const dcaSdk = useSdk('dca')\n\n  const dcaWithdrawPayload = async (params: WithdrawDcaParams[]) => {\n    console.log('üöÄüöÄüöÄ ~ file: useDcaClaim.ts:12 ~ params:', params)\n    const tx = await dcaSdk!.Dca.withdrawAll(params)\n    return tx\n  }\n  return { dcaWithdrawPayload }\n}\n","export function convertSecondsToString(seconds: number): string {\n  const SECONDS_IN_A_MINUTE = 60\n  const SECONDS_IN_AN_HOUR = SECONDS_IN_A_MINUTE * 60\n  const SECONDS_IN_A_DAY = SECONDS_IN_AN_HOUR * 24\n  const SECONDS_IN_A_WEEK = SECONDS_IN_A_DAY * 7\n  const SECONDS_IN_A_MONTH = SECONDS_IN_A_DAY * 30 // ÁÆÄÂåñÂÅáËÆæ‰∏Ä‰∏™ÊúàÊúâ30Â§©\n\n  const months = Math.floor(seconds / SECONDS_IN_A_MONTH)\n  seconds %= SECONDS_IN_A_MONTH\n\n  const weeks = Math.floor(seconds / SECONDS_IN_A_WEEK)\n  seconds %= SECONDS_IN_A_WEEK\n\n  const days = Math.floor(seconds / SECONDS_IN_A_DAY)\n  seconds %= SECONDS_IN_A_DAY\n\n  const hours = Math.floor(seconds / SECONDS_IN_AN_HOUR)\n  seconds %= SECONDS_IN_AN_HOUR\n\n  const minutes = Math.floor(seconds / SECONDS_IN_A_MINUTE)\n  seconds %= SECONDS_IN_A_MINUTE\n\n  const result: any = []\n\n  if (months > 0) result.push(`${months} Month${months > 1 ? 's' : ''}`)\n  if (weeks > 0) result.push(`${weeks} Week${weeks > 1 ? 's' : ''}`)\n  if (days > 0) result.push(`${days} Day${days > 1 ? 's' : ''}`)\n  if (hours > 0) result.push(`${hours} Hour${hours > 1 ? 's' : ''}`)\n  if (minutes > 0) result.push(`${minutes} Minute${minutes > 1 ? 's' : ''}`)\n\n  return result.join(' ')\n}\n","import useActiveOrdersStore from '@/store/profile/activeOrders'\nimport { convertSecondsToString } from '@/utils/dca'\nimport { useGetToken } from '@cetus/hooks/src/useToken'\nimport { useSdk } from '@cetus/sdk-factory'\nimport { CoinType, Token } from '@cetus/types'\nimport { d, formatNumber, timeFormatUTC } from '@cetus/utils'\nimport { fixCoinType } from '@cetusprotocol/common-sdk'\nimport { DcaOrder } from '@cetusprotocol/dca-sdk'\nimport Decimal from 'decimal.js'\n\nexport function useGetDcaOrderList() {\n  const { getTokenListInfo } = useGetToken()\n  const { setDcaOrderListLoading, setDcaActiveOrderList, setDcaPastOrderList } = useActiveOrdersStore()\n  const dcaSdk = useSdk('dca')\n\n  const getDcaOrderList = async (walletAddress: string, isLoading = true) => {\n    console.log('üöÄ ~ getDcaOrderList ~ walletAddress:', walletAddress)\n    try {\n      const list = await dcaSdk!.Dca.getDcaOrders(walletAddress)\n      console.log('üöÄ ~ getDcaOrderList ~ list:', list)\n      if (list && list?.data && list?.data?.length > 0) {\n        const { activeResult, pastResult } = await buildDcaOrderList(list?.data)\n        console.log('üöÄ ~ getDcaOrderList ~ activeResult, pastResult:', { activeResult, pastResult })\n        setDcaActiveOrderList(activeResult)\n        setDcaPastOrderList(pastResult)\n      } else {\n        setDcaActiveOrderList([])\n        setDcaPastOrderList([])\n      }\n    } catch (error) {\n      console.log('üöÄ ~ getDcaOrderList ~ error:', error)\n      setDcaActiveOrderList([])\n      setDcaPastOrderList([])\n    } finally {\n      setDcaOrderListLoading(false)\n    }\n  }\n\n  // Helper: Ëé∑Âèñ token ‰ø°ÊÅØ\n  const getTokenListDetails = async (tokenTypeList: string[]) => {\n    try {\n      const tokenMap = await getTokenListInfo(tokenTypeList as CoinType[])\n\n      const tokenDetailMap = new Map<string, any>()\n      tokenMap?.forEach((value, key) => {\n        const decimalsPow = Decimal.pow(10, (value as Token)?.decimals)\n        tokenDetailMap.set(key, { token: value, decimalsPow })\n      })\n      return tokenDetailMap\n    } catch (error) {\n      console.log('üöÄ ~ getTokenListDetails ~ error:', error)\n    }\n  }\n\n  // Helper: ËÆ°ÁÆó‰ª∑Ê†ºÂå∫Èó¥\n  const calculatePriceRanges = (\n    inAmountPerCycle: string,\n    inCoinDecimalsPow: Decimal,\n    outCoinDecimalsPow: Decimal,\n    maxOutAmountPerCycle: string,\n    minOutAmountPerCycle: string\n  ) => {\n    const minPrice = d(inAmountPerCycle).div(inCoinDecimalsPow).div(d(maxOutAmountPerCycle).div(outCoinDecimalsPow)).toString()\n\n    const maxPrice = d(inAmountPerCycle).div(inCoinDecimalsPow).div(d(minOutAmountPerCycle).div(outCoinDecimalsPow)).toString()\n\n    return {\n      minPrice,\n      maxPrice,\n      minPriceResever: d(1).div(d(maxPrice)).toString(),\n      maxPriceResever: d(1).div(d(minPrice)).toString()\n    }\n  }\n\n  // Helper: Á°ÆÂÆöËÆ¢ÂçïÁä∂ÊÄÅ\n  const determineOrderStatus = (order: any) => {\n    if (order.in_withdrawn > 0 && order.in_withdrawn == order.in_deposited) {\n      // ËÆ¢ÂçïÂÖ≥Èó≠ = ÊèêÂèñincoinÊï∞ÈáèÂ§ß‰∫é0Âπ∂‰∏îÁ≠â‰∫éÊÄªÊîØ‰ªòincoinÊï∞Èáè\n      return 'Close'\n    } else if (order.in_withdrawn > 0 && order.out_withdrawn > 0) {\n      // ÈÉ®ÂàÜÊàê‰∫§ = ÊèêÂèñÊï∞ÈáèÂ§ß‰∫é0Âπ∂‰∏îÂèØÊèêÂèñoutcoinÊï∞ÈáèÂ§ß‰∫é0\n      return 'PartialDeal'\n    } else if (order.amount_left_next_cycle == 0 && order.next_cycle_at == 0) {\n      // ÂÆåÂÖ®Êàê‰∫§ = ËÆ¢Âçï‰∏ãÊ¨°ÊîØ‰ªòÊï∞Èáè‰∏∫0Âπ∂‰∏î‰∏ãÊ¨°ÊâßË°åÊó∂Èó¥‰∏∫0\n      return 'AllDeal'\n    }\n    return 'Active'\n  }\n\n  // Helper: ËÆ°ÁÆóËÆ¢ÂçïÂΩìÂâç‰ª∑Ê†ºÂèäÁõ∏ÂÖ≥Êï∞ÊçÆ\n  const calculateCurrentOrderMetrics = (\n    orderStatus: string,\n    inDeposited: Decimal,\n    inWithdrawn: Decimal,\n    inBalance: Decimal,\n    outBalance: Decimal,\n    outWithdraw: Decimal,\n    inCoinDecimalsPow: Decimal\n  ) => {\n    const calculateReseverPrice = (price: string) => (price === '--' ? '--' : d(1).div(price).toString())\n\n    switch (orderStatus) {\n      case 'Close':\n        return {\n          currentAvgPrice: '--',\n          currentAvgPriceResever: '--',\n          inBalanceRatio: '0',\n          inDepositedOut: '0'\n        }\n      case 'PartialDeal': {\n        const currentAvgPrice = inDeposited.sub(inWithdrawn).div(outWithdraw).toString()\n        const inBalanceRatio = inDeposited.sub(inWithdrawn).div(inDeposited).mul(100).toDP(2, Decimal.ROUND_HALF_UP).toString()\n        return {\n          currentAvgPrice,\n          currentAvgPriceResever: calculateReseverPrice(currentAvgPrice),\n          inBalanceRatio,\n          inDepositedOut: inDeposited.sub(inWithdrawn).toString()\n        }\n      }\n      case 'AllDeal': {\n        const currentAvgPrice = inDeposited.div(outWithdraw).toString()\n        return {\n          currentAvgPrice,\n          currentAvgPriceResever: calculateReseverPrice(currentAvgPrice),\n          inBalanceRatio: '100',\n          inDepositedOut: inDeposited.sub(inBalance).toString()\n        }\n      }\n      case 'Active': {\n        const currentAvgPrice = outBalance.gt(0) || outWithdraw.gt(0) ? inDeposited.sub(inBalance).div(outBalance.add(outWithdraw)).toString() : '--'\n        const inBalanceRatio = inDeposited.sub(inBalance).div(inDeposited).mul(100).toDP(2, Decimal.ROUND_HALF_UP).toString()\n        return {\n          currentAvgPrice,\n          currentAvgPriceResever: calculateReseverPrice(currentAvgPrice),\n          inBalanceRatio,\n          inDepositedOut: inDeposited.sub(inBalance).toString()\n        }\n      }\n      default:\n        return {\n          currentAvgPrice: '--',\n          currentAvgPriceResever: '--',\n          inBalanceRatio: '0',\n          inDepositedOut: '0'\n        }\n    }\n  }\n\n  // Helper: ÊòØÂê¶ÊòæÁ§∫ÊèêÁ§∫\n\n  const shouldShowTradeTips = (createdAt: number, cycleFrequency: number, outBalance: Decimal, outWithdraw: Decimal): boolean => {\n    const nowTime = Date.now() / 1000\n    const executedTimes = d(nowTime).sub(createdAt).div(cycleFrequency)\n    const noRewards = outBalance.lte(0) && d(outWithdraw).lte(0)\n\n    return executedTimes.gt(3) && noRewards\n  }\n\n  // Main Function\n  const buildDcaOrderList = async (list: DcaOrder[]) => {\n    const activeResult: any[] = []\n    const pastResult: any[] = []\n    const coinTypeList: Set<string> = new Set()\n    list?.forEach(item => {\n      coinTypeList.add(fixCoinType(item.in_coin_type, false))\n      coinTypeList.add(fixCoinType(item.out_coin_type, false))\n    })\n\n    const tokenDetailMap = await getTokenListDetails(Array.from(coinTypeList) as CoinType[])\n\n    if (tokenDetailMap) {\n      for (const order of list) {\n        // Step 1: Ëé∑Âèñ token ‰ø°ÊÅØ\n        try {\n          const { token: inCoin, decimalsPow: inCoinDecimalsPow } = tokenDetailMap.get(fixCoinType(order.in_coin_type, false))\n          const { token: outCoin, decimalsPow: outCoinDecimalsPow } = tokenDetailMap.get(fixCoinType(order.out_coin_type, false))\n\n          // Step 2: ËÆ°ÁÆóÂü∫Êú¨Êï∞ÊçÆ\n          const inDeposited = d(order.in_deposited).div(inCoinDecimalsPow)\n          // console.log('üöÄ ~ buildDcaOrderList ~ order.in_deposited:', order.in_deposited, inCoinDecimalsPow)\n          const cycleCount = d(order.in_deposited).div(order.in_amount_per_cycle).floor().toString()\n          const inAmountPerCycle = d(order.in_amount_per_cycle).div(inCoinDecimalsPow).toString()\n          const inBalance = d(order.in_balance).div(inCoinDecimalsPow)\n          const inWithdrawn = d(order.in_withdrawn).div(inCoinDecimalsPow)\n          const outBalance = d(order.out_balance).gt(0) ? d(order.out_balance).div(outCoinDecimalsPow) : d(0)\n          const outWithdraw = d(order.out_withdrawn).div(outCoinDecimalsPow)\n          const eachOrderSize = formatNumber(inDeposited.div(cycleCount).toString())\n          const ofOrderLeft = inBalance.div(inAmountPerCycle).floor().toNumber()\n\n          // Step 3: ËÆ°ÁÆó‰ª∑Ê†ºÂå∫Èó¥\n          const { minPrice, maxPrice, minPriceResever, maxPriceResever } = calculatePriceRanges(\n            order.in_amount_per_cycle,\n            inCoinDecimalsPow,\n            outCoinDecimalsPow,\n            order.max_out_amount_per_cycle,\n            order.min_out_amount_per_cycle\n          )\n\n          // Step 4: Á°ÆÂÆöËÆ¢ÂçïÁä∂ÊÄÅ\n          const orderStatus = determineOrderStatus(order)\n\n          // Step 5: ËÆ°ÁÆóËÆ¢ÂçïÂΩìÂâç‰ª∑Ê†ºÂèäÂÖ∂‰ªñÁõ∏ÂÖ≥Êï∞ÊçÆ\n          const { currentAvgPrice, currentAvgPriceResever, inBalanceRatio, inDepositedOut } = calculateCurrentOrderMetrics(\n            orderStatus,\n            inDeposited,\n            inWithdrawn,\n            inBalance,\n            outBalance,\n            outWithdraw,\n            inCoinDecimalsPow\n          )\n          const isShowTradeTips = shouldShowTradeTips(Number(order.created_at), Number(order.cycle_frequency), outBalance, outWithdraw)\n\n          // Step 6: ÊûÑÈÄ†ËÆ¢ÂçïÈ°π\n          const orderItem = {\n            createAt: timeFormatUTC(Number(order.created_at) * 1000, 'YMDHM'),\n            cycleFrequency: order.cycle_frequency,\n            orderID: order.id,\n            inAmountPerCycle,\n            nextCycleAt: timeFormatUTC(Number(order.next_cycle_at) * 1000, 'YMDHM'),\n            inDeposited: inDeposited.toString(),\n            cycleCount,\n            inDepositedOut,\n            inBalance: inBalance.toString(),\n            minPrice: formatNumber(minPrice),\n            maxPrice: formatNumber(maxPrice),\n            minPriceResever: formatNumber(minPriceResever),\n            maxPriceResever: formatNumber(maxPriceResever),\n            inCoin,\n            outCoin,\n            outBalance: outBalance.toString(),\n            inBalanceRatio,\n            outWithdraw: outWithdraw.toString(),\n            investEvery: convertSecondsToString(Number(order.cycle_frequency)),\n            eachOrderSize,\n            currentAvgPrice: currentAvgPrice === '--' ? '--' : formatNumber(currentAvgPrice, (outCoin as Token).decimals),\n            currentAvgPriceResever: currentAvgPrice === '--' ? '--' : formatNumber(currentAvgPriceResever, (inCoin as Token).decimals),\n            orderStatus,\n            inWithdrawn: inWithdrawn.toString(),\n            ofOrderLeft,\n            isShowTradeTips,\n            next_cycle_at: order.created_at + ofOrderLeft * Number(order.cycle_frequency),\n            nextCycleAtTimeStamp: Number(order.next_cycle_at) * 1000,\n            created_at: order.created_at,\n            version: order.version\n          }\n\n          if (orderStatus === 'Active') {\n            activeResult.push(orderItem)\n          } else {\n            pastResult.push(orderItem)\n          }\n        } catch (error) {\n          console.log('üöÄ ~ buildDcaOrderList ~ error:', error)\n        }\n      }\n    }\n\n    const sortActiveResult = activeResult?.sort((a, b) => {\n      return b.version - a.version\n    })\n    const sortPastResult = pastResult?.sort((a, b) => {\n      return b.version - a.version\n    })\n    console.log('üöÄ ~ buildDcaOrderList ~ activeResult, pastResult:', { activeResult, pastResult })\n    return { activeResult: sortActiveResult, pastResult: sortPastResult }\n  }\n\n  return { getDcaOrderList, buildDcaOrderList }\n}\n","import { DcaConfig, DcaOrderHistoryData, DcaQuoteData } from '@/types/dca'\nimport { Token } from '@cetus/types'\nimport { create, StateCreator } from 'zustand'\n\ninterface DcaState {\n  sellCoin: Token | undefined\n  setSellCoin: (value: Token | undefined) => void\n  buyCoin: Token | undefined\n  setBuyCoin: (value: Token | undefined) => void\n  sellAmount: string\n  setSellAmount: (value: string) => void\n  buyAmount: string\n  setBuyAmount: (value: string) => void\n  orderNum: string\n  setOrderNum: (value: string) => void\n  investNum: string\n  setInvestNum: (value: string) => void\n  currentInvest: string\n  setCurrentInvest: (value: string) => void\n  currentCoinKey: string\n  setCurrentCoinKey: (value: string) => void\n  pageLoading: boolean\n  setPageLoading: (value: boolean) => void\n  dcaConfig: DcaConfig\n  setDcaConfig: (value: DcaConfig) => void\n  dcaQuote: DcaQuoteData\n  setDcaQuote: (value: DcaQuoteData) => void\n  orderHistoryObj: DcaOrderHistoryData\n  setOrderHistoryObj: (data: DcaOrderHistoryData) => void\n  inCoinWhiteList: Token[]\n  setInCoinWhiteList: (list: Token[]) => void\n  outCoinWhiteList: Token[]\n  setOutCoinWhiteList: (list: Token[]) => void\n  pageDirect: boolean\n  setPageDirect: (pageDirect: boolean) => void\n  isDcaRefresh: boolean\n  setIsDcaRefresh: (isDcaRefresh: boolean) => void\n  dcaMode: string\n  setDcaMode: (dcaMode: string) => void\n  sellTotalAmount: string\n  setSellTotalAmount: (sellTotalAmount: string) => void\n  lowerPriceSize: string\n  setLowerPriceSize: (lowerPriceSize: string) => void\n  upperPriceSize: string\n  setUpperPriceSize: (upperPriceSize: string) => void\n  whiteTokenList: undefined\n  setWhiteTokenList: (whiteTokenList: any) => void\n}\n\nconst store: StateCreator<DcaState> = (set, get) => ({\n  whiteTokenList: undefined,\n  setWhiteTokenList: (whiteTokenList: any) => {\n    set(() => ({\n      whiteTokenList\n    }))\n  },\n  upperPriceSize: '0%',\n  setUpperPriceSize: (upperPriceSize: string) => {\n    set(() => ({\n      upperPriceSize\n    }))\n  },\n  lowerPriceSize: '0%',\n  setLowerPriceSize: (lowerPriceSize: string) => {\n    set(() => ({\n      lowerPriceSize\n    }))\n  },\n  dcaMode: 'total',\n  setDcaMode: (dcaMode: string) => {\n    set(() => ({\n      dcaMode\n    }))\n  },\n  isDcaRefresh: false,\n  setIsDcaRefresh: (isDcaRefresh: boolean) => {\n    set(() => ({\n      isDcaRefresh\n    }))\n  },\n  pageDirect: false,\n  setPageDirect: (pageDirect: boolean) => {\n    set(() => ({\n      pageDirect\n    }))\n  },\n  sellTotalAmount: '',\n  setSellTotalAmount: (value: string) => {\n    set(() => ({\n      sellTotalAmount: value\n    }))\n  },\n  sellAmount: '',\n  setSellAmount: (value: string) => {\n    set(() => ({\n      sellAmount: value\n    }))\n  },\n  buyAmount: '',\n  setBuyAmount: (value: string) => {\n    set(() => ({\n      buyAmount: value\n    }))\n  },\n  sellCoin: undefined,\n  setSellCoin: (value: Token | undefined) => {\n    set(() => ({\n      sellCoin: value\n    }))\n  },\n  buyCoin: undefined,\n  setBuyCoin: (value: Token | undefined) => {\n    set(() => ({\n      buyCoin: value\n    }))\n  },\n  orderNum: '2',\n  setOrderNum: (value: string) => {\n    set(() => ({\n      orderNum: value\n    }))\n  },\n  investNum: '1',\n  setInvestNum: (value: string) => {\n    set(() => ({\n      investNum: value\n    }))\n  },\n  currentCoinKey: 'sellCoin',\n  setCurrentCoinKey: (value: string) => {\n    set(() => ({\n      currentCoinKey: value\n    }))\n  },\n  currentInvest: 'Hour',\n  setCurrentInvest: (value: string) => {\n    set(() => ({\n      currentInvest: value\n    }))\n  },\n  pageLoading: true,\n  setPageLoading: (value: boolean) => {\n    set(() => ({\n      pageLoading: value\n    }))\n  },\n  dcaConfig: {},\n  setDcaConfig: (value: DcaConfig) => {\n    set(() => ({\n      dcaConfig: value\n    }))\n  },\n  dcaQuote: {},\n  setDcaQuote: (value: DcaQuoteData) => {\n    set(() => ({\n      dcaQuote: value\n    }))\n  },\n  orderHistoryObj: {},\n  setOrderHistoryObj: (data: DcaOrderHistoryData) => {\n    set(() => ({\n      orderHistoryObj: { ...get().orderHistoryObj, ...data }\n    }))\n  },\n  inCoinWhiteList: [],\n  setInCoinWhiteList: (list: Token[]) => {\n    set(() => ({\n      inCoinWhiteList: list\n    }))\n  },\n  outCoinWhiteList: [],\n  setOutCoinWhiteList: (list: Token[]) => {\n    set(() => ({\n      outCoinWhiteList: list\n    }))\n  }\n})\n\nconst useDcaStore = create(store)\nexport default useDcaStore\n","import { DcaOrderHistoryPath } from '@/apis/path'\nimport useDcaStore from '@/store/dca'\nimport { useFetch } from '@cetus/hooks'\n\nexport default function useGetDcaOrderHistory() {\n  const { fetchByApi } = useFetch()\n  const { setOrderHistoryObj } = useDcaStore()\n\n  // Ê≤°ÊúâcoinËØ¶ÊÉÖÔºåÁõ∏ÂÖ≥‰ø°ÊÅØÈúÄË¶ÅÂú®UIÂ±ÇÂ§ÑÁêÜ\n  const getDcaOrderHistory = async ({ orderId, limit, offset }: { orderId: string; limit: number; offset: number }) => {\n    const res = await fetchByApi(DcaOrderHistoryPath, 'GET', {\n      order_id: orderId,\n      limit,\n      offset\n    })\n    console.log('üöÄ ~ file: useGetDcaOrderHistory.ts:16 ~ useGetDcaOrderHistory ~ res:', res)\n    if (res?.list) {\n      const result = {\n        [orderId]: {\n          list:\n            res?.list?.map((item: any) => {\n              return {\n                inAmount: item?.in_amount,\n                outAmount: item?.out_amount,\n                inCoinType: item?.in_coin,\n                outCoinType: item?.out_coin,\n                time: item?.execution_at,\n                tx: item?.tx\n              }\n            }) || [],\n          total: res?.total || 0\n        }\n      }\n\n      setOrderHistoryObj(result)\n      return result\n    }\n  }\n\n  return {\n    getDcaOrderHistory\n  }\n}\n"],"names":["useDcaCancel","dcaSdk","useSdk","params","useDcaClaim","convertSecondsToString","seconds","months","weeks","days","hours","minutes","result","useGetDcaOrderList","getTokenListInfo","useGetToken","setDcaOrderListLoading","setDcaActiveOrderList","setDcaPastOrderList","useActiveOrdersStore","getDcaOrderList","walletAddress","isLoading","list","_a","activeResult","pastResult","buildDcaOrderList","error","getTokenListDetails","tokenTypeList","tokenMap","tokenDetailMap","value","key","decimalsPow","Decimal","calculatePriceRanges","inAmountPerCycle","inCoinDecimalsPow","outCoinDecimalsPow","maxOutAmountPerCycle","minOutAmountPerCycle","minPrice","d","maxPrice","determineOrderStatus","order","calculateCurrentOrderMetrics","orderStatus","inDeposited","inWithdrawn","inBalance","outBalance","outWithdraw","calculateReseverPrice","price","currentAvgPrice","inBalanceRatio","shouldShowTradeTips","createdAt","cycleFrequency","nowTime","executedTimes","noRewards","coinTypeList","item","fixCoinType","inCoin","outCoin","cycleCount","eachOrderSize","formatNumber","ofOrderLeft","minPriceResever","maxPriceResever","currentAvgPriceResever","inDepositedOut","isShowTradeTips","orderItem","timeFormatUTC","sortActiveResult","a","b","sortPastResult","store","set","get","whiteTokenList","upperPriceSize","lowerPriceSize","dcaMode","isDcaRefresh","pageDirect","data","useDcaStore","create","useGetDcaOrderHistory","fetchByApi","useFetch","setOrderHistoryObj","orderId","limit","offset","res","DcaOrderHistoryPath"],"mappings":"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"}