{"version":3,"file":"PositionItem-Bu3y-Fls.js","sources":["../../src/components/vaults-v2/modal/VaultPositionRange.tsx","../../src/components/vaults-v2/modal/VaultInfo.tsx","../../src/components/vaults-v2/modal/index.tsx","../../src/components/position/clmm/list/PositionItem.tsx"],"sourcesContent":["import useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { d, formatNumberWithDown } from '@cetus/utils'\nimport { Box, HStack, Popover, PopoverBody, PopoverContent, PopoverTrigger, Skeleton, Text } from '@chakra-ui/react'\nimport { useEffect, useMemo, useRef, useState } from 'react'\n\ntype VaultPositionRangeProps = {\n  minPrice?: string\n  maxPrice?: string\n  currPrice?: string\n}\nfunction VaultPositionRange(props: VaultPositionRangeProps) {\n  const { minPrice, maxPrice, currPrice } = props\n  const [elementWidth, setElementWidth] = useState<number>(0)\n  const [currPriceWidth, setCurrPriceWidth] = useState<number>(0)\n  const elementRef = useRef<HTMLDivElement>(null)\n  const currPriceRef = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    const updateWidths = () => {\n      if (elementRef.current) setElementWidth(elementRef.current.offsetWidth)\n      if (currPriceRef.current) setCurrPriceWidth(currPriceRef.current.offsetWidth)\n    }\n\n    const resizeObserver = new ResizeObserver(updateWidths)\n    const priceResizeObserver = new ResizeObserver(updateWidths)\n\n    if (elementRef.current) resizeObserver.observe(elementRef.current)\n    if (currPriceRef.current) priceResizeObserver.observe(currPriceRef.current)\n\n    return () => {\n      if (elementRef.current) resizeObserver.unobserve(elementRef.current)\n      if (currPriceRef.current) priceResizeObserver.unobserve(currPriceRef.current)\n    }\n  }, [minPrice, maxPrice, currPrice])\n\n  const sliderML = useMemo(() => {\n    if (maxPrice === '∞') return '0px'\n    if (currPrice && minPrice && maxPrice && elementWidth) {\n      if (d(currPrice).lessThanOrEqualTo(maxPrice) && d(currPrice).greaterThanOrEqualTo(minPrice)) {\n        const relativePosition = d(currPrice)\n          .sub(minPrice)\n          .div(d(maxPrice).sub(d(minPrice)))\n          .toString()\n        return `${d(elementWidth).mul(relativePosition).toFixed(0)}px`\n      }\n      if (d(currPrice).lt(minPrice)) {\n        return '-36px'\n      }\n      if (d(currPrice).gt(maxPrice)) {\n        return 'calc(100% + 36px)'\n      }\n    }\n    return '0px'\n  }, [currPrice, minPrice, maxPrice, elementWidth])\n\n  const priceLeft = useMemo(() => {\n    const left = sliderML.replace('px', '')\n    return Number(left) - currPriceWidth / 2 + 'px'\n  }, [sliderML, currPriceWidth])\n\n  const { isApp } = useWindowWidth()\n  return (\n    <>\n      {minPrice !== undefined && maxPrice !== undefined && currPrice !== undefined ? (\n        <HStack w=\"100%\" height=\"60px\" background=\"primary_opacity.10\" borderRadius=\"16px\" p=\"0px 0px 8px\" key={sliderML}>\n          <Box\n            w=\"100%\"\n            padding={minPrice && d(currPrice).lt(minPrice) ? '0 40px 0 60px' : maxPrice && d(currPrice).gt(maxPrice) ? '0 60px 0 40px' : '0 40px'}\n            position=\"relative\"\n          >\n            <Text\n              whiteSpace=\"nowrap\"\n              position=\"absolute\"\n              top=\"20px\"\n              left={minPrice && d(currPrice).lt(minPrice) ? '60px' : '40px'}\n              fontSize=\"12px\"\n              color=\"text_caption\"\n            >\n              {formatNumberWithDown(minPrice)}\n            </Text>\n            <Box\n              w=\"100%\"\n              position=\"relative\"\n              height=\"14px\"\n              ref={elementRef}\n              bgImage=\"url('/images/img_range@2x.png')\"\n              bgSize=\"100% 14px\"\n              bgPosition=\"center\"\n            >\n              <Popover isLazy placement=\"top\" trigger={isApp ? 'click' : 'hover'} autoFocus={false} returnFocusOnClose={false} gutter={4}>\n                <PopoverTrigger>\n                  <Box as=\"button\">\n                    <Box\n                      bg=\"#fff\"\n                      borderRadius=\"8px\"\n                      w=\"4px\"\n                      height=\"15px\"\n                      position=\"absolute\"\n                      top=\"50%\"\n                      transform=\"translateY(-50%)\"\n                      left={sliderML}\n                      ml=\"-2px\"\n                      zIndex=\"5\"\n                    />\n                  </Box>\n                </PopoverTrigger>\n                <PopoverContent\n                  w=\"fit-content\"\n                  bg=\"none\"\n                  border=\"none\"\n                  ref={currPriceRef}\n                  position=\"absolute\"\n                  top=\"-32px !important\"\n                  left={priceLeft}\n                  zIndex=\"5\"\n                >\n                  <PopoverBody fontSize=\"12px\" w=\"fit-content\" bg=\"none\" border=\"none\">\n                    <Text whiteSpace=\"nowrap\" fontSize=\"12px\" color=\"primary\">\n                      {formatNumberWithDown(currPrice)}\n                    </Text>\n                  </PopoverBody>\n                </PopoverContent>\n              </Popover>\n            </Box>\n            <Text\n              whiteSpace=\"nowrap\"\n              position=\"absolute\"\n              top=\"20px\"\n              right={maxPrice && d(currPrice).gt(maxPrice) ? '60px' : '40px'}\n              fontSize=\"12px\"\n              color=\"text_caption\"\n            >\n              {formatNumberWithDown(maxPrice)}\n            </Text>\n          </Box>\n        </HStack>\n      ) : (\n        <HStack w=\"100%\" height=\"60px\" background=\"primary_opacity.10\" borderRadius=\"16px\" p=\"0 40px\">\n          <Skeleton w=\"100%\" h=\"20px\" />\n        </HStack>\n      )}\n    </>\n  )\n}\nexport default VaultPositionRange\n","import useCurrentVaultsFarm from '@/hooks/vaults-farming/useCurrentVaultsFarm'\nimport { Block } from '@cetus/design'\nimport { Token } from '@cetus/types'\nimport { CoinPairImage, VTextLabelBox } from '@cetus/ui-kit'\nimport { Flex, Text, VStack } from '@chakra-ui/react'\nimport VaultsFarmIcon from '../common/VaultsFarmIcon'\nimport VaultsAprBlock from '../list/common/VaultsAprBlock'\nimport VaultPositionRange from './VaultPositionRange'\n\ntype VaultInfoProps = {\n  vaultId: string\n  displayTokenA?: Token\n  displayTokenB?: Token\n  feeDisplay: string\n  clmmPool: string\n  isReverse: boolean\n  minPrice?: string\n  maxPrice?: string\n  currPrice?: string\n  category: string\n  apiVaultInfo?: any\n}\nfunction VaultInfo(props: VaultInfoProps) {\n  const { vaultId, displayTokenA, displayTokenB, feeDisplay, minPrice, maxPrice, currPrice, apiVaultInfo } = props\n\n  const { isVaultsFarming } = useCurrentVaultsFarm(vaultId)\n\n  return (\n    <VStack width=\"calc(100% + 32px)\" padding=\"0 16px\" alignItems=\"left\" paddingBottom=\"16px\" borderBottom=\"1px solid\" borderColor=\"border\">\n      <Flex>\n        <CoinPairImage\n          coinAIconUrl={displayTokenA?.logo_url}\n          coinBIconUrl={displayTokenB?.logo_url}\n          imageStyle={{\n            w: '32px',\n            h: '32px'\n          }}\n          imgBoxStyle={{\n            w: '32px',\n            h: '32px'\n          }}\n        />\n        <Flex marginLeft=\"8px\" justifyContent=\"space-between\" alignItems=\"center\" width=\"100%\">\n          <VStack alignItems=\"flex-start\" gap=\"4px\">\n            <Flex alignItems=\"center\">\n              <Text fontSize=\"16px\" color=\"text_caption\">\n                {`${displayTokenA?.symbol} - ${displayTokenB?.symbol}`}\n              </Text>\n              {isVaultsFarming && (\n                <VaultsFarmIcon\n                  imageStyle={{\n                    ml: '4px'\n                  }}\n                />\n              )}\n            </Flex>\n            <Block w=\"auto\" p=\"3px 12px 2px\" borderRadius=\"12px\" bg=\"none\" borderColor=\"primary\">\n              <Text fontSize=\"12px\" color=\"primary\">\n                {feeDisplay}\n              </Text>\n            </Block>\n          </VStack>\n          <Flex flexDirection=\"column\">\n            {/* <VTextLabelBox\n              wrapStyle={{\n                gap: '2px',\n                alignItems: 'flex-end !important'\n              }}\n              title=\"\"\n              titleStyle={{\n                color: 'primary',\n                fontSize: '12px'\n              }}\n              tooltipStyle={{\n                p: '8px'\n              }}\n              value={\n                <CetusTooltip\n                  tooltip={\n                    apiVaultInfo?.category == 'cetus' ? (\n                      <VaultsAprTooltipContentLST\n                        vaultsLstApyDisplay={apiVaultInfo?.vaultsLstApyDisplay}\n                        vaultsApyDisplay={apiVaultInfo?.vaultsApyDisplay}\n                        vaultsTotalApyDisplay={apiVaultInfo?.vaultsTotalApyDisplay}\n                        vaultsAprDisplay={apiVaultInfo?.vaultsAprDisplay}\n                        category={apiVaultInfo?.category}\n                      />\n                    ) : (\n                      <VaultsAprTooltipContent\n                        vaultsLstApyDisplay={apiVaultInfo?.vaultsLstApyDisplay}\n                        vaultsApyDisplay={apiVaultInfo?.vaultsApyDisplay}\n                        vaultsTotalApyDisplay={apiVaultInfo?.vaultsTotalApyDisplay}\n                        vaultsAprDisplay={apiVaultInfo?.vaultsAprDisplay}\n                        vaultFarmingAprDisplay={vaultFarmingAprDisplay}\n                        category={apiVaultInfo?.category}\n                        isVaultsFarming={isVaultsFarming}\n                      />\n                    )\n                  }\n                >\n                  <HStack>\n                    <HStack>\n                      <Text fontWeight=\"500\" color=\"primary\">\n                        APY:\n                      </Text>\n                      <Text textDecor=\"underline dotted\" color=\"primary\">\n                        {apiVaultInfo?.category == 'cetus' ? apiVaultInfo?.vaultsTotalApyDisplay : apiVaultInfo?.vaultsApyDisplay || '-'}\n                      </Text>\n                    </HStack>\n                    {isVaultsFarming && vaultFarmingAprDisplay && (\n                      <Text p=\"2px 4px\" bg=\"primary_yellow_opacity.10\" color=\"primary_yellow\" borderRadius=\"4px\" fontSize=\"12px\">\n                        +{vaultFarmingAprDisplay}\n                      </Text>\n                    )}\n                  </HStack>\n                </CetusTooltip>\n              }\n              valueStyle={{\n                color: 'text_highlight',\n                h: '20px',\n                lineHeight: '20px',\n                fontSize: '14px',\n                fontWeight: '500',\n                textDecoration: 'none'\n              }}\n            /> */}\n            <VTextLabelBox\n              wrapStyle={{\n                gap: '2px',\n                alignItems: 'flex-end !important'\n              }}\n              title=\"\"\n              titleStyle={{\n                color: 'primary',\n                fontSize: '12px'\n              }}\n              value={\n                <VaultsAprBlock\n                  vaultId={apiVaultInfo?.vaultId}\n                  wrapStyle={{\n                    flexDirection: 'row'\n                  }}\n                />\n              }\n              valueStyle={{\n                color: 'text_highlight',\n                h: '20px',\n                lineHeight: '20px',\n                fontSize: '14px',\n                fontWeight: '500',\n                textDecoration: 'none'\n              }}\n            />\n          </Flex>\n        </Flex>\n      </Flex>\n      <VaultPositionRange minPrice={minPrice} maxPrice={maxPrice} currPrice={currPrice} />\n    </VStack>\n  )\n}\n\nexport default VaultInfo\n","import useGetPythLastPrice from '@/hooks/vault-v2/pyth-price/useGetPythLastPrice'\nimport useCurrentVaultDetail from '@/hooks/vault-v2/useCurrentVaultDetail'\nimport useVaultsFarmingStore from '@/store/vaults-farming'\nimport useVaultsActionStore from '@/store/vaults-v2/useVaultsAction'\nimport useVaultsListV2Store from '@/store/vaults-v2/useVaultsList'\nimport useVaultsPoolStore from '@/store/vaults-v2/useVaultsPool'\nimport { useAccountBalance, useInterval } from '@cetus/hooks'\nimport { useAccountStore } from '@cetus/stores'\nimport { Token } from '@cetus/types'\nimport { isAvailableObject } from '@cetus/utils'\nimport { HStack, Modal, ModalBody, ModalCloseButton, ModalContent, ModalOverlay, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useMemo, useRef } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport PoweredByHaedal from '../common/PoweredByHaedal'\nimport VaultsAction from '../detail/VaultsAction'\nimport VaultInfo from './VaultInfo'\n\ntype VaultModalProps = {\n  isOpen: boolean\n  setIsOpen: (status: boolean) => void\n  displayTokenA?: Token | undefined\n  displayTokenB?: Token | undefined\n  feeDisplay: string\n  clmmPool: string\n  vaultId: string\n  isReverse: boolean\n  category: string\n  setIsOpenFarmingModal: (status: boolean) => void\n  setFarmingModalAction: (value: string) => void\n  isVaultsFarming?: boolean\n  onClose: () => void\n}\nfunction VaultModal(props: VaultModalProps) {\n  const { currentAccount } = useAccountStore()\n  const {\n    isOpen,\n    setIsOpen,\n    vaultId,\n    category,\n    displayTokenA,\n    displayTokenB,\n    feeDisplay,\n    clmmPool,\n    isReverse,\n    setIsOpenFarmingModal,\n    setFarmingModalAction,\n    onClose\n  } = props\n  const { isOpenWalletModal } = useAccountStore()\n  const { getCurrentVaultDetail, getCurrentVaultContractInfo } = useCurrentVaultDetail()\n  const { clearVaultsActionData } = useVaultsActionStore()\n  const { fetchAccountBalance } = useAccountBalance()\n\n  const navigate = useNavigate()\n  const { vaultsPoolObj } = useVaultsPoolStore()\n\n  const currentVaultPool = useMemo(() => {\n    return vaultsPoolObj[vaultId as string]\n  }, [vaultsPoolObj, vaultId])\n\n  const { vaultsFarmObj } = useVaultsFarmingStore()\n  useEffect(() => {\n    if (vaultId && isAvailableObject(vaultsFarmObj)) {\n      getCurrentVaultDetail(vaultId as string)\n    }\n  }, [currentAccount?.address, vaultId, vaultsFarmObj])\n\n  const { getPythLastPrice } = useGetPythLastPrice()\n\n  const isMountedRef = useRef(false)\n\n  useEffect(() => {\n    isMountedRef.current = true\n    return () => {\n      isMountedRef.current = false\n      clearVaultsActionData()\n    }\n  }, [])\n\n  useEffect(() => {\n    if (currentVaultPool?.displayCoinTypeA && currentVaultPool?.displayCoinTypeB) {\n      getPythLastPrice([currentVaultPool?.displayCoinTypeA, currentVaultPool?.displayCoinTypeB])\n    }\n  }, [currentVaultPool?.displayCoinTypeA, currentVaultPool?.displayCoinTypeB])\n\n  useInterval({\n    interval: 20 * 1000,\n    callback: () => {\n      if (isMountedRef.current && (category == 'haedal' || category == 'cetus-dlmm')) {\n        getPythLastPrice([currentVaultPool?.displayCoinTypeA, currentVaultPool?.displayCoinTypeB])\n      }\n    }\n  })\n\n  const autoRefresh = () => {\n    console.log('🚀🚀🚀 ~ q223VaultsDetailPage.tsx:142 ~ autoRefresh ~ autoRefresh:')\n    if (currentAccount?.address) {\n      // 刷新余额\n      fetchAccountBalance()\n      getCurrentVaultDetail(vaultId as string, true)\n    } else {\n      getCurrentVaultContractInfo(vaultId as string)\n    }\n  }\n\n  const { vaultListObj } = useVaultsListV2Store()\n\n  const apiVaultInfo = useMemo(() => {\n    if (isAvailableObject(vaultListObj) && vaultId) {\n      return vaultListObj[vaultId]\n    }\n    return\n  }, [vaultListObj, vaultId])\n\n  return (\n    <Modal\n      isCentered\n      isOpen={isOpen && !isOpenWalletModal}\n      onClose={() => {\n        onClose()\n      }}\n    >\n      <ModalOverlay />\n      <ModalContent width={{ base: '100%', lg: '420px' }}>\n        <ModalBody p=\"0 0 8px\">\n          <VStack width=\"100%\">\n            <VStack\n              width=\"100%\"\n              p=\"6px 16px 16px\"\n              mb=\"-16px\"\n              gap=\"0\"\n              borderRadius=\"16px\"\n              sx={{\n                backgroundImage: \"url('/images/vault_modal_bg@2x.png')\",\n                backgroundPosition: 'top center',\n                backgroundRepeat: 'no-repeat',\n                backgroundSize: '100% 320px'\n              }}\n            >\n              <HStack h=\"36px\" w=\"100%\" mb=\"12px\">\n                <Text color=\"text_caption\" fontWeight=\"500\" fontSize=\"16px\">\n                  Auto Vault\n                </Text>\n                <ModalCloseButton />\n              </HStack>\n              <VaultInfo\n                displayTokenA={displayTokenA}\n                displayTokenB={displayTokenB}\n                feeDisplay={feeDisplay}\n                clmmPool={clmmPool}\n                isReverse={isReverse}\n                minPrice={currentVaultPool?.minPrice}\n                maxPrice={currentVaultPool?.maxPrice}\n                currPrice={currentVaultPool?.currentPrice}\n                category={category}\n                vaultId={vaultId}\n                apiVaultInfo={apiVaultInfo}\n              />\n              <VaultsAction\n                vaultId={vaultId as string}\n                isModal={true}\n                autoRefresh={autoRefresh}\n                setIsOpenFarmingModal={setIsOpenFarmingModal}\n                setFarmingModalAction={setFarmingModalAction}\n                setIsOpenPre={setIsOpen}\n              />\n            </VStack>\n\n            <HStack\n              borderTop=\"1px solid\"\n              borderColor=\"border\"\n              width=\"100%\"\n              padding=\"12px 16px 4px\"\n              justifyContent={category == 'haedal' ? 'space-between' : 'center'}\n            >\n              <PoweredByHaedal mt=\"0\" category={category} />\n              <Text\n                fontSize=\"12px\"\n                _hover={{ color: 'primary' }}\n                whiteSpace=\"nowrap\"\n                cursor=\"pointer\"\n                onClick={() => {\n                  if (category && vaultId) {\n                    clearVaultsActionData()\n                    navigate(`/vaults-detail/${vaultId}/${category}`)\n                  }\n                }}\n              >\n                Vault Details &gt;\n              </Text>\n            </HStack>\n          </VStack>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  )\n}\nexport default VaultModal\n","import { FarmingImage } from '@/components/common/FarmingIcon'\nimport { MiningImage } from '@/components/common/MiningIcon'\nimport usePositionListAction from '@/hooks/position/usePositionListAction'\nimport usePositionStore from '@/store/position'\nimport { DlmmPosBaseInfo } from '@/types/dlmm'\nimport { PosBaseInfo, showNewVersionApr } from '@/types/position'\nimport { Block, TableSortTh } from '@cetus/design'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport useTokenPriceStore from '@cetus/stores/src/tokenPrice'\nimport { d, isAvailableObject } from '@cetus/utils'\nimport { HStack, Skeleton, Text, VStack } from '@chakra-ui/react'\nimport { useDebounceEffect } from 'ahooks'\nimport { useCallback, useMemo, useState } from 'react'\nimport PositionItemContent from '../../common/PositionItemContent'\nconst itemWidth = ['320px', '80px', '170px', '140px', '180px', '224px']\n\nconst SORT_BY_LIST = [\n  { label: 'APR', value: 'apr' },\n  { label: 'Liquidity', value: 'liquidity' },\n  { label: 'Pending Fees', value: 'fees' },\n  { label: 'Pending Rewards', value: 'rewards' },\n  { label: 'Actions', value: 'actions' }\n]\n\nconst SORT_BY_OBJECT = SORT_BY_LIST.reduce((obj: any, item) => {\n  obj[item.value] = item\n  return obj\n}, {})\n\nfunction PositionItem({ poolInfo, priceDirect }: { poolInfo: any; priceDirect?: boolean }) {\n  const itemWidth = showNewVersionApr\n    ? ['380px', '100px', '130px', '170px', '160px', '106px']\n    : ['300px', '100px', '110px', '140px', '180px', '224px']\n  console.log('🚀🚀🚀 ~ PositionItem.tsx:16 ~ PositionItem ~ showNewVersionApr:', showNewVersionApr)\n\n  const SORT_BY_LIST = showNewVersionApr\n    ? [\n        { label: 'APR', value: 'apr' },\n        { label: 'Liquidity', value: 'liquidity' },\n        { label: 'Claimable Yield', value: 'yield' },\n        { label: 'Est. Daily Yield', value: 'dailyEarn' },\n        // { label: 'Claimable Fees', value: 'fees' },\n        // { label: 'Pending Rewards', value: 'rewards' },\n        { label: 'Actions', value: 'actions' }\n      ]\n    : [\n        { label: 'APR', value: 'apr' },\n        { label: 'Liquidity', value: 'liquidity' },\n        { label: 'Pending Fees', value: 'fees' },\n        { label: 'Pending Rewards', value: 'rewards' },\n        { label: 'Actions', value: 'actions' }\n      ]\n\n  const SORT_BY_OBJECT = SORT_BY_LIST.reduce((obj: any, item) => {\n    obj[item.value] = item\n    return obj\n  }, {})\n  console.log('🚀🚀🚀 ~ PositionItem.tsx:38 ~ PositionItem ~ SORT_BY_OBJECT:', SORT_BY_OBJECT)\n  const { coinPriceObj } = useTokenPriceStore()\n  const { getPositionSortList } = usePositionListAction()\n  const { farmsPosRewardsData, posRewardsData } = usePositionStore()\n\n  const [sortRule, setSortRule] = useState<'asc' | 'desc'>('desc')\n  const [sortBy, setSortBy] = useState<{ label: string; value: string }>({ label: '', value: '' })\n\n  const handleClickSort = (item: any) => {\n    if (item?.value === sortBy.value) {\n      setSortRule(prev => (prev === 'desc' ? 'asc' : 'desc'))\n    } else {\n      setSortRule('desc')\n      setSortBy(item)\n    }\n  }\n  const [sortList, setSortList] = useState<(PosBaseInfo | DlmmPosBaseInfo)[]>([])\n  const [listLoading, setListLoading] = useState<boolean>(true)\n  const [positionList, setPositionList] = useState<(PosBaseInfo | DlmmPosBaseInfo)[]>([])\n  const handleGetPositionList = useCallback(async () => {\n    setListLoading(true)\n    try {\n      console.log(sortBy.value, sortRule, poolInfo.list, 'handleGetPositionList')\n      const list = await getPositionSortList(sortBy.value, sortRule, poolInfo.list)\n      setSortList(list)\n      setPositionList(list)\n      setListLoading(false)\n    } catch (error) {\n      console.log(error, 'handleGetPositionList')\n      setListLoading(false)\n    }\n  }, [sortBy.value, sortRule, poolInfo.list, getPositionSortList])\n  useDebounceEffect(\n    () => {\n      if (isAvailableObject(poolInfo)) {\n        handleGetPositionList()\n      }\n    },\n    [handleGetPositionList],\n    { wait: 300 }\n  )\n\n  const hasPositiveAmount = (key: 'totalMiningAmount' | 'totalFarmingAmount') => sortList.some((item: any) => d(item[key]).gt(0))\n\n  const showMiningIcon = useMemo(() => hasPositiveAmount('totalMiningAmount'), [sortList])\n  const showFarmingIcon = useMemo(() => hasPositiveAmount('totalFarmingAmount'), [sortList])\n\n  const { isApp } = useWindowWidth()\n\n  return (\n    <VStack gap=\"12px\" w=\"100%\">\n      {!isApp && (\n        <HStack w=\"100%\" p=\"0 16px\" justify=\"space-between\">\n          <Text w={itemWidth[0]} minW={{ base: 'unset', lg: itemWidth[0] }}>\n            Price Range\n          </Text>\n          {SORT_BY_LIST.map((item, idx) => {\n            if (item.value !== 'rewards' || showMiningIcon || showFarmingIcon) {\n              return (\n                <HStack key={item.value} gap=\"4px\" w={itemWidth[idx + 1]} justify=\"flex-end\">\n                  {!showNewVersionApr && showMiningIcon && item.value === 'rewards' && <MiningImage />}\n                  {!showNewVersionApr && showFarmingIcon && item.value === 'rewards' && <FarmingImage />}\n                  {showNewVersionApr && showMiningIcon && item.value === 'yield' && <MiningImage />}\n                  {showNewVersionApr && showFarmingIcon && item.value === 'yield' && <FarmingImage />}\n                  {item.value == 'actions' && <Text>{item.label}</Text>}\n                  {item.value === 'apr' && showNewVersionApr && (\n                    <TableSortTh\n                      labelInfo={SORT_BY_OBJECT[item.value]}\n                      sortRule={sortRule}\n                      sortBy={sortBy}\n                      clickSort={handleClickSort}\n                      defaultShowSortIcon={true}\n                      tooltip={{\n                        content:\n                          item.value === 'apr' ? (\n                            <span>\n                              APR based on the daily yield accrued by this position. Past performance is not indicative of future results.\n                              Calculations are an estimate and only for reference.\n                            </span>\n                          ) : (\n                            ''\n                          )\n                      }}\n                    />\n                  )}\n                  {item.value !== 'apr' && item.value !== 'actions' && (\n                    <TableSortTh\n                      labelInfo={SORT_BY_OBJECT[item.value]}\n                      sortRule={sortRule}\n                      sortBy={sortBy}\n                      clickSort={handleClickSort}\n                      defaultShowSortIcon={true}\n                      tooltip={{\n                        content:\n                          item.value === 'apr' ? (\n                            <span>\n                              APR based on the daily yield accrued by this position. Past performance is not indicative of future results.\n                              Calculations are an estimate and only for reference.\n                            </span>\n                          ) : (\n                            ''\n                          )\n                      }}\n                    />\n                  )}\n                </HStack>\n              )\n            }\n            return null\n          })}\n        </HStack>\n      )}\n\n      <VStack w=\"100%\" maxH=\"440px\" overflow=\"auto\" gap=\"12px\">\n        {listLoading && positionList?.length === 0\n          ? poolInfo?.list?.map((item, index) => (\n              <Block w=\"100%\" key={index} bg=\"position_bg\" border=\"none\" p={{ base: '16px 8px 12px', lg: '20px 16px ' }} borderRadius=\"16px\">\n                <HStack w=\"100%\" justify=\"space-between\" flexDirection={{ base: 'column', lg: 'row' }}>\n                  <VStack w=\"100%\" align=\"flex-start\" gap=\"14px\">\n                    {isApp && (\n                      <HStack flexDirection={{ base: 'column', lg: 'row' }} w={{ base: '100%', lg: 'unset' }} gap=\"12px\">\n                        <HStack w={{ base: '100%', lg: 'unset' }} justify={{ base: 'space-between', lg: 'flex-start' }}>\n                          <Text color=\"primary_gray\" fontSize={{ base: '14px', lg: '12px' }}>\n                            NFT ID\n                          </Text>\n                          <Skeleton isLoaded={false} h=\"14px\" />\n                        </HStack>\n                        <HStack w={{ base: '100%', lg: 'unset' }} justify={{ base: 'space-between', lg: 'flex-start' }}>\n                          <Text color=\"primary_gray\" fontSize={{ base: '14px', lg: '12px' }} ml={{ base: '0', lg: '8px' }}>\n                            Address\n                          </Text>\n                          <Skeleton isLoaded={false} h=\"14px\" />\n                        </HStack>\n                      </HStack>\n                    )}\n                    <HStack w=\"100%\" justify=\"space-between\" flexDirection={{ base: 'column', lg: 'row' }} gap={{ base: '14px', lg: '8px' }}>\n                      <HStack\n                        minW={{ base: 'unset', lg: itemWidth[0] }}\n                        w={{ base: '100%', lg: itemWidth[0] }}\n                        justify={{ base: 'space-between', lg: 'flex-start' }}\n                      >\n                        {isApp && (\n                          <Text color=\"primary_gray\" whiteSpace=\"nowrap\">\n                            Price Range\n                          </Text>\n                        )}\n                        <Skeleton isLoaded={false} h=\"14px\" w={{ base: '96px', lg: '40%' }} />\n                      </HStack>\n                      {\n                        <HStack w={{ base: '100%', lg: itemWidth[1] }} justify={{ base: 'space-between', lg: 'flex-end' }}>\n                          {isApp && showNewVersionApr && (\n                            <HStack gap=\"2px\">\n                              <Text color=\"primary_gray\">APR</Text>\n                            </HStack>\n                          )}\n                          {showNewVersionApr && <Skeleton isLoaded={false} h=\"14px\" />}\n                        </HStack>\n                      }\n                      <HStack w={{ base: '100%', lg: itemWidth[2] }} justify={{ base: 'space-between', lg: 'flex-end' }}>\n                        {isApp && <Text color=\"primary_gray\">Liquidity</Text>}\n                        <Skeleton isLoaded={false} h=\"14px\" />\n                      </HStack>\n\n                      {showNewVersionApr && (\n                        <HStack w={{ base: '100%', lg: itemWidth[3] }} justify={{ base: 'space-between', lg: 'flex-end' }}>\n                          {isApp && <Text color=\"primary_gray\">Claimable Yield</Text>}\n                          <Skeleton isLoaded={false} h=\"14px\" />\n                        </HStack>\n                      )}\n                      {showNewVersionApr && (\n                        <HStack w={{ base: '100%', lg: itemWidth[4] }} justify={{ base: 'space-between', lg: 'flex-end' }}>\n                          {isApp && <Text color=\"primary_gray\">Est. Daily Yield</Text>}\n                          <Skeleton isLoaded={false} h=\"14px\" />\n                        </HStack>\n                      )}\n                      {!showNewVersionApr && (\n                        <HStack m=\"-12px 0\" w={{ base: '100%', lg: itemWidth[3] }} justify={{ base: 'space-between', lg: 'flex-end' }}>\n                          {isApp && <Text color=\"primary_gray\">Pending Fees</Text>}\n                          <Skeleton isLoaded={false} h=\"14px\" />\n                        </HStack>\n                      )}\n\n                      {!showNewVersionApr && (showMiningIcon || showFarmingIcon) && (\n                        <HStack m=\"-12px 0\" w={{ base: '100%', lg: itemWidth[4] }} justify={{ base: 'space-between', lg: 'flex-end' }}>\n                          {isApp && <Text color=\"primary_gray\">Pending Rewards</Text>}\n                          <HStack gap={{ base: '8px', lg: '12px' }}>\n                            {isApp && showMiningIcon && <MiningImage />}\n                            {isApp && showFarmingIcon && <FarmingImage />}\n                            <Skeleton isLoaded={false} h=\"14px\" />\n                          </HStack>\n                        </HStack>\n                      )}\n                      <HStack w={{ base: '100%', lg: itemWidth[5] }} justify={{ base: 'space-between', lg: 'flex-end' }}>\n                        <Skeleton isLoaded={false} h={{ base: '20px', lg: '14px' }} w={{ base: '100%', lg: '96px' }} />\n                      </HStack>\n                    </HStack>\n                  </VStack>\n                </HStack>\n              </Block>\n            ))\n          : positionList.map((item: any) => (\n              <PositionItemContent\n                poolType=\"clmm\"\n                key={item?.id}\n                positionInfo={item}\n                positionItemWidth={itemWidth}\n                priceDirect={priceDirect}\n                showMiningIcon={showMiningIcon}\n                showFarmingIcon={showFarmingIcon && (!isApp || item.posType == 'farms')}\n              />\n            ))}\n      </VStack>\n    </VStack>\n  )\n}\n\nexport default PositionItem\n"],"names":["VaultPositionRange","props","minPrice","maxPrice","currPrice","elementWidth","setElementWidth","useState","currPriceWidth","setCurrPriceWidth","elementRef","useRef","currPriceRef","useEffect","updateWidths","resizeObserver","priceResizeObserver","sliderML","useMemo","d","relativePosition","priceLeft","left","isApp","useWindowWidth","jsx","HStack","jsxs","Box","Text","Popover","PopoverTrigger","PopoverContent","PopoverBody","formatNumberWithDown","Skeleton","VaultInfo","vaultId","displayTokenA","displayTokenB","feeDisplay","apiVaultInfo","isVaultsFarming","useCurrentVaultsFarm","VStack","Flex","CoinPairImage","VaultsFarmIcon","Block","VTextLabelBox","VaultsAprBlock","VaultModal","currentAccount","useAccountStore","isOpen","setIsOpen","category","clmmPool","isReverse","setIsOpenFarmingModal","setFarmingModalAction","onClose","isOpenWalletModal","getCurrentVaultDetail","getCurrentVaultContractInfo","useCurrentVaultDetail","clearVaultsActionData","useVaultsActionStore","fetchAccountBalance","useAccountBalance","navigate","useNavigate","vaultsPoolObj","useVaultsPoolStore","currentVaultPool","vaultsFarmObj","useVaultsFarmingStore","isAvailableObject","getPythLastPrice","useGetPythLastPrice","isMountedRef","useInterval","autoRefresh","vaultListObj","useVaultsListV2Store","Modal","ModalOverlay","ModalContent","ModalBody","ModalCloseButton","VaultsAction","PoweredByHaedal","SORT_BY_LIST","obj","item","PositionItem","poolInfo","priceDirect","itemWidth","showNewVersionApr","SORT_BY_OBJECT","coinPriceObj","useTokenPriceStore","getPositionSortList","usePositionListAction","farmsPosRewardsData","posRewardsData","usePositionStore","sortRule","setSortRule","sortBy","setSortBy","handleClickSort","prev","sortList","setSortList","listLoading","setListLoading","positionList","setPositionList","handleGetPositionList","useCallback","list","error","useDebounceEffect","hasPositiveAmount","key","showMiningIcon","showFarmingIcon","idx","MiningImage","FarmingImage","TableSortTh","_a","index","PositionItemContent"],"mappings":"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"}