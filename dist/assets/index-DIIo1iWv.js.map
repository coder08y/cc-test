{"version":3,"file":"index-DIIo1iWv.js","sources":["../../../../node_modules/.pnpm/zustand@5.0.3_@types+react@18.3.26_react@18.3.1_use-sync-external-store@1.4.0_react@18.3.1_/node_modules/zustand/esm/middleware.mjs","../../../../node_modules/.pnpm/zustand@5.0.3_@types+react@18.3.26_react@18.3.1_use-sync-external-store@1.4.0_react@18.3.1_/node_modules/zustand/esm/vanilla.mjs","../../../../node_modules/.pnpm/preact@10.24.2/node_modules/preact/dist/preact.module.js","../../../../node_modules/.pnpm/preact@10.24.2/node_modules/preact/hooks/dist/hooks.module.js","../../../../node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/account-abstraction/constants/abis.js","../../../../node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/account-abstraction/utils/userOperation/getInitCode.js","../../../../node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/account-abstraction/utils/userOperation/toPackedUserOperation.js","../../../../node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/account-abstraction/utils/userOperation/getUserOperationTypedData.js","../../../../node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/account-abstraction/utils/userOperation/getUserOperationHash.js","../../../../node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/account-abstraction/accounts/toSmartAccount.js","../../../../node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/account-abstraction/errors/bundler.js","../../../../node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/account-abstraction/errors/userOperation.js","../../../../node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/account-abstraction/utils/errors/getBundlerError.js","../../../../node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/account-abstraction/utils/errors/getUserOperationError.js","../../../../node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/account-abstraction/utils/formatters/userOperationGas.js","../../../../node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/account-abstraction/utils/formatters/userOperationRequest.js","../../../../node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/account-abstraction/actions/paymaster/getPaymasterData.js","../../../../node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/account-abstraction/actions/paymaster/getPaymasterStubData.js","../../../../node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/account-abstraction/actions/bundler/prepareUserOperation.js","../../../../node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/account-abstraction/actions/bundler/estimateUserOperationGas.js","../../../../node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/account-abstraction/actions/bundler/getSupportedEntryPoints.js","../../../../node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/account-abstraction/utils/formatters/userOperation.js","../../../../node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/account-abstraction/actions/bundler/getUserOperation.js","../../../../node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/account-abstraction/utils/formatters/userOperationReceipt.js","../../../../node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/account-abstraction/actions/bundler/getUserOperationReceipt.js","../../../../node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/account-abstraction/actions/bundler/sendUserOperation.js","../../../../node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/account-abstraction/actions/bundler/waitForUserOperationReceipt.js","../../../../node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/account-abstraction/clients/decorators/bundler.js","../../../../node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/account-abstraction/clients/createBundlerClient.js","../../../../node_modules/.pnpm/viem@2.38.2_bufferutil@4.0.9_typescript@5.9.3_utf-8-validate@5.0.10_zod@4.1.12/node_modules/viem/_esm/account-abstraction/constants/address.js","../../../../node_modules/.pnpm/ox@0.6.9_typescript@5.9.3_zod@4.1.12/node_modules/ox/_esm/core/version.js","../../../../node_modules/.pnpm/ox@0.6.9_typescript@5.9.3_zod@4.1.12/node_modules/ox/_esm/core/internal/errors.js","../../../../node_modules/.pnpm/ox@0.6.9_typescript@5.9.3_zod@4.1.12/node_modules/ox/_esm/core/Errors.js","../../../../node_modules/.pnpm/ox@0.6.9_typescript@5.9.3_zod@4.1.12/node_modules/ox/_esm/core/Json.js","../../../../node_modules/.pnpm/ox@0.6.9_typescript@5.9.3_zod@4.1.12/node_modules/ox/_esm/core/internal/bytes.js","../../../../node_modules/.pnpm/ox@0.6.9_typescript@5.9.3_zod@4.1.12/node_modules/ox/_esm/core/internal/hex.js","../../../../node_modules/.pnpm/ox@0.6.9_typescript@5.9.3_zod@4.1.12/node_modules/ox/_esm/core/Hex.js","../../../../node_modules/.pnpm/ox@0.6.9_typescript@5.9.3_zod@4.1.12/node_modules/ox/_esm/core/Bytes.js","../../../../node_modules/.pnpm/ox@0.6.9_typescript@5.9.3_zod@4.1.12/node_modules/ox/_esm/core/Hash.js","../../../../node_modules/.pnpm/ox@0.6.9_typescript@5.9.3_zod@4.1.12/node_modules/ox/_esm/core/PublicKey.js","../../../../node_modules/.pnpm/ox@0.6.9_typescript@5.9.3_zod@4.1.12/node_modules/ox/_esm/core/Solidity.js","../../../../node_modules/.pnpm/ox@0.6.9_typescript@5.9.3_zod@4.1.12/node_modules/ox/_esm/core/Signature.js","../../../../node_modules/.pnpm/ox@0.6.9_typescript@5.9.3_zod@4.1.12/node_modules/ox/_esm/core/Base64.js","../../../../node_modules/.pnpm/@noble+curves@1.9.7/node_modules/@noble/curves/esm/nist.js","../../../../node_modules/.pnpm/@noble+curves@1.9.7/node_modules/@noble/curves/esm/p256.js","../../../../node_modules/.pnpm/ox@0.6.9_typescript@5.9.3_zod@4.1.12/node_modules/ox/_esm/core/WebAuthnP256.js","../../../../node_modules/.pnpm/ox@0.6.9_typescript@5.9.3_zod@4.1.12/node_modules/ox/_esm/core/WebCryptoP256.js","../../../../node_modules/.pnpm/idb-keyval@6.2.1/node_modules/idb-keyval/dist/index.js"],"sourcesContent":["const reduxImpl = (reducer, initial) => (set, _get, api) => {\n  api.dispatch = (action) => {\n    set((state) => reducer(state, action), false, action);\n    return action;\n  };\n  api.dispatchFromDevtools = true;\n  return { dispatch: (...a) => api.dispatch(...a), ...initial };\n};\nconst redux = reduxImpl;\n\nconst trackedConnections = /* @__PURE__ */ new Map();\nconst getTrackedConnectionState = (name) => {\n  const api = trackedConnections.get(name);\n  if (!api) return {};\n  return Object.fromEntries(\n    Object.entries(api.stores).map(([key, api2]) => [key, api2.getState()])\n  );\n};\nconst extractConnectionInformation = (store, extensionConnector, options) => {\n  if (store === undefined) {\n    return {\n      type: \"untracked\",\n      connection: extensionConnector.connect(options)\n    };\n  }\n  const existingConnection = trackedConnections.get(options.name);\n  if (existingConnection) {\n    return { type: \"tracked\", store, ...existingConnection };\n  }\n  const newConnection = {\n    connection: extensionConnector.connect(options),\n    stores: {}\n  };\n  trackedConnections.set(options.name, newConnection);\n  return { type: \"tracked\", store, ...newConnection };\n};\nconst devtoolsImpl = (fn, devtoolsOptions = {}) => (set, get, api) => {\n  const { enabled, anonymousActionType, store, ...options } = devtoolsOptions;\n  let extensionConnector;\n  try {\n    extensionConnector = (enabled != null ? enabled : (import.meta.env ? import.meta.env.MODE : void 0) !== \"production\") && window.__REDUX_DEVTOOLS_EXTENSION__;\n  } catch (e) {\n  }\n  if (!extensionConnector) {\n    return fn(set, get, api);\n  }\n  const { connection, ...connectionInformation } = extractConnectionInformation(store, extensionConnector, options);\n  let isRecording = true;\n  api.setState = (state, replace, nameOrAction) => {\n    const r = set(state, replace);\n    if (!isRecording) return r;\n    const action = nameOrAction === undefined ? { type: anonymousActionType || \"anonymous\" } : typeof nameOrAction === \"string\" ? { type: nameOrAction } : nameOrAction;\n    if (store === undefined) {\n      connection == null ? undefined : connection.send(action, get());\n      return r;\n    }\n    connection == null ? undefined : connection.send(\n      {\n        ...action,\n        type: `${store}/${action.type}`\n      },\n      {\n        ...getTrackedConnectionState(options.name),\n        [store]: api.getState()\n      }\n    );\n    return r;\n  };\n  const setStateFromDevtools = (...a) => {\n    const originalIsRecording = isRecording;\n    isRecording = false;\n    set(...a);\n    isRecording = originalIsRecording;\n  };\n  const initialState = fn(api.setState, get, api);\n  if (connectionInformation.type === \"untracked\") {\n    connection == null ? undefined : connection.init(initialState);\n  } else {\n    connectionInformation.stores[connectionInformation.store] = api;\n    connection == null ? undefined : connection.init(\n      Object.fromEntries(\n        Object.entries(connectionInformation.stores).map(([key, store2]) => [\n          key,\n          key === connectionInformation.store ? initialState : store2.getState()\n        ])\n      )\n    );\n  }\n  if (api.dispatchFromDevtools && typeof api.dispatch === \"function\") {\n    let didWarnAboutReservedActionType = false;\n    const originalDispatch = api.dispatch;\n    api.dispatch = (...a) => {\n      if ((import.meta.env ? import.meta.env.MODE : undefined) !== \"production\" && a[0].type === \"__setState\" && !didWarnAboutReservedActionType) {\n        console.warn(\n          '[zustand devtools middleware] \"__setState\" action type is reserved to set state from the devtools. Avoid using it.'\n        );\n        didWarnAboutReservedActionType = true;\n      }\n      originalDispatch(...a);\n    };\n  }\n  connection.subscribe((message) => {\n    var _a;\n    switch (message.type) {\n      case \"ACTION\":\n        if (typeof message.payload !== \"string\") {\n          console.error(\n            \"[zustand devtools middleware] Unsupported action format\"\n          );\n          return;\n        }\n        return parseJsonThen(\n          message.payload,\n          (action) => {\n            if (action.type === \"__setState\") {\n              if (store === undefined) {\n                setStateFromDevtools(action.state);\n                return;\n              }\n              if (Object.keys(action.state).length !== 1) {\n                console.error(\n                  `\n                    [zustand devtools middleware] Unsupported __setState action format.\n                    When using 'store' option in devtools(), the 'state' should have only one key, which is a value of 'store' that was passed in devtools(),\n                    and value of this only key should be a state object. Example: { \"type\": \"__setState\", \"state\": { \"abc123Store\": { \"foo\": \"bar\" } } }\n                    `\n                );\n              }\n              const stateFromDevtools = action.state[store];\n              if (stateFromDevtools === undefined || stateFromDevtools === null) {\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(stateFromDevtools)) {\n                setStateFromDevtools(stateFromDevtools);\n              }\n              return;\n            }\n            if (!api.dispatchFromDevtools) return;\n            if (typeof api.dispatch !== \"function\") return;\n            api.dispatch(action);\n          }\n        );\n      case \"DISPATCH\":\n        switch (message.payload.type) {\n          case \"RESET\":\n            setStateFromDevtools(initialState);\n            if (store === undefined) {\n              return connection == null ? undefined : connection.init(api.getState());\n            }\n            return connection == null ? undefined : connection.init(getTrackedConnectionState(options.name));\n          case \"COMMIT\":\n            if (store === undefined) {\n              connection == null ? undefined : connection.init(api.getState());\n              return;\n            }\n            return connection == null ? undefined : connection.init(getTrackedConnectionState(options.name));\n          case \"ROLLBACK\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === undefined) {\n                setStateFromDevtools(state);\n                connection == null ? undefined : connection.init(api.getState());\n                return;\n              }\n              setStateFromDevtools(state[store]);\n              connection == null ? undefined : connection.init(getTrackedConnectionState(options.name));\n            });\n          case \"JUMP_TO_STATE\":\n          case \"JUMP_TO_ACTION\":\n            return parseJsonThen(message.state, (state) => {\n              if (store === undefined) {\n                setStateFromDevtools(state);\n                return;\n              }\n              if (JSON.stringify(api.getState()) !== JSON.stringify(state[store])) {\n                setStateFromDevtools(state[store]);\n              }\n            });\n          case \"IMPORT_STATE\": {\n            const { nextLiftedState } = message.payload;\n            const lastComputedState = (_a = nextLiftedState.computedStates.slice(-1)[0]) == null ? undefined : _a.state;\n            if (!lastComputedState) return;\n            if (store === undefined) {\n              setStateFromDevtools(lastComputedState);\n            } else {\n              setStateFromDevtools(lastComputedState[store]);\n            }\n            connection == null ? undefined : connection.send(\n              null,\n              // FIXME no-any\n              nextLiftedState\n            );\n            return;\n          }\n          case \"PAUSE_RECORDING\":\n            return isRecording = !isRecording;\n        }\n        return;\n    }\n  });\n  return initialState;\n};\nconst devtools = devtoolsImpl;\nconst parseJsonThen = (stringified, f) => {\n  let parsed;\n  try {\n    parsed = JSON.parse(stringified);\n  } catch (e) {\n    console.error(\n      \"[zustand devtools middleware] Could not parse the received json\",\n      e\n    );\n  }\n  if (parsed !== undefined) f(parsed);\n};\n\nconst subscribeWithSelectorImpl = (fn) => (set, get, api) => {\n  const origSubscribe = api.subscribe;\n  api.subscribe = (selector, optListener, options) => {\n    let listener = selector;\n    if (optListener) {\n      const equalityFn = (options == null ? undefined : options.equalityFn) || Object.is;\n      let currentSlice = selector(api.getState());\n      listener = (state) => {\n        const nextSlice = selector(state);\n        if (!equalityFn(currentSlice, nextSlice)) {\n          const previousSlice = currentSlice;\n          optListener(currentSlice = nextSlice, previousSlice);\n        }\n      };\n      if (options == null ? undefined : options.fireImmediately) {\n        optListener(currentSlice, currentSlice);\n      }\n    }\n    return origSubscribe(listener);\n  };\n  const initialState = fn(set, get, api);\n  return initialState;\n};\nconst subscribeWithSelector = subscribeWithSelectorImpl;\n\nconst combine = (initialState, create) => (...a) => Object.assign({}, initialState, create(...a));\n\nfunction createJSONStorage(getStorage, options) {\n  let storage;\n  try {\n    storage = getStorage();\n  } catch (e) {\n    return;\n  }\n  const persistStorage = {\n    getItem: (name) => {\n      var _a;\n      const parse = (str2) => {\n        if (str2 === null) {\n          return null;\n        }\n        return JSON.parse(str2, options == null ? undefined : options.reviver);\n      };\n      const str = (_a = storage.getItem(name)) != null ? _a : null;\n      if (str instanceof Promise) {\n        return str.then(parse);\n      }\n      return parse(str);\n    },\n    setItem: (name, newValue) => storage.setItem(\n      name,\n      JSON.stringify(newValue, options == null ? undefined : options.replacer)\n    ),\n    removeItem: (name) => storage.removeItem(name)\n  };\n  return persistStorage;\n}\nconst toThenable = (fn) => (input) => {\n  try {\n    const result = fn(input);\n    if (result instanceof Promise) {\n      return result;\n    }\n    return {\n      then(onFulfilled) {\n        return toThenable(onFulfilled)(result);\n      },\n      catch(_onRejected) {\n        return this;\n      }\n    };\n  } catch (e) {\n    return {\n      then(_onFulfilled) {\n        return this;\n      },\n      catch(onRejected) {\n        return toThenable(onRejected)(e);\n      }\n    };\n  }\n};\nconst persistImpl = (config, baseOptions) => (set, get, api) => {\n  let options = {\n    storage: createJSONStorage(() => localStorage),\n    partialize: (state) => state,\n    version: 0,\n    merge: (persistedState, currentState) => ({\n      ...currentState,\n      ...persistedState\n    }),\n    ...baseOptions\n  };\n  let hasHydrated = false;\n  const hydrationListeners = /* @__PURE__ */ new Set();\n  const finishHydrationListeners = /* @__PURE__ */ new Set();\n  let storage = options.storage;\n  if (!storage) {\n    return config(\n      (...args) => {\n        console.warn(\n          `[zustand persist middleware] Unable to update item '${options.name}', the given storage is currently unavailable.`\n        );\n        set(...args);\n      },\n      get,\n      api\n    );\n  }\n  const setItem = () => {\n    const state = options.partialize({ ...get() });\n    return storage.setItem(options.name, {\n      state,\n      version: options.version\n    });\n  };\n  const savedSetState = api.setState;\n  api.setState = (state, replace) => {\n    savedSetState(state, replace);\n    void setItem();\n  };\n  const configResult = config(\n    (...args) => {\n      set(...args);\n      void setItem();\n    },\n    get,\n    api\n  );\n  api.getInitialState = () => configResult;\n  let stateFromStorage;\n  const hydrate = () => {\n    var _a, _b;\n    if (!storage) return;\n    hasHydrated = false;\n    hydrationListeners.forEach((cb) => {\n      var _a2;\n      return cb((_a2 = get()) != null ? _a2 : configResult);\n    });\n    const postRehydrationCallback = ((_b = options.onRehydrateStorage) == null ? undefined : _b.call(options, (_a = get()) != null ? _a : configResult)) || undefined;\n    return toThenable(storage.getItem.bind(storage))(options.name).then((deserializedStorageValue) => {\n      if (deserializedStorageValue) {\n        if (typeof deserializedStorageValue.version === \"number\" && deserializedStorageValue.version !== options.version) {\n          if (options.migrate) {\n            const migration = options.migrate(\n              deserializedStorageValue.state,\n              deserializedStorageValue.version\n            );\n            if (migration instanceof Promise) {\n              return migration.then((result) => [true, result]);\n            }\n            return [true, migration];\n          }\n          console.error(\n            `State loaded from storage couldn't be migrated since no migrate function was provided`\n          );\n        } else {\n          return [false, deserializedStorageValue.state];\n        }\n      }\n      return [false, undefined];\n    }).then((migrationResult) => {\n      var _a2;\n      const [migrated, migratedState] = migrationResult;\n      stateFromStorage = options.merge(\n        migratedState,\n        (_a2 = get()) != null ? _a2 : configResult\n      );\n      set(stateFromStorage, true);\n      if (migrated) {\n        return setItem();\n      }\n    }).then(() => {\n      postRehydrationCallback == null ? undefined : postRehydrationCallback(stateFromStorage, undefined);\n      stateFromStorage = get();\n      hasHydrated = true;\n      finishHydrationListeners.forEach((cb) => cb(stateFromStorage));\n    }).catch((e) => {\n      postRehydrationCallback == null ? undefined : postRehydrationCallback(undefined, e);\n    });\n  };\n  api.persist = {\n    setOptions: (newOptions) => {\n      options = {\n        ...options,\n        ...newOptions\n      };\n      if (newOptions.storage) {\n        storage = newOptions.storage;\n      }\n    },\n    clearStorage: () => {\n      storage == null ? undefined : storage.removeItem(options.name);\n    },\n    getOptions: () => options,\n    rehydrate: () => hydrate(),\n    hasHydrated: () => hasHydrated,\n    onHydrate: (cb) => {\n      hydrationListeners.add(cb);\n      return () => {\n        hydrationListeners.delete(cb);\n      };\n    },\n    onFinishHydration: (cb) => {\n      finishHydrationListeners.add(cb);\n      return () => {\n        finishHydrationListeners.delete(cb);\n      };\n    }\n  };\n  if (!options.skipHydration) {\n    hydrate();\n  }\n  return stateFromStorage || configResult;\n};\nconst persist = persistImpl;\n\nexport { combine, createJSONStorage, devtools, persist, redux, subscribeWithSelector };\n","const createStoreImpl = (createState) => {\n  let state;\n  const listeners = /* @__PURE__ */ new Set();\n  const setState = (partial, replace) => {\n    const nextState = typeof partial === \"function\" ? partial(state) : partial;\n    if (!Object.is(nextState, state)) {\n      const previousState = state;\n      state = (replace != null ? replace : typeof nextState !== \"object\" || nextState === null) ? nextState : Object.assign({}, state, nextState);\n      listeners.forEach((listener) => listener(state, previousState));\n    }\n  };\n  const getState = () => state;\n  const getInitialState = () => initialState;\n  const subscribe = (listener) => {\n    listeners.add(listener);\n    return () => listeners.delete(listener);\n  };\n  const api = { setState, getState, getInitialState, subscribe };\n  const initialState = state = createState(setState, getState, api);\n  return api;\n};\nconst createStore = (createState) => createState ? createStoreImpl(createState) : createStoreImpl;\n\nexport { createStore };\n","var n,l,u,t,i,o,r,f,e,c,s,a,h={},v=[],p=/acit|ex(?:s|g|n|p|$)|rph|grid|ows|mnc|ntw|ine[ch]|zoo|^ord|itera/i,y=Array.isArray;function d(n,l){for(var u in l)n[u]=l[u];return n}function w(n){n&&n.parentNode&&n.parentNode.removeChild(n)}function _(l,u,t){var i,o,r,f={};for(r in u)\"key\"==r?i=u[r]:\"ref\"==r?o=u[r]:f[r]=u[r];if(arguments.length>2&&(f.children=arguments.length>3?n.call(arguments,2):t),\"function\"==typeof l&&null!=l.defaultProps)for(r in l.defaultProps)void 0===f[r]&&(f[r]=l.defaultProps[r]);return g(l,f,i,o,null)}function g(n,t,i,o,r){var f={type:n,props:t,key:i,ref:o,__k:null,__:null,__b:0,__e:null,__d:void 0,__c:null,constructor:void 0,__v:null==r?++u:r,__i:-1,__u:0};return null==r&&null!=l.vnode&&l.vnode(f),f}function m(){return{current:null}}function b(n){return n.children}function k(n,l){this.props=n,this.context=l}function x(n,l){if(null==l)return n.__?x(n.__,n.__i+1):null;for(var u;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e)return u.__e;return\"function\"==typeof n.type?x(n):null}function C(n){var l,u;if(null!=(n=n.__)&&null!=n.__c){for(n.__e=n.__c.base=null,l=0;l<n.__k.length;l++)if(null!=(u=n.__k[l])&&null!=u.__e){n.__e=n.__c.base=u.__e;break}return C(n)}}function M(n){(!n.__d&&(n.__d=!0)&&i.push(n)&&!P.__r++||o!==l.debounceRendering)&&((o=l.debounceRendering)||r)(P)}function P(){var n,u,t,o,r,e,c,s;for(i.sort(f);n=i.shift();)n.__d&&(u=i.length,o=void 0,e=(r=(t=n).__v).__e,c=[],s=[],t.__P&&((o=d({},r)).__v=r.__v+1,l.vnode&&l.vnode(o),O(t.__P,o,r,t.__n,t.__P.namespaceURI,32&r.__u?[e]:null,c,null==e?x(r):e,!!(32&r.__u),s),o.__v=r.__v,o.__.__k[o.__i]=o,j(c,o,s),o.__e!=e&&C(o)),i.length>u&&i.sort(f));P.__r=0}function S(n,l,u,t,i,o,r,f,e,c,s){var a,p,y,d,w,_=t&&t.__k||v,g=l.length;for(u.__d=e,$(u,l,_),e=u.__d,a=0;a<g;a++)null!=(y=u.__k[a])&&(p=-1===y.__i?h:_[y.__i]||h,y.__i=a,O(n,y,p,i,o,r,f,e,c,s),d=y.__e,y.ref&&p.ref!=y.ref&&(p.ref&&N(p.ref,null,y),s.push(y.ref,y.__c||d,y)),null==w&&null!=d&&(w=d),65536&y.__u||p.__k===y.__k?e=I(y,e,n):\"function\"==typeof y.type&&void 0!==y.__d?e=y.__d:d&&(e=d.nextSibling),y.__d=void 0,y.__u&=-196609);u.__d=e,u.__e=w}function $(n,l,u){var t,i,o,r,f,e=l.length,c=u.length,s=c,a=0;for(n.__k=[],t=0;t<e;t++)null!=(i=l[t])&&\"boolean\"!=typeof i&&\"function\"!=typeof i?(r=t+a,(i=n.__k[t]=\"string\"==typeof i||\"number\"==typeof i||\"bigint\"==typeof i||i.constructor==String?g(null,i,null,null,null):y(i)?g(b,{children:i},null,null,null):void 0===i.constructor&&i.__b>0?g(i.type,i.props,i.key,i.ref?i.ref:null,i.__v):i).__=n,i.__b=n.__b+1,o=null,-1!==(f=i.__i=L(i,u,r,s))&&(s--,(o=u[f])&&(o.__u|=131072)),null==o||null===o.__v?(-1==f&&a--,\"function\"!=typeof i.type&&(i.__u|=65536)):f!==r&&(f==r-1?a--:f==r+1?a++:(f>r?a--:a++,i.__u|=65536))):i=n.__k[t]=null;if(s)for(t=0;t<c;t++)null!=(o=u[t])&&0==(131072&o.__u)&&(o.__e==n.__d&&(n.__d=x(o)),V(o,o))}function I(n,l,u){var t,i;if(\"function\"==typeof n.type){for(t=n.__k,i=0;t&&i<t.length;i++)t[i]&&(t[i].__=n,l=I(t[i],l,u));return l}n.__e!=l&&(l&&n.type&&!u.contains(l)&&(l=x(n)),u.insertBefore(n.__e,l||null),l=n.__e);do{l=l&&l.nextSibling}while(null!=l&&8===l.nodeType);return l}function H(n,l){return l=l||[],null==n||\"boolean\"==typeof n||(y(n)?n.some(function(n){H(n,l)}):l.push(n)),l}function L(n,l,u,t){var i=n.key,o=n.type,r=u-1,f=u+1,e=l[u];if(null===e||e&&i==e.key&&o===e.type&&0==(131072&e.__u))return u;if(t>(null!=e&&0==(131072&e.__u)?1:0))for(;r>=0||f<l.length;){if(r>=0){if((e=l[r])&&0==(131072&e.__u)&&i==e.key&&o===e.type)return r;r--}if(f<l.length){if((e=l[f])&&0==(131072&e.__u)&&i==e.key&&o===e.type)return f;f++}}return-1}function T(n,l,u){\"-\"===l[0]?n.setProperty(l,null==u?\"\":u):n[l]=null==u?\"\":\"number\"!=typeof u||p.test(l)?u:u+\"px\"}function A(n,l,u,t,i){var o;n:if(\"style\"===l)if(\"string\"==typeof u)n.style.cssText=u;else{if(\"string\"==typeof t&&(n.style.cssText=t=\"\"),t)for(l in t)u&&l in u||T(n.style,l,\"\");if(u)for(l in u)t&&u[l]===t[l]||T(n.style,l,u[l])}else if(\"o\"===l[0]&&\"n\"===l[1])o=l!==(l=l.replace(/(PointerCapture)$|Capture$/i,\"$1\")),l=l.toLowerCase()in n||\"onFocusOut\"===l||\"onFocusIn\"===l?l.toLowerCase().slice(2):l.slice(2),n.l||(n.l={}),n.l[l+o]=u,u?t?u.u=t.u:(u.u=e,n.addEventListener(l,o?s:c,o)):n.removeEventListener(l,o?s:c,o);else{if(\"http://www.w3.org/2000/svg\"==i)l=l.replace(/xlink(H|:h)/,\"h\").replace(/sName$/,\"s\");else if(\"width\"!=l&&\"height\"!=l&&\"href\"!=l&&\"list\"!=l&&\"form\"!=l&&\"tabIndex\"!=l&&\"download\"!=l&&\"rowSpan\"!=l&&\"colSpan\"!=l&&\"role\"!=l&&\"popover\"!=l&&l in n)try{n[l]=null==u?\"\":u;break n}catch(n){}\"function\"==typeof u||(null==u||!1===u&&\"-\"!==l[4]?n.removeAttribute(l):n.setAttribute(l,\"popover\"==l&&1==u?\"\":u))}}function F(n){return function(u){if(this.l){var t=this.l[u.type+n];if(null==u.t)u.t=e++;else if(u.t<t.u)return;return t(l.event?l.event(u):u)}}}function O(n,u,t,i,o,r,f,e,c,s){var a,h,v,p,w,_,g,m,x,C,M,P,$,I,H,L,T=u.type;if(void 0!==u.constructor)return null;128&t.__u&&(c=!!(32&t.__u),r=[e=u.__e=t.__e]),(a=l.__b)&&a(u);n:if(\"function\"==typeof T)try{if(m=u.props,x=\"prototype\"in T&&T.prototype.render,C=(a=T.contextType)&&i[a.__c],M=a?C?C.props.value:a.__:i,t.__c?g=(h=u.__c=t.__c).__=h.__E:(x?u.__c=h=new T(m,M):(u.__c=h=new k(m,M),h.constructor=T,h.render=q),C&&C.sub(h),h.props=m,h.state||(h.state={}),h.context=M,h.__n=i,v=h.__d=!0,h.__h=[],h._sb=[]),x&&null==h.__s&&(h.__s=h.state),x&&null!=T.getDerivedStateFromProps&&(h.__s==h.state&&(h.__s=d({},h.__s)),d(h.__s,T.getDerivedStateFromProps(m,h.__s))),p=h.props,w=h.state,h.__v=u,v)x&&null==T.getDerivedStateFromProps&&null!=h.componentWillMount&&h.componentWillMount(),x&&null!=h.componentDidMount&&h.__h.push(h.componentDidMount);else{if(x&&null==T.getDerivedStateFromProps&&m!==p&&null!=h.componentWillReceiveProps&&h.componentWillReceiveProps(m,M),!h.__e&&(null!=h.shouldComponentUpdate&&!1===h.shouldComponentUpdate(m,h.__s,M)||u.__v===t.__v)){for(u.__v!==t.__v&&(h.props=m,h.state=h.__s,h.__d=!1),u.__e=t.__e,u.__k=t.__k,u.__k.some(function(n){n&&(n.__=u)}),P=0;P<h._sb.length;P++)h.__h.push(h._sb[P]);h._sb=[],h.__h.length&&f.push(h);break n}null!=h.componentWillUpdate&&h.componentWillUpdate(m,h.__s,M),x&&null!=h.componentDidUpdate&&h.__h.push(function(){h.componentDidUpdate(p,w,_)})}if(h.context=M,h.props=m,h.__P=n,h.__e=!1,$=l.__r,I=0,x){for(h.state=h.__s,h.__d=!1,$&&$(u),a=h.render(h.props,h.state,h.context),H=0;H<h._sb.length;H++)h.__h.push(h._sb[H]);h._sb=[]}else do{h.__d=!1,$&&$(u),a=h.render(h.props,h.state,h.context),h.state=h.__s}while(h.__d&&++I<25);h.state=h.__s,null!=h.getChildContext&&(i=d(d({},i),h.getChildContext())),x&&!v&&null!=h.getSnapshotBeforeUpdate&&(_=h.getSnapshotBeforeUpdate(p,w)),S(n,y(L=null!=a&&a.type===b&&null==a.key?a.props.children:a)?L:[L],u,t,i,o,r,f,e,c,s),h.base=u.__e,u.__u&=-161,h.__h.length&&f.push(h),g&&(h.__E=h.__=null)}catch(n){if(u.__v=null,c||null!=r){for(u.__u|=c?160:32;e&&8===e.nodeType&&e.nextSibling;)e=e.nextSibling;r[r.indexOf(e)]=null,u.__e=e}else u.__e=t.__e,u.__k=t.__k;l.__e(n,u,t)}else null==r&&u.__v===t.__v?(u.__k=t.__k,u.__e=t.__e):u.__e=z(t.__e,u,t,i,o,r,f,c,s);(a=l.diffed)&&a(u)}function j(n,u,t){u.__d=void 0;for(var i=0;i<t.length;i++)N(t[i],t[++i],t[++i]);l.__c&&l.__c(u,n),n.some(function(u){try{n=u.__h,u.__h=[],n.some(function(n){n.call(u)})}catch(n){l.__e(n,u.__v)}})}function z(u,t,i,o,r,f,e,c,s){var a,v,p,d,_,g,m,b=i.props,k=t.props,C=t.type;if(\"svg\"===C?r=\"http://www.w3.org/2000/svg\":\"math\"===C?r=\"http://www.w3.org/1998/Math/MathML\":r||(r=\"http://www.w3.org/1999/xhtml\"),null!=f)for(a=0;a<f.length;a++)if((_=f[a])&&\"setAttribute\"in _==!!C&&(C?_.localName===C:3===_.nodeType)){u=_,f[a]=null;break}if(null==u){if(null===C)return document.createTextNode(k);u=document.createElementNS(r,C,k.is&&k),c&&(l.__m&&l.__m(t,f),c=!1),f=null}if(null===C)b===k||c&&u.data===k||(u.data=k);else{if(f=f&&n.call(u.childNodes),b=i.props||h,!c&&null!=f)for(b={},a=0;a<u.attributes.length;a++)b[(_=u.attributes[a]).name]=_.value;for(a in b)if(_=b[a],\"children\"==a);else if(\"dangerouslySetInnerHTML\"==a)p=_;else if(!(a in k)){if(\"value\"==a&&\"defaultValue\"in k||\"checked\"==a&&\"defaultChecked\"in k)continue;A(u,a,null,_,r)}for(a in k)_=k[a],\"children\"==a?d=_:\"dangerouslySetInnerHTML\"==a?v=_:\"value\"==a?g=_:\"checked\"==a?m=_:c&&\"function\"!=typeof _||b[a]===_||A(u,a,_,b[a],r);if(v)c||p&&(v.__html===p.__html||v.__html===u.innerHTML)||(u.innerHTML=v.__html),t.__k=[];else if(p&&(u.innerHTML=\"\"),S(u,y(d)?d:[d],t,i,o,\"foreignObject\"===C?\"http://www.w3.org/1999/xhtml\":r,f,e,f?f[0]:i.__k&&x(i,0),c,s),null!=f)for(a=f.length;a--;)w(f[a]);c||(a=\"value\",\"progress\"===C&&null==g?u.removeAttribute(\"value\"):void 0!==g&&(g!==u[a]||\"progress\"===C&&!g||\"option\"===C&&g!==b[a])&&A(u,a,g,b[a],r),a=\"checked\",void 0!==m&&m!==u[a]&&A(u,a,m,b[a],r))}return u}function N(n,u,t){try{if(\"function\"==typeof n){var i=\"function\"==typeof n.__u;i&&n.__u(),i&&null==u||(n.__u=n(u))}else n.current=u}catch(n){l.__e(n,t)}}function V(n,u,t){var i,o;if(l.unmount&&l.unmount(n),(i=n.ref)&&(i.current&&i.current!==n.__e||N(i,null,u)),null!=(i=n.__c)){if(i.componentWillUnmount)try{i.componentWillUnmount()}catch(n){l.__e(n,u)}i.base=i.__P=null}if(i=n.__k)for(o=0;o<i.length;o++)i[o]&&V(i[o],u,t||\"function\"!=typeof n.type);t||w(n.__e),n.__c=n.__=n.__e=n.__d=void 0}function q(n,l,u){return this.constructor(n,u)}function B(u,t,i){var o,r,f,e;l.__&&l.__(u,t),r=(o=\"function\"==typeof i)?null:i&&i.__k||t.__k,f=[],e=[],O(t,u=(!o&&i||t).__k=_(b,null,[u]),r||h,h,t.namespaceURI,!o&&i?[i]:r?null:t.firstChild?n.call(t.childNodes):null,f,!o&&i?i:r?r.__e:t.firstChild,o,e),j(f,u,e)}function D(n,l){B(n,l,D)}function E(l,u,t){var i,o,r,f,e=d({},l.props);for(r in l.type&&l.type.defaultProps&&(f=l.type.defaultProps),u)\"key\"==r?i=u[r]:\"ref\"==r?o=u[r]:e[r]=void 0===u[r]&&void 0!==f?f[r]:u[r];return arguments.length>2&&(e.children=arguments.length>3?n.call(arguments,2):t),g(l.type,e,i||l.key,o||l.ref,null)}function G(n,l){var u={__c:l=\"__cC\"+a++,__:n,Consumer:function(n,l){return n.children(l)},Provider:function(n){var u,t;return this.getChildContext||(u=[],(t={})[l]=this,this.getChildContext=function(){return t},this.componentWillUnmount=function(){u=null},this.shouldComponentUpdate=function(n){this.props.value!==n.value&&u.some(function(n){n.__e=!0,M(n)})},this.sub=function(n){u.push(n);var l=n.componentWillUnmount;n.componentWillUnmount=function(){u&&u.splice(u.indexOf(n),1),l&&l.call(n)}}),n.children}};return u.Provider.__=u.Consumer.contextType=u}n=v.slice,l={__e:function(n,l,u,t){for(var i,o,r;l=l.__;)if((i=l.__c)&&!i.__)try{if((o=i.constructor)&&null!=o.getDerivedStateFromError&&(i.setState(o.getDerivedStateFromError(n)),r=i.__d),null!=i.componentDidCatch&&(i.componentDidCatch(n,t||{}),r=i.__d),r)return i.__E=i}catch(l){n=l}throw n}},u=0,t=function(n){return null!=n&&null==n.constructor},k.prototype.setState=function(n,l){var u;u=null!=this.__s&&this.__s!==this.state?this.__s:this.__s=d({},this.state),\"function\"==typeof n&&(n=n(d({},u),this.props)),n&&d(u,n),null!=n&&this.__v&&(l&&this._sb.push(l),M(this))},k.prototype.forceUpdate=function(n){this.__v&&(this.__e=!0,n&&this.__h.push(n),M(this))},k.prototype.render=b,i=[],r=\"function\"==typeof Promise?Promise.prototype.then.bind(Promise.resolve()):setTimeout,f=function(n,l){return n.__v.__b-l.__v.__b},P.__r=0,e=0,c=F(!1),s=F(!0),a=0;export{k as Component,b as Fragment,E as cloneElement,G as createContext,_ as createElement,m as createRef,_ as h,D as hydrate,t as isValidElement,l as options,B as render,H as toChildArray};\n//# sourceMappingURL=preact.module.js.map\n","import{options as n}from\"preact\";var t,r,u,i,o=0,f=[],c=n,e=c.__b,a=c.__r,v=c.diffed,l=c.__c,m=c.unmount,s=c.__;function d(n,t){c.__h&&c.__h(r,n,o||t),o=0;var u=r.__H||(r.__H={__:[],__h:[]});return n>=u.__.length&&u.__.push({}),u.__[n]}function h(n){return o=1,p(D,n)}function p(n,u,i){var o=d(t++,2);if(o.t=n,!o.__c&&(o.__=[i?i(u):D(void 0,u),function(n){var t=o.__N?o.__N[0]:o.__[0],r=o.t(t,n);t!==r&&(o.__N=[r,o.__[1]],o.__c.setState({}))}],o.__c=r,!r.u)){var f=function(n,t,r){if(!o.__c.__H)return!0;var u=o.__c.__H.__.filter(function(n){return!!n.__c});if(u.every(function(n){return!n.__N}))return!c||c.call(this,n,t,r);var i=!1;return u.forEach(function(n){if(n.__N){var t=n.__[0];n.__=n.__N,n.__N=void 0,t!==n.__[0]&&(i=!0)}}),!(!i&&o.__c.props===n)&&(!c||c.call(this,n,t,r))};r.u=!0;var c=r.shouldComponentUpdate,e=r.componentWillUpdate;r.componentWillUpdate=function(n,t,r){if(this.__e){var u=c;c=void 0,f(n,t,r),c=u}e&&e.call(this,n,t,r)},r.shouldComponentUpdate=f}return o.__N||o.__}function y(n,u){var i=d(t++,3);!c.__s&&C(i.__H,u)&&(i.__=n,i.i=u,r.__H.__h.push(i))}function _(n,u){var i=d(t++,4);!c.__s&&C(i.__H,u)&&(i.__=n,i.i=u,r.__h.push(i))}function A(n){return o=5,T(function(){return{current:n}},[])}function F(n,t,r){o=6,_(function(){return\"function\"==typeof n?(n(t()),function(){return n(null)}):n?(n.current=t(),function(){return n.current=null}):void 0},null==r?r:r.concat(n))}function T(n,r){var u=d(t++,7);return C(u.__H,r)&&(u.__=n(),u.__H=r,u.__h=n),u.__}function q(n,t){return o=8,T(function(){return n},t)}function x(n){var u=r.context[n.__c],i=d(t++,9);return i.c=n,u?(null==i.__&&(i.__=!0,u.sub(r)),u.props.value):n.__}function P(n,t){c.useDebugValue&&c.useDebugValue(t?t(n):n)}function b(n){var u=d(t++,10),i=h();return u.__=n,r.componentDidCatch||(r.componentDidCatch=function(n,t){u.__&&u.__(n,t),i[1](n)}),[i[0],function(){i[1](void 0)}]}function g(){var n=d(t++,11);if(!n.__){for(var u=r.__v;null!==u&&!u.__m&&null!==u.__;)u=u.__;var i=u.__m||(u.__m=[0,0]);n.__=\"P\"+i[0]+\"-\"+i[1]++}return n.__}function j(){for(var n;n=f.shift();)if(n.__P&&n.__H)try{n.__H.__h.forEach(z),n.__H.__h.forEach(B),n.__H.__h=[]}catch(t){n.__H.__h=[],c.__e(t,n.__v)}}c.__b=function(n){r=null,e&&e(n)},c.__=function(n,t){n&&t.__k&&t.__k.__m&&(n.__m=t.__k.__m),s&&s(n,t)},c.__r=function(n){a&&a(n),t=0;var i=(r=n.__c).__H;i&&(u===r?(i.__h=[],r.__h=[],i.__.forEach(function(n){n.__N&&(n.__=n.__N),n.i=n.__N=void 0})):(i.__h.forEach(z),i.__h.forEach(B),i.__h=[],t=0)),u=r},c.diffed=function(n){v&&v(n);var t=n.__c;t&&t.__H&&(t.__H.__h.length&&(1!==f.push(t)&&i===c.requestAnimationFrame||((i=c.requestAnimationFrame)||w)(j)),t.__H.__.forEach(function(n){n.i&&(n.__H=n.i),n.i=void 0})),u=r=null},c.__c=function(n,t){t.some(function(n){try{n.__h.forEach(z),n.__h=n.__h.filter(function(n){return!n.__||B(n)})}catch(r){t.some(function(n){n.__h&&(n.__h=[])}),t=[],c.__e(r,n.__v)}}),l&&l(n,t)},c.unmount=function(n){m&&m(n);var t,r=n.__c;r&&r.__H&&(r.__H.__.forEach(function(n){try{z(n)}catch(n){t=n}}),r.__H=void 0,t&&c.__e(t,r.__v))};var k=\"function\"==typeof requestAnimationFrame;function w(n){var t,r=function(){clearTimeout(u),k&&cancelAnimationFrame(t),setTimeout(n)},u=setTimeout(r,100);k&&(t=requestAnimationFrame(r))}function z(n){var t=r,u=n.__c;\"function\"==typeof u&&(n.__c=void 0,u()),r=t}function B(n){var t=r;n.__c=n.__(),r=t}function C(n,t){return!n||n.length!==t.length||t.some(function(t,r){return t!==n[r]})}function D(n,t){return\"function\"==typeof t?t(n):t}export{q as useCallback,x as useContext,P as useDebugValue,y as useEffect,b as useErrorBoundary,g as useId,F as useImperativeHandle,_ as useLayoutEffect,T as useMemo,p as useReducer,A as useRef,h as useState};\n//# sourceMappingURL=hooks.module.js.map\n","export const entryPoint06Abi = [\n    {\n        inputs: [\n            { name: 'preOpGas', type: 'uint256' },\n            { name: 'paid', type: 'uint256' },\n            { name: 'validAfter', type: 'uint48' },\n            { name: 'validUntil', type: 'uint48' },\n            { name: 'targetSuccess', type: 'bool' },\n            { name: 'targetResult', type: 'bytes' },\n        ],\n        name: 'ExecutionResult',\n        type: 'error',\n    },\n    {\n        inputs: [\n            { name: 'opIndex', type: 'uint256' },\n            { name: 'reason', type: 'string' },\n        ],\n        name: 'FailedOp',\n        type: 'error',\n    },\n    {\n        inputs: [{ name: 'sender', type: 'address' }],\n        name: 'SenderAddressResult',\n        type: 'error',\n    },\n    {\n        inputs: [{ name: 'aggregator', type: 'address' }],\n        name: 'SignatureValidationFailed',\n        type: 'error',\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    { name: 'preOpGas', type: 'uint256' },\n                    { name: 'prefund', type: 'uint256' },\n                    { name: 'sigFailed', type: 'bool' },\n                    { name: 'validAfter', type: 'uint48' },\n                    { name: 'validUntil', type: 'uint48' },\n                    { name: 'paymasterContext', type: 'bytes' },\n                ],\n                name: 'returnInfo',\n                type: 'tuple',\n            },\n            {\n                components: [\n                    { name: 'stake', type: 'uint256' },\n                    { name: 'unstakeDelaySec', type: 'uint256' },\n                ],\n                name: 'senderInfo',\n                type: 'tuple',\n            },\n            {\n                components: [\n                    { name: 'stake', type: 'uint256' },\n                    { name: 'unstakeDelaySec', type: 'uint256' },\n                ],\n                name: 'factoryInfo',\n                type: 'tuple',\n            },\n            {\n                components: [\n                    { name: 'stake', type: 'uint256' },\n                    { name: 'unstakeDelaySec', type: 'uint256' },\n                ],\n                name: 'paymasterInfo',\n                type: 'tuple',\n            },\n        ],\n        name: 'ValidationResult',\n        type: 'error',\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    { name: 'preOpGas', type: 'uint256' },\n                    { name: 'prefund', type: 'uint256' },\n                    { name: 'sigFailed', type: 'bool' },\n                    { name: 'validAfter', type: 'uint48' },\n                    { name: 'validUntil', type: 'uint48' },\n                    { name: 'paymasterContext', type: 'bytes' },\n                ],\n                name: 'returnInfo',\n                type: 'tuple',\n            },\n            {\n                components: [\n                    { name: 'stake', type: 'uint256' },\n                    { name: 'unstakeDelaySec', type: 'uint256' },\n                ],\n                name: 'senderInfo',\n                type: 'tuple',\n            },\n            {\n                components: [\n                    { name: 'stake', type: 'uint256' },\n                    { name: 'unstakeDelaySec', type: 'uint256' },\n                ],\n                name: 'factoryInfo',\n                type: 'tuple',\n            },\n            {\n                components: [\n                    { name: 'stake', type: 'uint256' },\n                    { name: 'unstakeDelaySec', type: 'uint256' },\n                ],\n                name: 'paymasterInfo',\n                type: 'tuple',\n            },\n            {\n                components: [\n                    { name: 'aggregator', type: 'address' },\n                    {\n                        components: [\n                            { name: 'stake', type: 'uint256' },\n                            {\n                                name: 'unstakeDelaySec',\n                                type: 'uint256',\n                            },\n                        ],\n                        name: 'stakeInfo',\n                        type: 'tuple',\n                    },\n                ],\n                name: 'aggregatorInfo',\n                type: 'tuple',\n            },\n        ],\n        name: 'ValidationResultWithAggregation',\n        type: 'error',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'userOpHash',\n                type: 'bytes32',\n            },\n            {\n                indexed: true,\n                name: 'sender',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'factory',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'paymaster',\n                type: 'address',\n            },\n        ],\n        name: 'AccountDeployed',\n        type: 'event',\n    },\n    { anonymous: false, inputs: [], name: 'BeforeExecution', type: 'event' },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'account',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'totalDeposit',\n                type: 'uint256',\n            },\n        ],\n        name: 'Deposited',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'aggregator',\n                type: 'address',\n            },\n        ],\n        name: 'SignatureAggregatorChanged',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'account',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'totalStaked',\n                type: 'uint256',\n            },\n            {\n                indexed: false,\n                name: 'unstakeDelaySec',\n                type: 'uint256',\n            },\n        ],\n        name: 'StakeLocked',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'account',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'withdrawTime',\n                type: 'uint256',\n            },\n        ],\n        name: 'StakeUnlocked',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'account',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'withdrawAddress',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'amount',\n                type: 'uint256',\n            },\n        ],\n        name: 'StakeWithdrawn',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'userOpHash',\n                type: 'bytes32',\n            },\n            {\n                indexed: true,\n                name: 'sender',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                name: 'paymaster',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'nonce',\n                type: 'uint256',\n            },\n            { indexed: false, name: 'success', type: 'bool' },\n            {\n                indexed: false,\n                name: 'actualGasCost',\n                type: 'uint256',\n            },\n            {\n                indexed: false,\n                name: 'actualGasUsed',\n                type: 'uint256',\n            },\n        ],\n        name: 'UserOperationEvent',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'userOpHash',\n                type: 'bytes32',\n            },\n            {\n                indexed: true,\n                name: 'sender',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'nonce',\n                type: 'uint256',\n            },\n            {\n                indexed: false,\n                name: 'revertReason',\n                type: 'bytes',\n            },\n        ],\n        name: 'UserOperationRevertReason',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'account',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'withdrawAddress',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'amount',\n                type: 'uint256',\n            },\n        ],\n        name: 'Withdrawn',\n        type: 'event',\n    },\n    {\n        inputs: [],\n        name: 'SIG_VALIDATION_FAILED',\n        outputs: [{ name: '', type: 'uint256' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            { name: 'initCode', type: 'bytes' },\n            { name: 'sender', type: 'address' },\n            { name: 'paymasterAndData', type: 'bytes' },\n        ],\n        name: '_validateSenderAndPaymaster',\n        outputs: [],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [{ name: 'unstakeDelaySec', type: 'uint32' }],\n        name: 'addStake',\n        outputs: [],\n        stateMutability: 'payable',\n        type: 'function',\n    },\n    {\n        inputs: [{ name: 'account', type: 'address' }],\n        name: 'balanceOf',\n        outputs: [{ name: '', type: 'uint256' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [{ name: 'account', type: 'address' }],\n        name: 'depositTo',\n        outputs: [],\n        stateMutability: 'payable',\n        type: 'function',\n    },\n    {\n        inputs: [{ name: '', type: 'address' }],\n        name: 'deposits',\n        outputs: [\n            { name: 'deposit', type: 'uint112' },\n            { name: 'staked', type: 'bool' },\n            { name: 'stake', type: 'uint112' },\n            { name: 'unstakeDelaySec', type: 'uint32' },\n            { name: 'withdrawTime', type: 'uint48' },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [{ name: 'account', type: 'address' }],\n        name: 'getDepositInfo',\n        outputs: [\n            {\n                components: [\n                    { name: 'deposit', type: 'uint112' },\n                    { name: 'staked', type: 'bool' },\n                    { name: 'stake', type: 'uint112' },\n                    { name: 'unstakeDelaySec', type: 'uint32' },\n                    { name: 'withdrawTime', type: 'uint48' },\n                ],\n                name: 'info',\n                type: 'tuple',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            { name: 'sender', type: 'address' },\n            { name: 'key', type: 'uint192' },\n        ],\n        name: 'getNonce',\n        outputs: [{ name: 'nonce', type: 'uint256' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [{ name: 'initCode', type: 'bytes' }],\n        name: 'getSenderAddress',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    { name: 'sender', type: 'address' },\n                    { name: 'nonce', type: 'uint256' },\n                    { name: 'initCode', type: 'bytes' },\n                    { name: 'callData', type: 'bytes' },\n                    { name: 'callGasLimit', type: 'uint256' },\n                    {\n                        name: 'verificationGasLimit',\n                        type: 'uint256',\n                    },\n                    {\n                        name: 'preVerificationGas',\n                        type: 'uint256',\n                    },\n                    { name: 'maxFeePerGas', type: 'uint256' },\n                    {\n                        name: 'maxPriorityFeePerGas',\n                        type: 'uint256',\n                    },\n                    { name: 'paymasterAndData', type: 'bytes' },\n                    { name: 'signature', type: 'bytes' },\n                ],\n                name: 'userOp',\n                type: 'tuple',\n            },\n        ],\n        name: 'getUserOpHash',\n        outputs: [{ name: '', type: 'bytes32' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        components: [\n                            { name: 'sender', type: 'address' },\n                            { name: 'nonce', type: 'uint256' },\n                            { name: 'initCode', type: 'bytes' },\n                            { name: 'callData', type: 'bytes' },\n                            {\n                                name: 'callGasLimit',\n                                type: 'uint256',\n                            },\n                            {\n                                name: 'verificationGasLimit',\n                                type: 'uint256',\n                            },\n                            {\n                                name: 'preVerificationGas',\n                                type: 'uint256',\n                            },\n                            {\n                                name: 'maxFeePerGas',\n                                type: 'uint256',\n                            },\n                            {\n                                name: 'maxPriorityFeePerGas',\n                                type: 'uint256',\n                            },\n                            {\n                                name: 'paymasterAndData',\n                                type: 'bytes',\n                            },\n                            { name: 'signature', type: 'bytes' },\n                        ],\n                        name: 'userOps',\n                        type: 'tuple[]',\n                    },\n                    {\n                        name: 'aggregator',\n                        type: 'address',\n                    },\n                    { name: 'signature', type: 'bytes' },\n                ],\n                name: 'opsPerAggregator',\n                type: 'tuple[]',\n            },\n            { name: 'beneficiary', type: 'address' },\n        ],\n        name: 'handleAggregatedOps',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    { name: 'sender', type: 'address' },\n                    { name: 'nonce', type: 'uint256' },\n                    { name: 'initCode', type: 'bytes' },\n                    { name: 'callData', type: 'bytes' },\n                    { name: 'callGasLimit', type: 'uint256' },\n                    {\n                        name: 'verificationGasLimit',\n                        type: 'uint256',\n                    },\n                    {\n                        name: 'preVerificationGas',\n                        type: 'uint256',\n                    },\n                    { name: 'maxFeePerGas', type: 'uint256' },\n                    {\n                        name: 'maxPriorityFeePerGas',\n                        type: 'uint256',\n                    },\n                    { name: 'paymasterAndData', type: 'bytes' },\n                    { name: 'signature', type: 'bytes' },\n                ],\n                name: 'ops',\n                type: 'tuple[]',\n            },\n            { name: 'beneficiary', type: 'address' },\n        ],\n        name: 'handleOps',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [{ name: 'key', type: 'uint192' }],\n        name: 'incrementNonce',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            { name: 'callData', type: 'bytes' },\n            {\n                components: [\n                    {\n                        components: [\n                            { name: 'sender', type: 'address' },\n                            { name: 'nonce', type: 'uint256' },\n                            {\n                                name: 'callGasLimit',\n                                type: 'uint256',\n                            },\n                            {\n                                name: 'verificationGasLimit',\n                                type: 'uint256',\n                            },\n                            {\n                                name: 'preVerificationGas',\n                                type: 'uint256',\n                            },\n                            { name: 'paymaster', type: 'address' },\n                            {\n                                name: 'maxFeePerGas',\n                                type: 'uint256',\n                            },\n                            {\n                                name: 'maxPriorityFeePerGas',\n                                type: 'uint256',\n                            },\n                        ],\n                        name: 'mUserOp',\n                        type: 'tuple',\n                    },\n                    { name: 'userOpHash', type: 'bytes32' },\n                    { name: 'prefund', type: 'uint256' },\n                    { name: 'contextOffset', type: 'uint256' },\n                    { name: 'preOpGas', type: 'uint256' },\n                ],\n                name: 'opInfo',\n                type: 'tuple',\n            },\n            { name: 'context', type: 'bytes' },\n        ],\n        name: 'innerHandleOp',\n        outputs: [{ name: 'actualGasCost', type: 'uint256' }],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            { name: '', type: 'address' },\n            { name: '', type: 'uint192' },\n        ],\n        name: 'nonceSequenceNumber',\n        outputs: [{ name: '', type: 'uint256' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    { name: 'sender', type: 'address' },\n                    { name: 'nonce', type: 'uint256' },\n                    { name: 'initCode', type: 'bytes' },\n                    { name: 'callData', type: 'bytes' },\n                    { name: 'callGasLimit', type: 'uint256' },\n                    {\n                        name: 'verificationGasLimit',\n                        type: 'uint256',\n                    },\n                    {\n                        name: 'preVerificationGas',\n                        type: 'uint256',\n                    },\n                    { name: 'maxFeePerGas', type: 'uint256' },\n                    {\n                        name: 'maxPriorityFeePerGas',\n                        type: 'uint256',\n                    },\n                    { name: 'paymasterAndData', type: 'bytes' },\n                    { name: 'signature', type: 'bytes' },\n                ],\n                name: 'op',\n                type: 'tuple',\n            },\n            { name: 'target', type: 'address' },\n            { name: 'targetCallData', type: 'bytes' },\n        ],\n        name: 'simulateHandleOp',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    { name: 'sender', type: 'address' },\n                    { name: 'nonce', type: 'uint256' },\n                    { name: 'initCode', type: 'bytes' },\n                    { name: 'callData', type: 'bytes' },\n                    { name: 'callGasLimit', type: 'uint256' },\n                    {\n                        name: 'verificationGasLimit',\n                        type: 'uint256',\n                    },\n                    {\n                        name: 'preVerificationGas',\n                        type: 'uint256',\n                    },\n                    { name: 'maxFeePerGas', type: 'uint256' },\n                    {\n                        name: 'maxPriorityFeePerGas',\n                        type: 'uint256',\n                    },\n                    { name: 'paymasterAndData', type: 'bytes' },\n                    { name: 'signature', type: 'bytes' },\n                ],\n                name: 'userOp',\n                type: 'tuple',\n            },\n        ],\n        name: 'simulateValidation',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [],\n        name: 'unlockStake',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                name: 'withdrawAddress',\n                type: 'address',\n            },\n        ],\n        name: 'withdrawStake',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                name: 'withdrawAddress',\n                type: 'address',\n            },\n            { name: 'withdrawAmount', type: 'uint256' },\n        ],\n        name: 'withdrawTo',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    { stateMutability: 'payable', type: 'receive' },\n];\nexport const entryPoint07Abi = [\n    {\n        inputs: [\n            { name: 'success', type: 'bool' },\n            { name: 'ret', type: 'bytes' },\n        ],\n        name: 'DelegateAndRevert',\n        type: 'error',\n    },\n    {\n        inputs: [\n            { name: 'opIndex', type: 'uint256' },\n            { name: 'reason', type: 'string' },\n        ],\n        name: 'FailedOp',\n        type: 'error',\n    },\n    {\n        inputs: [\n            { name: 'opIndex', type: 'uint256' },\n            { name: 'reason', type: 'string' },\n            { name: 'inner', type: 'bytes' },\n        ],\n        name: 'FailedOpWithRevert',\n        type: 'error',\n    },\n    {\n        inputs: [{ name: 'returnData', type: 'bytes' }],\n        name: 'PostOpReverted',\n        type: 'error',\n    },\n    { inputs: [], name: 'ReentrancyGuardReentrantCall', type: 'error' },\n    {\n        inputs: [{ name: 'sender', type: 'address' }],\n        name: 'SenderAddressResult',\n        type: 'error',\n    },\n    {\n        inputs: [{ name: 'aggregator', type: 'address' }],\n        name: 'SignatureValidationFailed',\n        type: 'error',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'userOpHash',\n                type: 'bytes32',\n            },\n            {\n                indexed: true,\n                name: 'sender',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'factory',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'paymaster',\n                type: 'address',\n            },\n        ],\n        name: 'AccountDeployed',\n        type: 'event',\n    },\n    { anonymous: false, inputs: [], name: 'BeforeExecution', type: 'event' },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'account',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'totalDeposit',\n                type: 'uint256',\n            },\n        ],\n        name: 'Deposited',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'userOpHash',\n                type: 'bytes32',\n            },\n            {\n                indexed: true,\n                name: 'sender',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'nonce',\n                type: 'uint256',\n            },\n            {\n                indexed: false,\n                name: 'revertReason',\n                type: 'bytes',\n            },\n        ],\n        name: 'PostOpRevertReason',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'aggregator',\n                type: 'address',\n            },\n        ],\n        name: 'SignatureAggregatorChanged',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'account',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'totalStaked',\n                type: 'uint256',\n            },\n            {\n                indexed: false,\n                name: 'unstakeDelaySec',\n                type: 'uint256',\n            },\n        ],\n        name: 'StakeLocked',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'account',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'withdrawTime',\n                type: 'uint256',\n            },\n        ],\n        name: 'StakeUnlocked',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'account',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'withdrawAddress',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'amount',\n                type: 'uint256',\n            },\n        ],\n        name: 'StakeWithdrawn',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'userOpHash',\n                type: 'bytes32',\n            },\n            {\n                indexed: true,\n                name: 'sender',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                name: 'paymaster',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'nonce',\n                type: 'uint256',\n            },\n            { indexed: false, name: 'success', type: 'bool' },\n            {\n                indexed: false,\n                name: 'actualGasCost',\n                type: 'uint256',\n            },\n            {\n                indexed: false,\n                name: 'actualGasUsed',\n                type: 'uint256',\n            },\n        ],\n        name: 'UserOperationEvent',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'userOpHash',\n                type: 'bytes32',\n            },\n            {\n                indexed: true,\n                name: 'sender',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'nonce',\n                type: 'uint256',\n            },\n        ],\n        name: 'UserOperationPrefundTooLow',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'userOpHash',\n                type: 'bytes32',\n            },\n            {\n                indexed: true,\n                name: 'sender',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'nonce',\n                type: 'uint256',\n            },\n            {\n                indexed: false,\n                name: 'revertReason',\n                type: 'bytes',\n            },\n        ],\n        name: 'UserOperationRevertReason',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                name: 'account',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'withdrawAddress',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                name: 'amount',\n                type: 'uint256',\n            },\n        ],\n        name: 'Withdrawn',\n        type: 'event',\n    },\n    {\n        inputs: [{ name: 'unstakeDelaySec', type: 'uint32' }],\n        name: 'addStake',\n        outputs: [],\n        stateMutability: 'payable',\n        type: 'function',\n    },\n    {\n        inputs: [{ name: 'account', type: 'address' }],\n        name: 'balanceOf',\n        outputs: [{ name: '', type: 'uint256' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            { name: 'target', type: 'address' },\n            { name: 'data', type: 'bytes' },\n        ],\n        name: 'delegateAndRevert',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [{ name: 'account', type: 'address' }],\n        name: 'depositTo',\n        outputs: [],\n        stateMutability: 'payable',\n        type: 'function',\n    },\n    {\n        inputs: [{ name: '', type: 'address' }],\n        name: 'deposits',\n        outputs: [\n            { name: 'deposit', type: 'uint256' },\n            { name: 'staked', type: 'bool' },\n            { name: 'stake', type: 'uint112' },\n            { name: 'unstakeDelaySec', type: 'uint32' },\n            { name: 'withdrawTime', type: 'uint48' },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [{ name: 'account', type: 'address' }],\n        name: 'getDepositInfo',\n        outputs: [\n            {\n                components: [\n                    { name: 'deposit', type: 'uint256' },\n                    { name: 'staked', type: 'bool' },\n                    { name: 'stake', type: 'uint112' },\n                    { name: 'unstakeDelaySec', type: 'uint32' },\n                    { name: 'withdrawTime', type: 'uint48' },\n                ],\n                name: 'info',\n                type: 'tuple',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            { name: 'sender', type: 'address' },\n            { name: 'key', type: 'uint192' },\n        ],\n        name: 'getNonce',\n        outputs: [{ name: 'nonce', type: 'uint256' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [{ name: 'initCode', type: 'bytes' }],\n        name: 'getSenderAddress',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    { name: 'sender', type: 'address' },\n                    { name: 'nonce', type: 'uint256' },\n                    { name: 'initCode', type: 'bytes' },\n                    { name: 'callData', type: 'bytes' },\n                    {\n                        name: 'accountGasLimits',\n                        type: 'bytes32',\n                    },\n                    {\n                        name: 'preVerificationGas',\n                        type: 'uint256',\n                    },\n                    { name: 'gasFees', type: 'bytes32' },\n                    { name: 'paymasterAndData', type: 'bytes' },\n                    { name: 'signature', type: 'bytes' },\n                ],\n                name: 'userOp',\n                type: 'tuple',\n            },\n        ],\n        name: 'getUserOpHash',\n        outputs: [{ name: '', type: 'bytes32' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        components: [\n                            { name: 'sender', type: 'address' },\n                            { name: 'nonce', type: 'uint256' },\n                            { name: 'initCode', type: 'bytes' },\n                            { name: 'callData', type: 'bytes' },\n                            {\n                                name: 'accountGasLimits',\n                                type: 'bytes32',\n                            },\n                            {\n                                name: 'preVerificationGas',\n                                type: 'uint256',\n                            },\n                            { name: 'gasFees', type: 'bytes32' },\n                            {\n                                name: 'paymasterAndData',\n                                type: 'bytes',\n                            },\n                            { name: 'signature', type: 'bytes' },\n                        ],\n                        name: 'userOps',\n                        type: 'tuple[]',\n                    },\n                    {\n                        name: 'aggregator',\n                        type: 'address',\n                    },\n                    { name: 'signature', type: 'bytes' },\n                ],\n                name: 'opsPerAggregator',\n                type: 'tuple[]',\n            },\n            { name: 'beneficiary', type: 'address' },\n        ],\n        name: 'handleAggregatedOps',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    { name: 'sender', type: 'address' },\n                    { name: 'nonce', type: 'uint256' },\n                    { name: 'initCode', type: 'bytes' },\n                    { name: 'callData', type: 'bytes' },\n                    {\n                        name: 'accountGasLimits',\n                        type: 'bytes32',\n                    },\n                    {\n                        name: 'preVerificationGas',\n                        type: 'uint256',\n                    },\n                    { name: 'gasFees', type: 'bytes32' },\n                    { name: 'paymasterAndData', type: 'bytes' },\n                    { name: 'signature', type: 'bytes' },\n                ],\n                name: 'ops',\n                type: 'tuple[]',\n            },\n            { name: 'beneficiary', type: 'address' },\n        ],\n        name: 'handleOps',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [{ name: 'key', type: 'uint192' }],\n        name: 'incrementNonce',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            { name: 'callData', type: 'bytes' },\n            {\n                components: [\n                    {\n                        components: [\n                            { name: 'sender', type: 'address' },\n                            { name: 'nonce', type: 'uint256' },\n                            {\n                                name: 'verificationGasLimit',\n                                type: 'uint256',\n                            },\n                            {\n                                name: 'callGasLimit',\n                                type: 'uint256',\n                            },\n                            {\n                                name: 'paymasterVerificationGasLimit',\n                                type: 'uint256',\n                            },\n                            {\n                                name: 'paymasterPostOpGasLimit',\n                                type: 'uint256',\n                            },\n                            {\n                                name: 'preVerificationGas',\n                                type: 'uint256',\n                            },\n                            { name: 'paymaster', type: 'address' },\n                            {\n                                name: 'maxFeePerGas',\n                                type: 'uint256',\n                            },\n                            {\n                                name: 'maxPriorityFeePerGas',\n                                type: 'uint256',\n                            },\n                        ],\n                        name: 'mUserOp',\n                        type: 'tuple',\n                    },\n                    { name: 'userOpHash', type: 'bytes32' },\n                    { name: 'prefund', type: 'uint256' },\n                    { name: 'contextOffset', type: 'uint256' },\n                    { name: 'preOpGas', type: 'uint256' },\n                ],\n                name: 'opInfo',\n                type: 'tuple',\n            },\n            { name: 'context', type: 'bytes' },\n        ],\n        name: 'innerHandleOp',\n        outputs: [{ name: 'actualGasCost', type: 'uint256' }],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            { name: '', type: 'address' },\n            { name: '', type: 'uint192' },\n        ],\n        name: 'nonceSequenceNumber',\n        outputs: [{ name: '', type: 'uint256' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [{ name: 'interfaceId', type: 'bytes4' }],\n        name: 'supportsInterface',\n        outputs: [{ name: '', type: 'bool' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [],\n        name: 'unlockStake',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                name: 'withdrawAddress',\n                type: 'address',\n            },\n        ],\n        name: 'withdrawStake',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                name: 'withdrawAddress',\n                type: 'address',\n            },\n            { name: 'withdrawAmount', type: 'uint256' },\n        ],\n        name: 'withdrawTo',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    { stateMutability: 'payable', type: 'receive' },\n];\nexport const entryPoint08Abi = [\n    { inputs: [], stateMutability: 'nonpayable', type: 'constructor' },\n    {\n        inputs: [\n            { internalType: 'bool', name: 'success', type: 'bool' },\n            { internalType: 'bytes', name: 'ret', type: 'bytes' },\n        ],\n        name: 'DelegateAndRevert',\n        type: 'error',\n    },\n    {\n        inputs: [\n            { internalType: 'uint256', name: 'opIndex', type: 'uint256' },\n            { internalType: 'string', name: 'reason', type: 'string' },\n        ],\n        name: 'FailedOp',\n        type: 'error',\n    },\n    {\n        inputs: [\n            { internalType: 'uint256', name: 'opIndex', type: 'uint256' },\n            { internalType: 'string', name: 'reason', type: 'string' },\n            { internalType: 'bytes', name: 'inner', type: 'bytes' },\n        ],\n        name: 'FailedOpWithRevert',\n        type: 'error',\n    },\n    { inputs: [], name: 'InvalidShortString', type: 'error' },\n    {\n        inputs: [{ internalType: 'bytes', name: 'returnData', type: 'bytes' }],\n        name: 'PostOpReverted',\n        type: 'error',\n    },\n    { inputs: [], name: 'ReentrancyGuardReentrantCall', type: 'error' },\n    {\n        inputs: [{ internalType: 'address', name: 'sender', type: 'address' }],\n        name: 'SenderAddressResult',\n        type: 'error',\n    },\n    {\n        inputs: [{ internalType: 'address', name: 'aggregator', type: 'address' }],\n        name: 'SignatureValidationFailed',\n        type: 'error',\n    },\n    {\n        inputs: [{ internalType: 'string', name: 'str', type: 'string' }],\n        name: 'StringTooLong',\n        type: 'error',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'bytes32',\n                name: 'userOpHash',\n                type: 'bytes32',\n            },\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'sender',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'address',\n                name: 'factory',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'address',\n                name: 'paymaster',\n                type: 'address',\n            },\n        ],\n        name: 'AccountDeployed',\n        type: 'event',\n    },\n    { anonymous: false, inputs: [], name: 'BeforeExecution', type: 'event' },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'account',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256',\n                name: 'totalDeposit',\n                type: 'uint256',\n            },\n        ],\n        name: 'Deposited',\n        type: 'event',\n    },\n    { anonymous: false, inputs: [], name: 'EIP712DomainChanged', type: 'event' },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'bytes32',\n                name: 'userOpHash',\n                type: 'bytes32',\n            },\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'sender',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256',\n                name: 'nonce',\n                type: 'uint256',\n            },\n            {\n                indexed: false,\n                internalType: 'bytes',\n                name: 'revertReason',\n                type: 'bytes',\n            },\n        ],\n        name: 'PostOpRevertReason',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'aggregator',\n                type: 'address',\n            },\n        ],\n        name: 'SignatureAggregatorChanged',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'account',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256',\n                name: 'totalStaked',\n                type: 'uint256',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256',\n                name: 'unstakeDelaySec',\n                type: 'uint256',\n            },\n        ],\n        name: 'StakeLocked',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'account',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256',\n                name: 'withdrawTime',\n                type: 'uint256',\n            },\n        ],\n        name: 'StakeUnlocked',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'account',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'address',\n                name: 'withdrawAddress',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256',\n                name: 'amount',\n                type: 'uint256',\n            },\n        ],\n        name: 'StakeWithdrawn',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'bytes32',\n                name: 'userOpHash',\n                type: 'bytes32',\n            },\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'sender',\n                type: 'address',\n            },\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'paymaster',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256',\n                name: 'nonce',\n                type: 'uint256',\n            },\n            { indexed: false, internalType: 'bool', name: 'success', type: 'bool' },\n            {\n                indexed: false,\n                internalType: 'uint256',\n                name: 'actualGasCost',\n                type: 'uint256',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256',\n                name: 'actualGasUsed',\n                type: 'uint256',\n            },\n        ],\n        name: 'UserOperationEvent',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'bytes32',\n                name: 'userOpHash',\n                type: 'bytes32',\n            },\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'sender',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256',\n                name: 'nonce',\n                type: 'uint256',\n            },\n        ],\n        name: 'UserOperationPrefundTooLow',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'bytes32',\n                name: 'userOpHash',\n                type: 'bytes32',\n            },\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'sender',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256',\n                name: 'nonce',\n                type: 'uint256',\n            },\n            {\n                indexed: false,\n                internalType: 'bytes',\n                name: 'revertReason',\n                type: 'bytes',\n            },\n        ],\n        name: 'UserOperationRevertReason',\n        type: 'event',\n    },\n    {\n        anonymous: false,\n        inputs: [\n            {\n                indexed: true,\n                internalType: 'address',\n                name: 'account',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'address',\n                name: 'withdrawAddress',\n                type: 'address',\n            },\n            {\n                indexed: false,\n                internalType: 'uint256',\n                name: 'amount',\n                type: 'uint256',\n            },\n        ],\n        name: 'Withdrawn',\n        type: 'event',\n    },\n    {\n        inputs: [\n            { internalType: 'uint32', name: 'unstakeDelaySec', type: 'uint32' },\n        ],\n        name: 'addStake',\n        outputs: [],\n        stateMutability: 'payable',\n        type: 'function',\n    },\n    {\n        inputs: [{ internalType: 'address', name: 'account', type: 'address' }],\n        name: 'balanceOf',\n        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            { internalType: 'address', name: 'target', type: 'address' },\n            { internalType: 'bytes', name: 'data', type: 'bytes' },\n        ],\n        name: 'delegateAndRevert',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [{ internalType: 'address', name: 'account', type: 'address' }],\n        name: 'depositTo',\n        outputs: [],\n        stateMutability: 'payable',\n        type: 'function',\n    },\n    {\n        inputs: [],\n        name: 'eip712Domain',\n        outputs: [\n            { internalType: 'bytes1', name: 'fields', type: 'bytes1' },\n            { internalType: 'string', name: 'name', type: 'string' },\n            { internalType: 'string', name: 'version', type: 'string' },\n            { internalType: 'uint256', name: 'chainId', type: 'uint256' },\n            { internalType: 'address', name: 'verifyingContract', type: 'address' },\n            { internalType: 'bytes32', name: 'salt', type: 'bytes32' },\n            { internalType: 'uint256[]', name: 'extensions', type: 'uint256[]' },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [{ internalType: 'address', name: 'account', type: 'address' }],\n        name: 'getDepositInfo',\n        outputs: [\n            {\n                components: [\n                    { internalType: 'uint256', name: 'deposit', type: 'uint256' },\n                    { internalType: 'bool', name: 'staked', type: 'bool' },\n                    { internalType: 'uint112', name: 'stake', type: 'uint112' },\n                    { internalType: 'uint32', name: 'unstakeDelaySec', type: 'uint32' },\n                    { internalType: 'uint48', name: 'withdrawTime', type: 'uint48' },\n                ],\n                internalType: 'struct IStakeManager.DepositInfo',\n                name: 'info',\n                type: 'tuple',\n            },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [],\n        name: 'getDomainSeparatorV4',\n        outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            { internalType: 'address', name: 'sender', type: 'address' },\n            { internalType: 'uint192', name: 'key', type: 'uint192' },\n        ],\n        name: 'getNonce',\n        outputs: [{ internalType: 'uint256', name: 'nonce', type: 'uint256' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [],\n        name: 'getPackedUserOpTypeHash',\n        outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],\n        stateMutability: 'pure',\n        type: 'function',\n    },\n    {\n        inputs: [{ internalType: 'bytes', name: 'initCode', type: 'bytes' }],\n        name: 'getSenderAddress',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    { internalType: 'address', name: 'sender', type: 'address' },\n                    { internalType: 'uint256', name: 'nonce', type: 'uint256' },\n                    { internalType: 'bytes', name: 'initCode', type: 'bytes' },\n                    { internalType: 'bytes', name: 'callData', type: 'bytes' },\n                    {\n                        internalType: 'bytes32',\n                        name: 'accountGasLimits',\n                        type: 'bytes32',\n                    },\n                    {\n                        internalType: 'uint256',\n                        name: 'preVerificationGas',\n                        type: 'uint256',\n                    },\n                    { internalType: 'bytes32', name: 'gasFees', type: 'bytes32' },\n                    { internalType: 'bytes', name: 'paymasterAndData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'signature', type: 'bytes' },\n                ],\n                internalType: 'struct PackedUserOperation',\n                name: 'userOp',\n                type: 'tuple',\n            },\n        ],\n        name: 'getUserOpHash',\n        outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    {\n                        components: [\n                            { internalType: 'address', name: 'sender', type: 'address' },\n                            { internalType: 'uint256', name: 'nonce', type: 'uint256' },\n                            { internalType: 'bytes', name: 'initCode', type: 'bytes' },\n                            { internalType: 'bytes', name: 'callData', type: 'bytes' },\n                            {\n                                internalType: 'bytes32',\n                                name: 'accountGasLimits',\n                                type: 'bytes32',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'preVerificationGas',\n                                type: 'uint256',\n                            },\n                            { internalType: 'bytes32', name: 'gasFees', type: 'bytes32' },\n                            {\n                                internalType: 'bytes',\n                                name: 'paymasterAndData',\n                                type: 'bytes',\n                            },\n                            { internalType: 'bytes', name: 'signature', type: 'bytes' },\n                        ],\n                        internalType: 'struct PackedUserOperation[]',\n                        name: 'userOps',\n                        type: 'tuple[]',\n                    },\n                    {\n                        internalType: 'contract IAggregator',\n                        name: 'aggregator',\n                        type: 'address',\n                    },\n                    { internalType: 'bytes', name: 'signature', type: 'bytes' },\n                ],\n                internalType: 'struct IEntryPoint.UserOpsPerAggregator[]',\n                name: 'opsPerAggregator',\n                type: 'tuple[]',\n            },\n            { internalType: 'address payable', name: 'beneficiary', type: 'address' },\n        ],\n        name: 'handleAggregatedOps',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                components: [\n                    { internalType: 'address', name: 'sender', type: 'address' },\n                    { internalType: 'uint256', name: 'nonce', type: 'uint256' },\n                    { internalType: 'bytes', name: 'initCode', type: 'bytes' },\n                    { internalType: 'bytes', name: 'callData', type: 'bytes' },\n                    {\n                        internalType: 'bytes32',\n                        name: 'accountGasLimits',\n                        type: 'bytes32',\n                    },\n                    {\n                        internalType: 'uint256',\n                        name: 'preVerificationGas',\n                        type: 'uint256',\n                    },\n                    { internalType: 'bytes32', name: 'gasFees', type: 'bytes32' },\n                    { internalType: 'bytes', name: 'paymasterAndData', type: 'bytes' },\n                    { internalType: 'bytes', name: 'signature', type: 'bytes' },\n                ],\n                internalType: 'struct PackedUserOperation[]',\n                name: 'ops',\n                type: 'tuple[]',\n            },\n            { internalType: 'address payable', name: 'beneficiary', type: 'address' },\n        ],\n        name: 'handleOps',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [{ internalType: 'uint192', name: 'key', type: 'uint192' }],\n        name: 'incrementNonce',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            { internalType: 'bytes', name: 'callData', type: 'bytes' },\n            {\n                components: [\n                    {\n                        components: [\n                            { internalType: 'address', name: 'sender', type: 'address' },\n                            { internalType: 'uint256', name: 'nonce', type: 'uint256' },\n                            {\n                                internalType: 'uint256',\n                                name: 'verificationGasLimit',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'callGasLimit',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'paymasterVerificationGasLimit',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'paymasterPostOpGasLimit',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'preVerificationGas',\n                                type: 'uint256',\n                            },\n                            { internalType: 'address', name: 'paymaster', type: 'address' },\n                            {\n                                internalType: 'uint256',\n                                name: 'maxFeePerGas',\n                                type: 'uint256',\n                            },\n                            {\n                                internalType: 'uint256',\n                                name: 'maxPriorityFeePerGas',\n                                type: 'uint256',\n                            },\n                        ],\n                        internalType: 'struct EntryPoint.MemoryUserOp',\n                        name: 'mUserOp',\n                        type: 'tuple',\n                    },\n                    { internalType: 'bytes32', name: 'userOpHash', type: 'bytes32' },\n                    { internalType: 'uint256', name: 'prefund', type: 'uint256' },\n                    { internalType: 'uint256', name: 'contextOffset', type: 'uint256' },\n                    { internalType: 'uint256', name: 'preOpGas', type: 'uint256' },\n                ],\n                internalType: 'struct EntryPoint.UserOpInfo',\n                name: 'opInfo',\n                type: 'tuple',\n            },\n            { internalType: 'bytes', name: 'context', type: 'bytes' },\n        ],\n        name: 'innerHandleOp',\n        outputs: [\n            { internalType: 'uint256', name: 'actualGasCost', type: 'uint256' },\n        ],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            { internalType: 'address', name: '', type: 'address' },\n            { internalType: 'uint192', name: '', type: 'uint192' },\n        ],\n        name: 'nonceSequenceNumber',\n        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [],\n        name: 'senderCreator',\n        outputs: [\n            { internalType: 'contract ISenderCreator', name: '', type: 'address' },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [{ internalType: 'bytes4', name: 'interfaceId', type: 'bytes4' }],\n        name: 'supportsInterface',\n        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n        stateMutability: 'view',\n        type: 'function',\n    },\n    {\n        inputs: [],\n        name: 'unlockStake',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'address payable',\n                name: 'withdrawAddress',\n                type: 'address',\n            },\n        ],\n        name: 'withdrawStake',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    {\n        inputs: [\n            {\n                internalType: 'address payable',\n                name: 'withdrawAddress',\n                type: 'address',\n            },\n            { internalType: 'uint256', name: 'withdrawAmount', type: 'uint256' },\n        ],\n        name: 'withdrawTo',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n    },\n    { stateMutability: 'payable', type: 'receive' },\n];\n//# sourceMappingURL=abis.js.map","import { concat } from '../../../utils/data/concat.js';\nexport function getInitCode(userOperation) {\n    const { authorization, factory, factoryData } = userOperation;\n    if (factory === '0x7702' ||\n        factory === '0x7702000000000000000000000000000000000000') {\n        if (!authorization)\n            return '0x7702000000000000000000000000000000000000';\n        const delegation = authorization.address;\n        return concat([delegation, factoryData ?? '0x']);\n    }\n    if (!factory)\n        return '0x';\n    return concat([factory, factoryData ?? '0x']);\n}\n//# sourceMappingURL=getInitCode.js.map","import { concat } from '../../../utils/data/concat.js';\nimport { pad } from '../../../utils/data/pad.js';\nimport { numberToHex } from '../../../utils/index.js';\nimport { getInitCode } from './getInitCode.js';\nexport function toPackedUserOperation(userOperation) {\n    const { callGasLimit, callData, maxPriorityFeePerGas, maxFeePerGas, paymaster, paymasterData, paymasterPostOpGasLimit, paymasterVerificationGasLimit, sender, signature = '0x', verificationGasLimit, } = userOperation;\n    const accountGasLimits = concat([\n        pad(numberToHex(verificationGasLimit || 0n), { size: 16 }),\n        pad(numberToHex(callGasLimit || 0n), { size: 16 }),\n    ]);\n    const initCode = getInitCode(userOperation);\n    const gasFees = concat([\n        pad(numberToHex(maxPriorityFeePerGas || 0n), { size: 16 }),\n        pad(numberToHex(maxFeePerGas || 0n), { size: 16 }),\n    ]);\n    const nonce = userOperation.nonce ?? 0n;\n    const paymasterAndData = paymaster\n        ? concat([\n            paymaster,\n            pad(numberToHex(paymasterVerificationGasLimit || 0n), {\n                size: 16,\n            }),\n            pad(numberToHex(paymasterPostOpGasLimit || 0n), {\n                size: 16,\n            }),\n            paymasterData || '0x',\n        ])\n        : '0x';\n    const preVerificationGas = userOperation.preVerificationGas ?? 0n;\n    return {\n        accountGasLimits,\n        callData,\n        initCode,\n        gasFees,\n        nonce,\n        paymasterAndData,\n        preVerificationGas,\n        sender,\n        signature,\n    };\n}\n//# sourceMappingURL=toPackedUserOperation.js.map","import { toPackedUserOperation } from './toPackedUserOperation.js';\nconst types = {\n    PackedUserOperation: [\n        { type: 'address', name: 'sender' },\n        { type: 'uint256', name: 'nonce' },\n        { type: 'bytes', name: 'initCode' },\n        { type: 'bytes', name: 'callData' },\n        { type: 'bytes32', name: 'accountGasLimits' },\n        { type: 'uint256', name: 'preVerificationGas' },\n        { type: 'bytes32', name: 'gasFees' },\n        { type: 'bytes', name: 'paymasterAndData' },\n    ],\n};\nexport function getUserOperationTypedData(parameters) {\n    const { chainId, entryPointAddress, userOperation } = parameters;\n    const packedUserOp = toPackedUserOperation(userOperation);\n    return {\n        types,\n        primaryType: 'PackedUserOperation',\n        domain: {\n            name: 'ERC4337',\n            version: '1',\n            chainId,\n            verifyingContract: entryPointAddress,\n        },\n        message: packedUserOp,\n    };\n}\n//# sourceMappingURL=getUserOperationTypedData.js.map","import { encodeAbiParameters } from '../../../utils/abi/encodeAbiParameters.js';\nimport { keccak256 } from '../../../utils/hash/keccak256.js';\nimport { hashTypedData } from '../../../utils/signature/hashTypedData.js';\nimport { getInitCode } from './getInitCode.js';\nimport { getUserOperationTypedData } from './getUserOperationTypedData.js';\nimport { toPackedUserOperation } from './toPackedUserOperation.js';\nexport function getUserOperationHash(parameters) {\n    const { chainId, entryPointAddress, entryPointVersion } = parameters;\n    const userOperation = parameters.userOperation;\n    const { authorization, callData = '0x', callGasLimit, maxFeePerGas, maxPriorityFeePerGas, nonce, paymasterAndData = '0x', preVerificationGas, sender, verificationGasLimit, } = userOperation;\n    if (entryPointVersion === '0.8')\n        return hashTypedData(getUserOperationTypedData({\n            chainId,\n            entryPointAddress,\n            userOperation,\n        }));\n    const packedUserOp = (() => {\n        if (entryPointVersion === '0.6') {\n            const factory = userOperation.initCode?.slice(0, 42);\n            const factoryData = userOperation.initCode?.slice(42);\n            const initCode = getInitCode({\n                authorization,\n                factory,\n                factoryData,\n            });\n            return encodeAbiParameters([\n                { type: 'address' },\n                { type: 'uint256' },\n                { type: 'bytes32' },\n                { type: 'bytes32' },\n                { type: 'uint256' },\n                { type: 'uint256' },\n                { type: 'uint256' },\n                { type: 'uint256' },\n                { type: 'uint256' },\n                { type: 'bytes32' },\n            ], [\n                sender,\n                nonce,\n                keccak256(initCode),\n                keccak256(callData),\n                callGasLimit,\n                verificationGasLimit,\n                preVerificationGas,\n                maxFeePerGas,\n                maxPriorityFeePerGas,\n                keccak256(paymasterAndData),\n            ]);\n        }\n        if (entryPointVersion === '0.7') {\n            const packedUserOp = toPackedUserOperation(userOperation);\n            return encodeAbiParameters([\n                { type: 'address' },\n                { type: 'uint256' },\n                { type: 'bytes32' },\n                { type: 'bytes32' },\n                { type: 'bytes32' },\n                { type: 'uint256' },\n                { type: 'bytes32' },\n                { type: 'bytes32' },\n            ], [\n                packedUserOp.sender,\n                packedUserOp.nonce,\n                keccak256(packedUserOp.initCode),\n                keccak256(packedUserOp.callData),\n                packedUserOp.accountGasLimits,\n                packedUserOp.preVerificationGas,\n                packedUserOp.gasFees,\n                keccak256(packedUserOp.paymasterAndData),\n            ]);\n        }\n        throw new Error(`entryPointVersion \"${entryPointVersion}\" not supported.`);\n    })();\n    return keccak256(encodeAbiParameters([{ type: 'bytes32' }, { type: 'address' }, { type: 'uint256' }], [keccak256(packedUserOp), entryPointAddress, BigInt(chainId)]));\n}\n//# sourceMappingURL=getUserOperationHash.js.map","import { parseAbi } from 'abitype';\nimport { getCode } from '../../actions/public/getCode.js';\nimport { readContract } from '../../actions/public/readContract.js';\nimport { getAction } from '../../utils/getAction.js';\nimport { createNonceManager } from '../../utils/nonceManager.js';\nimport { serializeErc6492Signature } from '../../utils/signature/serializeErc6492Signature.js';\n/**\n * @description Creates a Smart Account with a provided account implementation.\n *\n * @param parameters - {@link ToSmartAccountParameters}\n * @returns A Smart Account. {@link ToSmartAccountReturnType}\n */\nexport async function toSmartAccount(implementation) {\n    const { extend, nonceKeyManager = createNonceManager({\n        source: {\n            get() {\n                return Date.now();\n            },\n            set() { },\n        },\n    }), ...rest } = implementation;\n    let deployed = false;\n    const address = await implementation.getAddress();\n    return {\n        ...extend,\n        ...rest,\n        address,\n        async getFactoryArgs() {\n            if ('isDeployed' in this && (await this.isDeployed()))\n                return { factory: undefined, factoryData: undefined };\n            return implementation.getFactoryArgs();\n        },\n        async getNonce(parameters) {\n            const key = parameters?.key ??\n                BigInt(await nonceKeyManager.consume({\n                    address,\n                    chainId: implementation.client.chain.id,\n                    client: implementation.client,\n                }));\n            if (implementation.getNonce)\n                return await implementation.getNonce({ ...parameters, key });\n            const nonce = await readContract(implementation.client, {\n                abi: parseAbi([\n                    'function getNonce(address, uint192) pure returns (uint256)',\n                ]),\n                address: implementation.entryPoint.address,\n                functionName: 'getNonce',\n                args: [address, key],\n            });\n            return nonce;\n        },\n        async isDeployed() {\n            if (deployed)\n                return true;\n            const code = await getAction(implementation.client, getCode, 'getCode')({\n                address,\n            });\n            deployed = Boolean(code);\n            return deployed;\n        },\n        ...(implementation.sign\n            ? {\n                async sign(parameters) {\n                    const [{ factory, factoryData }, signature] = await Promise.all([\n                        this.getFactoryArgs(),\n                        implementation.sign(parameters),\n                    ]);\n                    if (factory && factoryData)\n                        return serializeErc6492Signature({\n                            address: factory,\n                            data: factoryData,\n                            signature,\n                        });\n                    return signature;\n                },\n            }\n            : {}),\n        async signMessage(parameters) {\n            const [{ factory, factoryData }, signature] = await Promise.all([\n                this.getFactoryArgs(),\n                implementation.signMessage(parameters),\n            ]);\n            if (factory && factoryData && factory !== '0x7702')\n                return serializeErc6492Signature({\n                    address: factory,\n                    data: factoryData,\n                    signature,\n                });\n            return signature;\n        },\n        async signTypedData(parameters) {\n            const [{ factory, factoryData }, signature] = await Promise.all([\n                this.getFactoryArgs(),\n                implementation.signTypedData(parameters),\n            ]);\n            if (factory && factoryData && factory !== '0x7702')\n                return serializeErc6492Signature({\n                    address: factory,\n                    data: factoryData,\n                    signature,\n                });\n            return signature;\n        },\n        type: 'smart',\n    };\n}\n//# sourceMappingURL=toSmartAccount.js.map","import { BaseError } from '../../errors/base.js';\nexport class AccountNotDeployedError extends BaseError {\n    constructor({ cause, }) {\n        super('Smart Account is not deployed.', {\n            cause,\n            metaMessages: [\n                'This could arise when:',\n                '- No `factory`/`factoryData` or `initCode` properties are provided for Smart Account deployment.',\n                '- An incorrect `sender` address is provided.',\n            ],\n            name: 'AccountNotDeployedError',\n        });\n    }\n}\nObject.defineProperty(AccountNotDeployedError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa20/\n});\nexport class ExecutionRevertedError extends BaseError {\n    constructor({ cause, data, message, } = {}) {\n        const reason = message\n            ?.replace('execution reverted: ', '')\n            ?.replace('execution reverted', '');\n        super(`Execution reverted ${reason ? `with reason: ${reason}` : 'for an unknown reason'}.`, {\n            cause,\n            name: 'ExecutionRevertedError',\n        });\n        Object.defineProperty(this, \"data\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.data = data;\n    }\n}\nObject.defineProperty(ExecutionRevertedError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32521\n});\nObject.defineProperty(ExecutionRevertedError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /execution reverted/\n});\nexport class FailedToSendToBeneficiaryError extends BaseError {\n    constructor({ cause, }) {\n        super('Failed to send funds to beneficiary.', {\n            cause,\n            name: 'FailedToSendToBeneficiaryError',\n        });\n    }\n}\nObject.defineProperty(FailedToSendToBeneficiaryError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa91/\n});\nexport class GasValuesOverflowError extends BaseError {\n    constructor({ cause, }) {\n        super('Gas value overflowed.', {\n            cause,\n            metaMessages: [\n                'This could arise when:',\n                '- one of the gas values exceeded 2**120 (uint120)',\n            ].filter(Boolean),\n            name: 'GasValuesOverflowError',\n        });\n    }\n}\nObject.defineProperty(GasValuesOverflowError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa94/\n});\nexport class HandleOpsOutOfGasError extends BaseError {\n    constructor({ cause, }) {\n        super('The `handleOps` function was called by the Bundler with a gas limit too low.', {\n            cause,\n            name: 'HandleOpsOutOfGasError',\n        });\n    }\n}\nObject.defineProperty(HandleOpsOutOfGasError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa95/\n});\nexport class InitCodeFailedError extends BaseError {\n    constructor({ cause, factory, factoryData, initCode, }) {\n        super('Failed to simulate deployment for Smart Account.', {\n            cause,\n            metaMessages: [\n                'This could arise when:',\n                '- Invalid `factory`/`factoryData` or `initCode` properties are present',\n                '- Smart Account deployment execution ran out of gas (low `verificationGasLimit` value)',\n                '- Smart Account deployment execution reverted with an error\\n',\n                factory && `factory: ${factory}`,\n                factoryData && `factoryData: ${factoryData}`,\n                initCode && `initCode: ${initCode}`,\n            ].filter(Boolean),\n            name: 'InitCodeFailedError',\n        });\n    }\n}\nObject.defineProperty(InitCodeFailedError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa13/\n});\nexport class InitCodeMustCreateSenderError extends BaseError {\n    constructor({ cause, factory, factoryData, initCode, }) {\n        super('Smart Account initialization implementation did not create an account.', {\n            cause,\n            metaMessages: [\n                'This could arise when:',\n                '- `factory`/`factoryData` or `initCode` properties are invalid',\n                '- Smart Account initialization implementation is incorrect\\n',\n                factory && `factory: ${factory}`,\n                factoryData && `factoryData: ${factoryData}`,\n                initCode && `initCode: ${initCode}`,\n            ].filter(Boolean),\n            name: 'InitCodeMustCreateSenderError',\n        });\n    }\n}\nObject.defineProperty(InitCodeMustCreateSenderError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa15/\n});\nexport class InitCodeMustReturnSenderError extends BaseError {\n    constructor({ cause, factory, factoryData, initCode, sender, }) {\n        super('Smart Account initialization implementation does not return the expected sender.', {\n            cause,\n            metaMessages: [\n                'This could arise when:',\n                'Smart Account initialization implementation does not return a sender address\\n',\n                factory && `factory: ${factory}`,\n                factoryData && `factoryData: ${factoryData}`,\n                initCode && `initCode: ${initCode}`,\n                sender && `sender: ${sender}`,\n            ].filter(Boolean),\n            name: 'InitCodeMustReturnSenderError',\n        });\n    }\n}\nObject.defineProperty(InitCodeMustReturnSenderError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa14/\n});\nexport class InsufficientPrefundError extends BaseError {\n    constructor({ cause, }) {\n        super('Smart Account does not have sufficient funds to execute the User Operation.', {\n            cause,\n            metaMessages: [\n                'This could arise when:',\n                '- the Smart Account does not have sufficient funds to cover the required prefund, or',\n                '- a Paymaster was not provided',\n            ].filter(Boolean),\n            name: 'InsufficientPrefundError',\n        });\n    }\n}\nObject.defineProperty(InsufficientPrefundError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa21/\n});\nexport class InternalCallOnlyError extends BaseError {\n    constructor({ cause, }) {\n        super('Bundler attempted to call an invalid function on the EntryPoint.', {\n            cause,\n            name: 'InternalCallOnlyError',\n        });\n    }\n}\nObject.defineProperty(InternalCallOnlyError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa92/\n});\nexport class InvalidAggregatorError extends BaseError {\n    constructor({ cause, }) {\n        super('Bundler used an invalid aggregator for handling aggregated User Operations.', {\n            cause,\n            name: 'InvalidAggregatorError',\n        });\n    }\n}\nObject.defineProperty(InvalidAggregatorError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa96/\n});\nexport class InvalidAccountNonceError extends BaseError {\n    constructor({ cause, nonce, }) {\n        super('Invalid Smart Account nonce used for User Operation.', {\n            cause,\n            metaMessages: [nonce && `nonce: ${nonce}`].filter(Boolean),\n            name: 'InvalidAccountNonceError',\n        });\n    }\n}\nObject.defineProperty(InvalidAccountNonceError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa25/\n});\nexport class InvalidBeneficiaryError extends BaseError {\n    constructor({ cause, }) {\n        super('Bundler has not set a beneficiary address.', {\n            cause,\n            name: 'InvalidBeneficiaryError',\n        });\n    }\n}\nObject.defineProperty(InvalidBeneficiaryError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa90/\n});\nexport class InvalidFieldsError extends BaseError {\n    constructor({ cause, }) {\n        super('Invalid fields set on User Operation.', {\n            cause,\n            name: 'InvalidFieldsError',\n        });\n    }\n}\nObject.defineProperty(InvalidFieldsError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32602\n});\nexport class InvalidPaymasterAndDataError extends BaseError {\n    constructor({ cause, paymasterAndData, }) {\n        super('Paymaster properties provided are invalid.', {\n            cause,\n            metaMessages: [\n                'This could arise when:',\n                '- the `paymasterAndData` property is of an incorrect length\\n',\n                paymasterAndData && `paymasterAndData: ${paymasterAndData}`,\n            ].filter(Boolean),\n            name: 'InvalidPaymasterAndDataError',\n        });\n    }\n}\nObject.defineProperty(InvalidPaymasterAndDataError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa93/\n});\nexport class PaymasterDepositTooLowError extends BaseError {\n    constructor({ cause, }) {\n        super('Paymaster deposit for the User Operation is too low.', {\n            cause,\n            metaMessages: [\n                'This could arise when:',\n                '- the Paymaster has deposited less than the expected amount via the `deposit` function',\n            ].filter(Boolean),\n            name: 'PaymasterDepositTooLowError',\n        });\n    }\n}\nObject.defineProperty(PaymasterDepositTooLowError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32508\n});\nObject.defineProperty(PaymasterDepositTooLowError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa31/\n});\nexport class PaymasterFunctionRevertedError extends BaseError {\n    constructor({ cause, }) {\n        super('The `validatePaymasterUserOp` function on the Paymaster reverted.', {\n            cause,\n            name: 'PaymasterFunctionRevertedError',\n        });\n    }\n}\nObject.defineProperty(PaymasterFunctionRevertedError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa33/\n});\nexport class PaymasterNotDeployedError extends BaseError {\n    constructor({ cause, }) {\n        super('The Paymaster contract has not been deployed.', {\n            cause,\n            name: 'PaymasterNotDeployedError',\n        });\n    }\n}\nObject.defineProperty(PaymasterNotDeployedError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa30/\n});\nexport class PaymasterRateLimitError extends BaseError {\n    constructor({ cause }) {\n        super('UserOperation rejected because paymaster (or signature aggregator) is throttled/banned.', {\n            cause,\n            name: 'PaymasterRateLimitError',\n        });\n    }\n}\nObject.defineProperty(PaymasterRateLimitError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32504\n});\nexport class PaymasterStakeTooLowError extends BaseError {\n    constructor({ cause }) {\n        super('UserOperation rejected because paymaster (or signature aggregator) is throttled/banned.', {\n            cause,\n            name: 'PaymasterStakeTooLowError',\n        });\n    }\n}\nObject.defineProperty(PaymasterStakeTooLowError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32505\n});\nexport class PaymasterPostOpFunctionRevertedError extends BaseError {\n    constructor({ cause, }) {\n        super('Paymaster `postOp` function reverted.', {\n            cause,\n            name: 'PaymasterPostOpFunctionRevertedError',\n        });\n    }\n}\nObject.defineProperty(PaymasterPostOpFunctionRevertedError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa50/\n});\nexport class SenderAlreadyConstructedError extends BaseError {\n    constructor({ cause, factory, factoryData, initCode, }) {\n        super('Smart Account has already been deployed.', {\n            cause,\n            metaMessages: [\n                'Remove the following properties and try again:',\n                factory && '`factory`',\n                factoryData && '`factoryData`',\n                initCode && '`initCode`',\n            ].filter(Boolean),\n            name: 'SenderAlreadyConstructedError',\n        });\n    }\n}\nObject.defineProperty(SenderAlreadyConstructedError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa10/\n});\nexport class SignatureCheckFailedError extends BaseError {\n    constructor({ cause }) {\n        super('UserOperation rejected because account signature check failed (or paymaster signature, if the paymaster uses its data as signature).', {\n            cause,\n            name: 'SignatureCheckFailedError',\n        });\n    }\n}\nObject.defineProperty(SignatureCheckFailedError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32507\n});\nexport class SmartAccountFunctionRevertedError extends BaseError {\n    constructor({ cause, }) {\n        super('The `validateUserOp` function on the Smart Account reverted.', {\n            cause,\n            name: 'SmartAccountFunctionRevertedError',\n        });\n    }\n}\nObject.defineProperty(SmartAccountFunctionRevertedError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa23/\n});\nexport class UnsupportedSignatureAggregatorError extends BaseError {\n    constructor({ cause }) {\n        super('UserOperation rejected because account specified unsupported signature aggregator.', {\n            cause,\n            name: 'UnsupportedSignatureAggregatorError',\n        });\n    }\n}\nObject.defineProperty(UnsupportedSignatureAggregatorError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32506\n});\nexport class UserOperationExpiredError extends BaseError {\n    constructor({ cause, }) {\n        super('User Operation expired.', {\n            cause,\n            metaMessages: [\n                'This could arise when:',\n                '- the `validAfter` or `validUntil` values returned from `validateUserOp` on the Smart Account are not satisfied',\n            ].filter(Boolean),\n            name: 'UserOperationExpiredError',\n        });\n    }\n}\nObject.defineProperty(UserOperationExpiredError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa22/\n});\nexport class UserOperationPaymasterExpiredError extends BaseError {\n    constructor({ cause, }) {\n        super('Paymaster for User Operation expired.', {\n            cause,\n            metaMessages: [\n                'This could arise when:',\n                '- the `validAfter` or `validUntil` values returned from `validatePaymasterUserOp` on the Paymaster are not satisfied',\n            ].filter(Boolean),\n            name: 'UserOperationPaymasterExpiredError',\n        });\n    }\n}\nObject.defineProperty(UserOperationPaymasterExpiredError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa32/\n});\nexport class UserOperationSignatureError extends BaseError {\n    constructor({ cause, }) {\n        super('Signature provided for the User Operation is invalid.', {\n            cause,\n            metaMessages: [\n                'This could arise when:',\n                '- the `signature` for the User Operation is incorrectly computed, and unable to be verified by the Smart Account',\n            ].filter(Boolean),\n            name: 'UserOperationSignatureError',\n        });\n    }\n}\nObject.defineProperty(UserOperationSignatureError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa24/\n});\nexport class UserOperationPaymasterSignatureError extends BaseError {\n    constructor({ cause, }) {\n        super('Signature provided for the User Operation is invalid.', {\n            cause,\n            metaMessages: [\n                'This could arise when:',\n                '- the `signature` for the User Operation is incorrectly computed, and unable to be verified by the Paymaster',\n            ].filter(Boolean),\n            name: 'UserOperationPaymasterSignatureError',\n        });\n    }\n}\nObject.defineProperty(UserOperationPaymasterSignatureError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa34/\n});\nexport class UserOperationRejectedByEntryPointError extends BaseError {\n    constructor({ cause }) {\n        super(\"User Operation rejected by EntryPoint's `simulateValidation` during account creation or validation.\", {\n            cause,\n            name: 'UserOperationRejectedByEntryPointError',\n        });\n    }\n}\nObject.defineProperty(UserOperationRejectedByEntryPointError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32500\n});\nexport class UserOperationRejectedByPaymasterError extends BaseError {\n    constructor({ cause }) {\n        super(\"User Operation rejected by Paymaster's `validatePaymasterUserOp`.\", {\n            cause,\n            name: 'UserOperationRejectedByPaymasterError',\n        });\n    }\n}\nObject.defineProperty(UserOperationRejectedByPaymasterError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32501\n});\nexport class UserOperationRejectedByOpCodeError extends BaseError {\n    constructor({ cause }) {\n        super('User Operation rejected with op code validation error.', {\n            cause,\n            name: 'UserOperationRejectedByOpCodeError',\n        });\n    }\n}\nObject.defineProperty(UserOperationRejectedByOpCodeError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32502\n});\nexport class UserOperationOutOfTimeRangeError extends BaseError {\n    constructor({ cause }) {\n        super('UserOperation out of time-range: either wallet or paymaster returned a time-range, and it is already expired (or will expire soon).', {\n            cause,\n            name: 'UserOperationOutOfTimeRangeError',\n        });\n    }\n}\nObject.defineProperty(UserOperationOutOfTimeRangeError, \"code\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: -32503\n});\nexport class UnknownBundlerError extends BaseError {\n    constructor({ cause }) {\n        super(`An error occurred while executing user operation: ${cause?.shortMessage}`, {\n            cause,\n            name: 'UnknownBundlerError',\n        });\n    }\n}\nexport class VerificationGasLimitExceededError extends BaseError {\n    constructor({ cause, }) {\n        super('User Operation verification gas limit exceeded.', {\n            cause,\n            metaMessages: [\n                'This could arise when:',\n                '- the gas used for verification exceeded the `verificationGasLimit`',\n            ].filter(Boolean),\n            name: 'VerificationGasLimitExceededError',\n        });\n    }\n}\nObject.defineProperty(VerificationGasLimitExceededError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa40/\n});\nexport class VerificationGasLimitTooLowError extends BaseError {\n    constructor({ cause, }) {\n        super('User Operation verification gas limit is too low.', {\n            cause,\n            metaMessages: [\n                'This could arise when:',\n                '- the `verificationGasLimit` is too low to verify the User Operation',\n            ].filter(Boolean),\n            name: 'VerificationGasLimitTooLowError',\n        });\n    }\n}\nObject.defineProperty(VerificationGasLimitTooLowError, \"message\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: /aa41/\n});\n//# sourceMappingURL=bundler.js.map","import { BaseError } from '../../errors/base.js';\nimport { prettyPrint } from '../../errors/transaction.js';\nimport { formatGwei } from '../../utils/index.js';\nexport class UserOperationExecutionError extends BaseError {\n    constructor(cause, { callData, callGasLimit, docsPath, factory, factoryData, initCode, maxFeePerGas, maxPriorityFeePerGas, nonce, paymaster, paymasterAndData, paymasterData, paymasterPostOpGasLimit, paymasterVerificationGasLimit, preVerificationGas, sender, signature, verificationGasLimit, }) {\n        const prettyArgs = prettyPrint({\n            callData,\n            callGasLimit,\n            factory,\n            factoryData,\n            initCode,\n            maxFeePerGas: typeof maxFeePerGas !== 'undefined' &&\n                `${formatGwei(maxFeePerGas)} gwei`,\n            maxPriorityFeePerGas: typeof maxPriorityFeePerGas !== 'undefined' &&\n                `${formatGwei(maxPriorityFeePerGas)} gwei`,\n            nonce,\n            paymaster,\n            paymasterAndData,\n            paymasterData,\n            paymasterPostOpGasLimit,\n            paymasterVerificationGasLimit,\n            preVerificationGas,\n            sender,\n            signature,\n            verificationGasLimit,\n        });\n        super(cause.shortMessage, {\n            cause,\n            docsPath,\n            metaMessages: [\n                ...(cause.metaMessages ? [...cause.metaMessages, ' '] : []),\n                'Request Arguments:',\n                prettyArgs,\n            ].filter(Boolean),\n            name: 'UserOperationExecutionError',\n        });\n        Object.defineProperty(this, \"cause\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.cause = cause;\n    }\n}\nexport class UserOperationReceiptNotFoundError extends BaseError {\n    constructor({ hash }) {\n        super(`User Operation receipt with hash \"${hash}\" could not be found. The User Operation may not have been processed yet.`, { name: 'UserOperationReceiptNotFoundError' });\n    }\n}\nexport class UserOperationNotFoundError extends BaseError {\n    constructor({ hash }) {\n        super(`User Operation with hash \"${hash}\" could not be found.`, {\n            name: 'UserOperationNotFoundError',\n        });\n    }\n}\nexport class WaitForUserOperationReceiptTimeoutError extends BaseError {\n    constructor({ hash }) {\n        super(`Timed out while waiting for User Operation with hash \"${hash}\" to be confirmed.`, { name: 'WaitForUserOperationReceiptTimeoutError' });\n    }\n}\n//# sourceMappingURL=userOperation.js.map","import { AccountNotDeployedError, ExecutionRevertedError, FailedToSendToBeneficiaryError, GasValuesOverflowError, HandleOpsOutOfGasError, InitCodeFailedError, InitCodeMustCreateSenderError, InitCodeMustReturnSenderError, InsufficientPrefundError, InternalCallOnlyError, InvalidAccountNonceError, InvalidAggregatorError, InvalidBeneficiaryError, InvalidFieldsError, InvalidPaymasterAndDataError, PaymasterDepositTooLowError, PaymasterFunctionRevertedError, PaymasterNotDeployedError, PaymasterPostOpFunctionRevertedError, PaymasterRateLimitError, PaymasterStakeTooLowError, SenderAlreadyConstructedError, SignatureCheckFailedError, SmartAccountFunctionRevertedError, UnknownBundlerError, UnsupportedSignatureAggregatorError, UserOperationExpiredError, UserOperationOutOfTimeRangeError, UserOperationPaymasterExpiredError, UserOperationPaymasterSignatureError, UserOperationRejectedByEntryPointError, UserOperationRejectedByOpCodeError, UserOperationRejectedByPaymasterError, UserOperationSignatureError, VerificationGasLimitExceededError, VerificationGasLimitTooLowError, } from '../../errors/bundler.js';\nconst bundlerErrors = [\n    ExecutionRevertedError,\n    InvalidFieldsError,\n    PaymasterDepositTooLowError,\n    PaymasterRateLimitError,\n    PaymasterStakeTooLowError,\n    SignatureCheckFailedError,\n    UnsupportedSignatureAggregatorError,\n    UserOperationOutOfTimeRangeError,\n    UserOperationRejectedByEntryPointError,\n    UserOperationRejectedByPaymasterError,\n    UserOperationRejectedByOpCodeError,\n];\nexport function getBundlerError(err, args) {\n    const message = (err.details || '').toLowerCase();\n    if (AccountNotDeployedError.message.test(message))\n        return new AccountNotDeployedError({\n            cause: err,\n        });\n    if (FailedToSendToBeneficiaryError.message.test(message))\n        return new FailedToSendToBeneficiaryError({\n            cause: err,\n        });\n    if (GasValuesOverflowError.message.test(message))\n        return new GasValuesOverflowError({\n            cause: err,\n        });\n    if (HandleOpsOutOfGasError.message.test(message))\n        return new HandleOpsOutOfGasError({\n            cause: err,\n        });\n    if (InitCodeFailedError.message.test(message))\n        return new InitCodeFailedError({\n            cause: err,\n            factory: args.factory,\n            factoryData: args.factoryData,\n            initCode: args.initCode,\n        });\n    if (InitCodeMustCreateSenderError.message.test(message))\n        return new InitCodeMustCreateSenderError({\n            cause: err,\n            factory: args.factory,\n            factoryData: args.factoryData,\n            initCode: args.initCode,\n        });\n    if (InitCodeMustReturnSenderError.message.test(message))\n        return new InitCodeMustReturnSenderError({\n            cause: err,\n            factory: args.factory,\n            factoryData: args.factoryData,\n            initCode: args.initCode,\n            sender: args.sender,\n        });\n    if (InsufficientPrefundError.message.test(message))\n        return new InsufficientPrefundError({\n            cause: err,\n        });\n    if (InternalCallOnlyError.message.test(message))\n        return new InternalCallOnlyError({\n            cause: err,\n        });\n    if (InvalidAccountNonceError.message.test(message))\n        return new InvalidAccountNonceError({\n            cause: err,\n            nonce: args.nonce,\n        });\n    if (InvalidAggregatorError.message.test(message))\n        return new InvalidAggregatorError({\n            cause: err,\n        });\n    if (InvalidBeneficiaryError.message.test(message))\n        return new InvalidBeneficiaryError({\n            cause: err,\n        });\n    if (InvalidPaymasterAndDataError.message.test(message))\n        return new InvalidPaymasterAndDataError({\n            cause: err,\n        });\n    if (PaymasterDepositTooLowError.message.test(message))\n        return new PaymasterDepositTooLowError({\n            cause: err,\n        });\n    if (PaymasterFunctionRevertedError.message.test(message))\n        return new PaymasterFunctionRevertedError({\n            cause: err,\n        });\n    if (PaymasterNotDeployedError.message.test(message))\n        return new PaymasterNotDeployedError({\n            cause: err,\n        });\n    if (PaymasterPostOpFunctionRevertedError.message.test(message))\n        return new PaymasterPostOpFunctionRevertedError({\n            cause: err,\n        });\n    if (SmartAccountFunctionRevertedError.message.test(message))\n        return new SmartAccountFunctionRevertedError({\n            cause: err,\n        });\n    if (SenderAlreadyConstructedError.message.test(message))\n        return new SenderAlreadyConstructedError({\n            cause: err,\n            factory: args.factory,\n            factoryData: args.factoryData,\n            initCode: args.initCode,\n        });\n    if (UserOperationExpiredError.message.test(message))\n        return new UserOperationExpiredError({\n            cause: err,\n        });\n    if (UserOperationPaymasterExpiredError.message.test(message))\n        return new UserOperationPaymasterExpiredError({\n            cause: err,\n        });\n    if (UserOperationPaymasterSignatureError.message.test(message))\n        return new UserOperationPaymasterSignatureError({\n            cause: err,\n        });\n    if (UserOperationSignatureError.message.test(message))\n        return new UserOperationSignatureError({\n            cause: err,\n        });\n    if (VerificationGasLimitExceededError.message.test(message))\n        return new VerificationGasLimitExceededError({\n            cause: err,\n        });\n    if (VerificationGasLimitTooLowError.message.test(message))\n        return new VerificationGasLimitTooLowError({\n            cause: err,\n        });\n    const error = err.walk((e) => bundlerErrors.some((error) => error.code === e.code));\n    if (error) {\n        if (error.code === ExecutionRevertedError.code)\n            return new ExecutionRevertedError({\n                cause: err,\n                data: error.data,\n                message: error.details,\n            });\n        if (error.code === InvalidFieldsError.code)\n            return new InvalidFieldsError({\n                cause: err,\n            });\n        if (error.code === PaymasterDepositTooLowError.code)\n            return new PaymasterDepositTooLowError({\n                cause: err,\n            });\n        if (error.code === PaymasterRateLimitError.code)\n            return new PaymasterRateLimitError({\n                cause: err,\n            });\n        if (error.code === PaymasterStakeTooLowError.code)\n            return new PaymasterStakeTooLowError({\n                cause: err,\n            });\n        if (error.code === SignatureCheckFailedError.code)\n            return new SignatureCheckFailedError({\n                cause: err,\n            });\n        if (error.code === UnsupportedSignatureAggregatorError.code)\n            return new UnsupportedSignatureAggregatorError({\n                cause: err,\n            });\n        if (error.code === UserOperationOutOfTimeRangeError.code)\n            return new UserOperationOutOfTimeRangeError({\n                cause: err,\n            });\n        if (error.code === UserOperationRejectedByEntryPointError.code)\n            return new UserOperationRejectedByEntryPointError({\n                cause: err,\n            });\n        if (error.code === UserOperationRejectedByPaymasterError.code)\n            return new UserOperationRejectedByPaymasterError({\n                cause: err,\n            });\n        if (error.code === UserOperationRejectedByOpCodeError.code)\n            return new UserOperationRejectedByOpCodeError({\n                cause: err,\n            });\n    }\n    return new UnknownBundlerError({\n        cause: err,\n    });\n}\n//# sourceMappingURL=getBundlerError.js.map","import { BaseError } from '../../../errors/base.js';\nimport { ContractFunctionExecutionError, ContractFunctionRevertedError, ContractFunctionZeroDataError, } from '../../../errors/contract.js';\nimport { decodeErrorResult } from '../../../utils/abi/decodeErrorResult.js';\nimport { ExecutionRevertedError } from '../../errors/bundler.js';\nimport { UserOperationExecutionError, } from '../../errors/userOperation.js';\nimport { getBundlerError, } from './getBundlerError.js';\nexport function getUserOperationError(err, { calls, docsPath, ...args }) {\n    const cause = (() => {\n        const cause = getBundlerError(err, args);\n        if (calls && cause instanceof ExecutionRevertedError) {\n            const revertData = getRevertData(cause);\n            const contractCalls = calls?.filter((call) => call.abi);\n            if (revertData && contractCalls.length > 0)\n                return getContractError({ calls: contractCalls, revertData });\n        }\n        return cause;\n    })();\n    return new UserOperationExecutionError(cause, {\n        docsPath,\n        ...args,\n    });\n}\n/////////////////////////////////////////////////////////////////////////////////\nfunction getRevertData(error) {\n    let revertData;\n    error.walk((e) => {\n        const error = e;\n        if (typeof error.data === 'string' ||\n            typeof error.data?.revertData === 'string' ||\n            (!(error instanceof BaseError) && typeof error.message === 'string')) {\n            const match = (error.data?.revertData ||\n                error.data ||\n                error.message).match?.(/(0x[A-Za-z0-9]*)/);\n            if (match) {\n                revertData = match[1];\n                return true;\n            }\n        }\n        return false;\n    });\n    return revertData;\n}\nfunction getContractError(parameters) {\n    const { calls, revertData } = parameters;\n    const { abi, functionName, args, to } = (() => {\n        const contractCalls = calls?.filter((call) => Boolean(call.abi));\n        if (contractCalls.length === 1)\n            return contractCalls[0];\n        const compatContractCalls = contractCalls.filter((call) => {\n            try {\n                return Boolean(decodeErrorResult({\n                    abi: call.abi,\n                    data: revertData,\n                }));\n            }\n            catch {\n                return false;\n            }\n        });\n        if (compatContractCalls.length === 1)\n            return compatContractCalls[0];\n        return {\n            abi: [],\n            functionName: contractCalls.reduce((acc, call) => `${acc ? `${acc} | ` : ''}${call.functionName}`, ''),\n            args: undefined,\n            to: undefined,\n        };\n    })();\n    const cause = (() => {\n        if (revertData === '0x')\n            return new ContractFunctionZeroDataError({ functionName });\n        return new ContractFunctionRevertedError({\n            abi,\n            data: revertData,\n            functionName,\n        });\n    })();\n    return new ContractFunctionExecutionError(cause, {\n        abi,\n        args,\n        contractAddress: to,\n        functionName,\n    });\n}\n//# sourceMappingURL=getUserOperationError.js.map","export function formatUserOperationGas(parameters) {\n    const gas = {};\n    if (parameters.callGasLimit)\n        gas.callGasLimit = BigInt(parameters.callGasLimit);\n    if (parameters.preVerificationGas)\n        gas.preVerificationGas = BigInt(parameters.preVerificationGas);\n    if (parameters.verificationGasLimit)\n        gas.verificationGasLimit = BigInt(parameters.verificationGasLimit);\n    if (parameters.paymasterPostOpGasLimit)\n        gas.paymasterPostOpGasLimit = BigInt(parameters.paymasterPostOpGasLimit);\n    if (parameters.paymasterVerificationGasLimit)\n        gas.paymasterVerificationGasLimit = BigInt(parameters.paymasterVerificationGasLimit);\n    return gas;\n}\n//# sourceMappingURL=userOperationGas.js.map","import { numberToHex } from '../../../utils/encoding/toHex.js';\nimport { pad } from '../../../utils/index.js';\nexport function formatUserOperationRequest(request) {\n    const rpcRequest = {};\n    if (typeof request.callData !== 'undefined')\n        rpcRequest.callData = request.callData;\n    if (typeof request.callGasLimit !== 'undefined')\n        rpcRequest.callGasLimit = numberToHex(request.callGasLimit);\n    if (typeof request.factory !== 'undefined')\n        rpcRequest.factory = request.factory;\n    if (typeof request.factoryData !== 'undefined')\n        rpcRequest.factoryData = request.factoryData;\n    if (typeof request.initCode !== 'undefined')\n        rpcRequest.initCode = request.initCode;\n    if (typeof request.maxFeePerGas !== 'undefined')\n        rpcRequest.maxFeePerGas = numberToHex(request.maxFeePerGas);\n    if (typeof request.maxPriorityFeePerGas !== 'undefined')\n        rpcRequest.maxPriorityFeePerGas = numberToHex(request.maxPriorityFeePerGas);\n    if (typeof request.nonce !== 'undefined')\n        rpcRequest.nonce = numberToHex(request.nonce);\n    if (typeof request.paymaster !== 'undefined')\n        rpcRequest.paymaster = request.paymaster;\n    if (typeof request.paymasterAndData !== 'undefined')\n        rpcRequest.paymasterAndData = request.paymasterAndData || '0x';\n    if (typeof request.paymasterData !== 'undefined')\n        rpcRequest.paymasterData = request.paymasterData;\n    if (typeof request.paymasterPostOpGasLimit !== 'undefined')\n        rpcRequest.paymasterPostOpGasLimit = numberToHex(request.paymasterPostOpGasLimit);\n    if (typeof request.paymasterVerificationGasLimit !== 'undefined')\n        rpcRequest.paymasterVerificationGasLimit = numberToHex(request.paymasterVerificationGasLimit);\n    if (typeof request.preVerificationGas !== 'undefined')\n        rpcRequest.preVerificationGas = numberToHex(request.preVerificationGas);\n    if (typeof request.sender !== 'undefined')\n        rpcRequest.sender = request.sender;\n    if (typeof request.signature !== 'undefined')\n        rpcRequest.signature = request.signature;\n    if (typeof request.verificationGasLimit !== 'undefined')\n        rpcRequest.verificationGasLimit = numberToHex(request.verificationGasLimit);\n    if (typeof request.authorization !== 'undefined')\n        rpcRequest.eip7702Auth = formatAuthorization(request.authorization);\n    return rpcRequest;\n}\nfunction formatAuthorization(authorization) {\n    return {\n        address: authorization.address,\n        chainId: numberToHex(authorization.chainId),\n        nonce: numberToHex(authorization.nonce),\n        r: authorization.r\n            ? numberToHex(BigInt(authorization.r), { size: 32 })\n            : pad('0x', { size: 32 }),\n        s: authorization.s\n            ? numberToHex(BigInt(authorization.s), { size: 32 })\n            : pad('0x', { size: 32 }),\n        yParity: authorization.yParity\n            ? numberToHex(authorization.yParity, { size: 1 })\n            : pad('0x', { size: 32 }),\n    };\n}\n//# sourceMappingURL=userOperationRequest.js.map","import { hexToBigInt } from '../../../utils/encoding/fromHex.js';\nimport { numberToHex } from '../../../utils/encoding/toHex.js';\nimport { formatUserOperationRequest, } from '../../utils/formatters/userOperationRequest.js';\n/**\n * Retrieves paymaster-related User Operation properties to be used for sending the User Operation.\n *\n * - Docs: https://viem.sh/account-abstraction/actions/paymaster/getPaymasterData\n *\n * @param client - Client to use\n * @param parameters - {@link GetPaymasterDataParameters}\n * @returns Paymaster-related User Operation properties. {@link GetPaymasterDataReturnType}\n *\n * @example\n * import { http } from 'viem'\n * import { createPaymasterClient, getPaymasterData } from 'viem/account-abstraction'\n *\n * const paymasterClient = createPaymasterClient({\n *   transport: http('https://...'),\n * })\n *\n * const userOperation = { ... }\n *\n * const values = await getPaymasterData(paymasterClient, {\n *   chainId: 1,\n *   entryPointAddress: '0x...',\n *   ...userOperation,\n * })\n */\nexport async function getPaymasterData(client, parameters) {\n    const { chainId, entryPointAddress, context, ...userOperation } = parameters;\n    const request = formatUserOperationRequest(userOperation);\n    const { paymasterPostOpGasLimit, paymasterVerificationGasLimit, ...rest } = await client.request({\n        method: 'pm_getPaymasterData',\n        params: [\n            {\n                ...request,\n                callGasLimit: request.callGasLimit ?? '0x0',\n                verificationGasLimit: request.verificationGasLimit ?? '0x0',\n                preVerificationGas: request.preVerificationGas ?? '0x0',\n            },\n            entryPointAddress,\n            numberToHex(chainId),\n            context,\n        ],\n    });\n    return {\n        ...rest,\n        ...(paymasterPostOpGasLimit && {\n            paymasterPostOpGasLimit: hexToBigInt(paymasterPostOpGasLimit),\n        }),\n        ...(paymasterVerificationGasLimit && {\n            paymasterVerificationGasLimit: hexToBigInt(paymasterVerificationGasLimit),\n        }),\n    };\n}\n//# sourceMappingURL=getPaymasterData.js.map","import { hexToBigInt } from '../../../utils/encoding/fromHex.js';\nimport { numberToHex } from '../../../utils/encoding/toHex.js';\nimport { formatUserOperationRequest, } from '../../utils/formatters/userOperationRequest.js';\n/**\n * Retrieves paymaster-related User Operation properties to be used for gas estimation.\n *\n * - Docs: https://viem.sh/account-abstraction/actions/paymaster/getPaymasterStubData\n *\n * @param client - Client to use\n * @param parameters - {@link GetPaymasterStubDataParameters}\n * @returns Paymaster-related User Operation properties. {@link GetPaymasterStubDataReturnType}\n *\n * @example\n * import { http } from 'viem'\n * import { createPaymasterClient, getPaymasterStubData } from 'viem/account-abstraction'\n *\n * const paymasterClient = createPaymasterClient({\n *   transport: http('https://...'),\n * })\n *\n * const userOperation = { ... }\n *\n * const values = await getPaymasterStubData(paymasterClient, {\n *   chainId: 1,\n *   entryPointAddress: '0x...',\n *   ...userOperation,\n * })\n */\nexport async function getPaymasterStubData(client, parameters) {\n    const { chainId, entryPointAddress, context, ...userOperation } = parameters;\n    const request = formatUserOperationRequest(userOperation);\n    const { paymasterPostOpGasLimit, paymasterVerificationGasLimit, ...rest } = await client.request({\n        method: 'pm_getPaymasterStubData',\n        params: [\n            {\n                ...request,\n                callGasLimit: request.callGasLimit ?? '0x0',\n                verificationGasLimit: request.verificationGasLimit ?? '0x0',\n                preVerificationGas: request.preVerificationGas ?? '0x0',\n            },\n            entryPointAddress,\n            numberToHex(chainId),\n            context,\n        ],\n    });\n    return {\n        ...rest,\n        ...(paymasterPostOpGasLimit && {\n            paymasterPostOpGasLimit: hexToBigInt(paymasterPostOpGasLimit),\n        }),\n        ...(paymasterVerificationGasLimit && {\n            paymasterVerificationGasLimit: hexToBigInt(paymasterVerificationGasLimit),\n        }),\n    };\n}\n//# sourceMappingURL=getPaymasterStubData.js.map","import { parseAccount, } from '../../../accounts/utils/parseAccount.js';\nimport { prepareAuthorization } from '../../../actions/index.js';\nimport { estimateFeesPerGas, } from '../../../actions/public/estimateFeesPerGas.js';\nimport { getChainId as getChainId_ } from '../../../actions/public/getChainId.js';\nimport { AccountNotFoundError } from '../../../errors/account.js';\nimport { encodeFunctionData, } from '../../../utils/abi/encodeFunctionData.js';\nimport { concat } from '../../../utils/data/concat.js';\nimport { getAction } from '../../../utils/getAction.js';\nimport { getPaymasterData as getPaymasterData_, } from '../paymaster/getPaymasterData.js';\nimport { getPaymasterStubData as getPaymasterStubData_, } from '../paymaster/getPaymasterStubData.js';\nimport { estimateUserOperationGas, } from './estimateUserOperationGas.js';\nconst defaultParameters = [\n    'factory',\n    'fees',\n    'gas',\n    'paymaster',\n    'nonce',\n    'signature',\n    'authorization',\n];\n/**\n * Prepares a User Operation and fills in missing properties.\n *\n * - Docs: https://viem.sh/actions/bundler/prepareUserOperation\n *\n * @param args - {@link PrepareUserOperationParameters}\n * @returns The User Operation. {@link PrepareUserOperationReturnType}\n *\n * @example\n * import { createBundlerClient, http } from 'viem'\n * import { toSmartAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { prepareUserOperation } from 'viem/actions'\n *\n * const account = await toSmartAccount({ ... })\n *\n * const client = createBundlerClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n *\n * const request = await prepareUserOperation(client, {\n *   account,\n *   calls: [{ to: '0x...', value: parseEther('1') }],\n * })\n */\nexport async function prepareUserOperation(client, parameters_) {\n    const parameters = parameters_;\n    const { account: account_ = client.account, parameters: properties = defaultParameters, stateOverride, } = parameters;\n    ////////////////////////////////////////////////////////////////////////////////\n    // Assert that an Account is defined.\n    ////////////////////////////////////////////////////////////////////////////////\n    if (!account_)\n        throw new AccountNotFoundError();\n    const account = parseAccount(account_);\n    ////////////////////////////////////////////////////////////////////////////////\n    // Declare typed Bundler Client.\n    ////////////////////////////////////////////////////////////////////////////////\n    const bundlerClient = client;\n    ////////////////////////////////////////////////////////////////////////////////\n    // Declare Paymaster properties.\n    ////////////////////////////////////////////////////////////////////////////////\n    const paymaster = parameters.paymaster ?? bundlerClient?.paymaster;\n    const paymasterAddress = typeof paymaster === 'string' ? paymaster : undefined;\n    const { getPaymasterStubData, getPaymasterData } = (() => {\n        // If `paymaster: true`, we will assume the Bundler Client supports Paymaster Actions.\n        if (paymaster === true)\n            return {\n                getPaymasterStubData: (parameters) => getAction(bundlerClient, getPaymasterStubData_, 'getPaymasterStubData')(parameters),\n                getPaymasterData: (parameters) => getAction(bundlerClient, getPaymasterData_, 'getPaymasterData')(parameters),\n            };\n        // If Actions are passed to `paymaster` (via Paymaster Client or directly), we will use them.\n        if (typeof paymaster === 'object') {\n            const { getPaymasterStubData, getPaymasterData } = paymaster;\n            return {\n                getPaymasterStubData: (getPaymasterData && getPaymasterStubData\n                    ? getPaymasterStubData\n                    : getPaymasterData),\n                getPaymasterData: getPaymasterData && getPaymasterStubData\n                    ? getPaymasterData\n                    : undefined,\n            };\n        }\n        // No Paymaster functions.\n        return {\n            getPaymasterStubData: undefined,\n            getPaymasterData: undefined,\n        };\n    })();\n    const paymasterContext = parameters.paymasterContext\n        ? parameters.paymasterContext\n        : bundlerClient?.paymasterContext;\n    ////////////////////////////////////////////////////////////////////////////////\n    // Set up the User Operation request.\n    ////////////////////////////////////////////////////////////////////////////////\n    let request = {\n        ...parameters,\n        paymaster: paymasterAddress,\n        sender: account.address,\n    };\n    ////////////////////////////////////////////////////////////////////////////////\n    // Concurrently prepare properties required to fill the User Operation.\n    ////////////////////////////////////////////////////////////////////////////////\n    const [callData, factory, fees, nonce, authorization] = await Promise.all([\n        (async () => {\n            if (parameters.calls)\n                return account.encodeCalls(parameters.calls.map((call_) => {\n                    const call = call_;\n                    if (call.abi)\n                        return {\n                            data: encodeFunctionData(call),\n                            to: call.to,\n                            value: call.value,\n                        };\n                    return call;\n                }));\n            return parameters.callData;\n        })(),\n        (async () => {\n            if (!properties.includes('factory'))\n                return undefined;\n            if (parameters.initCode)\n                return { initCode: parameters.initCode };\n            if (parameters.factory && parameters.factoryData) {\n                return {\n                    factory: parameters.factory,\n                    factoryData: parameters.factoryData,\n                };\n            }\n            const { factory, factoryData } = await account.getFactoryArgs();\n            if (account.entryPoint.version === '0.6')\n                return {\n                    initCode: factory && factoryData ? concat([factory, factoryData]) : undefined,\n                };\n            return {\n                factory,\n                factoryData,\n            };\n        })(),\n        (async () => {\n            if (!properties.includes('fees'))\n                return undefined;\n            // If we have sufficient properties for fees, return them.\n            if (typeof parameters.maxFeePerGas === 'bigint' &&\n                typeof parameters.maxPriorityFeePerGas === 'bigint')\n                return request;\n            // If the Bundler Client has a `estimateFeesPerGas` hook, run it.\n            if (bundlerClient?.userOperation?.estimateFeesPerGas) {\n                const fees = await bundlerClient.userOperation.estimateFeesPerGas({\n                    account,\n                    bundlerClient,\n                    userOperation: request,\n                });\n                return {\n                    ...request,\n                    ...fees,\n                };\n            }\n            // Otherwise, we will need to estimate the fees to fill the fee properties.\n            try {\n                const client_ = bundlerClient.client ?? client;\n                const fees = await getAction(client_, estimateFeesPerGas, 'estimateFeesPerGas')({\n                    chain: client_.chain,\n                    type: 'eip1559',\n                });\n                return {\n                    maxFeePerGas: typeof parameters.maxFeePerGas === 'bigint'\n                        ? parameters.maxFeePerGas\n                        : BigInt(\n                        // Bundlers unfortunately have strict rules on fee prechecks – we will need to set a generous buffer.\n                        2n * fees.maxFeePerGas),\n                    maxPriorityFeePerGas: typeof parameters.maxPriorityFeePerGas === 'bigint'\n                        ? parameters.maxPriorityFeePerGas\n                        : BigInt(\n                        // Bundlers unfortunately have strict rules on fee prechecks – we will need to set a generous buffer.\n                        2n * fees.maxPriorityFeePerGas),\n                };\n            }\n            catch {\n                return undefined;\n            }\n        })(),\n        (async () => {\n            if (!properties.includes('nonce'))\n                return undefined;\n            if (typeof parameters.nonce === 'bigint')\n                return parameters.nonce;\n            return account.getNonce();\n        })(),\n        (async () => {\n            if (!properties.includes('authorization'))\n                return undefined;\n            if (typeof parameters.authorization === 'object')\n                return parameters.authorization;\n            if (account.authorization && !(await account.isDeployed())) {\n                const authorization = await prepareAuthorization(account.client, account.authorization);\n                return {\n                    ...authorization,\n                    r: '0xfffffffffffffffffffffffffffffff000000000000000000000000000000000',\n                    s: '0x7aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa',\n                    yParity: 1,\n                };\n            }\n            return undefined;\n        })(),\n    ]);\n    ////////////////////////////////////////////////////////////////////////////////\n    // Fill User Operation with the prepared properties from above.\n    ////////////////////////////////////////////////////////////////////////////////\n    if (typeof callData !== 'undefined')\n        request.callData = callData;\n    if (typeof factory !== 'undefined')\n        request = { ...request, ...factory };\n    if (typeof fees !== 'undefined')\n        request = { ...request, ...fees };\n    if (typeof nonce !== 'undefined')\n        request.nonce = nonce;\n    if (typeof authorization !== 'undefined')\n        request.authorization = authorization;\n    ////////////////////////////////////////////////////////////////////////////////\n    // Fill User Operation with the `signature` property.\n    ////////////////////////////////////////////////////////////////////////////////\n    if (properties.includes('signature')) {\n        if (typeof parameters.signature !== 'undefined')\n            request.signature = parameters.signature;\n        else\n            request.signature = await account.getStubSignature(request);\n    }\n    ////////////////////////////////////////////////////////////////////////////////\n    // `initCode` is required to be filled with EntryPoint 0.6.\n    ////////////////////////////////////////////////////////////////////////////////\n    // If no `initCode` is provided, we use an empty bytes string.\n    if (account.entryPoint.version === '0.6' && !request.initCode)\n        request.initCode = '0x';\n    ////////////////////////////////////////////////////////////////////////////////\n    // Fill User Operation with paymaster-related properties for **gas estimation**.\n    ////////////////////////////////////////////////////////////////////////////////\n    let chainId;\n    async function getChainId() {\n        if (chainId)\n            return chainId;\n        if (client.chain)\n            return client.chain.id;\n        const chainId_ = await getAction(client, getChainId_, 'getChainId')({});\n        chainId = chainId_;\n        return chainId;\n    }\n    // If the User Operation is intended to be sponsored, we will need to fill the paymaster-related\n    // User Operation properties required to estimate the User Operation gas.\n    let isPaymasterPopulated = false;\n    if (properties.includes('paymaster') &&\n        getPaymasterStubData &&\n        !paymasterAddress &&\n        !parameters.paymasterAndData) {\n        const { isFinal = false, sponsor: _, ...paymasterArgs } = await getPaymasterStubData({\n            chainId: await getChainId(),\n            entryPointAddress: account.entryPoint.address,\n            context: paymasterContext,\n            ...request,\n        });\n        isPaymasterPopulated = isFinal;\n        request = {\n            ...request,\n            ...paymasterArgs,\n        };\n    }\n    ////////////////////////////////////////////////////////////////////////////////\n    // `paymasterAndData` is required to be filled with EntryPoint 0.6.\n    ////////////////////////////////////////////////////////////////////////////////\n    // If no `paymasterAndData` is provided, we use an empty bytes string.\n    if (account.entryPoint.version === '0.6' && !request.paymasterAndData)\n        request.paymasterAndData = '0x';\n    ////////////////////////////////////////////////////////////////////////////////\n    // Fill User Operation with gas-related properties.\n    ////////////////////////////////////////////////////////////////////////////////\n    if (properties.includes('gas')) {\n        // If the Account has opinionated gas estimation logic, run the `estimateGas` hook and\n        // fill the request with the prepared gas properties.\n        if (account.userOperation?.estimateGas) {\n            const gas = await account.userOperation.estimateGas(request);\n            request = {\n                ...request,\n                ...gas,\n            };\n        }\n        // If not all the gas properties are already populated, we will need to estimate the gas\n        // to fill the gas properties.\n        if (typeof request.callGasLimit === 'undefined' ||\n            typeof request.preVerificationGas === 'undefined' ||\n            typeof request.verificationGasLimit === 'undefined' ||\n            (request.paymaster &&\n                typeof request.paymasterPostOpGasLimit === 'undefined') ||\n            (request.paymaster &&\n                typeof request.paymasterVerificationGasLimit === 'undefined')) {\n            const gas = await getAction(bundlerClient, estimateUserOperationGas, 'estimateUserOperationGas')({\n                account,\n                // Some Bundlers fail if nullish gas values are provided for gas estimation :') –\n                // so we will need to set a default zeroish value.\n                callGasLimit: 0n,\n                preVerificationGas: 0n,\n                verificationGasLimit: 0n,\n                stateOverride,\n                ...(request.paymaster\n                    ? {\n                        paymasterPostOpGasLimit: 0n,\n                        paymasterVerificationGasLimit: 0n,\n                    }\n                    : {}),\n                ...request,\n            });\n            request = {\n                ...request,\n                callGasLimit: request.callGasLimit ?? gas.callGasLimit,\n                preVerificationGas: request.preVerificationGas ?? gas.preVerificationGas,\n                verificationGasLimit: request.verificationGasLimit ?? gas.verificationGasLimit,\n                paymasterPostOpGasLimit: request.paymasterPostOpGasLimit ?? gas.paymasterPostOpGasLimit,\n                paymasterVerificationGasLimit: request.paymasterVerificationGasLimit ??\n                    gas.paymasterVerificationGasLimit,\n            };\n        }\n    }\n    ////////////////////////////////////////////////////////////////////////////////\n    // Fill User Operation with paymaster-related properties for **sending** the User Operation.\n    ////////////////////////////////////////////////////////////////////////////////\n    // If the User Operation is intended to be sponsored, we will need to fill the paymaster-related\n    // User Operation properties required to send the User Operation.\n    if (properties.includes('paymaster') &&\n        getPaymasterData &&\n        !paymasterAddress &&\n        !parameters.paymasterAndData &&\n        !isPaymasterPopulated) {\n        // Retrieve paymaster-related User Operation properties to be used for **sending** the User Operation.\n        const paymaster = await getPaymasterData({\n            chainId: await getChainId(),\n            entryPointAddress: account.entryPoint.address,\n            context: paymasterContext,\n            ...request,\n        });\n        request = {\n            ...request,\n            ...paymaster,\n        };\n    }\n    ////////////////////////////////////////////////////////////////////////////////\n    // Remove redundant properties that do not conform to the User Operation schema.\n    ////////////////////////////////////////////////////////////////////////////////\n    delete request.calls;\n    delete request.parameters;\n    delete request.paymasterContext;\n    if (typeof request.paymaster !== 'string')\n        delete request.paymaster;\n    ////////////////////////////////////////////////////////////////////////////////\n    return request;\n}\n//# sourceMappingURL=prepareUserOperation.js.map","import { parseAccount, } from '../../../accounts/utils/parseAccount.js';\nimport { AccountNotFoundError } from '../../../errors/account.js';\nimport { getAction } from '../../../utils/getAction.js';\nimport { serializeStateOverride } from '../../../utils/stateOverride.js';\nimport { getUserOperationError } from '../../utils/errors/getUserOperationError.js';\nimport { formatUserOperationGas, } from '../../utils/formatters/userOperationGas.js';\nimport { formatUserOperationRequest, } from '../../utils/formatters/userOperationRequest.js';\nimport { prepareUserOperation, } from './prepareUserOperation.js';\n/**\n * Returns an estimate of gas values necessary to execute the User Operation.\n *\n * - Docs: https://viem.sh/actions/bundler/estimateUserOperationGas\n *\n * @param client - Client to use\n * @param parameters - {@link EstimateUserOperationGasParameters}\n * @returns The gas estimate (in wei). {@link EstimateUserOperationGasReturnType}\n *\n * @example\n * import { createBundlerClient, http, parseEther } from 'viem'\n * import { toSmartAccount } from 'viem/accounts'\n * import { mainnet } from 'viem/chains'\n * import { estimateUserOperationGas } from 'viem/actions'\n *\n * const account = await toSmartAccount({ ... })\n *\n * const bundlerClient = createBundlerClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n *\n * const values = await estimateUserOperationGas(bundlerClient, {\n *   account,\n *   calls: [{ to: '0x...', value: parseEther('1') }],\n * })\n */\nexport async function estimateUserOperationGas(client, parameters) {\n    const { account: account_ = client.account, entryPointAddress, stateOverride, } = parameters;\n    if (!account_ && !parameters.sender)\n        throw new AccountNotFoundError();\n    const account = account_ ? parseAccount(account_) : undefined;\n    const rpcStateOverride = serializeStateOverride(stateOverride);\n    const request = account\n        ? await getAction(client, prepareUserOperation, 'prepareUserOperation')({\n            ...parameters,\n            parameters: [\n                'authorization',\n                'factory',\n                'nonce',\n                'paymaster',\n                'signature',\n            ],\n        })\n        : parameters;\n    try {\n        const params = [\n            formatUserOperationRequest(request),\n            (entryPointAddress ?? account?.entryPoint?.address),\n        ];\n        const result = await client.request({\n            method: 'eth_estimateUserOperationGas',\n            params: rpcStateOverride ? [...params, rpcStateOverride] : [...params],\n        });\n        return formatUserOperationGas(result);\n    }\n    catch (error) {\n        const calls = parameters.calls;\n        throw getUserOperationError(error, {\n            ...request,\n            ...(calls ? { calls } : {}),\n        });\n    }\n}\n//# sourceMappingURL=estimateUserOperationGas.js.map","/**\n * Returns the EntryPoints that the bundler supports.\n *\n * - Docs: https://viem.sh/actions/bundler/getSupportedEntryPoints\n *\n * @param client - Client to use\n * @param parameters - {@link GetSupportedEntryPointsParameters}\n * @returns Supported Entry Points. {@link GetSupportedEntryPointsReturnType}\n *\n * @example\n * import { createBundlerClient, http, parseEther } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getSupportedEntryPoints } from 'viem/actions'\n *\n * const bundlerClient = createBundlerClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n *\n * const addresses = await getSupportedEntryPoints(bundlerClient)\n */\nexport function getSupportedEntryPoints(client) {\n    return client.request({ method: 'eth_supportedEntryPoints' });\n}\n//# sourceMappingURL=getSupportedEntryPoints.js.map","export function formatUserOperation(parameters) {\n    const userOperation = { ...parameters };\n    if (parameters.callGasLimit)\n        userOperation.callGasLimit = BigInt(parameters.callGasLimit);\n    if (parameters.maxFeePerGas)\n        userOperation.maxFeePerGas = BigInt(parameters.maxFeePerGas);\n    if (parameters.maxPriorityFeePerGas)\n        userOperation.maxPriorityFeePerGas = BigInt(parameters.maxPriorityFeePerGas);\n    if (parameters.nonce)\n        userOperation.nonce = BigInt(parameters.nonce);\n    if (parameters.paymasterPostOpGasLimit)\n        userOperation.paymasterPostOpGasLimit = BigInt(parameters.paymasterPostOpGasLimit);\n    if (parameters.paymasterVerificationGasLimit)\n        userOperation.paymasterVerificationGasLimit = BigInt(parameters.paymasterVerificationGasLimit);\n    if (parameters.preVerificationGas)\n        userOperation.preVerificationGas = BigInt(parameters.preVerificationGas);\n    if (parameters.verificationGasLimit)\n        userOperation.verificationGasLimit = BigInt(parameters.verificationGasLimit);\n    return userOperation;\n}\n//# sourceMappingURL=userOperation.js.map","import { UserOperationNotFoundError, } from '../../errors/userOperation.js';\nimport { formatUserOperation } from '../../utils/formatters/userOperation.js';\n/**\n * Retrieves information about a User Operation given a hash.\n *\n * - Docs: https://viem.sh/account-abstraction/actions/bundler/getUserOperation\n *\n * @param client - Client to use\n * @param parameters - {@link GetUserOperationParameters}\n * @returns The receipt. {@link GetUserOperationReturnType}\n *\n * @example\n * import { createBundlerClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getUserOperation } from 'viem/actions\n *\n * const client = createBundlerClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n *\n * const receipt = await getUserOperation(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport async function getUserOperation(client, { hash }) {\n    const result = await client.request({\n        method: 'eth_getUserOperationByHash',\n        params: [hash],\n    }, { dedupe: true });\n    if (!result)\n        throw new UserOperationNotFoundError({ hash });\n    const { blockHash, blockNumber, entryPoint, transactionHash, userOperation } = result;\n    return {\n        blockHash,\n        blockNumber: BigInt(blockNumber),\n        entryPoint,\n        transactionHash,\n        userOperation: formatUserOperation(userOperation),\n    };\n}\n//# sourceMappingURL=getUserOperation.js.map","import { formatLog } from '../../../utils/formatters/log.js';\nimport { formatTransactionReceipt } from '../../../utils/formatters/transactionReceipt.js';\nexport function formatUserOperationReceipt(parameters) {\n    const receipt = { ...parameters };\n    if (parameters.actualGasCost)\n        receipt.actualGasCost = BigInt(parameters.actualGasCost);\n    if (parameters.actualGasUsed)\n        receipt.actualGasUsed = BigInt(parameters.actualGasUsed);\n    if (parameters.logs)\n        receipt.logs = parameters.logs.map((log) => formatLog(log));\n    if (parameters.receipt)\n        receipt.receipt = formatTransactionReceipt(receipt.receipt);\n    return receipt;\n}\n//# sourceMappingURL=userOperationReceipt.js.map","import { UserOperationReceiptNotFoundError, } from '../../errors/userOperation.js';\nimport { formatUserOperationReceipt } from '../../utils/formatters/userOperationReceipt.js';\n/**\n * Returns the User Operation Receipt given a User Operation hash.\n *\n * - Docs: https://viem.sh/docs/actions/bundler/getUserOperationReceipt\n *\n * @param client - Client to use\n * @param parameters - {@link GetUserOperationReceiptParameters}\n * @returns The receipt. {@link GetUserOperationReceiptReturnType}\n *\n * @example\n * import { createBundlerClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { getUserOperationReceipt } from 'viem/actions\n *\n * const client = createBundlerClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n *\n * const receipt = await getUserOperationReceipt(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport async function getUserOperationReceipt(client, { hash }) {\n    const receipt = await client.request({\n        method: 'eth_getUserOperationReceipt',\n        params: [hash],\n    }, { dedupe: true });\n    if (!receipt)\n        throw new UserOperationReceiptNotFoundError({ hash });\n    return formatUserOperationReceipt(receipt);\n}\n//# sourceMappingURL=getUserOperationReceipt.js.map","import { parseAccount } from '../../../accounts/utils/parseAccount.js';\nimport { AccountNotFoundError } from '../../../errors/account.js';\nimport { getAction } from '../../../utils/getAction.js';\nimport { getUserOperationError } from '../../utils/errors/getUserOperationError.js';\nimport { formatUserOperationRequest, } from '../../utils/formatters/userOperationRequest.js';\nimport { prepareUserOperation, } from './prepareUserOperation.js';\n/**\n * Broadcasts a User Operation to the Bundler.\n *\n * - Docs: https://viem.sh/actions/bundler/sendUserOperation\n *\n * @param client - Client to use\n * @param parameters - {@link SendUserOperationParameters}\n * @returns The User Operation hash. {@link SendUserOperationReturnType}\n *\n * @example\n * import { createBundlerClient, http, parseEther } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { toSmartAccount } from 'viem/accounts'\n * import { sendUserOperation } from 'viem/actions'\n *\n * const account = await toSmartAccount({ ... })\n *\n * const bundlerClient = createBundlerClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n *\n * const values = await sendUserOperation(bundlerClient, {\n *   account,\n *   calls: [{ to: '0x...', value: parseEther('1') }],\n * })\n */\nexport async function sendUserOperation(client, parameters) {\n    const { account: account_ = client.account, entryPointAddress } = parameters;\n    if (!account_ && !parameters.sender)\n        throw new AccountNotFoundError();\n    const account = account_ ? parseAccount(account_) : undefined;\n    const request = account\n        ? await getAction(client, prepareUserOperation, 'prepareUserOperation')(parameters)\n        : parameters;\n    const signature = (parameters.signature ||\n        (await account?.signUserOperation?.(request)));\n    const rpcParameters = formatUserOperationRequest({\n        ...request,\n        signature,\n    });\n    try {\n        return await client.request({\n            method: 'eth_sendUserOperation',\n            params: [\n                rpcParameters,\n                (entryPointAddress ?? account?.entryPoint?.address),\n            ],\n        }, { retryCount: 0 });\n    }\n    catch (error) {\n        const calls = parameters.calls;\n        throw getUserOperationError(error, {\n            ...request,\n            ...(calls ? { calls } : {}),\n            signature,\n        });\n    }\n}\n//# sourceMappingURL=sendUserOperation.js.map","import { getAction } from '../../../utils/getAction.js';\nimport { observe } from '../../../utils/observe.js';\nimport { poll } from '../../../utils/poll.js';\nimport { stringify } from '../../../utils/stringify.js';\nimport { WaitForUserOperationReceiptTimeoutError, } from '../../errors/userOperation.js';\nimport { getUserOperationReceipt, } from './getUserOperationReceipt.js';\n/**\n * Waits for the User Operation to be included on a [Block](https://viem.sh/docs/glossary/terms#block) (one confirmation), and then returns the User Operation receipt.\n *\n * - Docs: https://viem.sh/docs/actions/bundler/waitForUserOperationReceipt\n *\n * @param client - Client to use\n * @param parameters - {@link WaitForUserOperationReceiptParameters}\n * @returns The receipt. {@link WaitForUserOperationReceiptReturnType}\n *\n * @example\n * import { createBundlerClient, http } from 'viem'\n * import { mainnet } from 'viem/chains'\n * import { waitForUserOperationReceipt } from 'viem/actions'\n *\n * const client = createBundlerClient({\n *   chain: mainnet,\n *   transport: http(),\n * })\n *\n * const receipt = await waitForUserOperationReceipt(client, {\n *   hash: '0x4ca7ee652d57678f26e887c149ab0735f41de37bcad58c9f6d3ed5824f15b74d',\n * })\n */\nexport function waitForUserOperationReceipt(client, parameters) {\n    const { hash, pollingInterval = client.pollingInterval, retryCount, timeout = 120_000, } = parameters;\n    let count = 0;\n    const observerId = stringify([\n        'waitForUserOperationReceipt',\n        client.uid,\n        hash,\n    ]);\n    return new Promise((resolve, reject) => {\n        const unobserve = observe(observerId, { resolve, reject }, (emit) => {\n            const done = (fn) => {\n                unpoll();\n                fn();\n                unobserve();\n            };\n            const unpoll = poll(async () => {\n                if (retryCount && count >= retryCount)\n                    done(() => emit.reject(new WaitForUserOperationReceiptTimeoutError({ hash })));\n                try {\n                    const receipt = await getAction(client, getUserOperationReceipt, 'getUserOperationReceipt')({ hash });\n                    done(() => emit.resolve(receipt));\n                }\n                catch (err) {\n                    const error = err;\n                    if (error.name !== 'UserOperationReceiptNotFoundError')\n                        done(() => emit.reject(error));\n                }\n                count++;\n            }, {\n                emitOnBegin: true,\n                interval: pollingInterval,\n            });\n            if (timeout)\n                setTimeout(() => done(() => emit.reject(new WaitForUserOperationReceiptTimeoutError({ hash }))), timeout);\n            return unpoll;\n        });\n    });\n}\n//# sourceMappingURL=waitForUserOperationReceipt.js.map","import { getChainId, } from '../../../actions/public/getChainId.js';\nimport { estimateUserOperationGas, } from '../../actions/bundler/estimateUserOperationGas.js';\nimport { getSupportedEntryPoints, } from '../../actions/bundler/getSupportedEntryPoints.js';\nimport { getUserOperation, } from '../../actions/bundler/getUserOperation.js';\nimport { getUserOperationReceipt, } from '../../actions/bundler/getUserOperationReceipt.js';\nimport { prepareUserOperation, } from '../../actions/bundler/prepareUserOperation.js';\nimport { sendUserOperation, } from '../../actions/bundler/sendUserOperation.js';\nimport { waitForUserOperationReceipt, } from '../../actions/bundler/waitForUserOperationReceipt.js';\nexport function bundlerActions(client) {\n    return {\n        estimateUserOperationGas: (parameters) => estimateUserOperationGas(client, parameters),\n        getChainId: () => getChainId(client),\n        getSupportedEntryPoints: () => getSupportedEntryPoints(client),\n        getUserOperation: (parameters) => getUserOperation(client, parameters),\n        getUserOperationReceipt: (parameters) => getUserOperationReceipt(client, parameters),\n        prepareUserOperation: (parameters) => prepareUserOperation(client, parameters),\n        sendUserOperation: (parameters) => sendUserOperation(client, parameters),\n        waitForUserOperationReceipt: (parameters) => waitForUserOperationReceipt(client, parameters),\n    };\n}\n//# sourceMappingURL=bundler.js.map","import { createClient, } from '../../clients/createClient.js';\nimport { bundlerActions } from './decorators/bundler.js';\nexport function createBundlerClient(parameters) {\n    const { client: client_, key = 'bundler', name = 'Bundler Client', paymaster, paymasterContext, transport, userOperation, } = parameters;\n    const client = Object.assign(createClient({\n        ...parameters,\n        chain: parameters.chain ?? client_?.chain,\n        key,\n        name,\n        transport,\n        type: 'bundlerClient',\n    }), { client: client_, paymaster, paymasterContext, userOperation });\n    return client.extend(bundlerActions);\n}\n//# sourceMappingURL=createBundlerClient.js.map","export const entryPoint06Address = '0x5FF137D4b0FDCD49DcA30c7CF57E578a026d2789';\nexport const entryPoint07Address = '0x0000000071727De22E5E9d8BAf0edAc6f37da032';\nexport const entryPoint08Address = '0x4337084D9E255Ff0702461CF8895CE9E3b5Ff108';\n//# sourceMappingURL=address.js.map","/** @internal */\nexport const version = '0.1.1';\n//# sourceMappingURL=version.js.map","import { version } from '../version.js';\n/** @internal */\nexport function getUrl(url) {\n    return url;\n}\n/** @internal */\nexport function getVersion() {\n    return version;\n}\n/** @internal */\nexport function prettyPrint(args) {\n    if (!args)\n        return '';\n    const entries = Object.entries(args)\n        .map(([key, value]) => {\n        if (value === undefined || value === false)\n            return null;\n        return [key, value];\n    })\n        .filter(Boolean);\n    const maxLength = entries.reduce((acc, [key]) => Math.max(acc, key.length), 0);\n    return entries\n        .map(([key, value]) => `  ${`${key}:`.padEnd(maxLength + 1)}  ${value}`)\n        .join('\\n');\n}\n//# sourceMappingURL=errors.js.map","import { getVersion } from './internal/errors.js';\n/**\n * Base error class inherited by all errors thrown by ox.\n *\n * @example\n * ```ts\n * import { Errors } from 'ox'\n * throw new Errors.BaseError('An error occurred')\n * ```\n */\nexport class BaseError extends Error {\n    constructor(shortMessage, options = {}) {\n        const details = (() => {\n            if (options.cause instanceof BaseError) {\n                if (options.cause.details)\n                    return options.cause.details;\n                if (options.cause.shortMessage)\n                    return options.cause.shortMessage;\n            }\n            if (options.cause?.message)\n                return options.cause.message;\n            return options.details;\n        })();\n        const docsPath = (() => {\n            if (options.cause instanceof BaseError)\n                return options.cause.docsPath || options.docsPath;\n            return options.docsPath;\n        })();\n        const docsBaseUrl = 'https://oxlib.sh';\n        const docs = `${docsBaseUrl}${docsPath ?? ''}`;\n        const message = [\n            shortMessage || 'An error occurred.',\n            ...(options.metaMessages ? ['', ...options.metaMessages] : []),\n            ...(details || docsPath\n                ? [\n                    '',\n                    details ? `Details: ${details}` : undefined,\n                    docsPath ? `See: ${docs}` : undefined,\n                ]\n                : []),\n        ]\n            .filter((x) => typeof x === 'string')\n            .join('\\n');\n        super(message, options.cause ? { cause: options.cause } : undefined);\n        Object.defineProperty(this, \"details\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"docs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"docsPath\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"shortMessage\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"cause\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'BaseError'\n        });\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: `ox@${getVersion()}`\n        });\n        this.cause = options.cause;\n        this.details = details;\n        this.docs = docs;\n        this.docsPath = docsPath;\n        this.shortMessage = shortMessage;\n    }\n    walk(fn) {\n        return walk(this, fn);\n    }\n}\n/** @internal */\nfunction walk(err, fn) {\n    if (fn?.(err))\n        return err;\n    if (err && typeof err === 'object' && 'cause' in err && err.cause)\n        return walk(err.cause, fn);\n    return fn ? null : err;\n}\n//# sourceMappingURL=Errors.js.map","const bigIntSuffix = '#__bigint';\n/**\n * Parses a JSON string, with support for `bigint`.\n *\n * @example\n * ```ts twoslash\n * import { Json } from 'ox'\n *\n * const json = Json.parse('{\"foo\":\"bar\",\"baz\":\"69420694206942069420694206942069420694206942069420#__bigint\"}')\n * // @log: {\n * // @log:   foo: 'bar',\n * // @log:   baz: 69420694206942069420694206942069420694206942069420n\n * // @log: }\n * ```\n *\n * @param string - The value to parse.\n * @param reviver - A function that transforms the results.\n * @returns The parsed value.\n */\nexport function parse(string, reviver) {\n    return JSON.parse(string, (key, value_) => {\n        const value = value_;\n        if (typeof value === 'string' && value.endsWith(bigIntSuffix))\n            return BigInt(value.slice(0, -bigIntSuffix.length));\n        return typeof reviver === 'function' ? reviver(key, value) : value;\n    });\n}\n/**\n * Stringifies a value to its JSON representation, with support for `bigint`.\n *\n * @example\n * ```ts twoslash\n * import { Json } from 'ox'\n *\n * const json = Json.stringify({\n *   foo: 'bar',\n *   baz: 69420694206942069420694206942069420694206942069420n,\n * })\n * // @log: '{\"foo\":\"bar\",\"baz\":\"69420694206942069420694206942069420694206942069420#__bigint\"}'\n * ```\n *\n * @param value - The value to stringify.\n * @param replacer - A function that transforms the results. It is passed the key and value of the property, and must return the value to be used in the JSON string. If this function returns `undefined`, the property is not included in the resulting JSON string.\n * @param space - A string or number that determines the indentation of the JSON string. If it is a number, it indicates the number of spaces to use as indentation; if it is a string (e.g. `'\\t'`), it uses the string as the indentation character.\n * @returns The JSON string.\n */\nexport function stringify(value, replacer, space) {\n    return JSON.stringify(value, (key, value) => {\n        if (typeof replacer === 'function')\n            return replacer(key, value);\n        if (typeof value === 'bigint')\n            return value.toString() + bigIntSuffix;\n        return value;\n    }, space);\n}\n//# sourceMappingURL=Json.js.map","import * as Bytes from '../Bytes.js';\n/** @internal */\nexport function assertSize(bytes, size_) {\n    if (Bytes.size(bytes) > size_)\n        throw new Bytes.SizeOverflowError({\n            givenSize: Bytes.size(bytes),\n            maxSize: size_,\n        });\n}\n/** @internal */\nexport function assertStartOffset(value, start) {\n    if (typeof start === 'number' && start > 0 && start > Bytes.size(value) - 1)\n        throw new Bytes.SliceOffsetOutOfBoundsError({\n            offset: start,\n            position: 'start',\n            size: Bytes.size(value),\n        });\n}\n/** @internal */\nexport function assertEndOffset(value, start, end) {\n    if (typeof start === 'number' &&\n        typeof end === 'number' &&\n        Bytes.size(value) !== end - start) {\n        throw new Bytes.SliceOffsetOutOfBoundsError({\n            offset: end,\n            position: 'end',\n            size: Bytes.size(value),\n        });\n    }\n}\n/** @internal */\nexport const charCodeMap = {\n    zero: 48,\n    nine: 57,\n    A: 65,\n    F: 70,\n    a: 97,\n    f: 102,\n};\n/** @internal */\nexport function charCodeToBase16(char) {\n    if (char >= charCodeMap.zero && char <= charCodeMap.nine)\n        return char - charCodeMap.zero;\n    if (char >= charCodeMap.A && char <= charCodeMap.F)\n        return char - (charCodeMap.A - 10);\n    if (char >= charCodeMap.a && char <= charCodeMap.f)\n        return char - (charCodeMap.a - 10);\n    return undefined;\n}\n/** @internal */\nexport function pad(bytes, options = {}) {\n    const { dir, size = 32 } = options;\n    if (size === 0)\n        return bytes;\n    if (bytes.length > size)\n        throw new Bytes.SizeExceedsPaddingSizeError({\n            size: bytes.length,\n            targetSize: size,\n            type: 'Bytes',\n        });\n    const paddedBytes = new Uint8Array(size);\n    for (let i = 0; i < size; i++) {\n        const padEnd = dir === 'right';\n        paddedBytes[padEnd ? i : size - i - 1] =\n            bytes[padEnd ? i : bytes.length - i - 1];\n    }\n    return paddedBytes;\n}\n/** @internal */\nexport function trim(value, options = {}) {\n    const { dir = 'left' } = options;\n    let data = value;\n    let sliceLength = 0;\n    for (let i = 0; i < data.length - 1; i++) {\n        if (data[dir === 'left' ? i : data.length - i - 1].toString() === '0')\n            sliceLength++;\n        else\n            break;\n    }\n    data =\n        dir === 'left'\n            ? data.slice(sliceLength)\n            : data.slice(0, data.length - sliceLength);\n    return data;\n}\n//# sourceMappingURL=bytes.js.map","import * as Hex from '../Hex.js';\n/** @internal */\nexport function assertSize(hex, size_) {\n    if (Hex.size(hex) > size_)\n        throw new Hex.SizeOverflowError({\n            givenSize: Hex.size(hex),\n            maxSize: size_,\n        });\n}\n/** @internal */\nexport function assertStartOffset(value, start) {\n    if (typeof start === 'number' && start > 0 && start > Hex.size(value) - 1)\n        throw new Hex.SliceOffsetOutOfBoundsError({\n            offset: start,\n            position: 'start',\n            size: Hex.size(value),\n        });\n}\n/** @internal */\nexport function assertEndOffset(value, start, end) {\n    if (typeof start === 'number' &&\n        typeof end === 'number' &&\n        Hex.size(value) !== end - start) {\n        throw new Hex.SliceOffsetOutOfBoundsError({\n            offset: end,\n            position: 'end',\n            size: Hex.size(value),\n        });\n    }\n}\n/** @internal */\nexport function pad(hex_, options = {}) {\n    const { dir, size = 32 } = options;\n    if (size === 0)\n        return hex_;\n    const hex = hex_.replace('0x', '');\n    if (hex.length > size * 2)\n        throw new Hex.SizeExceedsPaddingSizeError({\n            size: Math.ceil(hex.length / 2),\n            targetSize: size,\n            type: 'Hex',\n        });\n    return `0x${hex[dir === 'right' ? 'padEnd' : 'padStart'](size * 2, '0')}`;\n}\n/** @internal */\nexport function trim(value, options = {}) {\n    const { dir = 'left' } = options;\n    let data = value.replace('0x', '');\n    let sliceLength = 0;\n    for (let i = 0; i < data.length - 1; i++) {\n        if (data[dir === 'left' ? i : data.length - i - 1].toString() === '0')\n            sliceLength++;\n        else\n            break;\n    }\n    data =\n        dir === 'left'\n            ? data.slice(sliceLength)\n            : data.slice(0, data.length - sliceLength);\n    if (data === '0')\n        return '0x';\n    if (dir === 'right' && data.length % 2 === 1)\n        return `0x${data}0`;\n    return `0x${data}`;\n}\n//# sourceMappingURL=hex.js.map","import { equalBytes } from '@noble/curves/abstract/utils';\nimport * as Bytes from './Bytes.js';\nimport * as Errors from './Errors.js';\nimport * as Json from './Json.js';\nimport * as internal_bytes from './internal/bytes.js';\nimport * as internal from './internal/hex.js';\nconst encoder = /*#__PURE__*/ new TextEncoder();\nconst hexes = /*#__PURE__*/ Array.from({ length: 256 }, (_v, i) => i.toString(16).padStart(2, '0'));\n/**\n * Asserts if the given value is {@link ox#Hex.Hex}.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.assert('abc')\n * // @error: InvalidHexValueTypeError:\n * // @error: Value `\"abc\"` of type `string` is an invalid hex type.\n * // @error: Hex types must be represented as `\"0x\\${string}\"`.\n * ```\n *\n * @param value - The value to assert.\n * @param options - Options.\n */\nexport function assert(value, options = {}) {\n    const { strict = false } = options;\n    if (!value)\n        throw new InvalidHexTypeError(value);\n    if (typeof value !== 'string')\n        throw new InvalidHexTypeError(value);\n    if (strict) {\n        if (!/^0x[0-9a-fA-F]*$/.test(value))\n            throw new InvalidHexValueError(value);\n    }\n    if (!value.startsWith('0x'))\n        throw new InvalidHexValueError(value);\n}\n/**\n * Concatenates two or more {@link ox#Hex.Hex}.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.concat('0x123', '0x456')\n * // @log: '0x123456'\n * ```\n *\n * @param values - The {@link ox#Hex.Hex} values to concatenate.\n * @returns The concatenated {@link ox#Hex.Hex} value.\n */\nexport function concat(...values) {\n    return `0x${values.reduce((acc, x) => acc + x.replace('0x', ''), '')}`;\n}\n/**\n * Instantiates a {@link ox#Hex.Hex} value from a hex string or {@link ox#Bytes.Bytes} value.\n *\n * :::tip\n *\n * To instantiate from a **Boolean**, **String**, or **Number**, use one of the following:\n *\n * - `Hex.fromBoolean`\n *\n * - `Hex.fromString`\n *\n * - `Hex.fromNumber`\n *\n * :::\n *\n * @example\n * ```ts twoslash\n * import { Bytes, Hex } from 'ox'\n *\n * Hex.from('0x48656c6c6f20576f726c6421')\n * // @log: '0x48656c6c6f20576f726c6421'\n *\n * Hex.from(Bytes.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]))\n * // @log: '0x48656c6c6f20576f726c6421'\n * ```\n *\n * @param value - The {@link ox#Bytes.Bytes} value to encode.\n * @returns The encoded {@link ox#Hex.Hex} value.\n */\nexport function from(value) {\n    if (value instanceof Uint8Array)\n        return fromBytes(value);\n    if (Array.isArray(value))\n        return fromBytes(new Uint8Array(value));\n    return value;\n}\n/**\n * Encodes a boolean into a {@link ox#Hex.Hex} value.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.fromBoolean(true)\n * // @log: '0x1'\n *\n * Hex.fromBoolean(false)\n * // @log: '0x0'\n *\n * Hex.fromBoolean(true, { size: 32 })\n * // @log: '0x0000000000000000000000000000000000000000000000000000000000000001'\n * ```\n *\n * @param value - The boolean value to encode.\n * @param options - Options.\n * @returns The encoded {@link ox#Hex.Hex} value.\n */\nexport function fromBoolean(value, options = {}) {\n    const hex = `0x${Number(value)}`;\n    if (typeof options.size === 'number') {\n        internal.assertSize(hex, options.size);\n        return padLeft(hex, options.size);\n    }\n    return hex;\n}\n/**\n * Encodes a {@link ox#Bytes.Bytes} value into a {@link ox#Hex.Hex} value.\n *\n * @example\n * ```ts twoslash\n * import { Bytes, Hex } from 'ox'\n *\n * Hex.fromBytes(Bytes.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]))\n * // @log: '0x48656c6c6f20576f726c6421'\n * ```\n *\n * @param value - The {@link ox#Bytes.Bytes} value to encode.\n * @param options - Options.\n * @returns The encoded {@link ox#Hex.Hex} value.\n */\nexport function fromBytes(value, options = {}) {\n    let string = '';\n    for (let i = 0; i < value.length; i++)\n        string += hexes[value[i]];\n    const hex = `0x${string}`;\n    if (typeof options.size === 'number') {\n        internal.assertSize(hex, options.size);\n        return padRight(hex, options.size);\n    }\n    return hex;\n}\n/**\n * Encodes a number or bigint into a {@link ox#Hex.Hex} value.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.fromNumber(420)\n * // @log: '0x1a4'\n *\n * Hex.fromNumber(420, { size: 32 })\n * // @log: '0x00000000000000000000000000000000000000000000000000000000000001a4'\n * ```\n *\n * @param value - The number or bigint value to encode.\n * @param options - Options.\n * @returns The encoded {@link ox#Hex.Hex} value.\n */\nexport function fromNumber(value, options = {}) {\n    const { signed, size } = options;\n    const value_ = BigInt(value);\n    let maxValue;\n    if (size) {\n        if (signed)\n            maxValue = (1n << (BigInt(size) * 8n - 1n)) - 1n;\n        else\n            maxValue = 2n ** (BigInt(size) * 8n) - 1n;\n    }\n    else if (typeof value === 'number') {\n        maxValue = BigInt(Number.MAX_SAFE_INTEGER);\n    }\n    const minValue = typeof maxValue === 'bigint' && signed ? -maxValue - 1n : 0;\n    if ((maxValue && value_ > maxValue) || value_ < minValue) {\n        const suffix = typeof value === 'bigint' ? 'n' : '';\n        throw new IntegerOutOfRangeError({\n            max: maxValue ? `${maxValue}${suffix}` : undefined,\n            min: `${minValue}${suffix}`,\n            signed,\n            size,\n            value: `${value}${suffix}`,\n        });\n    }\n    const stringValue = (signed && value_ < 0 ? (1n << BigInt(size * 8)) + BigInt(value_) : value_).toString(16);\n    const hex = `0x${stringValue}`;\n    if (size)\n        return padLeft(hex, size);\n    return hex;\n}\n/**\n * Encodes a string into a {@link ox#Hex.Hex} value.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n * Hex.fromString('Hello World!')\n * // '0x48656c6c6f20576f726c6421'\n *\n * Hex.fromString('Hello World!', { size: 32 })\n * // '0x48656c6c6f20576f726c64210000000000000000000000000000000000000000'\n * ```\n *\n * @param value - The string value to encode.\n * @param options - Options.\n * @returns The encoded {@link ox#Hex.Hex} value.\n */\nexport function fromString(value, options = {}) {\n    return fromBytes(encoder.encode(value), options);\n}\n/**\n * Checks if two {@link ox#Hex.Hex} values are equal.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.isEqual('0xdeadbeef', '0xdeadbeef')\n * // @log: true\n *\n * Hex.isEqual('0xda', '0xba')\n * // @log: false\n * ```\n *\n * @param hexA - The first {@link ox#Hex.Hex} value.\n * @param hexB - The second {@link ox#Hex.Hex} value.\n * @returns `true` if the two {@link ox#Hex.Hex} values are equal, `false` otherwise.\n */\nexport function isEqual(hexA, hexB) {\n    return equalBytes(Bytes.fromHex(hexA), Bytes.fromHex(hexB));\n}\n/**\n * Pads a {@link ox#Hex.Hex} value to the left with zero bytes until it reaches the given `size` (default: 32 bytes).\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.padLeft('0x1234', 4)\n * // @log: '0x00001234'\n * ```\n *\n * @param value - The {@link ox#Hex.Hex} value to pad.\n * @param size - The size (in bytes) of the output hex value.\n * @returns The padded {@link ox#Hex.Hex} value.\n */\nexport function padLeft(value, size) {\n    return internal.pad(value, { dir: 'left', size });\n}\n/**\n * Pads a {@link ox#Hex.Hex} value to the right with zero bytes until it reaches the given `size` (default: 32 bytes).\n *\n * @example\n * ```ts\n * import { Hex } from 'ox'\n *\n * Hex.padRight('0x1234', 4)\n * // @log: '0x12340000'\n * ```\n *\n * @param value - The {@link ox#Hex.Hex} value to pad.\n * @param size - The size (in bytes) of the output hex value.\n * @returns The padded {@link ox#Hex.Hex} value.\n */\nexport function padRight(value, size) {\n    return internal.pad(value, { dir: 'right', size });\n}\n/**\n * Generates a random {@link ox#Hex.Hex} value of the specified length.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * const hex = Hex.random(32)\n * // @log: '0x...'\n * ```\n *\n * @returns Random {@link ox#Hex.Hex} value.\n */\nexport function random(length) {\n    return fromBytes(Bytes.random(length));\n}\n/**\n * Returns a section of a {@link ox#Bytes.Bytes} value given a start/end bytes offset.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.slice('0x0123456789', 1, 4)\n * // @log: '0x234567'\n * ```\n *\n * @param value - The {@link ox#Hex.Hex} value to slice.\n * @param start - The start offset (in bytes).\n * @param end - The end offset (in bytes).\n * @param options - Options.\n * @returns The sliced {@link ox#Hex.Hex} value.\n */\nexport function slice(value, start, end, options = {}) {\n    const { strict } = options;\n    internal.assertStartOffset(value, start);\n    const value_ = `0x${value\n        .replace('0x', '')\n        .slice((start ?? 0) * 2, (end ?? value.length) * 2)}`;\n    if (strict)\n        internal.assertEndOffset(value_, start, end);\n    return value_;\n}\n/**\n * Retrieves the size of a {@link ox#Hex.Hex} value (in bytes).\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.size('0xdeadbeef')\n * // @log: 4\n * ```\n *\n * @param value - The {@link ox#Hex.Hex} value to get the size of.\n * @returns The size of the {@link ox#Hex.Hex} value (in bytes).\n */\nexport function size(value) {\n    return Math.ceil((value.length - 2) / 2);\n}\n/**\n * Trims leading zeros from a {@link ox#Hex.Hex} value.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.trimLeft('0x00000000deadbeef')\n * // @log: '0xdeadbeef'\n * ```\n *\n * @param value - The {@link ox#Hex.Hex} value to trim.\n * @returns The trimmed {@link ox#Hex.Hex} value.\n */\nexport function trimLeft(value) {\n    return internal.trim(value, { dir: 'left' });\n}\n/**\n * Trims trailing zeros from a {@link ox#Hex.Hex} value.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.trimRight('0xdeadbeef00000000')\n * // @log: '0xdeadbeef'\n * ```\n *\n * @param value - The {@link ox#Hex.Hex} value to trim.\n * @returns The trimmed {@link ox#Hex.Hex} value.\n */\nexport function trimRight(value) {\n    return internal.trim(value, { dir: 'right' });\n}\n/**\n * Decodes a {@link ox#Hex.Hex} value into a BigInt.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.toBigInt('0x1a4')\n * // @log: 420n\n *\n * Hex.toBigInt('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })\n * // @log: 420n\n * ```\n *\n * @param hex - The {@link ox#Hex.Hex} value to decode.\n * @param options - Options.\n * @returns The decoded BigInt.\n */\nexport function toBigInt(hex, options = {}) {\n    const { signed } = options;\n    if (options.size)\n        internal.assertSize(hex, options.size);\n    const value = BigInt(hex);\n    if (!signed)\n        return value;\n    const size = (hex.length - 2) / 2;\n    const max_unsigned = (1n << (BigInt(size) * 8n)) - 1n;\n    const max_signed = max_unsigned >> 1n;\n    if (value <= max_signed)\n        return value;\n    return value - max_unsigned - 1n;\n}\n/**\n * Decodes a {@link ox#Hex.Hex} value into a boolean.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.toBoolean('0x01')\n * // @log: true\n *\n * Hex.toBoolean('0x0000000000000000000000000000000000000000000000000000000000000001', { size: 32 })\n * // @log: true\n * ```\n *\n * @param hex - The {@link ox#Hex.Hex} value to decode.\n * @param options - Options.\n * @returns The decoded boolean.\n */\nexport function toBoolean(hex, options = {}) {\n    if (options.size)\n        internal.assertSize(hex, options.size);\n    const hex_ = trimLeft(hex);\n    if (hex_ === '0x')\n        return false;\n    if (hex_ === '0x1')\n        return true;\n    throw new InvalidHexBooleanError(hex);\n}\n/**\n * Decodes a {@link ox#Hex.Hex} value into a {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * const data = Hex.toBytes('0x48656c6c6f20776f726c6421')\n * // @log: Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n * ```\n *\n * @param hex - The {@link ox#Hex.Hex} value to decode.\n * @param options - Options.\n * @returns The decoded {@link ox#Bytes.Bytes}.\n */\nexport function toBytes(hex, options = {}) {\n    return Bytes.fromHex(hex, options);\n}\n/**\n * Decodes a {@link ox#Hex.Hex} value into a number.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.toNumber('0x1a4')\n * // @log: 420\n *\n * Hex.toNumber('0x00000000000000000000000000000000000000000000000000000000000001a4', { size: 32 })\n * // @log: 420\n * ```\n *\n * @param hex - The {@link ox#Hex.Hex} value to decode.\n * @param options - Options.\n * @returns The decoded number.\n */\nexport function toNumber(hex, options = {}) {\n    const { signed, size } = options;\n    if (!signed && !size)\n        return Number(hex);\n    return Number(toBigInt(hex, options));\n}\n/**\n * Decodes a {@link ox#Hex.Hex} value into a string.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.toString('0x48656c6c6f20576f726c6421')\n * // @log: 'Hello world!'\n *\n * Hex.toString('0x48656c6c6f20576f726c64210000000000000000000000000000000000000000', {\n *  size: 32,\n * })\n * // @log: 'Hello world'\n * ```\n *\n * @param hex - The {@link ox#Hex.Hex} value to decode.\n * @param options - Options.\n * @returns The decoded string.\n */\nexport function toString(hex, options = {}) {\n    const { size } = options;\n    let bytes = Bytes.fromHex(hex);\n    if (size) {\n        internal_bytes.assertSize(bytes, size);\n        bytes = Bytes.trimRight(bytes);\n    }\n    return new TextDecoder().decode(bytes);\n}\n/**\n * Checks if the given value is {@link ox#Hex.Hex}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes, Hex } from 'ox'\n *\n * Hex.validate('0xdeadbeef')\n * // @log: true\n *\n * Hex.validate(Bytes.from([1, 2, 3]))\n * // @log: false\n * ```\n *\n * @param value - The value to check.\n * @param options - Options.\n * @returns `true` if the value is a {@link ox#Hex.Hex}, `false` otherwise.\n */\nexport function validate(value, options = {}) {\n    const { strict = false } = options;\n    try {\n        assert(value, { strict });\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\n/**\n * Thrown when the provided integer is out of range, and cannot be represented as a hex value.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.fromNumber(420182738912731283712937129)\n * // @error: Hex.IntegerOutOfRangeError: Number \\`4.2018273891273126e+26\\` is not in safe unsigned integer range (`0` to `9007199254740991`)\n * ```\n */\nexport class IntegerOutOfRangeError extends Errors.BaseError {\n    constructor({ max, min, signed, size, value, }) {\n        super(`Number \\`${value}\\` is not in safe${size ? ` ${size * 8}-bit` : ''}${signed ? ' signed' : ' unsigned'} integer range ${max ? `(\\`${min}\\` to \\`${max}\\`)` : `(above \\`${min}\\`)`}`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Hex.IntegerOutOfRangeError'\n        });\n    }\n}\n/**\n * Thrown when the provided hex value cannot be represented as a boolean.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.toBoolean('0xa')\n * // @error: Hex.InvalidHexBooleanError: Hex value `\"0xa\"` is not a valid boolean.\n * // @error: The hex value must be `\"0x0\"` (false) or `\"0x1\"` (true).\n * ```\n */\nexport class InvalidHexBooleanError extends Errors.BaseError {\n    constructor(hex) {\n        super(`Hex value \\`\"${hex}\"\\` is not a valid boolean.`, {\n            metaMessages: [\n                'The hex value must be `\"0x0\"` (false) or `\"0x1\"` (true).',\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Hex.InvalidHexBooleanError'\n        });\n    }\n}\n/**\n * Thrown when the provided value is not a valid hex type.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.assert(1)\n * // @error: Hex.InvalidHexTypeError: Value `1` of type `number` is an invalid hex type.\n * ```\n */\nexport class InvalidHexTypeError extends Errors.BaseError {\n    constructor(value) {\n        super(`Value \\`${typeof value === 'object' ? Json.stringify(value) : value}\\` of type \\`${typeof value}\\` is an invalid hex type.`, {\n            metaMessages: ['Hex types must be represented as `\"0x${string}\"`.'],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Hex.InvalidHexTypeError'\n        });\n    }\n}\n/**\n * Thrown when the provided hex value is invalid.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.assert('0x0123456789abcdefg')\n * // @error: Hex.InvalidHexValueError: Value `0x0123456789abcdefg` is an invalid hex value.\n * // @error: Hex values must start with `\"0x\"` and contain only hexadecimal characters (0-9, a-f, A-F).\n * ```\n */\nexport class InvalidHexValueError extends Errors.BaseError {\n    constructor(value) {\n        super(`Value \\`${value}\\` is an invalid hex value.`, {\n            metaMessages: [\n                'Hex values must start with `\"0x\"` and contain only hexadecimal characters (0-9, a-f, A-F).',\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Hex.InvalidHexValueError'\n        });\n    }\n}\n/**\n * Thrown when the provided hex value is an odd length.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.fromHex('0xabcde')\n * // @error: Hex.InvalidLengthError: Hex value `\"0xabcde\"` is an odd length (5 nibbles).\n * ```\n */\nexport class InvalidLengthError extends Errors.BaseError {\n    constructor(value) {\n        super(`Hex value \\`\"${value}\"\\` is an odd length (${value.length - 2} nibbles).`, {\n            metaMessages: ['It must be an even length.'],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Hex.InvalidLengthError'\n        });\n    }\n}\n/**\n * Thrown when the size of the value exceeds the expected max size.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.fromString('Hello World!', { size: 8 })\n * // @error: Hex.SizeOverflowError: Size cannot exceed `8` bytes. Given size: `12` bytes.\n * ```\n */\nexport class SizeOverflowError extends Errors.BaseError {\n    constructor({ givenSize, maxSize }) {\n        super(`Size cannot exceed \\`${maxSize}\\` bytes. Given size: \\`${givenSize}\\` bytes.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Hex.SizeOverflowError'\n        });\n    }\n}\n/**\n * Thrown when the slice offset exceeds the bounds of the value.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.slice('0x0123456789', 6)\n * // @error: Hex.SliceOffsetOutOfBoundsError: Slice starting at offset `6` is out-of-bounds (size: `5`).\n * ```\n */\nexport class SliceOffsetOutOfBoundsError extends Errors.BaseError {\n    constructor({ offset, position, size, }) {\n        super(`Slice ${position === 'start' ? 'starting' : 'ending'} at offset \\`${offset}\\` is out-of-bounds (size: \\`${size}\\`).`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Hex.SliceOffsetOutOfBoundsError'\n        });\n    }\n}\n/**\n * Thrown when the size of the value exceeds the pad size.\n *\n * @example\n * ```ts twoslash\n * import { Hex } from 'ox'\n *\n * Hex.padLeft('0x1a4e12a45a21323123aaa87a897a897a898a6567a578a867a98778a667a85a875a87a6a787a65a675a6a9', 32)\n * // @error: Hex.SizeExceedsPaddingSizeError: Hex size (`43`) exceeds padding size (`32`).\n * ```\n */\nexport class SizeExceedsPaddingSizeError extends Errors.BaseError {\n    constructor({ size, targetSize, type, }) {\n        super(`${type.charAt(0).toUpperCase()}${type\n            .slice(1)\n            .toLowerCase()} size (\\`${size}\\`) exceeds padding size (\\`${targetSize}\\`).`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Hex.SizeExceedsPaddingSizeError'\n        });\n    }\n}\n//# sourceMappingURL=Hex.js.map","import { equalBytes } from '@noble/curves/abstract/utils';\nimport * as Errors from './Errors.js';\nimport * as Hex from './Hex.js';\nimport * as Json from './Json.js';\nimport * as internal from './internal/bytes.js';\nimport * as internal_hex from './internal/hex.js';\nconst decoder = /*#__PURE__*/ new TextDecoder();\nconst encoder = /*#__PURE__*/ new TextEncoder();\n/**\n * Asserts if the given value is {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.assert('abc')\n * // @error: Bytes.InvalidBytesTypeError:\n * // @error: Value `\"abc\"` of type `string` is an invalid Bytes value.\n * // @error: Bytes values must be of type `Uint8Array`.\n * ```\n *\n * @param value - Value to assert.\n */\nexport function assert(value) {\n    if (value instanceof Uint8Array)\n        return;\n    if (!value)\n        throw new InvalidBytesTypeError(value);\n    if (typeof value !== 'object')\n        throw new InvalidBytesTypeError(value);\n    if (!('BYTES_PER_ELEMENT' in value))\n        throw new InvalidBytesTypeError(value);\n    if (value.BYTES_PER_ELEMENT !== 1 || value.constructor.name !== 'Uint8Array')\n        throw new InvalidBytesTypeError(value);\n}\n/**\n * Concatenates two or more {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const bytes = Bytes.concat(\n *   Bytes.from([1]),\n *   Bytes.from([69]),\n *   Bytes.from([420, 69]),\n * )\n * // @log: Uint8Array [ 1, 69, 420, 69 ]\n * ```\n *\n * @param values - Values to concatenate.\n * @returns Concatenated {@link ox#Bytes.Bytes}.\n */\nexport function concat(...values) {\n    let length = 0;\n    for (const arr of values) {\n        length += arr.length;\n    }\n    const result = new Uint8Array(length);\n    for (let i = 0, index = 0; i < values.length; i++) {\n        const arr = values[i];\n        result.set(arr, index);\n        index += arr.length;\n    }\n    return result;\n}\n/**\n * Instantiates a {@link ox#Bytes.Bytes} value from a `Uint8Array`, a hex string, or an array of unsigned 8-bit integers.\n *\n * :::tip\n *\n * To instantiate from a **Boolean**, **String**, or **Number**, use one of the following:\n *\n * - `Bytes.fromBoolean`\n *\n * - `Bytes.fromString`\n *\n * - `Bytes.fromNumber`\n *\n * :::\n *\n * @example\n * ```ts twoslash\n * // @noErrors\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.from([255, 124, 5, 4])\n * // @log: Uint8Array([255, 124, 5, 4])\n *\n * const data = Bytes.from('0xdeadbeef')\n * // @log: Uint8Array([222, 173, 190, 239])\n * ```\n *\n * @param value - Value to convert.\n * @returns A {@link ox#Bytes.Bytes} instance.\n */\nexport function from(value) {\n    if (value instanceof Uint8Array)\n        return value;\n    if (typeof value === 'string')\n        return fromHex(value);\n    return fromArray(value);\n}\n/**\n * Converts an array of unsigned 8-bit integers into {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromArray([255, 124, 5, 4])\n * // @log: Uint8Array([255, 124, 5, 4])\n * ```\n *\n * @param value - Value to convert.\n * @returns A {@link ox#Bytes.Bytes} instance.\n */\nexport function fromArray(value) {\n    return value instanceof Uint8Array ? value : new Uint8Array(value);\n}\n/**\n * Encodes a boolean value into {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromBoolean(true)\n * // @log: Uint8Array([1])\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromBoolean(true, { size: 32 })\n * // @log: Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1])\n * ```\n *\n * @param value - Boolean value to encode.\n * @param options - Encoding options.\n * @returns Encoded {@link ox#Bytes.Bytes}.\n */\nexport function fromBoolean(value, options = {}) {\n    const { size } = options;\n    const bytes = new Uint8Array(1);\n    bytes[0] = Number(value);\n    if (typeof size === 'number') {\n        internal.assertSize(bytes, size);\n        return padLeft(bytes, size);\n    }\n    return bytes;\n}\n/**\n * Encodes a {@link ox#Hex.Hex} value into {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromHex('0x48656c6c6f20776f726c6421')\n * // @log: Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33])\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromHex('0x48656c6c6f20776f726c6421', { size: 32 })\n * // @log: Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n * ```\n *\n * @param value - {@link ox#Hex.Hex} value to encode.\n * @param options - Encoding options.\n * @returns Encoded {@link ox#Bytes.Bytes}.\n */\nexport function fromHex(value, options = {}) {\n    const { size } = options;\n    let hex = value;\n    if (size) {\n        internal_hex.assertSize(value, size);\n        hex = Hex.padRight(value, size);\n    }\n    let hexString = hex.slice(2);\n    if (hexString.length % 2)\n        hexString = `0${hexString}`;\n    const length = hexString.length / 2;\n    const bytes = new Uint8Array(length);\n    for (let index = 0, j = 0; index < length; index++) {\n        const nibbleLeft = internal.charCodeToBase16(hexString.charCodeAt(j++));\n        const nibbleRight = internal.charCodeToBase16(hexString.charCodeAt(j++));\n        if (nibbleLeft === undefined || nibbleRight === undefined) {\n            throw new Errors.BaseError(`Invalid byte sequence (\"${hexString[j - 2]}${hexString[j - 1]}\" in \"${hexString}\").`);\n        }\n        bytes[index] = nibbleLeft * 16 + nibbleRight;\n    }\n    return bytes;\n}\n/**\n * Encodes a number value into {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromNumber(420)\n * // @log: Uint8Array([1, 164])\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromNumber(420, { size: 4 })\n * // @log: Uint8Array([0, 0, 1, 164])\n * ```\n *\n * @param value - Number value to encode.\n * @param options - Encoding options.\n * @returns Encoded {@link ox#Bytes.Bytes}.\n */\nexport function fromNumber(value, options) {\n    const hex = Hex.fromNumber(value, options);\n    return fromHex(hex);\n}\n/**\n * Encodes a string into {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromString('Hello world!')\n * // @log: Uint8Array([72, 101, 108, 108, 111, 32, 119, 111, 114, 108, 100, 33])\n * ```\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.fromString('Hello world!', { size: 32 })\n * // @log: Uint8Array([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])\n * ```\n *\n * @param value - String to encode.\n * @param options - Encoding options.\n * @returns Encoded {@link ox#Bytes.Bytes}.\n */\nexport function fromString(value, options = {}) {\n    const { size } = options;\n    const bytes = encoder.encode(value);\n    if (typeof size === 'number') {\n        internal.assertSize(bytes, size);\n        return padRight(bytes, size);\n    }\n    return bytes;\n}\n/**\n * Checks if two {@link ox#Bytes.Bytes} values are equal.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.isEqual(Bytes.from([1]), Bytes.from([1]))\n * // @log: true\n *\n * Bytes.isEqual(Bytes.from([1]), Bytes.from([2]))\n * // @log: false\n * ```\n *\n * @param bytesA - First {@link ox#Bytes.Bytes} value.\n * @param bytesB - Second {@link ox#Bytes.Bytes} value.\n * @returns `true` if the two values are equal, otherwise `false`.\n */\nexport function isEqual(bytesA, bytesB) {\n    return equalBytes(bytesA, bytesB);\n}\n/**\n * Pads a {@link ox#Bytes.Bytes} value to the left with zero bytes until it reaches the given `size` (default: 32 bytes).\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.padLeft(Bytes.from([1]), 4)\n * // @log: Uint8Array([0, 0, 0, 1])\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} value to pad.\n * @param size - Size to pad the {@link ox#Bytes.Bytes} value to.\n * @returns Padded {@link ox#Bytes.Bytes} value.\n */\nexport function padLeft(value, size) {\n    return internal.pad(value, { dir: 'left', size });\n}\n/**\n * Pads a {@link ox#Bytes.Bytes} value to the right with zero bytes until it reaches the given `size` (default: 32 bytes).\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.padRight(Bytes.from([1]), 4)\n * // @log: Uint8Array([1, 0, 0, 0])\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} value to pad.\n * @param size - Size to pad the {@link ox#Bytes.Bytes} value to.\n * @returns Padded {@link ox#Bytes.Bytes} value.\n */\nexport function padRight(value, size) {\n    return internal.pad(value, { dir: 'right', size });\n}\n/**\n * Generates random {@link ox#Bytes.Bytes} of the specified length.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const bytes = Bytes.random(32)\n * // @log: Uint8Array([... x32])\n * ```\n *\n * @param length - Length of the random {@link ox#Bytes.Bytes} to generate.\n * @returns Random {@link ox#Bytes.Bytes} of the specified length.\n */\nexport function random(length) {\n    return crypto.getRandomValues(new Uint8Array(length));\n}\n/**\n * Retrieves the size of a {@link ox#Bytes.Bytes} value.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.size(Bytes.from([1, 2, 3, 4]))\n * // @log: 4\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} value.\n * @returns Size of the {@link ox#Bytes.Bytes} value.\n */\nexport function size(value) {\n    return value.length;\n}\n/**\n * Returns a section of a {@link ox#Bytes.Bytes} value given a start/end bytes offset.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.slice(\n *   Bytes.from([1, 2, 3, 4, 5, 6, 7, 8, 9]),\n *   1,\n *   4,\n * )\n * // @log: Uint8Array([2, 3, 4])\n * ```\n *\n * @param value - The {@link ox#Bytes.Bytes} value.\n * @param start - Start offset.\n * @param end - End offset.\n * @param options - Slice options.\n * @returns Sliced {@link ox#Bytes.Bytes} value.\n */\nexport function slice(value, start, end, options = {}) {\n    const { strict } = options;\n    internal.assertStartOffset(value, start);\n    const value_ = value.slice(start, end);\n    if (strict)\n        internal.assertEndOffset(value_, start, end);\n    return value_;\n}\n/**\n * Decodes a {@link ox#Bytes.Bytes} into a bigint.\n *\n * @example\n * ```ts\n * import { Bytes } from 'ox'\n *\n * Bytes.toBigInt(Bytes.from([1, 164]))\n * // @log: 420n\n * ```\n *\n * @param bytes - The {@link ox#Bytes.Bytes} to decode.\n * @param options - Decoding options.\n * @returns Decoded bigint.\n */\nexport function toBigInt(bytes, options = {}) {\n    const { size } = options;\n    if (typeof size !== 'undefined')\n        internal.assertSize(bytes, size);\n    const hex = Hex.fromBytes(bytes, options);\n    return Hex.toBigInt(hex, options);\n}\n/**\n * Decodes a {@link ox#Bytes.Bytes} into a boolean.\n *\n * @example\n * ```ts\n * import { Bytes } from 'ox'\n *\n * Bytes.toBoolean(Bytes.from([1]))\n * // @log: true\n * ```\n *\n * @param bytes - The {@link ox#Bytes.Bytes} to decode.\n * @param options - Decoding options.\n * @returns Decoded boolean.\n */\nexport function toBoolean(bytes, options = {}) {\n    const { size } = options;\n    let bytes_ = bytes;\n    if (typeof size !== 'undefined') {\n        internal.assertSize(bytes_, size);\n        bytes_ = trimLeft(bytes_);\n    }\n    if (bytes_.length > 1 || bytes_[0] > 1)\n        throw new InvalidBytesBooleanError(bytes_);\n    return Boolean(bytes_[0]);\n}\n/**\n * Encodes a {@link ox#Bytes.Bytes} value into a {@link ox#Hex.Hex} value.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.toHex(Bytes.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]))\n * // '0x48656c6c6f20576f726c6421'\n * ```\n *\n * @param value - The {@link ox#Bytes.Bytes} to decode.\n * @param options - Options.\n * @returns Decoded {@link ox#Hex.Hex} value.\n */\nexport function toHex(value, options = {}) {\n    return Hex.fromBytes(value, options);\n}\n/**\n * Decodes a {@link ox#Bytes.Bytes} into a number.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.toNumber(Bytes.from([1, 164]))\n * // @log: 420\n * ```\n */\nexport function toNumber(bytes, options = {}) {\n    const { size } = options;\n    if (typeof size !== 'undefined')\n        internal.assertSize(bytes, size);\n    const hex = Hex.fromBytes(bytes, options);\n    return Hex.toNumber(hex, options);\n}\n/**\n * Decodes a {@link ox#Bytes.Bytes} into a string.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * const data = Bytes.toString(Bytes.from([72, 101, 108, 108, 111, 32, 87, 111, 114, 108, 100, 33]))\n * // @log: 'Hello world'\n * ```\n *\n * @param bytes - The {@link ox#Bytes.Bytes} to decode.\n * @param options - Options.\n * @returns Decoded string.\n */\nexport function toString(bytes, options = {}) {\n    const { size } = options;\n    let bytes_ = bytes;\n    if (typeof size !== 'undefined') {\n        internal.assertSize(bytes_, size);\n        bytes_ = trimRight(bytes_);\n    }\n    return decoder.decode(bytes_);\n}\n/**\n * Trims leading zeros from a {@link ox#Bytes.Bytes} value.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.trimLeft(Bytes.from([0, 0, 0, 0, 1, 2, 3]))\n * // @log: Uint8Array([1, 2, 3])\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} value.\n * @returns Trimmed {@link ox#Bytes.Bytes} value.\n */\nexport function trimLeft(value) {\n    return internal.trim(value, { dir: 'left' });\n}\n/**\n * Trims trailing zeros from a {@link ox#Bytes.Bytes} value.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.trimRight(Bytes.from([1, 2, 3, 0, 0, 0, 0]))\n * // @log: Uint8Array([1, 2, 3])\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} value.\n * @returns Trimmed {@link ox#Bytes.Bytes} value.\n */\nexport function trimRight(value) {\n    return internal.trim(value, { dir: 'right' });\n}\n/**\n * Checks if the given value is {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.validate('0x')\n * // @log: false\n *\n * Bytes.validate(Bytes.from([1, 2, 3]))\n * // @log: true\n * ```\n *\n * @param value - Value to check.\n * @returns `true` if the value is {@link ox#Bytes.Bytes}, otherwise `false`.\n */\nexport function validate(value) {\n    try {\n        assert(value);\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\n/**\n * Thrown when the bytes value cannot be represented as a boolean.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.toBoolean(Bytes.from([5]))\n * // @error: Bytes.InvalidBytesBooleanError: Bytes value `[5]` is not a valid boolean.\n * // @error: The bytes array must contain a single byte of either a `0` or `1` value.\n * ```\n */\nexport class InvalidBytesBooleanError extends Errors.BaseError {\n    constructor(bytes) {\n        super(`Bytes value \\`${bytes}\\` is not a valid boolean.`, {\n            metaMessages: [\n                'The bytes array must contain a single byte of either a `0` or `1` value.',\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Bytes.InvalidBytesBooleanError'\n        });\n    }\n}\n/**\n * Thrown when a value cannot be converted to bytes.\n *\n * @example\n * ```ts twoslash\n * // @noErrors\n * import { Bytes } from 'ox'\n *\n * Bytes.from('foo')\n * // @error: Bytes.InvalidBytesTypeError: Value `foo` of type `string` is an invalid Bytes value.\n * ```\n */\nexport class InvalidBytesTypeError extends Errors.BaseError {\n    constructor(value) {\n        super(`Value \\`${typeof value === 'object' ? Json.stringify(value) : value}\\` of type \\`${typeof value}\\` is an invalid Bytes value.`, {\n            metaMessages: ['Bytes values must be of type `Bytes`.'],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Bytes.InvalidBytesTypeError'\n        });\n    }\n}\n/**\n * Thrown when a size exceeds the maximum allowed size.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.fromString('Hello World!', { size: 8 })\n * // @error: Bytes.SizeOverflowError: Size cannot exceed `8` bytes. Given size: `12` bytes.\n * ```\n */\nexport class SizeOverflowError extends Errors.BaseError {\n    constructor({ givenSize, maxSize }) {\n        super(`Size cannot exceed \\`${maxSize}\\` bytes. Given size: \\`${givenSize}\\` bytes.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Bytes.SizeOverflowError'\n        });\n    }\n}\n/**\n * Thrown when a slice offset is out-of-bounds.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.slice(Bytes.from([1, 2, 3]), 4)\n * // @error: Bytes.SliceOffsetOutOfBoundsError: Slice starting at offset `4` is out-of-bounds (size: `3`).\n * ```\n */\nexport class SliceOffsetOutOfBoundsError extends Errors.BaseError {\n    constructor({ offset, position, size, }) {\n        super(`Slice ${position === 'start' ? 'starting' : 'ending'} at offset \\`${offset}\\` is out-of-bounds (size: \\`${size}\\`).`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Bytes.SliceOffsetOutOfBoundsError'\n        });\n    }\n}\n/**\n * Thrown when a the padding size exceeds the maximum allowed size.\n *\n * @example\n * ```ts twoslash\n * import { Bytes } from 'ox'\n *\n * Bytes.padLeft(Bytes.fromString('Hello World!'), 8)\n * // @error: [Bytes.SizeExceedsPaddingSizeError: Bytes size (`12`) exceeds padding size (`8`).\n * ```\n */\nexport class SizeExceedsPaddingSizeError extends Errors.BaseError {\n    constructor({ size, targetSize, type, }) {\n        super(`${type.charAt(0).toUpperCase()}${type\n            .slice(1)\n            .toLowerCase()} size (\\`${size}\\`) exceeds padding size (\\`${targetSize}\\`).`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Bytes.SizeExceedsPaddingSizeError'\n        });\n    }\n}\n//# sourceMappingURL=Bytes.js.map","import { ripemd160 as noble_ripemd160 } from '@noble/hashes/ripemd160';\nimport { keccak_256 as noble_keccak256 } from '@noble/hashes/sha3';\nimport { sha256 as noble_sha256 } from '@noble/hashes/sha256';\nimport * as Bytes from './Bytes.js';\nimport * as Hex from './Hex.js';\n/**\n * Calculates the [Keccak256](https://en.wikipedia.org/wiki/SHA-3) hash of a {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\n *\n * This function is a re-export of `keccak_256` from [`@noble/hashes`](https://github.com/paulmillr/noble-hashes), an audited & minimal JS hashing library.\n *\n * @example\n * ```ts twoslash\n * import { Hash } from 'ox'\n *\n * Hash.keccak256('0xdeadbeef')\n * // @log: '0xd4fd4e189132273036449fc9e11198c739161b4c0116a9a2dccdfa1c492006f1'\n * ```\n *\n * @example\n * ### Calculate Hash of a String\n *\n * ```ts twoslash\n * import { Hash, Hex } from 'ox'\n *\n * Hash.keccak256(Hex.fromString('hello world'))\n * // @log: '0x3ea2f1d0abf3fc66cf29eebb70cbd4e7fe762ef8a09bcc06c8edf641230afec0'\n * ```\n *\n * @example\n * ### Configure Return Type\n *\n * ```ts twoslash\n * import { Hash } from 'ox'\n *\n * Hash.keccak256('0xdeadbeef', { as: 'Bytes' })\n * // @log: Uint8Array [...]\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\n * @param options - Options.\n * @returns Keccak256 hash.\n */\nexport function keccak256(value, options = {}) {\n    const { as = typeof value === 'string' ? 'Hex' : 'Bytes' } = options;\n    const bytes = noble_keccak256(Bytes.from(value));\n    if (as === 'Bytes')\n        return bytes;\n    return Hex.fromBytes(bytes);\n}\n/**\n * Calculates the [Ripemd160](https://en.wikipedia.org/wiki/RIPEMD) hash of a {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\n *\n * This function is a re-export of `ripemd160` from [`@noble/hashes`](https://github.com/paulmillr/noble-hashes), an audited & minimal JS hashing library.\n *\n * @example\n * ```ts twoslash\n * import { Hash } from 'ox'\n *\n * Hash.ripemd160('0xdeadbeef')\n * // '0x226821c2f5423e11fe9af68bd285c249db2e4b5a'\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\n * @param options - Options.\n * @returns Ripemd160 hash.\n */\nexport function ripemd160(value, options = {}) {\n    const { as = typeof value === 'string' ? 'Hex' : 'Bytes' } = options;\n    const bytes = noble_ripemd160(Bytes.from(value));\n    if (as === 'Bytes')\n        return bytes;\n    return Hex.fromBytes(bytes);\n}\n/**\n * Calculates the [Sha256](https://en.wikipedia.org/wiki/SHA-256) hash of a {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\n *\n * This function is a re-export of `sha256` from [`@noble/hashes`](https://github.com/paulmillr/noble-hashes), an audited & minimal JS hashing library.\n *\n * @example\n * ```ts twoslash\n * import { Hash } from 'ox'\n *\n * Hash.sha256('0xdeadbeef')\n * // '0x5f78c33274e43fa9de5659265c1d917e25c03722dcb0b8d27db8d5feaa813953'\n * ```\n *\n * @param value - {@link ox#Bytes.Bytes} or {@link ox#Hex.Hex} value.\n * @param options - Options.\n * @returns Sha256 hash.\n */\nexport function sha256(value, options = {}) {\n    const { as = typeof value === 'string' ? 'Hex' : 'Bytes' } = options;\n    const bytes = noble_sha256(Bytes.from(value));\n    if (as === 'Bytes')\n        return bytes;\n    return Hex.fromBytes(bytes);\n}\n/**\n * Checks if a string is a valid hash value.\n *\n * @example\n * ```ts twoslash\n * import { Hash } from 'ox'\n *\n * Hash.validate('0x')\n * // @log: false\n *\n * Hash.validate('0x3ea2f1d0abf3fc66cf29eebb70cbd4e7fe762ef8a09bcc06c8edf641230afec0')\n * // @log: true\n * ```\n *\n * @param value - Value to check.\n * @returns Whether the value is a valid hash.\n */\nexport function validate(value) {\n    return Hex.validate(value) && Hex.size(value) === 32;\n}\n//# sourceMappingURL=Hash.js.map","import * as Bytes from './Bytes.js';\nimport * as Errors from './Errors.js';\nimport * as Hex from './Hex.js';\nimport * as Json from './Json.js';\n/**\n * Asserts that a {@link ox#PublicKey.PublicKey} is valid.\n *\n * @example\n * ```ts twoslash\n * import { PublicKey } from 'ox'\n *\n * PublicKey.assert({\n *   prefix: 4,\n *   y: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n * })\n * // @error: PublicKey.InvalidError: Value \\`{\"y\":\"1\"}\\` is not a valid public key.\n * // @error: Public key must contain:\n * // @error: - an `x` and `prefix` value (compressed)\n * // @error: - an `x`, `y`, and `prefix` value (uncompressed)\n * ```\n *\n * @param publicKey - The public key object to assert.\n */\nexport function assert(publicKey, options = {}) {\n    const { compressed } = options;\n    const { prefix, x, y } = publicKey;\n    // Uncompressed\n    if (compressed === false ||\n        (typeof x === 'bigint' && typeof y === 'bigint')) {\n        if (prefix !== 4)\n            throw new InvalidPrefixError({\n                prefix,\n                cause: new InvalidUncompressedPrefixError(),\n            });\n        return;\n    }\n    // Compressed\n    if (compressed === true ||\n        (typeof x === 'bigint' && typeof y === 'undefined')) {\n        if (prefix !== 3 && prefix !== 2)\n            throw new InvalidPrefixError({\n                prefix,\n                cause: new InvalidCompressedPrefixError(),\n            });\n        return;\n    }\n    // Unknown/invalid\n    throw new InvalidError({ publicKey });\n}\n/**\n * Compresses a {@link ox#PublicKey.PublicKey}.\n *\n * @example\n * ```ts twoslash\n * import { PublicKey } from 'ox'\n *\n * const publicKey = PublicKey.from({\n *   prefix: 4,\n *   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,\n *   y: 24099691209996290925259367678540227198235484593389470330605641003500238088869n,\n * })\n *\n * const compressed = PublicKey.compress(publicKey) // [!code focus]\n * // @log: {\n * // @log:   prefix: 3,\n * // @log:   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,\n * // @log: }\n * ```\n *\n * @param publicKey - The public key to compress.\n * @returns The compressed public key.\n */\nexport function compress(publicKey) {\n    const { x, y } = publicKey;\n    return {\n        prefix: y % 2n === 0n ? 2 : 3,\n        x,\n    };\n}\n/**\n * Instantiates a typed {@link ox#PublicKey.PublicKey} object from a {@link ox#PublicKey.PublicKey}, {@link ox#Bytes.Bytes}, or {@link ox#Hex.Hex}.\n *\n * @example\n * ```ts twoslash\n * import { PublicKey } from 'ox'\n *\n * const publicKey = PublicKey.from({\n *   prefix: 4,\n *   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,\n *   y: 24099691209996290925259367678540227198235484593389470330605641003500238088869n,\n * })\n * // @log: {\n * // @log:   prefix: 4,\n * // @log:   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,\n * // @log:   y: 24099691209996290925259367678540227198235484593389470330605641003500238088869n,\n * // @log: }\n * ```\n *\n * @example\n * ### From Serialized\n *\n * ```ts twoslash\n * import { PublicKey } from 'ox'\n *\n * const publicKey = PublicKey.from('0x048318535b54105d4a7aae60c08fc45f9687181b4fdfc625bd1a753fa7397fed753547f11ca8696646f2f3acb08e31016afac23e630c5d11f59f61fef57b0d2aa5')\n * // @log: {\n * // @log:   prefix: 4,\n * // @log:   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,\n * // @log:   y: 24099691209996290925259367678540227198235484593389470330605641003500238088869n,\n * // @log: }\n * ```\n *\n * @param value - The public key value to instantiate.\n * @returns The instantiated {@link ox#PublicKey.PublicKey}.\n */\nexport function from(value) {\n    const publicKey = (() => {\n        if (Hex.validate(value))\n            return fromHex(value);\n        if (Bytes.validate(value))\n            return fromBytes(value);\n        const { prefix, x, y } = value;\n        if (typeof x === 'bigint' && typeof y === 'bigint')\n            return { prefix: prefix ?? 0x04, x, y };\n        return { prefix, x };\n    })();\n    assert(publicKey);\n    return publicKey;\n}\n/**\n * Deserializes a {@link ox#PublicKey.PublicKey} from a {@link ox#Bytes.Bytes} value.\n *\n * @example\n * ```ts twoslash\n * // @noErrors\n * import { PublicKey } from 'ox'\n *\n * const publicKey = PublicKey.fromBytes(new Uint8Array([128, 3, 131, ...]))\n * // @log: {\n * // @log:   prefix: 4,\n * // @log:   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,\n * // @log:   y: 24099691209996290925259367678540227198235484593389470330605641003500238088869n,\n * // @log: }\n * ```\n *\n * @param publicKey - The serialized public key.\n * @returns The deserialized public key.\n */\nexport function fromBytes(publicKey) {\n    return fromHex(Hex.fromBytes(publicKey));\n}\n/**\n * Deserializes a {@link ox#PublicKey.PublicKey} from a {@link ox#Hex.Hex} value.\n *\n * @example\n * ```ts twoslash\n * import { PublicKey } from 'ox'\n *\n * const publicKey = PublicKey.fromHex('0x8318535b54105d4a7aae60c08fc45f9687181b4fdfc625bd1a753fa7397fed753547f11ca8696646f2f3acb08e31016afac23e630c5d11f59f61fef57b0d2aa5')\n * // @log: {\n * // @log:   prefix: 4,\n * // @log:   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,\n * // @log:   y: 24099691209996290925259367678540227198235484593389470330605641003500238088869n,\n * // @log: }\n * ```\n *\n * @example\n * ### Deserializing a Compressed Public Key\n *\n * ```ts twoslash\n * import { PublicKey } from 'ox'\n *\n * const publicKey = PublicKey.fromHex('0x038318535b54105d4a7aae60c08fc45f9687181b4fdfc625bd1a753fa7397fed75')\n * // @log: {\n * // @log:   prefix: 3,\n * // @log:   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,\n * // @log: }\n * ```\n *\n * @param publicKey - The serialized public key.\n * @returns The deserialized public key.\n */\nexport function fromHex(publicKey) {\n    if (publicKey.length !== 132 &&\n        publicKey.length !== 130 &&\n        publicKey.length !== 68)\n        throw new InvalidSerializedSizeError({ publicKey });\n    if (publicKey.length === 130) {\n        const x = BigInt(Hex.slice(publicKey, 0, 32));\n        const y = BigInt(Hex.slice(publicKey, 32, 64));\n        return {\n            prefix: 4,\n            x,\n            y,\n        };\n    }\n    if (publicKey.length === 132) {\n        const prefix = Number(Hex.slice(publicKey, 0, 1));\n        const x = BigInt(Hex.slice(publicKey, 1, 33));\n        const y = BigInt(Hex.slice(publicKey, 33, 65));\n        return {\n            prefix,\n            x,\n            y,\n        };\n    }\n    const prefix = Number(Hex.slice(publicKey, 0, 1));\n    const x = BigInt(Hex.slice(publicKey, 1, 33));\n    return {\n        prefix,\n        x,\n    };\n}\n/**\n * Serializes a {@link ox#PublicKey.PublicKey} to {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { PublicKey } from 'ox'\n *\n * const publicKey = PublicKey.from({\n *   prefix: 4,\n *   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,\n *   y: 24099691209996290925259367678540227198235484593389470330605641003500238088869n,\n * })\n *\n * const bytes = PublicKey.toBytes(publicKey) // [!code focus]\n * // @log: Uint8Array [128, 3, 131, ...]\n * ```\n *\n * @param publicKey - The public key to serialize.\n * @returns The serialized public key.\n */\nexport function toBytes(publicKey, options = {}) {\n    return Bytes.fromHex(toHex(publicKey, options));\n}\n/**\n * Serializes a {@link ox#PublicKey.PublicKey} to {@link ox#Hex.Hex}.\n *\n * @example\n * ```ts twoslash\n * import { PublicKey } from 'ox'\n *\n * const publicKey = PublicKey.from({\n *   prefix: 4,\n *   x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,\n *   y: 24099691209996290925259367678540227198235484593389470330605641003500238088869n,\n * })\n *\n * const hex = PublicKey.toHex(publicKey) // [!code focus]\n * // @log: '0x048318535b54105d4a7aae60c08fc45f9687181b4fdfc625bd1a753fa7397fed753547f11ca8696646f2f3acb08e31016afac23e630c5d11f59f61fef57b0d2aa5'\n * ```\n *\n * @param publicKey - The public key to serialize.\n * @returns The serialized public key.\n */\nexport function toHex(publicKey, options = {}) {\n    assert(publicKey);\n    const { prefix, x, y } = publicKey;\n    const { includePrefix = true } = options;\n    const publicKey_ = Hex.concat(includePrefix ? Hex.fromNumber(prefix, { size: 1 }) : '0x', Hex.fromNumber(x, { size: 32 }), \n    // If the public key is not compressed, add the y coordinate.\n    typeof y === 'bigint' ? Hex.fromNumber(y, { size: 32 }) : '0x');\n    return publicKey_;\n}\n/**\n * Validates a {@link ox#PublicKey.PublicKey}. Returns `true` if valid, `false` otherwise.\n *\n * @example\n * ```ts twoslash\n * import { PublicKey } from 'ox'\n *\n * const valid = PublicKey.validate({\n *   prefix: 4,\n *   y: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n * })\n * // @log: false\n * ```\n *\n * @param publicKey - The public key object to assert.\n */\nexport function validate(publicKey, options = {}) {\n    try {\n        assert(publicKey, options);\n        return true;\n    }\n    catch (error) {\n        return false;\n    }\n}\n/**\n * Thrown when a public key is invalid.\n *\n * @example\n * ```ts twoslash\n * import { PublicKey } from 'ox'\n *\n * PublicKey.assert({ y: 1n })\n * // @error: PublicKey.InvalidError: Value `{\"y\":1n}` is not a valid public key.\n * // @error: Public key must contain:\n * // @error: - an `x` and `prefix` value (compressed)\n * // @error: - an `x`, `y`, and `prefix` value (uncompressed)\n * ```\n */\nexport class InvalidError extends Errors.BaseError {\n    constructor({ publicKey }) {\n        super(`Value \\`${Json.stringify(publicKey)}\\` is not a valid public key.`, {\n            metaMessages: [\n                'Public key must contain:',\n                '- an `x` and `prefix` value (compressed)',\n                '- an `x`, `y`, and `prefix` value (uncompressed)',\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'PublicKey.InvalidError'\n        });\n    }\n}\n/** Thrown when a public key has an invalid prefix. */\nexport class InvalidPrefixError extends Errors.BaseError {\n    constructor({ prefix, cause }) {\n        super(`Prefix \"${prefix}\" is invalid.`, {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'PublicKey.InvalidPrefixError'\n        });\n    }\n}\n/** Thrown when the public key has an invalid prefix for a compressed public key. */\nexport class InvalidCompressedPrefixError extends Errors.BaseError {\n    constructor() {\n        super('Prefix must be 2 or 3 for compressed public keys.');\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'PublicKey.InvalidCompressedPrefixError'\n        });\n    }\n}\n/** Thrown when the public key has an invalid prefix for an uncompressed public key. */\nexport class InvalidUncompressedPrefixError extends Errors.BaseError {\n    constructor() {\n        super('Prefix must be 4 for uncompressed public keys.');\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'PublicKey.InvalidUncompressedPrefixError'\n        });\n    }\n}\n/** Thrown when the public key has an invalid serialized size. */\nexport class InvalidSerializedSizeError extends Errors.BaseError {\n    constructor({ publicKey }) {\n        super(`Value \\`${publicKey}\\` is an invalid public key size.`, {\n            metaMessages: [\n                'Expected: 33 bytes (compressed + prefix), 64 bytes (uncompressed) or 65 bytes (uncompressed + prefix).',\n                `Received ${Hex.size(Hex.from(publicKey))} bytes.`,\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'PublicKey.InvalidSerializedSizeError'\n        });\n    }\n}\n//# sourceMappingURL=PublicKey.js.map","export const arrayRegex = /^(.*)\\[([0-9]*)\\]$/;\n// `bytes<M>`: binary type of `M` bytes, `0 < M <= 32`\n// https://regexr.com/6va55\nexport const bytesRegex = /^bytes([1-9]|1[0-9]|2[0-9]|3[0-2])?$/;\n// `(u)int<M>`: (un)signed integer type of `M` bits, `0 < M <= 256`, `M % 8 == 0`\n// https://regexr.com/6v8hp\nexport const integerRegex = /^(u?int)(8|16|24|32|40|48|56|64|72|80|88|96|104|112|120|128|136|144|152|160|168|176|184|192|200|208|216|224|232|240|248|256)?$/;\nexport const maxInt8 = 2n ** (8n - 1n) - 1n;\nexport const maxInt16 = 2n ** (16n - 1n) - 1n;\nexport const maxInt24 = 2n ** (24n - 1n) - 1n;\nexport const maxInt32 = 2n ** (32n - 1n) - 1n;\nexport const maxInt40 = 2n ** (40n - 1n) - 1n;\nexport const maxInt48 = 2n ** (48n - 1n) - 1n;\nexport const maxInt56 = 2n ** (56n - 1n) - 1n;\nexport const maxInt64 = 2n ** (64n - 1n) - 1n;\nexport const maxInt72 = 2n ** (72n - 1n) - 1n;\nexport const maxInt80 = 2n ** (80n - 1n) - 1n;\nexport const maxInt88 = 2n ** (88n - 1n) - 1n;\nexport const maxInt96 = 2n ** (96n - 1n) - 1n;\nexport const maxInt104 = 2n ** (104n - 1n) - 1n;\nexport const maxInt112 = 2n ** (112n - 1n) - 1n;\nexport const maxInt120 = 2n ** (120n - 1n) - 1n;\nexport const maxInt128 = 2n ** (128n - 1n) - 1n;\nexport const maxInt136 = 2n ** (136n - 1n) - 1n;\nexport const maxInt144 = 2n ** (144n - 1n) - 1n;\nexport const maxInt152 = 2n ** (152n - 1n) - 1n;\nexport const maxInt160 = 2n ** (160n - 1n) - 1n;\nexport const maxInt168 = 2n ** (168n - 1n) - 1n;\nexport const maxInt176 = 2n ** (176n - 1n) - 1n;\nexport const maxInt184 = 2n ** (184n - 1n) - 1n;\nexport const maxInt192 = 2n ** (192n - 1n) - 1n;\nexport const maxInt200 = 2n ** (200n - 1n) - 1n;\nexport const maxInt208 = 2n ** (208n - 1n) - 1n;\nexport const maxInt216 = 2n ** (216n - 1n) - 1n;\nexport const maxInt224 = 2n ** (224n - 1n) - 1n;\nexport const maxInt232 = 2n ** (232n - 1n) - 1n;\nexport const maxInt240 = 2n ** (240n - 1n) - 1n;\nexport const maxInt248 = 2n ** (248n - 1n) - 1n;\nexport const maxInt256 = 2n ** (256n - 1n) - 1n;\nexport const minInt8 = -(2n ** (8n - 1n));\nexport const minInt16 = -(2n ** (16n - 1n));\nexport const minInt24 = -(2n ** (24n - 1n));\nexport const minInt32 = -(2n ** (32n - 1n));\nexport const minInt40 = -(2n ** (40n - 1n));\nexport const minInt48 = -(2n ** (48n - 1n));\nexport const minInt56 = -(2n ** (56n - 1n));\nexport const minInt64 = -(2n ** (64n - 1n));\nexport const minInt72 = -(2n ** (72n - 1n));\nexport const minInt80 = -(2n ** (80n - 1n));\nexport const minInt88 = -(2n ** (88n - 1n));\nexport const minInt96 = -(2n ** (96n - 1n));\nexport const minInt104 = -(2n ** (104n - 1n));\nexport const minInt112 = -(2n ** (112n - 1n));\nexport const minInt120 = -(2n ** (120n - 1n));\nexport const minInt128 = -(2n ** (128n - 1n));\nexport const minInt136 = -(2n ** (136n - 1n));\nexport const minInt144 = -(2n ** (144n - 1n));\nexport const minInt152 = -(2n ** (152n - 1n));\nexport const minInt160 = -(2n ** (160n - 1n));\nexport const minInt168 = -(2n ** (168n - 1n));\nexport const minInt176 = -(2n ** (176n - 1n));\nexport const minInt184 = -(2n ** (184n - 1n));\nexport const minInt192 = -(2n ** (192n - 1n));\nexport const minInt200 = -(2n ** (200n - 1n));\nexport const minInt208 = -(2n ** (208n - 1n));\nexport const minInt216 = -(2n ** (216n - 1n));\nexport const minInt224 = -(2n ** (224n - 1n));\nexport const minInt232 = -(2n ** (232n - 1n));\nexport const minInt240 = -(2n ** (240n - 1n));\nexport const minInt248 = -(2n ** (248n - 1n));\nexport const minInt256 = -(2n ** (256n - 1n));\nexport const maxUint8 = 2n ** 8n - 1n;\nexport const maxUint16 = 2n ** 16n - 1n;\nexport const maxUint24 = 2n ** 24n - 1n;\nexport const maxUint32 = 2n ** 32n - 1n;\nexport const maxUint40 = 2n ** 40n - 1n;\nexport const maxUint48 = 2n ** 48n - 1n;\nexport const maxUint56 = 2n ** 56n - 1n;\nexport const maxUint64 = 2n ** 64n - 1n;\nexport const maxUint72 = 2n ** 72n - 1n;\nexport const maxUint80 = 2n ** 80n - 1n;\nexport const maxUint88 = 2n ** 88n - 1n;\nexport const maxUint96 = 2n ** 96n - 1n;\nexport const maxUint104 = 2n ** 104n - 1n;\nexport const maxUint112 = 2n ** 112n - 1n;\nexport const maxUint120 = 2n ** 120n - 1n;\nexport const maxUint128 = 2n ** 128n - 1n;\nexport const maxUint136 = 2n ** 136n - 1n;\nexport const maxUint144 = 2n ** 144n - 1n;\nexport const maxUint152 = 2n ** 152n - 1n;\nexport const maxUint160 = 2n ** 160n - 1n;\nexport const maxUint168 = 2n ** 168n - 1n;\nexport const maxUint176 = 2n ** 176n - 1n;\nexport const maxUint184 = 2n ** 184n - 1n;\nexport const maxUint192 = 2n ** 192n - 1n;\nexport const maxUint200 = 2n ** 200n - 1n;\nexport const maxUint208 = 2n ** 208n - 1n;\nexport const maxUint216 = 2n ** 216n - 1n;\nexport const maxUint224 = 2n ** 224n - 1n;\nexport const maxUint232 = 2n ** 232n - 1n;\nexport const maxUint240 = 2n ** 240n - 1n;\nexport const maxUint248 = 2n ** 248n - 1n;\nexport const maxUint256 = 2n ** 256n - 1n;\n//# sourceMappingURL=Solidity.js.map","import { secp256k1 } from '@noble/curves/secp256k1';\nimport * as Bytes from './Bytes.js';\nimport * as Errors from './Errors.js';\nimport * as Hex from './Hex.js';\nimport * as Json from './Json.js';\nimport * as Solidity from './Solidity.js';\n/**\n * Asserts that a Signature is valid.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * Signature.assert({\n *   r: -49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n *   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n *   yParity: 1,\n * })\n * // @error: InvalidSignatureRError:\n * // @error: Value `-549...n` is an invalid r value.\n * // @error: r must be a positive integer less than 2^256.\n * ```\n *\n * @param signature - The signature object to assert.\n */\nexport function assert(signature, options = {}) {\n    const { recovered } = options;\n    if (typeof signature.r === 'undefined')\n        throw new MissingPropertiesError({ signature });\n    if (typeof signature.s === 'undefined')\n        throw new MissingPropertiesError({ signature });\n    if (recovered && typeof signature.yParity === 'undefined')\n        throw new MissingPropertiesError({ signature });\n    if (signature.r < 0n || signature.r > Solidity.maxUint256)\n        throw new InvalidRError({ value: signature.r });\n    if (signature.s < 0n || signature.s > Solidity.maxUint256)\n        throw new InvalidSError({ value: signature.s });\n    if (typeof signature.yParity === 'number' &&\n        signature.yParity !== 0 &&\n        signature.yParity !== 1)\n        throw new InvalidYParityError({ value: signature.yParity });\n}\n/**\n * Deserializes a {@link ox#Bytes.Bytes} signature into a structured {@link ox#Signature.Signature}.\n *\n * @example\n * ```ts twoslash\n * // @noErrors\n * import { Signature } from 'ox'\n *\n * Signature.fromBytes(new Uint8Array([128, 3, 131, ...]))\n * // @log: { r: 5231...n, s: 3522...n, yParity: 0 }\n * ```\n *\n * @param signature - The serialized signature.\n * @returns The deserialized {@link ox#Signature.Signature}.\n */\nexport function fromBytes(signature) {\n    return fromHex(Hex.fromBytes(signature));\n}\n/**\n * Deserializes a {@link ox#Hex.Hex} signature into a structured {@link ox#Signature.Signature}.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * Signature.fromHex('0x6e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf4a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db81c')\n * // @log: { r: 5231...n, s: 3522...n, yParity: 0 }\n * ```\n *\n * @param serialized - The serialized signature.\n * @returns The deserialized {@link ox#Signature.Signature}.\n */\nexport function fromHex(signature) {\n    if (signature.length !== 130 && signature.length !== 132)\n        throw new InvalidSerializedSizeError({ signature });\n    const r = BigInt(Hex.slice(signature, 0, 32));\n    const s = BigInt(Hex.slice(signature, 32, 64));\n    const yParity = (() => {\n        const yParity = Number(`0x${signature.slice(130)}`);\n        if (Number.isNaN(yParity))\n            return undefined;\n        try {\n            return vToYParity(yParity);\n        }\n        catch {\n            throw new InvalidYParityError({ value: yParity });\n        }\n    })();\n    if (typeof yParity === 'undefined')\n        return {\n            r,\n            s,\n        };\n    return {\n        r,\n        s,\n        yParity,\n    };\n}\n/**\n * Extracts a {@link ox#Signature.Signature} from an arbitrary object that may include signature properties.\n *\n * @example\n * ```ts twoslash\n * // @noErrors\n * import { Signature } from 'ox'\n *\n * Signature.extract({\n *   baz: 'barry',\n *   foo: 'bar',\n *   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n *   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n *   yParity: 1,\n *   zebra: 'stripes',\n * })\n * // @log: {\n * // @log:   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n * // @log:   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n * // @log:   yParity: 1\n * // @log: }\n * ```\n *\n * @param value - The arbitrary object to extract the signature from.\n * @returns The extracted {@link ox#Signature.Signature}.\n */\nexport function extract(value) {\n    if (typeof value.r === 'undefined')\n        return undefined;\n    if (typeof value.s === 'undefined')\n        return undefined;\n    return from(value);\n}\n/**\n * Instantiates a typed {@link ox#Signature.Signature} object from a {@link ox#Signature.Signature}, {@link ox#Signature.Legacy}, {@link ox#Bytes.Bytes}, or {@link ox#Hex.Hex}.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * Signature.from({\n *   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n *   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n *   yParity: 1,\n * })\n * // @log: {\n * // @log:   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n * // @log:   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n * // @log:   yParity: 1\n * // @log: }\n * ```\n *\n * @example\n * ### From Serialized\n *\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * Signature.from('0x6e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf4a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db801')\n * // @log: {\n * // @log:   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n * // @log:   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n * // @log:   yParity: 1,\n * // @log: }\n * ```\n *\n * @example\n * ### From Legacy\n *\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * Signature.from({\n *   r: 47323457007453657207889730243826965761922296599680473886588287015755652701072n,\n *   s: 57228803202727131502949358313456071280488184270258293674242124340113824882788n,\n *   v: 27,\n * })\n * // @log: {\n * // @log:   r: 47323457007453657207889730243826965761922296599680473886588287015755652701072n,\n * // @log:   s: 57228803202727131502949358313456071280488184270258293674242124340113824882788n,\n * // @log:   yParity: 0\n * // @log: }\n * ```\n *\n * @param signature - The signature value to instantiate.\n * @returns The instantiated {@link ox#Signature.Signature}.\n */\nexport function from(signature) {\n    const signature_ = (() => {\n        if (typeof signature === 'string')\n            return fromHex(signature);\n        if (signature instanceof Uint8Array)\n            return fromBytes(signature);\n        if (typeof signature.r === 'string')\n            return fromRpc(signature);\n        if (signature.v)\n            return fromLegacy(signature);\n        return {\n            r: signature.r,\n            s: signature.s,\n            ...(typeof signature.yParity !== 'undefined'\n                ? { yParity: signature.yParity }\n                : {}),\n        };\n    })();\n    assert(signature_);\n    return signature_;\n}\n/**\n * Converts a DER-encoded signature to a {@link ox#Signature.Signature}.\n *\n * @example\n * ```ts twoslash\n * // @noErrors\n * import { Signature } from 'ox'\n *\n * const signature = Signature.fromDerBytes(new Uint8Array([132, 51, 23, ...]))\n * // @log: {\n * // @log:   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n * // @log:   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n * // @log: }\n * ```\n *\n * @param signature - The DER-encoded signature to convert.\n * @returns The {@link ox#Signature.Signature}.\n */\nexport function fromDerBytes(signature) {\n    return fromDerHex(Hex.fromBytes(signature));\n}\n/**\n * Converts a DER-encoded signature to a {@link ox#Signature.Signature}.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const signature = Signature.fromDerHex('0x304402206e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf02204a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db8')\n * // @log: {\n * // @log:   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n * // @log:   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n * // @log: }\n * ```\n *\n * @param signature - The DER-encoded signature to convert.\n * @returns The {@link ox#Signature.Signature}.\n */\nexport function fromDerHex(signature) {\n    const { r, s } = secp256k1.Signature.fromDER(Hex.from(signature).slice(2));\n    return { r, s };\n}\n/**\n * Converts a {@link ox#Signature.Legacy} into a {@link ox#Signature.Signature}.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const legacy = Signature.fromLegacy({ r: 1n, s: 2n, v: 28 })\n * // @log: { r: 1n, s: 2n, yParity: 1 }\n * ```\n *\n * @param signature - The {@link ox#Signature.Legacy} to convert.\n * @returns The converted {@link ox#Signature.Signature}.\n */\nexport function fromLegacy(signature) {\n    return {\n        r: signature.r,\n        s: signature.s,\n        yParity: vToYParity(signature.v),\n    };\n}\n/**\n * Converts a {@link ox#Signature.Rpc} into a {@link ox#Signature.Signature}.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const signature = Signature.fromRpc({\n *   r: '0x635dc2033e60185bb36709c29c75d64ea51dfbd91c32ef4be198e4ceb169fb4d',\n *   s: '0x50c2667ac4c771072746acfdcf1f1483336dcca8bd2df47cd83175dbe60f0540',\n *   yParity: '0x0',\n * })\n * ```\n *\n * @param signature - The {@link ox#Signature.Rpc} to convert.\n * @returns The converted {@link ox#Signature.Signature}.\n */\nexport function fromRpc(signature) {\n    const yParity = (() => {\n        const v = signature.v ? Number(signature.v) : undefined;\n        let yParity = signature.yParity ? Number(signature.yParity) : undefined;\n        if (typeof v === 'number' && typeof yParity !== 'number')\n            yParity = vToYParity(v);\n        if (typeof yParity !== 'number')\n            throw new InvalidYParityError({ value: signature.yParity });\n        return yParity;\n    })();\n    return {\n        r: BigInt(signature.r),\n        s: BigInt(signature.s),\n        yParity,\n    };\n}\n/**\n * Converts a {@link ox#Signature.Tuple} to a {@link ox#Signature.Signature}.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const signature = Signature.fromTuple(['0x01', '0x7b', '0x1c8'])\n * // @log: {\n * // @log:   r: 123n,\n * // @log:   s: 456n,\n * // @log:   yParity: 1,\n * // @log: }\n * ```\n *\n * @param tuple - The {@link ox#Signature.Tuple} to convert.\n * @returns The {@link ox#Signature.Signature}.\n */\nexport function fromTuple(tuple) {\n    const [yParity, r, s] = tuple;\n    return from({\n        r: r === '0x' ? 0n : BigInt(r),\n        s: s === '0x' ? 0n : BigInt(s),\n        yParity: yParity === '0x' ? 0 : Number(yParity),\n    });\n}\n/**\n * Serializes a {@link ox#Signature.Signature} to {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const signature = Signature.toBytes({\n *   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n *   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n *   yParity: 1\n * })\n * // @log: Uint8Array [102, 16, 10, ...]\n * ```\n *\n * @param signature - The signature to serialize.\n * @returns The serialized signature.\n */\nexport function toBytes(signature) {\n    return Bytes.fromHex(toHex(signature));\n}\n/**\n * Serializes a {@link ox#Signature.Signature} to {@link ox#Hex.Hex}.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const signature = Signature.toHex({\n *   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n *   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n *   yParity: 1\n * })\n * // @log: '0x6e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf4a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db81c'\n * ```\n *\n * @param signature - The signature to serialize.\n * @returns The serialized signature.\n */\nexport function toHex(signature) {\n    assert(signature);\n    const r = signature.r;\n    const s = signature.s;\n    const signature_ = Hex.concat(Hex.fromNumber(r, { size: 32 }), Hex.fromNumber(s, { size: 32 }), \n    // If the signature is recovered, add the recovery byte to the signature.\n    typeof signature.yParity === 'number'\n        ? Hex.fromNumber(yParityToV(signature.yParity), { size: 1 })\n        : '0x');\n    return signature_;\n}\n/**\n * Converts a {@link ox#Signature.Signature} to DER-encoded format.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const signature = Signature.from({\n *   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n *   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n * })\n *\n * const signature_der = Signature.toDerBytes(signature)\n * // @log: Uint8Array [132, 51, 23, ...]\n * ```\n *\n * @param signature - The signature to convert.\n * @returns The DER-encoded signature.\n */\nexport function toDerBytes(signature) {\n    const sig = new secp256k1.Signature(signature.r, signature.s);\n    return sig.toDERRawBytes();\n}\n/**\n * Converts a {@link ox#Signature.Signature} to DER-encoded format.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const signature = Signature.from({\n *   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n *   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n * })\n *\n * const signature_der = Signature.toDerHex(signature)\n * // @log: '0x304402206e100a352ec6ad1b70802290e18aeed190704973570f3b8ed42cb9808e2ea6bf02204a90a229a244495b41890987806fcbd2d5d23fc0dbe5f5256c2613c039d76db8'\n * ```\n *\n * @param signature - The signature to convert.\n * @returns The DER-encoded signature.\n */\nexport function toDerHex(signature) {\n    const sig = new secp256k1.Signature(signature.r, signature.s);\n    return `0x${sig.toDERHex()}`;\n}\n/**\n * Converts a {@link ox#Signature.Signature} into a {@link ox#Signature.Legacy}.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const legacy = Signature.toLegacy({ r: 1n, s: 2n, yParity: 1 })\n * // @log: { r: 1n, s: 2n, v: 28 }\n * ```\n *\n * @param signature - The {@link ox#Signature.Signature} to convert.\n * @returns The converted {@link ox#Signature.Legacy}.\n */\nexport function toLegacy(signature) {\n    return {\n        r: signature.r,\n        s: signature.s,\n        v: yParityToV(signature.yParity),\n    };\n}\n/**\n * Converts a {@link ox#Signature.Signature} into a {@link ox#Signature.Rpc}.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const signature = Signature.toRpc({\n *   r: 49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n *   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n *   yParity: 1\n * })\n * ```\n *\n * @param signature - The {@link ox#Signature.Signature} to convert.\n * @returns The converted {@link ox#Signature.Rpc}.\n */\nexport function toRpc(signature) {\n    const { r, s, yParity } = signature;\n    return {\n        r: Hex.fromNumber(r, { size: 32 }),\n        s: Hex.fromNumber(s, { size: 32 }),\n        yParity: yParity === 0 ? '0x0' : '0x1',\n    };\n}\n/**\n * Converts a {@link ox#Signature.Signature} to a serialized {@link ox#Signature.Tuple} to be used for signatures in Transaction Envelopes, EIP-7702 Authorization Lists, etc.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const signatureTuple = Signature.toTuple({\n *   r: 123n,\n *   s: 456n,\n *   yParity: 1,\n * })\n * // @log: [yParity: '0x01', r: '0x7b', s: '0x1c8']\n * ```\n *\n * @param signature - The {@link ox#Signature.Signature} to convert.\n * @returns The {@link ox#Signature.Tuple}.\n */\nexport function toTuple(signature) {\n    const { r, s, yParity } = signature;\n    return [\n        yParity ? '0x01' : '0x',\n        r === 0n ? '0x' : Hex.trimLeft(Hex.fromNumber(r)),\n        s === 0n ? '0x' : Hex.trimLeft(Hex.fromNumber(s)),\n    ];\n}\n/**\n * Validates a Signature. Returns `true` if the signature is valid, `false` otherwise.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const valid = Signature.validate({\n *   r: -49782753348462494199823712700004552394425719014458918871452329774910450607807n,\n *   s: 33726695977844476214676913201140481102225469284307016937915595756355928419768n,\n *   yParity: 1,\n * })\n * // @log: false\n * ```\n *\n * @param signature - The signature object to assert.\n */\nexport function validate(signature, options = {}) {\n    try {\n        assert(signature, options);\n        return true;\n    }\n    catch {\n        return false;\n    }\n}\n/**\n * Converts a ECDSA `v` value to a `yParity` value.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const yParity = Signature.vToYParity(28)\n * // @log: 1\n * ```\n *\n * @param v - The ECDSA `v` value to convert.\n * @returns The `yParity` value.\n */\nexport function vToYParity(v) {\n    if (v === 0 || v === 27)\n        return 0;\n    if (v === 1 || v === 28)\n        return 1;\n    if (v >= 35)\n        return v % 2 === 0 ? 1 : 0;\n    throw new InvalidVError({ value: v });\n}\n/**\n * Converts a ECDSA `v` value to a `yParity` value.\n *\n * @example\n * ```ts twoslash\n * import { Signature } from 'ox'\n *\n * const v = Signature.yParityToV(1)\n * // @log: 28\n * ```\n *\n * @param yParity - The ECDSA `yParity` value to convert.\n * @returns The `v` value.\n */\nexport function yParityToV(yParity) {\n    if (yParity === 0)\n        return 27;\n    if (yParity === 1)\n        return 28;\n    throw new InvalidYParityError({ value: yParity });\n}\n/** Thrown when the serialized signature is of an invalid size. */\nexport class InvalidSerializedSizeError extends Errors.BaseError {\n    constructor({ signature }) {\n        super(`Value \\`${signature}\\` is an invalid signature size.`, {\n            metaMessages: [\n                'Expected: 64 bytes or 65 bytes.',\n                `Received ${Hex.size(Hex.from(signature))} bytes.`,\n            ],\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Signature.InvalidSerializedSizeError'\n        });\n    }\n}\n/** Thrown when the signature is missing either an `r`, `s`, or `yParity` property. */\nexport class MissingPropertiesError extends Errors.BaseError {\n    constructor({ signature }) {\n        super(`Signature \\`${Json.stringify(signature)}\\` is missing either an \\`r\\`, \\`s\\`, or \\`yParity\\` property.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Signature.MissingPropertiesError'\n        });\n    }\n}\n/** Thrown when the signature has an invalid `r` value. */\nexport class InvalidRError extends Errors.BaseError {\n    constructor({ value }) {\n        super(`Value \\`${value}\\` is an invalid r value. r must be a positive integer less than 2^256.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Signature.InvalidRError'\n        });\n    }\n}\n/** Thrown when the signature has an invalid `s` value. */\nexport class InvalidSError extends Errors.BaseError {\n    constructor({ value }) {\n        super(`Value \\`${value}\\` is an invalid s value. s must be a positive integer less than 2^256.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Signature.InvalidSError'\n        });\n    }\n}\n/** Thrown when the signature has an invalid `yParity` value. */\nexport class InvalidYParityError extends Errors.BaseError {\n    constructor({ value }) {\n        super(`Value \\`${value}\\` is an invalid y-parity value. Y-parity must be 0 or 1.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Signature.InvalidYParityError'\n        });\n    }\n}\n/** Thrown when the signature has an invalid `v` value. */\nexport class InvalidVError extends Errors.BaseError {\n    constructor({ value }) {\n        super(`Value \\`${value}\\` is an invalid v value. v must be 27, 28 or >=35.`);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'Signature.InvalidVError'\n        });\n    }\n}\n//# sourceMappingURL=Signature.js.map","import * as Bytes from './Bytes.js';\nimport * as Hex from './Hex.js';\nconst encoder = /*#__PURE__*/ new TextEncoder();\nconst decoder = /*#__PURE__*/ new TextDecoder();\nconst integerToCharacter = /*#__PURE__*/ Object.fromEntries(Array.from('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/').map((a, i) => [i, a.charCodeAt(0)]));\nconst characterToInteger = /*#__PURE__*/ {\n    ...Object.fromEntries(Array.from('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/').map((a, i) => [a.charCodeAt(0), i])),\n    ['='.charCodeAt(0)]: 0,\n    ['-'.charCodeAt(0)]: 62,\n    ['_'.charCodeAt(0)]: 63,\n};\n/**\n * Encodes a {@link ox#Bytes.Bytes} to a Base64-encoded string (with optional padding and/or URL-safe characters).\n *\n * @example\n * ```ts twoslash\n * import { Base64, Bytes } from 'ox'\n *\n * const value = Base64.fromBytes(Bytes.fromString('hello world'))\n * // @log: 'aGVsbG8gd29ybGQ='\n * ```\n *\n * @example\n * ### No Padding\n *\n * Turn off [padding of encoded data](https://datatracker.ietf.org/doc/html/rfc4648#section-3.2) with the `pad` option:\n *\n * ```ts twoslash\n * import { Base64, Bytes } from 'ox'\n *\n * const value = Base64.fromBytes(Bytes.fromString('hello world'), { pad: false })\n * // @log: 'aGVsbG8gd29ybGQ'\n * ```\n *\n * ### URL-safe Encoding\n *\n * Turn on [URL-safe encoding](https://datatracker.ietf.org/doc/html/rfc4648#section-5) (Base64 URL) with the `url` option:\n *\n * ```ts twoslash\n * import { Base64, Bytes } from 'ox'\n *\n * const value = Base64.fromBytes(Bytes.fromString('hello wod'), { url: true })\n * // @log: 'aGVsbG8gd29_77-9ZA=='\n * ```\n *\n * @param value - The byte array to encode.\n * @param options - Encoding options.\n * @returns The Base64 encoded string.\n */\nexport function fromBytes(value, options = {}) {\n    const { pad = true, url = false } = options;\n    const encoded = new Uint8Array(Math.ceil(value.length / 3) * 4);\n    for (let i = 0, j = 0; j < value.length; i += 4, j += 3) {\n        const y = (value[j] << 16) + (value[j + 1] << 8) + (value[j + 2] | 0);\n        encoded[i] = integerToCharacter[y >> 18];\n        encoded[i + 1] = integerToCharacter[(y >> 12) & 0x3f];\n        encoded[i + 2] = integerToCharacter[(y >> 6) & 0x3f];\n        encoded[i + 3] = integerToCharacter[y & 0x3f];\n    }\n    const k = value.length % 3;\n    const end = Math.floor(value.length / 3) * 4 + (k && k + 1);\n    let base64 = decoder.decode(new Uint8Array(encoded.buffer, 0, end));\n    if (pad && k === 1)\n        base64 += '==';\n    if (pad && k === 2)\n        base64 += '=';\n    if (url)\n        base64 = base64.replaceAll('+', '-').replaceAll('/', '_');\n    return base64;\n}\n/**\n * Encodes a {@link ox#Hex.Hex} to a Base64-encoded string (with optional padding and/or URL-safe characters).\n *\n * @example\n * ```ts twoslash\n * import { Base64, Hex } from 'ox'\n *\n * const value = Base64.fromHex(Hex.fromString('hello world'))\n * // @log: 'aGVsbG8gd29ybGQ='\n * ```\n *\n * @example\n * ### No Padding\n *\n * Turn off [padding of encoded data](https://datatracker.ietf.org/doc/html/rfc4648#section-3.2) with the `pad` option:\n *\n * ```ts twoslash\n * import { Base64, Hex } from 'ox'\n *\n * const value = Base64.fromHex(Hex.fromString('hello world'), { pad: false })\n * // @log: 'aGVsbG8gd29ybGQ'\n * ```\n *\n * ### URL-safe Encoding\n *\n * Turn on [URL-safe encoding](https://datatracker.ietf.org/doc/html/rfc4648#section-5) (Base64 URL) with the `url` option:\n *\n * ```ts twoslash\n * import { Base64, Hex } from 'ox'\n *\n * const value = Base64.fromHex(Hex.fromString('hello wod'), { url: true })\n * // @log: 'aGVsbG8gd29_77-9ZA=='\n * ```\n *\n * @param value - The hex value to encode.\n * @param options - Encoding options.\n * @returns The Base64 encoded string.\n */\nexport function fromHex(value, options = {}) {\n    return fromBytes(Bytes.fromHex(value), options);\n}\n/**\n * Encodes a string to a Base64-encoded string (with optional padding and/or URL-safe characters).\n *\n * @example\n * ```ts twoslash\n * import { Base64 } from 'ox'\n *\n * const value = Base64.fromString('hello world')\n * // @log: 'aGVsbG8gd29ybGQ='\n * ```\n *\n * @example\n * ### No Padding\n *\n * Turn off [padding of encoded data](https://datatracker.ietf.org/doc/html/rfc4648#section-3.2) with the `pad` option:\n *\n * ```ts twoslash\n * import { Base64 } from 'ox'\n *\n * const value = Base64.fromString('hello world', { pad: false })\n * // @log: 'aGVsbG8gd29ybGQ'\n * ```\n *\n * ### URL-safe Encoding\n *\n * Turn on [URL-safe encoding](https://datatracker.ietf.org/doc/html/rfc4648#section-5) (Base64 URL) with the `url` option:\n *\n * ```ts twoslash\n * import { Base64 } from 'ox'\n *\n * const value = Base64.fromString('hello wod', { url: true })\n * // @log: 'aGVsbG8gd29_77-9ZA=='\n * ```\n *\n * @param value - The string to encode.\n * @param options - Encoding options.\n * @returns The Base64 encoded string.\n */\nexport function fromString(value, options = {}) {\n    return fromBytes(Bytes.fromString(value), options);\n}\n/**\n * Decodes a Base64-encoded string (with optional padding and/or URL-safe characters) to {@link ox#Bytes.Bytes}.\n *\n * @example\n * ```ts twoslash\n * import { Base64, Bytes } from 'ox'\n *\n * const value = Base64.toBytes('aGVsbG8gd29ybGQ=')\n * // @log: Uint8Array([104, 101, 108, 108, 111, 32, 119, 111, 114, 108, 100])\n * ```\n *\n * @param value - The string, hex value, or byte array to encode.\n * @returns The Base64 decoded {@link ox#Bytes.Bytes}.\n */\nexport function toBytes(value) {\n    const base64 = value.replace(/=+$/, '');\n    const size = base64.length;\n    const decoded = new Uint8Array(size + 3);\n    encoder.encodeInto(base64 + '===', decoded);\n    for (let i = 0, j = 0; i < base64.length; i += 4, j += 3) {\n        const x = (characterToInteger[decoded[i]] << 18) +\n            (characterToInteger[decoded[i + 1]] << 12) +\n            (characterToInteger[decoded[i + 2]] << 6) +\n            characterToInteger[decoded[i + 3]];\n        decoded[j] = x >> 16;\n        decoded[j + 1] = (x >> 8) & 0xff;\n        decoded[j + 2] = x & 0xff;\n    }\n    const decodedSize = (size >> 2) * 3 + (size % 4 && (size % 4) - 1);\n    return new Uint8Array(decoded.buffer, 0, decodedSize);\n}\n/**\n * Decodes a Base64-encoded string (with optional padding and/or URL-safe characters) to {@link ox#Hex.Hex}.\n *\n * @example\n * ```ts twoslash\n * import { Base64, Hex } from 'ox'\n *\n * const value = Base64.toHex('aGVsbG8gd29ybGQ=')\n * // @log: 0x68656c6c6f20776f726c64\n * ```\n *\n * @param value - The string, hex value, or byte array to encode.\n * @returns The Base64 decoded {@link ox#Hex.Hex}.\n */\nexport function toHex(value) {\n    return Hex.fromBytes(toBytes(value));\n}\n/**\n * Decodes a Base64-encoded string (with optional padding and/or URL-safe characters) to a string.\n *\n * @example\n * ```ts twoslash\n * import { Base64 } from 'ox'\n *\n * const value = Base64.toString('aGVsbG8gd29ybGQ=')\n * // @log: 'hello world'\n * ```\n *\n * @param value - The string, hex value, or byte array to encode.\n * @returns The Base64 decoded string.\n */\nexport function toString(value) {\n    return Bytes.toString(toBytes(value));\n}\n//# sourceMappingURL=Base64.js.map","/**\n * Internal module for NIST P256, P384, P521 curves.\n * Do not use for now.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport { sha256, sha384, sha512 } from '@noble/hashes/sha2.js';\nimport { createCurve } from \"./_shortw_utils.js\";\nimport { createHasher } from \"./abstract/hash-to-curve.js\";\nimport { Field } from \"./abstract/modular.js\";\nimport { mapToCurveSimpleSWU, } from \"./abstract/weierstrass.js\";\n// p = 2n**224n * (2n**32n-1n) + 2n**192n + 2n**96n - 1n\n// a = Fp256.create(BigInt('-3'));\nconst p256_CURVE = {\n    p: BigInt('0xffffffff00000001000000000000000000000000ffffffffffffffffffffffff'),\n    n: BigInt('0xffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551'),\n    h: BigInt(1),\n    a: BigInt('0xffffffff00000001000000000000000000000000fffffffffffffffffffffffc'),\n    b: BigInt('0x5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b'),\n    Gx: BigInt('0x6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296'),\n    Gy: BigInt('0x4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5'),\n};\n// p = 2n**384n - 2n**128n - 2n**96n + 2n**32n - 1n\nconst p384_CURVE = {\n    p: BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffffffff0000000000000000ffffffff'),\n    n: BigInt('0xffffffffffffffffffffffffffffffffffffffffffffffffc7634d81f4372ddf581a0db248b0a77aecec196accc52973'),\n    h: BigInt(1),\n    a: BigInt('0xfffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffeffffffff0000000000000000fffffffc'),\n    b: BigInt('0xb3312fa7e23ee7e4988e056be3f82d19181d9c6efe8141120314088f5013875ac656398d8a2ed19d2a85c8edd3ec2aef'),\n    Gx: BigInt('0xaa87ca22be8b05378eb1c71ef320ad746e1d3b628ba79b9859f741e082542a385502f25dbf55296c3a545e3872760ab7'),\n    Gy: BigInt('0x3617de4a96262c6f5d9e98bf9292dc29f8f41dbd289a147ce9da3113b5f0b8c00a60b1ce1d7e819d7a431d7c90ea0e5f'),\n};\n// p = 2n**521n - 1n\nconst p521_CURVE = {\n    p: BigInt('0x1ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff'),\n    n: BigInt('0x01fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa51868783bf2f966b7fcc0148f709a5d03bb5c9b8899c47aebb6fb71e91386409'),\n    h: BigInt(1),\n    a: BigInt('0x1fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc'),\n    b: BigInt('0x0051953eb9618e1c9a1f929a21a0b68540eea2da725b99b315f3b8b489918ef109e156193951ec7e937b1652c0bd3bb1bf073573df883d2c34f1ef451fd46b503f00'),\n    Gx: BigInt('0x00c6858e06b70404e9cd9e3ecb662395b4429c648139053fb521f828af606b4d3dbaa14b5e77efe75928fe1dc127a2ffa8de3348b3c1856a429bf97e7e31c2e5bd66'),\n    Gy: BigInt('0x011839296a789a3bc0045c8a5fb42c7d1bd998f54449579b446817afbd17273e662c97ee72995ef42640c550b9013fad0761353c7086a272c24088be94769fd16650'),\n};\nconst Fp256 = Field(p256_CURVE.p);\nconst Fp384 = Field(p384_CURVE.p);\nconst Fp521 = Field(p521_CURVE.p);\nfunction createSWU(Point, opts) {\n    const map = mapToCurveSimpleSWU(Point.Fp, opts);\n    return (scalars) => map(scalars[0]);\n}\n/** NIST P256 (aka secp256r1, prime256v1) curve, ECDSA and ECDH methods. */\nexport const p256 = createCurve({ ...p256_CURVE, Fp: Fp256, lowS: false }, sha256);\n/** Hashing / encoding to p256 points / field. RFC 9380 methods. */\nexport const p256_hasher = /* @__PURE__ */ (() => {\n    return createHasher(p256.Point, createSWU(p256.Point, {\n        A: p256_CURVE.a,\n        B: p256_CURVE.b,\n        Z: p256.Point.Fp.create(BigInt('-10')),\n    }), {\n        DST: 'P256_XMD:SHA-256_SSWU_RO_',\n        encodeDST: 'P256_XMD:SHA-256_SSWU_NU_',\n        p: p256_CURVE.p,\n        m: 1,\n        k: 128,\n        expand: 'xmd',\n        hash: sha256,\n    });\n})();\n// export const p256_oprf: OPRF = createORPF({\n//   name: 'P256-SHA256',\n//   Point: p256.Point,\n//   hash: sha256,\n//   hashToGroup: p256_hasher.hashToCurve,\n//   hashToScalar: p256_hasher.hashToScalar,\n// });\n/** NIST P384 (aka secp384r1) curve, ECDSA and ECDH methods. */\nexport const p384 = createCurve({ ...p384_CURVE, Fp: Fp384, lowS: false }, sha384);\n/** Hashing / encoding to p384 points / field. RFC 9380 methods. */\nexport const p384_hasher = /* @__PURE__ */ (() => {\n    return createHasher(p384.Point, createSWU(p384.Point, {\n        A: p384_CURVE.a,\n        B: p384_CURVE.b,\n        Z: p384.Point.Fp.create(BigInt('-12')),\n    }), {\n        DST: 'P384_XMD:SHA-384_SSWU_RO_',\n        encodeDST: 'P384_XMD:SHA-384_SSWU_NU_',\n        p: p384_CURVE.p,\n        m: 1,\n        k: 192,\n        expand: 'xmd',\n        hash: sha384,\n    });\n})();\n// export const p384_oprf: OPRF = createORPF({\n//   name: 'P384-SHA384',\n//   Point: p384.Point,\n//   hash: sha384,\n//   hashToGroup: p384_hasher.hashToCurve,\n//   hashToScalar: p384_hasher.hashToScalar,\n// });\n// const Fn521 = Field(p521_CURVE.n, { allowedScalarLengths: [65, 66] });\n/** NIST P521 (aka secp521r1) curve, ECDSA and ECDH methods. */\nexport const p521 = createCurve({ ...p521_CURVE, Fp: Fp521, lowS: false, allowedPrivateKeyLengths: [130, 131, 132] }, sha512);\n/** @deprecated use `p256` for consistency with `p256_hasher` */\nexport const secp256r1 = p256;\n/** @deprecated use `p384` for consistency with `p384_hasher` */\nexport const secp384r1 = p384;\n/** @deprecated use `p521` for consistency with `p521_hasher` */\nexport const secp521r1 = p521;\n/** Hashing / encoding to p521 points / field. RFC 9380 methods. */\nexport const p521_hasher = /* @__PURE__ */ (() => {\n    return createHasher(p521.Point, createSWU(p521.Point, {\n        A: p521_CURVE.a,\n        B: p521_CURVE.b,\n        Z: p521.Point.Fp.create(BigInt('-4')),\n    }), {\n        DST: 'P521_XMD:SHA-512_SSWU_RO_',\n        encodeDST: 'P521_XMD:SHA-512_SSWU_NU_',\n        p: p521_CURVE.p,\n        m: 1,\n        k: 256,\n        expand: 'xmd',\n        hash: sha512,\n    });\n})();\n// export const p521_oprf: OPRF = createORPF({\n//   name: 'P521-SHA512',\n//   Point: p521.Point,\n//   hash: sha512,\n//   hashToGroup: p521_hasher.hashToCurve,\n//   hashToScalar: p521_hasher.hashToScalar, // produces L=98 just like in RFC\n// });\n//# sourceMappingURL=nist.js.map","/**\n * NIST secp256r1 aka p256.\n * @module\n */\n/*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) */\nimport {} from \"./abstract/hash-to-curve.js\";\nimport { p256_hasher, p256 as p256n } from \"./nist.js\";\n/** @deprecated use `import { p256 } from '@noble/curves/nist.js';` */\nexport const p256 = p256n;\n/** @deprecated use `import { p256 } from '@noble/curves/nist.js';` */\nexport const secp256r1 = p256n;\n/** @deprecated use `import { p256_hasher } from '@noble/curves/nist.js';` */\nexport const hashToCurve = /* @__PURE__ */ (() => p256_hasher.hashToCurve)();\n/** @deprecated use `import { p256_hasher } from '@noble/curves/nist.js';` */\nexport const encodeToCurve = /* @__PURE__ */ (() => p256_hasher.encodeToCurve)();\n//# sourceMappingURL=p256.js.map","import * as Base64 from './Base64.js';\nimport * as Bytes from './Bytes.js';\nimport * as Errors from './Errors.js';\nimport * as Hash from './Hash.js';\nimport * as Hex from './Hex.js';\nimport * as P256 from './P256.js';\nimport * as internal from './internal/webauthn.js';\nexport const createChallenge = Uint8Array.from([\n    105, 171, 180, 181, 160, 222, 75, 198, 42, 42, 32, 31, 141, 37, 186, 233,\n]);\n/**\n * Creates a new WebAuthn P256 Credential, which can be stored and later used for signing.\n *\n * @example\n * ```ts twoslash\n * import { WebAuthnP256 } from 'ox'\n *\n * const credential = await WebAuthnP256.createCredential({ name: 'Example' }) // [!code focus]\n * // @log: {\n * // @log:   id: 'oZ48...',\n * // @log:   publicKey: { x: 51421...5123n, y: 12345...6789n },\n * // @log:   raw: PublicKeyCredential {},\n * // @log: }\n *\n * const { metadata, signature } = await WebAuthnP256.sign({\n *   credentialId: credential.id,\n *   challenge: '0xdeadbeef',\n * })\n * ```\n *\n * @param options - Credential creation options.\n * @returns A WebAuthn P256 credential.\n */\nexport async function createCredential(options) {\n    const { createFn = window.navigator.credentials.create.bind(window.navigator.credentials), ...rest } = options;\n    const creationOptions = getCredentialCreationOptions(rest);\n    try {\n        const credential = (await createFn(creationOptions));\n        if (!credential)\n            throw new CredentialCreationFailedError();\n        const response = credential.response;\n        const publicKey = await internal.parseCredentialPublicKey(response);\n        return {\n            id: credential.id,\n            publicKey,\n            raw: credential,\n        };\n    }\n    catch (error) {\n        throw new CredentialCreationFailedError({\n            cause: error,\n        });\n    }\n}\n/**\n * Gets the authenticator data which contains information about the\n * processing of an authenticator request (ie. from `WebAuthnP256.sign`).\n *\n * :::warning\n *\n * This function is mainly for testing purposes or for manually constructing\n * autenticator data. In most cases you will not need this function.\n * `authenticatorData` is typically returned as part of the\n * {@link ox#WebAuthnP256.(sign:function)} response (ie. an authenticator response).\n *\n * :::\n *\n * @example\n * ```ts twoslash\n * import { WebAuthnP256 } from 'ox'\n *\n * const authenticatorData = WebAuthnP256.getAuthenticatorData({\n *   rpId: 'example.com',\n *   signCount: 420,\n * })\n * // @log: \"0xa379a6f6eeafb9a55e378c118034e2751e682fab9f2d30ab13d2125586ce194705000001a4\"\n * ```\n *\n * @param options - Options to construct the authenticator data.\n * @returns The authenticator data.\n */\nexport function getAuthenticatorData(options = {}) {\n    const { flag = 5, rpId = window.location.hostname, signCount = 0 } = options;\n    const rpIdHash = Hash.sha256(Hex.fromString(rpId));\n    const flag_bytes = Hex.fromNumber(flag, { size: 1 });\n    const signCount_bytes = Hex.fromNumber(signCount, { size: 4 });\n    return Hex.concat(rpIdHash, flag_bytes, signCount_bytes);\n}\n/**\n * Constructs the Client Data in stringified JSON format which represents client data that\n * was passed to `credentials.get()` in {@link ox#WebAuthnP256.(sign:function)}.\n *\n * :::warning\n *\n * This function is mainly for testing purposes or for manually constructing\n * client data. In most cases you will not need this function.\n * `clientDataJSON` is typically returned as part of the\n * {@link ox#WebAuthnP256.(sign:function)} response (ie. an authenticator response).\n *\n * :::\n *\n * @example\n * ```ts twoslash\n * import { WebAuthnP256 } from 'ox'\n *\n * const clientDataJSON = WebAuthnP256.getClientDataJSON({\n *   challenge: '0xdeadbeef',\n *   origin: 'https://example.com',\n * })\n * // @log: \"{\"type\":\"webauthn.get\",\"challenge\":\"3q2-7w\",\"origin\":\"https://example.com\",\"crossOrigin\":false}\"\n * ```\n *\n * @param options - Options to construct the client data.\n * @returns The client data.\n */\nexport function getClientDataJSON(options) {\n    const { challenge, crossOrigin = false, extraClientData, origin = window.location.origin, } = options;\n    return JSON.stringify({\n        type: 'webauthn.get',\n        challenge: Base64.fromHex(challenge, { url: true, pad: false }),\n        origin,\n        crossOrigin,\n        ...extraClientData,\n    });\n}\n/**\n * Returns the creation options for a P256 WebAuthn Credential to be used with\n * the Web Authentication API.\n *\n * @example\n * ```ts twoslash\n * import { WebAuthnP256 } from 'ox'\n *\n * const options = WebAuthnP256.getCredentialCreationOptions({ name: 'Example' })\n *\n * const credential = await window.navigator.credentials.create(options)\n * ```\n *\n * @param options - Options.\n * @returns The credential creation options.\n */\nexport function getCredentialCreationOptions(options) {\n    const { attestation = 'none', authenticatorSelection = {\n        residentKey: 'preferred',\n        requireResidentKey: false,\n        userVerification: 'required',\n    }, challenge = createChallenge, excludeCredentialIds, name: name_, rp = {\n        id: window.location.hostname,\n        name: window.document.title,\n    }, user, extensions, } = options;\n    const name = (user?.name ?? name_);\n    return {\n        publicKey: {\n            attestation,\n            authenticatorSelection,\n            challenge,\n            ...(excludeCredentialIds\n                ? {\n                    excludeCredentials: excludeCredentialIds?.map((id) => ({\n                        id: Base64.toBytes(id),\n                        type: 'public-key',\n                    })),\n                }\n                : {}),\n            pubKeyCredParams: [\n                {\n                    type: 'public-key',\n                    alg: -7, // p256\n                },\n            ],\n            rp,\n            user: {\n                id: user?.id ?? Hash.keccak256(Bytes.fromString(name), { as: 'Bytes' }),\n                name,\n                displayName: user?.displayName ?? name,\n            },\n            extensions,\n        },\n    };\n}\n/**\n * Returns the request options to sign a challenge with the Web Authentication API.\n *\n * @example\n * ```ts twoslash\n * import { WebAuthnP256 } from 'ox'\n *\n * const options = WebAuthnP256.getCredentialRequestOptions({\n *   challenge: '0xdeadbeef',\n * })\n *\n * const credential = await window.navigator.credentials.get(options)\n * ```\n *\n * @param options - Options.\n * @returns The credential request options.\n */\nexport function getCredentialRequestOptions(options) {\n    const { credentialId, challenge, rpId = window.location.hostname, userVerification = 'required', } = options;\n    return {\n        publicKey: {\n            ...(credentialId\n                ? {\n                    allowCredentials: [\n                        {\n                            id: Base64.toBytes(credentialId),\n                            type: 'public-key',\n                        },\n                    ],\n                }\n                : {}),\n            challenge: Bytes.fromHex(challenge),\n            rpId,\n            userVerification,\n        },\n    };\n}\n/**\n * Constructs the final digest that was signed and computed by the authenticator. This payload includes\n * the cryptographic `challenge`, as well as authenticator metadata (`authenticatorData` + `clientDataJSON`).\n * This value can be also used with raw P256 verification (such as {@link ox#P256.(verify:function)} or\n * {@link ox#WebCryptoP256.(verify:function)}).\n *\n * :::warning\n *\n * This function is mainly for testing purposes or for manually constructing\n * signing payloads. In most cases you will not need this function and\n * instead use {@link ox#WebAuthnP256.(sign:function)}.\n *\n * :::\n *\n * @example\n * ```ts twoslash\n * import { WebAuthnP256, WebCryptoP256 } from 'ox'\n *\n * const { metadata, payload } = WebAuthnP256.getSignPayload({ // [!code focus]\n *   challenge: '0xdeadbeef', // [!code focus]\n * }) // [!code focus]\n * // @log: {\n * // @log:   metadata: {\n * // @log:     authenticatorData: \"0x49960de5880e8c687434170f6476605b8fe4aeb9a28632c7995cf3ba831d97630500000000\",\n * // @log:     challengeIndex: 23,\n * // @log:     clientDataJSON: \"{\"type\":\"webauthn.get\",\"challenge\":\"9jEFijuhEWrM4SOW-tChJbUEHEP44VcjcJ-Bqo1fTM8\",\"origin\":\"http://localhost:5173\",\"crossOrigin\":false}\",\n * // @log:     typeIndex: 1,\n * // @log:     userVerificationRequired: true,\n * // @log:   },\n * // @log:   payload: \"0x49960de5880e8c687434170f6476605b8fe4aeb9a28632c7995cf3ba831d9763050000000045086dcb06a5f234db625bcdc94e657f86b76b6fd3eb9c30543eabc1e577a4b0\",\n * // @log: }\n *\n * const { publicKey, privateKey } = await WebCryptoP256.createKeyPair()\n *\n * const signature = await WebCryptoP256.sign({\n *   payload,\n *   privateKey,\n * })\n * ```\n *\n * @param options - Options to construct the signing payload.\n * @returns The signing payload.\n */\nexport function getSignPayload(options) {\n    const { challenge, crossOrigin, extraClientData, flag, origin, rpId, signCount, userVerification = 'required', } = options;\n    const authenticatorData = getAuthenticatorData({\n        flag,\n        rpId,\n        signCount,\n    });\n    const clientDataJSON = getClientDataJSON({\n        challenge,\n        crossOrigin,\n        extraClientData,\n        origin,\n    });\n    const clientDataJSONHash = Hash.sha256(Hex.fromString(clientDataJSON));\n    const challengeIndex = clientDataJSON.indexOf('\"challenge\"');\n    const typeIndex = clientDataJSON.indexOf('\"type\"');\n    const metadata = {\n        authenticatorData,\n        clientDataJSON,\n        challengeIndex,\n        typeIndex,\n        userVerificationRequired: userVerification === 'required',\n    };\n    const payload = Hex.concat(authenticatorData, clientDataJSONHash);\n    return { metadata, payload };\n}\n/**\n * Signs a challenge using a stored WebAuthn P256 Credential. If no Credential is provided,\n * a prompt will be displayed for the user to select an existing Credential\n * that was previously registered.\n *\n * @example\n * ```ts twoslash\n * import { WebAuthnP256 } from 'ox'\n *\n * const credential = await WebAuthnP256.createCredential({\n *   name: 'Example',\n * })\n *\n * const { metadata, signature } = await WebAuthnP256.sign({ // [!code focus]\n *   credentialId: credential.id, // [!code focus]\n *   challenge: '0xdeadbeef', // [!code focus]\n * }) // [!code focus]\n * // @log: {\n * // @log:   metadata: {\n * // @log:     authenticatorData: '0x49960de5880e8c687434170f6476605b8fe4aeb9a28632c7995cf3ba831d97630500000000',\n * // @log:     clientDataJSON: '{\"type\":\"webauthn.get\",\"challenge\":\"9jEFijuhEWrM4SOW-tChJbUEHEP44VcjcJ-Bqo1fTM8\",\"origin\":\"http://localhost:5173\",\"crossOrigin\":false}',\n * // @log:     challengeIndex: 23,\n * // @log:     typeIndex: 1,\n * // @log:     userVerificationRequired: true,\n * // @log:   },\n * // @log:   signature: { r: 51231...4215n, s: 12345...6789n },\n * // @log: }\n * ```\n *\n * @param options - Options.\n * @returns The signature.\n */\nexport async function sign(options) {\n    const { getFn = window.navigator.credentials.get.bind(window.navigator.credentials), ...rest } = options;\n    const requestOptions = getCredentialRequestOptions(rest);\n    try {\n        const credential = (await getFn(requestOptions));\n        if (!credential)\n            throw new CredentialRequestFailedError();\n        const response = credential.response;\n        const clientDataJSON = String.fromCharCode(...new Uint8Array(response.clientDataJSON));\n        const challengeIndex = clientDataJSON.indexOf('\"challenge\"');\n        const typeIndex = clientDataJSON.indexOf('\"type\"');\n        const signature = internal.parseAsn1Signature(new Uint8Array(response.signature));\n        return {\n            metadata: {\n                authenticatorData: Hex.fromBytes(new Uint8Array(response.authenticatorData)),\n                clientDataJSON,\n                challengeIndex,\n                typeIndex,\n                userVerificationRequired: requestOptions.publicKey.userVerification === 'required',\n            },\n            signature,\n            raw: credential,\n        };\n    }\n    catch (error) {\n        throw new CredentialRequestFailedError({\n            cause: error,\n        });\n    }\n}\n/**\n * Verifies a signature using the Credential's public key and the challenge which was signed.\n *\n * @example\n * ```ts twoslash\n * import { WebAuthnP256 } from 'ox'\n *\n * const credential = await WebAuthnP256.createCredential({\n *   name: 'Example',\n * })\n *\n * const { metadata, signature } = await WebAuthnP256.sign({\n *   credentialId: credential.id,\n *   challenge: '0xdeadbeef',\n * })\n *\n * const result = await WebAuthnP256.verify({ // [!code focus]\n *   metadata, // [!code focus]\n *   challenge: '0xdeadbeef', // [!code focus]\n *   publicKey: credential.publicKey, // [!code focus]\n *   signature, // [!code focus]\n * }) // [!code focus]\n * // @log: true\n * ```\n *\n * @param options - Options.\n * @returns Whether the signature is valid.\n */\nexport function verify(options) {\n    const { challenge, hash = true, metadata, publicKey, signature } = options;\n    const { authenticatorData, challengeIndex, clientDataJSON, typeIndex, userVerificationRequired, } = metadata;\n    const authenticatorDataBytes = Bytes.fromHex(authenticatorData);\n    // Check length of `authenticatorData`.\n    if (authenticatorDataBytes.length < 37)\n        return false;\n    const flag = authenticatorDataBytes[32];\n    // Verify that the UP bit of the flags in authData is set.\n    if ((flag & 0x01) !== 0x01)\n        return false;\n    // If user verification was determined to be required, verify that\n    // the UV bit of the flags in authData is set. Otherwise, ignore the\n    // value of the UV flag.\n    if (userVerificationRequired && (flag & 0x04) !== 0x04)\n        return false;\n    // If the BE bit of the flags in authData is not set, verify that\n    // the BS bit is not set.\n    if ((flag & 0x08) !== 0x08 && (flag & 0x10) === 0x10)\n        return false;\n    // Check that response is for an authentication assertion\n    const type = '\"type\":\"webauthn.get\"';\n    if (type !== clientDataJSON.slice(Number(typeIndex), type.length + 1))\n        return false;\n    // Check that hash is in the clientDataJSON.\n    const match = clientDataJSON\n        .slice(Number(challengeIndex))\n        .match(/^\"challenge\":\"(.*?)\"/);\n    if (!match)\n        return false;\n    // Validate the challenge in the clientDataJSON.\n    const [_, challenge_extracted] = match;\n    if (Hex.fromBytes(Base64.toBytes(challenge_extracted)) !== challenge)\n        return false;\n    const clientDataJSONHash = Hash.sha256(Bytes.fromString(clientDataJSON), {\n        as: 'Bytes',\n    });\n    const payload = Bytes.concat(authenticatorDataBytes, clientDataJSONHash);\n    return P256.verify({\n        hash,\n        payload,\n        publicKey,\n        signature,\n    });\n}\n/** Thrown when a WebAuthn P256 credential creation fails. */\nexport class CredentialCreationFailedError extends Errors.BaseError {\n    constructor({ cause } = {}) {\n        super('Failed to create credential.', {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'WebAuthnP256.CredentialCreationFailedError'\n        });\n    }\n}\n/** Thrown when a WebAuthn P256 credential request fails. */\nexport class CredentialRequestFailedError extends Errors.BaseError {\n    constructor({ cause } = {}) {\n        super('Failed to request credential.', {\n            cause,\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 'WebAuthnP256.CredentialRequestFailedError'\n        });\n    }\n}\n//# sourceMappingURL=WebAuthnP256.js.map","import { p256 } from '@noble/curves/p256';\nimport * as Bytes from './Bytes.js';\nimport * as PublicKey from './PublicKey.js';\n/**\n * Generates an ECDSA P256 key pair that includes:\n *\n * - a `privateKey` of type [`CryptoKey`](https://developer.mozilla.org/en-US/docs/Web/API/CryptoKey)\n *\n * - a `publicKey` of type {@link ox#Hex.Hex} or {@link ox#Bytes.Bytes}\n *\n * @example\n * ```ts twoslash\n * import { WebCryptoP256 } from 'ox'\n *\n * const { publicKey, privateKey } = await WebCryptoP256.createKeyPair()\n * // @log: {\n * // @log:   privateKey: CryptoKey {},\n * // @log:   publicKey: {\n * // @log:     x: 59295962801117472859457908919941473389380284132224861839820747729565200149877n,\n * // @log:     y: 24099691209996290925259367678540227198235484593389470330605641003500238088869n,\n * // @log:     prefix: 4,\n * // @log:   },\n * // @log: }\n * ```\n *\n * @param options - Options for creating the key pair.\n * @returns The key pair.\n */\nexport async function createKeyPair(options = {}) {\n    const { extractable = false } = options;\n    const keypair = await globalThis.crypto.subtle.generateKey({\n        name: 'ECDSA',\n        namedCurve: 'P-256',\n    }, extractable, ['sign', 'verify']);\n    const publicKey_raw = await globalThis.crypto.subtle.exportKey('raw', keypair.publicKey);\n    const publicKey = PublicKey.from(new Uint8Array(publicKey_raw));\n    return {\n        privateKey: keypair.privateKey,\n        publicKey,\n    };\n}\n/**\n * Signs a payload with the provided `CryptoKey` private key and returns a P256 signature.\n *\n * @example\n * ```ts twoslash\n * import { WebCryptoP256 } from 'ox'\n *\n * const { privateKey } = await WebCryptoP256.createKeyPair()\n *\n * const signature = await WebCryptoP256.sign({ // [!code focus]\n *   payload: '0xdeadbeef', // [!code focus]\n *   privateKey, // [!code focus]\n * }) // [!code focus]\n * // @log: {\n * // @log:   r: 151231...4423n,\n * // @log:   s: 516123...5512n,\n * // @log: }\n * ```\n *\n * @param options - Options for signing the payload.\n * @returns The P256 ECDSA {@link ox#Signature.Signature}.\n */\nexport async function sign(options) {\n    const { payload, privateKey } = options;\n    const signature = await globalThis.crypto.subtle.sign({\n        name: 'ECDSA',\n        hash: 'SHA-256',\n    }, privateKey, Bytes.from(payload));\n    const signature_bytes = Bytes.fromArray(new Uint8Array(signature));\n    const r = Bytes.toBigInt(Bytes.slice(signature_bytes, 0, 32));\n    let s = Bytes.toBigInt(Bytes.slice(signature_bytes, 32, 64));\n    if (s > p256.CURVE.n / 2n)\n        s = p256.CURVE.n - s;\n    return { r, s };\n}\n/**\n * Verifies a payload was signed by the provided public key.\n *\n * @example\n *\n * ```ts twoslash\n * import { WebCryptoP256 } from 'ox'\n *\n * const { privateKey, publicKey } = await WebCryptoP256.createKeyPair()\n * const signature = await WebCryptoP256.sign({ payload: '0xdeadbeef', privateKey })\n *\n * const verified = await WebCryptoP256.verify({ // [!code focus]\n *   payload: '0xdeadbeef', // [!code focus]\n *   publicKey, // [!code focus]\n *   signature, // [!code focus]\n * }) // [!code focus]\n * // @log: true\n * ```\n *\n * @param options - The verification options.\n * @returns Whether the payload was signed by the provided public key.\n */\nexport async function verify(options) {\n    const { payload, signature } = options;\n    const publicKey = await globalThis.crypto.subtle.importKey('raw', PublicKey.toBytes(options.publicKey), { name: 'ECDSA', namedCurve: 'P-256' }, true, ['verify']);\n    return await globalThis.crypto.subtle.verify({\n        name: 'ECDSA',\n        hash: 'SHA-256',\n    }, publicKey, Bytes.concat(Bytes.fromNumber(signature.r), Bytes.fromNumber(signature.s)), Bytes.from(payload));\n}\n//# sourceMappingURL=WebCryptoP256.js.map","function promisifyRequest(request) {\n    return new Promise((resolve, reject) => {\n        // @ts-ignore - file size hacks\n        request.oncomplete = request.onsuccess = () => resolve(request.result);\n        // @ts-ignore - file size hacks\n        request.onabort = request.onerror = () => reject(request.error);\n    });\n}\nfunction createStore(dbName, storeName) {\n    const request = indexedDB.open(dbName);\n    request.onupgradeneeded = () => request.result.createObjectStore(storeName);\n    const dbp = promisifyRequest(request);\n    return (txMode, callback) => dbp.then((db) => callback(db.transaction(storeName, txMode).objectStore(storeName)));\n}\nlet defaultGetStoreFunc;\nfunction defaultGetStore() {\n    if (!defaultGetStoreFunc) {\n        defaultGetStoreFunc = createStore('keyval-store', 'keyval');\n    }\n    return defaultGetStoreFunc;\n}\n/**\n * Get a value by its key.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction get(key, customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => promisifyRequest(store.get(key)));\n}\n/**\n * Set a value with a key.\n *\n * @param key\n * @param value\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction set(key, value, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.put(value, key);\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Set multiple values at once. This is faster than calling set() multiple times.\n * It's also atomic – if one of the pairs can't be added, none will be added.\n *\n * @param entries Array of entries, where each entry is an array of `[key, value]`.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction setMany(entries, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        entries.forEach((entry) => store.put(entry[1], entry[0]));\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Get multiple values by their keys\n *\n * @param keys\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction getMany(keys, customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => Promise.all(keys.map((key) => promisifyRequest(store.get(key)))));\n}\n/**\n * Update a value. This lets you see the old value and update it as an atomic operation.\n *\n * @param key\n * @param updater A callback that takes the old value and returns a new value.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction update(key, updater, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => \n    // Need to create the promise manually.\n    // If I try to chain promises, the transaction closes in browsers\n    // that use a promise polyfill (IE10/11).\n    new Promise((resolve, reject) => {\n        store.get(key).onsuccess = function () {\n            try {\n                store.put(updater(this.result), key);\n                resolve(promisifyRequest(store.transaction));\n            }\n            catch (err) {\n                reject(err);\n            }\n        };\n    }));\n}\n/**\n * Delete a particular key from the store.\n *\n * @param key\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction del(key, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.delete(key);\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Delete multiple keys at once.\n *\n * @param keys List of keys to delete.\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction delMany(keys, customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        keys.forEach((key) => store.delete(key));\n        return promisifyRequest(store.transaction);\n    });\n}\n/**\n * Clear all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction clear(customStore = defaultGetStore()) {\n    return customStore('readwrite', (store) => {\n        store.clear();\n        return promisifyRequest(store.transaction);\n    });\n}\nfunction eachCursor(store, callback) {\n    store.openCursor().onsuccess = function () {\n        if (!this.result)\n            return;\n        callback(this.result);\n        this.result.continue();\n    };\n    return promisifyRequest(store.transaction);\n}\n/**\n * Get all keys in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction keys(customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => {\n        // Fast path for modern browsers\n        if (store.getAllKeys) {\n            return promisifyRequest(store.getAllKeys());\n        }\n        const items = [];\n        return eachCursor(store, (cursor) => items.push(cursor.key)).then(() => items);\n    });\n}\n/**\n * Get all values in the store.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction values(customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => {\n        // Fast path for modern browsers\n        if (store.getAll) {\n            return promisifyRequest(store.getAll());\n        }\n        const items = [];\n        return eachCursor(store, (cursor) => items.push(cursor.value)).then(() => items);\n    });\n}\n/**\n * Get all entries in the store. Each entry is an array of `[key, value]`.\n *\n * @param customStore Method to get a custom store. Use with caution (see the docs).\n */\nfunction entries(customStore = defaultGetStore()) {\n    return customStore('readonly', (store) => {\n        // Fast path for modern browsers\n        // (although, hopefully we'll get a simpler path some day)\n        if (store.getAll && store.getAllKeys) {\n            return Promise.all([\n                promisifyRequest(store.getAllKeys()),\n                promisifyRequest(store.getAll()),\n            ]).then(([keys, values]) => keys.map((key, i) => [key, values[i]]));\n        }\n        const items = [];\n        return customStore('readonly', (store) => eachCursor(store, (cursor) => items.push([cursor.key, cursor.value])).then(() => items));\n    });\n}\n\nexport { clear, createStore, del, delMany, entries, get, getMany, keys, promisifyRequest, set, setMany, update, values };\n"],"names":["createJSONStorage","getStorage","options","storage","name","_a","parse","str2","str","newValue","toThenable","fn","input","result","onFulfilled","_onRejected","e","_onFulfilled","onRejected","persistImpl","config","baseOptions","set","get","api","state","persistedState","currentState","hasHydrated","hydrationListeners","finishHydrationListeners","args","setItem","savedSetState","replace","configResult","stateFromStorage","hydrate","_b","cb","_a2","postRehydrationCallback","deserializedStorageValue","migration","migrationResult","migrated","migratedState","newOptions","persist","createStoreImpl","createState","listeners","setState","partial","nextState","previousState","listener","getState","initialState","createStore","n","l","u","i","o","r","f","c","s","h","v","p","y","d","w","_","t","g","b","k","x","C","M","P","O","j","S","a","$","N","I","L","V","T","A","F","m","H","q","z","B","D","entryPoint06Abi","getInitCode","userOperation","authorization","factory","factoryData","delegation","concat","toPackedUserOperation","callGasLimit","callData","maxPriorityFeePerGas","maxFeePerGas","paymaster","paymasterData","paymasterPostOpGasLimit","paymasterVerificationGasLimit","sender","signature","verificationGasLimit","accountGasLimits","pad","numberToHex","initCode","gasFees","nonce","paymasterAndData","preVerificationGas","types","getUserOperationTypedData","parameters","chainId","entryPointAddress","packedUserOp","getUserOperationHash","entryPointVersion","hashTypedData","encodeAbiParameters","keccak256","toSmartAccount","implementation","extend","nonceKeyManager","createNonceManager","rest","deployed","address","key","readContract","parseAbi","getAction","getCode","serializeErc6492Signature","AccountNotDeployedError","BaseError","cause","ExecutionRevertedError","data","message","reason","FailedToSendToBeneficiaryError","GasValuesOverflowError","HandleOpsOutOfGasError","InitCodeFailedError","InitCodeMustCreateSenderError","InitCodeMustReturnSenderError","InsufficientPrefundError","InternalCallOnlyError","InvalidAggregatorError","InvalidAccountNonceError","InvalidBeneficiaryError","InvalidFieldsError","InvalidPaymasterAndDataError","PaymasterDepositTooLowError","PaymasterFunctionRevertedError","PaymasterNotDeployedError","PaymasterRateLimitError","PaymasterStakeTooLowError","PaymasterPostOpFunctionRevertedError","SenderAlreadyConstructedError","SignatureCheckFailedError","SmartAccountFunctionRevertedError","UnsupportedSignatureAggregatorError","UserOperationExpiredError","UserOperationPaymasterExpiredError","UserOperationSignatureError","UserOperationPaymasterSignatureError","UserOperationRejectedByEntryPointError","UserOperationRejectedByPaymasterError","UserOperationRejectedByOpCodeError","UserOperationOutOfTimeRangeError","UnknownBundlerError","VerificationGasLimitExceededError","VerificationGasLimitTooLowError","UserOperationExecutionError","docsPath","prettyArgs","prettyPrint","formatGwei","UserOperationReceiptNotFoundError","hash","UserOperationNotFoundError","WaitForUserOperationReceiptTimeoutError","bundlerErrors","getBundlerError","err","error","getUserOperationError","calls","revertData","getRevertData","contractCalls","call","getContractError","match","_d","_c","abi","functionName","to","compatContractCalls","decodeErrorResult","acc","ContractFunctionZeroDataError","ContractFunctionRevertedError","ContractFunctionExecutionError","formatUserOperationGas","gas","formatUserOperationRequest","request","rpcRequest","formatAuthorization","getPaymasterData","client","context","hexToBigInt","getPaymasterStubData","defaultParameters","prepareUserOperation","parameters_","account_","properties","stateOverride","AccountNotFoundError","account","parseAccount","bundlerClient","paymasterAddress","getPaymasterStubData_","getPaymasterData_","paymasterContext","fees","call_","encodeFunctionData","client_","estimateFeesPerGas","prepareAuthorization","getChainId","getChainId_","isPaymasterPopulated","isFinal","paymasterArgs","estimateUserOperationGas","rpcStateOverride","serializeStateOverride","params","getSupportedEntryPoints","formatUserOperation","getUserOperation","blockHash","blockNumber","entryPoint","transactionHash","formatUserOperationReceipt","receipt","log","formatLog","formatTransactionReceipt","getUserOperationReceipt","sendUserOperation","rpcParameters","waitForUserOperationReceipt","pollingInterval","retryCount","timeout","count","observerId","stringify","resolve","reject","unobserve","observe","emit","done","unpoll","poll","bundlerActions","createBundlerClient","transport","createClient","entryPoint06Address","version","getVersion","shortMessage","details","docs","walk","bigIntSuffix","value","replacer","space","assertSize","bytes","size_","Bytes.size","Bytes.SizeOverflowError","assertStartOffset","start","Bytes.SliceOffsetOutOfBoundsError","assertEndOffset","end","charCodeMap","charCodeToBase16","char","hex","Hex.size","Hex.SizeOverflowError","Hex.SliceOffsetOutOfBoundsError","hex_","dir","size","Hex.SizeExceedsPaddingSizeError","encoder","hexes","_v","assert","strict","InvalidHexTypeError","InvalidHexValueError","values","from","fromBytes","string","internal.assertSize","padRight","fromNumber","signed","value_","maxValue","minValue","suffix","IntegerOutOfRangeError","padLeft","fromString","internal.pad","slice","internal.assertStartOffset","internal.assertEndOffset","toBigInt","max_unsigned","max_signed","validate","Errors.BaseError","max","min","Json.stringify","givenSize","maxSize","offset","position","SizeExceedsPaddingSizeError","targetSize","type","InvalidBytesTypeError","fromHex","fromArray","internal_hex.assertSize","Hex.padRight","hexString","length","index","nibbleLeft","internal.charCodeToBase16","nibbleRight","Hex.fromBytes","Hex.toBigInt","SizeOverflowError","SliceOffsetOutOfBoundsError","sha256","as","noble_sha256","Bytes.from","publicKey","compressed","prefix","InvalidPrefixError","InvalidUncompressedPrefixError","InvalidCompressedPrefixError","InvalidError","Hex.validate","Bytes.validate","InvalidSerializedSizeError","Hex.slice","toHex","includePrefix","Hex.concat","Hex.fromNumber","Hex.from","maxUint256","recovered","MissingPropertiesError","Solidity.maxUint256","InvalidRError","InvalidSError","InvalidYParityError","yParity","vToYParity","yParityToV","InvalidVError","decoder","integerToCharacter","url","encoded","base64","Bytes.fromHex","p256_CURVE","p384_CURVE","p521_CURVE","Fp256","Field","Fp384","Fp521","p256","createCurve","sha384","sha512","p256n","getAuthenticatorData","flag","rpId","signCount","rpIdHash","Hash.sha256","Hex.fromString","flag_bytes","signCount_bytes","getClientDataJSON","challenge","crossOrigin","extraClientData","origin","Base64.fromHex","getSignPayload","userVerification","authenticatorData","clientDataJSON","clientDataJSONHash","challengeIndex","typeIndex","metadata","payload","createKeyPair","extractable","keypair","publicKey_raw","PublicKey.from","sign","privateKey","signature_bytes","Bytes.fromArray","Bytes.toBigInt","Bytes.slice","promisifyRequest","dbName","storeName","dbp","txMode","callback","db","defaultGetStoreFunc","defaultGetStore","customStore","store","del"],"mappings":"uWAkPA,SAASA,GAAkBC,EAAYC,EAAS,CAC9C,IAAIC,EACJ,GAAI,CACFA,EAAUF,EAAA,CACZ,MAAY,CACV,MACF,CAsBA,MArBuB,CACrB,QAAUG,GAAS,CACjB,IAAIC,EACJ,MAAMC,EAASC,GACTA,IAAS,KACJ,KAEF,KAAK,MAAMA,EAAwB,MAA2B,EAEjEC,GAAOH,EAAKF,EAAQ,QAAQC,CAAI,IAAM,KAAOC,EAAK,KACxD,OAAIG,aAAe,QACVA,EAAI,KAAKF,CAAK,EAEhBA,EAAME,CAAG,CAClB,EACA,QAAS,CAACJ,EAAMK,IAAaN,EAAQ,QACnCC,EACA,KAAK,UAAUK,EAA4B,MAA4B,CAAA,EAEzE,WAAaL,GAASD,EAAQ,WAAWC,CAAI,CAAA,CAGjD,CACA,MAAMM,GAAcC,GAAQC,GAAU,CACpC,GAAI,CACF,MAAMC,EAASF,EAAGC,CAAK,EACvB,OAAIC,aAAkB,QACbA,EAEF,CACL,KAAKC,EAAa,CAChB,OAAOJ,GAAWI,CAAW,EAAED,CAAM,CACvC,EACA,MAAME,EAAa,CACjB,OAAO,IACT,CAAA,CAEJ,OAASC,EAAG,CACV,MAAO,CACL,KAAKC,EAAc,CACjB,OAAO,IACT,EACA,MAAMC,EAAY,CAChB,OAAOR,GAAWQ,CAAU,EAAEF,CAAC,CACjC,CAAA,CAEJ,CACF,EACMG,GAAc,CAACC,EAAQC,IAAgB,CAACC,EAAKC,EAAKC,IAAQ,CAC9D,IAAItB,EAAU,CACZ,QAASF,GAAkB,IAAM,YAAY,EAC7C,WAAayB,GAAUA,EACvB,QAAS,EACT,MAAO,CAACC,EAAgBC,KAAkB,CACxC,GAAGA,EACH,GAAGD,CAAA,GAEL,GAAGL,CAAA,EAEDO,EAAc,GAClB,MAAMC,MAAyC,IACzCC,MAA+C,IACrD,IAAI3B,EAAUD,EAAQ,QACtB,GAAI,CAACC,EACH,OAAOiB,EACL,IAAIW,IAAS,CACX,QAAQ,KACN,uDAAuD7B,EAAQ,IAAI,gDAAA,EAErEoB,EAAI,GAAGS,CAAI,CACb,EACAR,EACAC,CAAA,EAGJ,MAAMQ,EAAU,IAAM,CACpB,MAAMP,EAAQvB,EAAQ,WAAW,CAAE,GAAGqB,EAAA,EAAO,EAC7C,OAAOpB,EAAQ,QAAQD,EAAQ,KAAM,CACnC,MAAAuB,EACA,QAASvB,EAAQ,OAAA,CAClB,CACH,EACM+B,EAAgBT,EAAI,SAC1BA,EAAI,SAAW,CAACC,EAAOS,IAAY,CACjCD,EAAcR,EAAOS,CAAO,EACvBF,EAAA,CACP,EACA,MAAMG,EAAef,EACnB,IAAIW,IAAS,CACXT,EAAI,GAAGS,CAAI,EACNC,EAAA,CACP,EACAT,EACAC,CAAA,EAEFA,EAAI,gBAAkB,IAAMW,EAC5B,IAAIC,EACJ,MAAMC,EAAU,IAAM,CACpB,IAAIhC,EAAIiC,EACR,GAAI,CAACnC,EAAS,OACdyB,EAAc,GACdC,EAAmB,QAASU,GAAO,CACjC,IAAIC,EACJ,OAAOD,GAAIC,EAAMjB,EAAA,IAAU,KAAOiB,EAAML,CAAY,CACtD,CAAC,EACD,MAAMM,IAA4BH,EAAKpC,EAAQ,qBAAuB,KAAO,OAAYoC,EAAG,KAAKpC,GAAUG,EAAKkB,EAAA,IAAU,KAAOlB,EAAK8B,CAAY,IAAM,OACxJ,OAAOzB,GAAWP,EAAQ,QAAQ,KAAKA,CAAO,CAAC,EAAED,EAAQ,IAAI,EAAE,KAAMwC,GAA6B,CAChG,GAAIA,EACF,GAAI,OAAOA,EAAyB,SAAY,UAAYA,EAAyB,UAAYxC,EAAQ,QAAS,CAChH,GAAIA,EAAQ,QAAS,CACnB,MAAMyC,EAAYzC,EAAQ,QACxBwC,EAAyB,MACzBA,EAAyB,OAAA,EAE3B,OAAIC,aAAqB,QAChBA,EAAU,KAAM9B,GAAW,CAAC,GAAMA,CAAM,CAAC,EAE3C,CAAC,GAAM8B,CAAS,CACzB,CACA,QAAQ,MACN,uFAAA,CAEJ,KACE,OAAO,CAAC,GAAOD,EAAyB,KAAK,EAGjD,MAAO,CAAC,GAAO,MAAS,CAC1B,CAAC,EAAE,KAAME,GAAoB,CAC3B,IAAIJ,EACJ,KAAM,CAACK,EAAUC,CAAa,EAAIF,EAMlC,GALAR,EAAmBlC,EAAQ,MACzB4C,GACCN,EAAMjB,MAAU,KAAOiB,EAAML,CAAA,EAEhCb,EAAIc,EAAkB,EAAI,EACtBS,EACF,OAAOb,EAAA,CAEX,CAAC,EAAE,KAAK,IAAM,CACZS,GAA2B,MAAmBA,EAAwBL,EAAkB,MAAS,EACjGA,EAAmBb,EAAA,EACnBK,EAAc,GACdE,EAAyB,QAASS,GAAOA,EAAGH,CAAgB,CAAC,CAC/D,CAAC,EAAE,MAAOpB,GAAM,CACdyB,GAA2B,MAAmBA,EAAwB,OAAWzB,CAAC,CACpF,CAAC,CACH,EACA,OAAAQ,EAAI,QAAU,CACZ,WAAauB,GAAe,CAC1B7C,EAAU,CACR,GAAGA,EACH,GAAG6C,CAAA,EAEDA,EAAW,UACb5C,EAAU4C,EAAW,QAEzB,EACA,aAAc,IAAM,CAClB5C,GAAW,MAAmBA,EAAQ,WAAWD,EAAQ,IAAI,CAC/D,EACA,WAAY,IAAMA,EAClB,UAAW,IAAMmC,EAAA,EACjB,YAAa,IAAMT,EACnB,UAAYW,IACVV,EAAmB,IAAIU,CAAE,EAClB,IAAM,CACXV,EAAmB,OAAOU,CAAE,CAC9B,GAEF,kBAAoBA,IAClBT,EAAyB,IAAIS,CAAE,EACxB,IAAM,CACXT,EAAyB,OAAOS,CAAE,CACpC,EACF,EAEGrC,EAAQ,eACXmC,EAAA,EAEKD,GAAoBD,CAC7B,EACMa,GAAU7B,GC9aV8B,GAAmBC,GAAgB,CACvC,IAAIzB,EACJ,MAAM0B,EAA4B,IAAI,IAChCC,EAAW,CAACC,EAASnB,IAAY,CACrC,MAAMoB,EAAY,OAAOD,GAAY,WAAaA,EAAQ5B,CAAK,EAAI4B,EACnE,GAAI,CAAC,OAAO,GAAGC,EAAW7B,CAAK,EAAG,CAChC,MAAM8B,EAAgB9B,EACtBA,EAASS,IAA4B,OAAOoB,GAAc,UAAYA,IAAc,MAAQA,EAAY,OAAO,OAAO,CAAA,EAAI7B,EAAO6B,CAAS,EAC1IH,EAAU,QAASK,GAAaA,EAAS/B,EAAO8B,CAAa,CAAC,CAChE,CACF,EACME,EAAW,IAAMhC,EAMjBD,EAAM,CAAE,SAAA4B,EAAU,SAAAK,EAAU,gBALV,IAAMC,EAKqB,UAJhCF,IACjBL,EAAU,IAAIK,CAAQ,EACf,IAAML,EAAU,OAAOK,CAAQ,EAEoB,EACtDE,EAAejC,EAAQyB,EAAYE,EAAUK,EAAUjC,CAAG,EAChE,OAAOA,CACT,EACMmC,GAAeT,GAAgBA,EAAcD,GAAgBC,CAAW,EAAID,GCrB/E,IAACW,GAAEC,EAAEC,GAAIC,EAAEC,GAAEC,GAAEC,GAAElD,GAAEmD,GAAEC,GAAIC,EAAE,CAAA,EAAGC,GAAE,CAAA,EAAGC,GAAE,oEAAoEC,GAAE,MAAM,QAAQ,SAASC,EAAEb,EAAEC,EAAE,CAAC,QAAQC,KAAKD,EAAED,EAAEE,CAAC,EAAED,EAAEC,CAAC,EAAE,OAAOF,CAAC,CAAC,SAASc,GAAEd,EAAE,CAACA,GAAGA,EAAE,YAAYA,EAAE,WAAW,YAAYA,CAAC,CAAC,CAAC,SAASe,GAAEd,EAAEC,EAAEc,EAAE,CAAC,IAAIb,EAAEC,EAAEC,EAAEC,EAAE,CAAA,EAAG,IAAID,KAAKH,EAASG,GAAP,MAASF,EAAED,EAAEG,CAAC,EAASA,GAAP,MAASD,EAAEF,EAAEG,CAAC,EAAEC,EAAED,CAAC,EAAEH,EAAEG,CAAC,EAAE,GAAG,UAAU,OAAO,IAAIC,EAAE,SAAS,UAAU,OAAO,EAAEN,GAAE,KAAK,UAAU,CAAC,EAAEgB,GAAe,OAAOf,GAAnB,YAA4BA,EAAE,cAAR,KAAqB,IAAII,KAAKJ,EAAE,aAAsBK,EAAED,CAAC,IAAZ,SAAgBC,EAAED,CAAC,EAAEJ,EAAE,aAAaI,CAAC,GAAG,OAAOY,GAAEhB,EAAEK,EAAEH,EAAEC,EAAE,IAAI,CAAC,CAAC,SAASa,GAAEjB,EAAE,EAAEG,EAAEC,EAAEC,EAAE,CAAC,IAAIC,EAAE,CAAC,KAAKN,EAAE,MAAM,EAAE,IAAIG,EAAE,IAAIC,EAAE,IAAI,KAAK,GAAG,KAAK,IAAI,EAAE,IAAI,KAAK,IAAI,OAAO,IAAI,KAAK,YAAY,OAAO,IAAUC,GAAE,EAAEH,GAAI,IAAI,GAAG,IAAI,CAAC,EAAE,OAAaG,GAAN,MAAeJ,EAAE,OAAR,MAAeA,EAAE,MAAMK,CAAC,EAAEA,CAAC,CAAmC,SAASY,GAAElB,EAAE,CAAC,OAAOA,EAAE,QAAQ,CAAC,SAASmB,GAAEnB,EAAEC,EAAE,CAAC,KAAK,MAAMD,EAAE,KAAK,QAAQC,CAAC,CAAC,SAASmB,EAAEpB,EAAEC,EAAE,CAAC,GAASA,GAAN,KAAQ,OAAOD,EAAE,GAAGoB,EAAEpB,EAAE,GAAGA,EAAE,IAAI,CAAC,EAAE,KAAK,QAAQE,EAAED,EAAED,EAAE,IAAI,OAAOC,IAAI,IAAUC,EAAEF,EAAE,IAAIC,CAAC,IAAhB,MAA0BC,EAAE,KAAR,KAAY,OAAOA,EAAE,IAAI,OAAkB,OAAOF,EAAE,MAArB,WAA0BoB,EAAEpB,CAAC,EAAE,IAAI,CAAC,SAASqB,GAAErB,EAAE,CAAC,IAAIC,EAAEC,EAAE,IAAUF,EAAEA,EAAE,KAAX,MAAsBA,EAAE,KAAR,KAAY,CAAC,IAAIA,EAAE,IAAIA,EAAE,IAAI,KAAK,KAAKC,EAAE,EAAEA,EAAED,EAAE,IAAI,OAAOC,IAAI,IAAUC,EAAEF,EAAE,IAAIC,CAAC,IAAhB,MAA0BC,EAAE,KAAR,KAAY,CAACF,EAAE,IAAIA,EAAE,IAAI,KAAKE,EAAE,IAAI,KAAK,CAAC,OAAOmB,GAAErB,CAAC,CAAC,CAAC,CAAC,SAASsB,GAAEtB,EAAE,EAAE,CAACA,EAAE,MAAMA,EAAE,IAAI,KAAKG,EAAE,KAAKH,CAAC,GAAG,CAACuB,GAAE,OAAOnB,KAAIH,EAAE,sBAAsBG,GAAEH,EAAE,oBAAoBI,IAAGkB,EAAC,CAAC,CAAC,SAASA,IAAG,CAAC,IAAIvB,EAAEE,EAAEc,EAAEZ,EAAEC,EAAEjD,EAAEmD,EAAEC,EAAE,IAAIL,EAAE,KAAKG,EAAC,EAAEN,EAAEG,EAAE,MAAK,GAAIH,EAAE,MAAME,EAAEC,EAAE,OAAOC,EAAE,OAAOhD,GAAGiD,GAAGW,EAAEhB,GAAG,KAAK,IAAIO,EAAE,CAAA,EAAGC,EAAE,CAAA,EAAGQ,EAAE,OAAOZ,EAAES,EAAE,CAAA,EAAGR,CAAC,GAAG,IAAIA,EAAE,IAAI,EAAEJ,EAAE,OAAOA,EAAE,MAAMG,CAAC,EAAEoB,GAAER,EAAE,IAAIZ,EAAEC,EAAEW,EAAE,IAAIA,EAAE,IAAI,aAAa,GAAGX,EAAE,IAAI,CAACjD,CAAC,EAAE,KAAKmD,EAAQnD,GAAEgE,EAAEf,CAAC,EAAI,CAAC,EAAE,GAAGA,EAAE,KAAKG,CAAC,EAAEJ,EAAE,IAAIC,EAAE,IAAID,EAAE,GAAG,IAAIA,EAAE,GAAG,EAAEA,EAAEqB,GAAElB,EAAEH,EAAEI,CAAC,EAAEJ,EAAE,KAAKhD,GAAGiE,GAAEjB,CAAC,GAAGD,EAAE,OAAOD,GAAGC,EAAE,KAAKG,EAAC,GAAGiB,GAAE,IAAI,CAAC,CAAC,SAASG,GAAE1B,EAAEC,EAAEC,EAAEc,EAAEb,EAAEC,EAAEC,EAAE,EAAEjD,EAAEmD,EAAEC,EAAE,CAAC,IAAImB,EAAEhB,EAAEC,EAAEC,EAAEC,EAAEC,EAAEC,GAAGA,EAAE,KAAKN,GAAEO,EAAEhB,EAAE,OAAO,IAAIC,EAAE,IAAI9C,EAAEwE,GAAE1B,EAAED,EAAEc,CAAC,EAAE3D,EAAE8C,EAAE,IAAIyB,EAAE,EAAEA,EAAEV,EAAEU,KAAWf,EAAEV,EAAE,IAAIyB,CAAC,IAAhB,OAAqBhB,EAAOC,EAAE,MAAP,GAAWH,EAAEM,EAAEH,EAAE,GAAG,GAAGH,EAAEG,EAAE,IAAIe,EAAEH,GAAExB,EAAEY,EAAED,EAAER,EAAEC,EAAEC,EAAE,EAAEjD,EAAEmD,EAAEC,CAAC,EAAEK,EAAED,EAAE,IAAIA,EAAE,KAAKD,EAAE,KAAKC,EAAE,MAAMD,EAAE,KAAKkB,GAAElB,EAAE,IAAI,KAAKC,CAAC,EAAEJ,EAAE,KAAKI,EAAE,IAAIA,EAAE,KAAKC,EAAED,CAAC,GAASE,GAAN,MAAeD,GAAN,OAAUC,EAAED,GAAG,MAAMD,EAAE,KAAKD,EAAE,MAAMC,EAAE,IAAIxD,EAAE0E,GAAElB,EAAExD,EAAE4C,CAAC,EAAc,OAAOY,EAAE,MAArB,YAAoCA,EAAE,MAAX,OAAexD,EAAEwD,EAAE,IAAIC,IAAIzD,EAAEyD,EAAE,aAAaD,EAAE,IAAI,OAAOA,EAAE,KAAK,SAASV,EAAE,IAAI9C,EAAE8C,EAAE,IAAIY,CAAC,CAAC,SAASc,GAAE5B,EAAEC,EAAEC,EAAE,CAAC,IAAIc,EAAEb,EAAEC,EAAEC,EAAE,EAAEjD,EAAE6C,EAAE,OAAOM,EAAEL,EAAE,OAAOM,EAAED,EAAEoB,EAAE,EAAE,IAAI3B,EAAE,IAAI,CAAA,EAAGgB,EAAE,EAAEA,EAAE5D,EAAE4D,KAAWb,EAAEF,EAAEe,CAAC,IAAZ,MAA2B,OAAOb,GAAlB,WAAiC,OAAOA,GAAnB,YAAsBE,EAAEW,EAAEW,GAAGxB,EAAEH,EAAE,IAAIgB,CAAC,EAAY,OAAOb,GAAjB,UAA8B,OAAOA,GAAjB,UAA8B,OAAOA,GAAjB,UAAoBA,EAAE,aAAa,OAAOc,GAAE,KAAKd,EAAE,KAAK,KAAK,IAAI,EAAES,GAAET,CAAC,EAAEc,GAAEC,GAAE,CAAC,SAASf,CAAC,EAAE,KAAK,KAAK,IAAI,EAAWA,EAAE,cAAX,QAAwBA,EAAE,IAAI,EAAEc,GAAEd,EAAE,KAAKA,EAAE,MAAMA,EAAE,IAAIA,EAAE,IAAIA,EAAE,IAAI,KAAKA,EAAE,GAAG,EAAEA,GAAG,GAAGH,EAAEG,EAAE,IAAIH,EAAE,IAAI,EAAEI,EAAE,MAAW,EAAED,EAAE,IAAI4B,GAAE5B,EAAED,EAAEG,EAAEG,CAAC,KAAvB,KAA4BA,KAAKJ,EAAEF,EAAE,CAAC,KAAKE,EAAE,KAAK,SAAeA,GAAN,MAAgBA,EAAE,MAAT,MAAkB,GAAJ,IAAOuB,IAAgB,OAAOxB,EAAE,MAArB,aAA4BA,EAAE,KAAK,QAAQ,IAAIE,IAAI,GAAGA,EAAE,EAAEsB,IAAI,GAAGtB,EAAE,EAAEsB,KAAK,EAAEtB,EAAEsB,IAAIA,IAAIxB,EAAE,KAAK,SAASA,EAAEH,EAAE,IAAIgB,CAAC,EAAE,KAAK,GAAGR,EAAE,IAAIQ,EAAE,EAAEA,EAAET,EAAES,KAAWZ,EAAEF,EAAEc,CAAC,IAAZ,MAAoB,SAAOZ,EAAE,OAAOA,EAAE,KAAKJ,EAAE,MAAMA,EAAE,IAAIoB,EAAEhB,CAAC,GAAG4B,GAAE5B,EAAEA,CAAC,EAAE,CAAC,SAAS0B,GAAE9B,EAAEC,EAAEC,EAAE,CAAC,IAAIc,EAAEb,EAAE,GAAe,OAAOH,EAAE,MAArB,WAA0B,CAAC,IAAIgB,EAAEhB,EAAE,IAAIG,EAAE,EAAEa,GAAGb,EAAEa,EAAE,OAAOb,IAAIa,EAAEb,CAAC,IAAIa,EAAEb,CAAC,EAAE,GAAGH,EAAEC,EAAE6B,GAAEd,EAAEb,CAAC,EAAEF,EAAEC,CAAC,GAAG,OAAOD,CAAC,CAACD,EAAE,KAAKC,IAAIA,GAAGD,EAAE,MAAM,CAACE,EAAE,SAASD,CAAC,IAAIA,EAAEmB,EAAEpB,CAAC,GAAGE,EAAE,aAAaF,EAAE,IAAIC,GAAG,IAAI,EAAEA,EAAED,EAAE,KAAK,GAAGC,EAAEA,GAAGA,EAAE,kBAAwBA,GAAN,MAAaA,EAAE,WAAN,GAAgB,OAAOA,CAAC,CAA6G,SAAS8B,GAAE/B,EAAEC,EAAEC,EAAEc,EAAE,CAAC,IAAIb,EAAEH,EAAE,IAAII,EAAEJ,EAAE,KAAKK,EAAEH,EAAE,EAAE,EAAEA,EAAE,EAAE9C,EAAE6C,EAAEC,CAAC,EAAE,GAAU9C,IAAP,MAAUA,GAAG+C,GAAG/C,EAAE,KAAKgD,IAAIhD,EAAE,MAAU,SAAOA,EAAE,KAAK,OAAO8C,EAAE,GAAGc,GAAS5D,GAAN,MAAa,SAAOA,EAAE,KAAK,EAAE,GAAG,KAAKiD,GAAG,GAAG,EAAEJ,EAAE,QAAQ,CAAC,GAAGI,GAAG,EAAE,CAAC,IAAIjD,EAAE6C,EAAEI,CAAC,IAAQ,SAAOjD,EAAE,MAAM+C,GAAG/C,EAAE,KAAKgD,IAAIhD,EAAE,KAAK,OAAOiD,EAAEA,GAAG,CAAC,GAAG,EAAEJ,EAAE,OAAO,CAAC,IAAI7C,EAAE6C,EAAE,CAAC,IAAQ,SAAO7C,EAAE,MAAM+C,GAAG/C,EAAE,KAAKgD,IAAIhD,EAAE,KAAK,OAAO,EAAE,GAAG,CAAC,CAAC,MAAM,EAAE,CAAC,SAAS6E,GAAEjC,EAAEC,EAAEC,EAAE,CAAOD,EAAE,CAAC,IAAT,IAAWD,EAAE,YAAYC,EAAQC,GAAE,EAAI,EAAEF,EAAEC,CAAC,EAAQC,GAAN,KAAQ,GAAa,OAAOA,GAAjB,UAAoBS,GAAE,KAAKV,CAAC,EAAEC,EAAEA,EAAE,IAAI,CAAC,SAASgC,EAAElC,EAAEC,EAAEC,EAAEc,EAAEb,EAAE,CAAC,IAAIC,EAAEJ,EAAE,GAAaC,IAAV,QAAY,GAAa,OAAOC,GAAjB,SAAmBF,EAAE,MAAM,QAAQE,MAAM,CAAC,GAAa,OAAOc,GAAjB,WAAqBhB,EAAE,MAAM,QAAQgB,EAAE,IAAIA,EAAE,IAAIf,KAAKe,EAAEd,GAAGD,KAAKC,GAAG+B,GAAEjC,EAAE,MAAMC,EAAE,EAAE,EAAE,GAAGC,EAAE,IAAID,KAAKC,EAAEc,GAAGd,EAAED,CAAC,IAAIe,EAAEf,CAAC,GAAGgC,GAAEjC,EAAE,MAAMC,EAAEC,EAAED,CAAC,CAAC,CAAC,SAAeA,EAAE,CAAC,IAAT,KAAkBA,EAAE,CAAC,IAAT,IAAWG,EAAEH,KAAKA,EAAEA,EAAE,QAAQ,8BAA8B,IAAI,GAAGA,EAAEA,EAAE,YAAW,IAAKD,GAAkBC,IAAf,cAAgCA,IAAd,YAAgBA,EAAE,cAAc,MAAM,CAAC,EAAEA,EAAE,MAAM,CAAC,EAAED,EAAE,IAAIA,EAAE,EAAE,CAAA,GAAIA,EAAE,EAAEC,EAAEG,CAAC,EAAEF,EAAEA,EAAEc,EAAEd,EAAE,EAAEc,EAAE,GAAGd,EAAE,EAAE9C,GAAE4C,EAAE,iBAAiBC,EAAEG,EAAEI,GAAED,GAAEH,CAAC,GAAGJ,EAAE,oBAAoBC,EAAEG,EAAEI,GAAED,GAAEH,CAAC,MAAM,CAAC,GAAiCD,GAA9B,6BAAgCF,EAAEA,EAAE,QAAQ,cAAc,GAAG,EAAE,QAAQ,SAAS,GAAG,UAAmBA,GAAT,SAAsBA,GAAV,UAAqBA,GAAR,QAAmBA,GAAR,QAAmBA,GAAR,QAAuBA,GAAZ,YAA2BA,GAAZ,YAA0BA,GAAX,WAAyBA,GAAX,WAAsBA,GAAR,QAAsBA,GAAX,WAAcA,KAAKD,EAAE,GAAG,CAACA,EAAEC,CAAC,EAAQC,GAAE,GAAK,MAAMF,CAAC,MAAS,CAAC,CAAa,OAAOE,GAAnB,aAA6BA,GAAN,MAAcA,IAAL,IAAcD,EAAE,CAAC,IAAT,IAAWD,EAAE,gBAAgBC,CAAC,EAAED,EAAE,aAAaC,EAAaA,GAAX,WAAiBC,GAAH,EAAK,GAAGA,CAAC,EAAE,CAAC,CAAC,SAASiC,GAAEnC,EAAE,CAAC,OAAO,SAASE,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,IAAIc,EAAE,KAAK,EAAEd,EAAE,KAAKF,CAAC,EAAE,GAASE,EAAE,GAAR,KAAUA,EAAE,EAAE9C,aAAY8C,EAAE,EAAEc,EAAE,EAAE,OAAO,OAAOA,EAAEf,EAAE,MAAMA,EAAE,MAAMC,CAAC,EAAEA,CAAC,CAAC,CAAC,CAAC,CAAC,SAASsB,GAAExB,EAAEE,EAAEc,EAAEb,EAAEC,EAAEC,EAAEC,EAAElD,EAAE,EAAEoD,EAAE,CAAC,IAAImB,EAAElB,EAAEC,EAAEC,EAAEG,EAAEC,EAAEE,EAAEmB,EAAEhB,EAAEC,EAAEC,EAAEC,EAAEK,EAAEE,EAAEO,EAAEN,EAAEE,EAAE/B,EAAE,KAAK,GAAYA,EAAE,cAAX,OAAuB,OAAO,KAAK,IAAIc,EAAE,MAAM,EAAE,CAAC,EAAE,GAAGA,EAAE,KAAKX,EAAE,CAACjD,EAAE8C,EAAE,IAAIc,EAAE,GAAG,IAAIW,EAAE1B,EAAE,MAAM0B,EAAEzB,CAAC,EAAEF,EAAE,GAAe,OAAOiC,GAAnB,WAAqB,GAAG,CAAC,GAAGG,EAAElC,EAAE,MAAMkB,EAAE,cAAca,GAAGA,EAAE,UAAU,OAAOZ,GAAGM,EAAEM,EAAE,cAAc9B,EAAEwB,EAAE,GAAG,EAAEL,EAAEK,EAAEN,EAAEA,EAAE,MAAM,MAAMM,EAAE,GAAGxB,EAAEa,EAAE,IAAIC,GAAGR,EAAEP,EAAE,IAAIc,EAAE,KAAK,GAAGP,EAAE,KAAKW,EAAElB,EAAE,IAAIO,EAAE,IAAIwB,EAAEG,EAAEd,CAAC,GAAGpB,EAAE,IAAIO,EAAE,IAAIU,GAAEiB,EAAEd,CAAC,EAAEb,EAAE,YAAYwB,EAAExB,EAAE,OAAO6B,IAAGjB,GAAGA,EAAE,IAAIZ,CAAC,EAAEA,EAAE,MAAM2B,EAAE3B,EAAE,QAAQA,EAAE,MAAM,CAAA,GAAIA,EAAE,QAAQa,EAAEb,EAAE,IAAIN,EAAEO,EAAED,EAAE,IAAI,GAAGA,EAAE,IAAI,CAAA,EAAGA,EAAE,IAAI,CAAA,GAAIW,GAASX,EAAE,KAAR,OAAcA,EAAE,IAAIA,EAAE,OAAOW,GAASa,EAAE,0BAAR,OAAmCxB,EAAE,KAAKA,EAAE,QAAQA,EAAE,IAAII,EAAE,CAAA,EAAGJ,EAAE,GAAG,GAAGI,EAAEJ,EAAE,IAAIwB,EAAE,yBAAyBG,EAAE3B,EAAE,GAAG,CAAC,GAAGE,EAAEF,EAAE,MAAMK,EAAEL,EAAE,MAAMA,EAAE,IAAIP,EAAEQ,EAAEU,GAASa,EAAE,0BAAR,MAAwCxB,EAAE,oBAAR,MAA4BA,EAAE,qBAAqBW,GAASX,EAAE,mBAAR,MAA2BA,EAAE,IAAI,KAAKA,EAAE,iBAAiB,MAAM,CAAC,GAAGW,GAASa,EAAE,0BAAR,MAAkCG,IAAIzB,GAASF,EAAE,2BAAR,MAAmCA,EAAE,0BAA0B2B,EAAEd,CAAC,EAAE,CAACb,EAAE,MAAYA,EAAE,uBAAR,MAAoCA,EAAE,sBAAsB2B,EAAE3B,EAAE,IAAIa,CAAC,IAAtC,IAAyCpB,EAAE,MAAMc,EAAE,KAAK,CAAC,IAAId,EAAE,MAAMc,EAAE,MAAMP,EAAE,MAAM2B,EAAE3B,EAAE,MAAMA,EAAE,IAAIA,EAAE,IAAI,IAAIP,EAAE,IAAIc,EAAE,IAAId,EAAE,IAAIc,EAAE,IAAId,EAAE,IAAI,KAAK,SAASF,EAAE,CAACA,IAAIA,EAAE,GAAGE,EAAE,CAAC,EAAEqB,EAAE,EAAEA,EAAEd,EAAE,IAAI,OAAOc,IAAId,EAAE,IAAI,KAAKA,EAAE,IAAIc,CAAC,CAAC,EAAEd,EAAE,IAAI,CAAA,EAAGA,EAAE,IAAI,QAAQH,EAAE,KAAKG,CAAC,EAAE,MAAMT,CAAC,CAAOS,EAAE,qBAAR,MAA6BA,EAAE,oBAAoB2B,EAAE3B,EAAE,IAAIa,CAAC,EAAEF,GAASX,EAAE,oBAAR,MAA4BA,EAAE,IAAI,KAAK,UAAU,CAACA,EAAE,mBAAmBE,EAAEG,EAAEC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAGN,EAAE,QAAQa,EAAEb,EAAE,MAAM2B,EAAE3B,EAAE,IAAIT,EAAES,EAAE,IAAI,GAAGmB,EAAE3B,EAAE,IAAI6B,EAAE,EAAEV,EAAE,CAAC,IAAIX,EAAE,MAAMA,EAAE,IAAIA,EAAE,IAAI,GAAGmB,GAAGA,EAAE1B,CAAC,EAAEyB,EAAElB,EAAE,OAAOA,EAAE,MAAMA,EAAE,MAAMA,EAAE,OAAO,EAAE4B,EAAE,EAAEA,EAAE5B,EAAE,IAAI,OAAO4B,IAAI5B,EAAE,IAAI,KAAKA,EAAE,IAAI4B,CAAC,CAAC,EAAE5B,EAAE,IAAI,CAAA,CAAE,KAAM,IAAGA,EAAE,IAAI,GAAGmB,GAAGA,EAAE1B,CAAC,EAAEyB,EAAElB,EAAE,OAAOA,EAAE,MAAMA,EAAE,MAAMA,EAAE,OAAO,EAAEA,EAAE,MAAMA,EAAE,UAAUA,EAAE,KAAK,EAAEqB,EAAE,IAAIrB,EAAE,MAAMA,EAAE,IAAUA,EAAE,iBAAR,OAA0BN,EAAEU,EAAEA,EAAE,CAAA,EAAGV,CAAC,EAAEM,EAAE,gBAAe,CAAE,GAAGW,GAAG,CAACV,GAASD,EAAE,yBAAR,OAAkCM,EAAEN,EAAE,wBAAwBE,EAAEG,CAAC,GAAGY,GAAE1B,EAAEY,GAAEmB,EAAQJ,GAAN,MAASA,EAAE,OAAOT,IAASS,EAAE,KAAR,KAAYA,EAAE,MAAM,SAASA,CAAC,EAAEI,EAAE,CAACA,CAAC,EAAE7B,EAAEc,EAAEb,EAAEC,EAAEC,EAAEC,EAAElD,EAAE,EAAEoD,CAAC,EAAEC,EAAE,KAAKP,EAAE,IAAIA,EAAE,KAAK,KAAKO,EAAE,IAAI,QAAQH,EAAE,KAAKG,CAAC,EAAEQ,IAAIR,EAAE,IAAIA,EAAE,GAAG,KAAK,OAAOT,EAAE,CAAC,GAAGE,EAAE,IAAI,KAAK,GAASG,GAAN,KAAQ,CAAC,IAAIH,EAAE,KAAK,EAAE,IAAI,GAAG9C,GAAOA,EAAE,WAAN,GAAgBA,EAAE,aAAaA,EAAEA,EAAE,YAAYiD,EAAEA,EAAE,QAAQjD,CAAC,CAAC,EAAE,KAAK8C,EAAE,IAAI9C,CAAC,MAAM8C,EAAE,IAAIc,EAAE,IAAId,EAAE,IAAIc,EAAE,IAAIf,EAAE,IAAID,EAAEE,EAAEc,CAAC,CAAC,MAAYX,GAAN,MAASH,EAAE,MAAMc,EAAE,KAAKd,EAAE,IAAIc,EAAE,IAAId,EAAE,IAAIc,EAAE,KAAKd,EAAE,IAAIqC,GAAEvB,EAAE,IAAId,EAAEc,EAAEb,EAAEC,EAAEC,EAAEC,EAAE,EAAEE,CAAC,GAAGmB,EAAE1B,EAAE,SAAS0B,EAAEzB,CAAC,CAAC,CAAC,SAASuB,GAAEzB,EAAEE,EAAEc,EAAE,CAACd,EAAE,IAAI,OAAO,QAAQC,EAAE,EAAEA,EAAEa,EAAE,OAAOb,IAAI0B,GAAEb,EAAEb,CAAC,EAAEa,EAAE,EAAEb,CAAC,EAAEa,EAAE,EAAEb,CAAC,CAAC,EAAEF,EAAE,KAAKA,EAAE,IAAIC,EAAEF,CAAC,EAAEA,EAAE,KAAK,SAASE,EAAE,CAAC,GAAG,CAACF,EAAEE,EAAE,IAAIA,EAAE,IAAI,CAAA,EAAGF,EAAE,KAAK,SAASA,EAAE,CAACA,EAAE,KAAKE,CAAC,CAAC,CAAC,CAAC,OAAOF,EAAE,CAACC,EAAE,IAAID,EAAEE,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,SAASqC,GAAErC,EAAE,EAAEC,EAAEC,EAAEC,EAAEC,EAAElD,EAAEmD,EAAEC,EAAE,CAAC,IAAImB,EAAEjB,EAAEC,EAAEE,EAAEE,EAAE,EAAE,EAAEG,EAAEf,EAAE,MAAMgB,EAAE,EAAE,MAAME,EAAE,EAAE,KAAK,GAAWA,IAAR,MAAUhB,EAAE,6BAAsCgB,IAAT,OAAWhB,EAAE,qCAAqCA,IAAIA,EAAE,gCAAsCC,GAAN,MAAQ,IAAIqB,EAAE,EAAEA,EAAErB,EAAE,OAAOqB,IAAI,IAAIZ,EAAET,EAAEqB,CAAC,IAAI,iBAAiBZ,GAAG,CAAC,CAACM,IAAIA,EAAEN,EAAE,YAAYM,EAAMN,EAAE,WAAN,GAAgB,CAACb,EAAEa,EAAET,EAAEqB,CAAC,EAAE,KAAK,KAAK,EAAC,GAASzB,GAAN,KAAQ,CAAC,GAAUmB,IAAP,KAAS,OAAO,SAAS,eAAeF,CAAC,EAAEjB,EAAE,SAAS,gBAAgBG,EAAEgB,EAAEF,EAAE,IAAIA,CAAC,EAAEZ,IAAIN,EAAE,KAAKA,EAAE,IAAI,EAAEK,CAAC,EAAEC,EAAE,IAAID,EAAE,IAAI,CAAC,GAAUe,IAAP,KAASH,IAAIC,GAAGZ,GAAGL,EAAE,OAAOiB,IAAIjB,EAAE,KAAKiB,OAAO,CAAC,GAAGb,EAAEA,GAAGN,GAAE,KAAKE,EAAE,UAAU,EAAEgB,EAAEf,EAAE,OAAOM,EAAE,CAACF,GAASD,GAAN,KAAQ,IAAIY,EAAE,CAAA,EAAGS,EAAE,EAAEA,EAAEzB,EAAE,WAAW,OAAOyB,IAAIT,GAAGH,EAAEb,EAAE,WAAWyB,CAAC,GAAG,IAAI,EAAEZ,EAAE,MAAM,IAAIY,KAAKT,EAAE,GAAGH,EAAEG,EAAES,CAAC,EAAcA,GAAZ,YAAoB,GAA8BA,GAA3B,0BAA6BhB,EAAEI,UAAU,EAAEY,KAAKR,GAAG,CAAC,GAAYQ,GAAT,SAAY,iBAAiBR,GAAcQ,GAAX,WAAc,mBAAmBR,EAAE,SAASe,EAAEhC,EAAEyB,EAAE,KAAKZ,EAAEV,CAAC,CAAC,EAAC,IAAIsB,KAAKR,EAAEJ,EAAEI,EAAEQ,CAAC,EAAcA,GAAZ,WAAcd,EAAEE,EAA6BY,GAA3B,0BAA6BjB,EAAEK,EAAWY,GAAT,QAAW,EAAEZ,EAAaY,GAAX,UAAa,EAAEZ,EAAER,GAAe,OAAOQ,GAAnB,YAAsBG,EAAES,CAAC,IAAIZ,GAAGmB,EAAEhC,EAAEyB,EAAEZ,EAAEG,EAAES,CAAC,EAAEtB,CAAC,EAAE,GAAGK,EAAEH,GAAGI,IAAID,EAAE,SAASC,EAAE,QAAQD,EAAE,SAASR,EAAE,aAAaA,EAAE,UAAUQ,EAAE,QAAQ,EAAE,IAAI,CAAA,UAAWC,IAAIT,EAAE,UAAU,IAAIwB,GAAExB,EAAEU,GAAEC,CAAC,EAAEA,EAAE,CAACA,CAAC,EAAE,EAAEV,EAAEC,EAAoBiB,IAAlB,gBAAoB,+BAA+BhB,EAAEC,EAAElD,EAAEkD,EAAEA,EAAE,CAAC,EAAEH,EAAE,KAAKiB,EAAEjB,EAAE,CAAC,EAAEI,EAAEC,CAAC,EAAQF,GAAN,KAAQ,IAAIqB,EAAErB,EAAE,OAAOqB,KAAKb,GAAER,EAAEqB,CAAC,CAAC,EAAEpB,IAAIoB,EAAE,QAAqBN,IAAb,YAAsB,GAAN,KAAQnB,EAAE,gBAAgB,OAAO,EAAW,IAAT,SAAa,IAAIA,EAAEyB,CAAC,GAAgBN,IAAb,YAAgB,CAAC,GAAcA,IAAX,UAAc,IAAIH,EAAES,CAAC,IAAIO,EAAEhC,EAAEyB,EAAE,EAAET,EAAES,CAAC,EAAEtB,CAAC,EAAEsB,EAAE,UAAmB,IAAT,QAAY,IAAIzB,EAAEyB,CAAC,GAAGO,EAAEhC,EAAEyB,EAAE,EAAET,EAAES,CAAC,EAAEtB,CAAC,EAAE,CAAC,OAAOH,CAAC,CAAC,SAAS2B,GAAE7B,EAAEE,EAAEc,EAAE,CAAC,GAAG,CAAC,GAAe,OAAOhB,GAAnB,WAAqB,CAAC,IAAIG,EAAc,OAAOH,EAAE,KAArB,WAAyBG,GAAGH,EAAE,IAAG,EAAGG,GAASD,GAAN,OAAUF,EAAE,IAAIA,EAAEE,CAAC,EAAE,MAAMF,EAAE,QAAQE,CAAC,OAAOF,EAAE,CAACC,EAAE,IAAID,EAAEgB,CAAC,CAAC,CAAC,CAAC,SAASgB,GAAEhC,EAAEE,EAAEc,EAAE,CAAC,IAAIb,EAAEC,EAAE,GAAGH,EAAE,SAASA,EAAE,QAAQD,CAAC,GAAGG,EAAEH,EAAE,OAAOG,EAAE,SAASA,EAAE,UAAUH,EAAE,KAAK6B,GAAE1B,EAAE,KAAKD,CAAC,IAAUC,EAAEH,EAAE,MAAX,KAAgB,CAAC,GAAGG,EAAE,qBAAqB,GAAG,CAACA,EAAE,qBAAoB,CAAE,OAAOH,EAAE,CAACC,EAAE,IAAID,EAAEE,CAAC,CAAC,CAACC,EAAE,KAAKA,EAAE,IAAI,IAAI,CAAC,GAAGA,EAAEH,EAAE,IAAI,IAAII,EAAE,EAAEA,EAAED,EAAE,OAAOC,IAAID,EAAEC,CAAC,GAAG4B,GAAE7B,EAAEC,CAAC,EAAEF,EAAEc,GAAe,OAAOhB,EAAE,MAArB,UAAyB,EAAEgB,GAAGF,GAAEd,EAAE,GAAG,EAAEA,EAAE,IAAIA,EAAE,GAAGA,EAAE,IAAIA,EAAE,IAAI,MAAM,CAAC,SAASsC,GAAEtC,EAAEC,EAAEC,EAAE,CAAC,OAAO,KAAK,YAAYF,EAAEE,CAAC,CAAC,CAAC,SAASsC,GAAEtC,EAAE,EAAEC,EAAE,CAAC,IAAIC,EAAEC,EAAEC,EAAElD,EAAE6C,EAAE,IAAIA,EAAE,GAAGC,EAAE,CAAC,EAAEG,GAAGD,EAAE,IAAsB,KAAe,EAAE,IAAIE,EAAE,CAAA,EAAGlD,EAAE,GAAGoE,GAAE,EAAEtB,EAAU,EAAG,IAAIa,GAAEG,GAAE,KAAK,CAAChB,CAAC,CAAC,EAAEG,GAAGI,EAAEA,EAAE,EAAE,aAAuBJ,EAAE,KAAK,EAAE,WAAWL,GAAE,KAAK,EAAE,UAAU,EAAE,KAAKM,EAAUD,EAAEA,EAAE,IAAI,EAAE,WAAWD,EAAEhD,CAAC,EAAEqE,GAAEnB,EAAEJ,EAAE9C,CAAC,CAAC,CAAi3B4C,GAAEU,GAAE,MAAMT,EAAE,CAAC,IAAI,SAASD,EAAEC,EAAEC,EAAEc,EAAE,CAAC,QAAQb,EAAEC,EAAEC,EAAEJ,EAAEA,EAAE,IAAI,IAAIE,EAAEF,EAAE,MAAM,CAACE,EAAE,GAAG,GAAG,CAAC,IAAIC,EAAED,EAAE,cAAoBC,EAAE,0BAAR,OAAmCD,EAAE,SAASC,EAAE,yBAAyBJ,CAAC,CAAC,EAAEK,EAAEF,EAAE,KAAWA,EAAE,mBAAR,OAA4BA,EAAE,kBAAkBH,EAAEgB,GAAG,CAAA,CAAE,EAAEX,EAAEF,EAAE,KAAKE,EAAE,OAAOF,EAAE,IAAIA,CAAC,OAAOF,EAAE,CAACD,EAAEC,CAAC,CAAC,MAAMD,CAAC,CAAC,EAAEE,GAAE,EAAqDiB,GAAE,UAAU,SAAS,SAASnB,EAAEC,EAAE,CAAC,IAAIC,EAAEA,EAAQ,KAAK,KAAX,MAAgB,KAAK,MAAM,KAAK,MAAM,KAAK,IAAI,KAAK,IAAIW,EAAE,CAAA,EAAG,KAAK,KAAK,EAAc,OAAOb,GAAnB,aAAuBA,EAAEA,EAAEa,EAAE,CAAA,EAAGX,CAAC,EAAE,KAAK,KAAK,GAAGF,GAAGa,EAAEX,EAAEF,CAAC,EAAQA,GAAN,MAAS,KAAK,MAAMC,GAAG,KAAK,IAAI,KAAKA,CAAC,EAAEqB,GAAE,IAAI,EAAE,EAAEH,GAAE,UAAU,YAAY,SAASnB,EAAE,CAAC,KAAK,MAAM,KAAK,IAAI,GAAGA,GAAG,KAAK,IAAI,KAAKA,CAAC,EAAEsB,GAAE,IAAI,EAAE,EAAEH,GAAE,UAAU,OAAOD,GAAEf,EAAE,CAAA,EAAGE,GAAc,OAAO,SAAnB,WAA2B,QAAQ,UAAU,KAAK,KAAK,QAAQ,QAAO,CAAE,EAAE,WAAWC,GAAE,SAASN,EAAEC,EAAE,CAAC,OAAOD,EAAE,IAAI,IAAIC,EAAE,IAAI,GAAG,EAAEsB,GAAE,IAAI,EAAEnE,GAAE,EAAEmD,GAAE4B,GAAE,EAAE,EAAE3B,GAAE2B,GAAE,EAAE,ECAz5V,IAAInB,EAAEX,EAAEH,GAAEC,GAAEC,GAAE,EAAEE,GAAE,CAAA,EAAGC,EAAEP,EAAE5C,GAAEmD,EAAE,IAAIoB,GAAEpB,EAAE,IAAIG,GAAEH,EAAE,OAAON,GAAEM,EAAE,IAAI6B,GAAE7B,EAAE,QAAQC,GAAED,EAAE,GAAG,SAASM,GAAEb,EAAE,EAAE,CAACO,EAAE,KAAKA,EAAE,IAAIF,EAAEL,EAAEI,IAAG,CAAC,EAAEA,GAAE,EAAE,IAAIF,EAAEG,EAAE,MAAMA,EAAE,IAAI,CAAC,GAAG,GAAG,IAAI,CAAA,CAAE,GAAG,OAAOL,GAAGE,EAAE,GAAG,QAAQA,EAAE,GAAG,KAAK,CAAA,CAAE,EAAEA,EAAE,GAAGF,CAAC,CAAC,CAAC,SAASS,GAAET,EAAE,CAAC,OAAOI,GAAE,EAAEO,GAAE8B,GAAEzC,CAAC,CAAC,CAAC,SAASW,GAAEX,EAAEE,EAAEC,EAAE,CAAC,IAAIC,EAAES,GAAEG,IAAI,CAAC,EAAE,GAAGZ,EAAE,EAAEJ,EAAE,CAACI,EAAE,MAAMA,EAAE,GAAG,CAAQqC,GAAE,OAAOvC,CAAC,EAAE,SAASF,EAAE,CAAC,IAAIgB,EAAEZ,EAAE,IAAIA,EAAE,IAAI,CAAC,EAAEA,EAAE,GAAG,CAAC,EAAEC,EAAED,EAAE,EAAEY,EAAEhB,CAAC,EAAEgB,IAAIX,IAAID,EAAE,IAAI,CAACC,EAAED,EAAE,GAAG,CAAC,CAAC,EAAEA,EAAE,IAAI,SAAS,CAAA,CAAE,EAAE,CAAC,EAAEA,EAAE,IAAIC,EAAE,CAACA,EAAE,GAAG,CAAC,IAAIC,EAAE,SAASN,EAAEgB,EAAEX,EAAE,CAAC,GAAG,CAACD,EAAE,IAAI,IAAI,SAAS,IAAIF,EAAEE,EAAE,IAAI,IAAI,GAAG,OAAO,SAASJ,EAAE,CAAC,MAAM,CAAC,CAACA,EAAE,GAAG,CAAC,EAAE,GAAGE,EAAE,MAAM,SAASF,EAAE,CAAC,MAAM,CAACA,EAAE,GAAG,CAAC,EAAE,MAAM,CAACO,GAAGA,EAAE,KAAK,KAAKP,EAAEgB,EAAEX,CAAC,EAAE,IAAIF,EAAE,GAAG,OAAOD,EAAE,QAAQ,SAASF,EAAE,CAAC,GAAGA,EAAE,IAAI,CAAC,IAAIgB,EAAEhB,EAAE,GAAG,CAAC,EAAEA,EAAE,GAAGA,EAAE,IAAIA,EAAE,IAAI,OAAOgB,IAAIhB,EAAE,GAAG,CAAC,IAAIG,EAAE,GAAG,CAAC,CAAC,EAAE,EAAE,CAACA,GAAGC,EAAE,IAAI,QAAQJ,KAAK,CAACO,GAAGA,EAAE,KAAK,KAAKP,EAAEgB,EAAEX,CAAC,EAAE,EAAEA,EAAE,EAAE,GAAG,IAAIE,EAAEF,EAAE,sBAAsBjD,EAAEiD,EAAE,oBAAoBA,EAAE,oBAAoB,SAASL,EAAEgB,EAAEX,EAAE,CAAC,GAAG,KAAK,IAAI,CAAC,IAAIH,EAAEK,EAAEA,EAAE,OAAOD,EAAEN,EAAEgB,EAAEX,CAAC,EAAEE,EAAEL,CAAC,CAAC9C,GAAGA,EAAE,KAAK,KAAK4C,EAAEgB,EAAEX,CAAC,CAAC,EAAEA,EAAE,sBAAsBC,CAAC,CAAC,OAAOF,EAAE,KAAKA,EAAE,EAAE,CAAC,SAASQ,GAAEZ,EAAEE,EAAE,CAAC,IAAIC,EAAEU,GAAEG,IAAI,CAAC,EAAE,CAACT,EAAE,KAAKc,GAAElB,EAAE,IAAID,CAAC,IAAIC,EAAE,GAAGH,EAAEG,EAAE,EAAED,EAAEG,EAAE,IAAI,IAAI,KAAKF,CAAC,EAAE,CAAmU,SAAS8B,GAAEjC,EAAEK,EAAE,CAAC,IAAIH,EAAEW,GAAEG,IAAI,CAAC,EAAE,OAAOK,GAAEnB,EAAE,IAAIG,CAAC,IAAIH,EAAE,GAAGF,EAAC,EAAGE,EAAE,IAAIG,EAAEH,EAAE,IAAIF,GAAGE,EAAE,EAAE,CAAqiB,SAASuB,IAAG,CAAC,QAAQzB,EAAEA,EAAEM,GAAE,MAAK,GAAI,GAAGN,EAAE,KAAKA,EAAE,IAAI,GAAG,CAACA,EAAE,IAAI,IAAI,QAAQuC,EAAC,EAAEvC,EAAE,IAAI,IAAI,QAAQwC,EAAC,EAAExC,EAAE,IAAI,IAAI,CAAA,CAAE,OAAO,EAAE,CAACA,EAAE,IAAI,IAAI,GAAGO,EAAE,IAAI,EAAEP,EAAE,GAAG,CAAC,CAAC,CAACO,EAAE,IAAI,SAASP,EAAE,CAACK,EAAE,KAAKjD,IAAGA,GAAE4C,CAAC,CAAC,EAAEO,EAAE,GAAG,SAASP,EAAE,EAAE,CAACA,GAAG,EAAE,KAAK,EAAE,IAAI,MAAMA,EAAE,IAAI,EAAE,IAAI,KAAKQ,IAAGA,GAAER,EAAE,CAAC,CAAC,EAAEO,EAAE,IAAI,SAASP,EAAE,CAAC2B,IAAGA,GAAE3B,CAAC,EAAEgB,EAAE,EAAE,IAAIb,GAAGE,EAAEL,EAAE,KAAK,IAAIG,IAAID,KAAIG,GAAGF,EAAE,IAAI,CAAA,EAAGE,EAAE,IAAI,CAAA,EAAGF,EAAE,GAAG,QAAQ,SAAS,EAAE,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,MAAM,CAAC,IAAIA,EAAE,IAAI,QAAQoC,EAAC,EAAEpC,EAAE,IAAI,QAAQqC,EAAC,EAAErC,EAAE,IAAI,CAAA,EAAGa,EAAE,IAAId,GAAEG,CAAC,EAAEE,EAAE,OAAO,SAASP,EAAE,CAACU,IAAGA,GAAEV,CAAC,EAAE,IAAI,EAAEA,EAAE,IAAI,GAAG,EAAE,MAAM,EAAE,IAAI,IAAI,SAAaM,GAAE,KAAK,CAAC,IAAZ,GAAeH,KAAII,EAAE,yBAAyBJ,GAAEI,EAAE,wBAAwBO,IAAGW,EAAC,GAAG,EAAE,IAAI,GAAG,QAAQ,SAAS,EAAE,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,EAAE,MAAM,CAAC,GAAGvB,GAAEG,EAAE,IAAI,EAAEE,EAAE,IAAI,SAASP,EAAE,EAAE,CAAC,EAAE,KAAK,SAAS,EAAE,CAAC,GAAG,CAAC,EAAE,IAAI,QAAQuC,EAAC,EAAE,EAAE,IAAI,EAAE,IAAI,OAAO,SAASvC,EAAE,CAAC,MAAM,CAACA,EAAE,IAAIwC,GAAExC,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,EAAE,KAAK,SAASA,EAAE,CAACA,EAAE,MAAMA,EAAE,IAAI,CAAA,EAAG,CAAC,EAAE,EAAE,GAAGO,EAAE,IAAI,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC,EAAEN,IAAGA,GAAED,EAAE,CAAC,CAAC,EAAEO,EAAE,QAAQ,SAASP,EAAE,CAACoC,IAAGA,GAAEpC,CAAC,EAAE,IAAI,EAAEK,EAAEL,EAAE,IAAIK,GAAGA,EAAE,MAAMA,EAAE,IAAI,GAAG,QAAQ,SAASL,EAAE,CAAC,GAAG,CAACuC,GAAEvC,CAAC,CAAC,OAAOA,EAAE,CAAC,EAAEA,CAAC,CAAC,CAAC,EAAEK,EAAE,IAAI,OAAO,GAAGE,EAAE,IAAI,EAAEF,EAAE,GAAG,EAAE,EAAE,IAAIc,GAAc,OAAO,uBAAnB,WAAyC,SAASL,GAAEd,EAAE,CAAC,IAAI,EAAEK,EAAE,UAAU,CAAC,aAAaH,CAAC,EAAEiB,IAAG,qBAAqB,CAAC,EAAE,WAAWnB,CAAC,CAAC,EAAEE,EAAE,WAAWG,EAAE,GAAG,EAAEc,KAAI,EAAE,sBAAsBd,CAAC,EAAE,CAAC,SAASkC,GAAEvC,EAAE,CAAC,IAAI,EAAEK,EAAEH,EAAEF,EAAE,IAAgB,OAAOE,GAAnB,aAAuBF,EAAE,IAAI,OAAOE,EAAC,GAAIG,EAAE,CAAC,CAAC,SAASmC,GAAExC,EAAE,CAAC,IAAI,EAAEK,EAAEL,EAAE,IAAIA,EAAE,GAAE,EAAGK,EAAE,CAAC,CAAC,SAASgB,GAAErB,EAAE,EAAE,CAAC,MAAM,CAACA,GAAGA,EAAE,SAAS,EAAE,QAAQ,EAAE,KAAK,SAASgB,EAAE,EAAE,CAAC,OAAOA,IAAIhB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,SAASyC,GAAEzC,EAAE,EAAE,CAAC,OAAkB,OAAO,GAAnB,WAAqB,EAAEA,CAAC,EAAE,CAAC,CCAz4G,MAAC0C,GAAkB,CAC3B,CACI,OAAQ,CACJ,CAAE,KAAM,WAAY,KAAM,SAAS,EACnC,CAAE,KAAM,OAAQ,KAAM,SAAS,EAC/B,CAAE,KAAM,aAAc,KAAM,QAAQ,EACpC,CAAE,KAAM,aAAc,KAAM,QAAQ,EACpC,CAAE,KAAM,gBAAiB,KAAM,MAAM,EACrC,CAAE,KAAM,eAAgB,KAAM,OAAO,CACjD,EACQ,KAAM,kBACN,KAAM,OACd,EACI,CACI,OAAQ,CACJ,CAAE,KAAM,UAAW,KAAM,SAAS,EAClC,CAAE,KAAM,SAAU,KAAM,QAAQ,CAC5C,EACQ,KAAM,WACN,KAAM,OACd,EACI,CACI,OAAQ,CAAC,CAAE,KAAM,SAAU,KAAM,SAAS,CAAE,EAC5C,KAAM,sBACN,KAAM,OACd,EACI,CACI,OAAQ,CAAC,CAAE,KAAM,aAAc,KAAM,SAAS,CAAE,EAChD,KAAM,4BACN,KAAM,OACd,EACI,CACI,OAAQ,CACJ,CACI,WAAY,CACR,CAAE,KAAM,WAAY,KAAM,SAAS,EACnC,CAAE,KAAM,UAAW,KAAM,SAAS,EAClC,CAAE,KAAM,YAAa,KAAM,MAAM,EACjC,CAAE,KAAM,aAAc,KAAM,QAAQ,EACpC,CAAE,KAAM,aAAc,KAAM,QAAQ,EACpC,CAAE,KAAM,mBAAoB,KAAM,OAAO,CAC7D,EACgB,KAAM,aACN,KAAM,OACtB,EACY,CACI,WAAY,CACR,CAAE,KAAM,QAAS,KAAM,SAAS,EAChC,CAAE,KAAM,kBAAmB,KAAM,SAAS,CAC9D,EACgB,KAAM,aACN,KAAM,OACtB,EACY,CACI,WAAY,CACR,CAAE,KAAM,QAAS,KAAM,SAAS,EAChC,CAAE,KAAM,kBAAmB,KAAM,SAAS,CAC9D,EACgB,KAAM,cACN,KAAM,OACtB,EACY,CACI,WAAY,CACR,CAAE,KAAM,QAAS,KAAM,SAAS,EAChC,CAAE,KAAM,kBAAmB,KAAM,SAAS,CAC9D,EACgB,KAAM,gBACN,KAAM,OACtB,CACA,EACQ,KAAM,mBACN,KAAM,OACd,EACI,CACI,OAAQ,CACJ,CACI,WAAY,CACR,CAAE,KAAM,WAAY,KAAM,SAAS,EACnC,CAAE,KAAM,UAAW,KAAM,SAAS,EAClC,CAAE,KAAM,YAAa,KAAM,MAAM,EACjC,CAAE,KAAM,aAAc,KAAM,QAAQ,EACpC,CAAE,KAAM,aAAc,KAAM,QAAQ,EACpC,CAAE,KAAM,mBAAoB,KAAM,OAAO,CAC7D,EACgB,KAAM,aACN,KAAM,OACtB,EACY,CACI,WAAY,CACR,CAAE,KAAM,QAAS,KAAM,SAAS,EAChC,CAAE,KAAM,kBAAmB,KAAM,SAAS,CAC9D,EACgB,KAAM,aACN,KAAM,OACtB,EACY,CACI,WAAY,CACR,CAAE,KAAM,QAAS,KAAM,SAAS,EAChC,CAAE,KAAM,kBAAmB,KAAM,SAAS,CAC9D,EACgB,KAAM,cACN,KAAM,OACtB,EACY,CACI,WAAY,CACR,CAAE,KAAM,QAAS,KAAM,SAAS,EAChC,CAAE,KAAM,kBAAmB,KAAM,SAAS,CAC9D,EACgB,KAAM,gBACN,KAAM,OACtB,EACY,CACI,WAAY,CACR,CAAE,KAAM,aAAc,KAAM,SAAS,EACrC,CACI,WAAY,CACR,CAAE,KAAM,QAAS,KAAM,SAAS,EAChC,CACI,KAAM,kBACN,KAAM,SACtC,CACA,EACwB,KAAM,YACN,KAAM,OAC9B,CACA,EACgB,KAAM,iBACN,KAAM,OACtB,CACA,EACQ,KAAM,kCACN,KAAM,OACd,EACI,CACI,UAAW,GACX,OAAQ,CACJ,CACI,QAAS,GACT,KAAM,aACN,KAAM,SACtB,EACY,CACI,QAAS,GACT,KAAM,SACN,KAAM,SACtB,EACY,CACI,QAAS,GACT,KAAM,UACN,KAAM,SACtB,EACY,CACI,QAAS,GACT,KAAM,YACN,KAAM,SACtB,CACA,EACQ,KAAM,kBACN,KAAM,OACd,EACI,CAAE,UAAW,GAAO,OAAQ,CAAA,EAAI,KAAM,kBAAmB,KAAM,OAAO,EACtE,CACI,UAAW,GACX,OAAQ,CACJ,CACI,QAAS,GACT,KAAM,UACN,KAAM,SACtB,EACY,CACI,QAAS,GACT,KAAM,eACN,KAAM,SACtB,CACA,EACQ,KAAM,YACN,KAAM,OACd,EACI,CACI,UAAW,GACX,OAAQ,CACJ,CACI,QAAS,GACT,KAAM,aACN,KAAM,SACtB,CACA,EACQ,KAAM,6BACN,KAAM,OACd,EACI,CACI,UAAW,GACX,OAAQ,CACJ,CACI,QAAS,GACT,KAAM,UACN,KAAM,SACtB,EACY,CACI,QAAS,GACT,KAAM,cACN,KAAM,SACtB,EACY,CACI,QAAS,GACT,KAAM,kBACN,KAAM,SACtB,CACA,EACQ,KAAM,cACN,KAAM,OACd,EACI,CACI,UAAW,GACX,OAAQ,CACJ,CACI,QAAS,GACT,KAAM,UACN,KAAM,SACtB,EACY,CACI,QAAS,GACT,KAAM,eACN,KAAM,SACtB,CACA,EACQ,KAAM,gBACN,KAAM,OACd,EACI,CACI,UAAW,GACX,OAAQ,CACJ,CACI,QAAS,GACT,KAAM,UACN,KAAM,SACtB,EACY,CACI,QAAS,GACT,KAAM,kBACN,KAAM,SACtB,EACY,CACI,QAAS,GACT,KAAM,SACN,KAAM,SACtB,CACA,EACQ,KAAM,iBACN,KAAM,OACd,EACI,CACI,UAAW,GACX,OAAQ,CACJ,CACI,QAAS,GACT,KAAM,aACN,KAAM,SACtB,EACY,CACI,QAAS,GACT,KAAM,SACN,KAAM,SACtB,EACY,CACI,QAAS,GACT,KAAM,YACN,KAAM,SACtB,EACY,CACI,QAAS,GACT,KAAM,QACN,KAAM,SACtB,EACY,CAAE,QAAS,GAAO,KAAM,UAAW,KAAM,MAAM,EAC/C,CACI,QAAS,GACT,KAAM,gBACN,KAAM,SACtB,EACY,CACI,QAAS,GACT,KAAM,gBACN,KAAM,SACtB,CACA,EACQ,KAAM,qBACN,KAAM,OACd,EACI,CACI,UAAW,GACX,OAAQ,CACJ,CACI,QAAS,GACT,KAAM,aACN,KAAM,SACtB,EACY,CACI,QAAS,GACT,KAAM,SACN,KAAM,SACtB,EACY,CACI,QAAS,GACT,KAAM,QACN,KAAM,SACtB,EACY,CACI,QAAS,GACT,KAAM,eACN,KAAM,OACtB,CACA,EACQ,KAAM,4BACN,KAAM,OACd,EACI,CACI,UAAW,GACX,OAAQ,CACJ,CACI,QAAS,GACT,KAAM,UACN,KAAM,SACtB,EACY,CACI,QAAS,GACT,KAAM,kBACN,KAAM,SACtB,EACY,CACI,QAAS,GACT,KAAM,SACN,KAAM,SACtB,CACA,EACQ,KAAM,YACN,KAAM,OACd,EACI,CACI,OAAQ,CAAA,EACR,KAAM,wBACN,QAAS,CAAC,CAAE,KAAM,GAAI,KAAM,SAAS,CAAE,EACvC,gBAAiB,OACjB,KAAM,UACd,EACI,CACI,OAAQ,CACJ,CAAE,KAAM,WAA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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47]}