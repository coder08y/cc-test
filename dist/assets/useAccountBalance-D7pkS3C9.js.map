{"version":3,"file":"useAccountBalance-D7pkS3C9.js","sources":["../../../hooks/src/useAccountBalance.ts"],"sourcesContent":["import { useSdk } from '@cetus/sdk-factory'\nimport { useAccountStore } from '@cetus/stores'\nimport useTokenBalanceStore from '@cetus/stores/src/tokenBalance'\nimport { extractStructTagFromType, fixCoinType } from '@cetusprotocol/common-sdk'\nimport { CoinBalance } from '@mysten/sui/client'\nimport { useEffect, useRef } from 'react'\n\nexport function useAccountBalance() {\n  const { currentAccount } = useAccountStore()\n  const clmmSdk = useSdk('clmm')\n  const { setTokenBalanceObj, clearData, setIsLoading, isLoading, ownerAddress } = useTokenBalanceStore()\n  const currentAcc = useRef(currentAccount?.address)\n  useEffect(() => {\n    currentAcc.current = currentAccount?.address\n  }, [currentAccount?.address])\n\n  const fetchAccountBalance = async (account: string = currentAccount?.address || '', forceRefresh: boolean = false) => {\n    try {\n      if (isLoading && !forceRefresh) {\n        return []\n      }\n\n      if (account) {\n        setIsLoading(true)\n        const res = await clmmSdk!.FullClient.getOwnerCoinBalances(account)\n        console.log(res, 'fetchAccountBalance')\n        const obj: Record<string, CoinBalance> = {}\n        res.forEach(coin => {\n          coin.coinType = fixCoinType(coin.coinType, false)\n          obj[extractStructTagFromType(coin.coinType).full_address] = coin\n        })\n        if (account == currentAcc.current) {\n          setTokenBalanceObj(obj, account)\n        }\n        return res\n      }\n    } catch (error) {\n      console.log('ðŸš€ ~ file: useAccountBalance.ts:18 ~ fetchAccountBalance ~ error:', error)\n      if (ownerAddress !== account) {\n        clearData()\n      }\n      return undefined\n    } finally {\n      setIsLoading(false)\n    }\n    return []\n  }\n\n  const fetchCoinBalance = async (account: string = currentAccount?.address || '', coinType?: string) => {\n    try {\n      if (account && coinType) {\n        const res = await clmmSdk!.FullClient.getOwnerCoinBalances(account, coinType)\n        const obj: Record<string, CoinBalance> = {}\n\n        res.forEach(coin => {\n          obj[extractStructTagFromType(coin.coinType).full_address] = coin\n        })\n        if (account == currentAcc.current) {\n          setTokenBalanceObj(obj, account)\n        }\n        return obj\n      }\n    } catch (error) {\n      console.log('ðŸš€ ~ file: useAccountBalance.ts:18 ~ fetchCoinBalance ~ error:', error)\n    }\n  }\n\n  useEffect(() => {\n    if (!currentAccount) {\n      clearData()\n      setIsLoading(false)\n    }\n  }, [currentAccount?.address])\n\n  return {\n    fetchAccountBalance,\n    fetchCoinBalance,\n    isLoading\n  }\n}\n"],"names":["useAccountBalance","currentAccount","useAccountStore","clmmSdk","useSdk","setTokenBalanceObj","clearData","setIsLoading","isLoading","ownerAddress","useTokenBalanceStore","currentAcc","useRef","useEffect","fetchAccountBalance","account","forceRefresh","res","obj","coin","fixCoinType","extractStructTagFromType","error","fetchCoinBalance","coinType"],"mappings":"8GAOO,SAASA,GAAoB,CAClC,KAAM,CAAE,eAAAC,CAAA,EAAmBC,EAAA,EACrBC,EAAUC,EAAO,MAAM,EACvB,CAAE,mBAAAC,EAAoB,UAAAC,EAAW,aAAAC,EAAc,UAAAC,EAAW,aAAAC,CAAA,EAAiBC,EAAA,EAC3EC,EAAaC,EAAAA,OAAOX,GAAA,YAAAA,EAAgB,OAAO,EACjDY,EAAAA,UAAU,IAAM,CACdF,EAAW,QAAUV,GAAA,YAAAA,EAAgB,OACvC,EAAG,CAACA,GAAA,YAAAA,EAAgB,OAAO,CAAC,EAE5B,MAAMa,EAAsB,MAAOC,GAAkBd,GAAA,YAAAA,EAAgB,UAAW,GAAIe,EAAwB,KAAU,CACpH,GAAI,CACF,GAAIR,GAAa,CAACQ,EAChB,MAAO,CAAA,EAGT,GAAID,EAAS,CACXR,EAAa,EAAI,EACjB,MAAMU,EAAM,MAAMd,EAAS,WAAW,qBAAqBY,CAAO,EAClE,QAAQ,IAAIE,EAAK,qBAAqB,EACtC,MAAMC,EAAmC,CAAA,EACzC,OAAAD,EAAI,QAAQE,GAAQ,CAClBA,EAAK,SAAWC,EAAYD,EAAK,SAAU,EAAK,EAChDD,EAAIG,EAAyBF,EAAK,QAAQ,EAAE,YAAY,EAAIA,CAC9D,CAAC,EACGJ,GAAWJ,EAAW,SACxBN,EAAmBa,EAAKH,CAAO,EAE1BE,CACT,CACF,OAASK,EAAO,CACd,QAAQ,IAAI,oEAAqEA,CAAK,EAClFb,IAAiBM,GACnBT,EAAA,EAEF,MACF,QAAA,CACEC,EAAa,EAAK,CACpB,CACA,MAAO,CAAA,CACT,EAEMgB,EAAmB,MAAOR,GAAkBd,GAAA,YAAAA,EAAgB,UAAW,GAAIuB,IAAsB,CACrG,GAAI,CACF,GAAIT,GAAWS,EAAU,CACvB,MAAMP,EAAM,MAAMd,EAAS,WAAW,qBAAqBY,EAASS,CAAQ,EACtEN,EAAmC,CAAA,EAEzC,OAAAD,EAAI,QAAQE,GAAQ,CAClBD,EAAIG,EAAyBF,EAAK,QAAQ,EAAE,YAAY,EAAIA,CAC9D,CAAC,EACGJ,GAAWJ,EAAW,SACxBN,EAAmBa,EAAKH,CAAO,EAE1BG,CACT,CACF,OAASI,EAAO,CACd,QAAQ,IAAI,iEAAkEA,CAAK,CACrF,CACF,EAEAT,OAAAA,EAAAA,UAAU,IAAM,CACTZ,IACHK,EAAA,EACAC,EAAa,EAAK,EAEtB,EAAG,CAACN,GAAA,YAAAA,EAAgB,OAAO,CAAC,EAErB,CACL,oBAAAa,EACA,iBAAAS,EACA,UAAAf,CAAA,CAEJ"}