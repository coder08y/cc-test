{"version":3,"file":"Clmm-oNHcft0_.js","sources":["../../src/hooks/clmm/useTransactionHistory.ts","../../src/hooks/clmm/useRecentTransactions.ts","../../src/components/liquidity/clmm/recentTransactions/components.tsx","../../src/components/liquidity/clmm/recentTransactions/index.tsx","../../src/hooks/clmm/useBurnedLiquidity.ts","../../src/components/liquidity/clmm/analytics/BurnedLiquidity.tsx","../../src/components/liquidity/clmm/analytics/PoolInfo.tsx","../../src/components/liquidity/clmm/analytics/PoolsAnalytics.tsx","../../src/components/liquidity/clmm/AddLiquidityConfirmModal.tsx","../../src/hooks/clmm/useAddLiquidity.ts","../../src/hooks/clmm/useAddLiquidityButton.ts","../../src/hooks/common/useGetLeverage.ts","../../src/hooks/clmm/useDeposit.ts","../../src/components/liquidity/clmm/NFTModal.tsx","../../src/components/liquidity/clmm/ControlPriceRange/index.tsx","../../src/components/liquidity/clmm/FarmRelated.tsx","../../src/components/liquidity/clmm/PriceRangeForDate.tsx","../../src/hooks/clmm/useRecommendRanges.ts","../../src/components/liquidity/clmm/SelectRecommendPriceRange.tsx","../../src/components/vaults-v2/add-liquidity/VaultsBanner.tsx","../../src/components/liquidity/clmm/deposit/common.tsx","../../src/components/liquidity/clmm/deposit/H5.tsx","../../src/components/liquidity/clmm/deposit/PC.tsx","../../src/components/liquidity/clmm/deposit/index.tsx","../../src/hooks/clmm/useMyPositions.ts","../../src/components/liquidity/clmm/MyPositions.tsx","../../src/components/liquidity/clmm/PoolsStats.tsx","../../src/hooks/clmm/useGetRelatedPools.ts","../../src/hooks/clmm/useGetPoolRelatedInfo.ts","../../src/hooks/clmm/useLiquidity.ts","../../src/pages/Clmm.tsx"],"sourcesContent":["import { TransactionsHistory } from '@/apis/path'\nimport { useFetch } from '@cetus/hooks'\nimport { useSdk } from '@cetus/sdk-factory'\nimport { PageQuery } from '@cetusprotocol/common-sdk'\n\nexport type getTransactionsHistoryParams = {\n  limit?: number\n  offset?: number\n  timestamp_ms?: string | number\n  address?: string\n}\n\nfunction useTransactionHistory() {\n  const clmmSdk = useSdk('clmm')\n  const { fetchByApi } = useFetch()\n\n  const getTransactionsHistory = async (params: getTransactionsHistoryParams) => {\n    try {\n      const res = await fetchByApi(TransactionsHistory, 'GET', params)\n      console.log(res, 'getTransactionsHistory')\n      if (res) {\n        return res\n      } else {\n        throw new Error('no data')\n      }\n    } catch (error) {\n      console.error(error, 'getTransactionsHistory ~ error')\n    }\n  }\n\n  const getTransactionsHistoryBySDK = async (poolId: string, paginationArgs: PageQuery) => {\n    const rpcUrls = ['https://rpc-mainnet.suiscan.xyz:443', 'https://cetus-mainnet-endpoint.blockvision.org']\n\n    for (const rpcUrl of rpcUrls) {\n      try {\n        const res = await clmmSdk!.Pool.getPoolTransactionList({\n          pool_id: poolId,\n          pagination_args: paginationArgs,\n          full_rpc_url: rpcUrl\n        })\n        console.log(res, `getTransactionsHistoryBySDK with ${rpcUrl}`)\n\n        return res\n      } catch (error) {\n        console.error(error, `getTransactionsHistoryBySDK ~ error with ${rpcUrl}`)\n      }\n    }\n\n    return undefined\n  }\n\n  return { getTransactionsHistory, getTransactionsHistoryBySDK }\n}\n\nexport default useTransactionHistory\n","import { DataItem, EventEnums } from '@/components/liquidity/clmm/recentTransactions/type'\nimport useTransactionHistory from '@/hooks/clmm/useTransactionHistory'\nimport useLiquidityStore from '@/store/clmm'\nimport useQueryParams from '@cetus/hooks/src/useQueryParams'\nimport { bnToAmount } from '@cetus/utils'\nimport { PageQuery } from '@cetusprotocol/common-sdk'\nimport { useDebounceEffect } from 'ahooks'\nimport { useEffect, useState } from 'react'\n\nfunction useRecentTransactions() {\n  const pageSize = 10\n\n  const { getTransactionsHistoryBySDK } = useTransactionHistory()\n  const [isLoading, setIsLoading] = useState(true)\n  const [list, setList] = useState<DataItem[]>([])\n  const [currentPage, setCurrentPage] = useState(1)\n  const [nextCursor, setNextCursor] = useState<string | undefined>()\n  const [hasNextPage, setHasNextPage] = useState(true)\n  const { apiPoolInfo, manualRefresh, setManualRefresh } = useLiquidityStore()\n  const { poolAddress } = useQueryParams()\n  /**\n   * 根据池子地址初始化第一页数据\n   * Initialize the first page data based on the pool address\n   */\n  useEffect(() => {\n    setList([])\n    setCurrentPage(1)\n    setNextCursor(undefined)\n    setHasNextPage(true)\n  }, [poolAddress])\n\n  /**\n   * 手动刷新，回到第一页，重新请求第一页数据\n   * Manually refresh and request the first page data\n   */\n  useEffect(() => {\n    if (manualRefresh) {\n      setList([])\n      setCurrentPage(1)\n      setNextCursor(undefined)\n      setHasNextPage(true)\n      fetchData({\n        cursor: undefined,\n        limit: pageSize\n      })\n    }\n  }, [poolAddress, manualRefresh])\n\n  const fetchData = async (params: PageQuery) => {\n    try {\n      if (!hasNextPage) return\n      if (poolAddress) {\n        setIsLoading(true)\n        console.log('🚀 ~ fetchData ~ params:', {\n          poolAddress,\n          params\n        })\n        const result: any = await getTransactionsHistoryBySDK(poolAddress, { ...params })\n        console.log('🚀 ~ fetchData ~ result:', result)\n        if (result) {\n          const _data = result?.data?.map((item: any) => {\n            const _parsedJson = item?.parsed_json\n            const _firstToken = _parsedJson?.amount_a ? apiPoolInfo?.tokenA : _parsedJson?.atob ? apiPoolInfo?.tokenA : apiPoolInfo?.tokenB\n            const _secondToken = _parsedJson?.amount_b ? apiPoolInfo?.tokenB : _parsedJson?.atob ? apiPoolInfo?.tokenB : apiPoolInfo?.tokenA\n            return {\n              ...item,\n              type: item.type?.includes('Add') ? EventEnums.add : item.type?.includes('Remove') ? EventEnums.remove : EventEnums.swap,\n              items: [\n                {\n                  amount: bnToAmount(_parsedJson?.amount_a ? _parsedJson?.amount_a : _parsedJson?.amount_in, _firstToken?.decimals).toString(),\n                  address: _firstToken?.coin_type,\n                  url: _firstToken?.logo_url,\n                  symbol: _firstToken?.symbol\n                },\n                {\n                  amount: bnToAmount(_parsedJson?.amount_b ? _parsedJson?.amount_b : _parsedJson?.amount_out, _secondToken?.decimals).toString(),\n                  address: _secondToken?.coin_type,\n                  url: _secondToken?.logo_url,\n                  symbol: _secondToken?.symbol\n                }\n              ]\n            }\n          })\n\n          console.log('🚀 ~ const_data=result?.data?.map ~ _data:', _data)\n          if (params?.cursor) {\n            setList(pre => [...pre, ...(_data || [])])\n          } else {\n            setList(_data || [])\n          }\n\n          setNextCursor(result?.next_cursor)\n          setHasNextPage(result?.has_next_page)\n          setIsLoading(false)\n        } else {\n          if (currentPage === 1) {\n            setHasNextPage(false)\n          }\n        }\n      }\n    } catch (error) {\n      console.log(error, 'getTransactionsHistoryBySDK-error')\n      setIsLoading(false)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n  /**\n   * 监听页码和池子地址变化，重新请求数据\n   * Listen for changes in page number and pool address, and request data again\n   */\n  useDebounceEffect(\n    () => {\n      const params: PageQuery = {\n        cursor: nextCursor,\n        limit: pageSize\n      }\n      fetchData(params)\n    },\n    [currentPage, poolAddress],\n    {\n      wait: 500,\n      leading: true,\n      trailing: false\n    }\n  )\n\n  /**\n   * 切换下一页\n   * Switch to the next page\n   */\n  const onCurrentPageChange = () => {\n    setCurrentPage(pre => pre + 1)\n  }\n\n  return {\n    isLoading,\n    list,\n    apiPoolInfo,\n    currentPage,\n    onCurrentPageChange,\n    hasNextPage\n  }\n}\n\nexport default useRecentTransactions\n","import { AddressUnderline } from '@cetus/design'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { Icon, SingleCoinImage } from '@cetus/ui-kit'\nimport { ColumnsType } from '@cetus/ui-kit/src/components/Table'\nimport { addComma, getTimeDifferenceString, textEllipses } from '@cetus/utils'\nimport { HStack, Text, VStack } from '@chakra-ui/react'\nimport { DataItem, EventEnums, IconProps, Item } from './type'\n\nconst iconMap: Record<EventEnums, IconProps> = {\n  [EventEnums.add]: {\n    icon: '#icon-a-icon_add1',\n    color: 'primary_green',\n    title: 'Add Liquidity'\n  },\n  [EventEnums.remove]: {\n    icon: '#icon-tx_remove',\n    color: 'light_coral',\n    title: 'Remove Liquidity'\n  },\n  [EventEnums.swap]: {\n    icon: '#icon-icon_swap',\n    color: 'primary',\n    title: 'Swap'\n  }\n}\n\nconst Event = ({ type }: { type: EventEnums }) => {\n  return (\n    <HStack>\n      <Icon xlinkHref={iconMap[type]?.icon} svgFill={iconMap[type]?.color} svgHover={iconMap[type]?.color} />\n      <Text color=\"text_caption\">{iconMap[type]?.title}</Text>\n    </HStack>\n  )\n}\n\nconst Amounts = ({ items, type, isReverse }: Pick<DataItem, 'items' | 'type'> & { isReverse: boolean }) => {\n  const { isApp } = useWindowWidth()\n  return items ? (\n    type === EventEnums.swap ? (\n      isApp ? (\n        <VStack align=\"flex-end\" gap=\"8px\">\n          <AmountItem item={items?.[0]} />\n          <HStack justify=\"flex-end\">\n            <Icon xlinkHref=\"#icon-icon_right\" svgFill=\"text_caption\" svgHover=\"text_caption\" />\n            <AmountItem item={items?.[1]} />\n          </HStack>\n        </VStack>\n      ) : (\n        <HStack justify=\"flex-end\" gap=\"8px\">\n          <AmountItem item={items?.[0]} />\n          <Icon xlinkHref=\"#icon-icon_right\" svgFill=\"text_caption\" svgHover=\"text_caption\" />\n          <AmountItem item={items?.[1]} />\n        </HStack>\n      )\n    ) : isApp ? (\n      <VStack align=\"flex-end\" gap=\"8px 16px\" flexDir={isReverse ? 'column-reverse' : 'column'}>\n        {items?.filter(item => !!+item.amount)?.map(item => <AmountItem item={item} key={item?.address} />)}\n      </VStack>\n    ) : (\n      <HStack justify={isReverse ? 'flex-start' : 'flex-end'} gap=\"8px 16px\" flexDir={isReverse ? 'row-reverse' : 'row'}>\n        {items?.filter(item => !!+item.amount)?.map(item => <AmountItem item={item} key={item?.address} />)}\n      </HStack>\n    )\n  ) : null\n}\n\nconst AmountItem = ({ item }: { item: Item }) => {\n  return (\n    <HStack gap=\"4px\">\n      <SingleCoinImage imageUrl={item?.url} w=\"20px\" h=\"20px\" />\n      <Text color=\"text_caption\">{addComma(item?.amount)}</Text>\n      <Text>{textEllipses(item?.symbol, 10)}</Text>\n    </HStack>\n  )\n}\n\nconst getColumns = (getExplorerUrl: any, isReverse: boolean = false): ColumnsType<DataItem>[] => {\n  return [\n    {\n      title: <Text>Event</Text>,\n      key: 'type',\n      render: ({ type }) => {\n        return <Event type={type} />\n      },\n      thConfig: { h: '52px', p: '0 !important' },\n      tdConfig: { p: '0 !important' }\n    },\n    {\n      title: <Text textAlign=\"right\">Amounts</Text>,\n      key: 'amounts',\n      render: ({ items, type }) => {\n        return <Amounts items={items} type={type} isReverse={isReverse} />\n      },\n      thConfig: { h: '52px', p: '0 !important' },\n      tdConfig: { p: '0 !important' }\n    },\n    {\n      title: <Text textAlign=\"right\">Transactions</Text>,\n      key: 'tx',\n      render: ({ tx }) => {\n        return (\n          <AddressUnderline\n            address={tx}\n            color=\"primary\"\n            fontSize=\"14px\"\n            onClickLink={() => {\n              window.open(getExplorerUrl(tx, 'tx'), '_blank')\n            }}\n          />\n        )\n      },\n      thConfig: { h: '52px', p: '0 !important' },\n      tdConfig: { p: '0 !important' }\n    },\n    {\n      title: <Text textAlign=\"right\">Time</Text>,\n      key: 'block_time',\n      render: ({ block_time }) => {\n        return <Text color=\"text_caption\">{getTimeDifferenceString(block_time)}</Text>\n      },\n      thConfig: { h: '52px', p: '0 !important' },\n      tdConfig: { p: '0 !important' }\n    }\n  ]\n}\n\nexport { AmountItem, Amounts, Event, getColumns }\n","import useRecentTransactions from '@/hooks/clmm/useRecentTransactions'\nimport useExplorer from '@cetus/hooks/src/useExplorer'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { H5MapTable, NoData, Table } from '@cetus/ui-kit'\nimport { Button, Center, HStack, Spinner, Text, VStack } from '@chakra-ui/react'\nimport { getColumns } from './components'\nimport { DataItem } from './type'\n\nfunction RecentTransactions() {\n  const { getExplorerUrl } = useExplorer()\n\n  const { isLoading, list, apiPoolInfo, currentPage, onCurrentPageChange, hasNextPage } = useRecentTransactions()\n  const { isApp } = useWindowWidth()\n\n  return (\n    <VStack w=\"100%\" position=\"relative\" mt={{ base: '12px', lg: '24px' }} gap=\"0px\">\n      <HStack w=\"100%\" justify=\"space-between\">\n        <Text fontSize=\"24px\" color=\"text_caption\" fontWeight=\"500\">\n          Transactions\n        </Text>\n      </HStack>\n      {!isLoading && list?.length == 0 ? (\n        <NoData type=\"nodata\" mt=\"16px\" text=\"No Recent Transactions\" />\n      ) : isApp ? (\n        <H5MapTable<DataItem>\n          columns={getColumns(getExplorerUrl, apiPoolInfo?.isReverse)}\n          dataSource={list}\n          loading={isLoading && currentPage === 1}\n          itemSkeletonLength={5}\n          itemHeight=\"30px\"\n          wrapStyle={{ gap: 0 }}\n          rowStyle={(_, index) => ({\n            w: '100%',\n            p: '0px',\n            mt: '20px'\n          })}\n          onRowClick={(item: any) => {\n            window.open(getExplorerUrl(item?.tx, 'tx'), '_blank')\n          }}\n        />\n      ) : (\n        <Table<DataItem>\n          columns={getColumns(getExplorerUrl, apiPoolInfo?.isReverse)}\n          dataSource={list}\n          skeletonLength={10}\n          loading={isLoading && currentPage === 1}\n          onRowClick={(item: any) => {\n            window.open(getExplorerUrl(item?.tx, 'tx'), '_blank')\n          }}\n          rowStyle={{ h: '52px', cursor: 'pointer' }}\n        />\n      )}\n      {hasNextPage && (\n        <Center mt={{ base: '40px', lg: '20px' }}>\n          <Button\n            w=\"120px\"\n            h=\"32px\"\n            fontSize=\"12px\"\n            borderRadius=\"8px\"\n            bg=\"button_ghost_bg\"\n            color=\"primary\"\n            borderColor=\"border\"\n            variant=\"outline\"\n            onClick={onCurrentPageChange}\n          >\n            {isLoading ? <Spinner size=\"sm\" color=\"text_caption\" /> : 'Load More'}\n          </Button>\n        </Center>\n      )}\n    </VStack>\n  )\n}\n\nexport default RecentTransactions\n","import useLiquidityStore from '@/store/clmm'\nimport useTvlInfoStore from '@/store/clmm/liquidityTvl'\nimport { PoolApiInfo } from '@/types'\nimport useQueryParams from '@cetus/hooks/src/useQueryParams'\nimport { d } from '@cetus/utils'\nimport { useDebounceEffect } from 'ahooks'\nimport { useState } from 'react'\nimport useBurn from '../burn/useBurn'\n\nfunction useBurnedLiquidity() {\n  const { getBurnPositionAmountByPool } = useBurn()\n  const { apiPoolInfo, contractPoolInfo } = useLiquidityStore()\n  const [burnAmountA, setBurnAmountA] = useState<string>('0')\n  const [burnAmountB, setBurnAmountB] = useState<string>('0')\n  const [burnAmountAUSD, setBurnAmountAUSD] = useState<string>('0')\n  const [burnAmountBUSD, setBurnAmountBUSD] = useState<string>('0')\n  const [loading, setLoading] = useState<boolean>(false)\n  const { poolAddress } = useQueryParams()\n  const { tokenAPrice, tokenBPrice } = useTvlInfoStore()\n\n  /**\n   * 获取burn liquidity amount 及其价值usd\n   * Get the amount of burn liquidity and its value in usd\n   * @param poolInfo PoolApiInfo\n   * @param current_sqrt_price string\n   */\n  const getBurnAmount = async (poolInfo: PoolApiInfo, current_sqrt_price: string) => {\n    try {\n      setLoading(true)\n      console.log('🚀🚀🚀 ~ file: burn-position-amount 29 ~ getBurnAmount ~ getBurnAmount:')\n      const { totalA, totalB } = await getBurnPositionAmountByPool(poolInfo, current_sqrt_price)\n      setBurnAmountA(totalA)\n      setBurnAmountB(totalB)\n      if (tokenAPrice) {\n        setBurnAmountAUSD(d(totalA).mul(tokenAPrice?.price).toString())\n      }\n      if (tokenBPrice) {\n        setBurnAmountBUSD(d(totalB).mul(tokenBPrice?.price).toString())\n      }\n    } catch (error) {\n      console.log('🚀🚀🚀  ~ getBurnAmount ~ error:', error)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  /**\n   * 监听池子地址变化和价格变化\n   * Listen to pool address changes and price changes\n   */\n  useDebounceEffect(\n    () => {\n      if (apiPoolInfo && contractPoolInfo?.current_sqrt_price) {\n        getBurnAmount(apiPoolInfo, contractPoolInfo?.current_sqrt_price)\n      }\n    },\n    [poolAddress, contractPoolInfo?.current_sqrt_price, tokenAPrice?.price, tokenBPrice?.price],\n    {\n      wait: 500\n    }\n  )\n  return {\n    burnAmountA,\n    burnAmountB,\n    burnAmountAUSD,\n    burnAmountBUSD,\n    loading\n  }\n}\n\nexport default useBurnedLiquidity\n","import useBurnedLiquidity from '@/hooks/clmm/useBurnedLiquidity'\nimport useLiquidityStore from '@/store/clmm'\nimport { TooltipIcon } from '@cetus/design'\nimport { Token } from '@cetus/types'\nimport { HTextLabelBox, SingleCoinImage } from '@cetus/ui-kit'\nimport { addComma, d, formatNumber, fromDecimalsAmountFix, textEllipses } from '@cetus/utils'\nimport { HStack, Stack, Text, VStack } from '@chakra-ui/react'\n\nfunction BurnedLiquidity() {\n  const { apiPoolInfo } = useLiquidityStore()\n  const { burnAmountA, burnAmountB, burnAmountAUSD, burnAmountBUSD, loading } = useBurnedLiquidity()\n\n  return d(burnAmountA).gt(0) || d(burnAmountB).gt(0) ? (\n    <Stack\n      flexDir={{ base: 'column', lg: 'row' }}\n      w=\"100%\"\n      bg=\"bg_secondary\"\n      borderRadius=\"16px\"\n      border=\"1px solid\"\n      borderColor=\"border\"\n      justify=\"space-between\"\n      align=\"flex-start\"\n      p={{ base: '16px 8px 8px', lg: '20px 16px 20px 20px' }}\n    >\n      <HStack>\n        <Text fontSize=\"16px\" color=\"text_caption\">\n          Burned Liquidity\n        </Text>\n        <TooltipIcon tooltipCon=\"The following liquidity has been permanently locked in the pool. Please note that LP locking could not eliminate all the risks of a token, especially when the token issuer holds a significant amount of the token.\" />\n      </HStack>\n      <Stack\n        gap=\"16px\"\n        flexDir={{ base: apiPoolInfo?.isReverse ? 'column-reverse' : 'column', lg: apiPoolInfo?.isReverse ? 'row-reverse' : 'row' }}\n        w={{ base: '100%', lg: '822px', xl: '862px' }}\n      >\n        <TokenBurnedLiquidity token={apiPoolInfo?.tokenA as Token} amount={burnAmountA} amountUSD={burnAmountAUSD} loading={loading} />\n        <TokenBurnedLiquidity token={apiPoolInfo?.tokenB as Token} amount={burnAmountB} amountUSD={burnAmountBUSD} loading={loading} />\n      </Stack>\n    </Stack>\n  ) : null\n}\n\nconst TokenBurnedLiquidity = ({ token, amount, amountUSD, loading }: { token: Token; amount: string; amountUSD: string; loading: boolean }) => {\n  return (\n    <VStack\n      flex=\"1\"\n      align=\"flex-start\"\n      gap=\"16px\"\n      p={{ base: '16px 8px', lg: '16px 20px' }}\n      borderRadius=\"8px\"\n      bg=\"background\"\n      // border=\"1px solid\"\n      borderColor=\"border\"\n    >\n      <HStack gap=\"12px\">\n        <SingleCoinImage imageUrl={token?.logo_url} w=\"28px\" h=\"28px\" />\n        <VStack align=\"flex-start\" gap=\"4px\">\n          <Text color=\"text_caption\" fontSize=\"16px\">\n            {textEllipses(token?.symbol, 10)}\n          </Text>\n          <Text fontSize=\"12px\">{token?.name}</Text>\n        </VStack>\n      </HStack>\n      <HTextLabelBox\n        label=\"Amount\"\n        labelStyle={{\n          fontSize: '14px'\n        }}\n        value={addComma(fromDecimalsAmountFix(amount, token?.decimals)) as string}\n        valueStyle={{\n          fontSize: '14px'\n        }}\n        isLoading={loading}\n        wrapStyle={{ h: '14px' }}\n        skeletonStyle={{ valueW: '120px' }}\n      />\n      <HTextLabelBox\n        label=\"Amount (USD)\"\n        labelStyle={{\n          fontSize: '14px'\n        }}\n        value={d(amountUSD).gt('0') ? `$${formatNumber(fromDecimalsAmountFix(amountUSD, token?.decimals), 2)}` : '--'}\n        valueStyle={{\n          fontSize: '14px'\n        }}\n        isLoading={loading}\n        wrapStyle={{ h: '14px' }}\n        skeletonStyle={{ valueW: '120px' }}\n      />\n    </VStack>\n  )\n}\n\nexport default BurnedLiquidity\n","import usePoolInfo from '@/hooks/common/usePoolInfo'\nimport useLiquidityStore from '@/store/clmm'\nimport useTvlInfoStore from '@/store/clmm/liquidityTvl'\nimport { AddressCopyLink } from '@cetus/design'\nimport useExplorer from '@cetus/hooks/src/useExplorer'\nimport useQueryParams from '@cetus/hooks/src/useQueryParams'\nimport { SingleCoinImage } from '@cetus/ui-kit'\nimport { textEllipses } from '@cetus/utils'\nimport { Box, Grid, Heading, HStack, Progress, Skeleton, Text, VStack } from '@chakra-ui/react'\nimport InfoItem from '../../common/InfoItem'\nimport TokenCard from '../../common/TokenCard'\n\nconst getRatio = (value: string) => {\n  if (value === '--') return '--'\n  return `${value}%`\n}\n\nfunction PoolInfo() {\n  const { apiPoolInfo, contractPoolInfo } = useLiquidityStore()\n  const { getExplorerUrl } = useExplorer()\n  const { poolAddress } = useQueryParams()\n  const { tokenAAmount, tokenBAmount, tokenAAmountUSD, tokenBAmountUSD, totalAmountUSD, tvlLoading } = useTvlInfoStore()\n  const { tokenARatio, tokenBRatio } = usePoolInfo(tokenAAmountUSD, totalAmountUSD)\n  return (\n    <VStack\n      w={{ base: '100%', lg: '482px' }}\n      gap={{ base: '20px', lg: '40px' }}\n      p={{ base: '20px 8px 8px', lg: '20px 16px' }}\n      borderRadius=\"16px\"\n      border=\"1px solid\"\n      borderColor=\"border\"\n      bg=\"bg_secondary\"\n      minW={{ base: '100%', lg: '482px' }}\n      maxW={{ base: '100%', lg: '482px' }}\n    >\n      <VStack gap=\"20px\" w=\"100%\">\n        <HStack w=\"100%\" justify=\"space-between\">\n          <Heading fontSize=\"16px\" fontWeight=\"400\">\n            Pool Info\n          </Heading>\n        </HStack>\n        <Grid templateColumns={{ base: 'repeat(1, 1fr)', lg: 'repeat(2, 1fr)' }} w=\"100%\" gap=\"12px\">\n          <InfoItem\n            label=\"Address\"\n            value={\n              <AddressCopyLink\n                address={poolAddress || ''}\n                fontSize=\"14px\"\n                color=\"text_caption\"\n                onClickLink={() => window.open(getExplorerUrl(poolAddress, 'poolAddress'))}\n                wrapStyle={{ gap: '6px' }}\n                iconGap=\"6px\"\n              />\n            }\n          />\n          <InfoItem label=\"Pool ID\" value={contractPoolInfo?.index !== undefined ? `#${contractPoolInfo?.index}` : '--'} />\n          <InfoItem label=\"Tick Spacing\" value={contractPoolInfo?.tickSpacing || ''} />\n\n          <InfoItem label=\"Fee Tier\" value={`${apiPoolInfo?.feeDisplay}` || '--'} />\n        </Grid>\n      </VStack>\n      <VStack gap=\"20px\" w=\"100%\">\n        <HStack justify=\"flex-start\" w=\"100%\">\n          <Heading fontSize=\"16px\" fontWeight=\"400\">\n            Pool Composition\n          </Heading>\n        </HStack>\n        <VStack gap=\"16px\" w=\"100%\">\n          <HStack w=\"100%\" justify=\"space-between\">\n            <HStack gap=\"12px\">\n              <SingleCoinImage\n                imageUrl={apiPoolInfo?.displayTokenA?.logo_url}\n                w=\"28px\"\n                h=\"28px\"\n                coinType={apiPoolInfo?.displayTokenA ? apiPoolInfo?.displayTokenA?.coin_type : ''}\n              />\n              <VStack align=\"flex-start\" gap=\"4px\">\n                <Text fontSize=\"16px\" fontWeight=\"500\" color=\"text_caption\">\n                  {textEllipses(apiPoolInfo?.displayTokenA?.symbol, 10)}\n                </Text>\n                {tvlLoading ? (\n                  <Skeleton h=\"12px\" w=\"46px\" />\n                ) : (\n                  <Text fontSize=\"12px\" fontWeight=\"500\">\n                    {apiPoolInfo?.isReverse ? getRatio(tokenBRatio) : getRatio(tokenARatio)}\n                  </Text>\n                )}\n              </VStack>\n            </HStack>\n            <Box w=\"200px\">\n              <Progress\n                value={Number(apiPoolInfo?.isReverse ? tokenBRatio : tokenARatio)}\n                size=\"xs\"\n                h=\"4px\"\n                borderRadius=\"4px\"\n                bg={[tokenARatio, tokenBRatio].includes('--') ? 'border' : 'quote_green'}\n                sx={{\n                  'div[role=\"progressbar\"]': {\n                    bg: [tokenARatio, tokenBRatio].includes('--') ? 'background' : 'primary'\n                  }\n                }}\n              />\n            </Box>\n            <HStack gap=\"12px\">\n              <VStack align=\"flex-end\" gap=\"4px\">\n                <Text fontSize=\"16px\" fontWeight=\"500\" color=\"text_caption\">\n                  {textEllipses(apiPoolInfo?.displayTokenB?.symbol, 10)}\n                </Text>\n                {tvlLoading ? (\n                  <Skeleton h=\"12px\" w=\"46px\" />\n                ) : (\n                  <Text fontSize=\"12px\" fontWeight=\"500\">\n                    {apiPoolInfo?.isReverse ? getRatio(tokenARatio) : getRatio(tokenBRatio)}\n                  </Text>\n                )}\n              </VStack>\n              <SingleCoinImage\n                imageUrl={apiPoolInfo?.displayTokenB?.logo_url}\n                w=\"28px\"\n                h=\"28px\"\n                coinType={apiPoolInfo?.displayTokenB ? apiPoolInfo?.displayTokenB?.coin_type : ''}\n              />\n            </HStack>\n          </HStack>\n          <VStack w=\"100%\" flexDir={apiPoolInfo?.isReverse ? 'column-reverse' : 'column'} gap=\"16px\">\n            <TokenCard loading={tvlLoading} token={apiPoolInfo?.tokenA} amount={tokenAAmount} amountUSD={tokenAAmountUSD} />\n            <TokenCard loading={tvlLoading} token={apiPoolInfo?.tokenB} amount={tokenBAmount} amountUSD={tokenBAmountUSD} />\n          </VStack>\n        </VStack>\n      </VStack>\n    </VStack>\n  )\n}\n\nexport default PoolInfo\n","import { Stack, VStack } from '@chakra-ui/react'\nimport RecentTransaction from '../recentTransactions'\nimport AnalyticsCharts from './AnalyticsCharts'\nimport BurnedLiquidity from './BurnedLiquidity'\nimport PoolInfo from './PoolInfo'\n\nfunction PoolsAnalytics() {\n  return (\n    <VStack w=\"100%\" gap=\"16px\" minW={{ base: '100%', lg: '1024px' }}>\n      <Stack flexDir={{ base: 'column', lg: 'row' }} w=\"100%\" gap=\"16px\">\n        <AnalyticsCharts />\n        <PoolInfo />\n      </Stack>\n      <BurnedLiquidity />\n      <RecentTransaction />\n    </VStack>\n  )\n}\n\nexport default PoolsAnalytics\n","import DepositRatio from '@/components/common/DepositRatio'\nimport PoolTag from '@/components/common/PoolTag'\nimport TotalAmount from '@/components/common/TotalAmount'\nimport PositionStatus from '@/components/position/common/PositionStatus'\nimport ZapSubmiteInfo from '@/components/zap/ZapSubmiteInfo'\nimport useLiquidityStore from '@/store/clmm'\nimport useAddLiquidityStore from '@/store/clmm/addLiquidity'\nimport usePriceRangeStore from '@/store/clmm/priceRange'\nimport { TradeConfirmAmountInfo } from '@cetus/design'\nimport { Token } from '@cetus/types'\nimport { CoinPairImage, Icon } from '@cetus/ui-kit'\nimport { formatNumberWithDown, textEllipses } from '@cetus/utils'\nimport {\n  Box,\n  Button,\n  Divider,\n  Heading,\n  HStack,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n  VStack\n} from '@chakra-ui/react'\nimport { debounce } from 'lodash-es'\nimport { useMemo, useState } from 'react'\n\ntype AddLiquidityConfirmModalProps = {\n  onClose: () => void\n  onSubmit: () => void\n  data: {\n    feeTier?: {\n      title: string\n      feeDisplay: string\n      feeRate: string\n      poolAddress: string\n      tvl: string\n    }\n    zapData?: {\n      amount: string\n      token: any\n    }\n  }\n}\n\nexport default function AddLiquidityConfirmModal(props: AddLiquidityConfirmModalProps) {\n  const {\n    onClose,\n    onSubmit,\n    data: { feeTier, zapData }\n  } = props\n  const { fromToken, toToken, fromAmount, toAmount, totalAmount, percentMap, fromTokenLock, toTokenLock } = useAddLiquidityStore()\n  console.log('🚀🚀🚀 ~ AddLiquidityConfirmModal.tsx:57 ~ AddLiquidityConfirmModal ~ fromTokenLock:', fromTokenLock, toTokenLock)\n  const { lowerTickData, upperTickData } = usePriceRangeStore()\n  const { currentPriceData, apiPoolInfo } = useLiquidityStore()\n  console.log('🚀🚀🚀 ~ AddLiquidityConfirmModal.tsx:58 ~ AddLiquidityConfirmModal ~ lowerTickData:', lowerTickData)\n  console.log('🚀🚀🚀 ~ AddLiquidityConfirmModal.tsx:59 ~ AddLiquidityConfirmModal ~ upperTickData:', upperTickData)\n  console.log('🚀🚀🚀 ~ AddLiquidityConfirmModal.tsx:61 ~ AddLiquidityConfirmModal ~ currentPriceData:', currentPriceData)\n  // const { setIsChecked } = useNotifiStore()\n  const [direct, setDirect] = useState(true)\n  const showReverse = useMemo(() => {\n    if (apiPoolInfo?.tokenA?.coin_type === fromToken?.coin_type) {\n      if (direct) {\n        return false\n      } else {\n        return true\n      }\n    } else {\n      if (direct) {\n        return true\n      } else {\n        return false\n      }\n    }\n  }, [apiPoolInfo, fromToken, toToken, direct])\n\n  const perText = useMemo(() => {\n    return direct\n      ? `${textEllipses(toToken?.symbol, 10)} per ${textEllipses(fromToken?.symbol, 10)}`\n      : `${textEllipses(fromToken?.symbol, 10)} per ${textEllipses(toToken?.symbol)}`\n  }, [direct, fromToken?.symbol, toToken?.symbol])\n\n  const onOk = debounce(\n    () => {\n      onSubmit()\n      onClose()\n    },\n    1000,\n    {\n      leading: true,\n      trailing: false\n    }\n  )\n\n  // const { notifiStatus } = useNotifiStore()\n\n  return (\n    <Modal\n      isOpen={true}\n      onClose={() => {\n        onClose()\n        // setIsChecked(false)\n      }}\n      isCentered\n    >\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>\n          <Heading fontWeight=\"500\" fontSize=\"16px\">\n            Add Liquidity\n          </Heading>\n        </ModalHeader>\n        <ModalCloseButton />\n        <ModalBody textAlign=\"center\" p=\"0px\">\n          <VStack w=\"100%\" gap=\"20px\" p=\"8px 16px\" pb=\"0px\">\n            <HStack w=\"100%\" justifyContent=\"space-between\" h=\"40px\">\n              <HStack>\n                <CoinPairImage\n                  coinACoinType={fromToken?.coin_type}\n                  coinBCoinType={toToken?.coin_type}\n                  coinAIconUrl={fromToken?.logo_url}\n                  coinBIconUrl={toToken?.logo_url}\n                  imageStyle={{\n                    w: '40px',\n                    h: '40px'\n                  }}\n                  imgBoxStyle={{\n                    w: '40px',\n                    h: '40px'\n                  }}\n                />\n                <Text fontSize=\"16px\" color=\"text_caption\" textAlign=\"left\">\n                  {`${textEllipses(fromToken?.symbol, 10)} - ${textEllipses(toToken?.symbol, 10)}`}\n                </Text>\n              </HStack>\n              <PoolTag poolType=\"clmm\" displayFee={feeTier?.feeDisplay} />\n            </HStack>\n\n            {/* 交易数量展示 */}\n            {zapData ? (\n              <TradeConfirmAmountInfo\n                coinA={{\n                  amount: zapData?.amount as string,\n                  ...(zapData?.token as Token)\n                }}\n              />\n            ) : (\n              <TradeConfirmAmountInfo\n                coinA={{\n                  amount: fromAmount as string,\n                  ...(fromToken as Token)\n                }}\n                coinB={{\n                  amount: toAmount as string,\n                  ...(toToken as Token)\n                }}\n              />\n            )}\n            <Box w=\"100%\">\n              <HStack w=\"100%\" justify=\"space-between\" h=\"32px\">\n                <Text fontSize=\"16px\" fontWeight=\"500\" color=\"text_caption\">\n                  Selected Range\n                </Text>\n                <PositionStatus isActive={!fromTokenLock && !toTokenLock} isRow imgStyle={{ imgW: '29px', imgH: '16px' }} w=\"105px\" h=\"32px\" />\n              </HStack>\n              <VStack gap=\"0\" border=\"1px solid\" bg=\"bg_secondary\" borderColor=\"border\" borderRadius=\"12px\" mt=\"8px\">\n                <HStack justify=\"center\" h=\"48px\" w=\"100%\" gap=\"4px\">\n                  <Text>Current Price</Text>\n                  <Text as=\"span\" color=\"text_caption\" maxW=\"200px\" wordBreak=\"break-all\">\n                    {formatNumberWithDown(showReverse ? currentPriceData.reverseCurrentPrice : currentPriceData?.currentPrice, 6)}\n                  </Text>\n                  <Text>{perText}</Text>\n                  <Button variant=\"unstyled\" onClick={() => setDirect(!direct)}>\n                    <Icon xlinkHref=\"#icon-icon_swap1\" />\n                  </Button>\n                </HStack>\n                <Box h=\"1px\" w=\"calc(100% - 32px)\" p=\"0 12px\" bg=\"border\" />\n                <HStack w=\"100%\" h=\"100px\">\n                  <PriceItem\n                    title=\"Min Price\"\n                    price={formatNumberWithDown(showReverse ? upperTickData?.reversePrice : lowerTickData?.price, 6)}\n                    perText={perText}\n                  />\n                  <Divider orientation=\"vertical\" h=\"40px\" />\n                  <PriceItem\n                    title=\"Max Price\"\n                    price={formatNumberWithDown(showReverse ? lowerTickData?.reversePrice : upperTickData?.price, 6)}\n                    perText={perText}\n                  />\n                </HStack>\n              </VStack>\n            </Box>\n\n            {zapData ? (\n              <ZapSubmiteInfo action=\"Deposit\" inConfirmModal={true} />\n            ) : (\n              <>\n                <DepositRatio\n                  tokenA={fromToken}\n                  tokenB={toToken}\n                  isReverse={fromToken?.coin_type !== apiPoolInfo?.tokenA?.coin_type}\n                  type=\"text\"\n                  percentMap={percentMap}\n                />\n                <TotalAmount loading={false} totalAmount={totalAmount} />\n              </>\n            )}\n            {/* {!fromTokenLock && !toTokenLock && !(lowerTickData?.price === '0' && upperTickData?.price === '∞') && notifiStatus == 'authenticated' && (\n              <RangeAlerts\n                subscriptionSource=\"AddLiquidity\"\n                title=\"Range alerts for this position\"\n                description=\"Subscribe to receive alerts on email, SMS, or Telegram when the price for this pool moves out of your selected range.\"\n                wrapStyle={{\n                  bg: 'bg_secondary',\n                  borderRadius: '12px'\n                }}\n              />\n            )} */}\n            <Button w=\"calc(100% + 32px)\" bottom=\"0px\" mt=\"4px\" h=\"52px\" borderRadius=\"12px\" fontSize=\"16px\" fontWeight=\"500\" onClick={onOk}>\n              Add Liquidity\n            </Button>\n          </VStack>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  )\n}\n\nconst PriceItem = ({ title, price, perText }: { title: string; price: string; perText: string }) => {\n  return (\n    <VStack flex=\"1\">\n      <Text>{title}</Text>\n      <Text color=\"text_caption\" wordBreak=\"break-all\">\n        {price}\n      </Text>\n      <Text>{perText}</Text>\n    </VStack>\n  )\n}\n","import useGetCurrentPrice from '@/hooks/clmm/useGetCurrentPrice'\nimport useTransaction from '@/hooks/common/useTransaction'\nimport usePositionList from '@/hooks/position/usePositionList'\nimport useZapSubmit from '@/hooks/zap/useZapSubmit'\nimport useLiquidityStore from '@/store/clmm'\nimport useAddLiquidityStore from '@/store/clmm/addLiquidity'\nimport usePriceRangeStore from '@/store/clmm/priceRange'\nimport useGlobalStore from '@/store/common/global'\nimport useZapStore from '@/store/zap'\nimport { formatDescription } from '@/utils'\nimport { calcCoinProportion } from '@/utils/pool'\nimport { useAccountBalance } from '@cetus/hooks'\nimport { useGetTokenBalance } from '@cetus/hooks/src/useTokenBalance'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport useTransactionModal from '@cetus/hooks/src/useTransactionModal'\nimport { useAccountStore } from '@cetus/stores'\nimport useNotifiStore from '@cetus/stores/src/notifi'\nimport { BalanceChanges, CommonTypeInfo, ToastType, TransactionStatusType } from '@cetus/types'\nimport { amountToBN, Decimal, getBalanceChanges, isAvailableObject, parsePositionIdFromEvent } from '@cetus/utils'\nimport { d, TickUtil } from '@cetusprotocol/common-sdk'\nimport { useDebounceEffect, useDeepCompareEffect } from 'ahooks'\nimport { debounce } from 'lodash-es'\nimport { useEffect, useState } from 'react'\nimport useQuoteWhiteTokenList from '../create-pool/useQuoteWhiteTokenList'\nimport useNotifiSubscription from '../notifi/useNotifiSubscription'\nimport useGetContractPoolInfo from '../pool/useGetContractPoolInfo'\nimport usePosAdd from '../position/usePosAdd'\ninterface DebouncedPreAddProps {\n  amount?: string | number\n  isTokenA: boolean\n  isFullRange: boolean\n}\n\nfunction useAddLiquidity(getList: () => Promise<void>, direct?: boolean) {\n  const { preAdd, getClmmCreateAddData, getFarmsCreateAddData } = usePosAdd()\n  const [preAddLoading, setPreAddLoading] = useState<boolean>(false)\n  const { currentPriceData, apiPoolInfo, contractPoolInfo } = useLiquidityStore()\n  const { getContractPoolInfo } = useGetContractPoolInfo()\n  const { lowerTickData, upperTickData } = usePriceRangeStore()\n  const { signAndExecuteTransaction, getTransactionStatus, transactionSuccess } = useTransaction()\n  const { mevProtect, maxCapForGas, transactionMode, customGasPrice, slippage, zapSlippage } = useGlobalStore()\n  // const [nftOpen, setNftOpen] = useState(false)\n  // const [relatedPosId, setRelatedPosId] = useState('')\n  const { transactionConfirmation } = useTransactionModal()\n  const { getCurrentPrice } = useGetCurrentPrice()\n  const {\n    fromAmount,\n    setFromAmount,\n    fromAmountValue,\n    setFromAmountValue,\n    toAmount,\n    setToAmount,\n    toAmountValue,\n    setToAmountValue,\n    byAmountIn,\n    setByAmountIn,\n    isTokenA,\n    setIsTokenA,\n    percentMap,\n    setPercentMap,\n    isFullRange,\n    setIsFullRange,\n    fromToken,\n    setFromToken,\n    toToken,\n    setToToken,\n    totalAmount,\n    setTotalAmount,\n    fromTokenLock,\n    setFromTokenLock,\n    toTokenLock,\n    setToTokenLock,\n    setTokenMaxA,\n    setTokenMaxB,\n    tokenMaxA,\n    tokenMaxB,\n    autoStakePosition,\n    liquidityAmount,\n    setLiquidityAmount,\n    useZapIn,\n    setUseZapIn,\n    confirmModalOpen,\n    setConfirmModalOpen,\n    nftOpen,\n    setNftOpen,\n    relatedPosId,\n    setRelatedPosId\n  } = useAddLiquidityStore()\n\n  const { currentAccount, onWalletModal } = useAccountStore()\n  const { getTokenAmountValue } = useTokenPrice()\n\n  const { getZapDepositTx, getZapDepositToastInfo, reCalculateZapData } = useZapSubmit()\n  const { setZapAmount } = useZapStore()\n\n  const { getPositionBaseList } = usePositionList()\n\n  useEffect(() => {\n    if (currentAccount?.address) {\n      getPositionBaseList(currentAccount?.address)\n    }\n  }, [currentAccount?.address])\n\n  useDeepCompareEffect(() => {\n    if (apiPoolInfo) {\n      setIsTokenA(apiPoolInfo?.displayTokenA?.coin_type === apiPoolInfo?.tokenA?.coin_type)\n    }\n  }, [apiPoolInfo])\n\n  const { isWhiteQuoteToken } = useQuoteWhiteTokenList()\n\n  // notifi\n  const { notifiSubscription } = useNotifiSubscription()\n  const { isChecked } = useNotifiStore()\n\n  useDebounceEffect(\n    () => {\n      if (isFullRange) {\n        setPercentMap({ percentA: '50', percentB: '50' })\n        return\n      }\n\n      if (\n        apiPoolInfo &&\n        apiPoolInfo?.tokenA &&\n        apiPoolInfo?.tokenB &&\n        typeof contractPoolInfo?.current_tick_index === 'number' &&\n        lowerTickData?.tick !== undefined &&\n        upperTickData?.tick !== undefined &&\n        currentPriceData.currentSqrtPrice\n      ) {\n        if (d(lowerTickData.tick).lte(contractPoolInfo.current_tick_index) && d(upperTickData.tick).gt(contractPoolInfo.current_tick_index)) {\n          const baseToken = isWhiteQuoteToken(apiPoolInfo.tokenA.coin_type) ? apiPoolInfo.tokenA : apiPoolInfo.tokenB\n          const isTokenA = baseToken.coin_type === apiPoolInfo.tokenA.coin_type\n\n          const res = preAdd({\n            amount: amountToBN('1', baseToken.decimals).toString(),\n            tokenA: apiPoolInfo?.tokenA,\n            tokenB: apiPoolInfo?.tokenB,\n            isTokenA,\n            lowerTick: lowerTickData?.tick,\n            upperTick: upperTickData?.tick,\n            curSqrtPrice: currentPriceData.currentSqrtPrice,\n            isReverse: apiPoolInfo?.isReverse,\n            roundUp: true\n          })\n\n          const rateMap = calcCoinProportion(res.coinAmountA, res.coinAmountB, currentPriceData?.currentPrice, isFullRange)\n          setPercentMap(rateMap)\n\n          return\n        }\n\n        if (d(lowerTickData.tick).gt(contractPoolInfo.current_tick_index)) {\n          setPercentMap({ percentA: '100', percentB: '0' })\n          return\n        }\n\n        if (d(upperTickData.tick).lte(contractPoolInfo.current_tick_index)) {\n          setPercentMap({ percentA: '0', percentB: '100' })\n          return\n        }\n      }\n    },\n    [JSON.stringify(apiPoolInfo), currentPriceData, lowerTickData?.tick, upperTickData?.tick, isFullRange],\n    { wait: 300 }\n  )\n\n  const handlePreCalc = ({ amount, isTokenA, isFullRange }: DebouncedPreAddProps) => {\n    if (\n      apiPoolInfo &&\n      apiPoolInfo?.tokenA &&\n      apiPoolInfo?.tokenB &&\n      Object.keys(currentPriceData).length > 0 &&\n      lowerTickData?.tick !== undefined &&\n      upperTickData?.tick !== undefined &&\n      fromToken &&\n      toToken\n    ) {\n      let res\n\n      if (\n        typeof contractPoolInfo?.current_tick_index === 'number' &&\n        d(lowerTickData?.tick).lte(contractPoolInfo?.current_tick_index) &&\n        d(upperTickData?.tick).gt(contractPoolInfo?.current_tick_index)\n      ) {\n        res = preAdd({\n          amount: amountToBN(amount && +amount ? amount + '' : '1', byAmountIn ? fromToken?.decimals : toToken?.decimals).toString(),\n          tokenA: apiPoolInfo?.tokenA,\n          tokenB: apiPoolInfo?.tokenB,\n          isTokenA,\n          lowerTick: lowerTickData?.tick,\n          upperTick: upperTickData?.tick,\n          curSqrtPrice: currentPriceData.currentSqrtPrice,\n          isReverse: apiPoolInfo?.isReverse,\n          roundUp: true\n        })\n      } else if (fromTokenLock && !toTokenLock) {\n        const isTokenA = toToken?.coin_type === apiPoolInfo?.tokenA?.coin_type\n        res = preAdd({\n          amount: amountToBN(amount ? amount + '' : '1', toToken?.decimals).toString(),\n          tokenA: apiPoolInfo?.tokenA,\n          tokenB: apiPoolInfo?.tokenB,\n          isTokenA,\n          lowerTick: lowerTickData?.tick,\n          upperTick: upperTickData?.tick,\n          curSqrtPrice: currentPriceData.currentSqrtPrice,\n          isReverse: apiPoolInfo?.isReverse,\n          roundUp: true\n        })\n\n        // setPercentMap({\n        //   percentA: isTokenA ? '100' : '0',\n        //   percentB: isTokenA ? '0' : '100'\n        // })\n      } else if (toTokenLock && !fromTokenLock) {\n        const isTokenA = fromToken?.coin_type === apiPoolInfo?.tokenA?.coin_type\n        res = preAdd({\n          amount: amountToBN(amount ? amount + '' : '1', fromToken?.decimals).toString(),\n          tokenA: apiPoolInfo?.tokenA,\n          tokenB: apiPoolInfo?.tokenB,\n          isTokenA,\n          lowerTick: lowerTickData?.tick,\n          upperTick: upperTickData?.tick,\n          curSqrtPrice: currentPriceData.currentSqrtPrice,\n          isReverse: apiPoolInfo?.isReverse,\n          roundUp: true\n        })\n\n        // setPercentMap({\n        //   percentA: isTokenA ? '100' : '0',\n        //   percentB: isTokenA ? '0' : '100'\n        // })\n      } else if (fromTokenLock && toTokenLock) {\n        res = isTokenA\n          ? { coinAmountA: amount ? amount + '' : '1', coinAmountB: '', tokenMaxA: amount ? amount + '' : '1', tokenMaxB: '' }\n          : { coinAmountA: '', coinAmountB: amount ? amount + '' : '1', tokenMaxA: '', tokenMaxB: amount ? amount + '' : '1' }\n      }\n      setTokenMaxA(res?.tokenMaxA)\n      setTokenMaxB(res?.tokenMaxB)\n      if (amount) {\n        if (d(amount).gt('0')) {\n          if (byAmountIn) {\n            const _toAmount = toToken?.coin_type === apiPoolInfo?.tokenA?.coin_type ? res?.coinAmountA : res?.coinAmountB\n            const _fromAmountValue = getTokenAmountValue(fromToken?.coin_type, amount + '')\n            const _toAmountValue = getTokenAmountValue(toToken?.coin_type, _toAmount)\n            const _totalAmountValue = d(_fromAmountValue).plus(_toAmountValue).toString()\n            console.log(_toAmount, _fromAmountValue, _toAmountValue, _totalAmountValue, '_totalAmountValue')\n            setToAmount(_toAmount || '')\n            setFromAmountValue(_fromAmountValue)\n            setToAmountValue(_toAmountValue)\n            setTotalAmount(_totalAmountValue)\n          } else {\n            const _fromAmount = fromToken?.coin_type === apiPoolInfo?.tokenA?.coin_type ? res?.coinAmountA : res?.coinAmountB\n            const _fromAmountValue = getTokenAmountValue(fromToken?.coin_type, _fromAmount)\n            const _toAmountValue = getTokenAmountValue(toToken?.coin_type, amount + '')\n            const _totalAmountValue = d(_fromAmountValue).plus(_toAmountValue).toString()\n            console.log(_fromAmount, _fromAmountValue, _toAmountValue, _totalAmountValue, '_totalAmountValue')\n            setFromAmountValue(_fromAmountValue)\n            setToAmountValue(_toAmountValue)\n            setFromAmount(_fromAmount || '')\n            setTotalAmount(_totalAmountValue)\n          }\n        } else {\n          if (byAmountIn) {\n            setToAmount('')\n            setFromAmountValue('')\n            setToAmountValue('')\n            setTotalAmount('')\n          } else {\n            setFromAmount('')\n            setFromAmountValue('')\n            setToAmountValue('')\n            setTotalAmount('')\n          }\n        }\n      } else {\n        setFromAmount('')\n        setToAmount('')\n        setFromAmountValue('')\n        setToAmountValue('')\n        setTotalAmount('')\n      }\n      if (res) {\n        setLiquidityAmount(res?.liquidityAmount || '')\n        // if ([fromTokenLock, toTokenLock]?.filter(Boolean).length !== 1) {\n        //   //    const rateMap = calcCoinProportion(res.coinAmountA, res.coinAmountB, currentPriceData?.currentPrice, isFullRange)\n        //   //  setPercentMap(rateMap)\n        // }\n      }\n    }\n  }\n\n  useDebounceEffect(\n    () => {\n      handlePreCalc({ amount: byAmountIn ? fromAmount : toAmount, isTokenA, isFullRange })\n    },\n    [\n      JSON.stringify(apiPoolInfo),\n      currentPriceData,\n      lowerTickData?.tick,\n      upperTickData?.tick,\n      fromAmount,\n      toAmount,\n      byAmountIn,\n      isTokenA,\n      fromTokenLock,\n      toTokenLock,\n      isFullRange\n    ],\n    { wait: 300 }\n  )\n\n  const handleAmountChange = (value: string, _byAmountIn: boolean, _isTokenA?: boolean) => {\n    setByAmountIn(_byAmountIn)\n    if (_byAmountIn) {\n      setFromAmount(value)\n    } else {\n      setToAmount(value)\n    }\n    if (_isTokenA !== undefined) {\n      setIsTokenA(_isTokenA)\n    } else {\n      setIsTokenA(false)\n    }\n  }\n\n  const { balanceInfo: fromBalanceInfo } = useGetTokenBalance(fromToken)\n  const { balanceInfo: toBalanceInfo } = useGetTokenBalance(toToken)\n\n  useDeepCompareEffect(() => {\n    if (byAmountIn) {\n      setIsTokenA(fromToken?.coin_type === apiPoolInfo?.tokenA?.coin_type)\n    } else {\n      setIsTokenA(toToken?.coin_type === apiPoolInfo?.tokenA?.coin_type)\n    }\n  }, [apiPoolInfo, byAmountIn, fromToken, toToken])\n\n  useEffect(() => {\n    if (\n      lowerTickData?.tick === TickUtil.getMinIndex(Number(lowerTickData?.tickSpacing || 0)) &&\n      upperTickData?.tick === TickUtil.getMaxIndex(Number(upperTickData?.tickSpacing || 0))\n    ) {\n      setIsFullRange(true)\n    } else {\n      setIsFullRange(false)\n    }\n  }, [lowerTickData?.tick, upperTickData?.tick])\n\n  useEffect(() => {\n    if (contractPoolInfo?.current_tick_index !== undefined && isAvailableObject(lowerTickData) && isAvailableObject(upperTickData)) {\n      if (d(lowerTickData?.tick).gte(d(upperTickData.tick))) {\n        setFromTokenLock(true)\n        setToTokenLock(true)\n      } else {\n        if (d(lowerTickData?.tick).gt(contractPoolInfo?.current_tick_index)) {\n          setFromTokenLock(!direct)\n          setToTokenLock(!!direct)\n        } else if (d(upperTickData.tick).lte(contractPoolInfo?.current_tick_index)) {\n          setFromTokenLock(!!direct)\n          setToTokenLock(!direct)\n        } else {\n          setFromTokenLock(false)\n          setToTokenLock(false)\n        }\n      }\n    }\n  }, [lowerTickData?.tick, upperTickData?.tick, contractPoolInfo, direct])\n\n  const handleAdd = debounce(\n    () => {\n      if (!currentAccount) {\n        onWalletModal(true)\n      } else {\n        setConfirmModalOpen(true)\n      }\n    },\n    300,\n    { leading: true, trailing: false }\n  )\n\n  const resetInputAmount = () => {\n    setFromAmount('')\n    setToAmount('')\n    setFromAmountValue('')\n    setToAmountValue('')\n    setTotalAmount('')\n  }\n\n  const { fetchAccountBalance } = useAccountBalance()\n  const handleSubmit = async () => {\n    let trackData: any = null\n    let amount_a\n    let amount_b\n    try {\n      let tx\n      let toastInfo: ToastType\n      let msafeParams\n      if (!useZapIn) {\n        const inputAmount = byAmountIn ? fromAmount : toAmount\n        const tokenDecimals = byAmountIn ? fromToken!.decimals : toToken!.decimals\n        const amount = d(inputAmount).mul(Decimal.pow(10, tokenDecimals)).toString()\n\n        const fixAmountA =\n          byAmountIn && fromToken?.coin_type === apiPoolInfo?.tokenA?.coin_type\n            ? true\n            : toToken?.coin_type === apiPoolInfo?.tokenA?.coin_type && !byAmountIn\n              ? true\n              : false\n\n        const lowerTick = lowerTickData.tick\n        const upperTick = upperTickData.tick\n        const currentTickIndex = contractPoolInfo?.current_tick_index\n\n        if (lowerTick !== undefined && upperTick !== undefined && currentTickIndex !== undefined) {\n          if (currentTickIndex >= lowerTick && currentTickIndex <= upperTick) {\n            amount_a = fixAmountA ? amount : tokenMaxA\n            amount_b = fixAmountA ? tokenMaxB : amount\n          } else if (currentTickIndex > upperTick) {\n            amount_a = 0\n            amount_b = amount\n          } else if (currentTickIndex < lowerTick) {\n            amount_a = amount\n            amount_b = 0\n          }\n        }\n\n        let rewarderCoinTypes: string[] = []\n        if (contractPoolInfo?.index) {\n          const { rewarder_infos } = contractPoolInfo\n          rewarderCoinTypes =\n            (rewarder_infos?.length > 0 &&\n              rewarder_infos?.map((ele: any) => {\n                return ele.coinAddress\n              })) ||\n            []\n        }\n\n        const params: any = {\n          poolAddress: contractPoolInfo?.poolAddress,\n          coinTypeA: contractPoolInfo?.coinTypeA,\n          coinTypeB: contractPoolInfo?.coinTypeB,\n          amountA: amount_a,\n          amountB: amount_b,\n          fixAmountA,\n          lowerTick,\n          upperTick,\n          // currentSqrtPrice: currentPosPoolsRelatedData?.curSqrtPrice,\n          currentSqrtPrice: contractPoolInfo?.current_sqrt_price,\n          rewarderCoinTypes,\n          farmsPoolId: apiPoolInfo?.farmsPoolAddress\n        }\n\n        toastInfo = {\n          getShowInfo: (status: TransactionStatusType, balanceChanges?: Record<string, BalanceChanges>) => {\n            const description =\n              'Add ' + [formatDescription(fromAmount, fromToken?.symbol), formatDescription(toAmount, toToken?.symbol)].filter(Boolean).join(' and ')\n\n            const info: CommonTypeInfo = {\n              modalDescriptionText: description,\n              toastTitleText: description\n            }\n\n            if (status === 'success') {\n              let amountAF = fromAmount\n              let amountBF = toAmount\n\n              if (balanceChanges) {\n                amountAF = getBalanceChanges(balanceChanges, fromToken) || fromAmount\n                amountBF = getBalanceChanges(balanceChanges, toToken) || toAmount\n              }\n              const description =\n                'Add ' + [formatDescription(amountAF, fromToken?.symbol), formatDescription(amountBF, toToken?.symbol)].filter(Boolean).join(' and ')\n\n              info.toastDescriptionContent = description\n              info.modalDescriptionText = description\n              info.toastTitleText = 'Supplied Successful'\n            }\n\n            return info\n          }\n        }\n        transactionConfirmation(toastInfo)\n\n        if (autoStakePosition) {\n          const res = await getFarmsCreateAddData(params)\n          tx = res?.tx\n          msafeParams = res?.msafeParams\n        } else {\n          const res = await getClmmCreateAddData(params)\n          tx = res?.tx\n          msafeParams = res?.msafeParams\n        }\n      } else {\n        toastInfo = getZapDepositToastInfo()\n        transactionConfirmation(toastInfo)\n        tx = await getZapDepositTx(lowerTickData?.tick, upperTickData?.tick, autoStakePosition)\n      }\n\n      trackData = {\n        pool: contractPoolInfo?.poolAddress,\n        lower: lowerTickData?.tick,\n        upper: upperTickData?.tick,\n        coinTypeA: contractPoolInfo?.coinTypeA,\n        coinTypeB: contractPoolInfo?.coinTypeB,\n        amountA: amount_a,\n        amountB: amount_b,\n        currentSqrtPrice: contractPoolInfo?.current_sqrt_price,\n        slippage,\n        zapSlippage,\n        autoStack: autoStakePosition,\n        txAction: useZapIn ? 'addLiquidity-zap' : 'addLiquidity'\n      }\n\n      let res = await signAndExecuteTransaction(tx, toastInfo, {\n        useDevInspect: true,\n        useMev: mevProtect,\n        showSuccessModal: false,\n        useFastMode: transactionMode === 'Fast Mode',\n        maxCapForGas,\n        customGasPrice,\n        msafeParams,\n        trackData\n      })\n\n      if (res) {\n        console.log('🚀🚀🚀 ~ file: useAddLiquidity.ts:403 ~ handleSubmit ~ res:', res)\n        console.log('🚀🚀🚀 ~ file: useAddLiquidity.ts:411 ~ handleSubmit ~ isChecked:', isChecked)\n        if (res?.events?.length === 0) {\n          res = await getTransactionStatus(res.digest)\n        }\n        const { posId, farmsPosId } = parsePositionIdFromEvent(res)\n        console.log('🚀 ~ file: useAddLiquidity.ts:436 ~ handleSubmit ~ posId:', { posId, farmsPosId })\n        if (posId) {\n          setNftOpen(true)\n          if (farmsPosId) {\n            setRelatedPosId(farmsPosId)\n          } else {\n            setRelatedPosId(posId)\n          }\n        } else {\n          transactionSuccess(toastInfo)\n        }\n\n        if (isChecked) {\n          const params = { subscriptionSource: 'AddLiquidity', events: res.events }\n          notifiSubscription(params)\n        }\n        // 重新拿数据\n        fetchAccountBalance()\n        resetInputAmount()\n        setZapAmount('')\n        getList()\n        if (currentAccount?.address) {\n          setTimeout(() => {\n            getPositionBaseList(currentAccount?.address)\n          }, 2000)\n        }\n      } else {\n        // 如果失败，大概率都是池子价格变化了，重新手动获取一次池子价格，避免用户重复提交导致再次失败\n        if (contractPoolInfo) {\n          getContractPoolInfo(contractPoolInfo?.poolAddress).then(res => {\n            reCalculateZapData()\n          })\n        }\n      }\n    } catch (error) {\n      console.error(error, 'handleSubmit ~ error')\n      const errorLowerString = String(error).toLocaleLowerCase()\n      if (errorLowerString.includes('user') && errorLowerString.includes('reject')) {\n        if (apiPoolInfo?.poolAddress) {\n          const _contractPoolInfo = await getContractPoolInfo(apiPoolInfo?.poolAddress)\n          if (_contractPoolInfo) {\n            getCurrentPrice(_contractPoolInfo?.current_sqrt_price, apiPoolInfo, _contractPoolInfo?.current_tick_index)\n          }\n        }\n      }\n      throw error\n    }\n  }\n\n  const handleChangeZapIn = () => {\n    setUseZapIn(!useZapIn)\n  }\n\n  useEffect(() => {\n    resetInputAmount()\n  }, [useZapIn])\n\n  return {\n    percentMap,\n    handleAmountChange,\n    fromToken,\n    setFromToken,\n    toToken,\n    setToToken,\n    byAmountIn,\n    setByAmountIn,\n    fromAmount,\n    fromAmountValue,\n    setFromAmount,\n    toAmount,\n    toAmountValue,\n    setToAmount,\n    liquidityAmount,\n    fromBalanceInfo,\n    toBalanceInfo,\n    totalAmount,\n    fromTokenLock,\n    toTokenLock,\n    handleAdd,\n    confirmModalOpen,\n    setConfirmModalOpen,\n    nftOpen,\n    setNftOpen,\n    relatedPosId,\n    handleSubmit,\n    useZapIn,\n    handleChangeZapIn\n  }\n}\n\nexport default useAddLiquidity\n","import useAddLiquidityStore from '@/store/clmm/addLiquidity'\nimport { useGetTokenBalance } from '@cetus/hooks/src/useTokenBalance'\nimport { useAccountStore } from '@cetus/stores'\nimport { d, textEllipses } from '@cetus/utils'\nimport { useMemo } from 'react'\n\nfunction useAddLiquidityButton() {\n  const { fromAmount, toAmount, fromToken, toToken, fromTokenLock, toTokenLock, liquidityAmount } = useAddLiquidityStore()\n  const { currentAccount } = useAccountStore()\n\n  const { balanceInfo: fromBalanceInfo } = useGetTokenBalance(fromToken)\n  const { balanceInfo: toBalanceInfo } = useGetTokenBalance(toToken)\n\n  const submitBtnInfo = useMemo(() => {\n    const btnInfo: {\n      text?: string\n      disabled: boolean\n    } = {\n      text: 'Add Liquidity',\n      disabled: false\n    }\n\n    // 判断钱包\n    if (!currentAccount?.address) {\n      btnInfo.text = 'Connect Wallet'\n      btnInfo.disabled = false\n      return btnInfo\n    }\n\n    // 判断输入\n    if (!fromTokenLock && !toTokenLock && (!fromAmount || !toAmount || (fromAmount && !+fromAmount) || (toAmount && !+toAmount))) {\n      btnInfo.text = 'Enter an amount'\n      btnInfo.disabled = true\n      return btnInfo\n    }\n    if (fromTokenLock && !toTokenLock && (!toAmount || (toAmount && !+toAmount))) {\n      btnInfo.text = 'Enter an amount'\n      btnInfo.disabled = true\n      return btnInfo\n    }\n\n    if (toTokenLock && !fromTokenLock && (!fromAmount || (fromAmount && !+fromAmount))) {\n      btnInfo.text = 'Enter an amount'\n      btnInfo.disabled = true\n      return btnInfo\n    }\n\n    //判断余额\n    if (fromAmount && +fromAmount && d(fromAmount).gt(fromBalanceInfo?.balanceFormat || 0)) {\n      btnInfo.disabled = true\n      btnInfo.text = `Insufficient ${textEllipses(fromToken?.symbol, 10)} Balance`\n      return btnInfo\n    }\n    //判断余额\n    if (toAmount && +toAmount && d(toAmount).gt(toBalanceInfo?.balanceFormat || 0)) {\n      btnInfo.disabled = true\n      btnInfo.text = `Insufficient ${textEllipses(toToken?.symbol, 10)} Balance`\n      return btnInfo\n    }\n\n    if (!fromTokenLock && !toTokenLock && (!fromAmount || !toAmount)) {\n      btnInfo.disabled = true\n      return btnInfo\n    }\n    if (d(liquidityAmount).lte('0')) {\n      btnInfo.disabled = true\n      return btnInfo\n    }\n\n    return btnInfo\n  }, [\n    currentAccount?.address,\n    fromAmount,\n    toAmount,\n    fromBalanceInfo?.balanceDisplay,\n    toBalanceInfo?.balanceDisplay,\n    fromToken,\n    toToken,\n    fromTokenLock,\n    toTokenLock,\n    liquidityAmount\n  ])\n\n  return {\n    btnText: submitBtnInfo.text,\n    btnDisabled: submitBtnInfo.disabled\n  }\n}\n\nexport default useAddLiquidityButton\n","import { d, formatNumber } from '@cetus/utils'\n\nfunction useGetLeverage() {\n  const getLeverage = (minPrice?: string | number, maxPrice?: string | number) => {\n    if (minPrice && maxPrice) {\n      if (minPrice !== '0' && maxPrice !== '∞') {\n        return formatNumber(1 / (1 - Number(d(minPrice).div(maxPrice).toNumber() ** 0.25)), 2) + 'x'\n      } else {\n        return '1x'\n      }\n    }\n\n    return '1x'\n  }\n  return {\n    getLeverage\n  }\n}\n\nexport default useGetLeverage\n","import useLiquidityStore from '@/store/clmm'\nimport useAddLiquidityStore from '@/store/clmm/addLiquidity'\nimport usePriceRangeStore from '@/store/clmm/priceRange'\nimport { Tab } from '@cetus/design/src/components/common/SelectTab'\nimport { Token } from '@cetus/types'\nimport { d, textEllipses } from '@cetus/utils'\nimport { useEffect, useMemo, useState } from 'react'\nimport useGetLeverage from '../common/useGetLeverage'\nimport usePriceRange from './usePriceRange'\n\ntype DepositProps<T> = {\n  rangeTabList: T[]\n}\n\nfunction useDeposit<T>({ rangeTabList }: DepositProps<T>) {\n  // 获取流动性池信息 Get liquidity pool information\n  const { apiPoolInfo } = useLiquidityStore()\n\n  // 获取添加流动性相关状态和方法 Get add liquidity related states and methods\n  const {\n    fromToken,\n    toToken,\n    setFromToken,\n    setToToken,\n    byAmountIn,\n    setByAmountIn,\n    setIsFarmRewardsRange,\n    setAutoStakePosition,\n    fromTokenLock,\n    toTokenLock,\n    fromAmount,\n    toAmount,\n    setFromAmount,\n    setToAmount\n  } = useAddLiquidityStore()\n\n  // 获取价格范围数据 Get price range data\n  const { lowerTickData, upperTickData } = usePriceRangeStore()\n  const [currentRangeTab, setCurrentRangeTab] = useState<string>()\n  const [liquidityChartTab, setLiquidityChartTab] = useState<string>('distribution')\n  const { handleInitTickData } = usePriceRange()\n  const { getLeverage } = useGetLeverage()\n\n  const liquidityChartTabList = [\n    {\n      key: 'distribution',\n      beforeIcon: {\n        xlinkHref: '#icon-liquiditydistribution',\n        svgW: '16px',\n        svgH: '16px',\n        svgHover: 'primary',\n        activeColor: 'primary',\n        activeHoverColor: 'primary'\n      },\n      tooltip: 'Liquidity Distribution'\n    },\n    {\n      key: 'prices',\n      beforeIcon: {\n        xlinkHref: '#icon-poolhistoricprices',\n        svgW: '16px',\n        svgH: '16px',\n        svgHover: 'primary',\n        activeColor: 'primary',\n        activeHoverColor: 'primary'\n      },\n      tooltip: 'Historical Pool Prices'\n    }\n  ]\n\n  const handleChangeLiquidityChartTab = (item?: Tab) => {\n    setLiquidityChartTab(item?.key)\n  }\n\n  // 初始化当前选中coin标签 Initialize current coin tab\n  useEffect(() => {\n    if (apiPoolInfo) {\n      const coinType = apiPoolInfo?.displayTokenA?.coin_type\n      setCurrentRangeTab(coinType)\n    }\n  }, [apiPoolInfo?.poolAddress])\n\n  // 计算方向 Calculate direction\n  const direct = useMemo(() => {\n    return currentRangeTab === apiPoolInfo?.tokenA?.coin_type\n  }, [currentRangeTab, apiPoolInfo?.tokenA?.coin_type])\n\n  // 计算价格显示文本 Calculate price display text\n  const perText = useMemo(() => {\n    if (!apiPoolInfo?.tokenA || !apiPoolInfo?.tokenB) return ''\n    return direct\n      ? `${textEllipses(apiPoolInfo?.tokenB?.symbol, 10)} per ${textEllipses(apiPoolInfo?.tokenA?.symbol, 10)}`\n      : `${textEllipses(apiPoolInfo?.tokenA?.symbol, 10)} per ${textEllipses(apiPoolInfo?.tokenB?.symbol, 10)}`\n  }, [direct, apiPoolInfo?.tokenA as Token, apiPoolInfo?.tokenB as Token])\n\n  // 计算杠杆率 Calculate leverage\n  const leverage = useMemo(() => {\n    const minPrice = lowerTickData?.price\n    const maxPrice = upperTickData?.price\n    return getLeverage(minPrice, maxPrice)\n  }, [lowerTickData?.price, upperTickData?.price])\n\n  // 处理farm奖励范围变化 Handle farm rewards range change\n  const handleChangeIsFarmRewardsRange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setIsFarmRewardsRange(event.target.checked)\n    if (event.target.checked && apiPoolInfo?.farmsEffectiveTickLower && apiPoolInfo?.farmsEffectiveTickUpper) {\n      handleInitTickData(apiPoolInfo?.farmsEffectiveTickLower, apiPoolInfo?.farmsEffectiveTickUpper, apiPoolInfo)\n    }\n  }\n\n  // 监控farm奖励范围 Monitor farm rewards range\n  useEffect(() => {\n    if (d(lowerTickData?.tick).eq(d(apiPoolInfo?.farmsEffectiveTickLower)) && d(upperTickData?.tick).eq(d(apiPoolInfo?.farmsEffectiveTickUpper))) {\n      setIsFarmRewardsRange(true)\n    } else {\n      setIsFarmRewardsRange(false)\n    }\n  }, [lowerTickData?.tick, upperTickData?.tick, apiPoolInfo?.farmsEffectiveTickLower, apiPoolInfo?.farmsEffectiveTickUpper])\n\n  // 判断是否为全范围 Check if full range\n  const isFullRange = useMemo(() => {\n    return lowerTickData?.price === '0' && upperTickData?.price === '∞'\n  }, [lowerTickData?.price, upperTickData?.price])\n\n  // 处理tab反转点击 Handle tab reverse click\n  const onReverseClick = (item?: Tab) => {\n    if (item && item?.coin_type) {\n      setCurrentRangeTab(item?.coin_type)\n    } else {\n      setCurrentRangeTab(rangeTabList?.find(tab => tab.key !== currentRangeTab)?.key)\n    }\n    setFromToken(toToken)\n    setToToken(fromToken)\n    setByAmountIn(!byAmountIn)\n    if (byAmountIn) {\n      setToAmount(fromAmount)\n      setFromAmount('')\n    } else {\n      setFromAmount(toAmount)\n      setToAmount('')\n    }\n  }\n\n  // 处理自动质押仓位 Handle auto stake position\n  useEffect(() => {\n    if (apiPoolInfo?.haveFarming) {\n      if (fromTokenLock || toTokenLock) {\n        setAutoStakePosition(false)\n      } else {\n        setAutoStakePosition(true)\n      }\n    }\n  }, [fromTokenLock, toTokenLock, apiPoolInfo?.haveFarming])\n\n  // 处理输入框锁定状态 Handle input lock status\n  useEffect(() => {\n    if (byAmountIn && fromTokenLock && !toTokenLock) {\n      setFromAmount('')\n      setToAmount('')\n    }\n    if (!byAmountIn && !fromTokenLock && toTokenLock) {\n      setFromAmount('')\n      setToAmount('')\n    }\n    if (byAmountIn && !fromTokenLock && toTokenLock) {\n      setToAmount('')\n    }\n    if (!byAmountIn && fromTokenLock && !toTokenLock) {\n      setFromAmount('')\n    }\n    if (fromTokenLock && toTokenLock) {\n      setFromAmount('')\n      setToAmount('')\n    }\n  }, [fromTokenLock, toTokenLock])\n\n  return {\n    direct,\n    perText,\n    handleChangeIsFarmRewardsRange,\n    onReverseClick,\n    leverage,\n    currentRangeTab,\n    isFullRange,\n    handleChangeLiquidityChartTab,\n    liquidityChartTab,\n    liquidityChartTabList\n  }\n}\n\nexport default useDeposit\n","import usePriceRangeStore from '@/store/clmm/priceRange'\nimport { Token } from '@cetus/types'\nimport { CoinPairImage, Icon } from '@cetus/ui-kit'\nimport { cancelBubble, formatPrice, textEllipses } from '@cetus/utils'\nimport { Button, HStack, Modal, ModalBody, ModalContent, ModalFooter, ModalHeader, ModalOverlay, Text, VStack } from '@chakra-ui/react'\nimport { useLayoutEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\n\ninterface NFTModalProps {\n  onClose: () => void\n  posId: string\n  tokenA: Token\n  tokenB: Token\n  fee: string\n  isReverse: boolean\n}\nfunction NFTModal({ onClose, posId, tokenA, tokenB, fee, isReverse }: NFTModalProps) {\n  const navigate = useNavigate()\n  const [isDirect, setIsDirect] = useState(true)\n  const { lowerTickData, upperTickData } = usePriceRangeStore()\n\n  useLayoutEffect(() => {\n    if (isReverse) {\n      setIsDirect(false)\n    }\n  }, [isReverse])\n\n  return (\n    <Modal isOpen={true} autoFocus={false} returnFocusOnClose={false} onClose={onClose} isCentered>\n      <ModalOverlay />\n      <ModalContent w=\"400px\">\n        <ModalHeader>\n          <HStack justify=\"space-between\" w=\"100%\">\n            <Text fontSize=\"16px\" fontWeight=\"500\" color=\"text_caption\">\n              Open position successful\n            </Text>\n            <Button onClick={onClose} variant=\"unstyled\" p=\"0\" minW=\"unset\" minH=\"unset\" w=\"20px\" h=\"20px\">\n              <Icon xlinkHref=\"#icon-icon_close\" />\n            </Button>\n          </HStack>\n        </ModalHeader>\n\n        <ModalBody>\n          <VStack gap=\"36px\">\n            <VStack\n              gap=\"16px\"\n              bg=\"center / contain no-repeat url('/images/active-sui.gif') \"\n              w=\"240px\"\n              h=\"240px\"\n              justify=\"center\"\n              border=\"1px solid\"\n              borderColor=\"border\"\n              borderRadius=\"16px\"\n            >\n              <CoinPairImage\n                coinAIconUrl={tokenA?.logo_url}\n                coinBIconUrl={tokenB?.logo_url}\n                coinACoinType={tokenA?.coin_type}\n                coinBCoinType={tokenB?.coin_type}\n                w=\"48px\"\n                h=\"48px\"\n              />\n              <Text fontSize=\"20px\" fontWeight=\"500\" color=\"text_caption\" lineHeight=\"28px\">\n                {textEllipses(tokenA?.symbol, 10)} - {textEllipses(tokenB?.symbol, 10)}\n              </Text>\n\n              <HStack bg=\"bg_secondary\" p=\"8px 12px\" border=\"1px solid\" borderColor=\"border\" borderRadius=\"12px\">\n                <Text fontSize=\"14px\">Fee tier</Text>\n                <Text fontSize=\"14px\" color=\"text_highlight\">\n                  {fee}\n                </Text>\n              </HStack>\n            </VStack>\n            <VStack w=\"100%\" justify=\"center\" borderRadius=\"8px\" border=\"1px solid\" borderColor=\"border\" bg=\"input_bg\" p=\"16px 8px\">\n              <Text color=\"text_caption\" whiteSpace=\"nowrap\">\n                {isDirect ? formatPrice(lowerTickData?.price, 6) : formatPrice(upperTickData?.reversePrice, 6)} -&nbsp;\n                {isDirect ? formatPrice(upperTickData?.price, 6) : formatPrice(lowerTickData?.reversePrice, 6)}\n              </Text>\n              <HStack>\n                <HStack gap=\"0\">\n                  <Text color=\"primary_gray\">\n                    {textEllipses(isDirect ? (isReverse ? tokenA?.symbol : tokenB?.symbol) : isReverse ? tokenB?.symbol : tokenA?.symbol, 10)}\n                  </Text>\n                  <Text color=\"primary_gray\">&nbsp;per&nbsp;</Text>\n                  <Text color=\"primary_gray\">\n                    {textEllipses(isDirect ? (isReverse ? tokenB?.symbol : tokenA?.symbol) : isReverse ? tokenA?.symbol : tokenB?.symbol, 10)}\n                  </Text>\n                </HStack>\n                <Icon\n                  xlinkHref=\"#icon-icon_swap1\"\n                  w=\"16px\"\n                  h=\"16px\"\n                  onClick={(e: any) => {\n                    cancelBubble(e)\n                    setIsDirect(!isDirect)\n                  }}\n                />\n              </HStack>\n            </VStack>\n          </VStack>\n        </ModalBody>\n\n        <ModalFooter p=\"20px 0 0\">\n          <Button flex=\"1\" onClick={() => navigate(`/position-detail/${posId}`)} h=\"52px\" borderRadius=\"12px\" fontSize=\"16px\" fontWeight=\"500\">\n            View Detail\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  )\n}\n\nexport default NFTModal\n","import usePriceRange from '@/hooks/clmm/usePriceRange'\nimport usePriceRangeStore from '@/store/clmm/priceRange'\nimport { TickData } from '@/types'\nimport { Stack } from '@chakra-ui/react'\nimport PriceInput from './PriceInput'\n\nexport default function ControlPriceRange({\n  perText,\n  direct,\n  minPriceData,\n  maxPriceData,\n  isFullRange = false\n}: {\n  perText: string\n  direct: boolean\n  minPriceData: Partial<TickData>\n  maxPriceData: Partial<TickData>\n  isFullRange?: boolean\n}) {\n  const { tickDataLoading } = usePriceRangeStore()\n  const { handleAddPrice, handleSubPrice, setTickDataBasedOnPrice } = usePriceRange()\n  return (\n    <Stack flexDir={{ base: 'column', lg: 'row' }} w=\"100%\" gap={{ base: '8px', lg: '16px' }}>\n      <PriceInput\n        title=\"Min Price\"\n        perText={perText}\n        data={minPriceData}\n        direct={direct}\n        loading={tickDataLoading}\n        handleAddPrice={handleAddPrice}\n        handleSubPrice={handleSubPrice}\n        setTickDataBasedOnPrice={setTickDataBasedOnPrice}\n        isFullRange={isFullRange}\n      />\n      <PriceInput\n        title=\"Max Price\"\n        perText={perText}\n        data={maxPriceData}\n        direct={direct}\n        loading={tickDataLoading}\n        handleAddPrice={handleAddPrice}\n        handleSubPrice={handleSubPrice}\n        setTickDataBasedOnPrice={setTickDataBasedOnPrice}\n        isFullRange={isFullRange}\n      />\n    </Stack>\n  )\n}\n","import { CetusTooltip } from '@cetus/design'\nimport { cancelBubble } from '@cetus/utils'\nimport { Box, HStack, Skeleton, Stack, Switch, Text, VStack } from '@chakra-ui/react'\nimport FarmingIcon from '../../common/FarmingIcon'\n\nconst FarmRewardsRange = ({\n  minPrice,\n  maxPrice,\n  perText,\n  checked,\n  onChange,\n  loading\n}: {\n  minPrice: string\n  maxPrice: string\n  perText: string\n  checked: boolean\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void\n  loading?: boolean\n}) => {\n  return (\n    <HStack w=\"100%\" justify={{ base: 'space-between', lg: 'center' }} align={{ base: 'flex-start', lg: 'center' }} p={{ base: '0px', lg: '0' }}>\n      <Stack flexDir={{ base: 'column', lg: 'row' }}>\n        <HStack>\n          <FarmingIcon\n            tooltip={\n              <Box as=\"div\" lineHeight=\"20px\" fontSize=\"12px\">\n                Farm reward range: Only liquidity within this range is eligible to receive farming rewards of the pool. &nbsp;\n                <Box\n                  as=\"a\"\n                  color=\"primary\"\n                  onClick={(e: any) => {\n                    cancelBubble(e)\n                    window.open('https://medium.com/@CetusProtocol/cetus-new-farms-everything-you-should-know-about-it-c6b60e6a6ae5')\n                  }}\n                >\n                  Learn More\n                </Box>\n              </Box>\n            }\n          />\n          <Text>Farm rewards range</Text>\n        </HStack>\n        <HStack>\n          {loading ? (\n            <Skeleton w=\"120px\" h=\"14px\" />\n          ) : (\n            <Text color=\"primary_yellow\">\n              {minPrice}&nbsp;-&nbsp;{maxPrice}\n            </Text>\n          )}\n\n          <Text>{perText}</Text>\n        </HStack>\n      </Stack>\n\n      <Switch isChecked={checked} onChange={onChange} />\n    </HStack>\n  )\n}\n\nconst AutoStakePosition = ({\n  disabled,\n  checked,\n  onChange\n}: {\n  disabled: boolean\n  checked: boolean\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void\n}) => {\n  return (\n    <HStack\n      p={{ base: '12px 8px', lg: '16px' }}\n      // border={{ base: 'none', lg: '1px solid' }}\n      // borderColor={{ base: 'transparent', lg: 'border' }}\n      borderRadius={{ base: '12px', lg: '12px' }}\n      bg=\"card_bg\"\n      gap=\"12px\"\n      width=\"100%\"\n      justify=\"space-between\"\n    >\n      {/* <FarmingIcon flex=\"0 0 24px\" h=\"24px\" /> */}\n      <Text lineHeight=\"20px\" color=\"text_highlight\" fontSize=\"12px\">\n        Automatically stake your position into the farm to enjoy higher yield.\n      </Text>\n      {disabled ? (\n        <CetusTooltip\n          tooltip={\n            <VStack gap=\"4px\" align=\"flex-start\">\n              <Text fontSize=\"12px\">Farming rewards only available</Text>\n              <Text fontSize=\"12px\">for active positions.</Text>\n            </VStack>\n          }\n          placement=\"top\"\n          maxW=\"198px\"\n        >\n          <Switch isChecked={checked} isDisabled={disabled} maxW=\"24px\" onChange={onChange} />\n        </CetusTooltip>\n      ) : (\n        <Switch isChecked={checked} isDisabled={disabled} maxW=\"24px\" onChange={onChange} />\n      )}\n    </HStack>\n  )\n}\n\nexport { AutoStakePosition, FarmRewardsRange }\n","import useLiquidityStore from '@/store/clmm'\nimport useDepositStore from '@/store/clmm/deposit'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { d, formatPrice, formatSmallPrice, isAvailableObject, removeComma } from '@cetus/utils'\nimport { Center, Divider, HStack, Stack, StackProps, Text } from '@chakra-ui/react'\nimport { useEffect } from 'react'\n\nfunction PriceRangeForDate({\n  direct,\n  tab,\n  wrapStyle = {},\n  setTab,\n  liquidityChartTab\n}: {\n  direct: boolean\n  wrapStyle?: StackProps\n  tab: any\n  setTab: (item: any) => void\n  liquidityChartTab?: any\n}) {\n  const { priceRangeMap } = useDepositStore()\n  // const [tab, setTab] = useState({ type: '30D', key: 'month' })\n  const { minPriceForDate, maxPriceForDate, setMinPriceForDate, setMaxPriceForDate } = useLiquidityStore()\n  useEffect(() => {\n    let _min = ''\n    let _max = ''\n    if (isAvailableObject(priceRangeMap)) {\n      const lowest = (priceRangeMap as any)[tab?.key]?.[0]\n      const lowValue = direct ? lowest : d(1).div(lowest).toString()\n      const highest = (priceRangeMap as any)[tab?.key]?.[1]\n      const highValue = direct ? highest : d(1).div(highest).toString()\n      _min = formatPrice(lowValue, 6)\n      _max = formatPrice(highValue, 6)\n    } else {\n      _min = '-'\n      _max = '-'\n    }\n    setMinPriceForDate(_min)\n    setMaxPriceForDate(_max)\n  }, [direct, tab.key, priceRangeMap])\n\n  const { isApp } = useWindowWidth()\n\n  return (\n    <HStack w=\"100%\" justify=\"center\" {...wrapStyle}>\n      <Stack flexDir=\"column\" align={{ base: 'center', lg: 'flex-start' }} gap={{ base: '8px', lg: '4px' }}>\n        <HStack>\n          {liquidityChartTab !== 'prices' && (\n            <Center borderRadius=\"4px\" border=\"1px solid\" borderColor=\"border\" w=\"20px\" h=\"20px\" color=\"text_caption\">\n              <Divider w=\"14px\" border=\"1px dashed\" />\n            </Center>\n          )}\n          <Text fontSize={{ base: '12px', lg: '14px' }} whiteSpace=\"nowrap\" h=\"20px\" lineHeight=\"20px\">\n            {tab?.type}&nbsp;Price Range\n          </Text>\n        </HStack>\n\n        <Text\n          color=\"text_caption\"\n          fontSize={{ base: '12px', lg: '14px' }}\n          lineHeight={{ base: '12px', lg: '14px' }}\n          h={{ base: '12px', lg: '14px' }}\n          whiteSpace=\"nowrap\"\n        >\n          {direct\n            ? minPriceForDate === '-'\n              ? minPriceForDate\n              : formatSmallPrice(removeComma(minPriceForDate))\n            : maxPriceForDate === '-'\n              ? maxPriceForDate\n              : formatSmallPrice(removeComma(maxPriceForDate))}\n          &nbsp;-&nbsp;\n          {direct\n            ? maxPriceForDate === '-'\n              ? maxPriceForDate\n              : formatSmallPrice(removeComma(maxPriceForDate))\n            : minPriceForDate === '-'\n              ? minPriceForDate\n              : formatSmallPrice(removeComma(minPriceForDate))}\n        </Text>\n      </Stack>\n      {/* TODO APR 上的时候布局改变需要删掉 */}\n      {/* <SelectTab<any, any>\n      <SelectTab<any, any>\n        type=\"outlineTab\"\n        tabList={EstimatedAprDateTypeList}\n        currentTab={tab}\n        handleChangeTab={tab => {\n          setTab({ type: tab.label, key: tab.key })\n        }}\n        isActive={(currentTab, tab) => currentTab.key === tab.key}\n        wrapStyle={{\n          h: isApp ? '28px' : '20px',\n          p: '1px',\n          border: '1px solid',\n          borderColor: 'border',\n          borderRadius: { base: '8px', lg: '4px' },\n          gap: '0px',\n          w: 'auto'\n        }}\n        itemStyle={{\n          h: isApp ? '24px' : '16px',\n          p: '2px 8px',\n          fontSize: '12px',\n          borderRadius: '4px',\n          flex: 1\n        }}\n      /> */}\n    </HStack>\n  )\n}\n\nexport default PriceRangeForDate\n","import { GetRecommendRangesListParams, RecommendRange } from '@/types'\nimport { d, isAvailableObject } from '@cetus/utils'\nimport { getNearestTickByTick, TickUtil } from '@cetusprotocol/common-sdk'\nimport { useState } from 'react'\n\nexport default function useGetRecommendRanges() {\n  const [poolType, setPoolType] = useState('')\n\n  // 获取稳定区间\n  const getStableRange = (farmsEffectTickLower: number, farmsEffectTickUpper: number) => ({\n    default: {\n      lower: farmsEffectTickLower,\n      upper: farmsEffectTickUpper,\n      sort: 3\n    }\n  })\n\n  // 获取全范围区间\n  const getFullRange = (tickSpacing: number) => ({\n    'full range': {\n      lower: TickUtil.getMinIndex(tickSpacing),\n      upper: TickUtil.getMaxIndex(tickSpacing),\n      sort: 2\n    }\n  })\n\n  // 获取自定义区间\n  const getCustomRange = (currentTick: number, type: string, tickSpacing: number) => {\n    const addTick = d(tickSpacing)\n      .mul(type === 'unstable' ? 2 : 3)\n      .toNumber()\n    const nearesCurrentTick = getNearestTickByTick(Number(currentTick), Number(tickSpacing))\n\n    return {\n      custom: {\n        lower: d(nearesCurrentTick).sub(addTick).toNumber(),\n        upper: d(nearesCurrentTick).add(addTick).toNumber(),\n        sort: 1\n      }\n    }\n  }\n\n  // 获取推荐区间列表\n  const getRecommendRangesList = async (params: GetRecommendRangesListParams): Promise<{ rangeList: RecommendRange[]; error: boolean }> => {\n    try {\n      const stableRange =\n        params.farmsEffectTickLower && params.farmsEffectTickUpper ? getStableRange(params.farmsEffectTickLower, params.farmsEffectTickUpper) : null\n\n      const recommendRangesResult =\n        params.farmsEffectTickLower && params.farmsEffectTickUpper ? { ranges: {}, type: '' } : params?.recommendRangesInfo\n      console.log(recommendRangesResult, 'recommendRangesResult')\n      if (recommendRangesResult) {\n        // 更新 poolType\n        setPoolType(recommendRangesResult.type)\n        const fullRange = getFullRange(params.tickSpacing)\n        const customRange = getCustomRange(params.currentTick, recommendRangesResult.type, params.tickSpacing)\n\n        const combinedRanges = {\n          ...stableRange,\n          ...recommendRangesResult.ranges,\n          ...fullRange,\n          ...customRange\n        }\n        const rangesList = Object.entries(combinedRanges)\n          .map(([key, value]) => ({ key, ...value }))\n          .sort((a, b) => b.sort - a.sort)\n\n        if (isAvailableObject(recommendRangesResult.ranges) || isAvailableObject(stableRange)) {\n          return {\n            rangeList: rangesList,\n            error: false\n          }\n        } else {\n          return {\n            rangeList: rangesList,\n            error: true\n          }\n        }\n      } else {\n        return { rangeList: [], error: true }\n      }\n    } catch (error) {\n      console.error('Error in getRecommendRangesList:', error)\n      return { rangeList: [], error: true }\n    }\n  }\n\n  return { getRecommendRangesList, poolType }\n}\n","import usePriceRange from '@/hooks/clmm/usePriceRange'\nimport useGetRecommendRanges from '@/hooks/clmm/useRecommendRanges'\nimport useLiquidityStore from '@/store/clmm'\nimport useDepositStore from '@/store/clmm/deposit'\nimport usePriceRangeStore from '@/store/clmm/priceRange'\nimport { PoolApiInfo, RecommendRange } from '@/types'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { d, isAvailableObject } from '@cetus/utils'\nimport { Box, Flex, Image, Text, Tooltip, VStack } from '@chakra-ui/react'\nimport { useDebounceEffect } from 'ahooks'\nimport { useEffect, useMemo, useState } from 'react'\n\ntype SelectRecommendPriceRangeProps = {\n  poolAddress: string\n  currentTick: number\n  tickSpacing: number\n  farmsEffectTickLower?: number\n  farmsEffectTickUpper?: number\n}\n\nconst getRecommendRangeData = (rangeName: string, isActive = false) => {\n  switch (rangeName) {\n    case 'passive':\n      return {\n        name: 'Conservative',\n        image: isActive ? 'img_conservative_sel@2x.png' : 'img_conservative_nor@2x.png'\n      }\n    case 'active':\n      return {\n        name: 'Active',\n        image: isActive ? 'img_active_sel@2x.png' : 'img_active_nor@2x.png'\n      }\n    case 'full range':\n      return {\n        name: 'Full Range',\n        image: isActive ? 'img_fullrange_sel@2x.png' : 'img_fullrange_nor@2x.png'\n      }\n    case 'custom':\n      return {\n        name: 'Custom',\n        image: isActive ? 'img_custom_sel@2x.png' : 'img_custom_nor@2x.png'\n      }\n    case 'suggested':\n      return {\n        name: 'Stable',\n        image: isActive ? 'img_stable_sel@2x.png' : 'img_stable_nor@2x.png'\n      }\n    default:\n      return {\n        name: 'Default',\n        image: isActive ? 'img_stable_sel@2x.png' : 'img_stable_nor@2x.png'\n      }\n  }\n}\n\nconst getRecommendRangeTipText = (rangeName: string) => {\n  switch (rangeName) {\n    case 'passive':\n      return 'Lower yields and lower impermanent loss. Less frequent rebalancing.'\n    case 'active':\n      return 'Higher yields but higher impermanent loss potentially. Requires frequent rebalancing.'\n    case 'full range':\n      return 'Full range positions are active all the time with no need to be rebalanced but may earn less fees than concentrated liquidity.'\n    case 'custom':\n      return 'Recommended only if you understand how concentrated liquidity works.'\n    case 'suggested':\n      return 'Stable range according to the price history of last 7 days.'\n    default:\n      return 'The default range of this pool is set following the real-time valid range of its farm.'\n  }\n}\nconst rangeWidthMap: Record<string, string> = {\n  '1': '100%',\n  '2': '50%',\n  '3': '33.33%',\n  '4': '50%'\n}\n\nexport default function SelectRecommendPriceRange(props: SelectRecommendPriceRangeProps) {\n  const { getRecommendRangesList } = useGetRecommendRanges()\n  const [recommendRanges, setRecommendRanges] = useState<RecommendRange[]>()\n  const { poolAddress, currentTick, tickSpacing, farmsEffectTickLower, farmsEffectTickUpper } = props\n  const { isApp } = useWindowWidth()\n  const { handleInitTickData } = usePriceRange()\n  const { apiPoolInfo, currentRange, setCurrentRange } = useLiquidityStore()\n  const { lowerTickData, upperTickData, setLowerTickData, setUpperTickData, setTickDataLoading, tickDataLoading } = usePriceRangeStore()\n  const { recommendRangesInfo } = useDepositStore()\n\n  const originApiPoolInfo: PoolApiInfo = useMemo(() => {\n    return { ...apiPoolInfo, tickSpacing }\n  }, [apiPoolInfo, tickSpacing])\n\n  const fetchRecommendRanges = async () => {\n    try {\n      if (!currentRange) {\n        setTickDataLoading(true)\n      }\n\n      const { rangeList, error } = await getRecommendRangesList({ ...props, recommendRangesInfo })\n      setRecommendRanges(rangeList)\n\n      if (error) {\n        setCurrentRange('custom')\n        if (!currentRange && originApiPoolInfo?.tokenA && originApiPoolInfo?.tokenB) {\n          const range = rangeList.find(item => item.key === 'custom')\n          if (range) {\n            handleInitTickData(range?.lower, range?.upper, originApiPoolInfo)\n          }\n        }\n      } else {\n        setCurrentRange(rangeList[0]?.key)\n        if (!currentRange && originApiPoolInfo?.tokenA && originApiPoolInfo?.tokenB) {\n          handleInitTickData(rangeList[0]?.lower, rangeList[0]?.upper, originApiPoolInfo)\n        }\n      }\n    } catch (error) {\n      console.error(error)\n    } finally {\n      setTickDataLoading(false)\n    }\n  }\n\n  useDebounceEffect(\n    () => {\n      if (poolAddress && currentTick !== undefined && tickSpacing !== undefined) {\n        fetchRecommendRanges()\n      }\n    },\n    [poolAddress, tickSpacing, recommendRangesInfo],\n    { wait: 500 }\n  )\n\n  useEffect(() => {\n    if (recommendRanges && recommendRanges.length > 0 && isAvailableObject(lowerTickData) && isAvailableObject(upperTickData)) {\n      const range = recommendRanges?.find(range => d(range.lower).eq(d(lowerTickData?.tick)) && d(range.upper).eq(d(upperTickData?.tick)))\n\n      if (range) {\n        if (range.key !== currentRange) {\n          setCurrentRange(range.key)\n        }\n      } else {\n        setCurrentRange('custom')\n      }\n    }\n  }, [lowerTickData?.tick, upperTickData?.tick, recommendRanges])\n\n  return (\n    <>\n      <Flex\n        w=\"100%\"\n        flexDirection={{ base: 'row', lg: 'column' }}\n        flexWrap=\"wrap\"\n        // border=\"1px solid\"\n        // borderColor={recommendRanges && recommendRanges.length > 0 ? 'border' : 'transparent'}\n        borderRadius=\"16px\"\n        rowGap={{ base: '20px', lg: '12px' }}\n        // bg={recommendRanges && recommendRanges.length > 0 ? 'background' : 'transparent'}\n        marginTop=\"0\"\n        // minH=\"62px\"\n      >\n        {recommendRanges?.map((range, index) => {\n          return (\n            <Tooltip label={getRecommendRangeTipText(range.key)} key={range.key} lineHeight=\"1.5\" placement=\"top\" gutter={-4}>\n              <VStack\n                cursor=\"pointer\"\n                textAlign=\"center\"\n                width={{ base: recommendRanges?.length ? rangeWidthMap[recommendRanges.length + ''] : 'auto', lg: 'auto' }}\n                p=\"4px 8px\"\n                pb=\"8px\"\n                gap=\"4px\"\n                onClick={() => {\n                  if (range.key !== currentRange) {\n                    setCurrentRange(range.key)\n                    if (originApiPoolInfo?.tokenA && originApiPoolInfo?.tokenB) {\n                      handleInitTickData(range.lower, range.upper, originApiPoolInfo)\n                    }\n                  }\n                }}\n                bg={range.key == currentRange ? 'primary_opacity.10' : 'transparent'}\n                borderRadius=\"12px\"\n                sx={{\n                  _hover: {\n                    p: {\n                      color: 'primary'\n                    }\n                  }\n                }}\n              >\n                <Image\n                  decoding=\"async\"\n                  display={range.key === currentRange ? 'block' : 'none'}\n                  src={`/images/${getRecommendRangeData(range.key, true)?.image}`}\n                  w=\"90px\"\n                  h={range.key === currentRange ? '28px' : '0px'}\n                  fallback={<Box bg=\"background\" w=\"72px\" h={range.key === currentRange ? '28px' : '0px'} borderRadius=\"4px\" />}\n                />\n                <Image\n                  decoding=\"async\"\n                  display={range.key === currentRange ? 'none' : 'block'}\n                  src={`/images/${getRecommendRangeData(range.key, false)?.image}`}\n                  w=\"90px\"\n                  h={range.key === currentRange ? '0px' : '28px'}\n                  fallback={<Box bg=\"background\" w=\"72px\" h={range.key === currentRange ? '0px' : '28px'} borderRadius=\"4px\" />}\n                />\n                <Text color={range.key == currentRange ? 'primary' : 'primary_gray'} fontSize=\"12px\">\n                  {getRecommendRangeData(range.key).name}\n                </Text>\n              </VStack>\n            </Tooltip>\n          )\n        })}\n      </Flex>\n    </>\n  )\n}\n","import useCurrentVaultsFarm from '@/hooks/vaults-farming/useCurrentVaultsFarm'\nimport useVaultsActionStore from '@/store/vaults-v2/useVaultsAction'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { Token } from '@cetus/types'\nimport { HTextLabelBox } from '@cetus/ui-kit'\nimport { Button, HStack, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useState } from 'react'\nimport FarmingModal from '../farming/FarmingModal'\nimport VaultsAprBlock from '../list/common/VaultsAprBlock'\nimport VaultModal from '../modal/index'\n\ntype VaultBannerProps = {\n  displayTokenA?: Token\n  displayTokenB?: Token\n  feeDisplay: string\n  clmmPool: string\n  vaultId: string\n  isReverse: boolean\n  category: string // haedal | cetus\n}\n\n// 添加流动性页面Vault快捷入口\nfunction VaultBanner(props: VaultBannerProps) {\n  const [isOpen, setIsOpen] = useState(false)\n  const { displayTokenA, displayTokenB, feeDisplay, clmmPool, vaultId, isReverse, category } = props\n  const { isApp } = useWindowWidth()\n  const { clearVaultsActionData } = useVaultsActionStore()\n\n  useEffect(() => {\n    clearVaultsActionData()\n  }, [isOpen])\n\n  const { isVaultsFarming } = useCurrentVaultsFarm(vaultId)\n\n  const [isOpenFarmingModal, setIsOpenFarmingModal] = useState(false)\n  const [farmingModalAction, setFarmingModalAction] = useState('Stake')\n\n  return (\n    <>\n      <VStack\n        width={isApp ? '100%' : '460px'}\n        height=\"128px\"\n        backgroundImage=\"/images/bg_autorebalancer@2x.png\"\n        backgroundSize=\"100% 100%\"\n        padding=\"12px 16px 20px\"\n        flexDirection=\"column\"\n        justifyContent=\"space-between\"\n      >\n        <HStack width=\"100%\" justifyContent=\"space-between\" alignItems=\"center\">\n          <Text color=\"primary\" fontWeight=\"500\">\n            Join via an Auto Vault{' '}\n          </Text>\n          <HStack>\n            <HTextLabelBox\n              label=\"\"\n              wrapStyle={{\n                w: 'unset',\n                gap: '6px'\n              }}\n              labelStyle={{\n                fontSize: '14px',\n                color: 'text_highlight',\n                fontWeight: '500'\n              }}\n              value={<VaultsAprBlock wrapStyle={{ flexDirection: 'row' }} vaultId={vaultId} />}\n              valueStyle={{\n                color: 'text_highlight',\n                h: '20px',\n                lineHeight: '20px',\n                fontSize: '14px',\n                fontWeight: '500',\n                textDecoration: 'none'\n              }}\n            />\n            <Button width=\"88px\" height=\"24px\" borderRadius=\"4px\" fontSize=\"12px\" onClick={() => setIsOpen(true)} fontWeight=\"500\">\n              Deposit\n            </Button>\n          </HStack>\n        </HStack>\n        <HStack w=\"100%\" mt=\"14px\">\n          <Text lineHeight=\"20px\" maxWidth=\"290px\" fontSize=\"12px\">\n            Automate your LPing by selecting a {category == 'haedal' ? '3rd party' : ''} strategy provider and enjoy higher yields powered by\n            experts!{' '}\n          </Text>\n        </HStack>\n      </VStack>\n      <VaultModal\n        isOpen={isOpen}\n        setIsOpen={setIsOpen}\n        displayTokenA={displayTokenA}\n        displayTokenB={displayTokenB}\n        feeDisplay={feeDisplay}\n        clmmPool={clmmPool}\n        vaultId={vaultId}\n        isReverse={isReverse}\n        category={category}\n        isVaultsFarming={isVaultsFarming}\n        setIsOpenFarmingModal={setIsOpenFarmingModal}\n        setFarmingModalAction={setFarmingModalAction}\n        onClose={() => setIsOpen(false)}\n      />\n      {isOpenFarmingModal && (\n        <FarmingModal\n          isOpen={isOpenFarmingModal}\n          setIsOpen={setIsOpenFarmingModal}\n          setIsOpenPre={setIsOpen}\n          onClose={() => setIsOpenFarmingModal(false)}\n          farmingModalAction={farmingModalAction}\n          vaultsId={vaultId}\n          isDetail={false}\n        />\n      )}\n    </>\n  )\n}\nexport default VaultBanner\n","import useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { Icon } from '@cetus/ui-kit'\nimport { Box, HStack, Popover, PopoverBody, PopoverContent, PopoverTrigger, Skeleton, Stack, StackProps, Text } from '@chakra-ui/react'\n\nexport const CurrentPrice = ({\n  price,\n  perText,\n  wrapStyle,\n  loading\n}: {\n  price: string\n  perText: string\n  wrapStyle?: StackProps\n  loading?: boolean\n}) => {\n  return (\n    <Stack flexDir={{ base: 'column', lg: 'row' }} align=\"flex-start\" {...wrapStyle}>\n      <Text>Current Price</Text>\n      <HStack as=\"div\" h=\"14px\">\n        {loading || price === '--' ? (\n          <Skeleton w=\"66px\" h=\"14px\" display=\"inline-block\" />\n        ) : (\n          <Text as=\"span\" color=\"text_caption\" display=\"inline-block\" h=\"14px\" lineHeight=\"14px\">\n            {price}\n          </Text>\n        )}\n        <Text as=\"span\" display=\"inline-block\" h=\"14px\" lineHeight=\"14px\">{` ${perText}`}</Text>\n      </HStack>\n    </Stack>\n  )\n}\n\nexport const Item = ({\n  label,\n  tooltip,\n  children,\n  wrapStyle = {}\n}: {\n  label: string\n  tooltip: string\n  children: React.ReactNode\n  wrapStyle?: StackProps\n}) => {\n  const { isApp } = useWindowWidth()\n  return (\n    <HStack w=\"100%\" justify=\"space-between\" {...wrapStyle}>\n      <HStack gap=\"4px\">\n        <Text>{label}</Text>\n        <Popover isLazy trigger={isApp ? 'click' : 'hover'}>\n          <PopoverTrigger>\n            <Box>\n              <Icon xlinkHref=\"#icon-icon_tips\" />\n            </Box>\n          </PopoverTrigger>\n          <PopoverContent>\n            <PopoverBody p=\"12px\" fontSize=\"12px\" lineHeight=\"20px\">\n              {tooltip}\n            </PopoverBody>\n          </PopoverContent>\n        </Popover>\n      </HStack>\n      {children}\n    </HStack>\n  )\n}\n","import EstimatedApr from '@/components/common/EstimatedApr'\nimport Slippage from '@/components/common/Slippage'\nimport TotalAmount from '@/components/common/TotalAmount'\nimport WithTooltipInfo from '@/components/common/WithTooltipInfo'\nimport ControlPriceRange from '@/components/liquidity/clmm/ControlPriceRange'\nimport { AutoStakePosition, FarmRewardsRange } from '@/components/liquidity/clmm/FarmRelated'\nimport LiquidityRangeChart from '@/components/liquidity/clmm/LiquidityRangeChart'\nimport PriceRangeForDate from '@/components/liquidity/clmm/PriceRangeForDate'\nimport SelectRecommendPriceRange from '@/components/liquidity/clmm/SelectRecommendPriceRange'\nimport VaultBanner from '@/components/vaults-v2/add-liquidity/VaultsBanner'\nimport ZapDeposite from '@/components/zap/ZapDeposite'\nimport ZapSubmiteInfo from '@/components/zap/ZapSubmiteInfo'\nimport ZapSwitch from '@/components/zap/ZapSwitch'\nimport { usePriceImpact } from '@/hooks/swap/usePriceImpact'\nimport useLiquidityStore from '@/store/clmm'\nimport useAddLiquidityStore from '@/store/clmm/addLiquidity'\nimport useDepositStore from '@/store/clmm/deposit'\nimport usePriceRangeStore from '@/store/clmm/priceRange'\nimport { showNewVersionApr } from '@/types/position'\nimport { getDisplayPrice, getDisplayReversePrice } from '@/utils/pool'\nimport { ErrorTips, SelectTab, TradeInputGroup } from '@cetus/design'\nimport useQueryParams from '@cetus/hooks/src/useQueryParams'\nimport { d, formatNumberWithDown, formatTickPrice } from '@cetus/utils'\nimport { Box, Button, Heading, HStack, Skeleton, Text, VStack } from '@chakra-ui/react'\nimport { useMemo, useState } from 'react'\nimport DepositRatio from '../../../common/DepositRatio'\nimport { CurrentPrice } from './common'\nimport { ProvideLiquidityProps } from './type'\n\nfunction H5ProvideLiquidity({\n  btnText,\n  btnDisabled,\n  handleChangeIsFarmRewardsRange,\n  onReverseClick,\n  leverage,\n  direct,\n  perText,\n  rangeTabList,\n  currentRangeTab,\n  fromBalanceInfo,\n  toBalanceInfo,\n  fromAmountValue,\n  toAmountValue,\n  handleAmountChange,\n  handleAdd,\n  isFullRange,\n  useZapIn,\n  handleChangeZapIn,\n  handleChangeLiquidityChartTab,\n  liquidityChartTab,\n  liquidityChartTabList\n}: ProvideLiquidityProps) {\n  const {\n    currentPriceData,\n    contractPoolInfo,\n    apiPoolInfo,\n    resetLiquidity,\n    contractPoolInfoLoading,\n    apiPoolInfoLoading,\n    minPriceForDate,\n    maxPriceForDate,\n    currentRange\n  } = useLiquidityStore()\n  const { lowerTickData, upperTickData } = usePriceRangeStore()\n\n  const {\n    autoStakePosition,\n    setAutoStakePosition,\n    isFarmRewardsRange,\n    fromAmount,\n    toAmount,\n    byAmountIn,\n    percentMap,\n    fromToken,\n    toToken,\n    totalAmount,\n    fromTokenLock,\n    toTokenLock\n  } = useAddLiquidityStore()\n\n  const { poolAddress } = useQueryParams()\n  const handleChangeAutoStake = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setAutoStakePosition(event.target.checked)\n  }\n\n  const currentPrice = useMemo(() => {\n    if (currentPriceData?.currentPrice && currentPriceData.pool === poolAddress) {\n      return currentPriceData?.currentPrice\n    }\n    return undefined\n  }, [currentPriceData?.currentPrice, poolAddress])\n\n  const { priceImpactBasedOnMarket } = usePriceImpact(\n    fromToken,\n    toToken,\n    direct ? '1' : (formatTickPrice(currentPrice) as string),\n    direct ? (formatTickPrice(currentPrice) as string) : '1',\n    true\n  )\n  const priceImpactBasedOnMarketDisplay = useMemo(() => {\n    if (priceImpactBasedOnMarket && d(priceImpactBasedOnMarket).abs().gte(30)) {\n      if (d(priceImpactBasedOnMarket).gte(30)) {\n        return `+${d(priceImpactBasedOnMarket).toFixed(0)}%`\n      }\n      return `${d(priceImpactBasedOnMarket).toFixed(0)}%`\n    }\n    return undefined\n  }, [priceImpactBasedOnMarket])\n\n  const showFarming = useMemo(() => {\n    return !!apiPoolInfo?.haveFarming && !!apiPoolInfo?.displayFarmsEffectMaxPrice && !!apiPoolInfo?.displayFarmsEffectMinPrice\n  }, [apiPoolInfo?.haveFarming, apiPoolInfo?.displayFarmsEffectMaxPrice, apiPoolInfo?.displayFarmsEffectMinPrice])\n\n  const [tab, setTab] = useState({ type: '30D', key: 'month' })\n\n  const { recommendRangesInfo } = useDepositStore()\n  const ranges = useMemo(() => {\n    if (recommendRangesInfo?.dateTypeRanges && recommendRangesInfo?.dateTypeRanges?.length > 0) {\n      const ranges = recommendRangesInfo?.dateTypeRanges?.reduce((acc: any, item: any) => {\n        acc[item.dateType] = item\n        return acc\n      }, {})\n      return ranges\n    }\n  }, [recommendRangesInfo?.dateTypeRanges])\n\n  return (\n    <VStack w=\"100%\" gap=\"20px\">\n      <Box w=\"100%\" bg=\"card_bg\" p=\"16px 8px 0px\" borderRadius=\"12px\">\n        <HStack w=\"100%\" justify=\"space-between\" mb=\"16px\">\n          <Heading fontSize=\"14px\" fontWeight=\"500\">\n            Select Range\n          </Heading>\n          {apiPoolInfoLoading ? (\n            <Skeleton h=\"28px\" borderRadius=\"8px\" w=\"150px\" />\n          ) : (\n            <HStack>\n              <SelectTab<any, any>\n                type=\"outlineTab\"\n                tabList={rangeTabList}\n                currentTab={currentRangeTab}\n                handleChangeTab={tab => onReverseClick(tab)}\n                wrapStyle={{\n                  h: '28px',\n                  p: '3px',\n                  border: '1px solid',\n                  borderColor: 'border',\n                  borderRadius: '8px',\n                  gap: '4px'\n                }}\n                itemStyle={{\n                  flex: 1,\n                  h: '20px',\n                  p: '0 4px',\n                  borderRadius: '4px',\n                  gap: '4px'\n                }}\n              />\n            </HStack>\n          )}\n        </HStack>\n        <SelectRecommendPriceRange\n          poolAddress={poolAddress as string}\n          currentTick={contractPoolInfo?.current_tick_index as number}\n          tickSpacing={contractPoolInfo?.tickSpacing as number}\n          farmsEffectTickLower={apiPoolInfo?.farmsEffectiveTickLower}\n          farmsEffectTickUpper={apiPoolInfo?.farmsEffectiveTickUpper}\n        />\n\n        <CurrentPrice\n          price={formatTickPrice(direct ? currentPriceData?.currentPrice : currentPriceData.reverseCurrentPrice, 6)}\n          perText={perText}\n          loading={contractPoolInfoLoading}\n          wrapStyle={{\n            mt: '28px',\n            gap: '12px'\n          }}\n        />\n        <VStack position=\"relative\" flex=\"1\" h=\"180px\" pos=\"relative\" mt=\"20px\">\n          <Box position=\"absolute\" top={'-5px'} left=\"0\" zIndex=\"99999\">\n            <SelectTab<any, any>\n              type=\"outlineTab\"\n              tabList={liquidityChartTabList}\n              currentTab={liquidityChartTab}\n              handleChangeTab={tab => handleChangeLiquidityChartTab && handleChangeLiquidityChartTab(tab)}\n              wrapStyle={{\n                h: '28px',\n                p: '3px',\n                border: '1px solid',\n                borderColor: 'border',\n                borderRadius: '8px',\n                gap: '0px',\n                zIndex: '99'\n              }}\n              itemStyle={{\n                h: '20px',\n                p: '0px 4px',\n                borderRadius: '4px',\n                gap: '0px'\n              }}\n            />\n          </Box>\n\n          <LiquidityRangeChart\n            handleClickRefresh={() => {}}\n            direct={direct}\n            minPriceData={direct ? lowerTickData : upperTickData}\n            maxPriceData={direct ? upperTickData : lowerTickData}\n            dashedMarkerLine={[minPriceForDate, maxPriceForDate]}\n            currentRange={currentRange}\n            liquidityChartTab={liquidityChartTab}\n          />\n        </VStack>\n        {priceImpactBasedOnMarketDisplay && (\n          <ErrorTips\n            tips={`The current pool price deviates largely from the real-time market price (${priceImpactBasedOnMarketDisplay}). Please be careful with your price range setting to avoid large impermanent loss.`}\n            borderRadius=\"12px\"\n            p=\"8px\"\n            w=\"100%\"\n            mt=\"90px\"\n            mb=\"-70px\"\n            tipsFontSize=\"12px\"\n          />\n        )}\n        <PriceRangeForDate\n          liquidityChartTab={liquidityChartTab}\n          tab={tab}\n          setTab={setTab}\n          direct={direct}\n          wrapStyle={{ mt: '90px', align: 'center', gap: '20px' }}\n        />\n        <VStack borderRadius=\"16px\" bg=\"card_bg\" mt=\"8px\" mb=\"8px\" p=\"8px 0px\" gap=\"12px\">\n          <ControlPriceRange\n            perText={perText}\n            direct={direct}\n            isFullRange={isFullRange}\n            minPriceData={direct ? lowerTickData : upperTickData}\n            maxPriceData={direct ? upperTickData : lowerTickData}\n          />\n          {fromTokenLock && toTokenLock && (\n            <ErrorTips\n              isShowIcon={false}\n              tipsFontSize=\"12px\"\n              justifyContent=\"center\"\n              tips=\"The max price should be higher than min price.\"\n              h=\"32px\"\n              borderRadius=\"8px\"\n            />\n          )}\n        </VStack>\n        <VStack mb=\"20px\" gap=\"12px\">\n          {/* </Item> */}\n          {apiPoolInfo?.haveFarming && apiPoolInfo?.displayFarmsEffectMaxPrice && apiPoolInfo?.displayFarmsEffectMinPrice && (\n            <FarmRewardsRange\n              minPrice={\n                direct ? getDisplayPrice(apiPoolInfo?.displayFarmsEffectMinPrice) : getDisplayReversePrice(apiPoolInfo?.displayFarmsEffectMaxPrice)\n              }\n              maxPrice={\n                direct ? getDisplayPrice(apiPoolInfo?.displayFarmsEffectMaxPrice) : getDisplayReversePrice(apiPoolInfo?.displayFarmsEffectMinPrice)\n              }\n              loading={apiPoolInfoLoading}\n              perText={perText}\n              checked={isFarmRewardsRange}\n              onChange={handleChangeIsFarmRewardsRange}\n            />\n          )}\n          <WithTooltipInfo\n            label=\"Leverage\"\n            tooltip=\"This parameter indicates the concentration rate of your liquidity relative to a full range position.\"\n            wrapStyle={{\n              flexDir: 'row',\n              gap: '8px',\n              p: '0',\n              mt: '4px'\n            }}\n          >\n            <Text color=\"primary\">{fromTokenLock && toTokenLock ? '--' : leverage}</Text>\n          </WithTooltipInfo>\n          {showNewVersionApr && (\n            <EstimatedApr\n              tab={tab}\n              setTab={setTab}\n              ranges={ranges}\n              currentPosPoolsRelatedData={{\n                minPriceRaw: formatNumberWithDown(!apiPoolInfo?.isReverse ? lowerTickData?.price : upperTickData?.reversePrice, undefined, true),\n                maxPriceRaw: formatNumberWithDown(!apiPoolInfo?.isReverse ? upperTickData?.price : lowerTickData?.reversePrice, undefined, true)\n              }}\n              posPoolInfo={apiPoolInfo}\n              isActive={!fromTokenLock || !toTokenLock}\n            />\n          )}\n        </VStack>\n      </Box>\n      <Box w=\"100%\">\n        <VStack\n          w=\"calc(100%)\"\n          gap=\"16px\"\n          p=\"16px 8px\"\n          bg=\"card_bg\"\n          // border=\"1px solid\"\n          borderColor=\"border\"\n          borderRadius=\"12px\"\n          margin=\"-1px -1px 0px -1px\"\n        >\n          <HStack w=\"100%\" justify=\"space-between\">\n            <HStack gap=\"20px\">\n              <Heading fontSize=\"14px\" fontWeight=\"500\">\n                Deposit Amounts\n              </Heading>\n              {apiPoolInfo?.haveZap && <ZapSwitch action=\"Deposit\" value={useZapIn} onChange={handleChangeZapIn} />}\n            </HStack>\n            <HStack>\n              <Slippage slippageType=\"liquidity\" poolType=\"clmm\" />\n              {/* <MEVProtect /> */}\n            </HStack>\n          </HStack>\n          <VStack w=\"100%\" gap=\"12px\">\n            <Box w=\"100%\" position=\"relative\">\n              {useZapIn && !(fromTokenLock && toTokenLock) ? (\n                <ZapDeposite\n                  apiPoolInfo={apiPoolInfo}\n                  action=\"Deposit\"\n                  currentSqrtPrice={currentPriceData?.currentSqrtPrice}\n                  lowerTick={lowerTickData?.tick}\n                  upperTick={upperTickData?.tick}\n                />\n              ) : (\n                <TradeInputGroup\n                  onClick={onReverseClick}\n                  from={{\n                    wrapStyle: { h: '108px' },\n                    balance: fromBalanceInfo?.balanceFormat || '',\n                    value: fromAmount + '',\n                    amountValue: fromAmountValue,\n                    loading: false,\n                    onChange: value => {\n                      handleAmountChange(value, true, fromToken?.coin_type === apiPoolInfo?.tokenA?.coin_type)\n                    },\n                    selectable: false,\n                    placeholder: '0.0',\n                    token: fromToken,\n                    onFocusChange: (focus: boolean) => {\n                      if (focus && +(fromAmount + '') && !byAmountIn) {\n                        handleAmountChange(fromAmount + '', true, fromToken?.coin_type === apiPoolInfo?.tokenA?.coin_type)\n                      }\n                    },\n                    lock: {\n                      isLock: fromTokenLock && !toTokenLock,\n                      text: 'The market price is outside your specified price range. Single-asset deposit only.'\n                    }\n                  }}\n                  to={{\n                    wrapStyle: { h: '108px' },\n                    balance: toBalanceInfo?.balanceFormat || '',\n                    value: toAmount + '',\n                    amountValue: toAmountValue,\n                    loading: false,\n                    onFocusChange: (focus: boolean) => {\n                      if (focus && +(toAmount + '') && byAmountIn) {\n                        handleAmountChange(toAmount + '', false, toToken?.coin_type === apiPoolInfo?.tokenA?.coin_type)\n                      }\n                    },\n                    onChange: value => {\n                      handleAmountChange(value, false, toToken?.coin_type === apiPoolInfo?.tokenA?.coin_type)\n                    },\n                    selectable: false,\n                    placeholder: '0.0',\n                    token: toToken,\n                    lock: {\n                      isLock: !fromTokenLock && toTokenLock,\n                      text: 'The market price is outside your specified price range. Single-asset deposit only.'\n                    }\n                  }}\n                  iconParams={{\n                    xlinkHref: '#icon-icon_add',\n                    svgFill: 'text_caption'\n                  }}\n                  lock={{\n                    isLock: fromTokenLock && toTokenLock,\n                    style: { h: '224px' }\n                  }}\n                />\n              )}\n            </Box>\n          </VStack>\n          {!useZapIn && !!apiPoolInfo?.poolAddress && !(fromTokenLock && toTokenLock) && (\n            <>\n              <VStack gap=\"12px\" w=\"100%\">\n                <TotalAmount labelStyle={{ color: 'primary_gray' }} totalAmount={totalAmount} loading={false} />\n                <DepositRatio\n                  type=\"image\"\n                  percentMap={percentMap}\n                  lockRatio={fromTokenLock && toTokenLock}\n                  tokenA={fromToken}\n                  tokenB={toToken}\n                  isReverse={fromToken?.coin_type !== apiPoolInfo?.tokenA?.coin_type}\n                />\n              </VStack>\n              <Button\n                w=\"100%\"\n                h=\"52px\"\n                fontSize=\"20px\"\n                fontWeight=\"500\"\n                borderRadius=\"16px\"\n                isDisabled={btnDisabled || !!apiPoolInfo?.isFrozen}\n                isLoading={false}\n                onClick={handleAdd}\n              >\n                {btnText}\n              </Button>\n            </>\n          )}\n          {useZapIn && <ZapSubmiteInfo action=\"Deposit\" isReverse={fromToken?.coin_type !== apiPoolInfo?.tokenA?.coin_type} />}\n        </VStack>\n      </Box>\n      {apiPoolInfo?.haveFarming && (\n        <AutoStakePosition disabled={fromTokenLock || toTokenLock} checked={autoStakePosition} onChange={handleChangeAutoStake} />\n      )}\n      {apiPoolInfo?.vaultCategory ? (\n        <VStack w=\"100%\">\n          <VaultBanner\n            displayTokenA={apiPoolInfo?.displayTokenA}\n            displayTokenB={apiPoolInfo?.displayTokenB}\n            feeDisplay={apiPoolInfo?.feeDisplay}\n            clmmPool={apiPoolInfo?.poolAddress}\n            vaultId={apiPoolInfo?.vaultId}\n            isReverse={apiPoolInfo?.isReverse}\n            category={apiPoolInfo?.vaultCategory}\n          />\n        </VStack>\n      ) : null}\n    </VStack>\n  )\n}\n\nexport default H5ProvideLiquidity\n","import DepositRatio from '@/components/common/DepositRatio'\nimport EstimatedApr from '@/components/common/EstimatedApr'\nimport TotalAmount from '@/components/common/TotalAmount'\nimport WithTooltipInfo from '@/components/common/WithTooltipInfo'\nimport VaultBanner from '@/components/vaults-v2/add-liquidity/VaultsBanner'\nimport ZapDeposite from '@/components/zap/ZapDeposite'\nimport ZapSubmiteInfo from '@/components/zap/ZapSubmiteInfo'\nimport ZapSwitch from '@/components/zap/ZapSwitch'\nimport { usePriceImpact } from '@/hooks/swap/usePriceImpact'\nimport useLiquidityStore from '@/store/clmm'\nimport useAddLiquidityStore from '@/store/clmm/addLiquidity'\nimport useDepositStore from '@/store/clmm/deposit'\nimport usePriceRangeStore from '@/store/clmm/priceRange'\nimport { showNewVersionApr } from '@/types/position'\nimport { getDisplayPrice, getDisplayReversePrice } from '@/utils/pool'\nimport { Block, ErrorTips, SelectTab, TradeInputGroup } from '@cetus/design'\nimport useQueryParams from '@cetus/hooks/src/useQueryParams'\nimport { d, formatNumberWithDown, formatTickPrice, isAvailableObject } from '@cetus/utils'\nimport { Box, Button, Divider, HStack, Skeleton, Text, VStack } from '@chakra-ui/react'\nimport { useMemo, useState } from 'react'\nimport DivisionBlock from '../../common/DivisionBlock'\nimport ControlPriceRange from '../ControlPriceRange'\nimport { AutoStakePosition, FarmRewardsRange } from '../FarmRelated'\nimport LiquidityRangeChart from '../LiquidityRangeChart'\nimport PriceRangeForDate from '../PriceRangeForDate'\nimport SelectRecommendPriceRange from '../SelectRecommendPriceRange'\nimport { CurrentPrice } from './common'\nimport { ProvideLiquidityProps } from './type'\n\nfunction PCProvideLiquidity({\n  btnText,\n  btnDisabled,\n  handleChangeIsFarmRewardsRange,\n  onReverseClick,\n  leverage,\n  direct,\n  perText,\n  rangeTabList,\n  currentRangeTab,\n  fromBalanceInfo,\n  toBalanceInfo,\n  fromAmountValue,\n  toAmountValue,\n  handleAmountChange,\n  handleAdd,\n  isFullRange,\n  useZapIn,\n  handleChangeZapIn,\n  handleSubmit,\n  handleChangeLiquidityChartTab,\n  liquidityChartTab,\n  liquidityChartTabList\n}: ProvideLiquidityProps) {\n  const {\n    currentPriceData,\n    contractPoolInfo,\n    apiPoolInfo,\n    resetLiquidity,\n    contractPoolInfoLoading,\n    apiPoolInfoLoading,\n    minPriceForDate,\n    maxPriceForDate,\n    currentRange\n  } = useLiquidityStore()\n  const { lowerTickData, upperTickData } = usePriceRangeStore()\n  const {\n    autoStakePosition,\n    setAutoStakePosition,\n    isFarmRewardsRange,\n    fromAmount,\n    toAmount,\n    byAmountIn,\n    percentMap,\n    fromToken,\n    toToken,\n    totalAmount,\n    fromTokenLock,\n    toTokenLock\n  } = useAddLiquidityStore()\n  const { poolAddress } = useQueryParams()\n  const handleChangeAutoStake = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setAutoStakePosition(event.target.checked)\n  }\n\n  const currentPrice = useMemo(() => {\n    if (currentPriceData?.currentPrice && currentPriceData.pool === poolAddress) {\n      return currentPriceData?.currentPrice\n    }\n    return undefined\n  }, [currentPriceData?.currentPrice, poolAddress])\n\n  const { priceImpactBasedOnMarket } = usePriceImpact(\n    fromToken,\n    toToken,\n    direct ? '1' : (formatTickPrice(currentPrice) as string),\n    direct ? (formatTickPrice(currentPrice) as string) : '1',\n    true\n  )\n\n  const priceImpactBasedOnMarketDisplay = useMemo(() => {\n    if (priceImpactBasedOnMarket && d(priceImpactBasedOnMarket).abs().gte(30)) {\n      if (d(priceImpactBasedOnMarket).gte(30)) {\n        return `+${d(priceImpactBasedOnMarket).toFixed(0)}%`\n      }\n      return `${d(priceImpactBasedOnMarket).toFixed(0)}%`\n    }\n    return undefined\n  }, [priceImpactBasedOnMarket])\n\n  const [tab, setTab] = useState({ type: '30D', key: 'month' })\n\n  const { recommendRangesInfo } = useDepositStore()\n  // console.log('🚀🚀🚀 ~ PC.tsx:53 ~ maxPriceForDate:', direct, apiPoolInfo, lowerTickData, upperTickData, minPriceForDate, maxPriceForDate)\n  const ranges = useMemo(() => {\n    console.log('🚀🚀🚀 ~ PC.tsx:118 ~ PCProvideLiquidity ~ recommendRangesInfo?.dateTypeRanges:', recommendRangesInfo?.dateTypeRanges)\n    if (recommendRangesInfo?.dateTypeRanges && recommendRangesInfo?.dateTypeRanges?.length > 0) {\n      const ranges = recommendRangesInfo?.dateTypeRanges?.reduce((acc: any, item: any) => {\n        acc[item.dateType] = item\n        return acc\n      }, {})\n      return ranges\n    }\n  }, [recommendRangesInfo?.dateTypeRanges])\n\n  return (\n    <>\n      <HStack gap=\"16px\" align=\"flex-start\">\n        <DivisionBlock title=\"Select Range\" wrapStyle={{ flex: 1, minW: '588px', gap: '0', border: 'none', bg: 'card_bg' }}>\n          {!rangeTabList || !rangeTabList.length ? (\n            <Skeleton h=\"32px\" borderRadius=\"8px\" w=\"180px\" />\n          ) : (\n            <HStack>\n              <SelectTab<any, any>\n                type=\"outlineTab\"\n                tabList={rangeTabList}\n                currentTab={currentRangeTab}\n                handleChangeTab={tab => onReverseClick(tab)}\n                wrapStyle={{\n                  h: '32px',\n                  p: '3px',\n                  border: '1px solid',\n                  borderColor: 'border',\n                  borderRadius: '8px',\n                  gap: '4px',\n                  zIndex: '99'\n                }}\n                itemStyle={{\n                  h: '24px',\n                  p: '4px 12px',\n                  borderRadius: '4px',\n                  gap: '4px'\n                }}\n              />\n              <SelectTab<any, any>\n                type=\"outlineTab\"\n                tabList={liquidityChartTabList}\n                currentTab={liquidityChartTab}\n                tooltipGutter={8}\n                handleChangeTab={tab => handleChangeLiquidityChartTab && handleChangeLiquidityChartTab(tab)}\n                wrapStyle={{\n                  h: '32px',\n                  p: '3px',\n                  border: '1px solid',\n                  borderColor: 'border',\n                  borderRadius: '8px',\n                  gap: '0px',\n                  zIndex: '99'\n                }}\n                itemStyle={{\n                  h: '24px',\n                  p: '4px 12px',\n                  borderRadius: '4px',\n                  gap: '0px'\n                }}\n              />\n            </HStack>\n          )}\n          <VStack w=\"100%\" flex=\"1\" pos=\"relative\" gap=\"16px\" mt=\"12px\">\n            <VStack w=\"100%\" pos=\"relative\" gap=\"0px\">\n              <HStack pl=\"126px\" w=\"100%\" h=\"24px\" justify={liquidityChartTab === 'prices' ? 'center' : 'flex-start'}>\n                <CurrentPrice\n                  loading={apiPoolInfoLoading}\n                  price={\n                    isAvailableObject(currentPriceData)\n                      ? (formatTickPrice(direct ? currentPriceData?.currentPrice : currentPriceData.reverseCurrentPrice, 6) as string)\n                      : '--'\n                  }\n                  perText={perText}\n                  wrapStyle={{\n                    // ml: '126px',\n                    ml: '0px',\n                    zIndex: 99\n                  }}\n                />\n              </HStack>\n              <HStack w=\"100%\" align=\"flex-start\" gap=\"20px\">\n                <Box mt=\"16px\" w={{ base: '100%', lg: '106px' }}>\n                  <SelectRecommendPriceRange\n                    poolAddress={poolAddress as string}\n                    currentTick={contractPoolInfo?.current_tick_index as number}\n                    tickSpacing={contractPoolInfo?.tickSpacing as number}\n                    farmsEffectTickLower={apiPoolInfo?.farmsEffectiveTickLower}\n                    farmsEffectTickUpper={apiPoolInfo?.farmsEffectiveTickUpper}\n                  />\n                </Box>\n                <VStack w=\"calc(100% - 126px)\" gap=\"12px\">\n                  <HStack w=\"100%\" gap=\"32px\" alignItems=\"start\">\n                    <VStack w=\"100%\" gap={priceImpactBasedOnMarketDisplay ? '72px' : '32px'}>\n                      <Box w=\"100%\" h=\"230px\" pt={liquidityChartTab !== 'prices' ? '20px' : 0}>\n                        <LiquidityRangeChart\n                          handleClickRefresh={() => {}}\n                          direct={direct}\n                          minPriceData={direct ? lowerTickData : upperTickData}\n                          maxPriceData={direct ? upperTickData : lowerTickData}\n                          dashedMarkerLine={[minPriceForDate, maxPriceForDate]}\n                          currentRange={currentRange}\n                          liquidityChartTab={liquidityChartTab}\n                        />\n                      </Box>\n                      {priceImpactBasedOnMarketDisplay ? (\n                        <ErrorTips\n                          tips={`The current pool price deviates largely from the real-time market price (${priceImpactBasedOnMarketDisplay}). Please be careful with your price range setting to avoid large impermanent loss.`}\n                          borderRadius=\"12px\"\n                          p=\"8px\"\n                          w=\"100%\"\n                          // mb=\"-20px\"\n                          tipsFontSize=\"12px\"\n                        />\n                      ) : (\n                        <Box h=\"24px\" />\n                      )}\n                    </VStack>\n                  </HStack>\n                  <VStack w=\"100%\" gap=\"12px\" position=\"relative\">\n                    {\n                      <HStack w=\"100%\">\n                        {isAvailableObject(lowerTickData) && isAvailableObject(upperTickData) && showNewVersionApr && (\n                          <Block bg=\"none\" border=\"none\" borderRadius=\"12px\" p=\"8px\" w=\"110px\" position=\"absolute\" left=\"-126px\" top=\"16px\">\n                            <WithTooltipInfo\n                              label=\"Leverage\"\n                              tooltip=\"This parameter indicates the concentration rate of your liquidity relative to a full range position.\"\n                              wrapStyle={{\n                                flexDir: 'column',\n                                align: 'flex-start',\n                                gap: '2px'\n                              }}\n                            >\n                              <Text color=\"primary\">{fromTokenLock && toTokenLock ? '--' : leverage}</Text>\n                            </WithTooltipInfo>\n                          </Block>\n                        )}\n                        <ControlPriceRange\n                          perText={perText}\n                          direct={direct}\n                          isFullRange={isFullRange}\n                          minPriceData={direct ? lowerTickData : upperTickData}\n                          maxPriceData={direct ? upperTickData : lowerTickData}\n                        />\n                      </HStack>\n                    }\n\n                    {fromTokenLock && toTokenLock && (\n                      <ErrorTips\n                        isShowIcon={false}\n                        tipsFontSize=\"12px\"\n                        justifyContent=\"center\"\n                        tips=\"The max price should be higher than min price.\"\n                        h=\"32px\"\n                        borderRadius=\"8px\"\n                      />\n                    )}\n                    {apiPoolInfo?.haveFarming && apiPoolInfo?.displayFarmsEffectMaxPrice && apiPoolInfo?.displayFarmsEffectMinPrice && (\n                      <FarmRewardsRange\n                        minPrice={\n                          direct\n                            ? getDisplayPrice(apiPoolInfo?.displayFarmsEffectMinPrice)\n                            : getDisplayReversePrice(apiPoolInfo?.displayFarmsEffectMaxPrice)\n                        }\n                        maxPrice={\n                          direct\n                            ? getDisplayPrice(apiPoolInfo?.displayFarmsEffectMaxPrice)\n                            : getDisplayReversePrice(apiPoolInfo?.displayFarmsEffectMinPrice)\n                        }\n                        loading={apiPoolInfoLoading}\n                        perText={perText}\n                        checked={isFarmRewardsRange}\n                        onChange={handleChangeIsFarmRewardsRange}\n                      />\n                    )}\n                  </VStack>\n                </VStack>\n              </HStack>\n            </VStack>\n\n            <Divider orientation=\"horizontal\" />\n            {showNewVersionApr && (\n              <EstimatedApr\n                tab={tab}\n                setTab={setTab}\n                ranges={ranges}\n                currentPosPoolsRelatedData={{\n                  minPriceRaw: formatNumberWithDown(!apiPoolInfo?.isReverse ? lowerTickData?.price : upperTickData?.reversePrice, undefined, true),\n                  maxPriceRaw: formatNumberWithDown(!apiPoolInfo?.isReverse ? upperTickData?.price : lowerTickData?.reversePrice, undefined, true)\n                }}\n                posPoolInfo={apiPoolInfo}\n                isActive={!fromTokenLock && !toTokenLock}\n                wrapStyle={{\n                  w: !isAvailableObject(lowerTickData) || !isAvailableObject(upperTickData) ? '100%' : 'auto'\n                }}\n              >\n                {isAvailableObject(lowerTickData) && isAvailableObject(upperTickData) && (\n                  <PriceRangeForDate\n                    direct={direct}\n                    tab={tab}\n                    setTab={setTab}\n                    liquidityChartTab={liquidityChartTab}\n                    wrapStyle={{\n                      w: 'auto',\n                      mt: priceImpactBasedOnMarketDisplay ? '-20px' : '0'\n                    }}\n                  />\n                )}\n              </EstimatedApr>\n            )}\n          </VStack>\n        </DivisionBlock>\n        <VStack gap=\"12px\" minW=\"420px\" maxW=\"460px\" w=\"460px\">\n          <DivisionBlock title=\"Deposit Amounts\" wrapStyle={{ gap: '12px', w: '100%', border: 'none', bg: 'card_bg' }}>\n            <HStack>\n              {/* <MEVProtect /> */}\n              {apiPoolInfo?.haveZap && <ZapSwitch action=\"Deposit\" value={useZapIn} onChange={handleChangeZapIn} />}\n            </HStack>\n            <Box w=\"100%\" position=\"relative\">\n              {useZapIn && !(fromTokenLock && toTokenLock) ? (\n                <ZapDeposite\n                  apiPoolInfo={apiPoolInfo}\n                  action=\"Deposit\"\n                  currentSqrtPrice={currentPriceData?.currentSqrtPrice}\n                  lowerTick={lowerTickData?.tick}\n                  upperTick={upperTickData?.tick}\n                />\n              ) : (\n                <>\n                  <TradeInputGroup\n                    onClick={onReverseClick}\n                    from={{\n                      wrapStyle: { h: '108px' },\n                      balance: fromBalanceInfo?.balanceFormat || '',\n                      value: fromAmount,\n                      amountValue: fromAmountValue,\n                      loading: false,\n                      onChange: value => {\n                        handleAmountChange(value, true, fromToken?.coin_type === apiPoolInfo?.tokenA?.coin_type)\n                      },\n                      selectable: false,\n                      placeholder: '0.0',\n                      token: fromToken,\n                      onFocusChange: (focus: boolean) => {\n                        if (focus && +(fromAmount + '') && !byAmountIn) {\n                          handleAmountChange(fromAmount + '', true, fromToken?.coin_type === apiPoolInfo?.tokenA?.coin_type)\n                        }\n                      },\n                      lock: {\n                        isLock: fromTokenLock && !toTokenLock,\n                        text: 'The market price is outside your specified price range. Single-asset deposit only.'\n                      },\n                      rightJustify: 'space-around'\n                    }}\n                    to={{\n                      wrapStyle: { h: '108px' },\n                      balance: toBalanceInfo?.balanceFormat || '',\n                      value: toAmount,\n                      amountValue: toAmountValue,\n                      loading: false,\n                      onFocusChange: (focus: boolean) => {\n                        if (focus && +(toAmount + '') && byAmountIn) {\n                          handleAmountChange(toAmount + '', false, toToken?.coin_type === apiPoolInfo?.tokenA?.coin_type)\n                        }\n                      },\n                      onChange: value => {\n                        handleAmountChange(value, false, toToken?.coin_type === apiPoolInfo?.tokenA?.coin_type)\n                      },\n                      selectable: false,\n                      placeholder: '0.0',\n                      token: toToken,\n                      lock: {\n                        isLock: !fromTokenLock && toTokenLock,\n                        text: 'The market price is outside your specified price range. Single-asset deposit only.'\n                      },\n                      rightJustify: 'space-around'\n                    }}\n                    iconParams={{\n                      xlinkHref: '#icon-icon_add',\n                      svgFill: 'text_caption'\n                    }}\n                    lock={{\n                      isLock: fromTokenLock && toTokenLock,\n                      style: { h: '224px' }\n                    }}\n                  />\n                </>\n              )}\n              <VStack w=\"100%\" gap=\"8px\" mt=\"12px\">\n                {!useZapIn && !!apiPoolInfo?.poolAddress && !(fromTokenLock && toTokenLock) && (\n                  <VStack\n                    gap=\"12px\"\n                    w=\"100%\"\n                    borderRadius=\"16px\"\n                    // border=\"1px solid\"\n                    // borderColor=\"border\"\n                    // bg=\"bg_six\"\n                    // p={apiPoolInfo?.displayTokenA && apiPoolInfo?.displayTokenB ? '0 8px 16px' : '0 16px'}\n                  >\n                    <Button\n                      w=\"100%\"\n                      h=\"52px\"\n                      margin=\"-1px -1px 5px\"\n                      fontSize=\"18px\"\n                      fontWeight=\"500\"\n                      borderRadius=\"12px\"\n                      isDisabled={btnDisabled || !!apiPoolInfo?.isFrozen}\n                      isLoading={false}\n                      onClick={handleAdd}\n                    >\n                      {btnText}\n                    </Button>\n\n                    {apiPoolInfo?.displayTokenA && apiPoolInfo?.displayTokenB && (\n                      <>\n                        <TotalAmount\n                          labelStyle={{ color: 'primary_gray' }}\n                          totalAmount={totalAmount}\n                          loading={false}\n                          valueStyle={{ h: '20px', lineHeight: '20px' }}\n                        />\n                        <DepositRatio\n                          type=\"image\"\n                          percentMap={percentMap}\n                          lockRatio={fromTokenLock && toTokenLock}\n                          tokenA={fromToken}\n                          tokenB={toToken}\n                          isReverse={fromToken?.coin_type !== apiPoolInfo?.tokenA?.coin_type}\n                        />\n                        {/* {apiPoolInfo?.haveFarming && (\n                        <AutoStakePosition disabled={fromTokenLock || toTokenLock} checked={autoStakePosition} onChange={handleChangeAutoStake} />\n                      )} */}\n                      </>\n                    )}\n                  </VStack>\n                )}\n\n                {useZapIn && (\n                  <ZapSubmiteInfo action=\"Deposit\" isPositionStyle={true} isReverse={fromToken?.coin_type !== apiPoolInfo?.tokenA?.coin_type} />\n                )}\n              </VStack>\n            </Box>\n          </DivisionBlock>\n\n          <VStack gap=\"0\">\n            {apiPoolInfo?.haveFarming && (\n              <VStack w=\"100%\" gap=\"8px\" mb=\"12px\">\n                <AutoStakePosition disabled={fromTokenLock || toTokenLock} checked={autoStakePosition} onChange={handleChangeAutoStake} />\n              </VStack>\n            )}\n            {apiPoolInfo?.vaultCategory && (\n              <VaultBanner\n                displayTokenA={apiPoolInfo?.displayTokenA}\n                displayTokenB={apiPoolInfo?.displayTokenB}\n                feeDisplay={apiPoolInfo?.feeDisplay}\n                clmmPool={apiPoolInfo?.poolAddress}\n                vaultId={apiPoolInfo?.vaultId}\n                isReverse={apiPoolInfo?.isReverse}\n                category={apiPoolInfo?.vaultCategory}\n              />\n            )}\n          </VStack>\n        </VStack>\n      </HStack>\n    </>\n  )\n}\n\nexport default PCProvideLiquidity\n","import AddLiquidityConfirmModal from '@/components/liquidity/clmm/AddLiquidityConfirmModal'\nimport useAddLiquidity from '@/hooks/clmm/useAddLiquidity'\nimport useAddLiquidityButton from '@/hooks/clmm/useAddLiquidityButton'\nimport useDeposit from '@/hooks/clmm/useDeposit'\nimport useLiquidityStore from '@/store/clmm'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { Token } from '@cetus/types'\nimport { isAvailableObject } from '@cetus/utils'\nimport NFTModal from '../NFTModal'\nimport H5ProvideLiquidity from './H5'\nimport PCProvideLiquidity from './PC'\n\nimport useGetVaultsFarmingApiInfo from '@/hooks/vaults-farming/useGetVaultsFarmingApiInfo'\nimport useVaultsFarmingStore from '@/store/vaults-farming'\nimport useZapStore from '@/store/zap/index'\nimport { useEffect } from 'react'\n\ninterface RangeTab {\n  label: string\n  key: string\n  imgInfo: {\n    src: string | undefined\n    w: string\n    h: string\n    borderRadius: string\n    fallbackSrc: string\n  }\n}\n\ninterface FeeTier {\n  title: string\n  feeDisplay: string\n  feeRate: string\n  poolAddress: string\n  tvl: unknown\n}\n\ninterface ProvideLiquidityProps<T extends RangeTab = RangeTab, K extends FeeTier = FeeTier> {\n  rangeTabList: T[]\n  currentFeeTier?: K\n  getList: () => Promise<void>\n  getPrice: () => Promise<void>\n}\n\nfunction ProvideLiquidity<T extends RangeTab, K extends FeeTier>({ rangeTabList, currentFeeTier, getList, getPrice }: ProvideLiquidityProps<T, K>) {\n  const { apiPoolInfo } = useLiquidityStore()\n  const { zapAmount, currentZapToken } = useZapStore()\n  const {\n    direct,\n    perText,\n    handleChangeIsFarmRewardsRange,\n    onReverseClick,\n    leverage,\n    currentRangeTab,\n    isFullRange,\n    handleChangeLiquidityChartTab,\n    liquidityChartTab,\n    liquidityChartTabList\n  } = useDeposit<T>({ rangeTabList })\n  const {\n    handleAmountChange,\n    fromAmountValue,\n    toAmountValue,\n    fromBalanceInfo,\n    toBalanceInfo,\n    fromTokenLock,\n    toTokenLock,\n    relatedPosId,\n    nftOpen,\n    setNftOpen,\n    handleAdd,\n    handleSubmit,\n    useZapIn,\n    handleChangeZapIn,\n    confirmModalOpen,\n    setConfirmModalOpen\n  } = useAddLiquidity(getList, direct)\n\n  const { btnText, btnDisabled } = useAddLiquidityButton()\n\n  const { isApp } = useWindowWidth()\n  const props = {\n    btnText,\n    btnDisabled,\n    handleChangeIsFarmRewardsRange,\n    onReverseClick,\n    leverage,\n    direct,\n    perText,\n    rangeTabList,\n    currentRangeTab,\n    fromBalanceInfo,\n    toBalanceInfo,\n    fromAmountValue,\n    toAmountValue,\n    handleAmountChange,\n    handleAdd,\n    isFullRange,\n    useZapIn,\n    handleChangeZapIn,\n    handleSubmit,\n    handleChangeLiquidityChartTab,\n    liquidityChartTab,\n    liquidityChartTabList\n  }\n\n  const { getHaedalFarmingList } = useGetVaultsFarmingApiInfo()\n  const { vaultsFarmObj } = useVaultsFarmingStore()\n  // 页面刷新重新获取\n  useEffect(() => {\n    if (!isAvailableObject(vaultsFarmObj)) {\n      getHaedalFarmingList()\n    }\n  }, [vaultsFarmObj])\n\n  return (\n    <>\n      {isApp ? <H5ProvideLiquidity {...props} /> : <PCProvideLiquidity {...props} />}\n      {confirmModalOpen && (\n        <AddLiquidityConfirmModal\n          onClose={() => setConfirmModalOpen(false)}\n          data={{ feeTier: currentFeeTier as any, zapData: useZapIn ? { amount: zapAmount, token: currentZapToken } : undefined }}\n          onSubmit={handleSubmit}\n        />\n      )}\n      {nftOpen && relatedPosId && isAvailableObject(apiPoolInfo) && (\n        <NFTModal\n          onClose={() => setNftOpen(false)}\n          tokenA={apiPoolInfo?.displayTokenA as Token}\n          tokenB={apiPoolInfo?.displayTokenB as Token}\n          posId={relatedPosId}\n          fee={apiPoolInfo?.feeDisplay as string}\n          isReverse={apiPoolInfo?.isReverse as boolean}\n        />\n      )}\n    </>\n  )\n}\n\nexport default ProvideLiquidity\n","import useLiquidityStore from '@/store/clmm'\nimport usePositionStore from '@/store/position'\nimport { useRpcListener } from '@cetus/hooks'\nimport useQueryParams from '@cetus/hooks/src/useQueryParams'\nimport { useAccountStore } from '@cetus/stores'\nimport { useEffect, useMemo, useState } from 'react'\nimport usePositionList from '../position/usePositionList'\n\nfunction useMyPositions() {\n  const { posBaseListLoading, posBaseListGroupByPool } = usePositionStore()\n  const { manualRefresh } = useLiquidityStore()\n  const { currentAccount, onWalletModal } = useAccountStore()\n  const { getPositionBaseList, getPosRelatedData } = usePositionList()\n  const [rpcNodeErrorStr, setRpcNodeErrorStr] = useState('')\n  const { poolAddress } = useQueryParams()\n  /**\n   * 获取个人所有仓位列表\n   * Get the list of all personal positions\n   * @param walletAddress string 钱包地址 Wallet address\n   */\n  const handleGetPositionList = async (walletAddress: string) => {\n    const res = await getPositionBaseList(walletAddress)\n    console.log('🚀🚀🚀 ~ useMyPositions.ts:23 ~ handleGetPositionList ~ res:', res)\n    if (Array.isArray(res)) {\n      getPosRelatedData(res)\n    }\n    if (typeof res === 'string') {\n      setRpcNodeErrorStr(res)\n    }\n  }\n  /**\n   * 初始化请求个人所有仓位列表\n   * Initialize request personal position list\n   */\n  useEffect(() => {\n    if (currentAccount?.address) {\n      handleGetPositionList(currentAccount?.address)\n    }\n  }, [currentAccount?.address])\n\n  /**\n   * 手动刷新，重新请求个人所有仓位列表\n   * Manually refresh and request personal position list\n   */\n\n  useEffect(() => {\n    if (manualRefresh && currentAccount?.address) {\n      handleGetPositionList(currentAccount?.address)\n    }\n  }, [manualRefresh])\n\n  /**\n   * 监听rpc节点切换，重新请求个人仓位列表\n   * Listen for rpc node switching and request personal position list\n   */\n  useRpcListener({\n    onRpcChange: () => {\n      if (currentAccount?.address) {\n        handleGetPositionList(currentAccount?.address)\n      }\n    }\n  })\n  /**\n   * 获取当前池子的个人仓位列表\n   * Get the personal position list of the current pool\n   */\n  const data = useMemo(() => {\n    if (poolAddress) {\n      const res = posBaseListGroupByPool[poolAddress.toLowerCase() || '']\n      if (res) {\n        return res?.list\n      }\n      return []\n    }\n    return []\n  }, [poolAddress, JSON.stringify(posBaseListGroupByPool)])\n\n  return {\n    data,\n    rpcNodeErrorStr,\n    posBaseListLoading,\n    currentAccount,\n    onWalletModal\n  }\n}\n\nexport default useMyPositions\n","import PositionItem from '@/components/position/clmm/list/PositionItem'\nimport useMyPositions from '@/hooks/clmm/useMyPositions'\nimport useLiquidityStore from '@/store/clmm'\nimport { Block } from '@cetus/design'\nimport { NoData } from '@cetus/ui-kit'\nimport { Button, VStack } from '@chakra-ui/react'\nimport { useNavigate } from 'react-router-dom'\n\nfunction MyPositions({ priceDirect }: { priceDirect: boolean }) {\n  const navigate = useNavigate()\n  const { apiPoolInfo } = useLiquidityStore()\n  const { currentAccount, posBaseListLoading, data, rpcNodeErrorStr, onWalletModal } = useMyPositions()\n  return (\n    <VStack minW={{ base: '100%', lg: '1024px' }}>\n      {!currentAccount?.address ? (\n        <NoData type=\"nowallet\" onboard={() => onWalletModal(true)} />\n      ) : data && data?.length > 0 ? (\n        <Block p={{ base: '12px', lg: '16px' }} borderRadius=\"16px\">\n          <PositionItem poolInfo={{ list: data }} priceDirect={priceDirect} />\n        </Block>\n      ) : rpcNodeErrorStr ? (\n        <NoData type=\"nodata\" text={rpcNodeErrorStr} />\n      ) : (\n        <NoData\n          type=\"nodata\"\n          text=\"You don't have positions for this pool\"\n          children={\n            <Button\n              borderRadius=\"8px\"\n              mt=\"8px\"\n              fontWeight=\"500\"\n              w=\"120px\"\n              h=\"28px\"\n              fontSize=\"12px\"\n              onClick={() => navigate(`/clmm?tab=deposit&poolAddress=${apiPoolInfo?.poolAddress}`)}\n            >\n              Create Position\n            </Button>\n          }\n        />\n      )}\n    </VStack>\n  )\n}\n\nexport default MyPositions\n","import { PoolApiInfo } from '@/types'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { formatPrice } from '@cetus/utils'\nimport { Box, HStack, Stack, Text } from '@chakra-ui/react'\nimport { useMemo } from 'react'\nimport AprTooltip from '../../common/aprTooltip'\nimport StatsInfo from './StatsInfo'\n\ntype PoolsStatsProps = {\n  apiPoolInfo: PoolApiInfo\n  apiPoolInfoLoading: boolean\n  tvlLoading: boolean\n  totalTvl: string\n}\n\nfunction PoolsStats({ apiPoolInfo, apiPoolInfoLoading, tvlLoading, totalTvl }: PoolsStatsProps) {\n  const cursorStyle = useMemo(() => {\n    if (apiPoolInfo?.haveFarming || (apiPoolInfo?.miningAprList && apiPoolInfo?.miningAprList.length > 0)) {\n      return 'help'\n    }\n    return 'text'\n  }, [apiPoolInfo])\n  const { isApp } = useWindowWidth()\n  return (\n    <Stack flexDir={{ base: 'column', lg: 'row' }} gap={{ base: '20px', lg: '28px' }}>\n      <StatsInfo\n        label=\"Pool APR\"\n        value={\n          <AprTooltip poolInfo={apiPoolInfo} placement={isApp ? 'bottom-end' : 'bottom'}>\n            <HStack justify=\"flex-end\" align=\"flex-end\" gap=\"4px\" lineHeight=\"14px\" h=\"14px\">\n              <Text\n                as=\"span\"\n                fontSize=\"14px\"\n                color={cursorStyle == 'help' ? 'primary' : 'text_caption'}\n                fontWeight=\"500\"\n                cursor={cursorStyle}\n                // textUnderlineOffset=\"2px\"\n                // textDecoration={cursorStyle == 'help' ? 'underline dotted' : 'none'}\n                pos=\"relative\"\n              >\n                {apiPoolInfo?.feeAndMiningAprDisplay !== '' ? apiPoolInfo?.feeAndMiningAprDisplay : '0%'}\n                {cursorStyle == 'help' && <Box w=\"100%\" borderBottom=\"1px dotted\" borderColor=\"primary\" pos=\"absolute\" bottom=\"-1px\" />}\n              </Text>\n\n              {apiPoolInfo?.haveFarming && (\n                <Text fontSize=\"12px\" lineHeight=\"12px\" h=\"12px\" color=\"primary\" fontWeight=\"500\">\n                  +{apiPoolInfo?.farmingAprDisplay}\n                </Text>\n              )}\n            </HStack>\n          </AprTooltip>\n        }\n      />\n      <StatsInfo\n        label=\"TVL\"\n        value={totalTvl && totalTvl !== '--' ? `$${formatPrice(totalTvl, 2)}` : '--'}\n        loading={apiPoolInfoLoading || tvlLoading}\n      />\n      <StatsInfo label=\"Volume (24H)\" value={(apiPoolInfo?.volume24Display as string) || ''} loading={apiPoolInfoLoading} />\n      <StatsInfo label=\"Fees (24H)\" value={(apiPoolInfo?.fees24Display as string) || ''} loading={apiPoolInfoLoading} />\n    </Stack>\n  )\n}\n\nexport default PoolsStats\n","import useLiquidityStore from '@/store/clmm'\nimport { PoolApiInfo } from '@/types'\nimport useQueryParams from '@cetus/hooks/src/useQueryParams'\nimport { useGetToken } from '@cetus/hooks/src/useToken'\nimport { Token } from '@cetus/types'\nimport { d, isAvailableObject } from '@cetus/utils'\nimport { maxBy } from 'lodash-es'\nimport { useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport useGetPoolList from '../pool/useGetPoolList'\n\nfunction useGetRelatedPools() {\n  const { tab, poolAddress, from, to, fee } = useQueryParams()\n  const { getPoolList } = useGetPoolList()\n  const [relatedPoolList, setRelatedPoolList] = useState<Partial<PoolApiInfo>[]>([])\n  const { apiPoolInfo, setApiPoolInfo, setApiPoolInfoLoading, setNetError } = useLiquidityStore()\n  const navigate = useNavigate()\n  const { fetchTokenInfo } = useGetToken()\n\n  /**\n   * 获取当前token对的相关池子列表\n   * Get the related pool list of the current token pair\n   * @param param0 poolAddress: 池子地址 / poolAddress: poolAddress\n   * @param param1 from: 代币A coin_type / from: tokenA coin_type\n   * @param param2 to: 代币B coin_type / to: tokenB coin_type\n   */\n  const getList = async ({ poolAddress, from, to }: { poolAddress?: string; from?: string; to?: string }) => {\n    console.log('🚀🚀🚀 ~ useGetRelatedPools.ts:148 ~ getList ~ getList:')\n    try {\n      setApiPoolInfoLoading(true)\n      let res, pool\n      if (poolAddress && poolAddress !== 'undefined') {\n        console.log('🚀🚀🚀 ~ useGetRelatedPools.ts:32 ~ getList ~ poolAddress:', poolAddress)\n        const _res = await getPoolList({ pools: [poolAddress], display_all_pools: true })\n        console.log('🚀🚀🚀 ~ useGetRelatedPools.ts:52 ~ getList ~ _res:', _res)\n        if (_res && _res.list && _res.list.length) {\n          pool = _res.list[0]\n          res = await getPoolList({\n            coin_type: `${pool?.displayTokenA?.coin_type},${pool?.displayTokenB?.coin_type}`,\n            is_vaults: false,\n            display_all_pools: true,\n            has_mining: true,\n            has_farming: true,\n            no_incentives: true,\n            order_by: '-vol',\n            offset: 0\n          })\n        } else if (apiPoolInfo && isAvailableObject(apiPoolInfo)) {\n          pool = apiPoolInfo\n          res = { list: relatedPoolList }\n        } else {\n          pool = { poolAddress, displayTokenA: undefined, displayTokenB: undefined }\n          res = { list: [] }\n        }\n        setApiPoolInfoLoading(false)\n      } else if (from && to && from !== 'undefined' && to !== 'undefined' && from !== to) {\n        const _res = await getPoolList({\n          coin_type: `${from},${to}`,\n          is_vaults: false,\n          display_all_pools: true,\n          has_mining: true,\n          has_farming: true,\n          no_incentives: true,\n          order_by: '-vol',\n          offset: 0\n        })\n        console.log(_res, 'res_getPoolList')\n        if (_res && _res.list && _res.list.length) {\n          if (fee && fee !== 'undefined') {\n            const _pool = _res?.list?.find(item => d(item?.feeRate).eq(fee))\n            if (_pool) {\n              if (tab) {\n                navigate(`/clmm?tab=${tab}&poolAddress=${_pool?.poolAddress}`)\n              } else {\n                navigate(`/clmm?poolAddress=${_pool?.poolAddress}`)\n              }\n            } else {\n              const _pool = maxBy(_res?.list, item => Number(item?.tvl || '0'))\n              if (tab) {\n                navigate(`/clmm?tab=${tab}&poolAddress=${_pool?.poolAddress}`)\n              } else {\n                navigate(`/clmm?poolAddress=${_pool?.poolAddress}`)\n              }\n            }\n          } else {\n            let _pool = maxBy(_res?.list, item => Number(item?.tvl || '0'))\n\n            if (!_pool) {\n              _pool = maxBy(_res?.list, item => Number(item?.object?.liquidity || '0'))\n              if (!_pool) {\n                _pool = _res?.list[0]\n              }\n            }\n            if (tab) {\n              navigate(`/clmm?tab=${tab}&poolAddress=${_pool?.poolAddress}`)\n            } else {\n              navigate(`/clmm?poolAddress=${_pool?.poolAddress}`)\n            }\n          }\n        } else {\n          const tokenMap = await fetchTokenInfo([from, to].filter(Boolean))\n          const _displayTokenA = (tokenMap as Map<string, Token>)?.get(from)\n          const _displayTokenB = (tokenMap as Map<string, Token>)?.get(to)\n          pool = { poolAddress: undefined, displayTokenA: _displayTokenA, displayTokenB: _displayTokenB }\n          res = { list: [] }\n          setApiPoolInfoLoading(false)\n        }\n      } else {\n        if ((!from || from === 'undefined') && to && to !== 'undefined') {\n          const _displayTokenB = await fetchTokenInfo(to)\n          pool = { poolAddress: undefined, displayTokenA: undefined, displayTokenB: _displayTokenB as Token }\n        }\n        if ((!to || to === 'undefined') && from && from !== 'undefined') {\n          const _displayTokenA = await fetchTokenInfo(from)\n          pool = { poolAddress: undefined, displayTokenA: _displayTokenA as Token, displayTokenB: undefined }\n        }\n\n        res = { list: [] }\n        setApiPoolInfoLoading(false)\n      }\n      if (res) {\n        setNetError(false)\n        setRelatedPoolList(res?.list)\n        console.log(pool, 'setApiPoolInfo')\n        if (pool) {\n          if (pool?.poolAddress && poolAddress) {\n            if (pool?.poolAddress === poolAddress) {\n              setApiPoolInfo(pool as any)\n            }\n          } else {\n            setApiPoolInfo(pool as any)\n          }\n        }\n      }\n\n      setApiPoolInfoLoading(false)\n    } catch (error) {\n      if ((error as any)?.list && (error as any)?.list?.length === 1) {\n        setNetError(true)\n        const _pool = (error as any)?.list[0]\n        console.log((error as any)?.list, 'setApiPoolInfo')\n\n        setApiPoolInfo(_pool)\n        setRelatedPoolList([])\n        setApiPoolInfoLoading(false)\n      }\n    }\n  }\n  useEffect(() => {\n    if (poolAddress && poolAddress === 'undefined') return\n    if (!poolAddress && poolAddress === undefined && !from && !to) return\n    getList({ poolAddress, from, to })\n  }, [poolAddress, from, to])\n  return {\n    getList,\n    relatedPoolList\n  }\n}\n\nexport default useGetRelatedPools\n","import useLiquidityStore from '@/store/clmm'\nimport { isTrustedToken } from '@/utils'\nimport { getFeeTierList } from '@/utils/clmm'\nimport { clmmDefaultFeeOptions } from '@cetus/design/src/components/common/feeSelect/config'\nimport useQueryParams from '@cetus/hooks/src/useQueryParams'\nimport { Token } from '@cetus/types'\nimport { useDeepCompareEffect } from 'ahooks'\nimport { useMemo } from 'react'\nimport useQuoteWhiteTokenList from '../create-pool/useQuoteWhiteTokenList'\nimport useGetPriceRange from './useGetPriceRange'\nimport useGetRelatedPools from './useGetRelatedPools'\nfunction useGetPoolRelatedInfo() {\n  const { poolAddress } = useQueryParams()\n  const { apiPoolInfo, apiPoolInfoLoading } = useLiquidityStore()\n\n  const { quoteWhiteTokenList } = useQuoteWhiteTokenList()\n\n  const { getList, relatedPoolList } = useGetRelatedPools()\n  /**\n   * 获取token对费率列表\n   * Get the token pair rate list\n   */\n  const feeTierList = useMemo(() => {\n    const list = getFeeTierList(relatedPoolList)\n    if (list) {\n      if (apiPoolInfo?.tokenA && apiPoolInfo?.tokenB) {\n        return clmmDefaultFeeOptions?.map(item => {\n          const title = list.find(feeTier => feeTier.feeRate === item.feeRate)?.title || item.title\n          return {\n            ...item,\n            title,\n            poolAddress: list.find(feeTier => feeTier.feeRate === item.feeRate)?.poolAddress,\n            disabled:\n              title === 'Not Created' &&\n              !isTrustedToken(apiPoolInfo?.tokenA, quoteWhiteTokenList) &&\n              !isTrustedToken(apiPoolInfo?.tokenB, quoteWhiteTokenList)\n                ? true\n                : false\n          }\n        })\n      } else {\n        return clmmDefaultFeeOptions?.map(item => {\n          const title = list.find(feeTier => feeTier.feeRate === item.feeRate)?.title || item.title\n          return {\n            ...item,\n            title,\n            poolAddress: list.find(feeTier => feeTier.feeRate === item.feeRate)?.poolAddress,\n            disabled:\n              !isTrustedToken(apiPoolInfo?.displayTokenA, quoteWhiteTokenList) && !isTrustedToken(apiPoolInfo?.displayTokenB, quoteWhiteTokenList)\n                ? true\n                : false\n          }\n        })\n      }\n    }\n    return []\n  }, [\n    JSON.stringify(relatedPoolList),\n    JSON.stringify(quoteWhiteTokenList),\n    apiPoolInfo?.displayTokenA?.coin_type,\n    apiPoolInfo?.displayTokenB?.coin_type\n  ])\n  /**\n   * 生成当前池子deposit的token切换tab列表\n   * Generate the token switch tab list for the current pool deposit\n   */\n  const rangeTabList = useMemo(() => {\n    if (apiPoolInfo) {\n      return [apiPoolInfo?.displayTokenA, apiPoolInfo?.displayTokenB]?.filter(Boolean).map(item => ({\n        label: item?.symbol,\n        key: item?.coin_type,\n        isToken: true,\n        imgInfo: {\n          src: item?.logo_url,\n          w: '16px',\n          h: '16px',\n          coinType: item ? item?.coin_type : '',\n          showTagWidth: '8px',\n          showTagHeight: '8px'\n        }\n      }))\n    } else {\n      return []\n    }\n  }, [apiPoolInfo?.displayTokenA?.symbol, apiPoolInfo?.displayTokenB?.symbol])\n\n  /**\n   * 获取当前池子的费率信息\n   * Get the current pool fee rate information\n   */\n  const currentFeeTier = useMemo(() => {\n    const _currentFeeTier = feeTierList?.find(item => item.poolAddress === poolAddress)\n    if (_currentFeeTier) {\n      return _currentFeeTier\n    } else {\n      return apiPoolInfo\n    }\n  }, [JSON.stringify(feeTierList), poolAddress, JSON.stringify(apiPoolInfo)])\n\n  /**\n   * 获取合约价格，获取过去24小时、7天、30天的价格范围\n   * Get contract price, get price range for past 24 hours, 7 days, 30 days\n   * @param address 池子地址 / Pool address\n   */\n  const { fetchPriceRange } = useGetPriceRange()\n  const getPriceRanges = async (address: string) => {\n    console.log('🚀 ~ setPriceRangeMap ~ this.addressHistTokens:🚀 ~ getContractPrices ~ address:', address)\n    await fetchPriceRange(address, apiPoolInfo?.tokenA, apiPoolInfo?.tokenB)\n  }\n\n  useDeepCompareEffect(() => {\n    if (poolAddress && poolAddress === apiPoolInfo?.poolAddress && apiPoolInfo?.tokenA && apiPoolInfo?.tokenB) {\n      getPriceRanges(poolAddress)\n    }\n  }, [poolAddress, apiPoolInfo?.tokenA, apiPoolInfo?.tokenB])\n\n  /**\n   * 生成警告弹窗代币列表\n   * Generate warning modal token list\n   */\n  const warningTokenList = useMemo(() => {\n    const list: Token[] = []\n    if (apiPoolInfo?.displayTokenA) {\n      list.push(apiPoolInfo?.displayTokenA)\n    }\n    if (apiPoolInfo?.displayTokenB) {\n      list.push(apiPoolInfo?.displayTokenB)\n    }\n    return list\n  }, [JSON.stringify(apiPoolInfo?.displayTokenA), JSON.stringify(apiPoolInfo?.displayTokenB)])\n\n  return {\n    getList,\n    feeTierList,\n    apiPoolInfo,\n    rangeTabList,\n    currentFeeTier,\n    apiPoolInfoLoading,\n    quoteWhiteTokenList,\n    warningTokenList\n  }\n}\n\nexport default useGetPoolRelatedInfo\n","import useGetCurrentPrice from '@/hooks/clmm/useGetCurrentPrice'\nimport useGetPoolRelatedInfo from '@/hooks/clmm/useGetPoolRelatedInfo'\nimport usePriceRange from '@/hooks/clmm/usePriceRange'\nimport useGetContractPoolInfo from '@/hooks/pool/useGetContractPoolInfo'\nimport useLiquidityStore from '@/store/clmm'\nimport useAddLiquidityStore from '@/store/clmm/addLiquidity'\nimport useDepositStore from '@/store/clmm/deposit'\nimport { useAccountBalance } from '@cetus/hooks'\nimport useQueryParams from '@cetus/hooks/src/useQueryParams'\nimport { useAccountStore } from '@cetus/stores'\nimport { isAvailableObject } from '@cetus/utils'\nimport { useEffect } from 'react'\nimport useLiquidityInteraction from './useLiquidityInteraction'\nfunction useLiquidity() {\n  const { currentAccount } = useAccountStore()\n  const { apiPoolInfo, resetLiquidity, setManualRefresh, setCurrentPriceData } = useLiquidityStore()\n  const { feeTierList, currentFeeTier, rangeTabList, getList, quoteWhiteTokenList, warningTokenList } = useGetPoolRelatedInfo()\n  const { poolAddress } = useQueryParams()\n  const { handleResetRange } = usePriceRange()\n  const { resetAddLiquidity, setFromToken, setToToken } = useAddLiquidityStore()\n  const { resetDeposit } = useDepositStore()\n  const { fetchAccountBalance } = useAccountBalance()\n  const { getContractPoolInfo } = useGetContractPoolInfo()\n  const { getCurrentPrice } = useGetCurrentPrice()\n  const {\n    currentTab,\n    setCurrentTab,\n    tabList,\n    favoriteStyle,\n    onChangeFavorites,\n    selectedTokenA,\n    selectedTokenB,\n    setSelectedTokenA,\n    setSelectedTokenB,\n    onConfirm,\n    setFeeTier,\n    refreshMarketPrice,\n    onJump2Swap,\n    handleSelectToken,\n    getSelectTokenProps\n  } = useLiquidityInteraction({ apiPoolInfo })\n\n  // 设置代币 Set tokens\n  useEffect(() => {\n    if (isAvailableObject(apiPoolInfo)) {\n      setFromToken(apiPoolInfo?.displayTokenA)\n      setToToken(apiPoolInfo?.displayTokenB)\n    }\n  }, [apiPoolInfo?.poolAddress])\n\n  /**\n   * 获取当前池子的token兑换价格\n   * Get the token exchange price of the current pool\n   */\n  const handleGetPrice = async () => {\n    if (poolAddress && apiPoolInfo && poolAddress === apiPoolInfo?.poolAddress) {\n      const _contractPoolInfo = await getContractPoolInfo(poolAddress)\n      if (_contractPoolInfo) {\n        getCurrentPrice(_contractPoolInfo?.current_sqrt_price, apiPoolInfo, _contractPoolInfo?.current_tick_index)\n      }\n    }\n  }\n\n  const handleRefreshPrice = () => {\n    refreshMarketPrice?.()\n    handleGetPrice?.()\n  }\n\n  /**\n   * 刷新按钮事件\n   * Refresh button event\n   * @param isManual 是否手动刷新\n   */\n  const handleRefresh = async (isManual?: boolean) => {\n    console.log('🚀 ~ handleRefresh ~ handleRefresh111:')\n    if (isManual) {\n      setManualRefresh(true)\n    }\n    if (poolAddress && poolAddress !== 'undefined') {\n      await getList({ poolAddress })\n    }\n    if (currentAccount?.address) {\n      await fetchAccountBalance()\n    }\n    handleRefreshPrice()\n    setManualRefresh(false)\n  }\n\n  /**\n   * 初始化，获取账户余额，离开页面销毁数据\n   * Initialize, get account balance, destroy data when leaving the page\n   */\n  useEffect(() => {\n    if (currentAccount?.address) {\n      fetchAccountBalance()\n    }\n\n    setCurrentPriceData({})\n\n    return () => {\n      handleResetRange()\n      resetAddLiquidity()\n      resetLiquidity()\n      resetDeposit()\n    }\n  }, [])\n\n  /**\n   * 切换池子，重置数据\n   * Switch pools, reset data\n   */\n  useEffect(() => {\n    /**\n     * 保证地址栏的poolAddress和接口请求到的池子数据poolAddress相同时再进行操作\n     * Ensure that the poolAddress in the address bar and the poolAddress obtained from the interface are the same before performing operations\n     */\n    if (poolAddress && apiPoolInfo?.poolAddress !== poolAddress) {\n      handleResetRange()\n      resetAddLiquidity()\n      resetLiquidity()\n      resetDeposit()\n    }\n\n    if (poolAddress && poolAddress === apiPoolInfo?.poolAddress) {\n      handleGetPrice()\n    }\n  }, [poolAddress, apiPoolInfo?.poolAddress])\n\n  return {\n    feeTierList,\n    currentFeeTier,\n    rangeTabList,\n    quoteWhiteTokenList,\n    warningTokenList,\n    currentTab,\n    setCurrentTab,\n    tabList,\n    favoriteStyle,\n    onChangeFavorites,\n    selectedTokenA,\n    selectedTokenB,\n    setSelectedTokenA,\n    setSelectedTokenB,\n    onConfirm,\n    setFeeTier,\n    handleRefresh,\n    handleGetPrice,\n    onJump2Swap,\n    handleSelectToken,\n    getSelectTokenProps\n  }\n}\n\nexport default useLiquidity\n","import Slippage from '@/components/common/Slippage'\nimport VersionBlock from '@/components/common/VersionBlock'\nimport PoolsAnalytics from '@/components/liquidity/clmm/analytics/PoolsAnalytics'\nimport ProvideLiquidity from '@/components/liquidity/clmm/deposit'\nimport MyPositions from '@/components/liquidity/clmm/MyPositions'\nimport PoolsStats from '@/components/liquidity/clmm/PoolsStats'\nimport SelectTokenAnddFeeConfirm from '@/components/liquidity/clmm/SelectTokenAndFeeConfirm'\nimport { SelectToken } from '@/components/selectPool/SelectToken'\nimport useGetTvlInfo from '@/hooks/clmm/useGetTvlInfo'\nimport useLiquidity from '@/hooks/clmm/useLiquidity'\nimport useLiquidityStore from '@/store/clmm'\nimport useGlobalStore from '@/store/common/global'\nimport { isTrustedToken } from '@/utils'\nimport { CetusTooltip, CurrentPrice, FeeSelectBlock, SelectTab } from '@cetus/design'\nimport { ClmmSelectFeeType } from '@cetus/design/src/components/common/feeSelect/type'\nimport WarningTokenTipsModal from '@cetus/design/src/components/common/WarningTokenTipModal'\nimport useQueryParams from '@cetus/hooks/src/useQueryParams'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { Token } from '@cetus/types'\nimport { BackButton, Icon, NoData, RefreshButton } from '@cetus/ui-kit'\nimport { formatNumberWithDown } from '@cetus/utils'\nimport { Box, Button, Center, HStack, Spinner, Stack, Text, useDisclosure, VStack } from '@chakra-ui/react'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { TabsEnum } from '../hooks/clmm/useLiquidityInteraction'\n\nfunction CLMM() {\n  const navigate = useNavigate()\n  const { apiPoolInfo, apiPoolInfoLoading, currentPriceData, netError } = useLiquidityStore()\n  const { poolAddress, from, to } = useQueryParams()\n  const {\n    feeTierList,\n    currentFeeTier,\n    rangeTabList,\n    quoteWhiteTokenList,\n    warningTokenList,\n    currentTab,\n    setCurrentTab,\n    tabList,\n    favoriteStyle,\n    onChangeFavorites,\n    selectedTokenA,\n    selectedTokenB,\n    onConfirm,\n    setFeeTier,\n    handleRefresh,\n    handleGetPrice,\n    onJump2Swap,\n    handleSelectToken,\n    getSelectTokenProps\n  } = useLiquidity()\n\n  const { isApp } = useWindowWidth()\n\n  const { isOpen, onOpen, onClose } = useDisclosure()\n\n  const { totalAmountUSD: totalTvl, tvlLoading } = useGetTvlInfo()\n\n  const showContent = poolAddress && apiPoolInfo?.tokenA && apiPoolInfo?.tokenB\n\n  const { tooltip, xlinkHref, svgFill, svgHover } = favoriteStyle\n\n  const [selectTokenAProps, setSelectTokenAProps] = useState<any>({})\n  const [selectTokenBProps, setSelectTokenBProps] = useState<any>({})\n\n  const fetchSelectTokenProps = useCallback(async () => {\n    const tokenAProps = await getSelectTokenProps(from, selectedTokenA)\n    const tokenBProps = await getSelectTokenProps(to, selectedTokenB)\n    setSelectTokenAProps(tokenAProps)\n    setSelectTokenBProps(tokenBProps)\n  }, [from, to, selectedTokenA, selectedTokenB, getSelectTokenProps])\n  useEffect(() => {\n    fetchSelectTokenProps()\n  }, [fetchSelectTokenProps])\n  const { backUrl } = useGlobalStore()\n  const [priceDirect, setPriceDirect] = useState(true)\n  return (\n    <>\n      <Box w=\"100%\" mt=\"20px\">\n        <HStack w=\"100%\" minW={{ base: '100%', lg: '1024px' }} justify=\"space-between\">\n          {/* <BackButton text=\"Pools\" onClick={() => navigate('/pools')} /> */}\n          <BackButton text=\"Back\" onClick={() => (backUrl ? navigate(backUrl) : navigate('/pools'))} />\n          {showContent && (\n            <HStack gap=\"8px\">\n              <CetusTooltip placement=\"top\" tooltip={tooltip} fontSize=\"12px\">\n                <Button\n                  variant=\"outline\"\n                  w=\"32px\"\n                  h=\"32px\"\n                  lineHeight=\"32px\"\n                  onClick={onChangeFavorites}\n                  p=\"0 6px\"\n                  borderRadius=\"8px\"\n                  color=\"text_paragraph\"\n                  bg=\"bg_secondary\"\n                  display=\"flex\"\n                  justifyContent=\"center\"\n                  gap=\"4px\"\n                  sx={{\n                    _hover: {\n                      color: 'text_caption',\n                      svg: {\n                        fill: svgHover\n                      }\n                    }\n                  }}\n                >\n                  <Icon xlinkHref={xlinkHref} svgFill={svgFill} svgHover={svgHover} fontSize=\"18px\" />\n                </Button>\n              </CetusTooltip>\n              <CetusTooltip placement=\"top\" tooltip=\"Trade\" fontSize=\"12px\">\n                <Button\n                  variant=\"outline\"\n                  bg=\"bg_secondary\"\n                  h=\"32px\"\n                  w=\"32px\"\n                  onClick={onJump2Swap}\n                  borderRadius=\"8px\"\n                  p=\"0 6px\"\n                  color=\"text_paragraph\"\n                  display=\"flex\"\n                  justifyContent=\"center\"\n                  gap=\"4px\"\n                  sx={{\n                    _hover: {\n                      color: 'text_caption',\n                      svg: {\n                        fill: 'text_caption'\n                      }\n                    }\n                  }}\n                >\n                  <Icon xlinkHref=\"#icon-icon_swap1\" fontSize=\"16px\" />\n                </Button>\n              </CetusTooltip>\n              <CetusTooltip placement=\"top\" tooltip=\"Refresh\" fontSize=\"12px\">\n                <Box>\n                  <RefreshButton\n                    key={poolAddress}\n                    handleRefresh={handleRefresh}\n                    isAutoRefresh\n                    refreshInterval={60}\n                    innerStyle={{ bg: 'bg_secondary' }}\n                    w=\"32px\"\n                    h=\"32px\"\n                    borderRadius=\"8px\"\n                    bg=\"bg_secondary\"\n                  />\n                </Box>\n              </CetusTooltip>\n            </HStack>\n          )}\n        </HStack>\n        <Stack\n          flexDir={{ base: 'column', lg: 'row' }}\n          w=\"100%\"\n          minW={{ base: '100%', lg: '1024px' }}\n          justify=\"space-between\"\n          mt=\"20px\"\n          gap={{ base: '20px', lg: '8px' }}\n        >\n          <Stack flexDir={{ base: 'column', lg: 'row' }} gap={{ base: '20px', lg: '12px' }} align={{ base: 'flex-start', lg: 'center' }}>\n            <HStack gap=\"12px\">\n              <SelectToken\n                onChange={token => {\n                  handleSelectToken(token, selectedTokenA, selectedTokenB, from, to, true)\n                }}\n                {...selectTokenAProps}\n              />\n              <SelectToken\n                onChange={token => {\n                  handleSelectToken(token, selectedTokenB, selectedTokenA, to, from, false)\n                }}\n                {...selectTokenBProps}\n              />\n              {isApp && apiPoolInfo?.isFrozen ? <VersionBlock blockSize=\"large\" /> : null}\n            </HStack>\n\n            <FeeSelectBlock<'clmm'>\n              poolType=\"clmm\"\n              value={currentFeeTier as ClmmSelectFeeType}\n              loading={!currentFeeTier && apiPoolInfoLoading}\n              options={feeTierList}\n              disabled={netError}\n              isShowSelect={!apiPoolInfo?.isFrozen}\n              onChange={item => {\n                if (item?.poolAddress) {\n                  navigate(`/clmm?poolAddress=${item?.poolAddress}`)\n                } else {\n                  setFeeTier(item)\n                  onOpen()\n                }\n              }}\n            />\n            {!isApp && apiPoolInfo?.isFrozen ? <VersionBlock blockSize=\"large\" /> : null}\n          </Stack>\n          {showContent && (\n            <PoolsStats apiPoolInfo={apiPoolInfo} totalTvl={totalTvl} apiPoolInfoLoading={apiPoolInfoLoading} tvlLoading={tvlLoading} />\n          )}\n        </Stack>\n        {showContent ? (\n          <>\n            <Stack\n              w=\"100%\"\n              flexDir={{ base: 'column', lg: 'row' }}\n              justify={{ base: 'center', lg: 'space-between' }}\n              align={{ base: 'flex-start', lg: 'center' }}\n              minW={{ base: '100%', lg: '1024px' }}\n            >\n              <SelectTab<any, any>\n                type=\"borderTab\"\n                tabList={tabList}\n                currentTab={currentTab}\n                handleChangeTab={item => {\n                  const key = Object.keys(TabsEnum).find(tab => TabsEnum[tab as keyof typeof TabsEnum] === item.label)\n\n                  if (poolAddress) {\n                    navigate(`/clmm?tab=${key}&poolAddress=${poolAddress}`)\n                  }\n                  setCurrentTab(key as keyof typeof TabsEnum)\n                }}\n                wrapStyle={{\n                  w: { base: '100%', lg: 'auto' },\n                  justify: { base: 'space-between', lg: 'flex-start' },\n                  p: { base: '0px', lg: '0' },\n                  bg: { base: 'transparent', lg: 'transparent' },\n                  h: isApp ? '60px' : '58px',\n                  gap: { base: '8px', lg: '45px' },\n                  border: { base: '1px solid', lg: 'none' },\n                  borderColor: { base: 'transparent', lg: 'transparent' },\n                  borderRadius: { base: '16px', lg: 'unset' },\n                  mt: { base: '0px', lg: '12px' }\n                }}\n                itemStyle={{\n                  fontSize: isApp ? '14px' : '16px',\n                  fontWeight: '500'\n                }}\n              />\n\n              {currentTab === 'deposit' && !isApp && (\n                <Box mt=\"24px\">\n                  <Slippage slippageType=\"liquidity\" poolType=\"clmm\" />\n                </Box>\n              )}\n              {currentTab !== 'deposit' && apiPoolInfo && (\n                <Stack\n                  w={isApp ? '100%' : 'auto'}\n                  mt={{ base: '4px', lg: '12px' }}\n                  gap=\"12px\"\n                  flexDir={{ base: 'column', lg: 'row' }}\n                  justify={{ base: 'center', lg: 'space-between' }}\n                  align={{ base: 'flex-start', lg: 'center' }}\n                >\n                  <Text>Current Price</Text>\n                  <CurrentPrice\n                    noCenter={isApp ? true : false}\n                    fromToken={apiPoolInfo?.displayTokenA}\n                    toToken={apiPoolInfo?.displayTokenB}\n                    fromValue=\"1\"\n                    toValue={formatNumberWithDown(\n                      apiPoolInfo?.isReverse ? currentPriceData?.reverseCurrentPrice : currentPriceData?.currentPrice,\n                      6,\n                      true\n                    ).toString()}\n                    color=\"text_caption\"\n                    wrapStyle={isApp ? { w: '100%' } : {}}\n                    handlePageToggleDirect={() => setPriceDirect(!priceDirect)}\n                  />\n                </Stack>\n              )}\n            </Stack>\n            <Box h={{ base: '20px', lg: '12px' }} />\n            {currentTab === 'deposit' && (\n              <ProvideLiquidity\n                rangeTabList={rangeTabList as any}\n                getList={handleRefresh}\n                getPrice={handleGetPrice}\n                currentFeeTier={currentFeeTier as any}\n              />\n            )}\n            {currentTab === 'positions' && <MyPositions priceDirect={priceDirect} />}\n            {currentTab === 'analytics' && <PoolsAnalytics />}\n          </>\n        ) : (\n          <Box mt=\"20px\">\n            {!apiPoolInfo && apiPoolInfoLoading ? (\n              <Center w=\"100%\" h=\"480px\" background=\"bg_secondary\" borderRadius=\"12px\" border=\"1px solid\" borderColor=\"border\">\n                <Spinner />\n              </Center>\n            ) : (\n              <NoData type=\"custom\" imgUrl=\"/images/img_pool@2x.png\" h=\"480px\">\n                <VStack>\n                  {selectedTokenA && selectedTokenB ? (\n                    isTrustedToken(selectedTokenA, quoteWhiteTokenList) || isTrustedToken(selectedTokenB, quoteWhiteTokenList) ? (\n                      <>\n                        <Text h=\"20px\" lineHeight=\"20px\" fontSize=\"14px\" color=\"text_caption\" fontWeight=\"500\">\n                          This Pool has not been initialized\n                        </Text>\n                        <Text fontSize=\"14px\">Do you want to initialize it?</Text>\n                        <Button\n                          mt=\"12px\"\n                          w=\"120px\"\n                          h=\"32px\"\n                          borderRadius=\"8px\"\n                          colorScheme=\"blue\"\n                          fontSize=\"14px\"\n                          fontWeight=\"500\"\n                          onClick={() => {\n                            onClose()\n                            onConfirm()\n                          }}\n                        >\n                          Initialized Pool\n                        </Button>\n                      </>\n                    ) : (\n                      <Text h=\"20px\" lineHeight=\"20px\" fontSize=\"14px\" color=\"text_caption\">\n                        No Liquidity Data\n                      </Text>\n                    )\n                  ) : (\n                    <Text h=\"20px\" lineHeight=\"20px\" fontSize=\"14px\" color=\"text_caption\">\n                      Select the token you want to provide liquidity for.\n                    </Text>\n                  )}\n                </VStack>\n              </NoData>\n            )}\n          </Box>\n        )}\n      </Box>\n      {/* Token 警告弹窗 */}\n      {apiPoolInfo?.displayTokenA && apiPoolInfo?.displayTokenB && (\n        <WarningTokenTipsModal\n          tokensInfo={warningTokenList}\n          waringModalCancel={(tokenInfo: Token[]) => {\n            navigate('/pools')\n          }}\n        />\n      )}\n      <SelectTokenAnddFeeConfirm\n        title=\"This Pool has not been initialized\"\n        subTitle=\"Do you want to initialize it?\"\n        btnText=\"Initialized Pool\"\n        isOpen={isOpen}\n        onClose={onClose}\n        onConfirm={onConfirm}\n      />\n    </>\n  )\n}\n\nexport default CLMM\n"],"names":["useTransactionHistory","clmmSdk","useSdk","fetchByApi","useFetch","params","res","TransactionsHistory","error","poolId","paginationArgs","rpcUrls","rpcUrl","useRecentTransactions","getTransactionsHistoryBySDK","isLoading","setIsLoading","useState","list","setList","currentPage","setCurrentPage","nextCursor","setNextCursor","hasNextPage","setHasNextPage","apiPoolInfo","manualRefresh","setManualRefresh","useLiquidityStore","poolAddress","useQueryParams","useEffect","fetchData","result","_data","_a","item","_parsedJson","_firstToken","_secondToken","EventEnums","_b","bnToAmount","pre","useDebounceEffect","iconMap","Event","type","HStack","jsx","Icon","_c","Text","_d","Amounts","items","isReverse","isApp","useWindowWidth","VStack","AmountItem","jsxs","SingleCoinImage","addComma","textEllipses","getColumns","getExplorerUrl","tx","AddressUnderline","block_time","getTimeDifferenceString","RecentTransactions","useExplorer","onCurrentPageChange","NoData","H5MapTable","_","index","Table","Center","Button","Spinner","useBurnedLiquidity","getBurnPositionAmountByPool","useBurn","contractPoolInfo","burnAmountA","setBurnAmountA","burnAmountB","setBurnAmountB","burnAmountAUSD","setBurnAmountAUSD","burnAmountBUSD","setBurnAmountBUSD","loading","setLoading","tokenAPrice","tokenBPrice","useTvlInfoStore","getBurnAmount","poolInfo","current_sqrt_price","totalA","totalB","d","BurnedLiquidity","Stack","TooltipIcon","TokenBurnedLiquidity","token","amount","amountUSD","HTextLabelBox","fromDecimalsAmountFix","formatNumber","getRatio","value","PoolInfo","tokenAAmount","tokenBAmount","tokenAAmountUSD","tokenBAmountUSD","totalAmountUSD","tvlLoading","tokenARatio","tokenBRatio","usePoolInfo","Heading","Grid","InfoItem","AddressCopyLink","Skeleton","Box","Progress","_e","_f","TokenCard","PoolsAnalytics","AnalyticsCharts","RecentTransaction","AddLiquidityConfirmModal","props","onClose","onSubmit","feeTier","zapData","fromToken","toToken","fromAmount","toAmount","totalAmount","percentMap","fromTokenLock","toTokenLock","useAddLiquidityStore","lowerTickData","upperTickData","usePriceRangeStore","currentPriceData","direct","setDirect","showReverse","useMemo","perText","onOk","debounce","Modal","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","CoinPairImage","PoolTag","TradeConfirmAmountInfo","PositionStatus","PriceItem","formatNumberWithDown","Divider","ZapSubmiteInfo","Fragment","DepositRatio","TotalAmount","title","price","useAddLiquidity","getList","preAdd","getClmmCreateAddData","getFarmsCreateAddData","usePosAdd","preAddLoading","setPreAddLoading","getContractPoolInfo","useGetContractPoolInfo","signAndExecuteTransaction","getTransactionStatus","transactionSuccess","useTransaction","mevProtect","maxCapForGas","transactionMode","customGasPrice","slippage","zapSlippage","useGlobalStore","transactionConfirmation","useTransactionModal","getCurrentPrice","useGetCurrentPrice","setFromAmount","fromAmountValue","setFromAmountValue","setToAmount","toAmountValue","setToAmountValue","byAmountIn","setByAmountIn","isTokenA","setIsTokenA","setPercentMap","isFullRange","setIsFullRange","setFromToken","setToToken","setTotalAmount","setFromTokenLock","setToTokenLock","setTokenMaxA","setTokenMaxB","tokenMaxA","tokenMaxB","autoStakePosition","liquidityAmount","setLiquidityAmount","useZapIn","setUseZapIn","confirmModalOpen","setConfirmModalOpen","nftOpen","setNftOpen","relatedPosId","setRelatedPosId","currentAccount","onWalletModal","useAccountStore","getTokenAmountValue","useTokenPrice","getZapDepositTx","getZapDepositToastInfo","reCalculateZapData","useZapSubmit","setZapAmount","useZapStore","getPositionBaseList","usePositionList","useDeepCompareEffect","isWhiteQuoteToken","useQuoteWhiteTokenList","notifiSubscription","useNotifiSubscription","isChecked","useNotifiStore","baseToken","amountToBN","rateMap","calcCoinProportion","handlePreCalc","_toAmount","_fromAmountValue","_toAmountValue","_totalAmountValue","_fromAmount","handleAmountChange","_byAmountIn","_isTokenA","fromBalanceInfo","useGetTokenBalance","toBalanceInfo","TickUtil","isAvailableObject","handleAdd","resetInputAmount","fetchAccountBalance","useAccountBalance","handleSubmit","trackData","amount_a","amount_b","toastInfo","msafeParams","inputAmount","tokenDecimals","Decimal","fixAmountA","lowerTick","upperTick","currentTickIndex","rewarderCoinTypes","rewarder_infos","ele","status","balanceChanges","description","formatDescription","info","amountAF","amountBF","getBalanceChanges","posId","farmsPosId","parsePositionIdFromEvent","errorLowerString","_contractPoolInfo","handleChangeZapIn","useAddLiquidityButton","submitBtnInfo","btnInfo","useGetLeverage","minPrice","maxPrice","useDeposit","rangeTabList","setIsFarmRewardsRange","setAutoStakePosition","currentRangeTab","setCurrentRangeTab","liquidityChartTab","setLiquidityChartTab","handleInitTickData","usePriceRange","getLeverage","liquidityChartTabList","handleChangeLiquidityChartTab","coinType","leverage","handleChangeIsFarmRewardsRange","event","onReverseClick","tab","NFTModal","tokenA","tokenB","fee","navigate","useNavigate","isDirect","setIsDirect","useLayoutEffect","formatPrice","e","cancelBubble","ModalFooter","ControlPriceRange","minPriceData","maxPriceData","tickDataLoading","handleAddPrice","handleSubPrice","setTickDataBasedOnPrice","PriceInput","FarmRewardsRange","checked","onChange","FarmingIcon","Switch","AutoStakePosition","disabled","CetusTooltip","PriceRangeForDate","wrapStyle","setTab","priceRangeMap","useDepositStore","minPriceForDate","maxPriceForDate","setMinPriceForDate","setMaxPriceForDate","_min","_max","lowest","lowValue","highest","highValue","formatSmallPrice","removeComma","useGetRecommendRanges","poolType","setPoolType","getStableRange","farmsEffectTickLower","farmsEffectTickUpper","getFullRange","tickSpacing","getCustomRange","currentTick","addTick","nearesCurrentTick","getNearestTickByTick","stableRange","recommendRangesResult","fullRange","customRange","combinedRanges","rangesList","key","a","b","getRecommendRangeData","rangeName","isActive","getRecommendRangeTipText","rangeWidthMap","SelectRecommendPriceRange","getRecommendRangesList","recommendRanges","setRecommendRanges","currentRange","setCurrentRange","setLowerTickData","setUpperTickData","setTickDataLoading","recommendRangesInfo","originApiPoolInfo","fetchRecommendRanges","rangeList","range","Flex","Tooltip","Image","VaultBanner","isOpen","setIsOpen","displayTokenA","displayTokenB","feeDisplay","clmmPool","vaultId","category","clearVaultsActionData","useVaultsActionStore","isVaultsFarming","useCurrentVaultsFarm","isOpenFarmingModal","setIsOpenFarmingModal","farmingModalAction","setFarmingModalAction","VaultsAprBlock","VaultModal","FarmingModal","CurrentPrice","H5ProvideLiquidity","btnText","btnDisabled","resetLiquidity","contractPoolInfoLoading","apiPoolInfoLoading","isFarmRewardsRange","handleChangeAutoStake","currentPrice","priceImpactBasedOnMarket","usePriceImpact","formatTickPrice","priceImpactBasedOnMarketDisplay","ranges","acc","SelectTab","LiquidityRangeChart","ErrorTips","getDisplayPrice","getDisplayReversePrice","WithTooltipInfo","EstimatedApr","ZapSwitch","Slippage","ZapDeposite","TradeInputGroup","focus","PCProvideLiquidity","DivisionBlock","showNewVersionApr","Block","ProvideLiquidity","currentFeeTier","getPrice","zapAmount","currentZapToken","getHaedalFarmingList","useGetVaultsFarmingApiInfo","vaultsFarmObj","useVaultsFarmingStore","useMyPositions","posBaseListLoading","posBaseListGroupByPool","usePositionStore","getPosRelatedData","rpcNodeErrorStr","setRpcNodeErrorStr","handleGetPositionList","walletAddress","useRpcListener","MyPositions","priceDirect","data","PositionItem","PoolsStats","totalTvl","cursorStyle","StatsInfo","AprTooltip","useGetRelatedPools","from","to","getPoolList","useGetPoolList","relatedPoolList","setRelatedPoolList","setApiPoolInfo","setApiPoolInfoLoading","setNetError","fetchTokenInfo","useGetToken","pool","_res","_pool","maxBy","tokenMap","_displayTokenA","_displayTokenB","useGetPoolRelatedInfo","quoteWhiteTokenList","feeTierList","getFeeTierList","clmmDefaultFeeOptions","isTrustedToken","_currentFeeTier","fetchPriceRange","useGetPriceRange","getPriceRanges","address","warningTokenList","useLiquidity","setCurrentPriceData","handleResetRange","resetAddLiquidity","resetDeposit","currentTab","setCurrentTab","tabList","favoriteStyle","onChangeFavorites","selectedTokenA","selectedTokenB","setSelectedTokenA","setSelectedTokenB","onConfirm","setFeeTier","refreshMarketPrice","onJump2Swap","handleSelectToken","getSelectTokenProps","useLiquidityInteraction","handleGetPrice","handleRefreshPrice","handleRefresh","isManual","CLMM","netError","onOpen","useDisclosure","useGetTvlInfo","showContent","tooltip","xlinkHref","svgFill","svgHover","selectTokenAProps","setSelectTokenAProps","selectTokenBProps","setSelectTokenBProps","fetchSelectTokenProps","useCallback","tokenAProps","tokenBProps","backUrl","setPriceDirect","BackButton","RefreshButton","SelectToken","VersionBlock","FeeSelectBlock","TabsEnum","WarningTokenTipsModal","tokenInfo","SelectTokenAnddFeeConfirm"],"mappings":"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"}