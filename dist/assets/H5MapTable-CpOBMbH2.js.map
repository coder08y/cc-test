{"version":3,"file":"H5MapTable-CpOBMbH2.js","sources":["../../../ui-kit/src/components/H5MapTable/H5MapTable.tsx"],"sourcesContent":["import { Box, Center, FlexboxProps, StackProps, VStack } from '@chakra-ui/react'\nimport Pagination, { PaginationProps } from '../Pagination'\nimport { ColumnsType } from '../Table'\nimport H5MapTableItem from './H5MapTableItem'\nimport { transColumns2H5 } from './util'\n\ninterface H5MapTableType<T> {\n  dataSource: T[]\n  itemSkeletonLength?: number\n  skeletonLength?: number\n  columns: ColumnsType<T>[]\n  rowKey?: string | ((record: T) => string)\n  onRowClick?: (record: T, index?: number) => void\n  onBodyHover?: () => void\n  onBodyLeave?: () => void\n  rowStyle?: StackProps | ((record: T, index: number) => StackProps)\n  loading: boolean\n  haveDividingLine?: boolean\n  pagination?: PaginationProps\n  wrapStyle?: StackProps\n  itemHeight?: FlexboxProps['flexBasis']\n  isShowBorder?: boolean\n}\n\nfunction H5MapTable<T>({\n  dataSource,\n  columns,\n  itemSkeletonLength,\n  skeletonLength = 3,\n  rowKey,\n  loading,\n  pagination,\n  rowStyle,\n  wrapStyle,\n  onRowClick,\n  onBodyHover,\n  onBodyLeave,\n  itemHeight,\n  isShowBorder = true,\n  haveDividingLine = true\n}: H5MapTableType<T>) {\n  const skeletonData = new Array(skeletonLength).fill(0)\n  return (\n    <VStack w=\"100%\" {...(wrapStyle || {})} onMouseEnter={() => onBodyHover && onBodyHover()} onMouseLeave={() => onBodyLeave && onBodyLeave()}>\n      {(dataSource && dataSource?.length && !loading ? dataSource : skeletonData)?.map((item, index) => (\n        <VStack w=\"100%\" key={loading ? index : typeof rowKey === 'function' ? rowKey(item) : rowKey ? (item as unknown as any)[rowKey] : index}>\n          <H5MapTableItem\n            key={loading ? index : typeof rowKey === 'function' ? rowKey(item) : rowKey ? (item as unknown as any)[rowKey] : index}\n            data={loading ? [] : transColumns2H5<T>(columns, item, index)}\n            loading={loading}\n            skeletonLength={itemSkeletonLength}\n            onClick={() => onRowClick?.(item, index)}\n            style={typeof rowStyle === 'function' ? rowStyle(item, index) : rowStyle}\n            itemHeight={itemHeight}\n          />\n          {isShowBorder && haveDividingLine && <Box w=\"100%\" h=\"1px\" bg=\"border\" mt=\"12px\" />}\n        </VStack>\n      ))}\n      {pagination && pagination?.total > pagination?.size && (\n        <Center mt=\"16px\">\n          <Pagination {...pagination} />\n        </Center>\n      )}\n    </VStack>\n  )\n}\n\nexport default H5MapTable\n"],"names":["H5MapTable","dataSource","columns","itemSkeletonLength","skeletonLength","rowKey","loading","pagination","rowStyle","wrapStyle","onRowClick","onBodyHover","onBodyLeave","itemHeight","isShowBorder","haveDividingLine","skeletonData","VStack","_a","item","index","jsxs","jsx","H5MapTableItem","transColumns2H5","Box","Center","Pagination"],"mappings":"iJAwBA,SAASA,EAAc,CACrB,WAAAC,EACA,QAAAC,EACA,mBAAAC,EACA,eAAAC,EAAiB,EACjB,OAAAC,EACA,QAAAC,EACA,WAAAC,EACA,SAAAC,EACA,UAAAC,EACA,WAAAC,EACA,YAAAC,EACA,YAAAC,EACA,WAAAC,EACA,aAAAC,EAAe,GACf,iBAAAC,EAAmB,EACrB,EAAsB,OACpB,MAAMC,EAAe,IAAI,MAAMZ,CAAc,EAAE,KAAK,CAAC,EACrD,cACGa,EAAA,CAAO,EAAE,OAAQ,GAAIR,GAAa,GAAK,aAAc,IAAME,GAAeA,EAAA,EAAe,aAAc,IAAMC,GAAeA,IACzH,SAAA,EAAAM,EAAAjB,IAAcA,GAAA,MAAAA,EAAY,SAAU,CAACK,EAAUL,EAAae,IAA5D,YAAAE,EAA2E,IAAI,CAACC,EAAMC,IACtFC,OAACJ,EAAA,CAAO,EAAE,OACR,SAAA,CAAAK,EAAAA,IAACC,EAAA,CAEC,KAAMjB,EAAU,CAAA,EAAKkB,EAAmBtB,EAASiB,EAAMC,CAAK,EAC5D,QAAAd,EACA,eAAgBH,EAChB,QAAS,IAAMO,GAAA,YAAAA,EAAaS,EAAMC,GAClC,MAAO,OAAOZ,GAAa,WAAaA,EAASW,EAAMC,CAAK,EAAIZ,EAChE,WAAAK,CAAA,EANKP,EAAUc,EAAQ,OAAOf,GAAW,WAAaA,EAAOc,CAAI,EAAId,EAAUc,EAAwBd,CAAM,EAAIe,CAAA,EAQlHN,GAAgBC,GAAoBO,EAAAA,IAACG,EAAA,CAAI,EAAE,OAAO,EAAE,MAAM,GAAG,SAAS,GAAG,MAAA,CAAO,CAAA,CAAA,EAV7DnB,EAAUc,EAAQ,OAAOf,GAAW,WAAaA,EAAOc,CAAI,EAAId,EAAUc,EAAwBd,CAAM,EAAIe,CAWlI,GAEDb,IAAcA,GAAA,YAAAA,EAAY,QAAQA,GAAA,YAAAA,EAAY,OAC7Ce,EAAAA,IAACI,EAAA,CAAO,GAAG,OACT,SAAAJ,EAAAA,IAACK,EAAA,CAAY,GAAGpB,EAAY,CAAA,CAC9B,CAAA,EAEJ,CAEJ"}