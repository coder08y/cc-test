{"version":3,"file":"PositionItemContent-Cx-1mfww.js","sources":["../../src/types/position.ts","../../src/components/common/MiningIcon.tsx","../../src/hooks/dlmm-position/useGetDlmmPositionList.ts","../../src/hooks/position/usePositionListAction.ts","../../src/components/position/list/DailyEarnBlock.tsx","../../src/components/position/list/PendingYieldBlock.tsx","../../src/components/position/clmm/list/PositionPriceRange.tsx","../../src/components/position/clmm/list/PositionItemContent.tsx","../../src/components/position/dlmm/list/DLMMPositionPriceRange.tsx","../../src/components/position/dlmm/list/LiquidityValueBlock.tsx","../../src/components/position/dlmm/list/DLMMPositionItemContent.tsx","../../src/components/position/common/PositionItemContent.tsx"],"sourcesContent":["import { Token } from '@cetus/types'\nimport { PositionVesting } from '@cetusprotocol/sui-clmm-sdk'\n\n//TODO 临时控制变量，后期需删除，是否展示新版apr ui部分\nexport const showNewVersionApr = true\n\nexport type PosToken = {\n  isReverse: boolean\n  tokenA: Token\n  tokenB: Token\n  displayTokenA: Token\n  displayTokenB: Token\n}\n\nexport type PosBaseInfo = PosToken & {\n  clmmPool: string\n  posId: string\n  id: string\n  liquidity: string\n  index: string | number\n  coinTypeA: string\n  coinTypeB: string\n  lowerTick: number\n  upperTick: number\n  owner: string\n  posType: 'clmm' | 'farms' | 'burn'\n  tokenName: string\n  version: string\n  farmsPool?: string\n  isFrozen?: boolean\n  vestData?: PositionVesting\n}\n\nexport type PosPoolsRelated = {\n  currentPrice: string\n  currentPriceReverse: string\n  minPrice: string\n  minPriceResever: string\n  maxPrice: string\n  maxPriceResever: string\n  minPriceOrigin: string\n  maxPriceOrigin: string\n  minPriceRaw: string\n  maxPriceRaw: string\n  currentPriceOrigin: string\n  currentStatus: string\n  fee: string\n  displayFee: string\n  tickSpacing: number\n  currentTickIndex: number\n  curSqrtPrice: string\n  liquidity: string\n  lowerTick: string\n  upperTick: string\n}\n\nexport type PosLiquidity = {\n  coinAmountA: string\n  coinAmountB: string\n  displayCoinAmountA: string\n  displayCoinAmountB: string\n  displayPercentA: string\n  displayPercentB: string\n  onlyAmountA?: string\n  onlyAmountB?: string\n}\n\nexport type PosFee = {\n  displayFeeOwedA: string\n  displayFeeOwedB: string\n  feeOwedA: string\n  feeOwedB: string\n}\n\nexport type PosReward = {\n  amount_owed: string\n  coin_address: string\n  display_amount_owed: string\n  token: Token\n}\n\nexport type PrePosAddRes = {\n  coinAmountA: string\n  coinAmountB: string\n  coinAmountAOrigin: string\n  coinAmountBOrigin: string\n  tokenMaxA: string\n  tokenMaxB: string\n  liquidityAmount: string\n  displayCoinAmountA?: string\n  displayCoinAmountB?: string\n}\n","import '@/assets/css/mining_style.css'\nimport useIconActive from '@/hooks/common/useIconActive'\nimport { CetusTooltip } from '@cetus/design'\nimport { cancelBubble } from '@cetus/utils'\nimport { Box, BoxProps, Center, HStack, StackProps, Text } from '@chakra-ui/react'\nconst MiningIcon = (props: StackProps) => {\n  return (\n    <HStack\n      w=\"16px\"\n      h=\"16px\"\n      onClick={e => {\n        cancelBubble(e)\n      }}\n      {...props}\n    >\n      <CetusTooltip placement=\"top\" tooltip={<Text fontSize=\"12px\">Mining rewards available</Text>}>\n        <Center>\n          <MiningImage />\n        </Center>\n      </CetusTooltip>\n    </HStack>\n  )\n}\n\nconst MiningImage = (props: BoxProps) => {\n  const { active, animate, onMouseOver, onMouseOut } = useIconActive()\n\n  return (\n    <Box as=\"div\" w=\"20px\" h=\"20px\" pos=\"relative\" cursor=\"pointer\" onMouseEnter={onMouseOver} onMouseLeave={onMouseOut} {...props}>\n      <Box as=\"div\" className=\"mining_composition\">\n        <Box as=\"div\" className={`mining_class3 mining_bg3 ${active && animate ? 'mining_ani3' : ''} `} />\n        <Box as=\"div\" className={`mining_class2 mining_bg2 ${active && animate ? 'mining_ani2' : ''} `} />\n        <Box as=\"div\" className={`mining_class1 mining_bg1 ${active && animate ? 'mining_ani1' : ''} `} />\n      </Box>\n    </Box>\n  )\n}\n\nexport default MiningIcon\n\nexport { MiningImage }\n","import useDlmmPositionStore from '@/store/dlmm-position'\nimport { useSdk } from '@cetus/sdk-factory'\nimport usePositionList from '../position/usePositionList'\nimport useWrapPosData from '../position/useWrapPosData'\n\nexport default function useGetDlmmPositionList() {\n  const dlmmSdk = useSdk('dlmm')\n  const { setDlmmPosBaseListLoading, setDlmmPosBaseList } = useDlmmPositionStore()\n  const { wrapDlmmPosBaseInfo } = useWrapPosData()\n  const { getPosDlmmRelatedData } = usePositionList()\n\n  const getDlmmPositionBaseList = async (account: string) => {\n    console.log('🚀🚀🚀 ~ useGetDlmmPositionList.ts:9 ~ getDlmmPositionBaseList ~ account:', account)\n    setDlmmPosBaseListLoading(true)\n    try {\n      const res = await dlmmSdk?.Position.getOwnerPositionList(account)\n      const dlmmPosBaseList: any = []\n      for (const item of res as any[]) {\n        const info = await wrapDlmmPosBaseInfo(item)\n        if (!info?.displayTokenA || !info?.displayTokenB) continue\n        if (info) {\n          dlmmPosBaseList.push(info)\n        }\n      }\n      setDlmmPosBaseList(dlmmPosBaseList)\n      getPosDlmmRelatedData(dlmmPosBaseList)\n      console.log('🚀🚀🚀 ~ useGetDlmmPositionList.ts:23 ~ getDlmmPositionBaseList ~ dlmmPosBaseList:', res, dlmmPosBaseList)\n    } catch (error) {\n      console.log('🚀🚀🚀 ~ useGetDlmmPositionList.ts:13 ~ getDlmmPositionBaseList ~ error:', error)\n    } finally {\n      setDlmmPosBaseListLoading(false)\n    }\n  }\n\n  return { getDlmmPositionBaseList }\n}\n","import useGlobalStore from '@/store/common/global'\nimport useDlmmPositionStore from '@/store/dlmm-position'\nimport usePositionStore from '@/store/position'\nimport { PosBaseInfo, PosReward } from '@/types'\nimport { DlmmPosBaseInfo, DlmmPosClosePositionParams } from '@/types/dlmm'\nimport { useAccountBalance } from '@cetus/hooks'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport { useAccountStore } from '@cetus/stores'\nimport { TransactionStatusType } from '@cetus/types'\nimport { d, Decimal, formatNumberWithDown, removeComma } from '@cetus/utils'\nimport { Transaction } from '@mysten/sui/transactions'\nimport { useCallback, useState } from 'react'\nimport useTransaction from '../common/useTransaction'\nimport useDlmmPosRemove from '../dlmm-position/useDlmmPosRemove'\nimport useGetDlmmPositionList from '../dlmm-position/useGetDlmmPositionList'\nimport usePositionApr from './usePositionApr'\nimport usePositionList from './usePositionList'\nimport usePosRemove from './usePosRemove'\n\nexport default function usePositionListAction() {\n  const [isRemoveLoading, setIsRemoveLoading] = useState(false)\n\n  const { getPositionApr } = usePositionApr()\n  const { getTokenAmountValue } = useTokenPrice()\n\n  const {\n    posPoolsRelatedData,\n    posLiquidityData,\n    posFeeData,\n    farmsPosRewardsData,\n    posRewardsData,\n    posApiPoolData,\n    poolRangeObj,\n    setPosBaseList,\n    posAprMap\n  } = usePositionStore()\n  const { dlmmPosRewardsData, setDlmmPosBaseList, dlmmPosFeeData, dlmmPosLiquidityData, dlmmAprMap } = useDlmmPositionStore()\n  const { mevProtect, transactionMode, maxCapForGas, customGasPrice } = useGlobalStore()\n  const { getCloseTsPayloadAll } = usePosRemove()\n  const { signAndExecuteTransaction, transactionConfirmation } = useTransaction()\n  const { fetchAccountBalance } = useAccountBalance()\n  const { getPositionBaseList, getPosRelatedData } = usePositionList()\n  const { currentAccount } = useAccountStore()\n  const { getDlmmPosClosePositionPayload } = useDlmmPosRemove()\n  const { getDlmmPositionBaseList } = useGetDlmmPositionList()\n  const handleGetPositionList = async () => {\n    await getPositionBaseList(currentAccount?.address)\n  }\n\n  const toCloseAllAction = async (closeAllPositionList: (PosBaseInfo | DlmmPosBaseInfo)[]) => {\n    console.log('🚀 ~ toCloseAllAction ~ closeAllPositionList:', closeAllPositionList)\n    setIsRemoveLoading(true)\n\n    const clmmPosIdList = closeAllPositionList.filter(item => item.posType == 'clmm').map((item: any) => item) as PosBaseInfo[]\n    const dlmmPosIdList = closeAllPositionList.filter(item => item.posType == 'dlmm').map((item: any) => item) as DlmmPosBaseInfo[]\n\n    try {\n      // dlmm close all\n      const dlmmParamsList = dlmmPosIdList.map((posInfo: DlmmPosBaseInfo) => {\n        const currentPosRewardsData = dlmmPosRewardsData[posInfo.id]\n        const options: DlmmPosClosePositionParams = {\n          dlmmPool: posInfo.dlmmPool,\n          positionId: posInfo.id,\n          rewardCoins: currentPosRewardsData?.map((item: PosReward) => item.coin_address) || [],\n          coinTypeA: posInfo.coinTypeA,\n          coinTypeB: posInfo.coinTypeB\n        }\n        return options\n      })\n\n      // clmm close all\n      const clmmParamsList = clmmPosIdList.map((posInfo: PosBaseInfo) => {\n        const isVestingPos = !!posInfo?.vestData\n        const currentPosLiquidityData = posLiquidityData[posInfo?.posId]\n        const currentPosRewardsData = posRewardsData[posInfo?.posId]\n        const currentPosPoolInfo = posApiPoolData[posInfo.clmmPool]\n\n        const rewarderCoinTypes =\n          !currentPosRewardsData || currentPosRewardsData?.length == 0\n            ? (currentPosPoolInfo?.miningRewardList || [])?.reduce((arr: string[], item: any) => {\n                arr.push(item.coinType)\n                return arr\n              }, [])\n            : (currentPosRewardsData || []).map((item: PosReward) => item.coin_address)\n        console.log('🚀 ~ paramsList ~ rewarderCoinTypes:', posInfo, posApiPoolData, currentPosPoolInfo, currentPosRewardsData, rewarderCoinTypes)\n\n        const tokenABalance = formatNumberWithDown(currentPosLiquidityData?.displayCoinAmountA, undefined, true)\n        const tokenBBalance = formatNumberWithDown(currentPosLiquidityData?.displayCoinAmountB, undefined, true)\n\n        const isReverse = posInfo.isReverse\n        const [amountA, amountB] = isReverse\n          ? [\n              d(tokenBBalance).mul(Decimal.pow(10, posInfo.displayTokenB?.decimals)).toString(),\n              d(tokenABalance).mul(Decimal.pow(10, posInfo.displayTokenA?.decimals)).toString()\n            ]\n          : [\n              d(tokenABalance).mul(Decimal.pow(10, posInfo.displayTokenA?.decimals)).toString(),\n              d(tokenBBalance).mul(Decimal.pow(10, posInfo.displayTokenB?.decimals)).toString()\n            ]\n\n        const baseParams: any = {\n          posId: posInfo.posType === 'farms' ? posInfo.id : posInfo.posId,\n          poolAddress: posInfo.clmmPool,\n          coinTypeA: posInfo.coinTypeA,\n          coinTypeB: posInfo.coinTypeB,\n          amountA,\n          amountB,\n          liquidity: posInfo.liquidity,\n          lowerTick: posInfo.lowerTick,\n          upperTick: posInfo.upperTick,\n          posType: posInfo.posType,\n          rewarderCoinTypes,\n          isVestingPos\n        }\n\n        if (posInfo.posType === 'farms') {\n          baseParams.farmsPoolId = posInfo.farmsPool\n          baseParams.farmsPosId = posInfo.id\n        }\n\n        return baseParams\n      })\n\n      console.log('🚀 ~ toRemove ~ paramsList:', clmmParamsList)\n\n      const toastInfo = {\n        getShowInfo: (status: TransactionStatusType) => {\n          const isSuccess = status === 'success'\n          return {\n            modalDescriptionText: isSuccess ? '' : 'Close all positions',\n            toastTitleText: isSuccess ? 'Close all positions successful' : 'Close all positions',\n            toastDescriptionContent: isSuccess ? '' : undefined\n          }\n        }\n      }\n\n      transactionConfirmation(toastInfo)\n      let txb = new Transaction()\n\n      dlmmParamsList.forEach(params => {\n        txb = getDlmmPosClosePositionPayload(params, txb)\n      })\n\n      const clmmRes = await getCloseTsPayloadAll(clmmParamsList, txb)\n      console.log('🚀 ~ toCloseAllAction ~ txb:', {\n        clmmRes,\n        txb\n      })\n      const res = await signAndExecuteTransaction(txb, toastInfo, {\n        useMev: mevProtect,\n        useFastMode: transactionMode === 'Fast Mode',\n        maxCapForGas,\n        customGasPrice,\n        msafeParams: clmmRes?.msafeParams\n      })\n      console.log('🚀 ~ toClaim ~ res:', res)\n      if (res) {\n        fetchAccountBalance()\n        setPosBaseList([])\n        setDlmmPosBaseList([])\n        handleGetPositionList()\n        getDlmmPositionBaseList(currentAccount?.address)\n      }\n    } catch (error) {\n      console.error('🚀 ~ toClaim ~ error:', error)\n    } finally {\n      setIsRemoveLoading(false)\n    }\n  }\n\n  const getPositionSortList = useCallback(\n    async (sortByValue: string, sortRule: string, list: (PosBaseInfo | DlmmPosBaseInfo)[]): Promise<(PosBaseInfo | DlmmPosBaseInfo)[]> => {\n      if (!list?.length) return []\n\n      const getUSDRewards = (rewards: any[] = []) => {\n        return rewards\n          .map(reward => ({\n            ...reward,\n            amountUSD: getTokenAmountValue(reward?.token?.coin_type, reward?.display_amount_owed)\n          }))\n          .filter(r => d(r.display_amount_owed).gt(0))\n      }\n\n      const newList = []\n      for (let i = 0; i < list.length; i++) {\n        const positionInfo = list[i]\n        const isDlmm = positionInfo.posType === 'dlmm'\n        const posId = isDlmm ? positionInfo.id : positionInfo.posId\n        // const poolId = isDlmm ? positionInfo.dlmmPool : positionInfo.clmmPool\n\n        const currentPosData = isDlmm ? dlmmPosLiquidityData[posId] : posLiquidityData[posId]\n\n        const amountValueA = getTokenAmountValue(positionInfo.displayTokenA?.coin_type, currentPosData?.displayCoinAmountA)\n        const amountValueB = getTokenAmountValue(positionInfo.displayTokenB?.coin_type, currentPosData?.displayCoinAmountB)\n        const totalLiquidity = d(amountValueA).plus(amountValueB).toString()\n\n        const currentPosFeeData = isDlmm ? dlmmPosFeeData[posId] : posFeeData[posId]\n        const feeA = getTokenAmountValue(positionInfo.displayTokenA?.coin_type, currentPosFeeData?.displayFeeOwedA)\n        const feeB = getTokenAmountValue(positionInfo.displayTokenB?.coin_type, currentPosFeeData?.displayFeeOwedB)\n        const totalFee = d(feeA).plus(feeB).toString()\n\n        const miningRewards = isDlmm ? getUSDRewards(dlmmPosRewardsData[posId]) : getUSDRewards(posRewardsData[posId])\n        const farmRewards = isDlmm ? [] : getUSDRewards(farmsPosRewardsData[positionInfo.id])\n        const totalRewards = [...miningRewards, ...farmRewards].reduce((acc, cur) => acc.plus(cur.amountUSD), d(0)).toString()\n        const totalMiningAmount = miningRewards.reduce((acc, cur) => acc.plus(cur.display_amount_owed), d(0)).toString()\n        const totalFarmingAmount = farmRewards.reduce((acc, cur) => acc.plus(cur.display_amount_owed), d(0)).toString()\n        const totalYield = d(totalFee).plus(totalRewards).toString()\n        let apr = '--'\n        if (posId) {\n          apr = isDlmm ? dlmmAprMap?.[posId] : posAprMap?.[posId]\n        }\n\n        newList.push({\n          ...positionInfo,\n          apr,\n          totalLiquidity,\n          totalYield,\n          totalFee,\n          totalRewards,\n          totalMiningAmount,\n          totalFarmingAmount\n        })\n      }\n\n      const sortMap: Record<string, (a: any, b: any) => number> = {\n        apr: (a, b) => {\n          const aprA = d(removeComma(a.apr?.replace(/[%<]/g, '') ?? 0))\n          const aprB = d(removeComma(b.apr?.replace(/[%<]/g, '') ?? 0))\n          console.log(aprA.toNumber(), aprB.toNumber(), a, b, 'aprA, aprB')\n\n          return sortRule === 'asc' ? aprA.minus(aprB).toNumber() : aprB.minus(aprA).toNumber()\n        },\n        liquidity: (a, b) => {\n          const aVal = d(removeComma(a.totalLiquidity)),\n            bVal = d(removeComma(b.totalLiquidity))\n          return sortRule === 'asc' ? aVal.minus(bVal).toNumber() : bVal.minus(aVal).toNumber()\n        },\n        fees: (a, b) => {\n          const aVal = d(removeComma(a.totalFee)),\n            bVal = d(removeComma(b.totalFee))\n          return sortRule === 'asc' ? aVal.minus(bVal).toNumber() : bVal.minus(aVal).toNumber()\n        },\n        rewards: (a, b) => {\n          const aVal = d(removeComma(a.totalRewards)),\n            bVal = d(removeComma(b.totalRewards))\n          return sortRule === 'asc' ? aVal.minus(bVal).toNumber() : bVal.minus(aVal).toNumber()\n        },\n        yield: (a, b) => {\n          const aVal = d(removeComma(a.totalYield)),\n            bVal = d(removeComma(b.totalYield))\n          return sortRule === 'asc' ? aVal.minus(bVal).toNumber() : bVal.minus(aVal).toNumber()\n        },\n        dailyEarn: (a, b) => {\n          const aVal = d(removeComma(a.apr?.replace(/[%<]/g, '') ?? 0)),\n            bVal = d(removeComma(b.apr?.replace(/[%<]/g, '') ?? 0))\n          return sortRule === 'asc' ? aVal.minus(bVal).toNumber() : bVal.minus(aVal).toNumber()\n        }\n      }\n\n      if (sortMap[sortByValue]) {\n        newList.sort(sortMap[sortByValue])\n      }\n      return newList\n    },\n    [\n      posLiquidityData,\n      posFeeData,\n      posRewardsData,\n      farmsPosRewardsData,\n      posAprMap,\n      dlmmAprMap,\n      dlmmPosLiquidityData,\n      dlmmPosFeeData,\n      dlmmPosRewardsData,\n      getTokenAmountValue\n    ]\n  )\n\n  return {\n    getPositionSortList,\n    toCloseAllAction,\n    isRemoveLoading\n  }\n}\n","import { PosBaseInfo } from '@/types'\nimport { HStack, Text } from '@chakra-ui/react'\n\nexport default function DailyEarnBlock({\n  positionInfo,\n  dailyEarnUSD,\n  dailyEarnOriginResult,\n  hasRewards\n}: {\n  positionInfo: PosBaseInfo\n  dailyEarnUSD: string\n  dailyEarnOriginResult: any\n  hasRewards: boolean\n}) {\n  return (\n    <HStack>\n      <Text color=\"text_caption\">{dailyEarnUSD}</Text>\n    </HStack>\n  )\n  // return dailyEarnUSD === '$0' ? (\n  //   <Text color=\"text_caption\">{dailyEarnUSD}</Text>\n  // ) : (\n  //   <CetusTooltip\n  //     tooltip={\n  //       <VStack bg=\"bg_secondary\" borderRadius=\"8px\" minW=\"240px\" p=\"16px 12px 12px\">\n  //         <VStack w=\"100%\">\n  //           <HStack w=\"100%\" justify=\"space-between\">\n  //             <Text>Claimable Fees</Text>\n  //             <Text color=\"text_caption\">{}</Text>\n  //           </HStack>\n  //           <VStack w=\"100%\" bg=\"card_bg\" gap=\"0\" borderRadius=\"8px\">\n  //             <HStack w=\"100%\" justify=\"space-between\" p=\"12px 8px\">\n  //               <SingleTokenInfo\n  //                 token={positionInfo?.displayTokenA}\n  //                 imgBoxStyle={{ w: '20px', h: '20px' }}\n  //                 haveName={false}\n  //                 symbolFontSize=\"12px\"\n  //                 warningIcon={{ iconW: '10px', iconH: '10px' }}\n  //               />\n  //               <VStack align=\"flex-end\" gap=\"4px\">\n  //                 <Text fontSize=\"12px\" color=\"text_caption\">\n  //                   {formatNumber(dailyEarnOriginResult?.FeeA?.dailyExpansionFactorAmount, 2)}\n  //                 </Text>\n  //                 <Text fontSize=\"12px\">{formatCurrency(dailyEarnOriginResult?.FeeA?.dailyExpansionFactorUSD, 2)}</Text>\n  //               </VStack>\n  //             </HStack>\n  //             <HStack w=\"100%\" justify=\"space-between\" p=\"0 8px 12px\">\n  //               <SingleTokenInfo\n  //                 token={positionInfo?.displayTokenB}\n  //                 imgBoxStyle={{ w: '20px', h: '20px' }}\n  //                 haveName={false}\n  //                 symbolFontSize=\"12px\"\n  //                 warningIcon={{ iconW: '10px', iconH: '10px' }}\n  //               />\n  //               <VStack align=\"flex-end\" gap=\"4px\">\n  //                 <Text fontSize=\"12px\" color=\"text_caption\">\n  //                   {formatNumber(dailyEarnOriginResult?.FeeB?.dailyExpansionFactorAmount, 2)}\n  //                 </Text>\n  //                 <Text fontSize=\"12px\">{formatCurrency(dailyEarnOriginResult?.FeeB?.dailyExpansionFactorUSD, 2)}</Text>\n  //               </VStack>\n  //             </HStack>\n  //           </VStack>\n  //         </VStack>\n  //         {hasRewards && <Box w=\"100%\" h=\"1px\" bg=\"card_bg\" m=\"4px 0\" />}\n  //         {hasRewards && (\n  //           <VStack w=\"100%\">\n  //             <HStack w=\"100%\" justify=\"space-between\">\n  //               <Text>Pending Rewards</Text>\n  //               <Text color=\"text_caption\">{}</Text>\n  //             </HStack>\n  //             <VStack w=\"100%\" align=\"flex-start\" bg=\"card_bg\" gap=\"0\" borderRadius=\"8px\">\n  //               {dailyEarnOriginResult?.Mining?.map((item: any, index: number) => {\n  //                 return (\n  //                   <HStack w=\"100%\" key={item?.CoinType} justify=\"space-between\" p={index % 2 === 0 ? '12px 8px' : '0 8px 12px'}>\n  //                     <SingleTokenInfo\n  //                       coinType={item?.CoinType}\n  //                       imgBoxStyle={{ w: '20px', h: '20px' }}\n  //                       haveName={false}\n  //                       symbolFontSize=\"12px\"\n  //                       warningIcon={{ iconW: '10px', iconH: '10px' }}\n  //                     />\n  //                     <VStack align=\"flex-end\" gap=\"4px\">\n  //                       <Text fontSize=\"12px\" color=\"text_caption\">\n  //                         {formatNumber(item?.dailyExpansionFactorAmount, 2)}\n  //                       </Text>\n  //                       <Text fontSize=\"12px\"> {formatCurrency(item?.dailyExpansionFactorUSD, 2)}</Text>\n  //                     </VStack>\n  //                   </HStack>\n  //                 )\n  //               })}\n  //               {/* {rewardsFarmsInfo?.map((item: any) => {\n  //                 return (\n  //                   <HStack key={item?.token?.coin_type} w=\"100%\" justify=\"space-between\" p=\"12px 8px\">\n  //                     <SingleTokenInfo\n  //                       token={item?.token}\n  //                       imgBoxStyle={{ w: '20px', h: '20px' }}\n  //                       haveName={false}\n  //                       symbolFontSize=\"12px\"\n  //                       warningIcon={{ iconW: '10px', iconH: '10px' }}\n  //                     />\n  //                     <VStack align=\"flex-end\" gap=\"4px\">\n  //                       <Text fontSize=\"12px\" color=\"text_caption\">\n  //                         {formatNumber(item?.display_amount_owed)}\n  //                       </Text>\n  //                       <Text fontSize=\"12px\"> {formatCurrency(item?.amountUSD, 2)}</Text>\n  //                     </VStack>\n  //                   </HStack>\n  //                 )\n  //               })} */}\n  //             </VStack>\n  //           </VStack>\n  //         )}\n  //       </VStack>\n  //     }\n  //     bodyPadding=\"0\"\n  //     children={\n  //       <HStack>\n  //         <Text color=\"text_caption\" borderBottom=\"1px dotted\">\n  //           {dailyEarnUSD}\n  //         </Text>\n  //       </HStack>\n  //     }\n  //   />\n  // )\n}\n","import useCalculatePendingYield from '@/hooks/position/useCalculatePendingYield'\nimport useClaimPosition from '@/hooks/position/useClaimPosition'\nimport useDlmmPositionStore from '@/store/dlmm-position'\nimport usePositionStore from '@/store/position'\nimport { PosBaseInfo } from '@/types'\nimport { DlmmPosBaseInfo } from '@/types/dlmm'\nimport SingleTokenInfo from '@cetus/design/src/components/common/SingleTokenInfo'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport useTokenPriceStore from '@cetus/stores/src/tokenPrice'\nimport { d, formatCurrency, formatNumber } from '@cetus/utils'\nimport { Box, Button, HStack, Popover, PopoverBody, PopoverContent, PopoverTrigger, Portal, Text, useDisclosure, VStack } from '@chakra-ui/react'\nimport { useEffect, useMemo, useState } from 'react'\n\nexport default function PendingYieldBlock({ positionInfo, hasRewards }: { positionInfo: PosBaseInfo | DlmmPosBaseInfo; hasRewards: boolean }) {\n  const { getTokenAmountValue } = useTokenPrice()\n  const {\n    posRewardsData,\n    posRewardsDataLoading,\n    posApiPoolData,\n    farmsPosRewardsData,\n    farmsPosRewardsDataLoading,\n    posFeeData,\n    currentPosBaseInfoLoading,\n    posFeeDataLoading,\n    posPoolsOriginalData\n  } = usePositionStore()\n  const { dlmmPosPoolsRelatedData, dlmmPosPoolsOriginalData, dlmmPosFeeData, dlmmPosRewardsData, dlmmPosLiquidityData } = useDlmmPositionStore()\n\n  const isDlmm = useMemo(() => positionInfo?.posType === 'dlmm', [positionInfo?.posType])\n  const currentPosContractPoolInfo = useMemo(() => {\n    return isDlmm ? dlmmPosPoolsOriginalData?.[positionInfo?.dlmmPool] : posPoolsOriginalData[positionInfo?.clmmPool]\n  }, [posPoolsOriginalData, dlmmPosPoolsOriginalData, isDlmm, positionInfo?.clmmPool, positionInfo?.dlmmPool])\n\n  // fee\n  const currentPosFeeData = isDlmm ? dlmmPosFeeData[positionInfo?.id] : posFeeData[positionInfo?.posId]\n  const amountValueA = getTokenAmountValue(positionInfo?.displayTokenA?.coin_type, currentPosFeeData?.displayFeeOwedA, '--')\n  const amountValueB = getTokenAmountValue(positionInfo?.displayTokenB?.coin_type, currentPosFeeData?.displayFeeOwedB, '--')\n  const amountValue = useMemo(() => {\n    if (amountValueA !== '--' && amountValueB !== '--') {\n      return formatCurrency(d(amountValueA).plus(amountValueB).toString(), 2)\n    }\n    return '$--'\n  }, [amountValueA, amountValueB])\n\n  // reward\n\n  const { coinPriceObj } = useTokenPriceStore()\n  const curentPosRewardsData = isDlmm ? dlmmPosRewardsData[positionInfo?.id] : posRewardsData[positionInfo?.posId]\n  const rewardsMiningInfo = useMemo(() => {\n    const list = curentPosRewardsData?.map((reward: any) => {\n      const amountUSD = getTokenAmountValue(reward?.token?.coin_type, reward?.display_amount_owed, '--')\n      return {\n        ...reward,\n        amountUSD\n      }\n    })\n    if (list && list.length > 0) {\n      return list.filter((ele: any) => d(ele.display_amount_owed).gt(0))\n    }\n    return []\n  }, [positionInfo, curentPosRewardsData, coinPriceObj])\n\n  const currentPosFarmsData = isDlmm ? [] : farmsPosRewardsData[positionInfo?.id]\n\n  const rewardsFarmsInfo = useMemo(() => {\n    const list = currentPosFarmsData?.map((reward: any) => {\n      const amountUSD = getTokenAmountValue(reward?.token?.coin_type, reward?.display_amount_owed, '--')\n      return {\n        ...reward,\n        amountUSD\n      }\n    })\n    if (list && list.length > 0) {\n      return list.filter((ele: any) => d(ele.display_amount_owed).gt(0))\n    }\n    return []\n  }, [positionInfo, currentPosFarmsData, coinPriceObj])\n\n  const totalUSD = useMemo(() => {\n    let total: any\n    const arr = rewardsMiningInfo.concat(rewardsFarmsInfo)\n    if (arr?.length > 0) {\n      arr.forEach((ele: any) => {\n        const eleUSD = ele?.amountUSD\n        total = eleUSD == '--' || total == '--' ? '--' : d(total).plus(eleUSD).toString()\n      })\n      return total == '--' ? '$--' : formatCurrency(total, 2)\n    }\n    return '$0'\n  }, [rewardsMiningInfo, rewardsFarmsInfo])\n\n  const pendingYieldUSD = useMemo(() => {\n    let total = d(0)\n    if (amountValueA !== '--') {\n      total = total.add(amountValueA)\n    }\n    if (amountValueB !== '--') {\n      total = total.add(amountValueB)\n    }\n\n    const arr = rewardsMiningInfo.concat(rewardsFarmsInfo)\n    if (arr?.length > 0) {\n      arr.forEach((ele: any) => {\n        const eleUSD = ele?.amountUSD\n        total = eleUSD !== '--' ? d(total).add(eleUSD) : total\n      })\n    }\n    return `${formatCurrency(total.toString(), 2)}`\n  }, [amountValueA, amountValueB, rewardsMiningInfo, rewardsFarmsInfo])\n\n  const [totalYield, setTotalYield] = useState('--')\n  const { calculatePendingYield } = useCalculatePendingYield()\n\n  useEffect(() => {\n    if (!posFeeDataLoading && !posRewardsDataLoading) {\n      if (!isDlmm) {\n        const { total } = calculatePendingYield([positionInfo as PosBaseInfo], posFeeData, posRewardsData, farmsPosRewardsData)\n        setTotalYield(total)\n      } else {\n        const { total } = calculatePendingYield([positionInfo as PosBaseInfo], {}, {}, {}, dlmmPosFeeData, dlmmPosRewardsData)\n        setTotalYield(total)\n      }\n    }\n  }, [\n    currentPosBaseInfoLoading,\n    posFeeDataLoading,\n    posRewardsDataLoading,\n    posFeeData,\n    posRewardsData,\n    positionInfo,\n    farmsPosRewardsData,\n    isDlmm,\n    dlmmPosFeeData,\n    dlmmPosRewardsData\n  ])\n\n  const { toClaimPosition, isClaimLoading } = useClaimPosition()\n  const toClaim = () => {\n    toClaimPosition(positionInfo, currentPosContractPoolInfo, rewardsFarmsInfo?.length > 0)\n  }\n\n  const { isApp } = useWindowWidth()\n  const { isOpen, onClose, onOpen } = useDisclosure()\n\n  return pendingYieldUSD === '$0' ? (\n    <HStack>\n      {/* {haveMining && <MiningImage />}\n      {haveFarming && <FarmingImage />} */}\n      <Text color=\"text_caption\">{pendingYieldUSD}</Text>\n    </HStack>\n  ) : (\n    <Popover\n      isLazy\n      trigger={isApp ? 'click' : 'hover'}\n      isOpen={isOpen} // 只在移动端控制状态\n      onClose={onClose}\n      onOpen={isApp ? () => {} : onOpen}\n      autoFocus={false}\n      returnFocusOnClose={false}\n      gutter={4}\n      modifiers={[\n        {\n          name: 'preventOverflow',\n          options: {\n            padding: 8 // 页面边缘预留 8px\n          }\n        }\n      ]}\n    >\n      <PopoverTrigger>\n        <Box\n          as=\"button\"\n          onClick={e => {\n            // 只有在移动端且showTooltip为true时才触发\n            if (isApp) {\n              e.stopPropagation()\n              onOpen()\n            }\n          }}\n        >\n          <HStack>\n            <Text color=\"text_caption\" borderBottom=\"1px dotted\" borderColor=\"primary_gray\">\n              {pendingYieldUSD}\n            </Text>\n          </HStack>\n        </Box>\n      </PopoverTrigger>\n      <Portal>\n        <PopoverContent w=\"fit-content\" maxW=\"320px\">\n          <PopoverBody p=\"8px\" fontSize=\"sm\" w=\"fit-content\">\n            <VStack bg=\"bg_secondary\" borderRadius=\"8px\" minW=\"240px\" p=\"16px 12px 12px\">\n              <VStack w=\"100%\">\n                <HStack w=\"100%\" justify=\"space-between\">\n                  <Text>Claimable Fees</Text>\n                  <Text color=\"text_caption\">{amountValue}</Text>\n                </HStack>\n                <VStack w=\"100%\" bg=\"card_bg\" gap=\"0\" borderRadius=\"8px\">\n                  <HStack w=\"100%\" justify=\"space-between\" p=\"12px 8px\">\n                    <SingleTokenInfo\n                      token={positionInfo?.displayTokenA}\n                      imgBoxStyle={{ w: '20px', h: '20px' }}\n                      haveName={false}\n                      symbolFontSize=\"12px\"\n                      warningIcon={{ iconW: '10px', iconH: '10px' }}\n                    />\n                    <VStack align=\"flex-end\" gap=\"4px\">\n                      <Text fontSize=\"12px\" color=\"text_caption\">\n                        {formatNumber(currentPosFeeData?.displayFeeOwedA)}\n                      </Text>\n                      <Text fontSize=\"12px\">{formatCurrency(amountValueA, 2)}</Text>\n                    </VStack>\n                  </HStack>\n                  <HStack w=\"100%\" justify=\"space-between\" p=\"0 8px 12px\">\n                    <SingleTokenInfo\n                      token={positionInfo?.displayTokenB}\n                      imgBoxStyle={{ w: '20px', h: '20px' }}\n                      haveName={false}\n                      symbolFontSize=\"12px\"\n                      warningIcon={{ iconW: '10px', iconH: '10px' }}\n                    />\n                    <VStack align=\"flex-end\" gap=\"4px\">\n                      <Text fontSize=\"12px\" color=\"text_caption\">\n                        {formatNumber(currentPosFeeData?.displayFeeOwedB)}\n                      </Text>\n                      <Text fontSize=\"12px\">{formatCurrency(amountValueB, 2)}</Text>\n                    </VStack>\n                  </HStack>\n                </VStack>\n              </VStack>\n              {hasRewards && <Box w=\"100%\" h=\"1px\" bg=\"card_bg\" m=\"4px 0\" />}\n              {hasRewards && (\n                <VStack w=\"100%\">\n                  <HStack w=\"100%\" justify=\"space-between\">\n                    <Text>Claimable Rewards</Text>\n                    <Text color=\"text_caption\">{totalUSD}</Text>\n                  </HStack>\n                  <VStack w=\"100%\" align=\"flex-start\" bg=\"card_bg\" gap=\"0\" borderRadius=\"8px\">\n                    {rewardsMiningInfo?.map((item: any, index: number) => {\n                      return (\n                        <HStack w=\"100%\" key={item?.token?.coin_type} justify=\"space-between\" p={index % 2 === 0 ? '12px 8px' : '0 8px 12px'}>\n                          <SingleTokenInfo\n                            token={item?.token}\n                            imgBoxStyle={{ w: '20px', h: '20px' }}\n                            haveName={false}\n                            symbolFontSize=\"12px\"\n                            warningIcon={{ iconW: '10px', iconH: '10px' }}\n                          />\n                          <VStack align=\"flex-end\" gap=\"4px\">\n                            <Text fontSize=\"12px\" color=\"text_caption\">\n                              {formatNumber(item?.display_amount_owed)}\n                            </Text>\n                            <Text fontSize=\"12px\"> {formatCurrency(item?.amountUSD, 2)}</Text>\n                          </VStack>\n                        </HStack>\n                      )\n                    })}\n                    {rewardsFarmsInfo?.map((item: any, index: number) => {\n                      return (\n                        <HStack key={item?.token?.coin_type} w=\"100%\" justify=\"space-between\" p={index % 2 === 0 ? '12px 8px' : '0 8px 12px'}>\n                          <SingleTokenInfo\n                            token={item?.token}\n                            imgBoxStyle={{ w: '20px', h: '20px' }}\n                            haveName={false}\n                            symbolFontSize=\"12px\"\n                            warningIcon={{ iconW: '10px', iconH: '10px' }}\n                          />\n                          <VStack align=\"flex-end\" gap=\"4px\">\n                            <Text fontSize=\"12px\" color=\"text_caption\">\n                              {formatNumber(item?.display_amount_owed)}\n                            </Text>\n                            <Text fontSize=\"12px\"> {formatCurrency(item?.amountUSD, 2)}</Text>\n                          </VStack>\n                        </HStack>\n                      )\n                    })}\n                  </VStack>\n                </VStack>\n              )}\n              <Button\n                h=\"28px\"\n                w=\"100%\"\n                borderRadius=\"8px\"\n                mt=\"4px\"\n                fontSize=\"14px\"\n                fontWeight=\"500\"\n                isDisabled={Number(totalYield) === 0 || posFeeDataLoading || posRewardsDataLoading || isClaimLoading}\n                isLoading={isClaimLoading || posFeeDataLoading || posRewardsDataLoading}\n                onClick={e => {\n                  e.stopPropagation()\n                  toClaim()\n                  onClose()\n                }}\n              >\n                Claim All\n              </Button>\n            </VStack>\n          </PopoverBody>\n        </PopoverContent>\n      </Portal>\n    </Popover>\n  )\n}\n","import PositionPriceBar from '@/components/position/list/PositionPriceRangeBar'\nimport usePosHelper from '@/hooks/position/usePosHelper'\nimport usePositionStore from '@/store/position'\nimport { PosBaseInfo } from '@/types'\nimport { AddressCopyLink, CetusTooltip } from '@cetus/design'\nimport useExplorer from '@cetus/hooks/src/useExplorer'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { Icon } from '@cetus/ui-kit'\nimport { cancelBubble, formatSmallPrice, isAvailableObject, removeComma } from '@cetus/utils'\nimport { Center, HStack, Skeleton, Text, VStack } from '@chakra-ui/react'\nimport { useMemo } from 'react'\nimport StatusPosition from '../../common/StatusPosition'\n\nfunction PositionPriceRange({\n  positionInfo,\n  tokenName,\n  priceDirect,\n  isShowIcon\n}: {\n  positionInfo: PosBaseInfo\n  tokenName: string | undefined\n  priceDirect?: boolean\n  isShowIcon?: boolean\n}) {\n  const { getPosIsActive } = usePosHelper()\n  const { posPoolsRelatedData, posPoolsOriginalData } = usePositionStore()\n  const currentPosPoolsRelatedData = posPoolsRelatedData[positionInfo?.posId]\n\n  // const isActive = currentPosPoolsRelatedData?.currentStatus == 'Active'\n  const isActive = useMemo(() => {\n    return getPosIsActive(positionInfo as PosBaseInfo, posPoolsOriginalData?.[positionInfo?.clmmPool || '']?.current_sqrt_price)\n  }, [positionInfo, posPoolsOriginalData])\n\n  const { isApp } = useWindowWidth()\n\n  const minPrice = useMemo(() => {\n    return currentPosPoolsRelatedData?.minPriceOrigin\n  }, [currentPosPoolsRelatedData])\n\n  const maxPrice = useMemo(() => {\n    return currentPosPoolsRelatedData?.maxPriceOrigin\n  }, [currentPosPoolsRelatedData])\n\n  const currPrice = useMemo(() => {\n    return currentPosPoolsRelatedData?.currentPriceOrigin\n  }, [currentPosPoolsRelatedData])\n\n  const { getExplorerUrl } = useExplorer()\n  return (\n    <VStack align={{ base: 'flex-end', lg: 'flex-start' }} gap={{ base: '4px', lg: '8px' }} w=\"100%\" maxW=\"100%\">\n      <HStack\n        justify={{ base: 'flex-end', lg: 'flex-start' }}\n        maxW=\"100%\"\n        w={{ base: '100%', lg: 'unset' }}\n        borderRadius=\"12px\"\n        pr={{ base: '0', lg: '16px' }}\n      >\n        <Skeleton isLoaded={!!currentPosPoolsRelatedData?.minPrice && !!currentPosPoolsRelatedData?.maxPrice} borderRadius=\"4px\">\n          {priceDirect ? (\n            <Text\n              lineHeight=\"1\"\n              fontSize=\"14px\"\n              color=\"text_caption\"\n              textAlign={{ base: 'right', lg: 'left' }}\n              whiteSpace={{ base: 'wrap', lg: 'nowrap' }}\n            >\n              {`${isNaN(Number(currentPosPoolsRelatedData?.minPrice)) ? currentPosPoolsRelatedData?.minPrice : formatSmallPrice(removeComma(currentPosPoolsRelatedData?.minPrice))} - ${isNaN(Number(currentPosPoolsRelatedData?.maxPrice)) ? currentPosPoolsRelatedData?.maxPrice : formatSmallPrice(removeComma(currentPosPoolsRelatedData?.maxPrice))}`}\n            </Text>\n          ) : (\n            <Text\n              lineHeight=\"1\"\n              fontSize=\"14px\"\n              color=\"text_caption\"\n              textAlign={{ base: 'right', lg: 'left' }}\n              whiteSpace={{ base: 'wrap', lg: 'nowrap' }}\n            >\n              {`${isNaN(Number(currentPosPoolsRelatedData?.minPriceResever)) ? currentPosPoolsRelatedData?.minPriceResever : formatSmallPrice(removeComma(currentPosPoolsRelatedData?.minPriceResever))} - ${isNaN(Number(currentPosPoolsRelatedData?.maxPriceResever)) ? currentPosPoolsRelatedData?.maxPriceResever : formatSmallPrice(removeComma(currentPosPoolsRelatedData?.maxPriceResever))}`}\n            </Text>\n          )}\n        </Skeleton>\n        {!isApp && (\n          <StatusPosition\n            isActive={isActive}\n            isLoading={!isAvailableObject(positionInfo) || !isAvailableObject(posPoolsOriginalData?.[positionInfo?.clmmPool || ''])}\n          />\n        )}\n\n        {isShowIcon && !isApp && (\n          <HStack onClick={e => cancelBubble(e)}>\n            <CetusTooltip\n              placement=\"top\"\n              maxW=\"unset\"\n              tooltip={\n                <HStack flexDirection={{ base: 'column', lg: 'row' }} w={{ base: '100%', lg: 'unset' }}>\n                  <HStack w={{ base: '100%', lg: 'unset' }} justify={{ base: 'space-between', lg: 'flex-start' }}>\n                    <Text fontSize={{ base: '14px', lg: '12px' }}>ID</Text>\n                    <Skeleton isLoaded={!!tokenName}>\n                      <Text whiteSpace=\"nowrap\" fontWeight=\"500\" fontSize={{ base: '14px', lg: '12px' }} color=\"text_caption\">\n                        {tokenName?.split('|')[1]}\n                      </Text>\n                    </Skeleton>\n                  </HStack>\n                  <HStack w={{ base: '100%', lg: 'unset' }} justify={{ base: 'space-between', lg: 'flex-start' }}>\n                    <Text fontSize={{ base: '14px', lg: '12px' }} ml={{ base: '0', lg: '8px' }}>\n                      Address\n                    </Text>\n                    <AddressCopyLink\n                      fontWeight=\"500\"\n                      color=\"text_caption\"\n                      address={positionInfo?.id}\n                      showLink={false}\n                      fontSize={{ base: '14px', lg: '12px' }}\n                      onClickLink={() => {\n                        window.open(getExplorerUrl(positionInfo?.id, 'nftAddress'), '_blank')\n                      }}\n                    />\n                  </HStack>\n                </HStack>\n              }\n            >\n              <Center border=\"1px solid\" borderColor=\"border\" borderRadius=\"50%\">\n                <Icon xlinkHref=\"#icon-icon_info\" width=\"16px\" height=\"16px\" />\n              </Center>\n            </CetusTooltip>\n          </HStack>\n        )}\n      </HStack>\n      <HStack>\n        {isApp && (\n          <StatusPosition\n            isActive={isActive}\n            isLoading={!isAvailableObject(positionInfo) || !isAvailableObject(posPoolsOriginalData?.[positionInfo?.clmmPool || ''])}\n          />\n        )}\n        <PositionPriceBar minPrice={minPrice} maxPrice={maxPrice} currPrice={currPrice} isActive={isActive} priceDirect={priceDirect} />\n      </HStack>\n    </VStack>\n  )\n}\n\nexport default PositionPriceRange\n","import { FarmingImage } from '@/components/common/FarmingIcon'\nimport { MiningImage } from '@/components/common/MiningIcon'\nimport HiddenDotted from '@/components/profile/HiddenDotted'\nimport useClaimPosition from '@/hooks/position/useClaimPosition'\nimport useGetClmmPositionDailyEarning from '@/hooks/position/useGetClmmPositionDailyEarning'\nimport usePosHelper from '@/hooks/position/usePosHelper'\nimport usePositionStore from '@/store/position'\nimport usePositionDetailStore from '@/store/position/detail'\nimport { PosBaseInfo, showNewVersionApr } from '@/types'\nimport { AddressCopyLink, Block, CetusTooltip, TooltipIcon } from '@cetus/design'\nimport { useInterval } from '@cetus/hooks'\nimport useExplorer from '@cetus/hooks/src/useExplorer'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { Icon } from '@cetus/ui-kit'\nimport { cancelBubble, d } from '@cetus/utils'\nimport { Box, Button, HStack, Skeleton, Text, VStack } from '@chakra-ui/react'\nimport { useDebounceEffect } from 'ahooks'\nimport { useMemo, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport DailyEarnBlock from '../../list/DailyEarnBlock'\nimport PendingYieldBlock from '../../list/PendingYieldBlock'\nimport LiquidityValueBlock from './LiquidityValueBlock'\nimport PendingFeesBlock from './PendingFeesBlock'\nimport PendingRewardsBlock from './PendingRewardsBlock'\nimport PositionPriceRange from './PositionPriceRange'\n\nfunction CLMMPositionItemContent({\n  positionInfo,\n  positionItemWidth = [],\n  priceDirect,\n  showMiningIcon,\n  showFarmingIcon\n}: {\n  positionInfo: PosBaseInfo\n  positionItemWidth?: string[]\n  priceDirect?: boolean\n  showMiningIcon?: boolean\n  showFarmingIcon?: boolean\n}) {\n  const { isApp } = useWindowWidth()\n  const { getExplorerUrl } = useExplorer()\n  const { getClmmPosName } = usePosHelper()\n  const navigate = useNavigate()\n  const { setCurrentPosDetailTab } = usePositionDetailStore()\n  const {\n    setPosAprMap,\n    posPoolsOriginalData,\n    posPoolsRelatedData,\n    posApiPoolData,\n    poolRangeObj,\n    posLiquidityData,\n    posRewardsData,\n    posFeeData,\n    farmsPosRewardsData\n  } = usePositionStore()\n\n  const currentPosPoolsRelatedData = posPoolsRelatedData[positionInfo?.posId]\n  const posPoolInfo = posApiPoolData[positionInfo?.clmmPool]\n\n  const tokenName = useMemo(() => {\n    if (positionInfo?.tokenName) {\n      return positionInfo?.tokenName\n    } else {\n      const position_index = posPoolsOriginalData?.[positionInfo?.clmmPool]?.index\n      return getClmmPosName(Number(positionInfo?.index), position_index)\n    }\n  }, [positionInfo?.tokenName, positionInfo?.index, positionInfo?.clmmPool, posPoolsOriginalData])\n\n  const clickDetail = (posTab?: 'remove' | 'increase') => {\n    console.log('🚀 ~ PoolItem ~ poolInfo:', positionInfo)\n    if (posTab) {\n      setCurrentPosDetailTab(posTab)\n      navigate(`/position-detail/${positionInfo?.id}/${posTab}`)\n    } else {\n      navigate(`/position-detail/${positionInfo?.id}`)\n    }\n  }\n\n  const [isShowAction, setIsShowAction] = useState(false)\n\n  const { getTokenAmountValue } = useTokenPrice()\n  const currentPosLiquidity = posLiquidityData[positionInfo?.posId as string]\n  const amountValueA = getTokenAmountValue(positionInfo?.displayTokenA?.coin_type, currentPosLiquidity?.displayCoinAmountA)\n  const amountValueB = getTokenAmountValue(positionInfo?.displayTokenB?.coin_type, currentPosLiquidity?.displayCoinAmountB)\n  const currentPosTvl = useMemo(() => {\n    return d(amountValueA).plus(amountValueB).toString()\n  }, [amountValueA, amountValueB])\n\n  // const { getPositionApr } = usePositionApr()\n  // const positionApr = useMemo(() => {\n  //   if (isAvailableObject(currentPosPoolsRelatedData) && isAvailableObject(posPoolInfo) && isAvailableObject(poolRangeObj)) {\n  //     const currentRangeObj = poolRangeObj[positionInfo?.clmmPool]\n  //     if (currentRangeObj) {\n  //       const ranges = currentRangeObj?.ranges.reduce((acc: any, item: any) => {\n  //         acc[item.dateType] = item\n  //         return acc\n  //       }, {})\n  //       if (positionInfo?.posType !== 'farms') {\n  //         return getPositionApr(posPoolInfo, currentPosPoolsRelatedData, 'month', ranges['month'])\n  //       }\n  //       return getPositionApr(posPoolInfo, currentPosPoolsRelatedData, 'month', ranges['month'], true, currentPosTvl)\n  //     }\n  //   }\n  // }, [currentPosPoolsRelatedData, posPoolInfo, positionInfo, poolRangeObj, currentPosTvl])\n  // console.log('🚀🚀🚀 ~ PositionItemContent.tsx:91 ~ positionApr ~ positionApr:', positionApr)\n\n  const { toClaimPosition, isClaimLoading } = useClaimPosition()\n  const toClaim = () => {\n    toClaimPosition(positionInfo, null, true)\n  }\n\n  const [fees, setFees] = useState(null)\n  const [rewards, setRewards] = useState(null)\n  const { getPosIsActive } = usePosHelper()\n  // // const isActive = currentPosPoolsRelatedData?.currentStatus == 'Active'\n  const isActive = useMemo(() => {\n    return getPosIsActive(positionInfo as PosBaseInfo, posPoolsOriginalData?.[positionInfo?.clmmPool || '']?.current_sqrt_price)\n  }, [positionInfo, posPoolsOriginalData])\n\n  const currentPosData = posFeeData[positionInfo?.id] || posFeeData[positionInfo?.posId]\n  const currentPosRewardData = posRewardsData[positionInfo?.id] || posRewardsData[positionInfo?.posId]\n  const currentPosFarmsData = farmsPosRewardsData[positionInfo?.id]\n\n  const claimBtnDisabled = useMemo(() => {\n    // console.log('🚀 ~  rewards, fees:', {\n    //   isClaimLoading,\n    //   showMiningIcon,\n    //   showFarmingIcon,\n    //   clmmPool: positionInfo?.clmmPool,\n    //   fees,\n    //   rewards,\n    //   id: positionInfo,\n    //   currentPosRewardData,\n    //   posRewardsData,\n    //   farmsPosRewardsData\n    // })\n    return (\n      isClaimLoading ||\n      ((!currentPosData || (d(currentPosData?.feeOwedA).eq(0) && d(currentPosData?.feeOwedB).eq(0))) &&\n        (!currentPosFarmsData || currentPosFarmsData?.every(item => d(item?.display_amount_owed).eq(0))) &&\n        (!currentPosRewardData ||\n          currentPosRewardData?.every(item => d(item?.display_amount_owed).eq(0)) ||\n          ((fees == '$0' || !fees) && (rewards == '$0' || !rewards || (!showMiningIcon && !showFarmingIcon)))))\n    )\n  }, [isClaimLoading, fees, rewards, showMiningIcon, showFarmingIcon, currentPosRewardData])\n\n  const { getClmmPositionDailyEarning } = useGetClmmPositionDailyEarning()\n\n  const [positionApr, setPositionApr] = useState<any>(null)\n  const [aprLoading, setAprLoading] = useState<boolean>(true)\n  const [dailyEarnUSD, setDailyEarnUSD] = useState<any>(null)\n  const [dailyEarnOriginResult, setDailyEarnOriginResult] = useState<any>(null)\n\n  const handleGetPositionApr = async () => {\n    try {\n      const res = await getClmmPositionDailyEarning(positionInfo?.posId, currentPosTvl)\n      if (res) {\n        const { aprDisplay, dailyEarnUSDDisplay, originResult } = res\n\n        setPositionApr(aprDisplay)\n        setPosAprMap({ [positionInfo?.posId]: isActive ? aprDisplay : '0%' })\n        setDailyEarnUSD(dailyEarnUSDDisplay)\n        setDailyEarnOriginResult(originResult)\n      } else {\n        setPositionApr('--')\n        setDailyEarnUSD('--')\n      }\n      setAprLoading(false)\n    } catch (error) {\n      setAprLoading(false)\n    } finally {\n      setAprLoading(false)\n    }\n  }\n\n  useDebounceEffect(\n    () => {\n      if (positionInfo?.posId) {\n        if (currentPosTvl && d(currentPosTvl).gt(0)) {\n          handleGetPositionApr()\n        } else {\n          setPositionApr('--')\n          setDailyEarnUSD('--')\n          setAprLoading(false)\n        }\n      }\n    },\n    [positionInfo?.posId],\n    {\n      wait: 1000\n    }\n  )\n\n  useInterval({\n    interval: 60 * 1000,\n    callback: () => {\n      if (positionApr !== null) {\n        handleGetPositionApr()\n      }\n    }\n  })\n\n  return (\n    <Block\n      onMouseEnter={() => {\n        setTimeout(() => {\n          setIsShowAction(true)\n        }, 40)\n      }}\n      onMouseLeave={() => {\n        setTimeout(() => {\n          setIsShowAction(false)\n        }, 80)\n      }}\n      w=\"100%\"\n      bg=\"position_bg\"\n      border=\"none\"\n      p={{ base: '16px 8px 12px', lg: '20px 16px ' }}\n      borderRadius=\"16px\"\n      onClick={(e: any) => {\n        cancelBubble(e)\n        clickDetail()\n      }}\n      cursor=\"pointer\"\n    >\n      <HStack w=\"100%\" justify=\"space-between\" flexDirection={{ base: 'column', lg: 'row' }}>\n        <VStack w=\"100%\" align=\"flex-start\" gap=\"14px\">\n          {isApp && (\n            <HStack flexDirection={{ base: 'column', lg: 'row' }} w={{ base: '100%', lg: 'unset' }} gap=\"12px\">\n              <HStack w={{ base: '100%', lg: 'unset' }} justify={{ base: 'space-between', lg: 'flex-start' }}>\n                <Text color=\"primary_gray\" fontSize={{ base: '14px', lg: '12px' }}>\n                  NFT ID\n                </Text>\n                <Skeleton isLoaded={!!tokenName}>\n                  <Text fontWeight=\"500\" fontSize={{ base: '14px', lg: '12px' }} color=\"text_caption\">\n                    {tokenName?.split('|')[1]}\n                  </Text>\n                </Skeleton>\n              </HStack>\n              <HStack w={{ base: '100%', lg: 'unset' }} justify={{ base: 'space-between', lg: 'flex-start' }}>\n                <Text color=\"primary_gray\" fontSize={{ base: '14px', lg: '12px' }} ml={{ base: '0', lg: '8px' }}>\n                  Address\n                </Text>\n                <Box h=\"14px\">\n                  <AddressCopyLink\n                    fontWeight=\"500\"\n                    color=\"text_caption\"\n                    address={positionInfo?.id}\n                    showLink={false}\n                    fontSize={{ base: '14px', lg: '12px' }}\n                    onClickLink={() => {\n                      window.open(getExplorerUrl(positionInfo?.id, 'nftAddress'), '_blank')\n                    }}\n                  />\n                </Box>\n              </HStack>\n            </HStack>\n          )}\n          <HStack w=\"100%\" justify=\"space-between\" flexDirection={{ base: 'column', lg: 'row' }} gap={{ base: '14px', lg: '8px' }}>\n            <HStack\n              minW={{ base: 'unset', lg: positionItemWidth[0] }}\n              w={{ base: '100%', lg: positionItemWidth[0] }}\n              justify={{ base: 'space-between', lg: 'flex-end' }}\n            >\n              {isApp && (\n                <Text color=\"primary_gray\" whiteSpace=\"nowrap\">\n                  Price Range\n                </Text>\n              )}\n              <PositionPriceRange positionInfo={positionInfo} tokenName={tokenName} priceDirect={priceDirect} isShowIcon={isShowAction} />\n            </HStack>\n            {\n              <HStack w={{ base: '100%', lg: positionItemWidth[1] }} justify={{ base: 'space-between', lg: 'flex-end' }}>\n                {isApp && showNewVersionApr && (\n                  <HStack gap=\"2px\">\n                    <Text color=\"primary_gray\">APR</Text>\n                    <Box h=\"14px\" mt=\"-6px\">\n                      <TooltipIcon\n                        tooltipCon={\n                          <span>\n                            APR based on the past 24h historical trade fees and emissions. Only positions in range earn yield. Past performance is not\n                            indicative of future results. <br />\n                            Calculations are an estimate and only for reference.\n                          </span>\n                        }\n                      />\n                    </Box>\n                  </HStack>\n                )}\n                {showNewVersionApr && (\n                  <Skeleton isLoaded={!aprLoading} h=\"14px\">\n                    <Text color=\"text_caption\">{isActive ? positionApr : '0%'}</Text>\n                  </Skeleton>\n                )}\n              </HStack>\n            }\n            <HStack m=\"-12px 0\" w={{ base: '100%', lg: positionItemWidth[2] }} justify={{ base: 'space-between', lg: 'flex-end' }}>\n              {isApp && <Text color=\"primary_gray\">Liquidity</Text>}\n              <HiddenDotted>\n                <LiquidityValueBlock positionInfo={positionInfo} fontSize=\"14px\" isPosList />\n              </HiddenDotted>\n            </HStack>\n\n            {showNewVersionApr && (\n              <HStack w={{ base: '100%', lg: positionItemWidth[3] }} justify={{ base: 'space-between', lg: 'flex-end' }}>\n                {isApp && <Text color=\"primary_gray\">Claimable Yield</Text>}\n                <PendingYieldBlock positionInfo={positionInfo} hasRewards={showMiningIcon || showFarmingIcon || false} />\n              </HStack>\n            )}\n            {showNewVersionApr && (\n              <HStack w={{ base: '100%', lg: positionItemWidth[4] }} justify={{ base: 'space-between', lg: 'flex-end' }}>\n                {isApp && <Text color=\"primary_gray\">Est. Daily Yield</Text>}\n                <Skeleton isLoaded={!aprLoading} h=\"14px\">\n                  <DailyEarnBlock\n                    positionInfo={positionInfo}\n                    dailyEarnUSD={isActive ? dailyEarnUSD : '$0'}\n                    dailyEarnOriginResult={isActive ? dailyEarnOriginResult : null}\n                    hasRewards={showMiningIcon || showFarmingIcon || false}\n                  />\n                </Skeleton>\n              </HStack>\n            )}\n            {!showNewVersionApr && (\n              <HStack m=\"-12px 0\" w={{ base: '100%', lg: positionItemWidth[3] }} justify={{ base: 'space-between', lg: 'flex-end' }}>\n                {isApp && <Text color=\"primary_gray\">Pending Fees</Text>}\n                <HiddenDotted>\n                  <PendingFeesBlock positionInfo={positionInfo} onFeesChange={setFees} />\n                </HiddenDotted>\n              </HStack>\n            )}\n\n            {!showNewVersionApr && (showMiningIcon || showFarmingIcon) && (\n              <HStack m=\"-12px 0\" w={{ base: '100%', lg: positionItemWidth[4] }} justify={{ base: 'space-between', lg: 'flex-end' }}>\n                {isApp && <Text color=\"primary_gray\">Pending Rewards</Text>}\n                <HStack gap={{ base: '8px', lg: '12px' }}>\n                  {isApp && showMiningIcon && <MiningImage />}\n                  {isApp && showFarmingIcon && <FarmingImage />}\n                  <HiddenDotted>\n                    <PendingRewardsBlock positionInfo={positionInfo} onRewardsChange={setRewards} />\n                  </HiddenDotted>\n                </HStack>\n              </HStack>\n            )}\n            <HStack\n              w={{ base: '100%', lg: positionItemWidth[5] }}\n              justify={{ base: 'space-between', lg: 'flex-start' }}\n              flexDir={{ base: 'row', lg: 'row-reverse' }}\n            >\n              {positionInfo?.posType !== 'burn' && (\n                <Box w={{ base: 'calc((100vw - 32px )/ 2)', lg: '32px' }} sx={{ button: { w: '100%' } }}>\n                  <CetusTooltip\n                    placement=\"top\"\n                    tooltip={\n                      <Text fontSize=\"12px\" lineHeight=\"20px\" color=\"text_caption\">\n                        Add\n                      </Text>\n                    }\n                    showTooltip={!isApp}\n                  >\n                    <Button\n                      variant=\"outline\"\n                      fontSize=\"12px\"\n                      bg=\"primary_opacity.10\"\n                      h=\"32px\"\n                      borderRadius=\"8px\"\n                      onClick={(e: any) => {\n                        cancelBubble(e)\n                        clickDetail('increase')\n                      }}\n                    >\n                      {!isApp && <Icon xlinkHref=\"#icon-a-icon_add1\" svgFill=\"primary\" svgHover=\"primary\" fontSize=\"14px\" />}\n                      {isApp && (\n                        <Text color=\"primary\" fontSize=\"12px\">\n                          Increase\n                        </Text>\n                      )}\n                    </Button>\n                  </CetusTooltip>\n                </Box>\n              )}\n              {positionInfo?.posType !== 'burn' && (\n                <Box w={{ base: 'calc((100vw - 32px )/ 2)', lg: '32px' }} sx={{ button: { w: '100%' } }}>\n                  <CetusTooltip\n                    placement=\"top\"\n                    tooltip={\n                      <Text fontSize=\"12px\" lineHeight=\"20px\" color=\"text_caption\">\n                        Remove\n                      </Text>\n                    }\n                    showTooltip={!isApp}\n                  >\n                    <Button\n                      variant=\"outline\"\n                      fontSize=\"12px\"\n                      bg=\"primary_opacity.10\"\n                      h=\"32px\"\n                      borderRadius=\"8px\"\n                      onClick={(e: any) => {\n                        cancelBubble(e)\n                        clickDetail('remove')\n                      }}\n                    >\n                      {!isApp && <Icon xlinkHref=\"#icon-tx_remove\" svgFill=\"text_paragraph\" svgHover=\"text_paragraph\" fontSize=\"14px\" />}\n                      {isApp && (\n                        <Text color=\"primary\" fontSize=\"12px\">\n                          Remove\n                        </Text>\n                      )}\n                    </Button>\n                  </CetusTooltip>\n                </Box>\n              )}\n              {/* <Button\n                variant=\"outline\"\n                fontSize=\"12px\"\n                bg=\"primary_opacity.10\"\n                h=\"32px\"\n                w={{ base: positionInfo?.posType !== 'burn' ? 'calc((100vw - 32px )/ 3)' : '100%', lg: '110px' }}\n                borderRadius=\"8px\"\n                onClick={e => {\n                  cancelBubble(e)\n                  toClaim()\n                }}\n                isLoading={isClaimLoading}\n                isDisabled={claimBtnDisabled}\n              >\n                {!isApp && (\n                  <Icon\n                    xlinkHref=\"#icon-icon_claim\"\n                    svgFill={claimBtnDisabled ? 'primary_gray' : 'primary'}\n                    svgHover={claimBtnDisabled ? 'primary_gray' : 'primary'}\n                  />\n                )}\n                Claim Yield\n              </Button> */}\n            </HStack>\n          </HStack>\n          {/* \n          {isApp && (\n            <Button\n              w={{ base: '100%', lg: '32px' }}\n              h={{ base: '32px', lg: '90px' }}\n              borderRadius=\"8px\"\n              variant=\"ghost\"\n              p=\"0 !important\"\n              _hover={{\n                svg: {\n                  fill: 'text_caption'\n                }\n              }}\n            >\n              <Text color=\"primary_gray\">Manage</Text>\n              <Icon xlinkHref=\"#icon-icon_list_token\" w=\"14px\" h=\"14px\" />\n            </Button>\n          )} */}\n        </VStack>\n      </HStack>\n    </Block>\n  )\n}\n\nexport default CLMMPositionItemContent\n","import useDlmmPositionStore from '@/store/dlmm-position'\nimport { DlmmPosBaseInfo } from '@/types/dlmm'\nimport { AddressCopyLink, CetusTooltip } from '@cetus/design'\nimport useExplorer from '@cetus/hooks/src/useExplorer'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { Icon } from '@cetus/ui-kit'\nimport { cancelBubble, d, formatSmallPrice, removeComma } from '@cetus/utils'\nimport { Box, Center, HStack, Skeleton, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useMemo, useRef, useState } from 'react'\nimport StatusPosition from '../../common/StatusPosition'\n\nfunction DLMMPositionPriceRange({\n  positionInfo,\n  tokenName,\n  priceDirect,\n  isShowIcon\n}: {\n  positionInfo: DlmmPosBaseInfo\n  tokenName: string | undefined\n  priceDirect?: boolean\n  isShowIcon?: boolean\n}) {\n  const { dlmmPosPoolsRelatedData } = useDlmmPositionStore()\n  const currentPosPoolsRelatedData = dlmmPosPoolsRelatedData[positionInfo?.id]\n  const isActive = currentPosPoolsRelatedData?.currentStatus == 'Active'\n  const { isApp } = useWindowWidth()\n\n  const minPrice = useMemo(() => {\n    return removeComma(priceDirect ? (currentPosPoolsRelatedData?.minPrice ?? '0') : (currentPosPoolsRelatedData?.minPriceResever ?? '0'))\n  }, [currentPosPoolsRelatedData, priceDirect])\n\n  const maxPrice = useMemo(() => {\n    return removeComma(priceDirect ? (currentPosPoolsRelatedData?.maxPrice ?? '0') : (currentPosPoolsRelatedData?.maxPriceResever ?? '0'))\n  }, [currentPosPoolsRelatedData, priceDirect])\n\n  const currPrice = useMemo(() => {\n    return removeComma(priceDirect ? (currentPosPoolsRelatedData?.currentPrice ?? '0') : (currentPosPoolsRelatedData?.currentPriceReverse ?? '0'))\n  }, [currentPosPoolsRelatedData, priceDirect])\n\n  const [elementWidth, setElementWidth] = useState<number>(0)\n  const elementRef = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    const updateWidths = () => {\n      if (elementRef.current) setElementWidth(elementRef.current.offsetWidth)\n    }\n    const resizeObserver = new ResizeObserver(updateWidths)\n    if (elementRef.current) resizeObserver.observe(elementRef.current)\n    return () => {\n      if (elementRef.current) resizeObserver.unobserve(elementRef.current)\n    }\n  }, [minPrice, maxPrice, currPrice])\n\n  const sliderML = useMemo(() => {\n    if (maxPrice === '∞') return '0px'\n    if (currPrice && minPrice && maxPrice && elementWidth !== undefined) {\n      if (d(currPrice).lt(maxPrice) && d(currPrice).gt(minPrice)) {\n        const relativePosition = d(currPrice)\n          .sub(minPrice)\n          .div(d(maxPrice).sub(d(minPrice)))\n          .toString()\n\n        return `${d(relativePosition).mul(100).toFixed(2)}%`\n      }\n      if (d(minPrice).eq(maxPrice) && d(minPrice).eq(currPrice)) {\n        return '50%'\n      }\n      if (d(currPrice).lt(minPrice)) {\n        return '-6px'\n      }\n      if (d(currPrice).gt(maxPrice)) {\n        return 'calc(100% + 6px)'\n      }\n      if (d(currPrice).eq(minPrice) && d(currPrice).lt(maxPrice)) {\n        return '0px'\n      }\n      if (d(currPrice).eq(maxPrice) && d(currPrice).gt(minPrice)) {\n        return 'calc(100% - 1px)'\n      }\n    }\n    return '0px'\n  }, [currPrice, minPrice, maxPrice, elementWidth, currentPosPoolsRelatedData])\n\n  const { getExplorerUrl } = useExplorer()\n\n  const onlyOneBin = useMemo(() => {\n    return minPrice === maxPrice\n  }, [minPrice, maxPrice])\n  return (\n    <VStack align={{ base: 'flex-end', lg: 'flex-start' }} gap={{ base: '4px', lg: '8px' }} w=\"100%\" maxW=\"100%\">\n      <HStack\n        justify={{ base: 'flex-end', lg: 'flex-start' }}\n        maxW=\"100%\"\n        w={{ base: '100%', lg: 'unset' }}\n        borderRadius=\"12px\"\n        pr={{ base: '0', lg: '16px' }}\n        flexWrap=\"nowrap\"\n      >\n        <Skeleton isLoaded={!!currentPosPoolsRelatedData?.minPrice && !!currentPosPoolsRelatedData?.maxPrice} borderRadius=\"4px\">\n          {priceDirect ? (\n            <Text lineHeight=\"1\" fontSize=\"14px\" color=\"text_caption\" textAlign=\"right\" whiteSpace={{ base: 'wrap', lg: 'nowrap' }}>\n              {onlyOneBin\n                ? `${isNaN(Number(currentPosPoolsRelatedData?.minPrice)) ? currentPosPoolsRelatedData?.minPrice : formatSmallPrice(removeComma(currentPosPoolsRelatedData?.minPrice))}`\n                : `${isNaN(Number(currentPosPoolsRelatedData?.minPrice)) ? currentPosPoolsRelatedData?.minPrice : formatSmallPrice(removeComma(currentPosPoolsRelatedData?.minPrice))} - ${isNaN(Number(currentPosPoolsRelatedData?.maxPrice)) ? currentPosPoolsRelatedData?.maxPrice : formatSmallPrice(removeComma(currentPosPoolsRelatedData?.maxPrice))}`}\n            </Text>\n          ) : (\n            <Text lineHeight=\"1\" fontSize=\"14px\" color=\"text_caption\" textAlign=\"right\" whiteSpace={{ base: 'wrap', lg: 'nowrap' }}>\n              {onlyOneBin\n                ? `${isNaN(Number(currentPosPoolsRelatedData?.minPriceResever)) ? currentPosPoolsRelatedData?.minPriceResever : formatSmallPrice(removeComma(currentPosPoolsRelatedData?.minPriceResever))}`\n                : `${isNaN(Number(currentPosPoolsRelatedData?.minPriceResever)) ? currentPosPoolsRelatedData?.minPriceResever : formatSmallPrice(removeComma(currentPosPoolsRelatedData?.minPriceResever))} - ${isNaN(Number(currentPosPoolsRelatedData?.maxPriceResever)) ? currentPosPoolsRelatedData?.maxPriceResever : formatSmallPrice(removeComma(currentPosPoolsRelatedData?.maxPriceResever))}`}\n            </Text>\n          )}\n        </Skeleton>\n        {!isApp && <StatusPosition isActive={isActive} isLoading={currentPosPoolsRelatedData?.currentStatus == ''} />}\n\n        {isShowIcon && !isApp && (\n          <HStack onClick={e => cancelBubble(e)}>\n            <CetusTooltip\n              placement=\"top\"\n              maxW=\"400px\"\n              tooltip={\n                <HStack flexDirection={{ base: 'column', lg: 'row' }} w={{ base: '100%', lg: 'unset' }}>\n                  <HStack w={{ base: '100%', lg: 'unset' }} justify={{ base: 'space-between', lg: 'flex-start' }}>\n                    <Text fontSize={{ base: '14px', lg: '12px' }}>ID</Text>\n                    <Skeleton isLoaded={!!tokenName}>\n                      <Text fontWeight=\"500\" fontSize={{ base: '14px', lg: '12px' }} color=\"text_caption\">\n                        {tokenName}\n                      </Text>\n                    </Skeleton>\n                  </HStack>\n                  <HStack w={{ base: '100%', lg: 'unset' }} justify={{ base: 'space-between', lg: 'flex-start' }}>\n                    <Text fontSize={{ base: '14px', lg: '12px' }} ml={{ base: '0', lg: '8px' }}>\n                      Address\n                    </Text>\n                    <AddressCopyLink\n                      fontWeight=\"500\"\n                      color=\"text_caption\"\n                      address={positionInfo?.id}\n                      showLink={false}\n                      fontSize={{ base: '14px', lg: '12px' }}\n                      onClickLink={() => {\n                        window.open(getExplorerUrl(positionInfo?.id, 'nftAddress'), '_blank')\n                      }}\n                    />\n                  </HStack>\n                </HStack>\n              }\n            >\n              <Center border=\"1px solid\" borderColor=\"border\" borderRadius=\"50%\">\n                <Icon xlinkHref=\"#icon-icon_info\" width=\"16px\" height=\"16px\" />\n              </Center>\n            </CetusTooltip>\n          </HStack>\n        )}\n      </HStack>\n      <HStack>\n        {isApp && <StatusPosition isActive={isActive} isLoading={currentPosPoolsRelatedData?.currentStatus == ''} />}\n        <Skeleton h=\"6px\" isLoaded={!!currentPosPoolsRelatedData?.currentPrice} borderRadius=\"4px\">\n          <Box w=\"88px\" h=\"6px\" bgImage={maxPrice === '∞' ? 'none' : \"url('/images/img_inactive_bg@2x.png')\"} bgSize=\"88px 6px\">\n            <Box\n              w={maxPrice === '∞' ? '88px' : '56px'}\n              h={maxPrice === '∞' ? '2px' : '6px'}\n              position=\"relative\"\n              ref={elementRef}\n              background={\n                maxPrice === '∞' ? 'linear-gradient(135deg, #68FFD8 0%, #0091FF 100%)' : isActive ? \"url('/images/img_range@2x.png')\" : 'none'\n              }\n              ml={maxPrice === '∞' ? '0px' : '16px'}\n              bgSize=\"100% 6px\"\n              bgPosition=\"center\"\n              bgRepeat=\"no-repeat\"\n            >\n              {maxPrice !== '∞' && (\n                <Box\n                  w=\"2px\"\n                  h=\"8px\"\n                  bg=\"#fff\"\n                  borderRadius=\"8px\"\n                  position=\"absolute\"\n                  top=\"50%\"\n                  left={sliderML}\n                  transform=\"translateY(-50%)\"\n                  zIndex=\"5\"\n                />\n              )}\n            </Box>\n          </Box>\n        </Skeleton>\n      </HStack>\n    </VStack>\n  )\n}\n\nexport default DLMMPositionPriceRange\n","import BurnLockIcon from '@/components/common/BurnLockIcon'\nimport useDlmmPositionStore from '@/store/dlmm-position'\nimport { DlmmPosBaseInfo } from '@/types/dlmm'\nimport SingleTokenInfo from '@cetus/design/src/components/common/SingleTokenInfo'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { cancelBubble, d, formatCurrency, formatNumberWithDown } from '@cetus/utils'\nimport {\n  Box,\n  Center,\n  HStack,\n  HTMLChakraProps,\n  Popover,\n  PopoverBody,\n  PopoverContent,\n  PopoverTrigger,\n  Portal,\n  Skeleton,\n  Text,\n  VStack\n} from '@chakra-ui/react'\nimport { useMemo } from 'react'\ninterface LiquidityValueBlockProps extends HTMLChakraProps<'div'> {\n  positionInfo: DlmmPosBaseInfo\n  haveTooltip?: boolean\n  isPosList?: boolean\n}\nconst DLMMLiquidityValueBlock = ({ positionInfo, haveTooltip = true, isPosList = false, ...rest }: LiquidityValueBlockProps) => {\n  const { getTokenAmountValue } = useTokenPrice()\n\n  const { dlmmPosLiquidityData } = useDlmmPositionStore()\n  const currentPosData = dlmmPosLiquidityData[positionInfo?.id]\n\n  const amountValueA = getTokenAmountValue(positionInfo?.displayTokenA?.coin_type, currentPosData?.displayCoinAmountA, '--')\n\n  const amountValueB = getTokenAmountValue(positionInfo?.displayTokenB?.coin_type, currentPosData?.displayCoinAmountB, '--')\n  const amountValue = useMemo(() => {\n    if (amountValueA !== '--' && amountValueB !== '--') {\n      return formatCurrency(d(amountValueA).plus(amountValueB).toString(), 2)\n    }\n    return '$--'\n  }, [amountValueA, amountValueB])\n\n  const { isApp } = useWindowWidth()\n  return (\n    <HStack gap=\"4px\">\n      {positionInfo?.posType == 'burn' && <BurnLockIcon />}\n      <Box p=\"12px 0\" onClick={e => cancelBubble(e)}>\n        <Popover isLazy trigger={isApp ? 'click' : 'hover'} placement=\"top-start\">\n          <PopoverTrigger>\n            <Center as=\"button\" cursor={!haveTooltip ? 'text' : 'help'}>\n              <Skeleton isLoaded={!!amountValue && !!dlmmPosLiquidityData}>\n                <Text\n                  color=\"text_caption\"\n                  fontSize=\"16px\"\n                  textDecoration={isPosList || !haveTooltip ? 'none' : 'underline dotted'}\n                  textUnderlineOffset=\"3px\"\n                  {...rest}\n                >\n                  {amountValue}\n                </Text>\n              </Skeleton>\n            </Center>\n          </PopoverTrigger>\n          {haveTooltip && (\n            <Portal>\n              <PopoverContent zIndex=\"2\" minW=\"unset\" w=\"unset\" p=\"4px \">\n                <PopoverBody borderRadius=\"12px\" p=\"8px\">\n                  <VStack align=\"flex-start\" minW=\"200px\">\n                    <HStack\n                      w=\"100%\"\n                      justify=\"space-between\"\n                      borderBottom=\"1px solid\"\n                      borderColor=\"border\"\n                      pb=\"8px\"\n                      sx={{\n                        _last: {\n                          borderBottom: 'none',\n                          pb: '0px'\n                        }\n                      }}\n                    >\n                      <SingleTokenInfo\n                        token={positionInfo?.displayTokenA}\n                        imgBoxStyle={{ w: '20px', h: '20px' }}\n                        haveName={false}\n                        symbolFontSize=\"12px\"\n                        warningIcon={{ iconW: '10px', iconH: '10px' }}\n                      />\n                      <VStack align=\"flex-end\" gap=\"4px\">\n                        <Text fontSize=\"12px\" color=\"text_caption\">\n                          {formatNumberWithDown(currentPosData?.displayCoinAmountA)}\n                        </Text>\n                        <Text fontSize=\"12px\">{formatCurrency(amountValueA, 2)}</Text>\n                      </VStack>\n                    </HStack>\n                    <HStack w=\"100%\" justify=\"space-between\">\n                      <SingleTokenInfo\n                        token={positionInfo?.displayTokenB}\n                        imgBoxStyle={{ w: '20px', h: '20px' }}\n                        haveName={false}\n                        symbolFontSize=\"12px\"\n                        warningIcon={{ iconW: '10px', iconH: '10px' }}\n                      />\n                      <VStack align=\"flex-end\" gap=\"4px\">\n                        <Text fontSize=\"12px\" color=\"text_caption\">\n                          {formatNumberWithDown(currentPosData?.displayCoinAmountB)}\n                        </Text>\n                        <Text fontSize=\"12px\">{formatCurrency(amountValueB, 2)}</Text>\n                      </VStack>\n                    </HStack>\n                  </VStack>\n                </PopoverBody>\n              </PopoverContent>\n            </Portal>\n          )}\n        </Popover>\n      </Box>\n    </HStack>\n  )\n}\n\nexport default DLMMLiquidityValueBlock\n","import { FarmingImage } from '@/components/common/FarmingIcon'\nimport { MiningImage } from '@/components/common/MiningIcon'\nimport HiddenDotted from '@/components/profile/HiddenDotted'\nimport useGetDlmmPositionDailyEarning from '@/hooks/position/useGetDlmmPositionDailyEarning'\nimport useDlmmPositionStore from '@/store/dlmm-position'\nimport useDlmmPosDetailStore from '@/store/dlmm-position/detail'\nimport { showNewVersionApr } from '@/types'\nimport { DlmmPosBaseInfo } from '@/types/dlmm'\nimport { AddressCopyLink, Block, CetusTooltip, TooltipIcon } from '@cetus/design'\nimport useExplorer from '@cetus/hooks/src/useExplorer'\nimport { useInterval } from '@cetus/hooks/src/useInterval'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { Icon } from '@cetus/ui-kit'\nimport { cancelBubble, d } from '@cetus/utils'\nimport { Box, Button, HStack, Skeleton, Text, VStack } from '@chakra-ui/react'\nimport { useDebounceEffect } from 'ahooks'\nimport { useMemo, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport DailyEarnBlock from '../../list/DailyEarnBlock'\nimport PendingYieldBlock from '../../list/PendingYieldBlock'\nimport DLMMPendingFeesBlock from './DLMMPendingFeesBlock'\nimport DLMMPendingRewardsBlock from './DLMMPendingRewardsBlock'\nimport DLMMPositionPriceRange from './DLMMPositionPriceRange'\nimport DLMMLiquidityValueBlock from './LiquidityValueBlock'\n\nfunction DLMMPositionItemContent({\n  positionInfo,\n  positionItemWidth = [],\n  priceDirect,\n  showMiningIcon,\n  showFarmingIcon\n}: {\n  positionInfo: DlmmPosBaseInfo\n  positionItemWidth?: string[]\n  priceDirect?: boolean\n  showMiningIcon?: boolean\n  showFarmingIcon?: boolean\n}) {\n  const { isApp } = useWindowWidth()\n  const { getExplorerUrl } = useExplorer()\n  const navigate = useNavigate()\n  const { setCurrentPosDetailTab } = useDlmmPosDetailStore()\n  const { dlmmPosPoolsRelatedData, dlmmPosPoolsOriginalData, dlmmPosFeeData, dlmmPosRewardsData, dlmmPosLiquidityData, setDlmmAprMap } =\n    useDlmmPositionStore()\n  const currentPosPoolsRelatedData = dlmmPosPoolsRelatedData[positionInfo?.id]\n  const tokenName = useMemo(() => positionInfo?.tokenName, [positionInfo?.tokenName])\n\n  const clickDetail = (posTab?: 'remove' | 'increase') => {\n    console.log('🚀 ~ PoolItem ~ poolInfo:', positionInfo, posTab)\n    if (posTab) {\n      setCurrentPosDetailTab(posTab)\n    } else {\n      setCurrentPosDetailTab('increase')\n    }\n    navigate(`/dlmm-position-detail/${positionInfo?.id}`)\n  }\n\n  const [isShowAction, setIsShowAction] = useState(false)\n\n  const { getTokenAmountValue } = useTokenPrice()\n  const currentPosLiquidity = dlmmPosLiquidityData[positionInfo?.id as string]\n  const amountValueA = getTokenAmountValue(positionInfo?.displayTokenA?.coin_type, currentPosLiquidity?.displayCoinAmountA)\n  const amountValueB = getTokenAmountValue(positionInfo?.displayTokenB?.coin_type, currentPosLiquidity?.displayCoinAmountB)\n  const currentPosTvl = useMemo(() => {\n    return d(amountValueA).plus(amountValueB).toString()\n  }, [amountValueA, amountValueB])\n\n  const { getDlmmPositionDailyEarning } = useGetDlmmPositionDailyEarning()\n\n  const [positionApr, setPositionApr] = useState<any>(null)\n  const [aprLoading, setAprLoading] = useState<boolean>(true)\n  const [dailyEarnUSD, setDailyEarnUSD] = useState<any>(null)\n  const [dailyEarnOriginResult, setDailyEarnOriginResult] = useState<any>(null)\n\n  // const { getPositionApr } = usePositionApr()\n  const isActive = currentPosPoolsRelatedData?.currentStatus === 'Active'\n\n  const handleGetPositionApr = async () => {\n    try {\n      const res = await getDlmmPositionDailyEarning(positionInfo?.id, currentPosTvl)\n      if (res) {\n        const { aprDisplay, dailyEarnUSDDisplay, originResult } = res\n        console.log('🚀🚀🚀 ~ PositionItemContent.tsx:117 ~ handleGetPositionApr ~ originResult:', originResult)\n        setPositionApr(aprDisplay)\n        setDlmmAprMap({ [positionInfo?.id]: isActive ? aprDisplay : '0%' })\n        setDailyEarnUSD(dailyEarnUSDDisplay)\n        setDailyEarnOriginResult(originResult)\n      } else {\n        setPositionApr('--')\n        setDailyEarnUSD('--')\n      }\n      setAprLoading(false)\n    } catch (error) {\n      setAprLoading(false)\n    } finally {\n      setAprLoading(false)\n    }\n  }\n\n  useDebounceEffect(\n    () => {\n      if (positionInfo?.id) {\n        if (currentPosTvl && d(currentPosTvl).gt(0)) {\n          handleGetPositionApr()\n        } else {\n          if (currentPosLiquidity !== undefined) {\n            setPositionApr('--')\n            setDailyEarnUSD('--')\n            setAprLoading(false)\n          }\n        }\n      }\n    },\n    [positionInfo?.id, currentPosTvl],\n    { wait: 1000 }\n  )\n\n  useInterval({\n    interval: 60 * 1000,\n    callback: () => {\n      if (positionApr !== null) {\n        handleGetPositionApr()\n      }\n    }\n  })\n\n  // const { toClaimDlmmPosition, isClaimLoading } = useDlmmPosClaim()\n  // const toClaim = () => {\n  //   toClaimDlmmPosition(positionInfo)\n  // }\n\n  const [fees, setFees] = useState(null)\n  const [rewards, setRewards] = useState(null)\n  // const currentPosData = dlmmPosFeeData[positionInfo?.id]\n  // const currentPosRewardData = dlmmPosRewardsData[positionInfo?.id]\n  // const claimBtnDisabled = useMemo(() => {\n  //   console.log('🚀 ~ dlmm,  rewards, fees:', isClaimLoading, currentPosRewardData, showMiningIcon, showFarmingIcon, fees, rewards, positionInfo?.id)\n  //   return (\n  //     isClaimLoading ||\n  //     ((!currentPosData || (d(currentPosData?.feeOwedA).eq(0) && d(currentPosData?.feeOwedB).eq(0))) &&\n  //       (!currentPosRewardData || currentPosRewardData?.every(item => d(item?.display_amount_owed).eq(0)) || (!showMiningIcon && !showFarmingIcon)))\n  //   )\n  // }, [isClaimLoading, currentPosData, rewards, showMiningIcon, showFarmingIcon, currentPosRewardData])\n\n  return (\n    <Block\n      onMouseEnter={() => {\n        setTimeout(() => {\n          setIsShowAction(true)\n        }, 40)\n      }}\n      onMouseLeave={() => {\n        setTimeout(() => {\n          setIsShowAction(false)\n        }, 80)\n      }}\n      w=\"100%\"\n      bg=\"position_bg\"\n      border=\"none\"\n      p={{ base: '16px 8px 12px', lg: '20px 16px ' }}\n      borderRadius=\"16px\"\n      onClick={() => clickDetail()}\n      cursor=\"pointer\"\n    >\n      <HStack w=\"100%\" justify=\"space-between\" flexDirection={{ base: 'column', lg: 'row' }}>\n        <VStack w=\"100%\" align=\"flex-start\" gap=\"12px\">\n          {isApp && (\n            <HStack flexDirection={{ base: 'column', lg: 'row' }} w={{ base: '100%', lg: 'unset' }}>\n              <HStack w={{ base: '100%', lg: 'unset' }} justify={{ base: 'space-between', lg: 'flex-start' }}>\n                <Text color=\"primary_gray\" fontSize={{ base: '14px', lg: '12px' }}>\n                  NFT ID\n                </Text>\n                <Skeleton isLoaded={!!tokenName}>\n                  <Text fontWeight=\"500\" fontSize={{ base: '14px', lg: '12px' }} color=\"text_caption\">\n                    {tokenName}\n                  </Text>\n                </Skeleton>\n              </HStack>\n              <HStack w={{ base: '100%', lg: 'unset' }} justify={{ base: 'space-between', lg: 'flex-start' }}>\n                <Text color=\"primary_gray\" fontSize={{ base: '14px', lg: '12px' }} ml={{ base: '0', lg: '8px' }}>\n                  Address\n                </Text>\n                <AddressCopyLink\n                  fontWeight=\"500\"\n                  color=\"text_caption\"\n                  address={positionInfo?.id}\n                  showLink={false}\n                  fontSize={{ base: '14px', lg: '12px' }}\n                  onClickLink={() => {\n                    window.open(getExplorerUrl(positionInfo?.id, 'nftAddress'), '_blank')\n                  }}\n                />\n              </HStack>\n            </HStack>\n          )}\n          <HStack w=\"100%\" justify=\"space-between\" flexDirection={{ base: 'column', lg: 'row' }} gap={{ base: '12px', lg: '8px' }}>\n            <HStack w={{ base: '100%', lg: positionItemWidth[0] }} justify={{ base: 'space-between', lg: 'flex-end' }}>\n              {isApp && (\n                <Text color=\"primary_gray\" whiteSpace=\"nowrap\">\n                  Price Range\n                </Text>\n              )}\n              <DLMMPositionPriceRange positionInfo={positionInfo} tokenName={tokenName} priceDirect={priceDirect} isShowIcon={isShowAction} />\n            </HStack>\n            {\n              <HStack w={{ base: '100%', lg: positionItemWidth[1] }} justify={{ base: 'space-between', lg: 'flex-end' }}>\n                {isApp && showNewVersionApr && (\n                  <HStack gap=\"2px\">\n                    <Text color=\"primary_gray\">APR</Text>\n                    <TooltipIcon\n                      tooltipCon={\n                        <span>\n                          APR based on the past 24h historical trade fees and emissions. Only positions in range earn yield. Past performance is not\n                          indicative of future results. <br />\n                          Calculations are an estimate and only for reference.\n                        </span>\n                      }\n                    />\n                  </HStack>\n                )}\n                {/* {showNewVersionApr && (\n                  <PositionAprBlock\n                    poolInfo={posPoolInfo}\n                    isActive={isActive}\n                    showFarmingApr={positionInfo?.posType == 'farms'}\n                    positionApr={positionApr}\n                    farmingAprDisplay={positionApr?.farmingAprDisplay}\n                    totalAprDisplay={positionApr?.displayAprPercentageTotal}\n                  />\n                )} */}\n\n                {showNewVersionApr && (\n                  <Skeleton isLoaded={!aprLoading && currentPosLiquidity !== undefined} h=\"14px\">\n                    <Text color=\"text_caption\">{isActive ? positionApr : '0%'}</Text>\n                  </Skeleton>\n                )}\n              </HStack>\n            }\n\n            <HStack m=\"-12px 0\" w={{ base: '100%', lg: positionItemWidth[2] }} justify={{ base: 'space-between', lg: 'flex-end' }}>\n              {isApp && <Text color=\"primary_gray\">Liquidity</Text>}\n              <HiddenDotted>\n                <DLMMLiquidityValueBlock positionInfo={positionInfo} fontSize=\"14px\" isPosList />\n              </HiddenDotted>\n            </HStack>\n            {showNewVersionApr && (\n              <HStack w={{ base: '100%', lg: positionItemWidth[3] }} justify={{ base: 'space-between', lg: 'flex-end' }}>\n                {isApp && <Text color=\"primary_gray\">Claimable Yield</Text>}\n                <PendingYieldBlock positionInfo={positionInfo} hasRewards={showMiningIcon || showFarmingIcon || false} />\n              </HStack>\n            )}\n            {showNewVersionApr && (\n              <HStack w={{ base: '100%', lg: positionItemWidth[4] }} justify={{ base: 'space-between', lg: 'flex-end' }}>\n                {isApp && <Text color=\"primary_gray\">Est. Daily Yield</Text>}\n                <Skeleton isLoaded={!aprLoading && currentPosLiquidity !== undefined} h=\"14px\">\n                  <DailyEarnBlock\n                    positionInfo={positionInfo}\n                    dailyEarnUSD={isActive ? dailyEarnUSD : '$0'}\n                    dailyEarnOriginResult={isActive ? dailyEarnOriginResult : null}\n                    hasRewards={showMiningIcon || showFarmingIcon || false}\n                  />\n                </Skeleton>\n              </HStack>\n            )}\n            {!showNewVersionApr && (\n              <HStack m=\"-12px 0\" w={{ base: '100%', lg: positionItemWidth[3] }} justify={{ base: 'space-between', lg: 'flex-end' }}>\n                {isApp && <Text color=\"primary_gray\">Pending Fees</Text>}\n                <HiddenDotted>\n                  <DLMMPendingFeesBlock positionInfo={positionInfo} onFeesChange={setFees} />\n                </HiddenDotted>\n              </HStack>\n            )}\n\n            {!showNewVersionApr && (showMiningIcon || showFarmingIcon) && (\n              <HStack m=\"-12px 0\" w={{ base: '100%', lg: positionItemWidth[4] }} justify={{ base: 'space-between', lg: 'flex-end' }}>\n                {isApp && <Text color=\"primary_gray\">Pending Rewards</Text>}\n                <HStack gap=\"12px\">\n                  {isApp && showMiningIcon && <MiningImage />}\n                  {isApp && showFarmingIcon && <FarmingImage />}\n                  <HiddenDotted>\n                    <DLMMPendingRewardsBlock positionInfo={positionInfo} onRewardsChange={setRewards} />\n                  </HiddenDotted>\n                </HStack>\n              </HStack>\n            )}\n            <HStack\n              w={{ base: '100%', lg: positionItemWidth[5] }}\n              justify={{ base: 'space-between', lg: 'flex-start' }}\n              flexDir={{ base: 'row', lg: 'row-reverse' }}\n            >\n              {positionInfo?.posType !== 'burn' && (\n                <Box w={{ base: 'calc((100vw - 32px )/ 2)', lg: '32px' }} sx={{ button: { w: '100%' } }}>\n                  <CetusTooltip\n                    placement=\"top\"\n                    tooltip={\n                      <Text fontSize=\"12px\" lineHeight=\"20px\" color=\"text_caption\">\n                        Add\n                      </Text>\n                    }\n                    showTooltip={!isApp}\n                  >\n                    <Button\n                      variant=\"outline\"\n                      fontSize=\"12px\"\n                      bg=\"primary_opacity.10\"\n                      h=\"32px\"\n                      borderRadius=\"8px\"\n                      onClick={(e: any) => {\n                        cancelBubble(e)\n                        clickDetail('increase')\n                      }}\n                    >\n                      {!isApp && <Icon xlinkHref=\"#icon-a-icon_add1\" svgFill=\"primary\" svgHover=\"primary\" fontSize=\"14px\" />}\n                      {isApp && (\n                        <Text color=\"primary\" fontSize=\"12px\">\n                          Increase\n                        </Text>\n                      )}\n                    </Button>\n                  </CetusTooltip>\n                </Box>\n              )}\n              {positionInfo?.posType !== 'burn' && (\n                <Box w={{ base: 'calc((100vw - 32px )/ 2)', lg: '32px' }} sx={{ button: { w: '100%' } }}>\n                  <CetusTooltip\n                    placement=\"top\"\n                    tooltip={\n                      <Text fontSize=\"12px\" lineHeight=\"20px\" color=\"text_caption\">\n                        Remove\n                      </Text>\n                    }\n                    showTooltip={!isApp}\n                  >\n                    <Button\n                      variant=\"outline\"\n                      fontSize=\"12px\"\n                      bg=\"primary_opacity.10\"\n                      h=\"32px\"\n                      borderRadius=\"8px\"\n                      onClick={(e: any) => {\n                        cancelBubble(e)\n                        clickDetail('remove')\n                      }}\n                    >\n                      {!isApp && <Icon xlinkHref=\"#icon-tx_remove\" svgFill=\"text_paragraph\" svgHover=\"text_paragraph\" fontSize=\"14px\" />}\n                      {isApp && (\n                        <Text color=\"primary\" fontSize=\"12px\">\n                          Remove\n                        </Text>\n                      )}\n                    </Button>\n                  </CetusTooltip>\n                </Box>\n              )}\n              {/* <Button\n                variant=\"outline\"\n                fontSize=\"12px\"\n                bg=\"primary_opacity.10\"\n                h=\"32px\"\n                w={{ base: positionInfo?.posType !== 'burn' ? 'calc((100vw - 32px )/ 3)' : '100%', lg: '110px' }}\n                borderRadius=\"8px\"\n                onClick={e => {\n                  cancelBubble(e)\n                  toClaim()\n                }}\n                isLoading={isClaimLoading}\n                isDisabled={claimBtnDisabled}\n              >\n                {!isApp && (\n                  <Icon\n                    xlinkHref=\"#icon-icon_claim\"\n                    svgFill={claimBtnDisabled ? 'primary_gray' : 'primary'}\n                    svgHover={claimBtnDisabled ? 'primary_gray' : 'primary'}\n                  />\n                )}\n                Claim Yield\n              </Button> */}\n            </HStack>\n          </HStack>\n        </VStack>\n      </HStack>\n      {/* 暂时不做 后面加了move range一起 */}\n      {/* <Box\n        sx={{\n          maxHeight: isShowAction ? '44px' : '0',\n          opacity: isShowAction ? 1 : 0,\n          overflow: 'hidden',\n          transition: 'all 0.2s ease'\n        }}\n      >\n        <HStack w=\"100%\" justify=\"space-between\" mt=\"12px\">\n          <HStack flexDirection={{ base: 'column', lg: 'row' }} w={{ base: '100%', lg: 'unset' }}>\n            <HStack w={{ base: '100%', lg: 'unset' }} justify={{ base: 'space-between', lg: 'flex-start' }}>\n              <Text fontSize={{ base: '14px', lg: '12px' }}>NFT ID</Text>\n              <Skeleton isLoaded={!!tokenName}>\n                <Text fontWeight=\"500\" fontSize={{ base: '14px', lg: '12px' }} color=\"text_caption\">\n                  {tokenName?.split('|')[1]}\n                </Text>\n              </Skeleton>\n            </HStack>\n            <HStack w={{ base: '100%', lg: 'unset' }} justify={{ base: 'space-between', lg: 'flex-start' }}>\n              <Text fontSize={{ base: '14px', lg: '12px' }} ml={{ base: '0', lg: '8px' }}>\n                Address\n              </Text>\n              <AddressCopyLink\n                fontWeight=\"500\"\n                color=\"text_caption\"\n                address={positionInfo?.id}\n                showLink={false}\n                fontSize={{ base: '14px', lg: '12px' }}\n                onClickLink={() => {\n                  window.open(getExplorerUrl(positionInfo?.id, 'nftAddress'), '_blank')\n                }}\n              />\n            </HStack>\n          </HStack>\n          <HStack>\n            <Button\n              variant=\"outline\"\n              fontSize=\"12px\"\n              bg=\"none\"\n              w=\"96px\"\n              h=\"32px\"\n              borderRadius=\"8px\"\n              onClick={() => setCurrentPosDetailTab('increase')}\n            >\n              Increase\n            </Button>\n            <Button variant=\"outline\" fontSize=\"12px\" bg=\"none\" w=\"96px\" h=\"32px\" borderRadius=\"8px\" onClick={() => setCurrentPosDetailTab('remove')}>\n              Remove\n            </Button>\n            <Button\n              variant=\"outline\"\n              fontSize=\"12px\"\n              bg=\"none\"\n              w=\"96px\"\n              h=\"32px\"\n              borderRadius=\"8px\"\n              onClick={e => {\n                cancelBubble(e)\n                toClaim()\n              }}\n              isLoading={isClaimLoading}\n              disabled={isClaimLoading || (fees == '$0' && rewards == '$0')}\n            >\n              Claim Yield\n            </Button>\n           <Button variant=\"outline\" fontSize=\"12px\" bg=\"none\" w=\"96px\" h=\"32px\" borderRadius=\"8px\">\n              Move Range\n            </Button> \n          </HStack>\n        </HStack>\n      </Box> */}\n    </Block>\n  )\n}\n\nexport default DLMMPositionItemContent\n","import { PoolType } from '@/components/pools/createPool/SelectPoolType'\nimport { PosBaseInfo } from '@/types'\nimport { DlmmPosBaseInfo } from '@/types/dlmm'\nimport CLMMPositionItemContent from '../clmm/list/PositionItemContent'\nimport DLMMPositionItemContent from '../dlmm/list/DLMMPositionItemContent'\n\nexport type PositionItemContentProps = {\n  positionInfo: PosBaseInfo | DlmmPosBaseInfo\n  positionItemWidth?: string[]\n  priceDirect?: boolean\n  showMiningIcon?: boolean\n  showFarmingIcon?: boolean\n  poolType: PoolType\n}\n\nfunction PositionItemContent({ poolType, positionInfo, ...rest }: PositionItemContentProps) {\n  return poolType === 'dlmm' ? (\n    <DLMMPositionItemContent positionInfo={positionInfo as DlmmPosBaseInfo} {...rest} />\n  ) : (\n    <CLMMPositionItemContent positionInfo={positionInfo as PosBaseInfo} {...rest} />\n  )\n}\n\nexport default PositionItemContent\n"],"names":["showNewVersionApr","MiningIcon","props","jsx","HStack","e","cancelBubble","CetusTooltip","Text","Center","MiningImage","active","animate","onMouseOver","onMouseOut","useIconActive","Box","useGetDlmmPositionList","dlmmSdk","useSdk","setDlmmPosBaseListLoading","setDlmmPosBaseList","useDlmmPositionStore","wrapDlmmPosBaseInfo","useWrapPosData","getPosDlmmRelatedData","usePositionList","account","res","dlmmPosBaseList","item","info","error","usePositionListAction","isRemoveLoading","setIsRemoveLoading","useState","getTokenAmountValue","useTokenPrice","posPoolsRelatedData","posLiquidityData","posFeeData","farmsPosRewardsData","posRewardsData","posApiPoolData","poolRangeObj","setPosBaseList","posAprMap","usePositionStore","dlmmPosRewardsData","dlmmPosFeeData","dlmmPosLiquidityData","dlmmAprMap","mevProtect","transactionMode","maxCapForGas","customGasPrice","useGlobalStore","getCloseTsPayloadAll","usePosRemove","signAndExecuteTransaction","transactionConfirmation","useTransaction","fetchAccountBalance","useAccountBalance","getPositionBaseList","currentAccount","useAccountStore","getDlmmPosClosePositionPayload","useDlmmPosRemove","getDlmmPositionBaseList","handleGetPositionList","toCloseAllAction","closeAllPositionList","clmmPosIdList","dlmmPosIdList","dlmmParamsList","posInfo","currentPosRewardsData","clmmParamsList","isVestingPos","currentPosLiquidityData","currentPosPoolInfo","rewarderCoinTypes","_a","arr","tokenABalance","formatNumberWithDown","tokenBBalance","isReverse","amountA","amountB","Decimal","_b","_c","_d","_e","baseParams","toastInfo","status","isSuccess","txb","Transaction","params","clmmRes","useCallback","sortByValue","sortRule","list","getUSDRewards","rewards","reward","r","newList","i","positionInfo","isDlmm","posId","currentPosData","amountValueA","amountValueB","totalLiquidity","currentPosFeeData","feeA","feeB","totalFee","miningRewards","farmRewards","totalRewards","acc","cur","totalMiningAmount","totalFarmingAmount","totalYield","apr","sortMap","a","b","aprA","removeComma","aprB","aVal","bVal","DailyEarnBlock","dailyEarnUSD","dailyEarnOriginResult","hasRewards","PendingYieldBlock","posRewardsDataLoading","farmsPosRewardsDataLoading","currentPosBaseInfoLoading","posFeeDataLoading","posPoolsOriginalData","dlmmPosPoolsRelatedData","dlmmPosPoolsOriginalData","useMemo","currentPosContractPoolInfo","amountValue","formatCurrency","coinPriceObj","useTokenPriceStore","curentPosRewardsData","rewardsMiningInfo","amountUSD","ele","currentPosFarmsData","rewardsFarmsInfo","totalUSD","total","eleUSD","pendingYieldUSD","setTotalYield","calculatePendingYield","useCalculatePendingYield","useEffect","toClaimPosition","isClaimLoading","useClaimPosition","toClaim","isApp","useWindowWidth","isOpen","onClose","onOpen","useDisclosure","jsxs","Popover","PopoverTrigger","Portal","PopoverContent","PopoverBody","VStack","SingleTokenInfo","formatNumber","index","Button","PositionPriceRange","tokenName","priceDirect","isShowIcon","getPosIsActive","usePosHelper","currentPosPoolsRelatedData","isActive","minPrice","maxPrice","currPrice","getExplorerUrl","useExplorer","Skeleton","formatSmallPrice","StatusPosition","isAvailableObject","AddressCopyLink","Icon","PositionPriceBar","CLMMPositionItemContent","positionItemWidth","showMiningIcon","showFarmingIcon","getClmmPosName","navigate","useNavigate","setCurrentPosDetailTab","usePositionDetailStore","setPosAprMap","position_index","clickDetail","posTab","isShowAction","setIsShowAction","currentPosLiquidity","currentPosTvl","fees","setFees","setRewards","currentPosRewardData","getClmmPositionDailyEarning","useGetClmmPositionDailyEarning","positionApr","setPositionApr","aprLoading","setAprLoading","setDailyEarnUSD","setDailyEarnOriginResult","handleGetPositionApr","aprDisplay","dailyEarnUSDDisplay","originResult","useDebounceEffect","useInterval","Block","TooltipIcon","HiddenDotted","LiquidityValueBlock","DLMMPositionPriceRange","elementWidth","setElementWidth","elementRef","useRef","updateWidths","resizeObserver","sliderML","relativePosition","onlyOneBin","DLMMLiquidityValueBlock","haveTooltip","isPosList","rest","BurnLockIcon","DLMMPositionItemContent","useDlmmPosDetailStore","setDlmmAprMap","getDlmmPositionDailyEarning","useGetDlmmPositionDailyEarning","PositionItemContent","poolType"],"mappings":"gvCAIO,MAAMA,GAAoB,GCC3BC,GAAcC,GAEhBC,EAAAA,IAACC,EAAA,CACC,EAAE,OACF,EAAE,OACF,QAASC,GAAK,CACZC,GAAaD,CAAC,CAChB,EACC,GAAGH,EAEJ,eAACK,GAAA,CAAa,UAAU,MAAM,cAAUC,EAAA,CAAK,SAAS,OAAO,SAAA,2BAAwB,EACnF,SAAAL,EAAAA,IAACM,GAAA,CACC,SAAAN,MAACO,GAAA,CAAA,CAAY,EACf,CAAA,CACF,CAAA,CAAA,EAKAA,GAAeR,GAAoB,CACvC,KAAM,CAAE,OAAAS,EAAQ,QAAAC,EAAS,YAAAC,EAAa,WAAAC,CAAA,EAAeC,GAAA,EAErD,OACEZ,EAAAA,IAACa,GAAI,GAAG,MAAM,EAAE,OAAO,EAAE,OAAO,IAAI,WAAW,OAAO,UAAU,aAAcH,EAAa,aAAcC,EAAa,GAAGZ,EACvH,gBAACc,EAAA,CAAI,GAAG,MAAM,UAAU,qBACtB,SAAA,CAAAb,EAAAA,IAACa,EAAA,CAAI,GAAG,MAAM,UAAW,4BAA4BL,GAAUC,EAAU,cAAgB,EAAE,GAAA,CAAK,EAChGT,EAAAA,IAACa,EAAA,CAAI,GAAG,MAAM,UAAW,4BAA4BL,GAAUC,EAAU,cAAgB,EAAE,GAAA,CAAK,EAChGT,EAAAA,IAACa,EAAA,CAAI,GAAG,MAAM,UAAW,4BAA4BL,GAAUC,EAAU,cAAgB,EAAE,GAAA,CAAK,CAAA,CAAA,CAClG,CAAA,CACF,CAEJ,EC/BA,SAAwBK,IAAyB,CAC/C,MAAMC,EAAUC,GAAO,MAAM,EACvB,CAAE,0BAAAC,EAA2B,mBAAAC,CAAA,EAAuBC,GAAA,EACpD,CAAE,oBAAAC,CAAA,EAAwBC,GAAA,EAC1B,CAAE,sBAAAC,CAAA,EAA0BC,GAAA,EAyBlC,MAAO,CAAE,wBAvBuB,MAAOC,GAAoB,CACzD,QAAQ,IAAI,4EAA6EA,CAAO,EAChGP,EAA0B,EAAI,EAC9B,GAAI,CACF,MAAMQ,EAAM,MAAMV,GAAA,YAAAA,EAAS,SAAS,qBAAqBS,IACnDE,EAAuB,CAAA,EAC7B,UAAWC,KAAQF,EAAc,CAC/B,MAAMG,EAAO,MAAMR,EAAoBO,CAAI,EACvC,EAACC,GAAA,MAAAA,EAAM,gBAAiB,EAACA,GAAA,MAAAA,EAAM,gBAC/BA,GACFF,EAAgB,KAAKE,CAAI,CAE7B,CACAV,EAAmBQ,CAAe,EAClCJ,EAAsBI,CAAe,EACrC,QAAQ,IAAI,qFAAsFD,EAAKC,CAAe,CACxH,OAASG,EAAO,CACd,QAAQ,IAAI,2EAA4EA,CAAK,CAC/F,QAAA,CACEZ,EAA0B,EAAK,CACjC,CACF,CAES,CACX,CChBA,SAAwBa,IAAwB,CAC9C,KAAM,CAACC,EAAiBC,CAAkB,EAAIC,EAAAA,SAAS,EAAK,EAGtD,CAAE,oBAAAC,CAAA,EAAwBC,GAAA,EAE1B,CACJ,oBAAAC,EACA,iBAAAC,EACA,WAAAC,EACA,oBAAAC,EACA,eAAAC,EACA,eAAAC,EACA,aAAAC,EACA,eAAAC,EACA,UAAAC,CAAA,EACEC,GAAA,EACE,CAAE,mBAAAC,EAAoB,mBAAA5B,EAAoB,eAAA6B,EAAgB,qBAAAC,EAAsB,WAAAC,CAAA,EAAe9B,GAAA,EAC/F,CAAE,WAAA+B,EAAY,gBAAAC,EAAiB,aAAAC,EAAc,eAAAC,CAAA,EAAmBC,GAAA,EAChE,CAAE,qBAAAC,CAAA,EAAyBC,GAAA,EAC3B,CAAE,0BAAAC,GAA2B,wBAAAC,EAAA,EAA4BC,GAAA,EACzD,CAAE,oBAAAC,CAAA,EAAwBC,GAAA,EAC1B,CAAE,oBAAAC,CAAuC,EAAIvC,GAAA,EAC7C,CAAE,eAAAwC,CAAA,EAAmBC,GAAA,EACrB,CAAE,+BAAAC,CAAA,EAAmCC,GAAA,EACrC,CAAE,wBAAAC,EAAA,EAA4BrD,GAAA,EAC9BsD,EAAwB,SAAY,CACxC,MAAMN,EAAoBC,GAAA,YAAAA,EAAgB,OAAO,CACnD,EAEMM,GAAmB,MAAOC,GAA4D,CAC1F,QAAQ,IAAI,gDAAiDA,CAAoB,EACjFtC,EAAmB,EAAI,EAEvB,MAAMuC,EAAgBD,EAAqB,OAAO3C,GAAQA,EAAK,SAAW,MAAM,EAAE,IAAKA,GAAcA,CAAI,EACnG6C,EAAgBF,EAAqB,OAAO3C,GAAQA,EAAK,SAAW,MAAM,EAAE,IAAKA,GAAcA,CAAI,EAEzG,GAAI,CAEF,MAAM8C,EAAiBD,EAAc,IAAKE,GAA6B,CACrE,MAAMC,EAAwB7B,EAAmB4B,EAAQ,EAAE,EAQ3D,MAP4C,CAC1C,SAAUA,EAAQ,SAClB,WAAYA,EAAQ,GACpB,aAAaC,GAAA,YAAAA,EAAuB,IAAKhD,GAAoBA,EAAK,gBAAiB,CAAA,EACnF,UAAW+C,EAAQ,UACnB,UAAWA,EAAQ,SAAA,CAGvB,CAAC,EAGKE,EAAiBL,EAAc,IAAKG,GAAyB,oBACjE,MAAMG,EAAe,CAAC,EAACH,GAAA,MAAAA,EAAS,UAC1BI,EAA0BzC,EAAiBqC,GAAA,YAAAA,EAAS,KAAK,EACzDC,EAAwBnC,EAAekC,GAAA,YAAAA,EAAS,KAAK,EACrDK,EAAqBtC,EAAeiC,EAAQ,QAAQ,EAEpDM,EACJ,CAACL,IAAyBA,GAAA,YAAAA,EAAuB,SAAU,GACtDM,IAAAF,GAAA,YAAAA,EAAoB,mBAAoB,CAAA,IAAxC,YAAAE,GAA6C,OAAO,CAACC,GAAevD,MACnEuD,GAAI,KAAKvD,GAAK,QAAQ,EACfuD,IACN,CAAA,IACFP,GAAyB,CAAA,GAAI,IAAKhD,IAAoBA,GAAK,YAAY,EAC9E,QAAQ,IAAI,uCAAwC+C,EAASjC,EAAgBsC,EAAoBJ,EAAuBK,CAAiB,EAEzI,MAAMG,EAAgBC,GAAqBN,GAAA,YAAAA,EAAyB,mBAAoB,OAAW,EAAI,EACjGO,GAAgBD,GAAqBN,GAAA,YAAAA,EAAyB,mBAAoB,OAAW,EAAI,EAEjGQ,GAAYZ,EAAQ,UACpB,CAACa,EAASC,EAAO,EAAIF,GACvB,CACE,EAAED,EAAa,EAAE,IAAII,GAAQ,IAAI,IAAIC,GAAAhB,EAAQ,gBAAR,YAAAgB,GAAuB,QAAQ,CAAC,EAAE,SAAA,EACvE,EAAEP,CAAa,EAAE,IAAIM,GAAQ,IAAI,IAAIE,GAAAjB,EAAQ,gBAAR,YAAAiB,GAAuB,QAAQ,CAAC,EAAE,SAAA,CAAS,EAElF,CACE,EAAER,CAAa,EAAE,IAAIM,GAAQ,IAAI,IAAIG,GAAAlB,EAAQ,gBAAR,YAAAkB,GAAuB,QAAQ,CAAC,EAAE,SAAA,EACvE,EAAEP,EAAa,EAAE,IAAII,GAAQ,IAAI,IAAII,GAAAnB,EAAQ,gBAAR,YAAAmB,GAAuB,QAAQ,CAAC,EAAE,SAAA,CAAS,EAGhFC,GAAkB,CACtB,MAAOpB,EAAQ,UAAY,QAAUA,EAAQ,GAAKA,EAAQ,MAC1D,YAAaA,EAAQ,SACrB,UAAWA,EAAQ,UACnB,UAAWA,EAAQ,UACnB,QAAAa,EACA,QAAAC,GACA,UAAWd,EAAQ,UACnB,UAAWA,EAAQ,UACnB,UAAWA,EAAQ,UACnB,QAASA,EAAQ,QACjB,kBAAAM,EACA,aAAAH,CAAA,EAGF,OAAIH,EAAQ,UAAY,UACtBoB,GAAW,YAAcpB,EAAQ,UACjCoB,GAAW,WAAapB,EAAQ,IAG3BoB,EACT,CAAC,EAED,QAAQ,IAAI,8BAA+BlB,CAAc,EAEzD,MAAMmB,EAAY,CAChB,YAAcC,GAAkC,CAC9C,MAAMC,EAAYD,IAAW,UAC7B,MAAO,CACL,qBAAsBC,EAAY,GAAK,sBACvC,eAAgBA,EAAY,iCAAmC,sBAC/D,wBAAyBA,EAAY,GAAK,MAAA,CAE9C,CAAA,EAGFvC,GAAwBqC,CAAS,EACjC,IAAIG,EAAM,IAAIC,GAEd1B,EAAe,QAAQ2B,GAAU,CAC/BF,EAAMjC,EAA+BmC,EAAQF,CAAG,CAClD,CAAC,EAED,MAAMG,EAAU,MAAM9C,EAAqBqB,EAAgBsB,CAAG,EAC9D,QAAQ,IAAI,+BAAgC,CAC1C,QAAAG,EACA,IAAAH,CAAA,CACD,EACD,MAAMzE,EAAM,MAAMgC,GAA0ByC,EAAKH,EAAW,CAC1D,OAAQ7C,EACR,YAAaC,IAAoB,YACjC,aAAAC,EACA,eAAAC,EACA,YAAagD,GAAA,YAAAA,EAAS,WAAA,CACvB,EACD,QAAQ,IAAI,sBAAuB5E,CAAG,EAClCA,IACFmC,EAAA,EACAjB,EAAe,CAAA,CAAE,EACjBzB,EAAmB,CAAA,CAAE,EACrBkD,EAAA,EACAD,GAAwBJ,GAAA,YAAAA,EAAgB,OAAO,EAEnD,OAASlC,EAAO,CACd,QAAQ,MAAM,wBAAyBA,CAAK,CAC9C,QAAA,CACEG,EAAmB,EAAK,CAC1B,CACF,EA8GA,MAAO,CACL,oBA7G0BsE,EAAAA,YAC1B,MAAOC,EAAqBC,EAAkBC,IAAwF,aACpI,GAAI,EAACA,GAAA,MAAAA,EAAM,QAAQ,MAAO,CAAA,EAE1B,MAAMC,EAAgB,CAACC,EAAiB,KAC/BA,EACJ,IAAIC,GAAA,OAAW,OACd,GAAGA,EACH,UAAW1E,GAAoB+C,EAAA2B,GAAA,YAAAA,EAAQ,QAAR,YAAA3B,EAAe,UAAW2B,GAAA,YAAAA,EAAQ,mBAAmB,CAAA,EACpF,EACD,OAAOC,GAAK,EAAEA,EAAE,mBAAmB,EAAE,GAAG,CAAC,CAAC,EAGzCC,EAAU,CAAA,EAChB,QAASC,EAAI,EAAGA,EAAIN,EAAK,OAAQM,IAAK,CACpC,MAAMC,EAAeP,EAAKM,CAAC,EACrBE,EAASD,EAAa,UAAY,OAClCE,EAAQD,EAASD,EAAa,GAAKA,EAAa,MAGhDG,EAAiBF,EAASjE,EAAqBkE,CAAK,EAAI7E,EAAiB6E,CAAK,EAE9EE,EAAelF,GAAoB+C,EAAA+B,EAAa,gBAAb,YAAA/B,EAA4B,UAAWkC,GAAA,YAAAA,EAAgB,kBAAkB,EAC5GE,GAAenF,GAAoBwD,EAAAsB,EAAa,gBAAb,YAAAtB,EAA4B,UAAWyB,GAAA,YAAAA,EAAgB,kBAAkB,EAC5GG,GAAiB,EAAEF,CAAY,EAAE,KAAKC,EAAY,EAAE,SAAA,EAEpDE,EAAoBN,EAASlE,EAAemE,CAAK,EAAI5E,EAAW4E,CAAK,EACrEM,GAAOtF,GAAoByD,EAAAqB,EAAa,gBAAb,YAAArB,EAA4B,UAAW4B,GAAA,YAAAA,EAAmB,eAAe,EACpGE,GAAOvF,GAAoB0D,EAAAoB,EAAa,gBAAb,YAAApB,EAA4B,UAAW2B,GAAA,YAAAA,EAAmB,eAAe,EACpGG,GAAW,EAAEF,EAAI,EAAE,KAAKC,EAAI,EAAE,SAAA,EAE9BE,GAAyBjB,EAATO,EAAuBnE,EAAmBoE,CAAK,EAAmB1E,EAAe0E,CAAK,CAAtC,EAChEU,GAAcX,EAAS,CAAA,EAAKP,EAAcnE,EAAoByE,EAAa,EAAE,CAAC,EAC9Ea,GAAe,CAAC,GAAGF,GAAe,GAAGC,EAAW,EAAE,OAAO,CAACE,GAAKC,KAAQD,GAAI,KAAKC,GAAI,SAAS,EAAG,EAAE,CAAC,CAAC,EAAE,SAAA,EACtGC,GAAoBL,GAAc,OAAO,CAACG,GAAKC,KAAQD,GAAI,KAAKC,GAAI,mBAAmB,EAAG,EAAE,CAAC,CAAC,EAAE,SAAA,EAChGE,GAAqBL,GAAY,OAAO,CAACE,GAAKC,KAAQD,GAAI,KAAKC,GAAI,mBAAmB,EAAG,EAAE,CAAC,CAAC,EAAE,SAAA,EAC/FG,GAAa,EAAER,EAAQ,EAAE,KAAKG,EAAY,EAAE,SAAA,EAClD,IAAIM,GAAM,KACNjB,IACFiB,GAAMlB,EAAShE,GAAA,YAAAA,EAAaiE,GAAStE,GAAA,YAAAA,EAAYsE,IAGnDJ,EAAQ,KAAK,CACX,GAAGE,EACH,IAAAmB,GACA,eAAAb,GACA,WAAAY,GACA,SAAAR,GACA,aAAAG,GACA,kBAAAG,GACA,mBAAAC,EAAA,CACD,CACH,CAEA,MAAMG,EAAsD,CAC1D,IAAK,CAACC,EAAGC,IAAM,SACb,MAAMC,EAAO,EAAEC,IAAYvD,EAAAoD,EAAE,MAAF,YAAApD,EAAO,QAAQ,QAAS,MAAO,CAAC,CAAC,EACtDwD,EAAO,EAAED,IAAY9C,EAAA4C,EAAE,MAAF,YAAA5C,EAAO,QAAQ,QAAS,MAAO,CAAC,CAAC,EAC5D,eAAQ,IAAI6C,EAAK,SAAA,EAAYE,EAAK,WAAYJ,EAAGC,EAAG,YAAY,EAEzD9B,IAAa,MAAQ+B,EAAK,MAAME,CAAI,EAAE,SAAA,EAAaA,EAAK,MAAMF,CAAI,EAAE,SAAA,CAC7E,EACA,UAAW,CAACF,EAAGC,IAAM,CACnB,MAAMI,EAAO,EAAEF,EAAYH,EAAE,cAAc,CAAC,EAC1CM,EAAO,EAAEH,EAAYF,EAAE,cAAc,CAAC,EACxC,OAAO9B,IAAa,MAAQkC,EAAK,MAAMC,CAAI,EAAE,SAAA,EAAaA,EAAK,MAAMD,CAAI,EAAE,SAAA,CAC7E,EACA,KAAM,CAACL,EAAGC,IAAM,CACd,MAAMI,EAAO,EAAEF,EAAYH,EAAE,QAAQ,CAAC,EACpCM,EAAO,EAAEH,EAAYF,EAAE,QAAQ,CAAC,EAClC,OAAO9B,IAAa,MAAQkC,EAAK,MAAMC,CAAI,EAAE,SAAA,EAAaA,EAAK,MAAMD,CAAI,EAAE,SAAA,CAC7E,EACA,QAAS,CAACL,EAAGC,IAAM,CACjB,MAAMI,EAAO,EAAEF,EAAYH,EAAE,YAAY,CAAC,EACxCM,EAAO,EAAEH,EAAYF,EAAE,YAAY,CAAC,EACtC,OAAO9B,IAAa,MAAQkC,EAAK,MAAMC,CAAI,EAAE,SAAA,EAAaA,EAAK,MAAMD,CAAI,EAAE,SAAA,CAC7E,EACA,MAAO,CAACL,EAAGC,IAAM,CACf,MAAMI,EAAO,EAAEF,EAAYH,EAAE,UAAU,CAAC,EACtCM,EAAO,EAAEH,EAAYF,EAAE,UAAU,CAAC,EACpC,OAAO9B,IAAa,MAAQkC,EAAK,MAAMC,CAAI,EAAE,SAAA,EAAaA,EAAK,MAAMD,CAAI,EAAE,SAAA,CAC7E,EACA,UAAW,CAACL,EAAGC,IAAM,SACnB,MAAMI,EAAO,EAAEF,IAAYvD,EAAAoD,EAAE,MAAF,YAAApD,EAAO,QAAQ,QAAS,MAAO,CAAC,CAAC,EAC1D0D,EAAO,EAAEH,IAAY9C,EAAA4C,EAAE,MAAF,YAAA5C,EAAO,QAAQ,QAAS,MAAO,CAAC,CAAC,EACxD,OAAOc,IAAa,MAAQkC,EAAK,MAAMC,CAAI,EAAE,SAAA,EAAaA,EAAK,MAAMD,CAAI,EAAE,SAAA,CAC7E,CAAA,EAGF,OAAIN,EAAQ7B,CAAW,GACrBO,EAAQ,KAAKsB,EAAQ7B,CAAW,CAAC,EAE5BO,CACT,EACA,CACEzE,EACAC,EACAE,EACAD,EACAK,EACAK,EACAD,EACAD,EACAD,EACAZ,CAAA,CACF,EAKA,iBAAAmC,GACA,gBAAAtC,CAAA,CAEJ,CCxRA,SAAwB6G,GAAe,CACrC,aAAA5B,EACA,aAAA6B,EACA,sBAAAC,EACA,WAAAC,CACF,EAKG,CACD,aACG9I,EAAA,CACC,SAAAD,EAAAA,IAACK,GAAK,MAAM,eAAgB,WAAa,CAAA,CAC3C,CA2GJ,CC9GA,SAAwB2I,GAAkB,CAAE,aAAAhC,EAAc,WAAA+B,GAAoF,SAC5I,KAAM,CAAE,oBAAA7G,CAAA,EAAwBC,GAAA,EAC1B,CACJ,eAAAK,EACA,sBAAAyG,EACA,eAAAxG,EACA,oBAAAF,EACA,2BAAA2G,EACA,WAAA5G,EACA,0BAAA6G,EACA,kBAAAC,EACA,qBAAAC,CAAA,EACExG,GAAA,EACE,CAAE,wBAAAyG,EAAyB,yBAAAC,EAA0B,eAAAxG,EAAgB,mBAAAD,EAAoB,qBAAAE,CAAA,EAAyB7B,GAAA,EAElH8F,EAASuC,EAAAA,QAAQ,KAAMxC,GAAA,YAAAA,EAAc,WAAY,OAAQ,CAACA,GAAA,YAAAA,EAAc,OAAO,CAAC,EAChFyC,EAA6BD,EAAAA,QAAQ,IAClCvC,EAASsC,GAAA,YAAAA,EAA2BvC,GAAA,YAAAA,EAAc,UAAYqC,EAAqBrC,GAAA,YAAAA,EAAc,QAAQ,EAC/G,CAACqC,EAAsBE,EAA0BtC,EAAQD,GAAA,YAAAA,EAAc,SAAUA,GAAA,YAAAA,EAAc,QAAQ,CAAC,EAGrGO,EAAoBN,EAASlE,EAAeiE,GAAA,YAAAA,EAAc,EAAE,EAAI1E,EAAW0E,GAAA,YAAAA,EAAc,KAAK,EAC9FI,EAAelF,GAAoB+C,EAAA+B,GAAA,YAAAA,EAAc,gBAAd,YAAA/B,EAA6B,UAAWsC,GAAA,YAAAA,EAAmB,gBAAiB,IAAI,EACnHF,EAAenF,GAAoBwD,EAAAsB,GAAA,YAAAA,EAAc,gBAAd,YAAAtB,EAA6B,UAAW6B,GAAA,YAAAA,EAAmB,gBAAiB,IAAI,EACnHmC,GAAcF,EAAAA,QAAQ,IACtBpC,IAAiB,MAAQC,IAAiB,KACrCsC,GAAe,EAAEvC,CAAY,EAAE,KAAKC,CAAY,EAAE,SAAA,EAAY,CAAC,EAEjE,MACN,CAACD,EAAcC,CAAY,CAAC,EAIzB,CAAE,aAAAuC,EAAA,EAAiBC,GAAA,EACnBC,EAAuB7C,EAASnE,EAAmBkE,GAAA,YAAAA,EAAc,EAAE,EAAIxE,EAAewE,GAAA,YAAAA,EAAc,KAAK,EACzG+C,EAAoBP,EAAAA,QAAQ,IAAM,CACtC,MAAM/C,EAAOqD,GAAA,YAAAA,EAAsB,IAAKlD,GAAgB,OACtD,MAAMoD,EAAY9H,GAAoB+C,EAAA2B,GAAA,YAAAA,EAAQ,QAAR,YAAA3B,EAAe,UAAW2B,GAAA,YAAAA,EAAQ,oBAAqB,IAAI,EACjG,MAAO,CACL,GAAGA,EACH,UAAAoD,CAAA,CAEJ,GACA,OAAIvD,GAAQA,EAAK,OAAS,EACjBA,EAAK,OAAQwD,GAAa,EAAEA,EAAI,mBAAmB,EAAE,GAAG,CAAC,CAAC,EAE5D,CAAA,CACT,EAAG,CAACjD,EAAc8C,EAAsBF,EAAY,CAAC,EAE/CM,EAAsBjD,EAAS,CAAA,EAAK1E,EAAoByE,GAAA,YAAAA,EAAc,EAAE,EAExEmD,EAAmBX,EAAAA,QAAQ,IAAM,CACrC,MAAM/C,EAAOyD,GAAA,YAAAA,EAAqB,IAAKtD,GAAgB,OACrD,MAAMoD,EAAY9H,GAAoB+C,EAAA2B,GAAA,YAAAA,EAAQ,QAAR,YAAA3B,EAAe,UAAW2B,GAAA,YAAAA,EAAQ,oBAAqB,IAAI,EACjG,MAAO,CACL,GAAGA,EACH,UAAAoD,CAAA,CAEJ,GACA,OAAIvD,GAAQA,EAAK,OAAS,EACjBA,EAAK,OAAQwD,GAAa,EAAEA,EAAI,mBAAmB,EAAE,GAAG,CAAC,CAAC,EAE5D,CAAA,CACT,EAAG,CAACjD,EAAckD,EAAqBN,EAAY,CAAC,EAE9CQ,GAAWZ,EAAAA,QAAQ,IAAM,CAC7B,IAAIa,EACJ,MAAMnF,EAAM6E,EAAkB,OAAOI,CAAgB,EACrD,OAAIjF,GAAA,YAAAA,EAAK,QAAS,GAChBA,EAAI,QAAS+E,GAAa,CACxB,MAAMK,EAASL,GAAA,YAAAA,EAAK,UACpBI,EAAQC,GAAU,MAAQD,GAAS,KAAO,KAAO,EAAEA,CAAK,EAAE,KAAKC,CAAM,EAAE,SAAA,CACzE,CAAC,EACMD,GAAS,KAAO,MAAQV,GAAeU,EAAO,CAAC,GAEjD,IACT,EAAG,CAACN,EAAmBI,CAAgB,CAAC,EAElCI,EAAkBf,EAAAA,QAAQ,IAAM,CACpC,IAAIa,EAAQ,EAAE,CAAC,EACXjD,IAAiB,OACnBiD,EAAQA,EAAM,IAAIjD,CAAY,GAE5BC,IAAiB,OACnBgD,EAAQA,EAAM,IAAIhD,CAAY,GAGhC,MAAMnC,EAAM6E,EAAkB,OAAOI,CAAgB,EACrD,OAAIjF,GAAA,YAAAA,EAAK,QAAS,GAChBA,EAAI,QAAS+E,GAAa,CACxB,MAAMK,EAASL,GAAA,YAAAA,EAAK,UACpBI,EAAQC,IAAW,KAAO,EAAED,CAAK,EAAE,IAAIC,CAAM,EAAID,CACnD,CAAC,EAEI,GAAGV,GAAeU,EAAM,SAAA,EAAY,CAAC,CAAC,EAC/C,EAAG,CAACjD,EAAcC,EAAc0C,EAAmBI,CAAgB,CAAC,EAE9D,CAACjC,GAAYsC,CAAa,EAAIvI,EAAAA,SAAS,IAAI,EAC3C,CAAE,sBAAAwI,CAAA,EAA0BC,GAAA,EAElCC,EAAAA,UAAU,IAAM,CACd,GAAI,CAACvB,GAAqB,CAACH,EACzB,GAAKhC,EAGE,CACL,KAAM,CAAE,MAAAoD,CAAA,EAAUI,EAAsB,CAACzD,CAA2B,EAAG,CAAA,EAAI,GAAI,CAAA,EAAIjE,EAAgBD,CAAkB,EACrH0H,EAAcH,CAAK,CACrB,KANa,CACX,KAAM,CAAE,MAAAA,GAAUI,EAAsB,CAACzD,CAA2B,EAAG1E,EAAYE,EAAgBD,CAAmB,EACtHiI,EAAcH,CAAK,CACrB,CAKJ,EAAG,CACDlB,EACAC,EACAH,EACA3G,EACAE,EACAwE,EACAzE,EACA0E,EACAlE,EACAD,CAAA,CACD,EAED,KAAM,CAAE,gBAAA8H,EAAiB,eAAAC,CAAA,EAAmBC,GAAA,EACtCC,EAAU,IAAM,CACpBH,EAAgB5D,EAAcyC,GAA4BU,GAAA,YAAAA,EAAkB,QAAS,CAAC,CACxF,EAEM,CAAE,MAAAa,CAAA,EAAUC,GAAA,EACZ,CAAE,OAAAC,EAAQ,QAAAC,EAAS,OAAAC,CAAA,EAAWC,GAAA,EAEpC,OAAOd,IAAoB,KACzBvK,EAAAA,IAACC,EAAA,CAGC,SAAAD,EAAAA,IAACK,GAAK,MAAM,eAAgB,SAAAkK,CAAA,CAAgB,CAAA,CAC9C,EAEAe,EAAAA,KAACC,GAAA,CACC,OAAM,GACN,QAASP,EAAQ,QAAU,QAC3B,OAAAE,EACA,QAAAC,EACA,OAAQH,EAAQ,IAAM,CAAC,EAAII,EAC3B,UAAW,GACX,mBAAoB,GACpB,OAAQ,EACR,UAAW,CACT,CACE,KAAM,kBACN,QAAS,CACP,QAAS,CAAA,CACX,CACF,EAGF,SAAA,CAAApL,MAACwL,GAAA,CACC,SAAAxL,EAAAA,IAACa,EAAA,CACC,GAAG,SACH,QAASX,GAAK,CAER8K,IACF9K,EAAE,gBAAA,EACFkL,EAAA,EAEJ,EAEA,SAAApL,EAAAA,IAACC,EAAA,CACC,SAAAD,EAAAA,IAACK,EAAA,CAAK,MAAM,eAAe,aAAa,aAAa,YAAY,eAC9D,SAAAkK,CAAA,CACH,CAAA,CACF,CAAA,CAAA,EAEJ,EACAvK,EAAAA,IAACyL,GAAA,CACC,SAAAzL,EAAAA,IAAC0L,GAAA,CAAe,EAAE,cAAc,KAAK,QACnC,SAAA1L,EAAAA,IAAC2L,GAAA,CAAY,EAAE,MAAM,SAAS,KAAK,EAAE,cACnC,SAAAL,EAAAA,KAACM,EAAA,CAAO,GAAG,eAAe,aAAa,MAAM,KAAK,QAAQ,EAAE,iBAC1D,SAAA,CAAAN,EAAAA,KAACM,EAAA,CAAO,EAAE,OACR,SAAA,CAAAN,EAAAA,KAACrL,EAAA,CAAO,EAAE,OAAO,QAAQ,gBACvB,SAAA,CAAAD,EAAAA,IAACK,GAAK,SAAA,gBAAA,CAAc,EACpBL,EAAAA,IAACK,EAAA,CAAK,MAAM,eAAgB,SAAAqJ,EAAA,CAAY,CAAA,EAC1C,EACA4B,EAAAA,KAACM,GAAO,EAAE,OAAO,GAAG,UAAU,IAAI,IAAI,aAAa,MACjD,SAAA,CAAAN,OAACrL,GAAO,EAAE,OAAO,QAAQ,gBAAgB,EAAE,WACzC,SAAA,CAAAD,EAAAA,IAAC6L,GAAA,CACC,MAAO7E,GAAA,YAAAA,EAAc,cACrB,YAAa,CAAE,EAAG,OAAQ,EAAG,MAAA,EAC7B,SAAU,GACV,eAAe,OACf,YAAa,CAAE,MAAO,OAAQ,MAAO,MAAA,CAAO,CAAA,EAE9CsE,EAAAA,KAACM,EAAA,CAAO,MAAM,WAAW,IAAI,MAC3B,SAAA,CAAA5L,EAAAA,IAACK,EAAA,CAAK,SAAS,OAAO,MAAM,eACzB,SAAAyL,GAAavE,GAAA,YAAAA,EAAmB,eAAe,CAAA,CAClD,QACClH,EAAA,CAAK,SAAS,OAAQ,SAAAsJ,GAAevC,EAAc,CAAC,CAAA,CAAE,CAAA,CAAA,CACzD,CAAA,EACF,SACCnH,EAAA,CAAO,EAAE,OAAO,QAAQ,gBAAgB,EAAE,aACzC,SAAA,CAAAD,EAAAA,IAAC6L,GAAA,CACC,MAAO7E,GAAA,YAAAA,EAAc,cACrB,YAAa,CAAE,EAAG,OAAQ,EAAG,MAAA,EAC7B,SAAU,GACV,eAAe,OACf,YAAa,CAAE,MAAO,OAAQ,MAAO,MAAA,CAAO,CAAA,EAE9CsE,EAAAA,KAACM,EAAA,CAAO,MAAM,WAAW,IAAI,MAC3B,SAAA,CAAA5L,EAAAA,IAACK,EAAA,CAAK,SAAS,OAAO,MAAM,eACzB,SAAAyL,GAAavE,GAAA,YAAAA,EAAmB,eAAe,CAAA,CAClD,QACClH,EAAA,CAAK,SAAS,OAAQ,SAAAsJ,GAAetC,EAAc,CAAC,CAAA,CAAE,CAAA,CAAA,CACzD,CAAA,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,EACC0B,GAAc/I,EAAAA,IAACa,EAAA,CAAI,EAAE,OAAO,EAAE,MAAM,GAAG,UAAU,EAAE,OAAA,CAAQ,EAC3DkI,GACCuC,EAAAA,KAACM,EAAA,CAAO,EAAE,OACR,SAAA,CAAAN,EAAAA,KAACrL,EAAA,CAAO,EAAE,OAAO,QAAQ,gBACvB,SAAA,CAAAD,EAAAA,IAACK,GAAK,SAAA,mBAAA,CAAiB,EACvBL,EAAAA,IAACK,EAAA,CAAK,MAAM,eAAgB,SAAA+J,EAAA,CAAS,CAAA,EACvC,EACAkB,EAAAA,KAACM,EAAA,CAAO,EAAE,OAAO,MAAM,aAAa,GAAG,UAAU,IAAI,IAAI,aAAa,MACnE,SAAA,CAAA7B,GAAA,YAAAA,EAAmB,IAAI,CAACpI,EAAWoK,IAAkB,OACpD,OACET,EAAAA,KAACrL,EAAA,CAAO,EAAE,OAAoC,QAAQ,gBAAgB,EAAG8L,EAAQ,IAAM,EAAI,WAAa,aACtG,SAAA,CAAA/L,EAAAA,IAAC6L,GAAA,CACC,MAAOlK,GAAA,YAAAA,EAAM,MACb,YAAa,CAAE,EAAG,OAAQ,EAAG,MAAA,EAC7B,SAAU,GACV,eAAe,OACf,YAAa,CAAE,MAAO,OAAQ,MAAO,MAAA,CAAO,CAAA,EAE9C2J,EAAAA,KAACM,EAAA,CAAO,MAAM,WAAW,IAAI,MAC3B,SAAA,CAAA5L,EAAAA,IAACK,EAAA,CAAK,SAAS,OAAO,MAAM,eACzB,SAAAyL,GAAanK,GAAA,YAAAA,EAAM,mBAAmB,CAAA,CACzC,EACA2J,EAAAA,KAACjL,EAAA,CAAK,SAAS,OAAO,SAAA,CAAA,IAAEsJ,GAAehI,GAAA,YAAAA,EAAM,UAAW,CAAC,CAAA,CAAA,CAAE,CAAA,CAAA,CAC7D,CAAA,IAboBsD,EAAAtD,GAAA,YAAAA,EAAM,QAAN,YAAAsD,EAAa,SAcnC,CAEJ,GACCkF,GAAA,YAAAA,EAAkB,IAAI,CAACxI,EAAWoK,IAAkB,OACnD,OACET,EAAAA,KAACrL,EAAA,CAAoC,EAAE,OAAO,QAAQ,gBAAgB,EAAG8L,EAAQ,IAAM,EAAI,WAAa,aACtG,SAAA,CAAA/L,EAAAA,IAAC6L,GAAA,CACC,MAAOlK,GAAA,YAAAA,EAAM,MACb,YAAa,CAAE,EAAG,OAAQ,EAAG,MAAA,EAC7B,SAAU,GACV,eAAe,OACf,YAAa,CAAE,MAAO,OAAQ,MAAO,MAAA,CAAO,CAAA,EAE9C2J,EAAAA,KAACM,EAAA,CAAO,MAAM,WAAW,IAAI,MAC3B,SAAA,CAAA5L,EAAAA,IAACK,EAAA,CAAK,SAAS,OAAO,MAAM,eACzB,SAAAyL,GAAanK,GAAA,YAAAA,EAAM,mBAAmB,CAAA,CACzC,EACA2J,EAAAA,KAACjL,EAAA,CAAK,SAAS,OAAO,SAAA,CAAA,IAAEsJ,GAAehI,GAAA,YAAAA,EAAM,UAAW,CAAC,CAAA,CAAA,CAAE,CAAA,CAAA,CAC7D,CAAA,IAbWsD,EAAAtD,GAAA,YAAAA,EAAM,QAAN,YAAAsD,EAAa,SAc1B,CAEJ,EAAC,CAAA,CACH,CAAA,EACF,EAEFjF,EAAAA,IAACgM,GAAA,CACC,EAAE,OACF,EAAE,OACF,aAAa,MACb,GAAG,MACH,SAAS,OACT,WAAW,MACX,WAAY,OAAO9D,EAAU,IAAM,GAAKkB,GAAqBH,GAAyB4B,EACtF,UAAWA,GAAkBzB,GAAqBH,EAClD,QAAS/I,GAAK,CACZA,EAAE,gBAAA,EACF6K,EAAA,EACAI,EAAA,CACF,EACD,SAAA,WAAA,CAAA,CAED,EACF,CAAA,CACF,EACF,CAAA,CACF,CAAA,CAAA,CAAA,CAGN,CCjSA,SAASc,GAAmB,CAC1B,aAAAjF,EACA,UAAAkF,EACA,YAAAC,EACA,WAAAC,CACF,EAKG,CACD,KAAM,CAAE,eAAAC,CAAA,EAAmBC,GAAA,EACrB,CAAE,oBAAAlK,EAAqB,qBAAAiH,CAAA,EAAyBxG,GAAA,EAChD0J,EAA6BnK,EAAoB4E,GAAA,YAAAA,EAAc,KAAK,EAGpEwF,EAAWhD,EAAAA,QAAQ,IAAM,OAC7B,OAAO6C,EAAerF,GAA6B/B,EAAAoE,GAAA,YAAAA,GAAuBrC,GAAA,YAAAA,EAAc,WAAY,MAAjD,YAAA/B,EAAsD,kBAAkB,CAC7H,EAAG,CAAC+B,EAAcqC,CAAoB,CAAC,EAEjC,CAAE,MAAA2B,CAAA,EAAUC,GAAA,EAEZwB,EAAWjD,EAAAA,QAAQ,IAChB+C,GAAA,YAAAA,EAA4B,eAClC,CAACA,CAA0B,CAAC,EAEzBG,EAAWlD,EAAAA,QAAQ,IAChB+C,GAAA,YAAAA,EAA4B,eAClC,CAACA,CAA0B,CAAC,EAEzBI,EAAYnD,EAAAA,QAAQ,IACjB+C,GAAA,YAAAA,EAA4B,mBAClC,CAACA,CAA0B,CAAC,EAEzB,CAAE,eAAAK,CAAA,EAAmBC,GAAA,EAC3B,cACGjB,EAAA,CAAO,MAAO,CAAE,KAAM,WAAY,GAAI,cAAgB,IAAK,CAAE,KAAM,MAAO,GAAI,KAAA,EAAS,EAAE,OAAO,KAAK,OACpG,SAAA,CAAAN,EAAAA,KAACrL,EAAA,CACC,QAAS,CAAE,KAAM,WAAY,GAAI,YAAA,EACjC,KAAK,OACL,EAAG,CAAE,KAAM,OAAQ,GAAI,OAAA,EACvB,aAAa,OACb,GAAI,CAAE,KAAM,IAAK,GAAI,MAAA,EAErB,SAAA,CAAAD,EAAAA,IAAC8M,EAAA,CAAS,SAAU,CAAC,EAACP,GAAA,MAAAA,EAA4B,WAAY,CAAC,EAACA,GAAA,MAAAA,EAA4B,UAAU,aAAa,MAChH,SAAAJ,EACCnM,EAAAA,IAACK,EAAA,CACC,WAAW,IACX,SAAS,OACT,MAAM,eACN,UAAW,CAAE,KAAM,QAAS,GAAI,MAAA,EAChC,WAAY,CAAE,KAAM,OAAQ,GAAI,QAAA,EAE/B,SAAA,GAAG,MAAM,OAAOkM,GAAA,YAAAA,EAA4B,QAAQ,CAAC,EAAIA,GAAA,YAAAA,EAA4B,SAAWQ,GAAiBvE,EAAY+D,GAAA,YAAAA,EAA4B,QAAQ,CAAC,CAAC,MAAM,MAAM,OAAOA,GAAA,YAAAA,EAA4B,QAAQ,CAAC,EAAIA,GAAA,YAAAA,EAA4B,SAAWQ,GAAiBvE,EAAY+D,GAAA,YAAAA,EAA4B,QAAQ,CAAC,CAAC,EAAA,CAAA,EAG5UvM,EAAAA,IAACK,EAAA,CACC,WAAW,IACX,SAAS,OACT,MAAM,eACN,UAAW,CAAE,KAAM,QAAS,GAAI,MAAA,EAChC,WAAY,CAAE,KAAM,OAAQ,GAAI,QAAA,EAE/B,SAAA,GAAG,MAAM,OAAOkM,GAAA,YAAAA,EAA4B,eAAe,CAAC,EAAIA,GAAA,YAAAA,EAA4B,gBAAkBQ,GAAiBvE,EAAY+D,GAAA,YAAAA,EAA4B,eAAe,CAAC,CAAC,MAAM,MAAM,OAAOA,GAAA,YAAAA,EAA4B,eAAe,CAAC,EAAIA,GAAA,YAAAA,EAA4B,gBAAkBQ,GAAiBvE,EAAY+D,GAAA,YAAAA,EAA4B,eAAe,CAAC,CAAC,EAAA,CAAA,EAG1X,EACC,CAACvB,GACAhL,EAAAA,IAACgN,GAAA,CACC,SAAAR,EACA,UAAW,CAACS,GAAkBjG,CAAY,GAAK,CAACiG,GAAkB5D,GAAA,YAAAA,GAAuBrC,GAAA,YAAAA,EAAc,WAAY,GAAG,CAAA,CAAA,EAIzHoF,GAAc,CAACpB,GACdhL,EAAAA,IAACC,GAAO,QAASC,GAAKC,GAAaD,CAAC,EAClC,SAAAF,EAAAA,IAACI,GAAA,CACC,UAAU,MACV,KAAK,QACL,QACEkL,EAAAA,KAACrL,EAAA,CAAO,cAAe,CAAE,KAAM,SAAU,GAAI,KAAA,EAAS,EAAG,CAAE,KAAM,OAAQ,GAAI,SAC3E,SAAA,CAAAqL,EAAAA,KAACrL,EAAA,CAAO,EAAG,CAAE,KAAM,OAAQ,GAAI,OAAA,EAAW,QAAS,CAAE,KAAM,gBAAiB,GAAI,cAC9E,SAAA,CAAAD,EAAAA,IAACK,EAAA,CAAK,SAAU,CAAE,KAAM,OAAQ,GAAI,MAAA,EAAU,SAAA,IAAA,CAAE,EAChDL,EAAAA,IAAC8M,EAAA,CAAS,SAAU,CAAC,CAACZ,EACpB,SAAAlM,EAAAA,IAACK,EAAA,CAAK,WAAW,SAAS,WAAW,MAAM,SAAU,CAAE,KAAM,OAAQ,GAAI,MAAA,EAAU,MAAM,eACtF,SAAA6L,GAAA,YAAAA,EAAW,MAAM,KAAK,EAAC,CAC1B,CAAA,CACF,CAAA,EACF,EACAZ,EAAAA,KAACrL,EAAA,CAAO,EAAG,CAAE,KAAM,OAAQ,GAAI,OAAA,EAAW,QAAS,CAAE,KAAM,gBAAiB,GAAI,cAC9E,SAAA,CAAAD,EAAAA,IAACK,EAAA,CAAK,SAAU,CAAE,KAAM,OAAQ,GAAI,MAAA,EAAU,GAAI,CAAE,KAAM,IAAK,GAAI,OAAS,SAAA,UAE5E,EACAL,EAAAA,IAACkN,GAAA,CACC,WAAW,MACX,MAAM,eACN,QAASlG,GAAA,YAAAA,EAAc,GACvB,SAAU,GACV,SAAU,CAAE,KAAM,OAAQ,GAAI,MAAA,EAC9B,YAAa,IAAM,CACjB,OAAO,KAAK4F,EAAe5F,GAAA,YAAAA,EAAc,GAAI,YAAY,EAAG,QAAQ,CACtE,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EACF,EAGF,eAAC1G,GAAA,CAAO,OAAO,YAAY,YAAY,SAAS,aAAa,MAC3D,SAAAN,MAACmN,GAAA,CAAK,UAAU,kBAAkB,MAAM,OAAO,OAAO,OAAO,CAAA,CAC/D,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CAAA,SAGHlN,EAAA,CACE,SAAA,CAAA+K,GACChL,EAAAA,IAACgN,GAAA,CACC,SAAAR,EACA,UAAW,CAACS,GAAkBjG,CAAY,GAAK,CAACiG,GAAkB5D,GAAA,YAAAA,GAAuBrC,GAAA,YAAAA,EAAc,WAAY,GAAG,CAAA,CAAA,QAGzHoG,GAAA,CAAiB,SAAAX,EAAoB,SAAAC,EAAoB,UAAAC,EAAsB,SAAAH,EAAoB,YAAAL,CAAA,CAA0B,CAAA,CAAA,CAChI,CAAA,EACF,CAEJ,CC/GA,SAASkB,GAAwB,CAC/B,aAAArG,EACA,kBAAAsG,EAAoB,CAAA,EACpB,YAAAnB,EACA,eAAAoB,EACA,gBAAAC,CACF,EAMG,WACD,KAAM,CAAE,MAAAxC,CAAA,EAAUC,GAAA,EACZ,CAAE,eAAA2B,CAAA,EAAmBC,GAAA,EACrB,CAAE,eAAAY,CAAA,EAAmBnB,GAAA,EACrBoB,EAAWC,GAAA,EACX,CAAE,uBAAAC,CAAA,EAA2BC,GAAA,EAC7B,CACJ,aAAAC,EACA,qBAAAzE,EACA,oBAAAjH,EACA,eAAAK,EACA,aAAAC,EACA,iBAAAL,EACA,eAAAG,EACA,WAAAF,EACA,oBAAAC,CAAA,EACEM,GAAA,EAE+BT,EAAoB4E,GAAA,YAAAA,EAAc,KAAK,EACtDvE,EAAeuE,GAAA,YAAAA,EAAc,QAAQ,EAEzD,MAAMkF,EAAY1C,EAAAA,QAAQ,IAAM,OAC9B,GAAIxC,GAAA,MAAAA,EAAc,UAChB,OAAOA,GAAA,YAAAA,EAAc,UAChB,CACL,MAAM+G,IAAiB9I,EAAAoE,GAAA,YAAAA,EAAuBrC,GAAA,YAAAA,EAAc,YAArC,YAAA/B,EAAgD,MACvE,OAAOwI,EAAe,OAAOzG,GAAA,YAAAA,EAAc,KAAK,EAAG+G,EAAc,CACnE,CACF,EAAG,CAAC/G,GAAA,YAAAA,EAAc,UAAWA,GAAA,YAAAA,EAAc,MAAOA,GAAA,YAAAA,EAAc,SAAUqC,CAAoB,CAAC,EAEzF2E,EAAeC,GAAmC,CACtD,QAAQ,IAAI,4BAA6BjH,CAAY,EACjDiH,GACFL,EAAuBK,CAAM,EAC7BP,EAAS,oBAAoB1G,GAAA,YAAAA,EAAc,EAAE,IAAIiH,CAAM,EAAE,GAEzDP,EAAS,oBAAoB1G,GAAA,YAAAA,EAAc,EAAE,EAAE,CAEnD,EAEM,CAACkH,EAAcC,EAAe,EAAIlM,EAAAA,SAAS,EAAK,EAEhD,CAAE,oBAAAC,EAAA,EAAwBC,GAAA,EAC1BiM,EAAsB/L,EAAiB2E,GAAA,YAAAA,EAAc,KAAe,EACpEI,EAAelF,IAAoB+C,GAAA+B,GAAA,YAAAA,EAAc,gBAAd,YAAA/B,GAA6B,UAAWmJ,GAAA,YAAAA,EAAqB,kBAAkB,EAClH/G,EAAenF,IAAoBwD,GAAAsB,GAAA,YAAAA,EAAc,gBAAd,YAAAtB,GAA6B,UAAW0I,GAAA,YAAAA,EAAqB,kBAAkB,EAClHC,EAAgB7E,EAAAA,QAAQ,IACrB,EAAEpC,CAAY,EAAE,KAAKC,CAAY,EAAE,SAAA,EACzC,CAACD,EAAcC,CAAY,CAAC,EAoBzB,CAAmB,eAAAwD,EAAA,EAAmBC,GAAA,EAKtC,CAACwD,EAAMC,EAAO,EAAItM,EAAAA,SAAS,IAAI,EAC/B,CAAC0E,EAAS6H,CAAU,EAAIvM,EAAAA,SAAS,IAAI,EACrC,CAAE,eAAAoK,CAAA,EAAmBC,GAAA,EAErBE,EAAWhD,EAAAA,QAAQ,IAAM,OAC7B,OAAO6C,EAAerF,GAA6B/B,EAAAoE,GAAA,YAAAA,GAAuBrC,GAAA,YAAAA,EAAc,WAAY,MAAjD,YAAA/B,EAAsD,kBAAkB,CAC7H,EAAG,CAAC+B,EAAcqC,CAAoB,CAAC,EAEjClC,EAAiB7E,EAAW0E,GAAA,YAAAA,EAAc,EAAE,GAAK1E,EAAW0E,GAAA,YAAAA,EAAc,KAAK,EAC/EyH,EAAuBjM,EAAewE,GAAA,YAAAA,EAAc,EAAE,GAAKxE,EAAewE,GAAA,YAAAA,EAAc,KAAK,EAC7FkD,EAAsB3H,EAAoByE,GAAA,YAAAA,EAAc,EAAE,EAEvCwC,EAAAA,QAAQ,IAc7BqB,KACE,CAAC1D,GAAmB,EAAEA,GAAA,YAAAA,EAAgB,QAAQ,EAAE,GAAG,CAAC,GAAK,EAAEA,GAAA,YAAAA,EAAgB,QAAQ,EAAE,GAAG,CAAC,KACxF,CAAC+C,IAAuBA,GAAA,YAAAA,EAAqB,MAAMvI,GAAQ,EAAEA,GAAA,YAAAA,EAAM,mBAAmB,EAAE,GAAG,CAAC,OAC5F,CAAC8M,IACAA,GAAA,YAAAA,EAAsB,MAAM9M,GAAQ,EAAEA,GAAA,YAAAA,EAAM,mBAAmB,EAAE,GAAG,CAAC,MACnE2M,GAAQ,MAAQ,CAACA,KAAU3H,GAAW,MAAQ,CAACA,GAAY,CAAC4G,GAAkB,CAACC,IAEtF,CAAC3C,GAAgByD,EAAM3H,EAAS4G,EAAgBC,EAAiBiB,CAAoB,CAAC,EAEzF,KAAM,CAAE,4BAAAC,CAAA,EAAgCC,GAAA,EAElC,CAACC,EAAaC,CAAc,EAAI5M,EAAAA,SAAc,IAAI,EAClD,CAAC6M,EAAYC,CAAa,EAAI9M,EAAAA,SAAkB,EAAI,EACpD,CAAC4G,EAAcmG,CAAe,EAAI/M,EAAAA,SAAc,IAAI,EACpD,CAAC6G,EAAuBmG,CAAwB,EAAIhN,EAAAA,SAAc,IAAI,EAEtEiN,EAAuB,SAAY,CACvC,GAAI,CACF,MAAMzN,EAAM,MAAMiN,EAA4B1H,GAAA,YAAAA,EAAc,MAAOqH,CAAa,EAChF,GAAI5M,EAAK,CACP,KAAM,CAAE,WAAA0N,GAAY,oBAAAC,GAAqB,aAAAC,EAAA,EAAiB5N,EAE1DoN,EAAeM,EAAU,EACzBrB,EAAa,CAAE,CAAC9G,GAAA,YAAAA,EAAc,KAAK,EAAGwF,EAAW2C,GAAa,KAAM,EACpEH,EAAgBI,EAAmB,EACnCH,EAAyBI,EAAY,CACvC,MACER,EAAe,IAAI,EACnBG,EAAgB,IAAI,EAEtBD,EAAc,EAAK,CACrB,MAAgB,CACdA,EAAc,EAAK,CACrB,QAAA,CACEA,EAAc,EAAK,CACrB,CACF,EAEA,OAAAO,GACE,IAAM,CACAtI,GAAA,MAAAA,EAAc,QACZqH,GAAiB,EAAEA,CAAa,EAAE,GAAG,CAAC,EACxCa,EAAA,GAEAL,EAAe,IAAI,EACnBG,EAAgB,IAAI,EACpBD,EAAc,EAAK,GAGzB,EACA,CAAC/H,GAAA,YAAAA,EAAc,KAAK,EACpB,CACE,KAAM,GAAA,CACR,EAGFuI,GAAY,CACV,SAAU,GAAK,IACf,SAAU,IAAM,CACVX,IAAgB,MAClBM,EAAA,CAEJ,CAAA,CACD,EAGClP,EAAAA,IAACwP,GAAA,CACC,aAAc,IAAM,CAClB,WAAW,IAAM,CACfrB,GAAgB,EAAI,CACtB,EAAG,EAAE,CACP,EACA,aAAc,IAAM,CAClB,WAAW,IAAM,CACfA,GAAgB,EAAK,CACvB,EAAG,EAAE,CACP,EACA,EAAE,OACF,GAAG,cACH,OAAO,OACP,EAAG,CAAE,KAAM,gBAAiB,GAAI,YAAA,EAChC,aAAa,OACb,QAAUjO,GAAW,CACnBC,GAAaD,CAAC,EACd8N,EAAA,CACF,EACA,OAAO,UAEP,SAAAhO,EAAAA,IAACC,GAAO,EAAE,OAAO,QAAQ,gBAAgB,cAAe,CAAE,KAAM,SAAU,GAAI,KAAA,EAC5E,gBAAC2L,EAAA,CAAO,EAAE,OAAO,MAAM,aAAa,IAAI,OACrC,SAAA,CAAAZ,UACE/K,EAAA,CAAO,cAAe,CAAE,KAAM,SAAU,GAAI,KAAA,EAAS,EAAG,CAAE,KAAM,OAAQ,GAAI,OAAA,EAAW,IAAI,OAC1F,SAAA,CAAAqL,EAAAA,KAACrL,EAAA,CAAO,EAAG,CAAE,KAAM,OAAQ,GAAI,OAAA,EAAW,QAAS,CAAE,KAAM,gBAAiB,GAAI,cAC9E,SAAA,CAAAD,EAAAA,IAACK,EAAA,CAAK,MAAM,eAAe,SAAU,CAAE,KAAM,OAAQ,GAAI,MAAA,EAAU,SAAA,QAAA,CAEnE,EACAL,EAAAA,IAAC8M,EAAA,CAAS,SAAU,CAAC,CAACZ,EACpB,SAAAlM,EAAAA,IAACK,EAAA,CAAK,WAAW,MAAM,SAAU,CAAE,KAAM,OAAQ,GAAI,QAAU,MAAM,eAClE,SAAA6L,GAAA,YAAAA,EAAW,MAAM,KAAK,EAAC,CAC1B,CAAA,CACF,CAAA,EACF,EACAZ,EAAAA,KAACrL,EAAA,CAAO,EAAG,CAAE,KAAM,OAAQ,GAAI,OAAA,EAAW,QAAS,CAAE,KAAM,gBAAiB,GAAI,cAC9E,SAAA,CAAAD,MAACK,GAAK,MAAM,eAAe,SAAU,CAAE,KAAM,OAAQ,GAAI,MAAA,EAAU,GAAI,CAAE,KAAM,IAAK,GAAI,KAAA,EAAS,SAAA,UAEjG,EACAL,EAAAA,IAACa,EAAA,CAAI,EAAE,OACL,SAAAb,EAAAA,IAACkN,GAAA,CACC,WAAW,MACX,MAAM,eACN,QAASlG,GAAA,YAAAA,EAAc,GACvB,SAAU,GACV,SAAU,CAAE,KAAM,OAAQ,GAAI,MAAA,EAC9B,YAAa,IAAM,CACjB,OAAO,KAAK4F,EAAe5F,GAAA,YAAAA,EAAc,GAAI,YAAY,EAAG,QAAQ,CACtE,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CACF,CAAA,EACF,SAED/G,EAAA,CAAO,EAAE,OAAO,QAAQ,gBAAgB,cAAe,CAAE,KAAM,SAAU,GAAI,KAAA,EAAS,IAAK,CAAE,KAAM,OAAQ,GAAI,OAC9G,SAAA,CAAAqL,EAAAA,KAACrL,EAAA,CACC,KAAM,CAAE,KAAM,QAAS,GAAIqN,EAAkB,CAAC,CAAA,EAC9C,EAAG,CAAE,KAAM,OAAQ,GAAIA,EAAkB,CAAC,CAAA,EAC1C,QAAS,CAAE,KAAM,gBAAiB,GAAI,UAAA,EAErC,SAAA,CAAAtC,SACE3K,EAAA,CAAK,MAAM,eAAe,WAAW,SAAS,SAAA,cAE/C,QAED4L,GAAA,CAAmB,aAAAjF,EAA4B,UAAAkF,EAAsB,YAAAC,EAA0B,WAAY+B,CAAA,CAAc,CAAA,CAAA,CAAA,SAGzHjO,EAAA,CAAO,EAAG,CAAE,KAAM,OAAQ,GAAIqN,EAAkB,CAAC,CAAA,EAAK,QAAS,CAAE,KAAM,gBAAiB,GAAI,YAC1F,SAAA,CAAAtC,GAASnL,IACRyL,OAACrL,EAAA,CAAO,IAAI,MACV,SAAA,CAAAD,EAAAA,IAACK,EAAA,CAAK,MAAM,eAAe,SAAA,MAAG,EAC9BL,EAAAA,IAACa,EAAA,CAAI,EAAE,OAAO,GAAG,OACf,SAAAb,EAAAA,IAACyP,GAAA,CACC,kBACG,OAAA,CAAK,SAAA,CAAA,kKAE2B,KAAA,EAAG,EAAE,sDAAA,CAAA,CAEtC,CAAA,CAAA,CAEJ,CACF,CAAA,EACF,EAGAzP,EAAAA,IAAC8M,EAAA,CAAS,SAAU,CAACgC,EAAY,EAAE,OACjC,SAAA9O,EAAAA,IAACK,GAAK,MAAM,eAAgB,SAAAmM,EAAWoC,EAAc,KAAK,CAAA,CAC5D,CAAA,EAEJ,SAED3O,EAAA,CAAO,EAAE,UAAU,EAAG,CAAE,KAAM,OAAQ,GAAIqN,EAAkB,CAAC,CAAA,EAAK,QAAS,CAAE,KAAM,gBAAiB,GAAI,YACtG,SAAA,CAAAtC,GAAShL,EAAAA,IAACK,EAAA,CAAK,MAAM,eAAe,SAAA,YAAS,EAC9CL,EAAAA,IAAC0P,IACC,SAAA1P,EAAAA,IAAC2P,GAAA,CAAoB,aAAA3I,EAA4B,SAAS,OAAO,UAAS,EAAA,CAAC,CAAA,CAC7E,CAAA,EACF,EAGEsE,EAAAA,KAACrL,EAAA,CAAO,EAAG,CAAE,KAAM,OAAQ,GAAIqN,EAAkB,CAAC,CAAA,EAAK,QAAS,CAAE,KAAM,gBAAiB,GAAI,YAC1F,SAAA,CAAAtC,GAAShL,EAAAA,IAACK,EAAA,CAAK,MAAM,eAAe,SAAA,kBAAe,QACnD2I,GAAA,CAAkB,aAAAhC,EAA4B,WAAYuG,GAAkBC,GAAmB,EAAA,CAAO,CAAA,EACzG,EAGAlC,EAAAA,KAACrL,EAAA,CAAO,EAAG,CAAE,KAAM,OAAQ,GAAIqN,EAAkB,CAAC,CAAA,EAAK,QAAS,CAAE,KAAM,gBAAiB,GAAI,YAC1F,SAAA,CAAAtC,GAAShL,EAAAA,IAACK,EAAA,CAAK,MAAM,eAAe,SAAA,mBAAgB,QACpDyM,EAAA,CAAS,SAAU,CAACgC,EAAY,EAAE,OACjC,SAAA9O,EAAAA,IAAC4I,GAAA,CACC,aAAA5B,EACA,aAAcwF,EAAW3D,EAAe,KACxC,sBAAuB2D,EAAW1D,EAAwB,KAC1D,WAAYyE,GAAkBC,GAAmB,EAAA,CAAA,CACnD,CACF,CAAA,EACF,EAED,CAAC3N,GASD,CAACA,GAYFyL,EAAAA,KAACrL,EAAA,CACC,EAAG,CAAE,KAAM,OAAQ,GAAIqN,EAAkB,CAAC,CAAA,EAC1C,QAAS,CAAE,KAAM,gBAAiB,GAAI,YAAA,EACtC,QAAS,CAAE,KAAM,MAAO,GAAI,aAAA,EAE3B,SAAA,EAAAtG,GAAA,YAAAA,EAAc,WAAY,QACzBhH,EAAAA,IAACa,GAAI,EAAG,CAAE,KAAM,2BAA4B,GAAI,MAAA,EAAU,GAAI,CAAE,OAAQ,CAAE,EAAG,MAAA,GAC3E,SAAAb,EAAAA,IAACI,GAAA,CACC,UAAU,MACV,cACGC,EAAA,CAAK,SAAS,OAAO,WAAW,OAAO,MAAM,eAAe,SAAA,KAAA,CAE7D,EAEF,YAAa,CAAC2K,EAEd,SAAAM,EAAAA,KAACU,GAAA,CACC,QAAQ,UACR,SAAS,OACT,GAAG,qBACH,EAAE,OACF,aAAa,MACb,QAAU9L,GAAW,CACnBC,GAAaD,CAAC,EACd8N,EAAY,UAAU,CACxB,EAEC,SAAA,CAAA,CAAChD,GAAShL,EAAAA,IAACmN,GAAA,CAAK,UAAU,oBAAoB,QAAQ,UAAU,SAAS,UAAU,SAAS,MAAA,CAAO,EACnGnC,GACChL,EAAAA,IAACK,EAAA,CAAK,MAAM,UAAU,SAAS,OAAO,SAAA,UAAA,CAEtC,CAAA,CAAA,CAAA,CAEJ,CAAA,EAEJ,GAED2G,GAAA,YAAAA,EAAc,WAAY,cACxBnG,EAAA,CAAI,EAAG,CAAE,KAAM,2BAA4B,GAAI,MAAA,EAAU,GAAI,CAAE,OAAQ,CAAE,EAAG,MAAA,GAC3E,SAAAb,EAAAA,IAACI,GAAA,CACC,UAAU,MACV,cACGC,EAAA,CAAK,SAAS,OAAO,WAAW,OAAO,MAAM,eAAe,SAAA,QAAA,CAE7D,EAEF,YAAa,CAAC2K,EAEd,SAAAM,EAAAA,KAACU,GAAA,CACC,QAAQ,UACR,SAAS,OACT,GAAG,qBACH,EAAE,OACF,aAAa,MACb,QAAU9L,GAAW,CACnBC,GAAaD,CAAC,EACd8N,EAAY,QAAQ,CACtB,EAEC,SAAA,CAAA,CAAChD,GAAShL,EAAAA,IAACmN,GAAA,CAAK,UAAU,kBAAkB,QAAQ,iBAAiB,SAAS,iBAAiB,SAAS,MAAA,CAAO,EAC/GnC,GACChL,EAAAA,IAACK,EAAA,CAAK,MAAM,UAAU,SAAS,OAAO,SAAA,QAAA,CAEtC,CAAA,CAAA,CAAA,CAEJ,CAAA,CACF,CACF,CAAA,CAAA,CAAA,CAyBJ,CAAA,CACF,CAAA,CAAA,CAmBF,CAAA,CACF,CAAA,CAAA,CAGN,CCjcA,SAASuP,GAAuB,CAC9B,aAAA5I,EACA,UAAAkF,EACA,YAAAC,EACA,WAAAC,CACF,EAKG,CACD,KAAM,CAAE,wBAAA9C,CAAA,EAA4BnI,GAAA,EAC9BoL,EAA6BjD,EAAwBtC,GAAA,YAAAA,EAAc,EAAE,EACrEwF,GAAWD,GAAA,YAAAA,EAA4B,gBAAiB,SACxD,CAAE,MAAAvB,CAAA,EAAUC,GAAA,EAEZwB,EAAWjD,EAAAA,QAAQ,IAChBhB,EAAY2D,GAAeI,GAAA,YAAAA,EAA4B,WAAY,KAAQA,GAAA,YAAAA,EAA4B,kBAAmB,GAAI,EACpI,CAACA,EAA4BJ,CAAW,CAAC,EAEtCO,EAAWlD,EAAAA,QAAQ,IAChBhB,EAAY2D,GAAeI,GAAA,YAAAA,EAA4B,WAAY,KAAQA,GAAA,YAAAA,EAA4B,kBAAmB,GAAI,EACpI,CAACA,EAA4BJ,CAAW,CAAC,EAEtCQ,EAAYnD,EAAAA,QAAQ,IACjBhB,EAAY2D,GAAeI,GAAA,YAAAA,EAA4B,eAAgB,KAAQA,GAAA,YAAAA,EAA4B,sBAAuB,GAAI,EAC5I,CAACA,EAA4BJ,CAAW,CAAC,EAEtC,CAAC0D,EAAcC,CAAe,EAAI7N,EAAAA,SAAiB,CAAC,EACpD8N,EAAaC,EAAAA,OAAuB,IAAI,EAE9CrF,EAAAA,UAAU,IAAM,CACd,MAAMsF,EAAe,IAAM,CACrBF,EAAW,SAASD,EAAgBC,EAAW,QAAQ,WAAW,CACxE,EACMG,EAAiB,IAAI,eAAeD,CAAY,EACtD,OAAIF,EAAW,SAASG,EAAe,QAAQH,EAAW,OAAO,EAC1D,IAAM,CACPA,EAAW,SAASG,EAAe,UAAUH,EAAW,OAAO,CACrE,CACF,EAAG,CAACtD,EAAUC,EAAUC,CAAS,CAAC,EAElC,MAAMwD,EAAW3G,EAAAA,QAAQ,IAAM,CAC7B,GAAIkD,IAAa,IAAK,MAAO,MAC7B,GAAIC,GAAaF,GAAYC,GAAYmD,IAAiB,OAAW,CACnE,GAAI,EAAElD,CAAS,EAAE,GAAGD,CAAQ,GAAK,EAAEC,CAAS,EAAE,GAAGF,CAAQ,EAAG,CAC1D,MAAM2D,EAAmB,EAAEzD,CAAS,EACjC,IAAIF,CAAQ,EACZ,IAAI,EAAEC,CAAQ,EAAE,IAAI,EAAED,CAAQ,CAAC,CAAC,EAChC,SAAA,EAEH,MAAO,GAAG,EAAE2D,CAAgB,EAAE,IAAI,GAAG,EAAE,QAAQ,CAAC,CAAC,GACnD,CACA,GAAI,EAAE3D,CAAQ,EAAE,GAAGC,CAAQ,GAAK,EAAED,CAAQ,EAAE,GAAGE,CAAS,EACtD,MAAO,MAET,GAAI,EAAEA,CAAS,EAAE,GAAGF,CAAQ,EAC1B,MAAO,OAET,GAAI,EAAEE,CAAS,EAAE,GAAGD,CAAQ,EAC1B,MAAO,mBAET,GAAI,EAAEC,CAAS,EAAE,GAAGF,CAAQ,GAAK,EAAEE,CAAS,EAAE,GAAGD,CAAQ,EACvD,MAAO,MAET,GAAI,EAAEC,CAAS,EAAE,GAAGD,CAAQ,GAAK,EAAEC,CAAS,EAAE,GAAGF,CAAQ,EACvD,MAAO,kBAEX,CACA,MAAO,KACT,EAAG,CAACE,EAAWF,EAAUC,EAAUmD,EAActD,CAA0B,CAAC,EAEtE,CAAE,eAAAK,CAAA,EAAmBC,GAAA,EAErBwD,EAAa7G,EAAAA,QAAQ,IAClBiD,IAAaC,EACnB,CAACD,EAAUC,CAAQ,CAAC,EACvB,cACGd,EAAA,CAAO,MAAO,CAAE,KAAM,WAAY,GAAI,cAAgB,IAAK,CAAE,KAAM,MAAO,GAAI,KAAA,EAAS,EAAE,OAAO,KAAK,OACpG,SAAA,CAAAN,EAAAA,KAACrL,EAAA,CACC,QAAS,CAAE,KAAM,WAAY,GAAI,YAAA,EACjC,KAAK,OACL,EAAG,CAAE,KAAM,OAAQ,GAAI,OAAA,EACvB,aAAa,OACb,GAAI,CAAE,KAAM,IAAK,GAAI,MAAA,EACrB,SAAS,SAET,SAAA,CAAAD,EAAAA,IAAC8M,EAAA,CAAS,SAAU,CAAC,EAACP,GAAA,MAAAA,EAA4B,WAAY,CAAC,EAACA,GAAA,MAAAA,EAA4B,UAAU,aAAa,MAChH,SAAAJ,QACE9L,EAAA,CAAK,WAAW,IAAI,SAAS,OAAO,MAAM,eAAe,UAAU,QAAQ,WAAY,CAAE,KAAM,OAAQ,GAAI,QAAA,EACzG,SAAAgQ,EACG,GAAG,MAAM,OAAO9D,GAAA,YAAAA,EAA4B,QAAQ,CAAC,EAAIA,GAAA,YAAAA,EAA4B,SAAWQ,GAAiBvE,EAAY+D,GAAA,YAAAA,EAA4B,QAAQ,CAAC,CAAC,GACnK,GAAG,MAAM,OAAOA,GAAA,YAAAA,EAA4B,QAAQ,CAAC,EAAIA,GAAA,YAAAA,EAA4B,SAAWQ,GAAiBvE,EAAY+D,GAAA,YAAAA,EAA4B,QAAQ,CAAC,CAAC,MAAM,MAAM,OAAOA,GAAA,YAAAA,EAA4B,QAAQ,CAAC,EAAIA,GAAA,YAAAA,EAA4B,SAAWQ,GAAiBvE,EAAY+D,GAAA,YAAAA,EAA4B,QAAQ,CAAC,CAAC,EAAA,CAC/U,EAEAvM,MAACK,EAAA,CAAK,WAAW,IAAI,SAAS,OAAO,MAAM,eAAe,UAAU,QAAQ,WAAY,CAAE,KAAM,OAAQ,GAAI,QAAA,EACzG,WACG,GAAG,MAAM,OAAOkM,GAAA,YAAAA,EAA4B,eAAe,CAAC,EAAIA,GAAA,YAAAA,EAA4B,gBAAkBQ,GAAiBvE,EAAY+D,GAAA,YAAAA,EAA4B,eAAe,CAAC,CAAC,GACxL,GAAG,MAAM,OAAOA,GAAA,YAAAA,EAA4B,eAAe,CAAC,EAAIA,GAAA,YAAAA,EAA4B,gBAAkBQ,GAAiBvE,EAAY+D,GAAA,YAAAA,EAA4B,eAAe,CAAC,CAAC,MAAM,MAAM,OAAOA,GAAA,YAAAA,EAA4B,eAAe,CAAC,EAAIA,GAAA,YAAAA,EAA4B,gBAAkBQ,GAAiBvE,EAAY+D,GAAA,YAAAA,EAA4B,eAAe,CAAC,CAAC,GACzX,EAEJ,EACC,CAACvB,GAAShL,MAACgN,GAAA,CAAe,SAAAR,EAAoB,WAAWD,GAAA,YAAAA,EAA4B,gBAAiB,GAAI,EAE1GH,GAAc,CAACpB,GACdhL,EAAAA,IAACC,GAAO,QAASC,GAAKC,GAAaD,CAAC,EAClC,SAAAF,EAAAA,IAACI,GAAA,CACC,UAAU,MACV,KAAK,QACL,QACEkL,EAAAA,KAACrL,EAAA,CAAO,cAAe,CAAE,KAAM,SAAU,GAAI,KAAA,EAAS,EAAG,CAAE,KAAM,OAAQ,GAAI,SAC3E,SAAA,CAAAqL,EAAAA,KAACrL,EAAA,CAAO,EAAG,CAAE,KAAM,OAAQ,GAAI,OAAA,EAAW,QAAS,CAAE,KAAM,gBAAiB,GAAI,cAC9E,SAAA,CAAAD,EAAAA,IAACK,EAAA,CAAK,SAAU,CAAE,KAAM,OAAQ,GAAI,MAAA,EAAU,SAAA,IAAA,CAAE,EAChDL,MAAC8M,GAAS,SAAU,CAAC,CAACZ,EACpB,SAAAlM,EAAAA,IAACK,GAAK,WAAW,MAAM,SAAU,CAAE,KAAM,OAAQ,GAAI,MAAA,EAAU,MAAM,eAClE,WACH,CAAA,CACF,CAAA,EACF,EACAiL,EAAAA,KAACrL,EAAA,CAAO,EAAG,CAAE,KAAM,OAAQ,GAAI,OAAA,EAAW,QAAS,CAAE,KAAM,gBAAiB,GAAI,cAC9E,SAAA,CAAAD,EAAAA,IAACK,EAAA,CAAK,SAAU,CAAE,KAAM,OAAQ,GAAI,MAAA,EAAU,GAAI,CAAE,KAAM,IAAK,GAAI,OAAS,SAAA,UAE5E,EACAL,EAAAA,IAACkN,GAAA,CACC,WAAW,MACX,MAAM,eACN,QAASlG,GAAA,YAAAA,EAAc,GACvB,SAAU,GACV,SAAU,CAAE,KAAM,OAAQ,GAAI,MAAA,EAC9B,YAAa,IAAM,CACjB,OAAO,KAAK4F,EAAe5F,GAAA,YAAAA,EAAc,GAAI,YAAY,EAAG,QAAQ,CACtE,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EACF,EAGF,eAAC1G,GAAA,CAAO,OAAO,YAAY,YAAY,SAAS,aAAa,MAC3D,SAAAN,MAACmN,GAAA,CAAK,UAAU,kBAAkB,MAAM,OAAO,OAAO,OAAO,CAAA,CAC/D,CAAA,CAAA,CACF,CACF,CAAA,CAAA,CAAA,SAGHlN,EAAA,CACE,SAAA,CAAA+K,SAAUgC,GAAA,CAAe,SAAAR,EAAoB,WAAWD,GAAA,YAAAA,EAA4B,gBAAiB,GAAI,EAC1GvM,EAAAA,IAAC8M,GAAS,EAAE,MAAM,SAAU,CAAC,EAACP,GAAA,MAAAA,EAA4B,cAAc,aAAa,MACnF,eAAC1L,EAAA,CAAI,EAAE,OAAO,EAAE,MAAM,QAAS6L,IAAa,IAAM,OAAS,wCAAyC,OAAO,WACzG,SAAA1M,EAAAA,IAACa,EAAA,CACC,EAAG6L,IAAa,IAAM,OAAS,OAC/B,EAAGA,IAAa,IAAM,MAAQ,MAC9B,SAAS,WACT,IAAKqD,EACL,WACErD,IAAa,IAAM,oDAAsDF,EAAW,kCAAoC,OAE1H,GAAIE,IAAa,IAAM,MAAQ,OAC/B,OAAO,WACP,WAAW,SACX,SAAS,YAER,aAAa,KACZ1M,EAAAA,IAACa,EAAA,CACC,EAAE,MACF,EAAE,MACF,GAAG,OACH,aAAa,MACb,SAAS,WACT,IAAI,MACJ,KAAMsP,EACN,UAAU,mBACV,OAAO,GAAA,CAAA,CACT,CAAA,EAGN,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,CAEJ,CCpKA,MAAMG,GAA0B,CAAC,CAAE,aAAAtJ,EAAc,YAAAuJ,EAAc,GAAM,UAAAC,EAAY,GAAO,GAAGC,KAAqC,SAC9H,KAAM,CAAE,oBAAAvO,CAAA,EAAwBC,GAAA,EAE1B,CAAE,qBAAAa,CAAA,EAAyB7B,GAAA,EAC3BgG,EAAiBnE,EAAqBgE,GAAA,YAAAA,EAAc,EAAE,EAEtDI,EAAelF,GAAoB+C,EAAA+B,GAAA,YAAAA,EAAc,gBAAd,YAAA/B,EAA6B,UAAWkC,GAAA,YAAAA,EAAgB,mBAAoB,IAAI,EAEnHE,EAAenF,GAAoBwD,EAAAsB,GAAA,YAAAA,EAAc,gBAAd,YAAAtB,EAA6B,UAAWyB,GAAA,YAAAA,EAAgB,mBAAoB,IAAI,EACnHuC,EAAcF,EAAAA,QAAQ,IACtBpC,IAAiB,MAAQC,IAAiB,KACrCsC,GAAe,EAAEvC,CAAY,EAAE,KAAKC,CAAY,EAAE,SAAA,EAAY,CAAC,EAEjE,MACN,CAACD,EAAcC,CAAY,CAAC,EAEzB,CAAE,MAAA2D,CAAA,EAAUC,GAAA,EAClB,OACEK,EAAAA,KAACrL,EAAA,CAAO,IAAI,MACT,SAAA,EAAA+G,GAAA,YAAAA,EAAc,UAAW,QAAUhH,EAAAA,IAAC0Q,GAAA,CAAA,CAAa,QACjD7P,EAAA,CAAI,EAAE,SAAS,QAASX,GAAKC,GAAaD,CAAC,EAC1C,SAAAoL,OAACC,GAAA,CAAQ,OAAM,GAAC,QAASP,EAAQ,QAAU,QAAS,UAAU,YAC5D,SAAA,CAAAhL,EAAAA,IAACwL,IACC,SAAAxL,MAACM,GAAA,CAAO,GAAG,SAAS,OAASiQ,EAAuB,OAAT,OACzC,SAAAvQ,EAAAA,IAAC8M,GAAS,SAAU,CAAC,CAACpD,GAAe,CAAC,CAAC1G,EACrC,SAAAhD,EAAAA,IAACK,EAAA,CACC,MAAM,eACN,SAAS,OACT,eAAgBmQ,GAAa,CAACD,EAAc,OAAS,mBACrD,oBAAoB,MACnB,GAAGE,EAEH,SAAA/G,CAAA,CAAA,CACH,CACF,EACF,EACF,EACC6G,GACCvQ,EAAAA,IAACyL,GAAA,CACC,SAAAzL,EAAAA,IAAC0L,GAAA,CAAe,OAAO,IAAI,KAAK,QAAQ,EAAE,QAAQ,EAAE,OAClD,SAAA1L,EAAAA,IAAC2L,GAAA,CAAY,aAAa,OAAO,EAAE,MACjC,gBAACC,EAAA,CAAO,MAAM,aAAa,KAAK,QAC9B,SAAA,CAAAN,EAAAA,KAACrL,EAAA,CACC,EAAE,OACF,QAAQ,gBACR,aAAa,YACb,YAAY,SACZ,GAAG,MACH,GAAI,CACF,MAAO,CACL,aAAc,OACd,GAAI,KAAA,CACN,EAGF,SAAA,CAAAD,EAAAA,IAAC6L,GAAA,CACC,MAAO7E,GAAA,YAAAA,EAAc,cACrB,YAAa,CAAE,EAAG,OAAQ,EAAG,MAAA,EAC7B,SAAU,GACV,eAAe,OACf,YAAa,CAAE,MAAO,OAAQ,MAAO,MAAA,CAAO,CAAA,EAE9CsE,EAAAA,KAACM,EAAA,CAAO,MAAM,WAAW,IAAI,MAC3B,SAAA,CAAA5L,EAAAA,IAACK,EAAA,CAAK,SAAS,OAAO,MAAM,eACzB,SAAA+E,GAAqB+B,GAAA,YAAAA,EAAgB,kBAAkB,CAAA,CAC1D,QACC9G,EAAA,CAAK,SAAS,OAAQ,SAAAsJ,GAAevC,EAAc,CAAC,CAAA,CAAE,CAAA,CAAA,CACzD,CAAA,CAAA,CAAA,EAEFkE,EAAAA,KAACrL,EAAA,CAAO,EAAE,OAAO,QAAQ,gBACvB,SAAA,CAAAD,EAAAA,IAAC6L,GAAA,CACC,MAAO7E,GAAA,YAAAA,EAAc,cACrB,YAAa,CAAE,EAAG,OAAQ,EAAG,MAAA,EAC7B,SAAU,GACV,eAAe,OACf,YAAa,CAAE,MAAO,OAAQ,MAAO,MAAA,CAAO,CAAA,EAE9CsE,EAAAA,KAACM,EAAA,CAAO,MAAM,WAAW,IAAI,MAC3B,SAAA,CAAA5L,EAAAA,IAACK,EAAA,CAAK,SAAS,OAAO,MAAM,eACzB,SAAA+E,GAAqB+B,GAAA,YAAAA,EAAgB,kBAAkB,CAAA,CAC1D,QACC9G,EAAA,CAAK,SAAS,OAAQ,SAAAsJ,GAAetC,EAAc,CAAC,CAAA,CAAE,CAAA,CAAA,CACzD,CAAA,CAAA,CACF,CAAA,EACF,CAAA,CACF,EACF,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,CACF,CAAA,EACF,CAEJ,EC9FA,SAASsJ,GAAwB,CAC/B,aAAA3J,EACA,kBAAAsG,EAAoB,CAAA,EACpB,YAAAnB,EACA,eAAAoB,EACA,gBAAAC,CACF,EAMG,SACD,KAAM,CAAE,MAAAxC,CAAA,EAAUC,GAAA,EACZ,CAAE,eAAA2B,CAAA,EAAmBC,GAAA,EACrBa,EAAWC,GAAA,EACX,CAAE,uBAAAC,CAAA,EAA2BgD,GAAA,EAC7B,CAAE,wBAAAtH,EAAyB,yBAAAC,EAA0B,eAAAxG,EAAgB,mBAAAD,EAAoB,qBAAAE,EAAsB,cAAA6N,CAAA,EACnH1P,GAAA,EACIoL,EAA6BjD,EAAwBtC,GAAA,YAAAA,EAAc,EAAE,EACrEkF,EAAY1C,EAAAA,QAAQ,IAAMxC,GAAA,YAAAA,EAAc,UAAW,CAACA,GAAA,YAAAA,EAAc,SAAS,CAAC,EAE5EgH,EAAeC,GAAmC,CACtD,QAAQ,IAAI,4BAA6BjH,EAAciH,CAAM,EAE3DL,EADEK,GAGqB,UAFM,EAI/BP,EAAS,yBAAyB1G,GAAA,YAAAA,EAAc,EAAE,EAAE,CACtD,EAEM,CAACkH,EAAcC,CAAe,EAAIlM,EAAAA,SAAS,EAAK,EAEhD,CAAE,oBAAAC,CAAA,EAAwBC,GAAA,EAC1BiM,EAAsBpL,EAAqBgE,GAAA,YAAAA,EAAc,EAAY,EACrEI,GAAelF,GAAoB+C,EAAA+B,GAAA,YAAAA,EAAc,gBAAd,YAAA/B,EAA6B,UAAWmJ,GAAA,YAAAA,EAAqB,kBAAkB,EAClH/G,GAAenF,GAAoBwD,EAAAsB,GAAA,YAAAA,EAAc,gBAAd,YAAAtB,EAA6B,UAAW0I,GAAA,YAAAA,EAAqB,kBAAkB,EAClHC,EAAgB7E,EAAAA,QAAQ,IACrB,EAAEpC,EAAY,EAAE,KAAKC,EAAY,EAAE,SAAA,EACzC,CAACD,GAAcC,EAAY,CAAC,EAEzB,CAAE,4BAAAyJ,CAAA,EAAgCC,GAAA,EAElC,CAACnC,EAAaC,CAAc,EAAI5M,EAAAA,SAAc,IAAI,EAClD,CAAC6M,GAAYC,CAAa,EAAI9M,EAAAA,SAAkB,EAAI,EACpD,CAAC4G,GAAcmG,CAAe,EAAI/M,EAAAA,SAAc,IAAI,EACpD,CAAC6G,EAAuBmG,CAAwB,EAAIhN,EAAAA,SAAc,IAAI,EAGtEuK,GAAWD,GAAA,YAAAA,EAA4B,iBAAkB,SAEzD2C,EAAuB,SAAY,CACvC,GAAI,CACF,MAAMzN,EAAM,MAAMqP,EAA4B9J,GAAA,YAAAA,EAAc,GAAIqH,CAAa,EAC7E,GAAI5M,EAAK,CACP,KAAM,CAAE,WAAA0N,EAAY,oBAAAC,EAAqB,aAAAC,CAAA,EAAiB5N,EAC1D,QAAQ,IAAI,8EAA+E4N,CAAY,EACvGR,EAAeM,CAAU,EACzB0B,EAAc,CAAE,CAAC7J,GAAA,YAAAA,EAAc,EAAE,EAAGwF,EAAW2C,EAAa,KAAM,EAClEH,EAAgBI,CAAmB,EACnCH,EAAyBI,CAAY,CACvC,MACER,EAAe,IAAI,EACnBG,EAAgB,IAAI,EAEtBD,EAAc,EAAK,CACrB,MAAgB,CACdA,EAAc,EAAK,CACrB,QAAA,CACEA,EAAc,EAAK,CACrB,CACF,EAEAO,GACE,IAAM,CACAtI,GAAA,MAAAA,EAAc,KACZqH,GAAiB,EAAEA,CAAa,EAAE,GAAG,CAAC,EACxCa,EAAA,EAEId,IAAwB,SAC1BS,EAAe,IAAI,EACnBG,EAAgB,IAAI,EACpBD,EAAc,EAAK,GAI3B,EACA,CAAC/H,GAAA,YAAAA,EAAc,GAAIqH,CAAa,EAChC,CAAE,KAAM,GAAA,CAAK,EAGfkB,GAAY,CACV,SAAU,GAAK,IACf,SAAU,IAAM,CACVX,IAAgB,MAClBM,EAAA,CAEJ,CAAA,CACD,EAOD,KAAM,CAACZ,EAAMC,CAAO,EAAItM,EAAAA,SAAS,IAAI,EAC/B,CAAC0E,EAAS6H,CAAU,EAAIvM,EAAAA,SAAS,IAAI,EAY3C,OACEjC,EAAAA,IAACwP,GAAA,CACC,aAAc,IAAM,CAClB,WAAW,IAAM,CACfrB,EAAgB,EAAI,CACtB,EAAG,EAAE,CACP,EACA,aAAc,IAAM,CAClB,WAAW,IAAM,CACfA,EAAgB,EAAK,CACvB,EAAG,EAAE,CACP,EACA,EAAE,OACF,GAAG,cACH,OAAO,OACP,EAAG,CAAE,KAAM,gBAAiB,GAAI,YAAA,EAChC,aAAa,OACb,QAAS,IAAMH,EAAA,EACf,OAAO,UAEP,SAAAhO,EAAAA,IAACC,GAAO,EAAE,OAAO,QAAQ,gBAAgB,cAAe,CAAE,KAAM,SAAU,GAAI,KAAA,EAC5E,gBAAC2L,EAAA,CAAO,EAAE,OAAO,MAAM,aAAa,IAAI,OACrC,SAAA,CAAAZ,GACCM,EAAAA,KAACrL,EAAA,CAAO,cAAe,CAAE,KAAM,SAAU,GAAI,KAAA,EAAS,EAAG,CAAE,KAAM,OAAQ,GAAI,SAC3E,SAAA,CAAAqL,EAAAA,KAACrL,EAAA,CAAO,EAAG,CAAE,KAAM,OAAQ,GAAI,OAAA,EAAW,QAAS,CAAE,KAAM,gBAAiB,GAAI,cAC9E,SAAA,CAAAD,EAAAA,IAACK,EAAA,CAAK,MAAM,eAAe,SAAU,CAAE,KAAM,OAAQ,GAAI,MAAA,EAAU,SAAA,QAAA,CAEnE,EACAL,MAAC8M,GAAS,SAAU,CAAC,CAACZ,EACpB,SAAAlM,EAAAA,IAACK,GAAK,WAAW,MAAM,SAAU,CAAE,KAAM,OAAQ,GAAI,MAAA,EAAU,MAAM,eAClE,WACH,CAAA,CACF,CAAA,EACF,EACAiL,EAAAA,KAACrL,EAAA,CAAO,EAAG,CAAE,KAAM,OAAQ,GAAI,OAAA,EAAW,QAAS,CAAE,KAAM,gBAAiB,GAAI,cAC9E,SAAA,CAAAD,MAACK,GAAK,MAAM,eAAe,SAAU,CAAE,KAAM,OAAQ,GAAI,MAAA,EAAU,GAAI,CAAE,KAAM,IAAK,GAAI,KAAA,EAAS,SAAA,UAEjG,EACAL,EAAAA,IAACkN,GAAA,CACC,WAAW,MACX,MAAM,eACN,QAASlG,GAAA,YAAAA,EAAc,GACvB,SAAU,GACV,SAAU,CAAE,KAAM,OAAQ,GAAI,MAAA,EAC9B,YAAa,IAAM,CACjB,OAAO,KAAK4F,EAAe5F,GAAA,YAAAA,EAAc,GAAI,YAAY,EAAG,QAAQ,CACtE,CAAA,CAAA,CACF,CAAA,CACF,CAAA,EACF,SAED/G,EAAA,CAAO,EAAE,OAAO,QAAQ,gBAAgB,cAAe,CAAE,KAAM,SAAU,GAAI,KAAA,EAAS,IAAK,CAAE,KAAM,OAAQ,GAAI,OAC9G,SAAA,CAAAqL,EAAAA,KAACrL,GAAO,EAAG,CAAE,KAAM,OAAQ,GAAIqN,EAAkB,CAAC,CAAA,EAAK,QAAS,CAAE,KAAM,gBAAiB,GAAI,YAC1F,SAAA,CAAAtC,SACE3K,EAAA,CAAK,MAAM,eAAe,WAAW,SAAS,SAAA,cAE/C,QAEDuP,GAAA,CAAuB,aAAA5I,EAA4B,UAAAkF,EAAsB,YAAAC,EAA0B,WAAY+B,CAAA,CAAc,CAAA,EAChI,SAEGjO,EAAA,CAAO,EAAG,CAAE,KAAM,OAAQ,GAAIqN,EAAkB,CAAC,CAAA,EAAK,QAAS,CAAE,KAAM,gBAAiB,GAAI,YAC1F,SAAA,CAAAtC,GAASnL,IACRyL,OAACrL,EAAA,CAAO,IAAI,MACV,SAAA,CAAAD,EAAAA,IAACK,EAAA,CAAK,MAAM,eAAe,SAAA,MAAG,EAC9BL,EAAAA,IAACyP,GAAA,CACC,kBACG,OAAA,CAAK,SAAA,CAAA,kKAE2B,KAAA,EAAG,EAAE,sDAAA,CAAA,CAEtC,CAAA,CAAA,CAEJ,EACF,EAcAzP,EAAAA,IAAC8M,EAAA,CAAS,SAAU,CAACgC,IAAcV,IAAwB,OAAW,EAAE,OACtE,eAAC/N,EAAA,CAAK,MAAM,eAAgB,SAAAmM,EAAWoC,EAAc,KAAK,CAAA,CAC5D,CAAA,EAEJ,SAGD3O,EAAA,CAAO,EAAE,UAAU,EAAG,CAAE,KAAM,OAAQ,GAAIqN,EAAkB,CAAC,CAAA,EAAK,QAAS,CAAE,KAAM,gBAAiB,GAAI,YACtG,SAAA,CAAAtC,GAAShL,EAAAA,IAACK,EAAA,CAAK,MAAM,eAAe,SAAA,YAAS,EAC9CL,EAAAA,IAAC0P,IACC,SAAA1P,EAAAA,IAACsQ,GAAA,CAAwB,aAAAtJ,EAA4B,SAAS,OAAO,UAAS,EAAA,CAAC,CAAA,CACjF,CAAA,EACF,EAEEsE,EAAAA,KAACrL,EAAA,CAAO,EAAG,CAAE,KAAM,OAAQ,GAAIqN,EAAkB,CAAC,CAAA,EAAK,QAAS,CAAE,KAAM,gBAAiB,GAAI,YAC1F,SAAA,CAAAtC,GAAShL,EAAAA,IAACK,EAAA,CAAK,MAAM,eAAe,SAAA,kBAAe,QACnD2I,GAAA,CAAkB,aAAAhC,EAA4B,WAAYuG,GAAkBC,GAAmB,EAAA,CAAO,CAAA,EACzG,EAGAlC,EAAAA,KAACrL,EAAA,CAAO,EAAG,CAAE,KAAM,OAAQ,GAAIqN,EAAkB,CAAC,CAAA,EAAK,QAAS,CAAE,KAAM,gBAAiB,GAAI,YAC1F,SAAA,CAAAtC,GAAShL,EAAAA,IAACK,EAAA,CAAK,MAAM,eAAe,SAAA,mBAAgB,EACrDL,EAAAA,IAAC8M,GAAS,SAAU,CAACgC,IAAcV,IAAwB,OAAW,EAAE,OACtE,SAAApO,EAAAA,IAAC4I,GAAA,CACC,aAAA5B,EACA,aAAcwF,EAAW3D,GAAe,KACxC,sBAAuB2D,EAAW1D,EAAwB,KAC1D,WAAYyE,GAAkBC,GAAmB,EAAA,CAAA,CACnD,CACF,CAAA,EACF,EAED,CAAC3N,GASD,CAACA,GAYFyL,EAAAA,KAACrL,EAAA,CACC,EAAG,CAAE,KAAM,OAAQ,GAAIqN,EAAkB,CAAC,CAAA,EAC1C,QAAS,CAAE,KAAM,gBAAiB,GAAI,YAAA,EACtC,QAAS,CAAE,KAAM,MAAO,GAAI,aAAA,EAE3B,SAAA,EAAAtG,GAAA,YAAAA,EAAc,WAAY,QACzBhH,EAAAA,IAACa,GAAI,EAAG,CAAE,KAAM,2BAA4B,GAAI,MAAA,EAAU,GAAI,CAAE,OAAQ,CAAE,EAAG,MAAA,GAC3E,SAAAb,EAAAA,IAACI,GAAA,CACC,UAAU,MACV,cACGC,EAAA,CAAK,SAAS,OAAO,WAAW,OAAO,MAAM,eAAe,SAAA,KAAA,CAE7D,EAEF,YAAa,CAAC2K,EAEd,SAAAM,EAAAA,KAACU,GAAA,CACC,QAAQ,UACR,SAAS,OACT,GAAG,qBACH,EAAE,OACF,aAAa,MACb,QAAU9L,GAAW,CACnBC,GAAaD,CAAC,EACd8N,EAAY,UAAU,CACxB,EAEC,SAAA,CAAA,CAAChD,GAAShL,EAAAA,IAACmN,GAAA,CAAK,UAAU,oBAAoB,QAAQ,UAAU,SAAS,UAAU,SAAS,MAAA,CAAO,EACnGnC,GACChL,EAAAA,IAACK,EAAA,CAAK,MAAM,UAAU,SAAS,OAAO,SAAA,UAAA,CAEtC,CAAA,CAAA,CAAA,CAEJ,CAAA,EAEJ,GAED2G,GAAA,YAAAA,EAAc,WAAY,cACxBnG,EAAA,CAAI,EAAG,CAAE,KAAM,2BAA4B,GAAI,MAAA,EAAU,GAAI,CAAE,OAAQ,CAAE,EAAG,MAAA,GAC3E,SAAAb,EAAAA,IAACI,GAAA,CACC,UAAU,MACV,cACGC,EAAA,CAAK,SAAS,OAAO,WAAW,OAAO,MAAM,eAAe,SAAA,QAAA,CAE7D,EAEF,YAAa,CAAC2K,EAEd,SAAAM,EAAAA,KAACU,GAAA,CACC,QAAQ,UACR,SAAS,OACT,GAAG,qBACH,EAAE,OACF,aAAa,MACb,QAAU9L,GAAW,CACnBC,GAAaD,CAAC,EACd8N,EAAY,QAAQ,CACtB,EAEC,SAAA,CAAA,CAAChD,GAAShL,EAAAA,IAACmN,GAAA,CAAK,UAAU,kBAAkB,QAAQ,iBAAiB,SAAS,iBAAiB,SAAS,MAAA,CAAO,EAC/GnC,GACChL,EAAAA,IAACK,EAAA,CAAK,MAAM,UAAU,SAAS,OAAO,SAAA,QAAA,CAEtC,CAAA,CAAA,CAAA,CAEJ,CAAA,CACF,CACF,CAAA,CAAA,CAAA,CAyBJ,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAAA,CA2EN,CCzbA,SAAS2Q,GAAoB,CAAE,SAAAC,EAAU,aAAAjK,EAAc,GAAGyJ,GAAkC,CAC1F,OAAOQ,IAAa,OAClBjR,EAAAA,IAAC2Q,GAAA,CAAwB,aAAA3J,EAAgD,GAAGyJ,CAAA,CAAM,EAElFzQ,EAAAA,IAACqN,GAAA,CAAwB,aAAArG,EAA4C,GAAGyJ,CAAA,CAAM,CAElF"}