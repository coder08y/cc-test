{"version":3,"file":"useTransactionModal-DhEdYJgg.js","sources":["../../../hooks/src/useTransactionModal.ts"],"sourcesContent":["import { useTransactionStore } from '@cetus/stores/src'\nimport { ToastType } from '@cetus/types/src/common-types'\nimport { useEffect, useRef } from 'react'\n\nexport default function useTransactionModal() {\n  const { setTransactionData, setTransactionModalVisible, manualCloseIdList } = useTransactionStore()\n\n  const manualCloseIdListRef = useRef(manualCloseIdList)\n\n  useEffect(() => {\n    manualCloseIdListRef.current = manualCloseIdList\n  }, [manualCloseIdList])\n\n  const isDisableModal = (id?: string) => {\n    if (id) {\n      const isDisable = manualCloseIdListRef.current.includes(id)\n      if (isDisable) {\n        setTransactionModalVisible(false)\n      }\n      return isDisable\n    }\n\n    return false\n  }\n\n  const transactionConfirmation = (props: ToastType) => {\n    if (isDisableModal(props.transactionId)) {\n      return\n    }\n    setTransactionData({\n      ...props,\n      status: 'confirmation'\n    })\n    setTransactionModalVisible(true)\n  }\n\n  const transactionSubmitted = (props: ToastType) => {\n    if (isDisableModal(props.transactionId)) {\n      return\n    }\n    setTransactionModalVisible(false)\n    setTransactionData({\n      ...props,\n      status: 'submitted'\n    })\n    setTransactionModalVisible(true)\n  }\n\n  const transactionSuccess = (props: ToastType) => {\n    if (isDisableModal(props.transactionId)) {\n      return\n    }\n    setTransactionModalVisible(false)\n    setTransactionData({\n      ...props,\n      status: 'success'\n    })\n    setTransactionModalVisible(true)\n  }\n\n  const transactionRejected = (props: ToastType, list = manualCloseIdList) => {\n    console.log('ðŸš€ ~ file: useTransactionModal.ts:10 ~ useTransactionModal ~ id 55:', manualCloseIdList)\n    if (isDisableModal(props.transactionId)) {\n      return\n    }\n    setTransactionModalVisible(false)\n    setTransactionData({\n      ...props,\n      status: 'rejected'\n    })\n    setTransactionModalVisible(true)\n  }\n\n  const closeTransactionModal = () => {\n    setTransactionModalVisible(false)\n  }\n\n  return { transactionConfirmation, transactionSubmitted, transactionSuccess, transactionRejected, closeTransactionModal }\n}\n"],"names":["useTransactionModal","setTransactionData","setTransactionModalVisible","manualCloseIdList","useTransactionStore","manualCloseIdListRef","useRef","useEffect","isDisableModal","id","isDisable","props","list"],"mappings":"kFAIA,SAAwBA,GAAsB,CAC5C,KAAM,CAAE,mBAAAC,EAAoB,2BAAAC,EAA4B,kBAAAC,CAAA,EAAsBC,EAAA,EAExEC,EAAuBC,EAAAA,OAAOH,CAAiB,EAErDI,EAAAA,UAAU,IAAM,CACdF,EAAqB,QAAUF,CACjC,EAAG,CAACA,CAAiB,CAAC,EAEtB,MAAMK,EAAkBC,GAAgB,CACtC,GAAIA,EAAI,CACN,MAAMC,EAAYL,EAAqB,QAAQ,SAASI,CAAE,EAC1D,OAAIC,GACFR,EAA2B,EAAK,EAE3BQ,CACT,CAEA,MAAO,EACT,EAsDA,MAAO,CAAE,wBApDwBC,GAAqB,CAChDH,EAAeG,EAAM,aAAa,IAGtCV,EAAmB,CACjB,GAAGU,EACH,OAAQ,cAAA,CACT,EACDT,EAA2B,EAAI,EACjC,EA2CkC,qBAzCJS,GAAqB,CAC7CH,EAAeG,EAAM,aAAa,IAGtCT,EAA2B,EAAK,EAChCD,EAAmB,CACjB,GAAGU,EACH,OAAQ,WAAA,CACT,EACDT,EAA2B,EAAI,EACjC,EA+BwD,mBA7B5BS,GAAqB,CAC3CH,EAAeG,EAAM,aAAa,IAGtCT,EAA2B,EAAK,EAChCD,EAAmB,CACjB,GAAGU,EACH,OAAQ,SAAA,CACT,EACDT,EAA2B,EAAI,EACjC,EAmB4E,oBAjBhD,CAACS,EAAkBC,EAAOT,IAAsB,CAC1E,QAAQ,IAAI,sEAAuEA,CAAiB,EAChG,CAAAK,EAAeG,EAAM,aAAa,IAGtCT,EAA2B,EAAK,EAChCD,EAAmB,CACjB,GAAGU,EACH,OAAQ,UAAA,CACT,EACDT,EAA2B,EAAI,EACjC,EAMiG,sBAJnE,IAAM,CAClCA,EAA2B,EAAK,CAClC,CAEiG,CACnG"}