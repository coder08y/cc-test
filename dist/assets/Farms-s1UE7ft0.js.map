{"version":3,"file":"Farms-s1UE7ft0.js","sources":["../../src/components/farms/FarmsBanner.tsx","../../src/components/farms/FarmsListH5.tsx","../../src/components/farms/FarmsTabFilter.tsx","../../src/hooks/farms/useGetFarmList.ts","../../src/pages/Farms.tsx"],"sourcesContent":["import useFarmsActions from '@/hooks/farms/useFarmsAction'\nimport usePositionList from '@/hooks/position/usePositionList'\nimport usePositionStore from '@/store/position'\nimport { useAccountStore } from '@cetus/stores'\nimport { d, formatCurrency } from '@cetus/utils'\nimport { Box, Button, Skeleton, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useRef } from 'react'\n\ntype FarmsBannerProps = {\n  totalRewards: string\n}\n\nexport function FarmsBanner(props: FarmsBannerProps) {\n  const { totalRewards } = props\n  const { currentAccount } = useAccountStore()\n  const { posBaseList } = usePositionStore()\n  const { getPositionBaseList, getPosRelatedData } = usePositionList()\n  const { toClaimAllPos, claimLoading } = useFarmsActions()\n  const rewardRef = useRef<HTMLParagraphElement | null>(null)\n  const getPosList = async () => {\n    if (currentAccount?.address) {\n      await getPositionBaseList(currentAccount?.address as string)\n    }\n  }\n  const toClaimAll = () => {\n    toClaimAllPos(posBaseList, getPosList)\n  }\n\n  useEffect(() => {\n    if (rewardRef?.current) {\n      rewardRef.current.textContent = formatCurrency(totalRewards, 2)\n    }\n  }, [totalRewards])\n  return (\n    <VStack\n      w=\"100%\"\n      pos=\"absolute\"\n      alignItems=\"start\"\n      sx={{\n        backgroundImage: { base: \"url('/images/farms_banner_h5.png')\", lg: \"url('/images/farms.png')\" },\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat'\n      }}\n    >\n      <VStack minW={{ base: '100%', lg: '1200px' }} p=\"40px 20px 0\" margin=\"0px auto\" gap=\"12px\" h=\"240px\" alignItems=\"start\">\n        <Text color=\"text_caption\" fontSize=\"28px\" fontWeight=\"500\">\n          Farms\n        </Text>\n        <Text fontSize=\"16px\">Stake your positions to earn higher yield.</Text>\n        {currentAccount?.address && (\n          <Box h=\"20px\" mt=\"16px\">\n            <Skeleton isLoaded={!!totalRewards}>\n              <Text color=\"primary\" fontSize=\"20px\" fontWeight=\"500\" ref={rewardRef}>\n                {/* {formatCurrency(totalRewards, 2)} */}\n              </Text>\n            </Skeleton>\n          </Box>\n        )}\n        {currentAccount?.address && (\n          <Button\n            isLoading={claimLoading}\n            isDisabled={claimLoading || totalRewards == '--' ? true : d(totalRewards).lte(0)}\n            // w=\"170px\"\n            h=\"28px\"\n            fontSize=\"14px\"\n            borderRadius=\"8px\"\n            onClick={toClaimAll}\n          >\n            Claim All Rewards\n          </Button>\n        )}\n      </VStack>\n    </VStack>\n  )\n}\n","import usePositionStore from '@/store/position'\nimport { PoolApiInfo, PosBaseInfo, PosReward } from '@/types'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport { useAccountStore } from '@cetus/stores'\nimport useTokenPriceStore from '@cetus/stores/src/tokenPrice'\nimport { Icon, NoData } from '@cetus/ui-kit'\nimport { d } from '@cetus/utils'\nimport { Box, Button, HStack, Skeleton, SkeletonCircle, Text, VStack } from '@chakra-ui/react'\nimport { ReactNode, useMemo, useState } from 'react'\nimport AprTooltip from '../common/aprTooltip'\nimport { FarmsExpendBlock } from './FarmsTableItem'\nimport { RewardsBlock } from './RewardsBlock'\nimport { StakedBlock } from './StakedBlock'\nimport { TotalEarnedBlock } from './TotalEarnedBlock'\nimport { ValidRangeBlock } from './ValidRangeBlock'\n\ntype FarmsListH5Props = {\n  dataList: any\n  showSkeletonLoading: boolean\n  currTabLabel: string\n}\n\nfunction FarmsListH5({ dataList, showSkeletonLoading, currTabLabel }: FarmsListH5Props) {\n  const { currentAccount, onWalletModal } = useAccountStore()\n  return (\n    <>\n      {currTabLabel == 'Your Farms' && !currentAccount?.address ? (\n        <NoData\n          type=\"nowallet\"\n          onboard={() => {\n            onWalletModal(true)\n          }}\n        />\n      ) : showSkeletonLoading ? (\n        <FarmsH5Loading />\n      ) : dataList.length === 0 ? (\n        <NoData type=\"nodata\" text=\"No farms found\" />\n      ) : (\n        <VStack w=\"100%\">\n          {dataList.map((apiInfo: any) => {\n            return <H5Item key={apiInfo?.poolAddress} apiInfo={apiInfo} />\n          })}\n        </VStack>\n      )}\n    </>\n  )\n}\nconst H5Item = ({ apiInfo }: { apiInfo: PoolApiInfo }) => {\n  const { getTokenAmountValue } = useTokenPrice()\n  const { coinPriceObj } = useTokenPriceStore()\n  console.log('🚀 ~ FarmsTableItem ~ apiInfo:', apiInfo)\n  const { currentAccount, onWalletModal } = useAccountStore()\n\n  const [openExpendItemObj, setOpenExpendItemObj] = useState<Record<string, boolean>>({})\n\n  const { farmsPosRewardsDataLoading, farmsPosRewardsData, posBaseListLoading, posBaseListGroupByPool } = usePositionStore()\n\n  // 计算单个池子所有仓位的Earned\n  const totalEarned = useMemo(() => {\n    if (!currentAccount?.address || !apiInfo?.poolAddress) return '--'\n    if (!posBaseListLoading && !farmsPosRewardsDataLoading) {\n      // 用posBaseListGroupByPool[apiInfo.poolAddress]?.list遍历一个池子下的所有仓位\n      const posBaseList = posBaseListGroupByPool[apiInfo.poolAddress]?.list || []\n\n      // 累加所有仓位的farms奖励\n      return posBaseList.reduce((total: any, item: PosBaseInfo) => {\n        // 累加单个仓位的所有farms奖励\n        const posFarmsData = farmsPosRewardsData[item?.id] || []\n        console.log('🚀 ~ returnposBaseList.reduce ~ posFarmsData:', total, posFarmsData)\n        const totalAmount = posFarmsData.reduce((sum: any, rewardData: PosReward) => {\n          if (sum === '--') return '--'\n\n          const amountValue = getTokenAmountValue(rewardData?.token.coin_type, rewardData?.display_amount_owed, '--')\n          return amountValue === '--' ? '--' : d(sum).plus(amountValue).toString()\n        }, '0')\n\n        return total === '--' || totalAmount === '--' ? '--' : d(total).plus(totalAmount).toString()\n      }, '0')\n    }\n  }, [posBaseListLoading, farmsPosRewardsData, farmsPosRewardsDataLoading, coinPriceObj, currentAccount?.address])\n\n  const expendList = useMemo(() => {\n    const list =\n      posBaseListGroupByPool?.[apiInfo?.poolAddress]?.list\n        ?.filter(item => item.posType !== 'burn')\n        .sort((a: PosBaseInfo, b: PosBaseInfo) => Number(b.liquidity) - Number(a.liquidity)) || []\n    console.log('🚀 ~ expendList ~ list:', list)\n    return list\n  }, [apiInfo?.poolAddress, posBaseListGroupByPool])\n\n  return (\n    <VStack gap=\"16px\" w=\"100%\" align=\"flex-start\" bg=\"bg_fifth\" border=\"1px solid\" borderColor=\"border\" p=\"8px\" borderRadius=\"12px\">\n      <ValidRangeBlock apiInfo={apiInfo} />\n      <LabelValue\n        label=\"Staked TVL\"\n        value={\n          <Text fontWeight=\"500\" textColor=\"text_caption\" textAlign=\"right\">\n            {apiInfo?.farmsStatedTvlDisplay}\n          </Text>\n        }\n      />\n      <LabelValue label=\"APR\" value={<AprTooltip poolInfo={apiInfo} isPosition={true} />} />\n      <LabelValue label=\"Rewards / day\" value={<RewardsBlock apiInfo={apiInfo} />} />\n      <LabelValue label=\"Your Staked\" value={<StakedBlock apiInfo={apiInfo} />} />\n      <LabelValue\n        label=\"Your Earned\"\n        value={<TotalEarnedBlock totalEarned={totalEarned} apiInfo={apiInfo} disabled={totalEarned == '--' ? true : d(totalEarned).lte(0)} />}\n      />\n      <Button\n        w=\"100%\"\n        h=\"40px\"\n        borderRadius=\"8px\"\n        variant=\"ghost\"\n        onClick={() => {\n          if (openExpendItemObj[apiInfo?.poolAddress]) {\n            openExpendItemObj[apiInfo?.poolAddress] = false\n          } else {\n            openExpendItemObj[apiInfo?.poolAddress] = true\n          }\n          setOpenExpendItemObj({ ...openExpendItemObj })\n        }}\n        sx={{\n          _hover: {\n            svg: {\n              fill: 'text_caption'\n            }\n          }\n        }}\n      >\n        <Icon\n          svgW=\"16px\"\n          xlinkHref=\"#icon-icon_arrow\"\n          variant=\"gray\"\n          transition=\"transform 0.5s\"\n          transform={openExpendItemObj[apiInfo?.poolAddress] ? 'rotate(180deg)' : 'rotate(0deg)'}\n        />\n      </Button>\n      {openExpendItemObj[apiInfo?.poolAddress] && <FarmsExpendBlock expendList={expendList} apiInfo={apiInfo} />}\n    </VStack>\n  )\n}\nconst LabelValue = ({ label, value }: { label: string; value: ReactNode }) => {\n  return (\n    <HStack w=\"100%\" justify=\"space-between\">\n      <Text>{label}</Text>\n      {value}\n    </HStack>\n  )\n}\n\nconst FarmsH5Loading = () => {\n  return (\n    <VStack w=\"100%\" align=\"flex-start\">\n      {[{}, {}, {}].map((item, index) => {\n        return (\n          <VStack\n            key={index}\n            w=\"100%\"\n            align=\"flex-start\"\n            gap=\"16px\"\n            bg=\"bg_fifth\"\n            border=\"1px solid\"\n            borderColor=\"border\"\n            p=\"8px\"\n            borderRadius=\"12px\"\n          >\n            <HStack gap=\"0\">\n              <SkeletonCircle size=\"9\" />\n              <SkeletonCircle size=\"9\" />\n              <Box w=\"4px\" />\n              <Skeleton height=\"4\" width=\"150px\" />\n            </HStack>\n            <HStack w=\"100%\" gap=\"4px\" ml=\"4px\" justify=\"space-between\">\n              <Skeleton height=\"4\" width=\"120px\" />\n              <Skeleton height=\"4\" width=\"120px\" />\n            </HStack>\n            <HStack w=\"100%\" gap=\"4px\" ml=\"4px\" justify=\"space-between\">\n              <Skeleton height=\"4\" width=\"120px\" />\n              <Skeleton height=\"4\" width=\"120px\" />\n            </HStack>\n            <HStack w=\"100%\" gap=\"4px\" ml=\"4px\" justify=\"space-between\">\n              <Skeleton height=\"4\" width=\"120px\" />\n              <Skeleton height=\"4\" width=\"120px\" />\n            </HStack>\n            <HStack w=\"100%\" gap=\"4px\" ml=\"4px\" justify=\"space-between\">\n              <Skeleton height=\"4\" width=\"120px\" />\n              <Skeleton height=\"4\" width=\"120px\" />\n            </HStack>\n          </VStack>\n        )\n      })}\n    </VStack>\n  )\n}\nexport default FarmsListH5\n","import { SelectTab, SortDropBlock } from '@cetus/design'\nimport { Tab } from '@cetus/design/src/components/common/SelectTab'\nimport { SortDropType } from '@cetus/design/src/components/common/SortDropBlock'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { RefreshButton } from '@cetus/ui-kit'\nimport { HStack } from '@chakra-ui/react'\nexport type sortRule = 'desc' | 'asc'\nexport type TabFilterProps = {\n  sortByList: SortDropType[]\n  currTab: Tab<object>\n  tabList: Tab<object>[]\n  currSortType: SortDropType\n  sortRule: sortRule\n  handleChangeTab: (tab: Tab<object>) => void\n  onSortByChange: (type: SortDropType) => void\n  handleChangeSortRule: (sortRule: sortRule) => void\n  handleRefresh: () => void\n}\n\nexport function FarmsTabFilter(props: TabFilterProps) {\n  const { sortByList, currTab, tabList, handleChangeTab, currSortType, onSortByChange, sortRule, handleRefresh, handleChangeSortRule } = props\n  const { isApp } = useWindowWidth()\n\n  return (\n    <HStack\n      w=\"100%\"\n      mt={{ base: '20px', lg: '40px' }}\n      justify=\"space-between\"\n      flexDirection={{\n        base: 'column',\n        lg: 'row'\n      }}\n    >\n      {/* 切换Tab */}\n      <SelectTab\n        type=\"borderTab\"\n        wrapStyle={{\n          w: {\n            base: '100%',\n            lg: '415px'\n          },\n          h: '46px',\n          borderRadius: { base: '8px', lg: '12px' }\n        }}\n        itemStyle={{\n          w: '50%',\n          fontSize: '16px'\n        }}\n        tabList={tabList}\n        currentTab={currTab.label}\n        handleChangeTab={handleChangeTab}\n      />\n      <HStack w={{ base: '100%', lg: 'unset' }}>\n        {/* 选择排序类型 */}\n        <SortDropBlock\n          sortText=\"Sort by\"\n          xlinkHref={sortRule == 'desc' ? '#icon-icon_sort2' : '#icon-icon_sort_asc1'}\n          iconOnClick={() => {\n            if (sortRule === 'asc') {\n              handleChangeSortRule('desc')\n            } else {\n              handleChangeSortRule('asc')\n            }\n          }}\n          minW={isApp ? 'calc(100vw - 126px)' : '120px'}\n          currentSort={currSortType}\n          sortByList={sortByList}\n          onSortByChange={onSortByChange}\n          wrapStyle={{\n            borderRadius: { base: '8px', lg: '12px' }\n          }}\n        />\n        {/* <IconBg\n          xlinkHref={sortRule == 'desc' ? '#icon-icon_sort2' : '#icon-icon_sort_asc1'}\n          borderRadius={{ base: '8px', lg: '12px' }}\n          onClick={() => {\n            if (sortRule === 'asc') {\n              handleChangeSortRule('desc')\n            } else {\n              handleChangeSortRule('asc')\n            }\n          }}\n        /> */}\n        <RefreshButton handleRefresh={handleRefresh} borderRadius={{ base: '8px', lg: '12px' }} />\n      </HStack>\n    </HStack>\n  )\n}\n","import useGetPoolList from '@/hooks/pool/useGetPoolList'\n\nexport default function useGetFarmList() {\n  const { getPoolList } = useGetPoolList()\n\n  const getFarmList = async (orderBy: '-apr' | '-tvl' | 'apr' | 'tvl' = '-tvl') => {\n    const res = await getPoolList({\n      is_vaults: false,\n      display_all_pools: false,\n      has_mining: false,\n      has_farming: true,\n      no_incentives: false,\n      order_by: '-vol',\n      limit: 100,\n      offset: 0\n    })\n    console.log('🚀 ~ getFarmList ~ res:', res)\n\n    return res?.list?.sort((a: any, b: any) => {\n      if (orderBy === '-apr') {\n        return b.feeAndFarmsApr - a.feeAndFarmsApr\n      } else if (orderBy === 'apr') {\n        return a.feeAndFarmsApr - b.feeAndFarmsApr\n      } else if (orderBy === '-tvl') {\n        return b.farmsStatedTvl - a.farmsStatedTvl\n      } else {\n        return a.farmsStatedTvl - b.farmsStatedTvl\n      }\n    })\n  }\n\n  return {\n    getFarmList\n  }\n}\n","import { FarmsBanner } from '@/components/farms/FarmsBanner'\nimport FarmsListH5 from '@/components/farms/FarmsListH5'\nimport { FarmsTabFilter } from '@/components/farms/FarmsTabFilter'\nimport { FarmsTable } from '@/components/farms/FarmsTable'\nimport useGetFarmList from '@/hooks/farms/useGetFarmList'\nimport usePositionList from '@/hooks/position/usePositionList'\nimport usePositionStore from '@/store/position'\nimport { PosBaseInfo, PosReward } from '@/types'\nimport { Tab } from '@cetus/design/src/components/common/SelectTab'\nimport { SortDropType } from '@cetus/design/src/components/common/SortDropBlock'\nimport { useAccountBalance, useRpcListener } from '@cetus/hooks'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { useAccountStore } from '@cetus/stores'\nimport useTokenPriceStore from '@cetus/stores/src/tokenPrice'\nimport { d } from '@cetus/utils'\nimport { Box, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useMemo, useState } from 'react'\n\nfunction Farms() {\n  const { currentAccount } = useAccountStore()\n  const { getPositionBaseList, getPosRelatedData } = usePositionList()\n  const { posBaseList, posBaseListLoading, farmsPosRewardsData, farmsPosRewardsDataLoading } = usePositionStore()\n  const { getFarmList } = useGetFarmList()\n  const [farmsList, setFarmsList] = useState<any>([])\n  const [farmsLiveList, setFarmsLiveList] = useState<any>([])\n  const [myFarmsList, setMyFarmsList] = useState<any>([])\n  const [farmsListLoading, setFarmsListLoading] = useState<boolean>(true)\n  const [positionList, setPositionList] = useState<PosBaseInfo[]>([])\n  const { fetchAccountBalance } = useAccountBalance()\n\n  const [currTab, setCurrTab] = useState<Tab<object>>({\n    label: 'Live'\n  })\n\n  const sortByList: SortDropType[] = [\n    {\n      label: 'APR',\n      value: 'apr'\n    },\n    {\n      label: 'TVL',\n      value: 'tvl'\n    }\n  ]\n  const [queryOptions, setQueryOptions] = useState<any>({\n    sortRule: 'desc',\n    sortType: 'tvl'\n  })\n  const [currSortType, setCurrSortType] = useState<SortDropType>({\n    label: 'TVL',\n    value: 'tvl'\n  })\n\n  const tabList = useMemo(() => {\n    const list: Tab<object>[] = []\n    list.push({\n      label: 'Live',\n      num: !farmsListLoading ? farmsLiveList.length.toString() : undefined\n    })\n\n    list.push({\n      label: 'Your Farms',\n      num: myFarmsList.length > 0 && currentAccount?.address && !farmsListLoading ? myFarmsList.length.toString() : undefined\n    })\n    return list\n  }, [currTab.label, farmsListLoading, farmsLiveList, myFarmsList, currentAccount?.address])\n\n  const getPositionList = async () => {\n    if (currentAccount?.address) {\n      const list = await getPositionBaseList(currentAccount?.address, { isFarmsPage: true })\n      console.log('🚀 ~ getPositionList ~ currentAccount?.address:', currentAccount?.address)\n    } else {\n      setPositionList([])\n    }\n  }\n\n  // useEffect(() => {\n  //   console.log('🚀 ~ useEffect ~ posBaseList:', posBaseList)\n  //   getPosRelatedData(posBaseList, true)\n  // }, [JSON.stringify(posBaseList)])\n\n  const fetchFarmsList = async (queryOptions: any) => {\n    const order_by = queryOptions?.sortRule == 'desc' ? '-' + queryOptions?.sortType : queryOptions?.sortType\n    const res = await getFarmList(order_by)\n    if (res) {\n      setFarmsList(res)\n    }\n  }\n\n  useEffect(() => {\n    console.log('🚀 ~ Farms ~ positionList:', positionList)\n    if (farmsList.length > 0) {\n      if (currTab.label == 'Live') {\n        setFarmsLiveList(farmsList.filter((item: any) => item?.haveFarming))\n        setFarmsListLoading(false)\n      }\n\n      if (currentAccount?.address && positionList?.length > 0) {\n        const myList = farmsList.filter((item: { poolAddress: string }) => {\n          console.log('🚀🚀🚀 ~ Farms.tsx:106 ~ myList ~ item:', item)\n          const posItems = positionList?.filter(pos => pos?.posType === 'farms') // 获取所有符合条件的条目\n          console.log('🚀🚀🚀 ~ Farms.tsx:103 ~ myList ~ posItems:', posItems)\n          return posItems.some(pos => item?.poolAddress === pos?.clmmPool) // 检查是否有匹配\n        })\n        console.log('🚀🚀🚀 ~ Farms.tsx:104 ~ myList ~ myList:', myList)\n        setMyFarmsList(myList)\n      } else {\n        setMyFarmsList([])\n      }\n      if (!posBaseListLoading) {\n        setFarmsListLoading(false)\n      }\n    } else {\n      setFarmsLiveList([])\n      setMyFarmsList([])\n    }\n  }, [currTab.label, farmsList, currentAccount?.address, positionList, posBaseListLoading])\n\n  useEffect(() => {\n    fetchFarmsList(queryOptions)\n    if (currentAccount?.address) {\n      setFarmsListLoading(true)\n      getPositionList()\n    } else {\n      setPositionList([])\n    }\n  }, [currentAccount?.address])\n\n  useEffect(() => {\n    setPositionList(posBaseList)\n  }, [posBaseList])\n\n  const handleRefresh = () => {\n    setFarmsListLoading(true)\n    fetchFarmsList(queryOptions)\n    // fetchAccountBalance()\n    getPositionList()\n  }\n\n  useRpcListener({\n    onRpcChange: () => {\n      // getPositionList()\n      handleRefresh()\n    }\n  })\n\n  const { fetchTokenPrices } = useTokenPrice()\n\n  // 刷新页面时重新查token价格\n  const getTokensPrice = () => {\n    const coinTypeList: string[] = []\n    farmsList?.forEach((data: any) => {\n      if (!coinTypeList.includes(data.tokenA.coin_type)) {\n        coinTypeList.push(data.tokenA.coin_type)\n      }\n      if (!coinTypeList.includes(data.tokenB.coin_type)) {\n        coinTypeList.push(data.tokenB.coin_type)\n      }\n      if (data?.farmsRewarderList?.length > 0) {\n        data?.farmsRewarderList?.forEach((reward: any) => {\n          coinTypeList.push(reward?.coinType)\n        })\n      }\n    })\n    if (coinTypeList.length > 0) {\n      fetchTokenPrices(Array.from(new Set(coinTypeList)))\n    }\n  }\n\n  useEffect(() => {\n    if (farmsList?.length > 0) {\n      getTokensPrice()\n    }\n  }, [farmsList])\n\n  const { getTokenAmountValue } = useTokenPrice()\n  const { coinPriceObj } = useTokenPriceStore()\n\n  const totalEarned = useMemo(() => {\n    if (!currentAccount?.address) return '--'\n    if (!posBaseListLoading && !farmsPosRewardsDataLoading) {\n      // 累加所有仓位的farms奖励\n      return posBaseList.reduce((total: any, item: PosBaseInfo) => {\n        // 累加单个仓位的所有farms奖励\n        const posFarmsData = farmsPosRewardsData[item?.id] || []\n        const totalAmount = posFarmsData.reduce((sum: any, rewardData: PosReward) => {\n          if (sum === '--') return '--'\n\n          const amountValue = getTokenAmountValue(rewardData?.token.coin_type, rewardData?.display_amount_owed, '--')\n          return amountValue === '--' ? '--' : d(sum).plus(amountValue).toString()\n        }, '0')\n\n        return total === '--' || totalAmount === '--' ? '--' : d(total).plus(totalAmount).toString()\n      }, '0')\n    }\n  }, [posBaseListLoading, farmsPosRewardsData, farmsPosRewardsDataLoading, coinPriceObj, currentAccount?.address])\n  console.log('🚀 ~ totalEarned ~ totalEarned:', totalEarned)\n  const { isApp } = useWindowWidth()\n  return (\n    <VStack gap=\"20px\" w=\"100%\">\n      <FarmsBanner totalRewards={totalEarned as string} />\n      <Box h=\"220px\" />\n      {/* 切换Tab 和 排序 */}\n      <FarmsTabFilter\n        sortByList={sortByList}\n        currTab={currTab}\n        tabList={tabList}\n        handleChangeTab={(tab: Tab<object>) => {\n          setCurrTab(tab)\n        }}\n        currSortType={currSortType}\n        onSortByChange={(type: SortDropType) => {\n          setFarmsListLoading(true)\n          queryOptions.sortType = type.value as any\n          setQueryOptions({ ...queryOptions })\n          setCurrSortType(type)\n          fetchFarmsList(queryOptions)\n        }}\n        sortRule={queryOptions.sortRule}\n        handleChangeSortRule={(sortRule: any) => {\n          setFarmsListLoading(true)\n          queryOptions.sortRule = sortRule\n          setQueryOptions({ ...queryOptions })\n          fetchFarmsList(queryOptions)\n        }}\n        handleRefresh={handleRefresh}\n      />\n      {isApp && (\n        <Text w=\"100%\" fontSize=\"20px\" color=\"text_caption\" mb=\"-8px\">\n          Pools\n        </Text>\n      )}\n      {!isApp && (\n        <FarmsTable\n          dataList={currTab.label == 'Live' ? farmsLiveList : myFarmsList}\n          showSkeletonLoading={farmsListLoading}\n          currTabLabel={currTab?.label}\n        />\n      )}\n      {isApp && (\n        <FarmsListH5\n          dataList={currTab.label == 'Live' ? farmsLiveList : myFarmsList}\n          showSkeletonLoading={farmsListLoading}\n          currTabLabel={currTab?.label}\n        />\n      )}\n    </VStack>\n  )\n}\n\nexport default Farms\n"],"names":["FarmsBanner","props","totalRewards","currentAccount","useAccountStore","posBaseList","usePositionStore","getPositionBaseList","usePositionList","toClaimAllPos","claimLoading","useFarmsActions","rewardRef","useRef","getPosList","toClaimAll","useEffect","formatCurrency","jsx","VStack","Text","Box","Skeleton","Button","d","FarmsListH5","dataList","showSkeletonLoading","currTabLabel","onWalletModal","Fragment","NoData","FarmsH5Loading","apiInfo","H5Item","getTokenAmountValue","useTokenPrice","coinPriceObj","useTokenPriceStore","openExpendItemObj","setOpenExpendItemObj","useState","farmsPosRewardsDataLoading","farmsPosRewardsData","posBaseListLoading","posBaseListGroupByPool","totalEarned","useMemo","_a","total","item","posFarmsData","totalAmount","sum","rewardData","amountValue","expendList","list","_b","a","b","ValidRangeBlock","LabelValue","AprTooltip","RewardsBlock","StakedBlock","TotalEarnedBlock","Icon","FarmsExpendBlock","label","value","jsxs","HStack","index","SkeletonCircle","FarmsTabFilter","sortByList","currTab","tabList","handleChangeTab","currSortType","onSortByChange","sortRule","handleRefresh","handleChangeSortRule","isApp","useWindowWidth","SelectTab","SortDropBlock","RefreshButton","useGetFarmList","getPoolList","useGetPoolList","orderBy","res","Farms","getFarmList","farmsList","setFarmsList","farmsLiveList","setFarmsLiveList","myFarmsList","setMyFarmsList","farmsListLoading","setFarmsListLoading","positionList","setPositionList","useAccountBalance","setCurrTab","queryOptions","setQueryOptions","setCurrSortType","getPositionList","fetchFarmsList","order_by","myList","posItems","pos","useRpcListener","fetchTokenPrices","getTokensPrice","coinTypeList","data","reward","tab","type","FarmsTable"],"mappings":"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"}