{"version":3,"file":"SolidPieCountdown-B9kgZHE-.js","sources":["../../src/hooks/common/useRefValue.ts","../../src/components/swap/rfq/SolidPieCountdown.tsx"],"sourcesContent":["import { useEffect, useState } from 'react'\n\n/**\n * Hook to track changes in a ref value\n * @param ref The ref to track (can be undefined)\n * @param checkInterval The interval in milliseconds to check for changes (default: 1000ms)\n * @returns The current value of the ref or undefined if ref is undefined\n */\nexport function useRefValue<T>(ref: { current: T } | undefined, checkInterval: number = 1000): T | undefined {\n  const [value, setValue] = useState<T | undefined>(ref?.current)\n\n  useEffect(() => {\n    if (!ref) {\n      setValue(undefined)\n      return\n    }\n\n    const checkValue = () => {\n      const currentValue = ref.current\n      if (currentValue !== value) {\n        setValue(currentValue)\n      }\n    }\n\n    // Check immediately\n    checkValue()\n\n    // Set up interval to check periodically\n    const interval = setInterval(checkValue, checkInterval)\n\n    return () => clearInterval(interval)\n  }, [ref, value, checkInterval])\n\n  return value\n}\n","import { Box, HStack, Stack, Text } from '@chakra-ui/react'\nimport { useMemo } from 'react'\n\ntype SolidPieCountdownProps = {\n  totalSeconds: number\n  text_color?: string\n  text_size?: string\n  text_width?: string\n  angle_color?: string\n  outer_size?: string\n  inner_size?: string\n  rftCountdownFlag?: number\n}\n\nexport default function SolidPieCountdown({\n  totalSeconds,\n  text_color = 'circle_progress_color',\n  text_size = '14px',\n  text_width = '32px',\n  angle_color = '#76C8FF',\n  outer_size = '16px',\n  inner_size = '10px',\n  rftCountdownFlag\n}: SolidPieCountdownProps) {\n  const percentage = useMemo(() => {\n    if (rftCountdownFlag === undefined || totalSeconds <= 0) {\n      return 0\n    }\n    if (rftCountdownFlag <= 0) {\n      return 0\n    }\n    return ((totalSeconds - rftCountdownFlag) / totalSeconds) * 100\n  }, [rftCountdownFlag])\n\n  const angle = useMemo(() => `${Math.min(100, Math.max(0, percentage))}%`, [percentage])\n\n  return (\n    <HStack gap=\"0px\" justifyContent=\"center\">\n      {rftCountdownFlag && rftCountdownFlag > 0 && (\n        <Stack\n          w={outer_size}\n          h={outer_size}\n          border=\"1px solid rgba(118, 200, 255, 0.5)\"\n          borderRadius=\"50%\"\n          overflow=\"hidden\"\n          justifyContent=\"center\"\n          alignItems=\"center\"\n        >\n          <Box\n            w={inner_size}\n            h={inner_size}\n            borderRadius=\"50%\"\n            background={`conic-gradient(transparent ${angle}, ${angle_color} 0%)`}\n            transition=\"background 0.5s ease\"\n            filter=\"blur(0.3px)\"\n            style={{\n              WebkitBackfaceVisibility: 'hidden',\n              WebkitTransform: 'translateZ(0)',\n              WebkitPerspective: '1000',\n              WebkitFontSmoothing: 'antialiased'\n            }}\n          />\n        </Stack>\n      )}\n\n      {rftCountdownFlag && rftCountdownFlag > 0 && (\n        <Text w={text_width} lineHeight=\"24px\" textAlign=\"center\" fontSize={text_size} color={text_color}>\n          {`${rftCountdownFlag === undefined ? '' : Math.max(0, rftCountdownFlag || 0)}s`}\n        </Text>\n      )}\n    </HStack>\n  )\n}\n"],"names":["useRefValue","ref","checkInterval","value","setValue","useState","useEffect","checkValue","currentValue","interval","SolidPieCountdown","totalSeconds","text_color","text_size","text_width","angle_color","outer_size","inner_size","rftCountdownFlag","percentage","useMemo","angle","jsxs","HStack","jsx","Stack","Box","Text"],"mappings":"4EAQO,SAASA,EAAeC,EAAiCC,EAAwB,IAAqB,CAC3G,KAAM,CAACC,EAAOC,CAAQ,EAAIC,EAAAA,SAAwBJ,GAAA,YAAAA,EAAK,OAAO,EAE9DK,OAAAA,EAAAA,UAAU,IAAM,CACd,GAAI,CAACL,EAAK,CACRG,EAAS,MAAS,EAClB,MACF,CAEA,MAAMG,EAAa,IAAM,CACvB,MAAMC,EAAeP,EAAI,QACrBO,IAAiBL,GACnBC,EAASI,CAAY,CAEzB,EAGAD,EAAA,EAGA,MAAME,EAAW,YAAYF,EAAYL,CAAa,EAEtD,MAAO,IAAM,cAAcO,CAAQ,CACrC,EAAG,CAACR,EAAKE,EAAOD,CAAa,CAAC,EAEvBC,CACT,CCpBA,SAAwBO,EAAkB,CACxC,aAAAC,EACA,WAAAC,EAAa,wBACb,UAAAC,EAAY,OACZ,WAAAC,EAAa,OACb,YAAAC,EAAc,UACd,WAAAC,EAAa,OACb,WAAAC,EAAa,OACb,iBAAAC,CACF,EAA2B,CACzB,MAAMC,EAAaC,EAAAA,QAAQ,IACrBF,IAAqB,QAAaP,GAAgB,GAGlDO,GAAoB,EACf,GAEAP,EAAeO,GAAoBP,EAAgB,IAC3D,CAACO,CAAgB,CAAC,EAEfG,EAAQD,EAAAA,QAAQ,IAAM,GAAG,KAAK,IAAI,IAAK,KAAK,IAAI,EAAGD,CAAU,CAAC,CAAC,IAAK,CAACA,CAAU,CAAC,EAEtF,OACEG,EAAAA,KAACC,EAAA,CAAO,IAAI,MAAM,eAAe,SAC9B,SAAA,CAAAL,GAAoBA,EAAmB,GACtCM,EAAAA,IAACC,EAAA,CACC,EAAGT,EACH,EAAGA,EACH,OAAO,qCACP,aAAa,MACb,SAAS,SACT,eAAe,SACf,WAAW,SAEX,SAAAQ,EAAAA,IAACE,EAAA,CACC,EAAGT,EACH,EAAGA,EACH,aAAa,MACb,WAAY,8BAA8BI,CAAK,KAAKN,CAAW,OAC/D,WAAW,uBACX,OAAO,cACP,MAAO,CACL,yBAA0B,SAC1B,gBAAiB,gBACjB,kBAAmB,OACnB,oBAAqB,aAAA,CACvB,CAAA,CACF,CAAA,EAIHG,GAAoBA,EAAmB,GACtCM,EAAAA,IAACG,EAAA,CAAK,EAAGb,EAAY,WAAW,OAAO,UAAU,SAAS,SAAUD,EAAW,MAAOD,EACnF,SAAA,GAAGM,IAAqB,OAAY,GAAK,KAAK,IAAI,EAAGA,GAAoB,CAAC,CAAC,GAAA,CAC9E,CAAA,EAEJ,CAEJ"}