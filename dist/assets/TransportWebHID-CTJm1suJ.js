var _=Object.defineProperty;var N=(o,t,e)=>t in o?_(o,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):o[t]=e;var r=(o,t,e)=>N(o,typeof t!="symbol"?t+"":t,e);import{b as l}from"./cross-CbhIs7DK.js";import{bp as A}from"./index-ihcskjKt.js";import{L as D,S as y,T as h,a as b,b as z,c as S,l as I,D as O,d as R}from"./CrossSwap-ChvxGC9y.js";import{s as U}from"./index-D_RpN_Nq.js";import"./vendor-CBmAETR3.js";import"./PriceImpact-BZtd4YV2.js";import"./CurrentPrice-CQbowz6j.js";import"./MarketSource-o58kgnsh.js";import"./useSwapHelper-CDwInMwe.js";import"./useGetPoolList-BxNmDN4c.js";import"./utils-GUDa3Y46.js";import"./useWrapPoolData-CzWcfmSl.js";import"./en_US-KAK2ZBDO-7b1QhAeP.js";import"./usePreviousValue-Da-o2xpb.js";import"./HighlightText-Dw_TnRsZ.js";import"./useSigner-C1gsxlX5.js";import"./useTransactionModal-DhEdYJgg.js";import"./v4-C6aID195.js";import"./ErrorTips-D8Nv331n.js";import"./HTextLabelBox-Cv1F2u1A.js";import"./NoData-BFX9XpKb.js";import"./index-CLgd2W9i.js";import"./Loading-DOvYGudd.js";import"./Slippage-C7lPdRZI.js";import"./index-78J_CBpj.js";import"./TooltipIcon-CBgjM1b2.js";import"./useTokenBalance-EOIPKTy-.js";import"./useAccountBalance-D7pkS3C9.js";import"./FreshProgressV2-CqkEOvHy.js";import"./index-CgYRIMgB.js";import"./index-Dq_SzPY7.js";import"./dijkstra-D_NXgYpA.js";const q="transport";class f{constructor({context:t,logType:e}={}){r(this,"exchangeTimeout",3e4);r(this,"unresponsiveTimeout",15e3);r(this,"deviceModel",null);r(this,"tracer");r(this,"_events",new A);r(this,"send",async(t,e,i,n,s=l.alloc(0),a=[y.OK],{abortTimeoutMs:c}={})=>{const u=this.tracer.withUpdatedContext({function:"send"});if(s.length>=256)throw u.trace("data.length exceeded 256 bytes limit",{dataLength:s.length}),new h("data.length exceed 256 bytes limit. Got: "+s.length,"DataLengthTooBig");u.trace("Starting an exchange",{abortTimeoutMs:c});const m=await this.exchange(l.concat([l.from([t,e,i,n]),l.from([s.length]),s]),{abortTimeoutMs:c});u.trace("Received response from exchange");const p=m.readUInt16BE(m.length-2);if(!a.some(C=>C===p))throw new b(p);return m});r(this,"exchangeBusyPromise");r(this,"_appAPIlock",null);this.tracer=new D(e??q,t)}exchange(t,{abortTimeoutMs:e}={}){throw new Error("exchange not implemented")}exchangeBulk(t,e){let i=!1;const n=()=>{i=!0};return(async()=>{if(!i)for(const a of t){const c=await this.exchange(a);if(i)return;const u=c.readUInt16BE(c.length-2);if(u!==y.OK)throw new b(u);e.next(c)}})().then(()=>!i&&e.complete(),a=>!i&&e.error(a)),{unsubscribe:n}}setScrambleKey(t){}close(){return Promise.resolve()}on(t,e){this._events.on(t,e)}off(t,e){this._events.removeListener(t,e)}emit(t,...e){this._events.emit(t,...e)}setDebugMode(){console.warn("setDebugMode is deprecated. use @ledgerhq/logs instead. No logs are emitted in this anymore.")}setExchangeTimeout(t){this.exchangeTimeout=t}setExchangeUnresponsiveTimeout(t){this.unresponsiveTimeout=t}static create(t=3e3,e){return new Promise((i,n)=>{let s=!1;const a=this.listen({next:u=>{s=!0,a&&a.unsubscribe(),c&&clearTimeout(c),this.open(u.descriptor,t).then(i,n)},error:u=>{c&&clearTimeout(c),n(u)},complete:()=>{c&&clearTimeout(c),s||n(new h(this.ErrorMessage_NoDeviceFound,"NoDeviceFound"))}}),c=e?setTimeout(()=>{a.unsubscribe(),n(new h(this.ErrorMessage_ListenTimeout,"ListenTimeout"))},e):null})}async exchangeAtomicImpl(t){const e=this.tracer.withUpdatedContext({function:"exchangeAtomicImpl",unresponsiveTimeout:this.unresponsiveTimeout});if(this.exchangeBusyPromise)throw e.trace("Atomic exchange is already busy"),new z("An action was already pending on the Ledger device. Please deny or reconnect.");let i;const n=new Promise(c=>{i=c});this.exchangeBusyPromise=n;let s=!1;const a=setTimeout(()=>{e.trace('Timeout reached, emitting Transport event "unresponsive"',{unresponsiveTimeout:this.unresponsiveTimeout}),s=!0,this.emit("unresponsive")},this.unresponsiveTimeout);try{const c=await t();return s&&(e.trace("Device was unresponsive, emitting responsive"),this.emit("responsive")),c}finally{e.trace("Finalize, clearing busy guard"),clearTimeout(a),i&&i(),this.exchangeBusyPromise=null}}decorateAppAPIMethods(t,e,i){for(const n of e)t[n]=this.decorateAppAPIMethod(n,t[n],t,i)}decorateAppAPIMethod(t,e,i,n){return async(...s)=>{const{_appAPIlock:a}=this;if(a)return Promise.reject(new h("Ledger Device is busy (lock "+a+")","TransportLocked"));try{return this._appAPIlock=t,this.setScrambleKey(n),await e.apply(i,s)}finally{this._appAPIlock=null}}}setTraceContext(t){this.tracer=this.tracer.withContext(t)}updateTraceContext(t){this.tracer.updateContext(t)}getTraceContext(){return this.tracer.getContext()}}r(f,"isSupported"),r(f,"list"),r(f,"listen"),r(f,"open"),r(f,"ErrorMessage_ListenTimeout","No Ledger device found (timeout)"),r(f,"ErrorMessage_NoDeviceFound","No Ledger device found");const P=5;function F(o){const t=l.alloc(2);return t.writeUInt16BE(o,0),t}const V={data:l.alloc(0),dataLength:0,sequence:0},X=(o,t)=>({makeBlocks(e){let i=l.concat([F(e.length),e]);const n=t-5,s=Math.ceil(i.length/n);i=l.concat([i,l.alloc(s*n-i.length+1).fill(0)]);const a=[];for(let c=0;c<s;c++){const u=l.alloc(5);u.writeUInt16BE(o,0),u.writeUInt8(P,2),u.writeUInt16BE(c,3);const m=i.slice(c*n,(c+1)*n);a.push(l.concat([u,m]))}return a},reduceResponse(e,i){let{data:n,dataLength:s,sequence:a}=e||V;if(i.readUInt16BE(0)!==o)throw new h("Invalid channel","InvalidChannel");if(i.readUInt8(2)!==P)throw new h("Invalid tag","InvalidTag");if(i.readUInt16BE(3)!==a)throw new h("Invalid sequence","InvalidSequence");e||(s=i.readUInt16BE(5)),a++;const c=i.slice(e?5:7);return n=l.concat([n,c]),n.length>s&&(n=n.slice(0,s)),{data:n,dataLength:s,sequence:a}},getReducedResult(e){if(e&&e.dataLength===e.data.length)return e.data}});var d;(function(o){o.blue="blue",o.nanoS="nanoS",o.nanoSP="nanoSP",o.nanoX="nanoX",o.stax="stax",o.europa="europa",o.apex="apex"})(d||(d={}));const v={[d.blue]:{id:d.blue,productName:"Ledger Blue",productIdMM:0,legacyUsbProductId:0,usbOnly:!0,memorySize:480*1024,masks:[822083584,822149120],getBlockSize:o=>4*1024},[d.nanoS]:{id:d.nanoS,productName:"Ledger Nano S",productIdMM:16,legacyUsbProductId:1,usbOnly:!0,memorySize:320*1024,masks:[823132160],getBlockSize:o=>U.lt(U.coerce(o)??"","2.0.0")?4*1024:2*1024},[d.nanoX]:{id:d.nanoX,productName:"Ledger Nano X",productIdMM:64,legacyUsbProductId:4,usbOnly:!1,memorySize:2*1024*1024,masks:[855638016],getBlockSize:o=>4*1024,bluetoothSpec:[{serviceUuid:"13d63400-2c97-0004-0000-4c6564676572",notifyUuid:"13d63400-2c97-0004-0001-4c6564676572",writeUuid:"13d63400-2c97-0004-0002-4c6564676572",writeCmdUuid:"13d63400-2c97-0004-0003-4c6564676572"}]},[d.nanoSP]:{id:d.nanoSP,productName:"Ledger Nano S Plus",productIdMM:80,legacyUsbProductId:5,usbOnly:!0,memorySize:1533*1024,masks:[856686592],getBlockSize:o=>32},[d.apex]:{id:d.apex,productName:"Ledger Apex",productIdMM:128,legacyUsbProductId:8,usbOnly:!1,memorySize:1533*1024,masks:[859832320],getBlockSize:o=>32,bluetoothSpec:[{serviceUuid:"13d63400-2c97-8004-0000-4c6564676572",notifyUuid:"13d63400-2c97-8004-0001-4c6564676572",writeUuid:"13d63400-2c97-8004-0002-4c6564676572",writeCmdUuid:"13d63400-2c97-8004-0003-4c6564676572"}]},[d.stax]:{id:d.stax,productName:"Ledger Stax",productIdMM:96,legacyUsbProductId:6,usbOnly:!1,memorySize:1533*1024,masks:[857735168],getBlockSize:o=>32,bluetoothSpec:[{serviceUuid:"13d63400-2c97-6004-0000-4c6564676572",notifyUuid:"13d63400-2c97-6004-0001-4c6564676572",writeUuid:"13d63400-2c97-6004-0002-4c6564676572",writeCmdUuid:"13d63400-2c97-6004-0003-4c6564676572"}]},[d.europa]:{id:d.europa,productName:"Ledger Flex",productIdMM:112,legacyUsbProductId:7,usbOnly:!1,memorySize:1533*1024,masks:[858783744],getBlockSize:o=>32,bluetoothSpec:[{serviceUuid:"13d63400-2c97-3004-0000-4c6564676572",notifyUuid:"13d63400-2c97-3004-0001-4c6564676572",writeUuid:"13d63400-2c97-3004-0002-4c6564676572",writeCmdUuid:"13d63400-2c97-3004-0003-4c6564676572"}]}};d.blue,d.nanoS,d.nanoSP,d.nanoX,d.stax,d.europa;const k=Object.values(v),T=11415,L=o=>{const t=k.find(n=>n.legacyUsbProductId===o);if(t)return t;const e=o>>8;return k.find(n=>n.productIdMM===e)},K=[],B={};for(const o in v){const t=v[o],{bluetoothSpec:e}=t;if(e)for(let i=0;i<e.length;i++){const n=e[i];K.push(n.serviceUuid),B[n.serviceUuid]=B[n.serviceUuid.replace(/-/g,"")]={deviceModel:t,...n}}}const G=[{vendorId:T}],Y=()=>Promise.resolve(!!(window.navigator&&window.navigator.hid)),w=()=>{const{hid:o}=navigator;if(!o)throw new h("navigator.hid is not supported","HIDNotSupported");return o};async function E(){const o=await w().requestDevice({filters:G});return Array.isArray(o)?o:[o]}async function x(){return(await w().getDevices()).filter(t=>t.vendorId===T)}async function J(){const o=await x();return o.length>0?o[0]:(await E())[0]}const g=class g extends f{constructor(e){super();r(this,"device");r(this,"deviceModel");r(this,"channel",Math.floor(Math.random()*65535));r(this,"packetSize",64);r(this,"inputs",[]);r(this,"inputCallback");r(this,"read",()=>this.inputs.length?Promise.resolve(this.inputs.shift()):new Promise(e=>{this.inputCallback=e}));r(this,"onInputReport",e=>{const i=l.from(e.data.buffer);this.inputCallback?(this.inputCallback(i),this.inputCallback=null):this.inputs.push(i)});r(this,"_disconnectEmitted",!1);r(this,"_emitDisconnect",e=>{this._disconnectEmitted||(this._disconnectEmitted=!0,this.emit("disconnect",e))});r(this,"exchange",async e=>await this.exchangeAtomicImpl(async()=>{const{channel:n,packetSize:s}=this;I("apdu","=> "+e.toString("hex"));const a=X(n,s),c=a.makeBlocks(e);for(let p=0;p<c.length;p++)await this.device.sendReport(0,c[p]);let u,m;for(;!(u=a.getReducedResult(m));)try{const p=await this.read();m=a.reduceResponse(m,p)}catch(p){if(p instanceof h&&p.id==="InvalidChannel")continue;throw p}return I("apdu","<= "+u.toString("hex")),u}).catch(n=>{throw n&&n.message&&n.message.includes("write")?(this._emitDisconnect(n),new O(n.message)):n}));this.device=e,this.deviceModel=typeof e.productId=="number"?L(e.productId):void 0,e.addEventListener("inputreport",this.onInputReport)}static async request(){const[e]=await E();return g.open(e)}static async openConnected(){const e=await x();return e.length===0?null:g.open(e[0])}static async open(e){await e.open();const i=new g(e),n=s=>{e===s.device&&(w().removeEventListener("disconnect",n),i._emitDisconnect(new R))};return w().addEventListener("disconnect",n),i}async close(){await this.exchangeBusyPromise,this.device.removeEventListener("inputreport",this.onInputReport),await this.device.close()}setScrambleKey(){}};r(g,"isSupported",Y),r(g,"list",x),r(g,"listen",e=>{let i=!1;J().then(s=>{if(!s)e.error(new S("Access denied to use Ledger device"));else if(!i){const a=typeof s.productId=="number"?L(s.productId):void 0;e.next({type:"add",descriptor:s,deviceModel:a}),e.complete()}},s=>{e.error(new S(s.message))});function n(){i=!0}return{unsubscribe:n}});let M=g;export{M as default};
//# sourceMappingURL=TransportWebHID-CTJm1suJ.js.map
