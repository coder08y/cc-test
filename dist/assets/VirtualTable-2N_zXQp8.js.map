{"version":3,"file":"VirtualTable-2N_zXQp8.js","sources":["../../../ui-kit/src/components/VirtualTable.tsx"],"sourcesContent":["import { Box, BoxProps, Flex, Text, VStack } from '@chakra-ui/react'\nimport { useVirtualizer, VirtualItem } from '@tanstack/react-virtual'\nimport React, { useCallback, useEffect, useRef, useState } from 'react'\nimport Table from './Table'\n\n// ------------------ 公共类型 ------------------\n\nexport interface Column<T> {\n  key: keyof T | string // 列对应的字段名（允许是 T 的键，也可自定义）\n  title: React.ReactNode\n  render?: (row: T) => React.ReactNode // 可选的自定义渲染函数\n  sticky?: boolean // 如果需要 sticky，给列单独标记\n}\n\nexport interface VirtualTableProps<T> {\n  columns: Column<T>[]\n  data: T[]\n  rowHeight?: number\n  overscan?: number\n  stickyHeaderTop: string\n  gridTemplateColumns: any\n  columnGap?: string\n  justify?: string\n  px?: string\n  bg?: string\n  isApp?: boolean\n  scrollWidth?: string | number\n  onRowClick?: (item: T) => void\n  isLoading?: boolean\n  rowKey?: string | ((item: T) => string)\n  rowStyle?: BoxProps\n  scrollContainerSelector?: string // 滚动容器选择器\n}\n\n// ------------------ VirtualTable 主组件 ------------------\n\nexport default function VirtualTable<T>({\n  columns,\n  data,\n  rowHeight = 66,\n  overscan = 10,\n  stickyHeaderTop = '0px',\n  gridTemplateColumns,\n  columnGap = '12px',\n  px = '0 16px',\n  bg = 'bg_primary',\n  isApp = false,\n  isLoading = false,\n  scrollWidth = '830px',\n  justify = '',\n  onRowClick = () => {},\n  rowKey = 'coinType',\n  rowStyle = {},\n  scrollContainerSelector = '.scroll-container' // 默认选择器\n}: VirtualTableProps<T>) {\n  const [preloadedItems, setPreloadedItems] = useState<Set<string>>(new Set())\n  const scrollElementRef = useRef<HTMLElement | null>(null)\n  const isScrollingRef = useRef(false)\n  const scrollTimeoutRef = useRef<NodeJS.Timeout>()\n\n  // 更积极的预加载项目\n  const preloadItems = useCallback(\n    (startIndex: number, endIndex: number) => {\n      const newPreloaded = new Set(preloadedItems)\n      let hasNew = false\n\n      // 扩大预加载范围（前后各50项）\n      const preloadRange = isScrollingRef.current ? 50 : 20\n      const start = Math.max(0, startIndex - preloadRange)\n      const end = Math.min(data?.length - 1, endIndex + preloadRange)\n\n      for (let i = start; i <= end; i++) {\n        const item = data[i]\n        const key = typeof rowKey === 'function' ? rowKey(item) : ((item as any)?.[rowKey] ?? i.toString())\n\n        if (!newPreloaded.has(key)) {\n          newPreloaded.add(key)\n          hasNew = true\n        }\n      }\n\n      if (hasNew) {\n        setPreloadedItems(newPreloaded)\n      }\n    },\n    [data, rowKey, preloadedItems]\n  )\n\n  const rowVirtualizer = useVirtualizer({\n    count: data?.length || 0,\n    getScrollElement: () => {\n      const el = document.querySelector(scrollContainerSelector) as HTMLElement\n      scrollElementRef.current = el\n      return el\n    },\n    estimateSize: () => rowHeight,\n    overscan,\n    onChange: instance => {\n      const items = instance.getVirtualItems()\n      if (items?.length > 0) {\n        preloadItems(items[0].index, items[items?.length - 1].index)\n      }\n    }\n  })\n\n  // 初始预加载更多项\n  useEffect(() => {\n    if (data?.length > 0) {\n      preloadItems(0, Math.min(50, data?.length - 1))\n    }\n  }, [data, preloadItems])\n\n  // 监听滚动事件，优化滚动时的预加载\n  useEffect(() => {\n    const scrollContainer = scrollElementRef.current\n    if (!scrollContainer) return\n\n    const handleScrollStart = () => {\n      isScrollingRef.current = true\n      clearTimeout(scrollTimeoutRef.current)\n    }\n\n    const handleScrollEnd = () => {\n      scrollTimeoutRef.current = setTimeout(() => {\n        isScrollingRef.current = false\n      }, 100)\n    }\n\n    scrollContainer.addEventListener('scroll', handleScrollStart, { passive: true })\n    scrollContainer.addEventListener('scrollend', handleScrollEnd, { passive: true })\n\n    return () => {\n      scrollContainer.removeEventListener('scroll', handleScrollStart)\n      scrollContainer.removeEventListener('scrollend', handleScrollEnd)\n      clearTimeout(scrollTimeoutRef.current)\n    }\n  }, [])\n\n  useEffect(() => {\n    rowVirtualizer.measure()\n  }, [data, rowVirtualizer])\n\n  // 超短屏幕时 左右下角背景色会到th后面 固定时需要增加跟header长度一样的背景,不固定的时候要透明背景\n  const headerRef = useRef<HTMLDivElement>(null)\n  const [hasBg, setHasBg] = useState(false)\n\n  useEffect(() => {\n    const scrollContainer = scrollElementRef.current\n    if (!scrollContainer) return\n\n    const handleScroll = () => {\n      if (headerRef.current) {\n        const { top } = headerRef.current.getBoundingClientRect()\n        setHasBg(top <= Number(stickyHeaderTop?.split('px')[0]))\n      }\n    }\n\n    scrollContainer.addEventListener('scroll', handleScroll)\n    handleScroll()\n\n    return () => scrollContainer.removeEventListener('scroll', handleScroll)\n  }, [])\n\n  const renderHeader = () => (\n    <Box\n      display=\"grid\"\n      w={{ base: '100%', lg: '1160px' }}\n      margin=\"auto\"\n      gridTemplateColumns={gridTemplateColumns}\n      h=\"36px\"\n      columnGap={isApp ? '0px' : columnGap}\n      p={isApp ? 0 : px}\n    >\n      {columns.map((col, index) => (\n        <Flex\n          key={String(col.key)}\n          align=\"center\"\n          justify={index === 0 ? 'flex-start' : index === columns?.length - 1 ? 'flex-end' : justify || 'flex-start'}\n          position={isApp && col.sticky ? 'sticky' : 'static'}\n          left=\"0\"\n          right=\"0\"\n          bg={isApp && col.sticky ? bg : 'inherit'}\n          zIndex={isApp && col.sticky ? 2 : 1}\n          pl={isApp && !col.sticky ? '12px' : '0px'}\n        >\n          {col.title}\n        </Flex>\n      ))}\n    </Box>\n  )\n\n  const renderVirtualRows = () => (\n    <Box w={{ base: '100%', lg: '1160px' }} margin=\"auto\" h={`${rowVirtualizer.getTotalSize()}px`} pos=\"relative\" minHeight=\"500px\">\n      {rowVirtualizer.getVirtualItems().map(virtualRow => {\n        const item = data[virtualRow.index]\n        const key = typeof rowKey === 'function' ? rowKey(item) : ((item as any)?.[rowKey] ?? virtualRow.index)\n        const isPreloaded = preloadedItems.has(key)\n\n        return (\n          <RowItem<T>\n            key={key}\n            item={item}\n            columns={columns}\n            virtualRow={virtualRow}\n            gridTemplateColumns={gridTemplateColumns}\n            onRowClick={onRowClick}\n            isApp={isApp}\n            justify={justify}\n            bg={bg}\n            rowHeight={rowHeight}\n            px={px}\n            columnGap={columnGap}\n            style={rowStyle}\n            isPreloaded={isPreloaded}\n          />\n        )\n      })}\n    </Box>\n  )\n\n  const renderContent = () => {\n    if (isLoading) {\n      return (\n        <Box w={{ base: '100%', lg: '1160px' }} margin=\"atuo\">\n          <Table<any>\n            rowKey={rowKey}\n            columns={columns}\n            dataSource={data}\n            skeletonLength={10}\n            loading={true}\n            rowStyle={{ height: `${rowHeight}px`, ...rowStyle }}\n          />\n        </Box>\n      )\n    }\n\n    const content = (\n      <>\n        <Box\n          ref={headerRef}\n          bg={hasBg ? bg : 'none'}\n          transition={{ backgroundColor: '0.3s' }}\n          w={{ base: '100%', lg: 'calc(100% + 40px)' }}\n          position={isApp ? 'unset' : 'sticky'}\n          top={stickyHeaderTop}\n          zIndex=\"10\"\n        >\n          {renderHeader()}\n        </Box>\n        {renderVirtualRows()}\n      </>\n    )\n\n    return isApp ? (\n      <Box w=\"100%\" overflowX=\"auto\" bg={bg}>\n        <Box w={scrollWidth}>{content}</Box>\n      </Box>\n    ) : (\n      <VStack gap=\"0\" w=\"100%\">\n        {content}\n      </VStack>\n    )\n  }\n\n  return (\n    // align=\"stretch\"\n    <VStack w=\"100%\" gap=\"0\">\n      {renderContent()}\n    </VStack>\n  )\n}\n\n// ------------------ RowItem 子组件 ------------------\n\ninterface RowItemProps<T> {\n  item: T\n  columns: Column<T>[]\n  virtualRow: VirtualItem\n  onRowClick: (item: T) => void\n  bg: string\n  justify: string\n  isApp?: boolean\n  gridTemplateColumns: string\n  rowHeight: number\n  px: string\n  columnGap: string\n  style: BoxProps\n  isPreloaded: boolean\n}\n\nfunction RowItem<T>({\n  item,\n  columns,\n  virtualRow,\n  onRowClick,\n  bg,\n  justify,\n  isApp = false,\n  gridTemplateColumns,\n  rowHeight,\n  px,\n  columnGap,\n  style,\n  isPreloaded\n}: RowItemProps<T>) {\n  // 使用 useMemo 优化列渲染\n  const renderedColumns = React.useMemo(() => {\n    return columns.map((col, index) => (\n      <Flex\n        key={String(col.key)}\n        align=\"center\"\n        justify={index === 0 ? 'flex-start' : index === columns?.length - 1 ? 'flex-end' : justify || 'flex-start'}\n        position={isApp && col.sticky ? 'sticky' : 'static'}\n        right={0}\n        left={0}\n        bg={isApp ? bg : 'unset'}\n        zIndex={isApp && col.sticky ? 2 : 1}\n        h=\"100%\"\n        pl={isApp && !col.sticky ? '12px' : '0px'}\n      >\n        {col.render ? (\n          col.render(item)\n        ) : (\n          <Text fontSize=\"14px\" fontWeight=\"500\" color=\"text_caption\">\n            {(item as any)?.[col.key as keyof T] as string | number}\n          </Text>\n        )}\n      </Flex>\n    ))\n  }, [columns, item, isApp, bg, justify])\n\n  return (\n    <Box\n      pos=\"absolute\"\n      top={`${virtualRow.start}px`}\n      left={0}\n      w=\"100%\"\n      {...style}\n      height={`${rowHeight}px`}\n      display=\"grid\"\n      cursor=\"pointer\"\n      columnGap={isApp ? '0px' : columnGap}\n      gridTemplateColumns={gridTemplateColumns}\n      borderRadius=\"12px\"\n      p={{ base: '0', lg: px }}\n      _hover={{\n        bg: isApp ? 'auto' : 'primary_opacity.10',\n        ...(style._hover || {})\n      }}\n      onClick={() => onRowClick(item)}\n    >\n      {renderedColumns}\n    </Box>\n  )\n}\n"],"names":["VirtualTable","columns","data","rowHeight","overscan","stickyHeaderTop","gridTemplateColumns","columnGap","px","bg","isApp","isLoading","scrollWidth","justify","onRowClick","rowKey","rowStyle","scrollContainerSelector","preloadedItems","setPreloadedItems","useState","scrollElementRef","useRef","isScrollingRef","scrollTimeoutRef","preloadItems","useCallback","startIndex","endIndex","newPreloaded","hasNew","preloadRange","start","end","i","item","key","rowVirtualizer","useVirtualizer","el","instance","items","useEffect","scrollContainer","handleScrollStart","handleScrollEnd","headerRef","hasBg","setHasBg","handleScroll","top","renderHeader","jsx","Box","col","index","Flex","renderVirtualRows","virtualRow","isPreloaded","RowItem","renderContent","Table","content","jsxs","Fragment","VStack","style","renderedColumns","React","Text"],"mappings":"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"}