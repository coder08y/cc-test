{"version":3,"file":"LimitPriceChart-CzKEb5Dw.js","sources":["../../src/hooks/common/useWebSocket.ts","../../src/hooks/pro/useGetPriceKlineData.ts","../../src/components/tradingViewBvChart/datafeed.ts","../../src/components/tradingViewBvChart/index.tsx","../../src/components/common/proModeAndChart/tokenDropSelect/index.tsx","../../src/components/common/proModeAndChart/CoinHeader.tsx","../../src/components/chart/ProChart.tsx","../../src/components/swap/type.ts","../../src/components/common/proModeAndChart/BuySellTab.tsx","../../src/components/common/TradeTab.tsx","../../src/components/limit/LimitPriceChart.tsx"],"sourcesContent":["// hooks/useWebSocket.ts\nimport { useCallback, useEffect, useRef, useState } from 'react'\n\ntype WebSocketMessage = {\n  type: string\n  data: any\n}\n\ntype MessageHandler<T = any> = (data: T) => void\n\ntype PendingSubscription = {\n  action: string\n  data?: any\n}\n\ninterface UseWebSocketOptions {\n  /** WebSocket 服务器 URL */\n  url?: string\n  /** 是否自动连接 (默认为 false) */\n  autoConnect?: boolean\n  /** 离开标签页后延迟断开连接的时间（毫秒），默认 5000 */\n  visibilityDisconnectDelay?: number\n  /** 重连间隔时间（毫秒），默认 5000 */\n  reconnectInterval?: number\n  /** 最大重连次数，默认无限制 */\n  maxReconnectAttempts?: number\n}\n\ntype WebSocketState = 'connecting' | 'connected' | 'disconnecting' | 'disconnected' | 'error'\n\n// 共享的全局状态\nlet globalWebSocket: WebSocket | null = null\nlet globalMessageHandlers: Map<string, Set<MessageHandler>> = new Map()\nlet globalState: WebSocketState = 'disconnected'\nlet isManualDisconnect = false\nlet visibilityDisconnectTimer: NodeJS.Timeout | null = null\nlet pendingSubscriptions: PendingSubscription[] = []\nlet activeSubscriptions: Map<string, PendingSubscription> = new Map()\n\nconst useWebSocket = <T = any>(options?: UseWebSocketOptions) => {\n  const [state, setState] = useState<WebSocketState>(globalState)\n  const [reconnectCount, setReconnectCount] = useState(0)\n  const messageHandlersRef = useRef<Map<string, Set<MessageHandler>>>(new Map())\n  const optionsRef = useRef(options)\n  optionsRef.current = options\n  const reconnectAttemptsRef = useRef(0)\n\n  // 更新全局状态\n  const updateGlobalState = useCallback((newState: WebSocketState) => {\n    globalState = newState\n    setState(newState)\n  }, [])\n\n  // 处理消息\n  const handleMessage = useCallback((event: MessageEvent) => {\n    try {\n      const message: WebSocketMessage = JSON.parse(event.data)\n\n      // 通知全局订阅者\n      const globalHandlers = globalMessageHandlers.get(message.type)\n      if (globalHandlers) {\n        globalHandlers.forEach(handler => handler(message.data))\n      }\n\n      // 通知当前组件的订阅者\n      const componentHandlers = messageHandlersRef.current.get(message.type)\n      if (componentHandlers) {\n        componentHandlers.forEach(handler => handler(message.data))\n      }\n    } catch (error) {\n      console.error('Error parsing WebSocket message:', error)\n    }\n  }, [])\n\n  // 实际发送消息的内部函数\n  const internalSend = useCallback((action: string, data?: any) => {\n    if (globalWebSocket && globalWebSocket.readyState === WebSocket.OPEN) {\n      globalWebSocket.send(JSON.stringify({ action, data }))\n      return true\n    }\n    return false\n  }, [])\n\n  // 连接 WebSocket\n  const connect = useCallback(() => {\n    // 重置手动断开标记\n    isManualDisconnect = false\n\n    if (globalWebSocket) {\n      if (globalWebSocket.readyState === WebSocket.OPEN) {\n        updateGlobalState('connected')\n        return\n      }\n      if (globalWebSocket.readyState === WebSocket.CONNECTING) {\n        updateGlobalState('connecting')\n        return\n      }\n    }\n\n    const url = optionsRef.current?.url || 'wss://ws-api.suivision.xyz/ws'\n    updateGlobalState('connecting')\n\n    globalWebSocket = new WebSocket(url)\n\n    globalWebSocket.onopen = () => {\n      reconnectAttemptsRef.current = 0\n      updateGlobalState('connected')\n      setReconnectCount(0)\n      console.log('WebSocket connected')\n\n      // 重新连接后重新发送所有活跃的订阅\n      activeSubscriptions.forEach((subscription, action) => {\n        internalSend(action, subscription.data)\n      })\n    }\n\n    globalWebSocket.onmessage = handleMessage\n\n    globalWebSocket.onclose = () => {\n      updateGlobalState('disconnected')\n      console.log('WebSocket disconnected')\n\n      // 只有非手动断开且标签页可见时才重连\n      if (!isManualDisconnect && document.visibilityState === 'visible') {\n        const maxAttempts = optionsRef.current?.maxReconnectAttempts\n        const shouldReconnect = maxAttempts === undefined || reconnectAttemptsRef.current < maxAttempts\n\n        if (shouldReconnect) {\n          const interval = optionsRef.current?.reconnectInterval || 5000\n          setTimeout(() => {\n            reconnectAttemptsRef.current += 1\n            setReconnectCount(prev => prev + 1)\n            connect()\n          }, interval)\n        }\n      }\n    }\n\n    globalWebSocket.onerror = error => {\n      updateGlobalState('error')\n      console.error('WebSocket error:', error)\n    }\n  }, [handleMessage, internalSend, updateGlobalState])\n\n  // 断开 WebSocket 连接\n  const disconnect = useCallback(() => {\n    // 标记为手动断开\n    isManualDisconnect = true\n\n    if (globalWebSocket) {\n      updateGlobalState('disconnecting')\n      globalWebSocket.close()\n      globalWebSocket = null\n      updateGlobalState('disconnected')\n    }\n  }, [updateGlobalState])\n\n  // 处理标签页可见性变化\n  const handleVisibilityChange = useCallback(() => {\n    const disconnectDelay = optionsRef.current?.visibilityDisconnectDelay || 5000\n\n    if (document.visibilityState === 'hidden') {\n      // 标签页变为不可见，延迟断开连接\n      if (visibilityDisconnectTimer) {\n        clearTimeout(visibilityDisconnectTimer)\n      }\n\n      visibilityDisconnectTimer = setTimeout(() => {\n        if (globalWebSocket && globalWebSocket.readyState === WebSocket.OPEN) {\n          disconnect()\n        }\n      }, disconnectDelay)\n    } else {\n      // 标签页变为可见，取消延迟断开并尝试重新连接\n      if (visibilityDisconnectTimer) {\n        clearTimeout(visibilityDisconnectTimer)\n        visibilityDisconnectTimer = null\n      }\n\n      if (!globalWebSocket || globalWebSocket.readyState === WebSocket.CLOSED) {\n        connect()\n      }\n    }\n  }, [connect, disconnect])\n\n  // 订阅消息\n  const subscribe = useCallback(<T = any>(messageType: string, handler: MessageHandler<T>) => {\n    // 添加到全局订阅\n    if (!globalMessageHandlers.has(messageType)) {\n      globalMessageHandlers.set(messageType, new Set())\n    }\n    globalMessageHandlers.get(messageType)?.add(handler)\n\n    // 添加到当前组件订阅\n    if (!messageHandlersRef.current.has(messageType)) {\n      messageHandlersRef.current.set(messageType, new Set())\n    }\n    messageHandlersRef.current.get(messageType)?.add(handler)\n\n    // 返回取消订阅函数\n    return () => {\n      globalMessageHandlers.get(messageType)?.delete(handler)\n      messageHandlersRef.current.get(messageType)?.delete(handler)\n    }\n  }, [])\n\n  // 发送消息\n  const send = useCallback(\n    (action: string, data?: any, { isSubscription = false }: { isSubscription?: boolean } = {}) => {\n      const success = internalSend(action, data)\n\n      // 如果是订阅消息且发送成功，保存到活跃订阅\n      if (isSubscription && success) {\n        activeSubscriptions.set(action, { action, data })\n      }\n\n      return success\n    },\n    [internalSend]\n  )\n\n  // 取消订阅\n  const unsubscribe = useCallback(\n    (action: string) => {\n      // 从活跃订阅中移除\n      activeSubscriptions.delete(action)\n\n      // 发送取消订阅消息（如果需要）\n      internalSend(`unsubscribe.${action}`)\n    },\n    [internalSend]\n  )\n\n  // 初始化\n  useEffect(() => {\n    // 同步初始状态\n    setState(globalState)\n\n    // 如果设置了自动连接且当前未连接\n    if (optionsRef.current?.autoConnect && globalState === 'disconnected') {\n      connect()\n    }\n\n    // 添加 visibilitychange 事件监听\n    document.addEventListener('visibilitychange', handleVisibilityChange)\n\n    // 清理函数\n    return () => {\n      // 清理当前组件的订阅\n      messageHandlersRef.current.clear()\n\n      // 移除事件监听\n      document.removeEventListener('visibilitychange', handleVisibilityChange)\n\n      // 清除可能的延迟断开计时器\n      if (visibilityDisconnectTimer) {\n        clearTimeout(visibilityDisconnectTimer)\n      }\n    }\n  }, [connect, handleVisibilityChange])\n\n  return {\n    state,\n    isConnected: state === 'connected',\n    reconnectCount,\n    connect,\n    disconnect,\n    subscribe,\n    send,\n    unsubscribe,\n    getSocket: () => globalWebSocket\n  }\n}\n\nexport default useWebSocket\n","import useWebSocket from '@/hooks/common/useWebSocket'\nimport useProStore from '@/store/pro'\nimport { d, getTimestampMinusHours, sleepTime } from '@cetus/utils'\nimport { fixCoinType } from '@cetusprotocol/common-sdk'\nimport { useRef } from 'react'\nimport { v4 } from 'uuid'\n\n// const bvHost = 'https://sui-mainnet.blockvision.org'\nconst bvHost = 'https://api-sui-cf.cetus.zone/proxy'\n\nexport interface Bar {\n  time: number // 时间戳 (秒级)\n  open: number\n  high: number\n  low: number\n  close: number\n  volume: number\n}\n\n// 定义一个全局变量来存储当前的最新请求 ID\nlet latestRequestId: string | null = null\n\nexport default function useGetPriceKlineData() {\n  const { setCoinBvPrice, proTransactionList } = useProStore()\n  const currentPoolId = useRef<any>()\n  const unsubscribeRef = useRef<() => void>()\n  const { subscribe, send } = useWebSocket()\n  // 获取历史数据\n  const getHistoricalData = async ({\n    poolId,\n    resolution,\n    from,\n    to,\n    firstDataRequest,\n    callback,\n    onErrorCallback\n  }: {\n    poolId: string\n    resolution: string\n    from: number\n    to: number\n    callback: any\n    onErrorCallback: any\n    firstDataRequest?: boolean\n  }) => {\n    console.log('useGetPriceKlineData 🚀 ~ getHistoricalData ~ params poolId:', poolId)\n    console.log('useGetPriceKlineData 🚀 ~ getHistoricalData ~ params resolution:', resolution)\n    console.log('useGetPriceKlineData 🚀 ~ getHistoricalData ~ params from:', from)\n    console.log('useGetPriceKlineData 🚀 ~ getHistoricalData ~ params to:', to)\n    if (currentPoolId.current && currentPoolId.current !== poolId) {\n      send('UNSUBSCRIBE_OHLCV')\n    }\n    currentPoolId.current = poolId\n\n    // 生成当前请求的唯一标识\n    const requestId = v4()\n    latestRequestId = requestId // 更新全局变量，表明这是最新的请求\n\n    const token = `0x${fixCoinType(poolId)}`\n\n    let start = from\n\n    // toDo: 由于接口限制了不同间隔数据的最大周期，超过会报错，所以加了详细的判断\n    if (firstDataRequest) {\n      if (resolution === '30s' || resolution === '1m') {\n        start = Math.max(from, getTimestampMinusHours(4))\n      } else if (resolution === '5m') {\n        start = Math.max(from, getTimestampMinusHours(24))\n      } else if (resolution === '15m') {\n        start = Math.max(from, getTimestampMinusHours(168))\n      } else if (resolution === '1h' || resolution === '4h') {\n        start = Math.max(from, getTimestampMinusHours(720))\n      }\n    } else if ((resolution === '30s' || resolution === '1m') && from < getTimestampMinusHours(4) && !firstDataRequest) {\n      callback([], { noData: true })\n      return\n    } else if (resolution === '5m' && from < getTimestampMinusHours(24) && !firstDataRequest) {\n      callback([], { noData: true })\n      return\n    } else if (resolution === '15m' && from < getTimestampMinusHours(168) && !firstDataRequest) {\n      callback([], { noData: true })\n      return\n    } else if ((resolution === '1h' || resolution === '4h') && from < getTimestampMinusHours(720) && !firstDataRequest) {\n      callback([], { noData: true })\n      return\n    } else if (resolution === '1d' && from < getTimestampMinusHours(7200) && !firstDataRequest) {\n      callback([], { noData: true })\n      return\n    } else if (resolution === '1w' && from < getTimestampMinusHours(50400) && !firstDataRequest) {\n      callback([], { noData: true })\n      return\n    } else if (resolution === '1M' && from < getTimestampMinusHours(216000) && !firstDataRequest) {\n      callback([], { noData: true })\n      return\n    }\n    if (start < 0) {\n      callback([], { noData: true })\n      return\n    }\n\n    const apiUrl = `${bvHost}/api/v1/coin/ohlcv?token=${token}&interval=${resolution}&start=${start}`\n    // 内部请求函数\n    const fetchData = async (): Promise<Bar[] | null> => {\n      try {\n        const response = await fetch(apiUrl, {\n          method: 'GET',\n          headers: {\n            accept: 'application/json'\n            // 'x-api-key': '2uZYBhmZMcACCbGxbFLbf5R6QCb'\n          }\n        })\n        const data = await response.json()\n        console.log('🚀 ~ fetchData ~ data:', data)\n\n        if (data?.code === 500) {\n          throw new Error('Server Error: 500')\n        }\n\n        if (data?.code === 0 && data?.data?.list?.length === 0) {\n          return null\n        }\n\n        const result = data?.result?.ohlcs?.map((item: any) => ({\n          time: d(item.timestamp).mul(1000).toNumber(), // 转换为毫秒级时间戳\n          high: Number(item.high),\n          low: Number(item.low),\n          open: Number(item.open),\n          close: Number(item.close),\n          volume: item.volume\n        }))\n\n        console.log('bv 🚀 ~ getHistoricalData ~ result:', result)\n        return result || []\n      } catch (error) {\n        console.error('bv 🚀 ~ fetchData Error:', error)\n\n        // 检查当前请求是否是最新请求\n        if (latestRequestId !== requestId) {\n          console.log('bv 🚀 ~ Request aborted due to poolId change.')\n          return [] // 如果不是最新请求，直接返回空数组\n        }\n\n        console.log('Retrying in 5 seconds...')\n        await sleepTime(5000) // 等待 5 秒后重试\n\n        if (latestRequestId !== requestId) {\n          console.log('bv 🚀 ~ Request aborted due to poolId change.')\n          return [] // 如果不是最新请求，直接返回空数组\n        }\n\n        return await fetchData() // 递归调用\n      }\n    }\n\n    const list = await fetchData() // 开始请求数据\n    if (list) {\n      callback(list, { noData: false })\n    } else {\n      callback([], { noData: true })\n    }\n  }\n\n  const handleSend = async (action: string, data: any) => {\n    const res = send(action, data, { isSubscription: true })\n\n    if (!res) {\n      await sleepTime(1000)\n      handleSend(action, data)\n    }\n  }\n\n  // 订阅交易数据\n  const subscribeKlineData = ({ poolId, resolution, callback }: { poolId: string; resolution: string; callback: any }) => {\n    // console.log(`🚀 ~ subscribeKlineData ~ { poolId, resolution, callback }:`, { poolId, resolution, callback })\n    // 先取消之前的订阅\n    if (unsubscribeRef.current) {\n      // send('UNSUBSCRIBE_OHLCV')\n      unsubscribeRef.current()\n    }\n\n    // 设置新的订阅\n    unsubscribeRef.current = subscribe('OHLCV_DATA', (data: any) => {\n      const value = data?.list?.[data?.list?.length - 1]\n      if (!value) return []\n      if (fixCoinType(poolId) !== fixCoinType(data?.tokenId)) return []\n      const result = {\n        time: d(value.timestamp).mul(1000).toNumber(), // 转换为毫秒级时间戳\n        high: Number(value.high),\n        low: Number(value.low),\n        open: Number(value.open),\n        close: Number(value.close),\n        volume: value.volume\n      }\n\n      if (result) {\n        callback(result)\n        setCoinBvPrice({\n          coinType: data?.tokenId,\n          // price: formatSmallPrice(data?.price, 16)\n          price: String(result?.close) || ''\n        })\n      }\n    })\n\n    const data = {\n      tokenId: poolId,\n      interval: resolution\n    }\n    // console.log('🚀 ~ subscribeKlineData ~ data:', data)\n\n    // 可以在这里发送初始请求\n    handleSend('SUBSCRIBE_OHLCV', data)\n  }\n\n  return {\n    getHistoricalData,\n    subscribeKlineData,\n    proTransactionList\n  }\n}\n","// src/services/datafeed.ts\n\n// import { Bar, getHistoricalData, getLatestKlineData } from './api'\nimport { Bar } from './api'\n\n// toDo: 具体根据后端接口参数调整映射\nconst dateType: any = {\n  '1': '1m',\n  '5': '5m',\n  '15': '15m',\n  '60': '1h',\n  '240': '4h',\n  '1D': '1d',\n  '1W': '1w',\n  '1M': '1M'\n}\n\nconst dateTypeSecondObj: any = {\n  '1': 60,\n  '5': 300,\n  '15': 900,\n  '60': 3600,\n  '240': 14400,\n  '1D': 86400,\n  '1W': 604800,\n  '1M': 2592000\n}\n\nexport class DataFeed {\n  private poolId: string\n  private resolution: string\n  onChangePrice: ((data: { coinType: string; price: string }) => void) | undefined\n\n  getHistoricalData: (params: {\n    poolId: string\n    resolution: string\n    from: number\n    to: number\n    callback: any\n    onErrorCallback: any\n    firstDataRequest?: boolean\n  }) => void\n  subscribeKlineData: (params: { poolId: string; resolution: string; callback: any }) => void\n  setTvMarksOnDataCallback: ((callback: any) => void) | undefined\n\n  constructor(\n    poolId: string,\n    resolution: string,\n    getHistoricalData: (params: {\n      poolId: string\n      resolution: string\n      from: number\n      to: number\n      callback: any\n      onErrorCallback: any\n      firstDataRequest?: boolean\n    }) => void,\n    subscribeKlineData: (params: { poolId: string; resolution: string; callback: any }) => void,\n    onChangePrice?: (data: { coinType: string; price: string }) => void,\n    setTvMarksOnDataCallback?: (callback: any) => void\n  ) {\n    this.poolId = poolId\n    this.resolution = resolution\n    this.onChangePrice = onChangePrice\n    this.getHistoricalData = getHistoricalData\n    this.subscribeKlineData = subscribeKlineData\n    this.setTvMarksOnDataCallback = setTvMarksOnDataCallback\n  }\n\n  /**\n   * 初始化配置\n   */\n  onReady(callback: (config: any) => void): void {\n    setTimeout(() => {\n      callback({\n        supported_resolutions: ['1', '5', '15', '60', '240', 'D', 'W', 'M'], // 支持的时间周期\n        supports_time: true,\n        supports_marks: true\n      })\n    }, 0)\n  }\n\n  /**\n   * 解析交易对信息\n   */\n  resolveSymbol(symbolName: string, onSymbolResolvedCallback: (symbolInfo: any) => void, onResolveErrorCallback: (error: string) => void): void {\n    console.log('🚀 ~ DataFeed ~ resolveSymbol ~ symbolName:', symbolName)\n    console.log('🚀 ~ DataFeed ~ resolveSymbol ~ symbolInfo:')\n    const arr = symbolName.split('::')\n    const symbol = arr[0]\n    // const unit = Number(arr[1]) || 2\n    const unit = Number(arr[1]) || 2\n    console.log('🚀 ~ DataFeed ~ resolveSymbol ~ unit:', unit)\n    // toDo: 可将当前交易对的current price传进来，最好用map结构维护，根据symbolName对应的current pirce 动态调整pricascale\n    setTimeout(() => {\n      onSymbolResolvedCallback({\n        name: symbol,\n        ticker: symbol,\n        type: 'crypto',\n        session: '24x7',\n        timezone: 'Etc/UTC',\n        minmov: 1,\n        format: 'price',\n        pricescale: Math.pow(10, unit), // 价格精度\n        has_intraday: true,\n        has_empty_bars: true,\n        has_daily: true,\n        has_weekly_and_monthly: true,\n        supported_resolutions: ['1', '5', '15', '60', '240', 'D', 'W', 'M'],\n        volume_precision: 2,\n        supports_marks: true\n      })\n    }, 0)\n  }\n\n  getMarks(symbolInfo: any, from: number, to: number, onDataCallback: (marks: any[]) => void, resolution: string): void {\n    console.log('Tradingview getMarks 0922 ')\n\n    // onDataCallback([\n    //   {\n    //     id: 1,\n    //     time: 1758519900,\n    //     color: 'green',\n    //     text: ['This is the mark pop-up text.'],\n    //     label: 'B',\n    //     labelFontColor: 'blue',\n    //     minSize: 25\n    //   },\n    //   {\n    //     id: 2,\n    //     // time: 1758517200,\n    //     time: 1758519900,\n    //     color: 'red',\n    //     text: ['Second marker'],\n    //     label: 'S',\n    //     labelFontColor: 'green',\n    //     minSize: 25\n    //   },\n    //   {\n    //     id: 3,\n    //     // time: 1758517200,\n    //     time: 1758519900,\n    //     color: 'red',\n    //     text: ['Second marker'],\n    //     label: 'S',\n    //     labelFontColor: 'green',\n    //     minSize: 25\n    //   }\n    // ])\n\n    this.setTvMarksOnDataCallback && this.setTvMarksOnDataCallback(onDataCallback)\n  }\n\n  /**\n   * 获取历史数据\n   */\n  getBars(\n    symbolInfo: any,\n    resolution: string,\n    periodParams: any,\n    onHistoryCallback: (bars: Bar[], { noData }: { noData: boolean }) => void,\n    onErrorCallback: (error: string) => void\n  ): void {\n    const { from, to, firstDataRequest } = periodParams\n    console.log('🚀 ~ DataFeed getBars ~ resolution111:', resolution, symbolInfo)\n    console.log('🚀 ~ DataFeed getBars ~ periodParams:', periodParams)\n    // if (!periodParams?.firstDataRequest) return\n    // getHistoricalData(this.poolId, dateType[resolution], from - dateTypeSecondObj[resolution] * 5, to)\n    // getHistoricalData(this.poolId, dateType[resolution], from, to, firstDataRequest)\n    //   .then(bars => {\n    //     console.log('🚀 ~ DataFeed ~ bars:', bars)\n    //     // if (!bars) {\n    //     //   this.onChangeApiStatus?.(true)\n    //     //   return\n    //     // } else {\n    //     //   this.onChangeApiStatus?.(false)\n    //     // }\n    //     if (bars.length) {\n    //       try {\n    //         const _poolId = this.poolId\n    //         this.onChangePrice({\n    //           coinType: _poolId,\n    //           price: String(bars[bars?.length - 1]?.close || '')\n    //         })\n    //       } catch (error) {\n    //         console.log('🚀 ~ DataFeed ~ poller ~ error:', error)\n    //       }\n    //       onHistoryCallback(bars, { noData: false })\n    //       // onHistoryCallback([], { noData: true })\n    //     } else {\n    //       onHistoryCallback([], { noData: true })\n    //     }\n    //   })\n    //   .catch(error => onErrorCallback(error.message))\n\n    const _poolId = this.poolId\n\n    this.getHistoricalData({\n      poolId: _poolId,\n      resolution: dateType[resolution],\n      from: from - dateTypeSecondObj[resolution] * 5,\n      to,\n      callback: onHistoryCallback,\n      onErrorCallback: onErrorCallback,\n      firstDataRequest\n    })\n  }\n\n  /**\n   * 订阅实时数据（轮询）\n   */\n  subscribeBars(\n    symbolInfo: any,\n    resolution: string,\n    onRealtimeCallback: (bar: Bar) => void,\n    subscriberUID: string,\n    onResetCacheNeededCallback: () => void\n  ): void {\n    console.log('bv subscribeBar 🚀 ~ DataFeed ~ symbolInfo:', symbolInfo)\n    console.log('bv subscribeBar 🚀 ~ DataFeed ~ this poolId:', this.poolId)\n    // const interval = 5000 // 每 5 秒轮询\n    // const poller = setInterval(async () => {\n    //   const bars = await getLatestKlineData(this.poolId, dateType[resolution])\n    //   console.log('bv subscribeBar 🚀 ~ DataFeed ~ poller ~ bars:', bars)\n    //   if (bars.length) {\n    //     try {\n    //       const _poolId = this.poolId\n    //       this.onChangePrice({\n    //         coinType: _poolId,\n    //         price: String(bars[0]?.close || '')\n    //       })\n    //     } catch (error) {\n    //       console.log('🚀 ~ DataFeed ~ poller ~ error:', error)\n    //     }\n\n    //     onRealtimeCallback(bars[0]) // 推送最新数据\n    //   }\n    // }, interval)\n    // ;(this as any)[subscriberUID] = poller\n\n    const _poolId = this.poolId\n    this.subscribeKlineData({\n      poolId: _poolId,\n      resolution: dateType[resolution],\n      callback: onRealtimeCallback\n    })\n  }\n\n  /**\n   * 取消实时数据订阅\n   */\n  unsubscribeBars(subscriberUID: string): void {\n    clearInterval((this as any)[subscriberUID])\n  }\n}\n","import useGetPriceKlineData from '@/hooks/pro/useGetPriceKlineData'\nimport { Token } from '@cetus/types'\nimport { addComma, d, fixDown, formatNumberWithDown, formatTvMarkDate, formatUSDPrice } from '@cetus/utils'\nimport { VStack } from '@chakra-ui/react'\nimport React, { useCallback, useEffect, useRef, useState } from 'react'\nimport {\n  ChartingLibraryWidgetOptions,\n  IChartingLibraryWidget,\n  ResolutionString,\n  SymbolValueFormatterFormatOptions,\n  widget\n} from '../../../public/charting_library_new'\n// import ChartHeader from './ChartHeader'\n\nimport { fixCoinType } from '@cetusprotocol/common-sdk'\nimport { useDeepCompareEffect } from 'ahooks'\nimport { DataFeed } from './datafeed'\ninterface TradingViewChartProps {\n  token: Token | undefined\n  tokenPriceUnit: string\n  onChartReady?: () => void // 可以用来控制loading\n  onChangePrice?: (data: { coinType: string; price: string }) => void\n}\n\nconst TradingViewChart: React.FC<TradingViewChartProps> = ({ token, onChartReady, tokenPriceUnit, onChangePrice }) => {\n  const chartContainerRef = useRef<HTMLDivElement | null>(null)\n  const tvWidgetRef = useRef<IChartingLibraryWidget | null>(null)\n  const isMounted = useRef<boolean>(false)\n  const [indicators, setIndicators] = useState<string[]>([])\n  const [, setIsInitialized] = useState(false)\n  const [currentPoolId, setCurrentPoolId] = useState('')\n  const { getHistoricalData, subscribeKlineData, proTransactionList } = useGetPriceKlineData()\n  const tvMarksOnDataCallbackRef = useRef<any>(null)\n\n  useEffect(() => {\n    console.log('tv chart component Mounted')\n    isMounted.current = true\n  }, [])\n\n  const setTvMarksOnDataCallback = (callback: any) => {\n    tvMarksOnDataCallbackRef.current = callback\n  }\n\n  useEffect(() => {\n    if (!chartContainerRef.current || !token?.coin_type || !tokenPriceUnit) return\n    console.log('bv chart tokenPriceUnit: ', tokenPriceUnit)\n\n    console.log('tv chart init useEffect isMounted.current: ', isMounted.current)\n    setCurrentPoolId(token?.coin_type)\n\n    const widgetOptions: ChartingLibraryWidgetOptions = {\n      symbol: `${token?.symbol}::${tokenPriceUnit}`,\n      timezone: Intl.DateTimeFormat().resolvedOptions().timeZone as any,\n      interval: '15' as any, // 默认时间周期（1分钟）\n      container: 'tv_chart_container',\n      datafeed: new DataFeed(token?.coin_type, '1', getHistoricalData, subscribeKlineData, onChangePrice, setTvMarksOnDataCallback) as any, // 使用自定义 DataFeed\n      library_path: '/charting_library_new/',\n      locale: 'en',\n      autosize: true,\n      theme: 'dark',\n      settings_overrides: {},\n      // 精度设置\n      overrides: {\n        'paneProperties.backgroundGradientStartColor': '#0F0F0F', // 窗格背景渐变开始颜色。\n        'paneProperties.backgroundGradientEndColor': '#0F0F0F', // 窗格背景渐变结束颜色。\n        'paneProperties.background': '#0F0F0F',\n        'paneProperties.backgroundType': 'solid',\n        'Overlay.barStyle.upColor': '#68FFD8',\n        'Overlay.barStyle.downColor': '#FF5073',\n        'mainSeriesProperties.priceLineWidth': 1, // 主价格线宽度\n        'priceScale.precision': 2, // 价格精度\n        'priceScale.minMove': 0.01, // 最小变化单位\n        'mainSeriesProperties.style': 1\n      },\n      custom_css_url: '/css/tv-chart-dart.css',\n      // disabled_features: ['header_symbol_search', 'header_compare', 'header_widget'],\n      disabled_features: [\n        'header_symbol_search',\n        'header_compare',\n        'timeframes_toolbar'\n        // 'volume_force_overlay',\n        // 'create_volume_indicator_by_default'\n      ],\n      // enabled_features: ['chart_style_hilo_last_price', 'hide_left_toolbar_by_default', 'header_resolutions'],\n      enabled_features: [\n        'header_widget',\n        'chart_style_hilo_last_price',\n        'hide_left_toolbar_by_default',\n        'hide_resolution_in_legend',\n        'two_character_bar_marks_labels'\n      ],\n      custom_formatters: {\n        priceFormatterFactory: (symbolInfo, minTick) => {\n          console.log('🚀 ~ priceFormatterFactory ~ symbolInfo:', symbolInfo)\n\n          // if (symbolInfo?.fractional || (minTick !== 'default' && minTick.split(',')[2] === 'true')) {\n          if (symbolInfo) {\n            return {\n              format: (price: number, signPositive?: SymbolValueFormatterFormatOptions): string => {\n                // console.log('🚀 ~ priceFormatterFactory ~ price.toString():', price)\n\n                // if (d(price).gte(100000)) {\n                //   console.log('🚀 ~ useEffect ~ numericAbbreviation(price.toString(), 0):', numericAbbreviation(price.toString(), 0))\n                //   return String(numericAbbreviation(price.toString(), 0, 0))\n                // }\n\n                // const decimals = Math.log10(symbolInfo.pricescale)\n\n                // if (d(price).abs().lt(0.0000001)) {\n                //   return String(formatNumberWithDown(convertScientificToDecimal(price.toString(), decimals), decimals))\n                // }\n\n                // return String(formatNumberWithDown(price.toString(), decimals))\n                return formatUSDPrice(price)\n              }\n            }\n          }\n          return null\n        }\n      },\n      favorites: {\n        intervals: ['5', '15'],\n        indicators: ['Awesome Oscillator', 'Bollinger Bands'],\n        // drawingTools: ['LineToolBrush', 'LineToolCallout', 'LineToolCircle'],\n        chartTypes: ['Candles', 'Line']\n      }\n      // header_widget_buttons_mode: 'fullsize'\n      // studies_overrides: {\n      //   'volume.volume.color.0': '#00FFFF'\n      // }\n      // 设置价格精度\n      // time_frames: [\n      //   { text: '50y', resolution: '6M', description: '50 Years' },\n      //   { text: '3y', resolution: '1W', description: '3 Years', title: '3yr' },\n      //   { text: '8m', resolution: '1D', description: '8 Month' },\n      //   { text: '3d', resolution: '5', description: '3 Days' }\n      //   // { text: '1000y', resolution: '1W', description: 'All', title: 'All' }\n      // ],\n      // enabled_timeframes: ['1m', '1h', '1D', '1W']\n      // header_resolutions: ['1', '60', '240', 'D', 'W']\n\n      // saved_data: {\n      //   'left_toolbar.state': 'hidden' // 初始化为折叠状态\n      // }\n    }\n\n    console.log('🚀 ~ useEffect ~ document.getElementById(tv_chart_container):', document.getElementById('tv_chart_container'))\n    // 初始化图表\n    const tvWidget = new widget(widgetOptions)\n\n    console.log('🚀 ~ useEffect ~ tvWidgetRef.current:', tvWidgetRef.current)\n\n    tvWidget.onChartReady(() => {\n      console.log('🚀 ~ useEffect ~ tvWidget.onChartReady:')\n      // const chart = tvWidget.chart()\n      // const studies = chart.getAllStudies()\n      // const volumeStudy = studies.find(s => s.name === 'Volume')\n\n      // const studiesList = tvWidget.getStudiesList()\n      // setIndicators(studiesList)\n\n      // // Remove existing volume study if it exists\n      // if (volumeStudy) {\n      //   chart.removeEntity(volumeStudy.id)\n      // }\n\n      setIsInitialized(true)\n\n      onChartReady?.()\n\n      const chart = tvWidget.chart()\n      tvWidgetRef.current = tvWidget\n      // chart.createMultipointShape([{ time: 1758519900, price: 3.5 }], { shape: 'note' })\n    })\n\n    // Then remove the TradingView widget\n    return () => {\n      if (tvWidgetRef.current) {\n        try {\n          tvWidgetRef.current.remove()\n        } catch (error) {\n          console.error('Error removing TradingView widget:', error)\n        }\n        tvWidgetRef.current = null\n        setIsInitialized(false)\n      }\n    }\n  }, [token?.coin_type, isMounted.current, tokenPriceUnit]) // 当 symbol 改变时重新初始化图表\n\n  // useEffect(() => {\n  //   console.log('tvWidgetRef.current###', tvWidgetRef.current)\n  // }, [tvWidgetRef.current])\n\n  // 切换时间周期\n  const handleChangeResolution = (value: ResolutionString) => {\n    if (tvWidgetRef.current) {\n      tvWidgetRef.current.chart().setResolution(value)\n    }\n  }\n\n  // 切换图表类型\n  const handleSetChartType = (chartType: number) => {\n    if (tvWidgetRef.current) {\n      tvWidgetRef.current.activeChart().setChartType(chartType)\n      // setCurrentChartType(chartType);\n    }\n  }\n\n  // 全屏\n  const handleToggleFullScreen = useCallback(() => {\n    if (!tvWidgetRef.current) return\n\n    try {\n      tvWidgetRef.current.startFullscreen()\n    } catch (error) {\n      console.error('Error toggling fullscreen:', error)\n    }\n  }, [])\n\n  // 前进后退\n  const handleUndoRedo = (action: 'undo' | 'redo') => {\n    if (!tvWidgetRef.current) return\n    const chart = tvWidgetRef.current.chart()\n    if (action === 'undo') {\n      chart.executeActionById('undo')\n    } else {\n      chart.executeActionById('redo')\n    }\n  }\n\n  // test\n  const handleTestAddMark = () => {\n    if (tvMarksOnDataCallbackRef.current) {\n      tvMarksOnDataCallbackRef.current([\n        {\n          id: 1,\n          time: 1758713400,\n          color: 'green',\n          text: [`This is the mark pop-up text. ${formatUSDPrice(20000)}`],\n          label: 'B',\n          labelFontColor: 'blue',\n          minSize: 25\n        },\n        {\n          id: 2,\n          time: 1758713400,\n          color: 'red',\n          text: ['Second marker'],\n          label: 'S',\n          labelFontColor: 'green',\n          minSize: 25\n        },\n        {\n          id: 3,\n          time: 1758712500,\n          color: 'red',\n          text: ['Second marker'],\n          label: 'S',\n          labelFontColor: 'green',\n          minSize: 25\n        }\n      ])\n    }\n  }\n\n  useDeepCompareEffect(() => {\n    if (!tvMarksOnDataCallbackRef.current) return\n    if (proTransactionList.length > 0 && token?.coin_type) {\n      const data = proTransactionList\n        .filter(item => fixCoinType(item.currentCoin.coin_type) === fixCoinType(token!.coin_type))\n        .map((item, index) => {\n          const amount = formatNumberWithDown(item.amount, item.currentCoin.decimals, true)\n          const currentCoinPrice = item?.price\n          const amountValue = d(currentCoinPrice).mul(amount).toString()\n          const symbol = item.currentCoin.symbol\n          return {\n            id: `pro_mark_${index}`,\n            time: Number(fixDown(d(item.time).div(1000).toNumber(), 0)),\n            color: item.type === 'Buy' ? 'green' : 'red',\n            text:\n              item.type === 'Buy'\n                ? `Bought ${amount} ${symbol}($${addComma(formatUSDPrice(amountValue, true))}) at $${addComma(formatUSDPrice(currentCoinPrice))} on ${formatTvMarkDate(item.time)}`\n                : `Sold ${amount} ${symbol}($${addComma(formatUSDPrice(amountValue, true))}) at $${addComma(formatUSDPrice(currentCoinPrice))} on ${formatTvMarkDate(item.time)}`,\n            label: item.type === 'Buy' ? 'B' : 'S',\n            textColor: '#fff',\n            labelFontColor: '#fff',\n            minSize: 20\n          }\n        })\n\n      tvMarksOnDataCallbackRef.current(data)\n    }\n  }, [proTransactionList, tvMarksOnDataCallbackRef.current, token?.coin_type])\n\n  return (\n    <VStack>\n      {/* <ChartHeader onChangeResolution={handleChangeResolution}></ChartHeader> */}\n      {/* <button onClick={handleTestAddMark}>testtest</button> */}\n      <div id=\"tv_chart_container\" ref={chartContainerRef} style={{ width: '100%', height: '460px' }} />\n    </VStack>\n  )\n}\n\nexport default TradingViewChart\n","import { trendingCarouselParams } from '@/components/pro/CarouselBlock'\nimport useGetApiData from '@/hooks/pro/useGetApiData'\nimport useProStore from '@/store/pro'\nimport { SelectTab } from '@cetus/design'\nimport SingleTokenInfo from '@cetus/design/src/components/common/SingleTokenInfo'\nimport { useDebounceFunction } from '@cetus/hooks'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport useTokenSelectStore from '@cetus/stores/src/useTokenSelectStore'\nimport { Token } from '@cetus/types'\nimport { NoData, SearchInput } from '@cetus/ui-kit'\nimport Icon from '@cetus/ui-kit/src/components/Icon'\nimport { Box, Center, HStack, Popover, PopoverBody, PopoverContent, PopoverTrigger, Text, useDisclosure, VStack } from '@chakra-ui/react'\nimport { ReactNode, useEffect, useMemo, useRef, useState } from 'react'\nimport FilterTable from './FilterTable'\n\ninterface TokenDropSelectProps {\n  children: ReactNode\n  onCoinSelect: (item: any) => void\n  whiteTokenList?: any\n  selectCoin?: any\n}\nconst tabList = [\n  {\n    label: 'Watchlist',\n    value: 'watchlist'\n  },\n  {\n    label: 'Trending',\n    value: 'trending'\n  },\n  {\n    label: 'Imported',\n    value: 'Imported'\n  }\n  // {\n  //   label: 'Top Gainers',\n  //   value: 'topGainers'\n  // }\n]\nexport default function TokenDropSelectBlock({ children, selectCoin, whiteTokenList, onCoinSelect }: TokenDropSelectProps) {\n  const { isApp } = useWindowWidth()\n  const firstItemRef = useRef(null)\n  const popoverRef = useRef<HTMLDivElement>(null)\n  const { isOpen, onOpen, onClose } = useDisclosure()\n  const [currentTab, setCurrentTab] = useState('Trending')\n\n  const [isLoading, setIsLoading] = useState(true)\n\n  const { recentSearchTokens, proTokenMap, setClearRecentSearchTokens, setRecentSearchTokens } = useProStore()\n\n  const { getProCoinList, getProCoinListWithCoins } = useGetApiData()\n  const [inputValue, setInputValue] = useState('')\n  const [tokenList, setTokenList] = useState<any>()\n  const { userCollectObj, importTokenList } = useTokenSelectStore()\n\n  const [watchList, setWatchList] = useState([])\n\n  const showList = useMemo(() => {\n    if ((currentTab === 'Watchlist' || currentTab === 'Imported') && !inputValue) {\n      return watchList\n    }\n    return tokenList\n  }, [currentTab, watchList, tokenList, inputValue])\n\n  // 获取trending列表\n  const fetchProData = async (params: any, isLoading = true) => {\n    setIsLoading(isLoading)\n    try {\n      const res = await getProCoinList(params)\n      setTokenList(res.list)\n      setIsLoading(false)\n    } catch (err) {\n      console.log('🚀 ~ fetchProData ~ err:', err)\n      setIsLoading(false)\n    }\n  }\n  const getWatchList = async (text?: string, isLoading = true, tab = currentTab) => {\n    setIsLoading(isLoading)\n    const coins = tab === 'Watchlist' ? Object?.keys(userCollectObj) || [] : importTokenList?.map((item: any) => item?.coin_type) || []\n\n    console.log('🚀 ~ getWatchList ~ coins:', coins)\n    if (coins?.length == 0) {\n      setWatchList([])\n    } else {\n      const list: any = await getProCoinListWithCoins(coins, 'hour24', text)\n      setWatchList(list)\n    }\n    setIsLoading(false)\n  }\n\n  const handleClose = () => {\n    setInputValue('')\n    setTokenList([])\n    setWatchList([])\n    setIsLoading(true)\n    onClose()\n  }\n\n  useEffect(() => {\n    console.log('TokenDropSelectBlock isOpen###', isOpen)\n    if (isOpen) {\n      // getUserCollectList() carouselBlock有调用\n      setInputValue('')\n      setCurrentTab('Trending')\n      fetchProData(trendingCarouselParams)\n    }\n  }, [isOpen])\n\n  const handleRefresh = () => {\n    console.log('🚀 ~ handleRefresh ~ currentTab:', currentTab)\n    if (inputValue) {\n      debouncedFilter(inputValue, false)\n    } else {\n      if (currentTab === 'Trending') {\n        fetchProData(trendingCarouselParams, false)\n      } else {\n        getWatchList('', false)\n      }\n    }\n  }\n  // 1分钟自动刷新\n  useEffect(() => {\n    const intervalId = setInterval(handleRefresh, 60 * 1000)\n    return () => clearInterval(intervalId)\n  }, [currentTab, inputValue])\n\n  useEffect(() => {\n    if (currentTab === 'Watchlist') {\n      getWatchList()\n    }\n  }, [userCollectObj])\n\n  useEffect(() => {\n    if (currentTab === 'Imported') {\n      getWatchList()\n    }\n  }, [importTokenList])\n\n  // 监听全局点击，关闭 Popover\n  useEffect(() => {\n    const handleClickOutside = (e: MouseEvent) => {\n      if (isOpen && popoverRef.current && !popoverRef.current.contains(e.target as Node)) {\n        // onClose()\n        handleClose()\n      }\n    }\n    document.addEventListener('mousedown', handleClickOutside)\n    return () => document.removeEventListener('mousedown', handleClickOutside)\n  }, [isOpen, onClose])\n\n  const handleInputChange = (value: string) => {\n    const regValue = value.replace(/[^[a-zA-Z0-9\\s]+$/g, '')\n    setInputValue(regValue)\n    debouncedFilter(regValue)\n  }\n\n  const debouncedFilter = useDebounceFunction((value: string, isLoading = true) => {\n    console.log('🚀 ~ debouncedFilter ~ result:', value)\n    fetchProData({ text: value }, isLoading)\n  }, 500)\n\n  const handleCurrentTab = (label: string) => {\n    setIsLoading(true)\n    setWatchList([])\n    setCurrentTab(label)\n    if (label == 'Trending') {\n      fetchProData(trendingCarouselParams)\n    } else {\n      getWatchList('', true, label)\n    }\n  }\n\n  const [hoverIconIndex, setHoverIconIndex] = useState(-1)\n  return (\n    <div ref={popoverRef}>\n      <Popover\n        isLazy\n        placement=\"bottom-end\"\n        modifiers={[\n          {\n            name: 'flip',\n            enabled: false // Disable automatic flip\n          },\n          {\n            name: 'shift',\n            enabled: false // Disable automatic shift\n          }\n        ]}\n        initialFocusRef={firstItemRef}\n        isOpen={isOpen}\n        trigger=\"click\"\n        // onClose={onClose}\n        onClose={handleClose}\n        onOpen={onOpen}\n      >\n        <PopoverTrigger>\n          <Center\n            sx={{\n              '.singleTokenInfoBox': {\n                svg: {\n                  transition: 'transform 0.5s',\n                  transform: isOpen ? 'rotate(180deg)' : 'rotate(0deg)'\n                }\n              }\n            }}\n            ref={firstItemRef}\n            as=\"button\"\n            onClick={() => onOpen()}\n          >\n            {children}\n          </Center>\n        </PopoverTrigger>\n        {isOpen && (\n          <PopoverContent\n            ml={{ base: '12px', lg: '20px' }}\n            w={{\n              base: 'calc(100vw - 24px)',\n              lg: '340px'\n            }}\n          >\n            <PopoverBody p=\"0px\">\n              <VStack align=\"flex-start\" w=\"100%\" p=\"8px\" borderRadius=\"12px\">\n                <Box\n                  w=\"100%\"\n                  // mb=\"8px\"\n                  sx={{\n                    input: {\n                      borderRadius: '8px',\n                      fontSize: '14px'\n                    }\n                  }}\n                >\n                  <SearchInput placeholder=\"Search tokens\" searchText={inputValue} onChange={(value: string) => handleInputChange(value)} />\n                </Box>\n                {recentSearchTokens && recentSearchTokens?.length > 0 && (\n                  <VStack w=\"100%\" align=\"flex-start\" gap=\"8px\">\n                    <HStack w=\"100%\" justify=\"space-between\">\n                      <Text fontSize=\"12px\" color=\"text_caption\" m=\"4px 0\">\n                        Recent Searches\n                      </Text>\n                      <Text _hover={{ color: 'text_caption' }} fontSize=\"12px\" cursor=\"pointer\" onClick={() => setClearRecentSearchTokens()}>\n                        Clear all\n                      </Text>\n                    </HStack>\n                    <HStack gap=\"8px\" flexWrap=\"wrap\">\n                      {recentSearchTokens?.toReversed()?.map((token: Token, index) => {\n                        return (\n                          <HStack\n                            key={token.coin_type}\n                            w=\"auto\"\n                            p={{ base: '6px 8px', lg: '6px 12px' }}\n                            align=\"center\"\n                            borderRadius=\"8px\"\n                            background=\"bg_secondary\"\n                            borderStyle=\"solid\"\n                            border=\"1px\"\n                            borderColor=\"border\"\n                            cursor=\"pointer\"\n                            position=\"relative\"\n                            userSelect=\"none\"\n                            _hover={{\n                              background: 'primary_opacity.10'\n                            }}\n                            onClick={() => {\n                              onCoinSelect(token)\n                              handleClose()\n                            }}\n                            onMouseEnter={() => setHoverIconIndex(index)}\n                            onMouseLeave={() => setHoverIconIndex(-1)}\n                          >\n                            <SingleTokenInfo\n                              token={token}\n                              imgBoxStyle={{ w: '20px', h: '20px' }}\n                              symbolFontSize=\"14px\"\n                              haveName={false}\n                              warningIcon={{ iconW: '10px', iconH: '10px' }}\n                            />\n                            {hoverIconIndex == index ? (\n                              <Icon\n                                xlinkHref=\"#icon-icon_close\"\n                                variant=\"round\"\n                                position=\"absolute\"\n                                boxW=\"20px\"\n                                boxH=\"20px\"\n                                top=\"-8px\"\n                                right=\"-8px\"\n                                onClick={e => {\n                                  e.stopPropagation()\n                                  setRecentSearchTokens(token, true)\n                                }}\n                              />\n                            ) : null}\n                          </HStack>\n                        )\n                      })}\n                    </HStack>\n                  </VStack>\n                )}\n                {!inputValue && (\n                  <SelectTab\n                    type=\"outlineTab\"\n                    wrapStyle={{\n                      w: {\n                        base: '100%'\n                      },\n                      gap: '0',\n                      borderRadius: '8px',\n                      p: '4px'\n                    }}\n                    itemStyle={{\n                      w: 'calc(100% / 3)',\n                      fontSize: '12px',\n                      h: '28px',\n                      p: '8px 0px'\n                    }}\n                    tabList={tabList}\n                    currentTab={currentTab}\n                    handleChangeTab={item => handleCurrentTab(item.label)}\n                  />\n                )}\n                {showList?.length == 0 && !isLoading ? (\n                  <Center w=\"100%\" sx={{ p: { color: 'primary_gray', fontSize: '12px' } }}>\n                    <NoData\n                      type=\"nodata\"\n                      p=\"12px\"\n                      text={currentTab == 'Watchlist' ? 'No tokens in your watchlist.' : currentTab == 'Imported' ? 'No Imported Tokens' : 'No Data'}\n                      noBorder\n                    />\n                  </Center>\n                ) : (\n                  <Box w=\"100%\" maxH=\"310px\" overflow=\"auto\">\n                    <FilterTable\n                      isShowDelete={currentTab === 'Imported'}\n                      isLoading={isLoading}\n                      data={showList}\n                      onRowClick={(item: any) => {\n                        const tokenInfo = item?.coin_type ? item : proTokenMap?.get(item?.coinType)\n                        onCoinSelect({ ...item, ...tokenInfo })\n                        setRecentSearchTokens({ ...item, ...tokenInfo })\n                        // onClose()\n                        handleClose()\n                      }}\n                    />\n                  </Box>\n                )}\n              </VStack>\n            </PopoverBody>\n          </PopoverContent>\n        )}\n      </Popover>\n    </div>\n  )\n}\n","import useProData from '@/hooks/pro/useProData'\nimport useProStore from '@/store/pro'\nimport { CetusTooltip, useTokenSelect } from '@cetus/design'\nimport SingleTokenInfo from '@cetus/design/src/components/common/SingleTokenInfo'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport useTokenSelectStore from '@cetus/stores/src/useTokenSelectStore'\nimport { Icon, RefreshButton } from '@cetus/ui-kit'\nimport { textEllipses, toLongCoinType } from '@cetus/utils'\nimport { Center, HStack, Text, VStack } from '@chakra-ui/react'\nimport { useNavigate } from 'react-router-dom'\nimport TokenDropSelectBlock from './tokenDropSelect'\n\nconst CoinHeader = ({\n  handleToggleDirect,\n  h5ShowIcon = true,\n  whiteTokenList,\n  onCoinSelect\n}: {\n  handleToggleDirect: () => void\n  h5ShowIcon?: boolean\n  onCoinSelect: (item: any) => void\n  whiteTokenList?: any\n}) => {\n  const { showTokenInfo, anotherTokenInfo, notChangeToken } = useProStore()\n  const { userCollectObj, userCollectList } = useTokenSelectStore()\n  const { delUserCollectToken, addUserCollectToken } = useTokenSelect()\n  const { isApp } = useWindowWidth()\n  const { getCoinRelatedData } = useProData()\n  const navigate = useNavigate()\n  return (\n    <VStack w=\"100%\" align=\"flex-start\" gap=\"0\">\n      {!h5ShowIcon && isApp && (\n        <Text fontSize=\"14px\" fontWeight=\"500\" color=\"text_caption\" h=\"20px\" lineHeight=\"20px\" mb=\"20px\">\n          Coin Details\n        </Text>\n      )}\n      {/* {(h5ShowIcon || !isApp) && (\n        <BackButton\n          w=\"unset\"\n          text=\"Back to Dashboard\"\n          border=\"none\"\n          bg=\"none\"\n          mb=\"12px\"\n          ml=\"-6px\"\n          onClick={() => {\n            navigate(`/pro`)\n          }}\n          customTextStyle={{\n            fontSize: '12px',\n            whiteSpace: 'nowrap'\n          }}\n        />\n      )} */}\n      <HStack w=\"100%\" justify=\"space-between\" mb={h5ShowIcon ? '8px' : '0px'}>\n        {h5ShowIcon || !isApp ? (\n          <TokenDropSelectBlock\n            children={\n              <HStack className=\"singleTokenInfoBox\">\n                <SingleTokenInfo\n                  haveTooltip={true}\n                  imgBoxStyle={{ w: '32px', h: '32px' }}\n                  symbolFontSize=\"16px\"\n                  nameEllipsesDecimals={20}\n                  coinType={showTokenInfo?.coin_type}\n                  warningIcon={{ iconW: '16px', iconH: '16px' }}\n                />\n                <Icon svgW=\"16px\" xlinkHref=\"#icon-icon_arrow\" variant=\"gray\" />\n              </HStack>\n            }\n            onCoinSelect={onCoinSelect}\n            whiteTokenList={whiteTokenList}\n            selectCoin={null}\n          />\n        ) : (\n          <SingleTokenInfo\n            haveTooltip={true}\n            imgBoxStyle={{ w: '32px', h: '32px' }}\n            symbolFontSize=\"16px\"\n            nameEllipsesDecimals={20}\n            coinType={showTokenInfo?.coin_type}\n            warningIcon={{ iconW: '16px', iconH: '16px' }}\n          />\n        )}\n        {(h5ShowIcon || !isApp) && (\n          <HStack gap=\"12px\">\n            <CetusTooltip showTooltip={isApp ? false : true} placement=\"top\" tooltip={<Text fontSize=\"12px\">Refresh</Text>}>\n              <Center>\n                <RefreshButton\n                  handleRefresh={() => {\n                    getCoinRelatedData(showTokenInfo?.coin_type || '', true)\n                  }}\n                  borderRadius=\"8px\"\n                  w=\"28px\"\n                  h=\"28px\"\n                  innerStyle={{ bg: 'bg_secondary' }}\n                />\n              </Center>\n            </CetusTooltip>\n            {!notChangeToken && (\n              <CetusTooltip\n                showTooltip={isApp ? false : true}\n                placement=\"top\"\n                tooltip={<Text fontSize=\"12px\">Switch to {textEllipses(anotherTokenInfo?.symbol, 10) || ''} </Text>}\n              >\n                <HStack\n                  w=\"28px\"\n                  h=\"28px\"\n                  borderRadius=\"8px\"\n                  bg=\"bg_secondary\"\n                  border=\"1px solid\"\n                  borderColor=\"border\"\n                  justify=\"center\"\n                  align=\"center\"\n                >\n                  <Icon xlinkHref=\"#icon-icon_swap1\" svgW=\"18px\" svgH=\"18px\" onClick={handleToggleDirect} />\n                </HStack>\n              </CetusTooltip>\n            )}\n\n            {showTokenInfo?.coin_type && userCollectObj[toLongCoinType(showTokenInfo?.coin_type)] ? (\n              <CetusTooltip showTooltip={isApp ? false : true} placement=\"top\" tooltip={<Text fontSize=\"12px\">Remove from Watchlisit</Text>}>\n                <HStack\n                  w=\"28px\"\n                  h=\"28px\"\n                  borderRadius=\"8px\"\n                  bg=\"bg_secondary\"\n                  border=\"1px solid\"\n                  borderColor=\"border\"\n                  justify=\"center\"\n                  align=\"center\"\n                >\n                  <Icon\n                    xlinkHref=\"#icon-icon_star_sel\"\n                    svgFill=\"primary\"\n                    svgHover=\"primary\"\n                    onClick={e => {\n                      e.stopPropagation()\n                      if (showTokenInfo?.coin_type) {\n                        delUserCollectToken(showTokenInfo)\n                      }\n                    }}\n                  />\n                </HStack>\n              </CetusTooltip>\n            ) : (\n              <CetusTooltip showTooltip={isApp ? false : true} placement=\"top\" tooltip={<Text fontSize=\"12px\">Add to Watchlisit</Text>}>\n                <HStack\n                  w=\"28px\"\n                  h=\"28px\"\n                  borderRadius=\"8px\"\n                  bg=\"bg_secondary\"\n                  border=\"1px solid\"\n                  borderColor=\"border\"\n                  justify=\"center\"\n                  align=\"center\"\n                >\n                  <Icon\n                    cursor={userCollectList?.length >= 100 ? 'not-allowed' : 'pointer'}\n                    xlinkHref=\"#icon-icon_star\"\n                    variant=\"primary\"\n                    onClick={e => {\n                      e.stopPropagation()\n                      if (showTokenInfo?.coin_type && userCollectList?.length < 100) {\n                        addUserCollectToken(showTokenInfo)\n                      }\n                    }}\n                  />\n                </HStack>\n              </CetusTooltip>\n            )}\n          </HStack>\n        )}\n      </HStack>\n    </VStack>\n  )\n}\n\nexport default CoinHeader\n","import ChartLoading from '@/components/chart/ChartLoading'\nimport TradingViewBvChart from '@/components/tradingViewBvChart'\n// import useProStore from '@/store/pro'\nimport { Block } from '@cetus/design'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { Token } from '@cetus/types'\nimport { VStack } from '@chakra-ui/react'\nimport CoinHeader from '../common/proModeAndChart/CoinHeader'\n\nexport default function ProChart({\n  whiteTokenList,\n  onCoinSelect,\n  token,\n  tokenPriceUnit,\n  handleToggleDirect\n}: {\n  token: Token | undefined\n  whiteTokenList?: any\n  tokenPriceUnit: string\n  onCoinSelect: (item: any) => void\n  handleToggleDirect: () => void\n}) {\n  // const { setCoinBvPrice } = useProStore()\n  const handleBvPriceChange = (data: { coinType: string; price: string }) => {\n    // if (data?.coinType && data?.price) {\n    //   setCoinBvPrice({\n    //     coinType: data?.coinType,\n    //     // price: formatSmallPrice(data?.price, 16)\n    //     price: data?.price\n    //   })\n    // }\n  }\n  const { isApp } = useWindowWidth()\n  return (\n    <VStack w=\"100%\">\n      {isApp && <CoinHeader whiteTokenList={whiteTokenList} onCoinSelect={onCoinSelect} handleToggleDirect={handleToggleDirect} />}\n      <Block p=\"0\" overflow=\"hidden\" position=\"relative\" borderRadius=\"16px\" w=\"100%\" h={{ base: '422px', lg: '475px' }}>\n        {!token || (tokenPriceUnit === undefined && <ChartLoading />)}\n        {token && tokenPriceUnit !== undefined && (\n          <TradingViewBvChart token={token} tokenPriceUnit={tokenPriceUnit} onChangePrice={handleBvPriceChange} />\n        )}\n      </Block>\n    </VStack>\n  )\n}\n","export enum TradeTabs {\n  Swap = 'Swap',\n  Limit = 'Limit',\n  DCA = 'DCA'\n}\n","import useProStore from '@/store/pro'\nimport SelectTab from '@cetus/design/src/components/common/SelectTab'\n\nfunction BuySellTab() {\n  const { currentProTab, setCurrentProTab } = useProStore()\n  const tabList = [\n    {\n      label: 'Buy',\n      value: 'buy'\n    },\n    {\n      label: 'Sell',\n      value: 'Sell'\n    }\n  ]\n  return (\n    <SelectTab<any, any>\n      type=\"outlineTab\"\n      tabList={tabList}\n      currentTab={currentProTab}\n      handleChangeTab={tab => setCurrentProTab(tab?.label, 'buySellTab')}\n      wrapStyle={{\n        w: '100%',\n        h: '48px',\n        p: '4px',\n        border: '1px solid',\n        borderColor: 'border',\n        borderRadius: '16px',\n        gap: '4px',\n        zIndex: '99',\n        m: '8px 0 0px'\n      }}\n      itemStyle={{\n        w: '50%',\n        h: '100%',\n        p: '4px 8px',\n        borderRadius: '12px',\n        gap: '4px',\n        justifyContent: 'center',\n        alignItems: 'center',\n        fontSize: '14px',\n        fontWeight: '500',\n        // 使用 Chakra UI 的 sx 支持条件样式\n        sx: {\n          '&[data-active=\"true\"]': {\n            backgroundColor: currentProTab == 'Buy' ? 'primary_green_opacity.10' : 'primary_red_opacity.10',\n            color: currentProTab == 'Buy' ? 'primary_green' : 'primary_red'\n          }\n        }\n      }}\n      selectTabItemTextStyle={{\n        color: 'primary_gray',\n        sx: {\n          '&[data-active=\"true\"]': {\n            color: currentProTab == 'Buy' ? 'primary_green' : 'primary_red'\n          }\n        }\n      }}\n    />\n  )\n}\n\nexport default BuySellTab\n","import useGlobalStore from '@/store/common/global'\nimport useProStore from '@/store/pro'\nimport { Block, CetusTooltip, SelectTab } from '@cetus/design'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { Box, Center, HStack, Image, Text, VStack } from '@chakra-ui/react'\n\nimport { useEffect, useMemo } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { TradeTabs } from '../swap/type'\nimport BuySellTab from './proModeAndChart/BuySellTab'\n\nconst tradeTabList = [\n  {\n    label: TradeTabs.Swap\n  },\n  {\n    label: TradeTabs.Limit\n  },\n  {\n    label: TradeTabs.DCA\n  }\n]\n\ntype TradeTab = {\n  currTradeTab: TradeTabs\n}\n\nexport function TradeTab(props: TradeTab) {\n  const { currTradeTab } = props\n  const { setIsShowTradeChart, setIsShowTradeOrders } = useGlobalStore()\n  const { isProMode, setIsProMode } = useProStore()\n  const { from, to, pay, target } = useParams()\n\n  const { a, b } = useMemo(() => {\n    return {\n      a: from || pay || '',\n      b: to || target || ''\n    }\n  }, [from, to, pay, target])\n\n  useEffect(() => {\n    if (isProMode) {\n      // setIsShowTradeChart(true)\n      setIsShowTradeOrders(false)\n    }\n  }, [isProMode])\n  const navigate = useNavigate()\n  const { isApp } = useWindowWidth()\n  return (\n    <VStack w=\"100%\" gap=\"0\">\n      {isProMode && <BuySellTab />}\n      <HStack w=\"100%\" justify=\"space-between\">\n        <SelectTab\n          type=\"borderTab\"\n          currentTab={currTradeTab}\n          tabList={tradeTabList}\n          handleChangeTab={tab => {\n            if (tab.label === TradeTabs.Limit) {\n              navigate(`/limit${a ? `/${a}` : ''}${b ? `/${b}` : ''}`)\n            } else if (tab.label === TradeTabs.DCA) {\n              navigate(`/dca${a ? `/${a}` : ''}${b ? `/${b}` : ''}`)\n            } else {\n              navigate(`/swap${a ? `/${a}` : ''}${b ? `/${b}` : ''}`)\n            }\n          }}\n          wrapStyle={{\n            bg: 'none',\n            h: '52px',\n            gap: '32px',\n            border: 'none'\n          }}\n          itemStyle={{\n            fontSize: '16px',\n            fontWeight: 500,\n            position: 'relative'\n          }}\n        />\n        <HStack>\n          {currTradeTab === TradeTabs.Swap && (\n            <CetusTooltip\n              placement=\"top\"\n              tooltip={\n                <Text fontWeight=\"500\" fontSize=\"12px\">\n                  Merge Swap\n                </Text>\n              }\n            >\n              <Block\n                p=\"5px 8px\"\n                display=\"flex\"\n                alignItems=\"center\"\n                gap=\"6px\"\n                borderRadius=\"8px\"\n                w=\"fit-content\"\n                onClick={() => navigate('/merge-swap')}\n              >\n                <Image src=\"/images/icon_merge_swap.svg\" w=\"16px\" h=\"16px\" />\n                <Text color=\"primary_gray\" fontSize=\"12px\" fontWeight=\"500\">\n                  Merge\n                </Text>\n              </Block>\n            </CetusTooltip>\n          )}\n\n          <HStack gap=\"2px\" onClick={() => setIsProMode(!isProMode)} cursor=\"pointer\">\n            <CetusTooltip\n              showTooltip={isApp ? false : true}\n              placement=\"top\"\n              tooltip={\n                <Text fontWeight=\"500\" fontSize=\"12px\">\n                  {isProMode ? 'Switch to Lite Mode' : 'Switch to Pro Mode'}\n                </Text>\n              }\n            >\n              <Center>\n                {!isProMode ? (\n                  <Image w=\"62px\" h=\"28px\" src=\"/images/icon_lite.png\" />\n                ) : (\n                  <Box position=\"relative\">\n                    <Image w=\"62px\" h=\"28px\" src=\"/images/icon_lpro.png\" />\n                    {/* <Image w=\"30px\" h=\"10px\" src=\"/images/icon_beta_new@2x.png\" position=\"absolute\" top=\"-4px\" right=\"-8px\" /> */}\n                  </Box>\n                )}\n              </Center>\n            </CetusTooltip>\n          </HStack>\n        </HStack>\n      </HStack>\n    </VStack>\n  )\n}\n","import useTokenRank from '@/hooks/common/useTokenRank'\nimport { Block } from '@cetus/design'\nimport { Token } from '@cetus/types'\nimport { Icon } from '@cetus/ui-kit'\nimport CoinPairImage from '@cetus/ui-kit/src/components/CoinPairImage'\nimport { toLongCoinType } from '@cetus/utils'\nimport { Box, Center, HStack, Skeleton, SkeletonCircle, Text, VStack } from '@chakra-ui/react'\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react'\n\nimport useProStore from '@/store/pro'\nimport ChartLoading from '../chart/ChartLoading'\n\ntype LimitPriceChartProps = {\n  baseToken?: Token\n  quoteToken?: Token\n  isChangeDirect?: boolean\n}\n\nexport function LimitPriceChart(props: LimitPriceChartProps) {\n  const [isLoading, setIsLoading] = useState(true)\n  const { baseToken, quoteToken, isChangeDirect } = props\n  const [isSwapSort, setIsSwapSort] = useState<boolean>(false)\n  const [tokenA, setTokenA] = useState<Token | undefined>(undefined)\n  const [tokenB, setTokenB] = useState<Token | undefined>(undefined)\n  const { getTokenRank } = useTokenRank()\n  const { isProMode } = useProStore()\n  const didMountRef = useRef(false)\n  useEffect(() => {\n    if (didMountRef.current) {\n      setIsSwapSort(prev => !prev)\n    } else {\n      didMountRef.current = true\n    }\n  }, [isChangeDirect])\n\n  // 根据rank 展示pair\n  useEffect(() => {\n    if (baseToken?.coin_type && quoteToken?.coin_type && baseToken?.coin_type !== quoteToken?.coin_type) {\n      const direct = getTokenRank(baseToken, quoteToken)\n      console.log('test price kline direct:', direct)\n      console.log('test price kline baseToken:', baseToken)\n      console.log('test price kline quoteToken:', quoteToken)\n      const newTokenA = direct ? baseToken : quoteToken\n      const newTokenB = direct ? quoteToken : baseToken\n\n      const newDTokenA = !isSwapSort ? newTokenA : newTokenB\n      const newDTokenB = !isSwapSort ? newTokenB : newTokenA\n      setTokenA(newDTokenA)\n      setTokenB(newDTokenB)\n    }\n  }, [baseToken?.coin_type, quoteToken?.coin_type, isSwapSort])\n\n  const coinPair = useMemo(() => {\n    return `${tokenA?.coin_type}##${tokenB?.coin_type}`\n  }, [tokenA?.coin_type, tokenB?.coin_type])\n\n  const onChartReady = useCallback(() => {\n    setIsLoading(false)\n  }, [])\n\n  // const [customApiIsNoData, setCustomApiIsNoData] = useState(false)\n  // const handleChangeCustomApiIsNoData = useCallback((value: boolean) => {\n  //   console.log('🚀 ~ handleChangeCustomApiIsNoData ~ value:', value)\n  //   setCustomApiIsNoData(value)\n  //   if (value) {\n  //     setIsLoading(true)\n  //   }\n  // }, [])\n\n  // useEffect(() => {\n  //   if (coinPair) {\n  //     setIsLoading(true)\n  //     setCustomApiIsNoData(false)\n  //   }\n  // }, [coinPair])\n\n  console.log('isLoading isLoading: ', isLoading)\n\n  return (\n    <VStack w=\"100%\" position=\"relative\" alignItems=\"start\" gap={{ base: '4px', lg: '16px' }}>\n      {!isProMode && (\n        <Box>\n          {isLoading ? (\n            <HStack h=\"52px\" lineHeight=\"52px\" gap=\"8px\">\n              <SkeletonCircle />\n              <SkeletonCircle />\n              <Skeleton />\n            </HStack>\n          ) : (\n            <HStack h=\"52px\" lineHeight=\"52px\" gap=\"8px\">\n              <CoinPairImage\n                coinACoinType={tokenA?.coin_type}\n                coinBCoinType={tokenB?.coin_type}\n                coinAIconUrl={tokenA?.logo_url}\n                coinBIconUrl={tokenB?.logo_url}\n                ml=\"-4px\"\n              />\n              <Text textColor=\"text_caption\" fontSize=\"16px\">\n                {tokenA?.symbol} / {tokenB?.symbol}\n              </Text>\n\n              <Icon\n                xlinkHref=\"#icon-icon_swap1\"\n                onClick={() => {\n                  setIsSwapSort(!isSwapSort)\n                }}\n              />\n            </HStack>\n          )}\n        </Box>\n      )}\n      <Block p=\"0\" overflow=\"hidden\" borderRadius=\"16px\" position=\"relative\" w=\"100%\" h=\"422px\">\n        {isLoading && (\n          <Center className=\"test-is-loading\" position=\"absolute\" left=\"0px\" top=\"0px\" w=\"100%\" h=\"422px\" bg=\"bg_primary\" zIndex=\"10\">\n            <ChartLoading />\n            {/* <ChartSkeletonLoader height={470} preserveAspectRatio=\"xMidYMid meet\" color={'bg_primary'} /> */}\n          </Center>\n        )}\n        {/* {customApiIsNoData ? ( */}\n        {/* <iframe\n          id=\"geckoterminal-embed\"\n          className=\"frame\"\n          style={{ display: isLoading ? 'none' : 'block' }}\n          height=\"422px\"\n          width=\"100%\"\n          title=\"GeckoTerminal Embed\"\n          frameBorder=\"0\"\n          allow=\"clipboard-write\"\n          allowFullScreen\n          src={`https://birdeye.so/tv-widget/${extractStructTagFromType(tokenA?.coin_type).full_address}/${extractStructTagFromType(tokenB?.coin_type).full_address}?chain=sui&viewMode=base%2Fquote&chartInterval=15&chartType=CANDLE&chartTimezone=Atlantic%2FReykjavik&chartLeftToolbar=show&theme=dark&cssCustomProperties=--tv-color-platform-background%3A%230F0F0F&cssCustomProperties=--tv-color-pane-background%3A%230F0F0F&chartOverrides=paneProperties.backgroundType%3Asolid&chartOverrides=paneProperties.backgroundGradientStartColor%3A%230F0F0F&chartOverrides=paneProperties.backgroundGradientEndColor%3A%230F0F0F&chartOverrides=paneProperties.background%3A%230F0F0F`}\n          onLoad={() => {\n            setIsLoading(false)\n          }}\n        /> */}\n\n        {tokenA?.coin_type && tokenB?.coin_type && (\n          <iframe\n            id=\"geckoterminal-embed\"\n            className=\"frame\"\n            style={{ display: isLoading ? 'none' : 'block' }}\n            height=\"422px\"\n            width=\"100%\"\n            title=\"GeckoTerminal Embed\"\n            frameBorder=\"0\"\n            allow=\"clipboard-write\"\n            allowFullScreen\n            // src={`https://birdeye.so/tv-widget/${extractStructTagFromType(tokenA?.coin_type).full_address}/${extractStructTagFromType(tokenB?.coin_type).full_address}?chain=sui&viewMode=base%2Fquote&chartInterval=15&chartType=CANDLE&chartTimezone=Atlantic%2FReykjavik&chartLeftToolbar=show&theme=dark&cssCustomProperties=--tv-color-platform-background%3A%230F0F0F&cssCustomProperties=--tv-color-pane-background%3A%230F0F0F&chartOverrides=paneProperties.backgroundType%3Asolid&chartOverrides=paneProperties.backgroundGradientStartColor%3A%230F0F0F&chartOverrides=paneProperties.backgroundGradientEndColor%3A%230F0F0F&chartOverrides=paneProperties.background%3A%230F0F0F`}\n            src={`https://noodles.fi/tv-widget?coinA=${toLongCoinType(tokenA?.coin_type)}&coinB=${toLongCoinType(tokenB?.coin_type)}&theme=dark`}\n            onLoad={() => {\n              setIsLoading(false)\n            }}\n          />\n        )}\n\n        {/* ) \n        : (\n         <TradingViewChart tokenA={tokenA} tokenB={tokenB} onChartReady={onChartReady} onChangeApiStatus={handleChangeCustomApiIsNoData} />\n         )} */}\n      </Block>\n    </VStack>\n  )\n}\n"],"names":["globalWebSocket","globalMessageHandlers","globalState","isManualDisconnect","visibilityDisconnectTimer","activeSubscriptions","useWebSocket","options","state","setState","useState","reconnectCount","setReconnectCount","messageHandlersRef","useRef","optionsRef","reconnectAttemptsRef","updateGlobalState","useCallback","newState","handleMessage","event","message","globalHandlers","handler","componentHandlers","error","internalSend","action","data","connect","url","_a","subscription","maxAttempts","interval","_b","prev","disconnect","handleVisibilityChange","disconnectDelay","subscribe","messageType","send","isSubscription","success","unsubscribe","useEffect","bvHost","latestRequestId","useGetPriceKlineData","setCoinBvPrice","proTransactionList","useProStore","currentPoolId","unsubscribeRef","getHistoricalData","poolId","resolution","from","to","firstDataRequest","callback","onErrorCallback","requestId","v4","token","fixCoinType","start","getTimestampMinusHours","apiUrl","fetchData","result","_d","_c","item","d","sleepTime","list","handleSend","value","dateType","dateTypeSecondObj","DataFeed","subscribeKlineData","onChangePrice","setTvMarksOnDataCallback","__publicField","symbolName","onSymbolResolvedCallback","onResolveErrorCallback","arr","symbol","unit","symbolInfo","onDataCallback","periodParams","onHistoryCallback","_poolId","onRealtimeCallback","subscriberUID","onResetCacheNeededCallback","TradingViewChart","onChartReady","tokenPriceUnit","chartContainerRef","tvWidgetRef","isMounted","indicators","setIndicators","setIsInitialized","setCurrentPoolId","tvMarksOnDataCallbackRef","widgetOptions","minTick","price","signPositive","formatUSDPrice","tvWidget","widget","useDeepCompareEffect","index","amount","formatNumberWithDown","currentCoinPrice","amountValue","fixDown","addComma","formatTvMarkDate","jsx","VStack","tabList","TokenDropSelectBlock","children","selectCoin","whiteTokenList","onCoinSelect","useWindowWidth","firstItemRef","popoverRef","isOpen","onOpen","onClose","useDisclosure","currentTab","setCurrentTab","isLoading","setIsLoading","recentSearchTokens","proTokenMap","setClearRecentSearchTokens","setRecentSearchTokens","getProCoinList","getProCoinListWithCoins","useGetApiData","inputValue","setInputValue","tokenList","setTokenList","userCollectObj","importTokenList","useTokenSelectStore","watchList","setWatchList","showList","useMemo","fetchProData","params","res","err","getWatchList","text","tab","coins","handleClose","trendingCarouselParams","handleRefresh","debouncedFilter","intervalId","handleClickOutside","e","handleInputChange","regValue","useDebounceFunction","handleCurrentTab","label","hoverIconIndex","setHoverIconIndex","jsxs","Popover","PopoverTrigger","Center","PopoverContent","PopoverBody","Box","SearchInput","HStack","Text","SingleTokenInfo","Icon","SelectTab","NoData","FilterTable","tokenInfo","CoinHeader","handleToggleDirect","h5ShowIcon","showTokenInfo","anotherTokenInfo","notChangeToken","userCollectList","delUserCollectToken","addUserCollectToken","useTokenSelect","isApp","getCoinRelatedData","useProData","useNavigate","CetusTooltip","RefreshButton","textEllipses","toLongCoinType","ProChart","handleBvPriceChange","Block","ChartLoading","TradingViewBvChart","TradeTabs","BuySellTab","currentProTab","setCurrentProTab","tradeTabList","TradeTab","props","currTradeTab","setIsShowTradeChart","setIsShowTradeOrders","useGlobalStore","isProMode","setIsProMode","pay","target","useParams","a","b","navigate","Image","LimitPriceChart","baseToken","quoteToken","isChangeDirect","isSwapSort","setIsSwapSort","tokenA","setTokenA","tokenB","setTokenB","getTokenRank","useTokenRank","didMountRef","direct","newTokenA","newTokenB","newDTokenA","newDTokenB","SkeletonCircle","Skeleton","CoinPairImage"],"mappings":"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"}