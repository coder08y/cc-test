{"version":3,"file":"MergeSwap-c8U_Es56.js","sources":["../../src/store/merge-swap/useMergeSwapStore.ts","../../../../node_modules/.pnpm/ahooks@3.9.5_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/ahooks/lib/utils/lodash-polyfill.js","../../../../node_modules/.pnpm/ahooks@3.9.5_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/ahooks/lib/useLatest/index.js","../../../../node_modules/.pnpm/ahooks@3.9.5_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/ahooks/lib/utils/index.js","../../../../node_modules/.pnpm/ahooks@3.9.5_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/ahooks/lib/utils/isDev.js","../../../../node_modules/.pnpm/ahooks@3.9.5_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/ahooks/lib/useUnmount/index.js","../../../../node_modules/.pnpm/ahooks@3.9.5_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/ahooks/lib/useDebounceFn/index.js","../../../../node_modules/.pnpm/ahooks@3.9.5_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/ahooks/lib/createUpdateEffect/index.js","../../../../node_modules/.pnpm/ahooks@3.9.5_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/ahooks/lib/useUpdateEffect/index.js","../../../../node_modules/.pnpm/ahooks@3.9.5_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/ahooks/lib/useDebounceEffect/index.js","../../src/hooks/merge-swap/useMergeSwapHelper.ts","../../src/hooks/merge-swap/useMergeSwap.ts","../../src/types/merge_swap.ts","../../src/hooks/merge-swap/useMergeSwapButtonStatus.ts","../../src/components/merge-swap/MergeSwapConfirm.tsx","../../src/components/merge-swap/MergeTradeHeader.tsx","../../src/components/merge-swap/MergeTradeInputFrom.tsx","../../src/components/merge-swap/MergeSwapTrade.tsx","../../src/components/merge-swap/route/MergeSwapRouteItem.tsx","../../src/components/merge-swap/route/MergeSwapRoute.tsx","../../src/pages/MergeSwap.tsx"],"sourcesContent":["import { MergeSwapQuote } from '@/types/merge_swap'\nimport { Token } from '@cetus/types'\nimport envConfigs from '@cetus/types/src/config/envConfigs'\nimport { fixCoinType } from '@cetusprotocol/common-sdk'\nimport { create, StateCreator } from 'zustand'\n\ninterface MergeSwapState {\n  fromTokenList: Token[]\n  setFromTokenList: (fromTokenList: Token[]) => void\n  switchFromToken: (token: Token, index: number) => void\n  removeFromToken: (token: Token) => void\n  fromAmountObj: Record<string, string>\n  setFromAmountObj: (coinType: string, fromAmount: string) => void\n  clearFromAmountObj: () => void\n\n  toToken: Token | undefined\n  setToToken: (toToken: Token | undefined) => void\n  toAmount: string\n  setToAmount: (toAmount: string) => void\n\n  findRouterLoading: boolean\n  setFindRouterLoading: (loading: boolean) => void\n\n  mergeSwapQuote?: MergeSwapQuote\n  setMergeSwapQuote: (mergeSwapQuote?: MergeSwapQuote) => void\n\n  isShowSelectRouter: boolean\n  setIsShowSelectRouter: (isShowSelectRouter: boolean) => void\n\n  isOpenRoutePathModal: boolean\n  setIsOpenRoutePathModal: (isOpenRoutePathModal: boolean) => void\n  selectedRoutePathIndex: number\n  setSelectedRoutePathIndex: (selectedRoutePathIndex: number) => void\n\n  clearData: () => void\n}\n\nconst store: StateCreator<MergeSwapState> = (set, get) => ({\n  isOpenRoutePathModal: false,\n  setIsOpenRoutePathModal: (isOpenRoutePathModal: boolean) => {\n    set({ isOpenRoutePathModal })\n  },\n  selectedRoutePathIndex: 0,\n  setSelectedRoutePathIndex: (selectedRoutePathIndex: number) => {\n    set({ selectedRoutePathIndex })\n  },\n\n  isShowSelectRouter: false,\n  setIsShowSelectRouter: (isShowSelectRouter: boolean) => {\n    set({ isShowSelectRouter })\n  },\n  mergeSwapQuote: undefined,\n  setMergeSwapQuote: (mergeSwapQuote?: MergeSwapQuote) => {\n    set({ mergeSwapQuote })\n  },\n  findRouterLoading: false,\n  setFindRouterLoading: (loading: boolean) => {\n    set({ findRouterLoading: loading })\n  },\n  fromAmountObj: {},\n  setFromAmountObj: (coinType: string, fromAmount: string) => {\n    set({ fromAmountObj: { ...get().fromAmountObj, [coinType]: fromAmount } })\n  },\n  clearFromAmountObj: () => {\n    set({ fromAmountObj: {} })\n  },\n  toAmount: '',\n  setToAmount: (toAmount: string) => {\n    set({ toAmount })\n  },\n  toToken: { ...envConfigs.sui_coin },\n  setToToken: (toToken: Token | undefined) => {\n    set({ toToken })\n  },\n  fromTokenList: [],\n  setFromTokenList: (fromTokenList: Token[]) => {\n    const currentAmountObj = get().fromAmountObj\n    const newAmountObj = { ...currentAmountObj }\n\n    const newCoinTypes = new Set(fromTokenList.map(token => token.coin_type))\n\n    Object.keys(newAmountObj).forEach(coinType => {\n      if (!newCoinTypes.has(coinType)) {\n        newAmountObj[coinType] = ''\n      }\n    })\n\n    set({ fromTokenList, fromAmountObj: newAmountObj })\n  },\n  switchFromToken: (token: Token, fromIndex: number) => {\n    const currentList = get().fromTokenList\n    const currentAmountObj = get().fromAmountObj\n    const dupeIndex = currentList.findIndex(item => fixCoinType(item.coin_type) === fixCoinType(token.coin_type))\n\n    currentAmountObj[currentList[fromIndex].coin_type] = ''\n    currentAmountObj[token.coin_type] = ''\n    currentList[fromIndex] = token\n\n    let newList = currentList.filter((_, index) => index !== dupeIndex)\n\n    set({ fromTokenList: [...newList], fromAmountObj: { ...currentAmountObj } })\n  },\n  removeFromToken: (token: Token) => {\n    const currentList = get().fromTokenList\n    set({ fromTokenList: currentList.filter(existingToken => existingToken.coin_type !== token.coin_type) })\n  },\n  clearData: () => {\n    set({\n      fromTokenList: [],\n      toToken: { ...envConfigs.sui_coin },\n      toAmount: '',\n      findRouterLoading: false,\n      mergeSwapQuote: undefined,\n      isShowSelectRouter: false,\n      fromAmountObj: {},\n      isOpenRoutePathModal: false,\n      selectedRoutePathIndex: 0\n    })\n  }\n})\n\nconst useMergeSwapStore = create(store)\n\nexport default useMergeSwapStore\n","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"debounce\", {\n  enumerable: true,\n  get: function get() {\n    return _debounce[\"default\"];\n  }\n});\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\nvar _debounce = _interopRequireDefault(require(\"lodash/debounce\"));\nfunction isNodeOrWeb() {\n  var freeGlobal = (typeof global === 'undefined' ? 'undefined' : typeof global === \"undefined\" ? \"undefined\" : (0, _typeof2[\"default\"])(global)) == 'object' && global && global.Object === Object && global;\n  var freeSelf = (typeof self === \"undefined\" ? \"undefined\" : (0, _typeof2[\"default\"])(self)) == 'object' && self && self.Object === Object && self;\n  return freeGlobal || freeSelf;\n}\nif (!isNodeOrWeb()) {\n  global.Date = Date;\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _react = require(\"react\");\nfunction useLatest(value) {\n  var ref = (0, _react.useRef)(value);\n  ref.current = value;\n  return ref;\n}\nvar _default = exports[\"default\"] = useLatest;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isUndef = exports.isString = exports.isObject = exports.isNumber = exports.isFunction = exports.isBoolean = void 0;\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\nvar isObject = exports.isObject = function isObject(value) {\n  return value !== null && (0, _typeof2[\"default\"])(value) === 'object';\n};\nvar isFunction = exports.isFunction = function isFunction(value) {\n  return typeof value === 'function';\n};\nvar isString = exports.isString = function isString(value) {\n  return typeof value === 'string';\n};\nvar isBoolean = exports.isBoolean = function isBoolean(value) {\n  return typeof value === 'boolean';\n};\nvar isNumber = exports.isNumber = function isNumber(value) {\n  return typeof value === 'number';\n};\nvar isUndef = exports.isUndef = function isUndef(value) {\n  return typeof value === 'undefined';\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar isDev = process.env.NODE_ENV === 'development' || process.env.NODE_ENV === 'test';\nvar _default = exports[\"default\"] = isDev;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\nvar _react = require(\"react\");\nvar _useLatest = _interopRequireDefault(require(\"../useLatest\"));\nvar _utils = require(\"../utils\");\nvar _isDev = _interopRequireDefault(require(\"../utils/isDev\"));\nvar useUnmount = function useUnmount(fn) {\n  if (_isDev[\"default\"]) {\n    if (!(0, _utils.isFunction)(fn)) {\n      console.error(\"useUnmount expected parameter is a function, got \".concat((0, _typeof2[\"default\"])(fn)));\n    }\n  }\n  var fnRef = (0, _useLatest[\"default\"])(fn);\n  (0, _react.useEffect)(function () {\n    return function () {\n      fnRef.current();\n    };\n  }, []);\n};\nvar _default = exports[\"default\"] = useUnmount;","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _typeof2 = _interopRequireDefault(require(\"@babel/runtime/helpers/typeof\"));\nvar _tslib = require(\"tslib\");\nvar _lodashPolyfill = require(\"../utils/lodash-polyfill\");\nvar _react = require(\"react\");\nvar _useLatest = _interopRequireDefault(require(\"../useLatest\"));\nvar _useUnmount = _interopRequireDefault(require(\"../useUnmount\"));\nvar _utils = require(\"../utils\");\nvar _isDev = _interopRequireDefault(require(\"../utils/isDev\"));\nfunction useDebounceFn(fn, options) {\n  var _a;\n  if (_isDev[\"default\"]) {\n    if (!(0, _utils.isFunction)(fn)) {\n      console.error(\"useDebounceFn expected parameter is a function, got \".concat((0, _typeof2[\"default\"])(fn)));\n    }\n  }\n  var fnRef = (0, _useLatest[\"default\"])(fn);\n  var wait = (_a = options === null || options === void 0 ? void 0 : options.wait) !== null && _a !== void 0 ? _a : 1000;\n  var debounced = (0, _react.useMemo)(function () {\n    return (0, _lodashPolyfill.debounce)(function () {\n      var args = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n      return fnRef.current.apply(fnRef, (0, _tslib.__spreadArray)([], (0, _tslib.__read)(args), false));\n    }, wait, options);\n  }, []);\n  (0, _useUnmount[\"default\"])(function () {\n    debounced.cancel();\n  });\n  return {\n    run: debounced,\n    cancel: debounced.cancel,\n    flush: debounced.flush\n  };\n}\nvar _default = exports[\"default\"] = useDebounceFn;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = exports.createUpdateEffect = void 0;\nvar _react = require(\"react\");\nvar createUpdateEffect = exports.createUpdateEffect = function createUpdateEffect(hook) {\n  return function (effect, deps) {\n    var isMounted = (0, _react.useRef)(false);\n    // for react-refresh\n    hook(function () {\n      return function () {\n        isMounted.current = false;\n      };\n    }, []);\n    hook(function () {\n      if (!isMounted.current) {\n        isMounted.current = true;\n      } else {\n        return effect();\n      }\n    }, deps);\n  };\n};\nvar _default = exports[\"default\"] = createUpdateEffect;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _react = require(\"react\");\nvar _createUpdateEffect = require(\"../createUpdateEffect\");\nvar _default = exports[\"default\"] = (0, _createUpdateEffect.createUpdateEffect)(_react.useEffect);","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\nvar _tslib = require(\"tslib\");\nvar _react = require(\"react\");\nvar _useDebounceFn = _interopRequireDefault(require(\"../useDebounceFn\"));\nvar _useUpdateEffect = _interopRequireDefault(require(\"../useUpdateEffect\"));\nfunction useDebounceEffect(effect, deps, options) {\n  var _a = (0, _tslib.__read)((0, _react.useState)({}), 2),\n    flag = _a[0],\n    setFlag = _a[1];\n  var run = (0, _useDebounceFn[\"default\"])(function () {\n    setFlag({});\n  }, options).run;\n  (0, _react.useEffect)(function () {\n    return run();\n  }, deps);\n  (0, _useUpdateEffect[\"default\"])(effect, [flag]);\n}\nvar _default = exports[\"default\"] = useDebounceEffect;","import { MergeSwapQuote } from '@/types/merge_swap'\nimport { useGetTokenBalance } from '@cetus/hooks/src/useTokenBalance'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport { useAccountStore } from '@cetus/stores'\nimport { Token } from '@cetus/types'\nimport { AggregatorServerErrorCode, MergeSwapRouterData, Path } from '@cetusprotocol/aggregator-sdk'\nimport { d, fixCoinType, fromDecimalsAmount } from '@cetusprotocol/common-sdk'\nimport { useDebounceEffect, useDeepCompareEffect } from 'ahooks'\nimport { useCallback, useMemo, useState } from 'react'\nimport useCheckTokenScamsAlert from '../common/useCheckTokenScamsAlert'\n\nexport const usePriceAcceptSwapQuote = (originData?: MergeSwapQuote, newData?: MergeSwapQuote) => {\n  return useMemo(() => {\n    if (originData?.data && newData?.data) {\n      const originOutput: Record<string, string> = {}\n      originData.data.allRoutes.forEach(route => {\n        originOutput[route.paths[0].from] = d(route.amountOut.toString()).div(route.amountIn.toString()).toString()\n      })\n\n      const diffItem = newData.data.allRoutes.find(route => {\n        const newPrice = d(route.amountOut.toString()).div(route.amountIn.toString()).toString()\n        const price = originOutput[route.paths[0].from]\n        if (price) {\n          return !d(newPrice).eq(d(price))\n        }\n        return false\n      })\n\n      return diffItem ? newData : undefined\n    }\n  }, [originData, newData])\n}\n\nexport const useGetMinReceivedAmount = (slippage: string, totalAmountOutDisplay?: string) => {\n  return useMemo(() => {\n    if (totalAmountOutDisplay) {\n      return d(totalAmountOutDisplay)\n        .mul(d(1).sub(d(slippage)))\n        .toString()\n    }\n  }, [totalAmountOutDisplay, slippage])\n}\n\nexport function useGetRouterProviders(paths: Path[]) {\n  const [routeProviders, setRouteProviders] = useState<string[]>([])\n\n  useDebounceEffect(() => {\n    const providers = new Set<string>()\n    paths.forEach((path: any) => {\n      if (path.provider) {\n        providers.add(path.provider)\n      }\n    })\n    setRouteProviders(Array.from(providers))\n  }, [paths])\n\n  return {\n    routeProviders\n  }\n}\n\nexport function useMergeSwapPrice(fromTokenList: Token[], toToken?: Token) {\n  const { getTokenPrice, fetchTokenPrices } = useTokenPrice()\n\n  const handleTokenPrices = (fromTokenList: Token[], toToken?: Token, skipVerify: boolean = false) => {\n    const tokenList = toToken ? [...fromTokenList, toToken] : [...fromTokenList]\n    const coinTypeList: string[] = []\n    tokenList.forEach(token => {\n      const verifyPriceTime = 30 * 1000\n      const price = getTokenPrice(token.coin_type, skipVerify ? undefined : verifyPriceTime)\n      if (!price) {\n        coinTypeList.push(token.coin_type)\n      }\n    })\n    if (coinTypeList.length > 0) {\n      fetchTokenPrices(coinTypeList)\n    }\n  }\n\n  /**\n   * 获取路由token的价格\n   */\n  useDebounceEffect(() => {\n    handleTokenPrices(fromTokenList, toToken)\n  }, [fromTokenList, toToken])\n\n  return {\n    handleTokenPrices\n  }\n}\n\nexport function useFormatMergeSwapRoute(quote?: MergeSwapQuote) {\n  const { getTokenPrice, coinPriceObj } = useTokenPrice()\n  const [hasHighPriceDiff, setHasHighPriceDiff] = useState(false)\n\n  const allProviders = useMemo(() => {\n    if (quote && quote.data?.allRoutes) {\n      const providers = new Set<string>()\n      quote.data.allRoutes.forEach(route => {\n        route.paths.forEach(path => {\n          if (path.provider) {\n            providers.add(path.provider)\n          }\n        })\n      })\n      return Array.from(providers)\n    }\n  }, [quote?.data?.allRoutes])\n\n  // useDebounceEffect(() => {\n  //   if (quote && quote.data?.allRoutes) {\n  //     quote.data.allRoutes.forEach(route => {\n  //       const from = route.paths[0].from\n  //       const target = route.paths[route.paths.length - 1].target\n  //       const fromToken = quote.fromTokenList.find(token => fixCoinType(token.coin_type, false) === fixCoinType(from, false))\n  //       const targetToken = quote.toToken\n  //       const fromPrice = getTokenPrice(from)\n  //       const targetPrice = getTokenPrice(target)\n\n  //       if (fromPrice && targetPrice && fromToken) {\n  //         const marketPrice = d(fromPrice.price).div(targetPrice.price).toString()\n  //         const swapPrice = d(fromDecimalsAmount(route.amountOut.toString(), targetToken.decimals))\n  //           .div(fromDecimalsAmount(route.amountIn.toString(), fromToken.decimals))\n  //           .toString()\n  //         const priceImpact = d(swapPrice).sub(marketPrice).div(marketPrice).mul(100)\n  //         console.log('🚀 ~ useDebounceEffect ~ priceImpact:', {\n  //           priceImpact: priceImpact.toString(),\n  //           swapPrice,\n  //           marketPrice\n  //         })\n  //         if (d(priceImpact).lte(-30)) {\n  //           setHasHighPriceDiff(true)\n  //         }\n  //       }\n  //     })\n  //   } else {\n  //     setHasHighPriceDiff(false)\n  //   }\n  // }, [quote?.data?.allRoutes, coinPriceObj])\n\n  return {\n    allProviders,\n    hasHighPriceDiff\n  }\n}\n\nexport function useMergeTotalInputValue(fromTokenList: Token[], fromAmountObj: Record<string, string>) {\n  const { getTokenAmountValue, coinPriceObj } = useTokenPrice()\n  const [totalInputValue, setTotalInputValue] = useState('')\n  useDebounceEffect(() => {\n    let totalValue = d(0)\n    let hasCoinPrice = true\n    fromTokenList.forEach(token => {\n      const amount = fromAmountObj[token.coin_type]\n\n      if (+amount) {\n        const tokenValue = getTokenAmountValue(token.coin_type, amount)\n        if (+tokenValue) {\n          totalValue = totalValue.add(d(tokenValue))\n        } else {\n          hasCoinPrice = false\n        }\n      }\n    })\n    if (hasCoinPrice) {\n      setTotalInputValue(totalValue.toString())\n    } else {\n      setTotalInputValue('Incalculable')\n    }\n  }, [fromAmountObj, coinPriceObj])\n\n  return {\n    totalInputValue\n  }\n}\n\nexport function useVerifySwapInput(fromTokenList: Token[], fromAmountObj: Record<string, string>) {\n  const { currentAccount } = useAccountStore(state => ({ currentAccount: state.currentAccount }))\n  const { getBalanceInfoFromCache, tokenBalanceObj } = useGetTokenBalance()\n  const [isAllBalanceEnough, setIsAllBalanceEnough] = useState(false)\n  const [isAllInputValid, setIsAllInputValid] = useState(false)\n  const [hasAnyInput, setHasAnyInput] = useState(false)\n\n  const verifySwapInput = useCallback(\n    (fromTokenList: Token[], fromAmountObj: Record<string, string>) => {\n      let allInputValid = fromTokenList.length > 0\n      let allBalanceEnough = false\n      let hasAnyInput = false\n\n      fromTokenList.forEach(token => {\n        const amount = fromAmountObj[token.coin_type]\n        const isValid = +amount\n\n        if (!isValid) {\n          allInputValid = false\n        } else {\n          hasAnyInput = true\n        }\n      })\n      if (currentAccount && allInputValid) {\n        allBalanceEnough = fromTokenList.every(token => {\n          const balanceInfo = getBalanceInfoFromCache(token)\n          const amount = fromAmountObj[token.coin_type]\n          if (balanceInfo && +amount) {\n            return d(balanceInfo.balanceFormat).gte(amount)\n          }\n          return false\n        })\n      } else {\n        allBalanceEnough = false\n      }\n\n      return {\n        isAllBalanceEnough: allBalanceEnough,\n        //isAllBalanceEnough: true, // todo: 暂时不判断余额, 后期上线前在放开 isAllBalanceEnough\n        isAllInputValid: allInputValid,\n        hasAnyInput\n      }\n    },\n    [currentAccount, tokenBalanceObj, fromTokenList, fromAmountObj]\n  )\n\n  useDebounceEffect(() => {\n    const { isAllBalanceEnough, isAllInputValid, hasAnyInput } = verifySwapInput(fromTokenList, fromAmountObj)\n\n    setIsAllInputValid(isAllInputValid)\n    setIsAllBalanceEnough(isAllBalanceEnough)\n    setHasAnyInput(hasAnyInput)\n  }, [fromAmountObj, fromTokenList, currentAccount, tokenBalanceObj])\n\n  return {\n    isAllBalanceEnough,\n    isAllInputValid,\n    verifySwapInput,\n    hasAnyInput\n  }\n}\n\nexport function handleMergeSwapQuote(\n  uuid: string,\n  toToken: Token,\n  fromTokenList: Token[],\n  fromAmountObj: Record<string, string>,\n  routerResult: MergeSwapRouterData | null\n): MergeSwapQuote {\n  const quote: MergeSwapQuote = {\n    uuid,\n    fromTokenList,\n    toToken,\n    fromAmountObj,\n    totalAmountOut: '',\n    totalAmountOutDisplay: ''\n  }\n  if (routerResult) {\n    const totalAmountOut = routerResult.totalAmountOut.toString()\n    quote.data = routerResult\n\n    if (routerResult.error) {\n      quote.error = routerResult.error\n      if (quote.error.code === AggregatorServerErrorCode.BadRequest && quote.error.msg) {\n        const errorMsg = quote.error.msg\n        const regex = /0x[a-fA-F0-9]{64}::[a-zA-Z0-9_]+::[a-zA-Z0-9_]+/\n        const match = errorMsg.match(regex)\n        if (match) {\n          const coin = match[0]\n          const errorCoin = fromTokenList.find(token => token.coin_type === coin)\n          if (errorCoin) {\n            quote.error.coin = errorCoin\n            quote.error.code = AggregatorServerErrorCode.InsufficientLiquidity\n          }\n        }\n      }\n    } else {\n      if (routerResult.allRoutes.length === 0) {\n        quote.error = {\n          code: AggregatorServerErrorCode.BadRequest,\n          msg: 'no router'\n        }\n      } else {\n        quote.totalAmountOut = totalAmountOut\n        quote.totalAmountOutDisplay = fromDecimalsAmount(totalAmountOut, toToken.decimals)\n      }\n    }\n  } else {\n    quote.error = {\n      code: AggregatorServerErrorCode.BadRequest,\n      msg: 'no router'\n    }\n  }\n  return quote\n}\n\nexport function useMergeSwapScamsText(fromTokenList: Token[]) {\n  const { scamsCoinList } = useCheckTokenScamsAlert(fromTokenList)\n  const [scamsText, setScamsText] = useState('')\n  useDeepCompareEffect(() => {\n    if (scamsCoinList.length === 0) {\n      setScamsText('')\n      return\n    }\n    const scamsTokenList: Token[] = []\n    scamsCoinList.forEach(coin => {\n      const token = fromTokenList.find(token => fixCoinType(token.coin_type, false) === fixCoinType(coin.coin_type, false))\n      if (token) {\n        scamsTokenList.push(token)\n      }\n    })\n\n    if (scamsTokenList.length === 0) {\n      setScamsText('')\n      return\n    }\n\n    setScamsText(scamsTokenList.map(token => token.symbol).join(', '))\n\n    if (scamsTokenList.length === 1) {\n      setScamsText(`${scamsTokenList[0].symbol} token is `)\n    } else if (scamsTokenList.length === 2) {\n      setScamsText(`${scamsTokenList[0].symbol} and ${scamsTokenList[1].symbol} are `)\n    } else {\n      setScamsText(`${scamsTokenList.map(token => token.symbol).join(', ')} are `)\n    }\n  }, [scamsCoinList, fromTokenList])\n\n  return {\n    scamsText\n  }\n}\n","import { FreshProgressRef } from '@/components/swap/FreshProgressV2'\nimport useGlobalStore from '@/store/common/global'\nimport useMergeSwapStore from '@/store/merge-swap/useMergeSwapStore'\nimport useSwapConfigStore from '@/store/swap/swapConfig'\nimport { MergeSwapQuote } from '@/types/merge_swap'\nimport { useAccountBalance } from '@cetus/hooks'\nimport { useGetTokenBalance } from '@cetus/hooks/src/useTokenBalance'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport { useAccountStore } from '@cetus/stores'\nimport useTokenStore from '@cetus/stores/src/token'\nimport useClmmSDKStore from '@cetus/stores/src/useClmmSDKStore'\nimport useWebConfigStore from '@cetus/stores/src/useWebConfigStore'\nimport { CommonTypeInfo, ToastType, Token, TransactionStatusType } from '@cetus/types'\nimport envConfigs from '@cetus/types/src/config/envConfigs'\nimport { addComma } from '@cetus/utils'\nimport { BuildFastMergeSwapParams, MergeSwapParams } from '@cetusprotocol/aggregator-sdk'\nimport { toDecimalsAmount } from '@cetusprotocol/common-sdk'\nimport { Transaction } from '@mysten/sui/transactions'\nimport useDebounceEffect from 'ahooks/lib/useDebounceEffect'\nimport BN from 'bn.js'\nimport { useEffect, useMemo, useRef, useState } from 'react'\nimport { v4 } from 'uuid'\nimport useTransaction from '../common/useTransaction'\nimport { aggregatorPartner } from '../swap/useSwap'\nimport { handleMergeSwapQuote, useGetMinReceivedAmount, useMergeSwapPrice, useMergeTotalInputValue, useVerifySwapInput } from './useMergeSwapHelper'\n\nexport function useMergeSwap() {\n  const { aggregatorSDK } = useClmmSDKStore()\n  const { providers } = useWebConfigStore()\n  const { currentAccount } = useAccountStore()\n  const { slippage, mevProtect, maxCapForGas, transactionMode, customGasPrice } = useGlobalStore()\n  const { fetchAccountBalance } = useAccountBalance()\n  const { providersSwitchStates } = useSwapConfigStore()\n  const {\n    fromTokenList,\n    setToAmount,\n    findRouterLoading,\n    setFindRouterLoading,\n    toToken,\n    fromAmountObj,\n    clearFromAmountObj,\n    mergeSwapQuote,\n    setMergeSwapQuote,\n    clearData,\n    setIsShowSelectRouter\n  } = useMergeSwapStore()\n  const uuidRef = useRef<string>('')\n  const { getTokenAmountValue, fetchTokenPrices } = useTokenPrice()\n  const [isOpenConfirmModel, setIsOpenConfirmModel] = useState<boolean>(false)\n  const progressRef = useRef<FreshProgressRef>(null)\n  const { verifiedTokenMap } = useTokenStore(state => ({ verifiedTokenMap: state.verifiedTokenMap }))\n  const { handleTokenPrices } = useMergeSwapPrice(fromTokenList, toToken)\n\n  const handleReset = () => {\n    progressRef.current?.reset()\n  }\n\n  useEffect(() => {\n    return () => {\n      clearData()\n    }\n  }, [])\n\n  useEffect(() => {\n    fetchTokenPrices([envConfigs.sui_coin.coin_type])\n  }, [])\n\n  const { totalInputValue } = useMergeTotalInputValue(fromTokenList, fromAmountObj)\n  const { isAllInputValid, isAllBalanceEnough, verifySwapInput, hasAnyInput } = useVerifySwapInput(fromTokenList, fromAmountObj)\n  // 用户输入合法且余额足够\n  const isAllowFindRouter = useMemo(() => {\n    return isAllInputValid && isAllBalanceEnough\n  }, [isAllInputValid, isAllBalanceEnough])\n\n  const targetTokenList = useMemo(() => {\n    return [...Array.from(verifiedTokenMap.values()).filter(token => token.is_merge_target && Number(token.is_merge_target) > 0)]\n  }, [verifiedTokenMap])\n  /**\n   * 获取交易路由\n   */\n  const findRouter = async (fromTokenList: Token[], toToken: Token, fromAmountObj: Record<string, string>, uuid: string) => {\n    setFindRouterLoading(true)\n    handleReset()\n    const mergeSwapParams: MergeSwapParams = {\n      target: toToken.coin_type, // USDC\n      byAmountIn: true,\n      depth: 3,\n      providers: Object.entries(providersSwitchStates)\n        .filter(([_, value]) => value === true)\n        .map(([key, _]) => key),\n      froms: fromTokenList.map(token => ({\n        coinType: token.coin_type,\n        amount: new BN(toDecimalsAmount(fromAmountObj[token.coin_type], token.decimals))\n      }))\n    }\n\n    if (uuidRef.current === uuid) {\n      try {\n        console.log('findRouter params', mergeSwapParams, uuidRef.current, uuid)\n        const routerResult = await aggregatorSDK.findMergeSwapRouters(mergeSwapParams)\n\n        const quote = handleMergeSwapQuote(uuid, toToken, fromTokenList, fromAmountObj, routerResult)\n        console.log('findRouter result', {\n          routerResult,\n          quote,\n          uuidRef: uuidRef.current,\n          uuid\n        })\n        if (uuidRef.current === uuid) {\n          setMergeSwapQuote(quote)\n          if (quote && !quote?.error) {\n            setIsShowSelectRouter(true)\n          } else {\n            setIsShowSelectRouter(false)\n          }\n        }\n      } catch (error) {\n        console.log('findRouter error', error)\n        setMergeSwapQuote(undefined)\n      } finally {\n        setFindRouterLoading(false)\n      }\n    }\n  }\n\n  const resetData = () => {\n    uuidRef.current = ''\n    setToAmount('')\n    setFindRouterLoading(false)\n    setMergeSwapQuote(undefined)\n    setIsShowSelectRouter(false)\n  }\n\n  /**\n   * 输入数量监听\n   */\n  useDebounceEffect(\n    () => {\n      const { isAllInputValid, isAllBalanceEnough } = verifySwapInput(fromTokenList, fromAmountObj)\n      if (isAllInputValid && isAllBalanceEnough && isAllowFindRouter && toToken && currentAccount) {\n        const uuid = v4()\n        uuidRef.current = uuid\n        findRouter(fromTokenList, toToken, fromAmountObj, uuid)\n      } else {\n        resetData()\n      }\n    },\n    [fromTokenList, fromAmountObj, toToken, currentAccount, isAllowFindRouter, providersSwitchStates],\n    { wait: 300 }\n  )\n\n  useDebounceEffect(() => {\n    if (mergeSwapQuote && !mergeSwapQuote?.error) {\n      setIsShowSelectRouter(true)\n    } else {\n      setIsShowSelectRouter(false)\n    }\n  }, [mergeSwapQuote])\n\n  useDebounceEffect(() => {\n    if (isAllowFindRouter && toToken && currentAccount) {\n    } else {\n      resetData()\n    }\n  }, [currentAccount, isAllowFindRouter])\n\n  const reCalculateRouteData = () => {\n    if (isAllowFindRouter && toToken) {\n      const uuid = v4()\n      uuidRef.current = uuid\n      findRouter(fromTokenList, toToken, fromAmountObj, uuid)\n    } else {\n      resetData()\n    }\n  }\n\n  // 输出总价值\n  const totalOutValue = useMemo(() => {\n    if (mergeSwapQuote?.totalAmountOut) {\n      return getTokenAmountValue(mergeSwapQuote.toToken.coin_type, mergeSwapQuote.totalAmountOutDisplay)\n    }\n    return ''\n  }, [mergeSwapQuote])\n\n  // 输出Token余额\n  const { balanceInfo: toBalanceInfo } = useGetTokenBalance(toToken)\n\n  // 最小接收数量\n  const minReceivedAmount = useGetMinReceivedAmount(slippage.toString(), mergeSwapQuote?.totalAmountOutDisplay)\n\n  const { signAndExecuteTransaction, transactionConfirmation, handleError } = useTransaction()\n\n  // 提交交易\n  const handleSwapSubmit = async (swapData: MergeSwapQuote) => {\n    console.log('🚀 ~ handleSwapSubmit ~ swapData:', {\n      swapData,\n      slippage,\n      aggregatorPartner\n    })\n    const { data, fromTokenList } = swapData\n\n    const toastType: ToastType = {\n      getShowInfo: (status: TransactionStatusType) => {\n        const description =\n          fromTokenList.length > 1\n            ? `Swapping ${fromTokenList.length} tokens for ${addComma(swapData.totalAmountOutDisplay)} ${swapData.toToken.symbol}`\n            : `Swapping  ${addComma(swapData.fromAmountObj[swapData.fromTokenList[0].coin_type])} ${swapData.fromTokenList[0].symbol} for ${addComma(swapData.totalAmountOutDisplay)} ${swapData.toToken.symbol}`\n        const info: CommonTypeInfo = {\n          modalDescriptionText: description,\n          toastTitleText: description\n        }\n        if (status === 'success') {\n          const newDescription = description.replace('Swapping', 'Swapped')\n          info.toastDescriptionContent = newDescription\n          info.modalDescriptionText = newDescription\n          info.toastTitleText = 'Swap Successful'\n        }\n\n        if (status === 'rejected') {\n          info.toastTitleText = description.replace('Swapping', 'Swap')\n        }\n\n        return info\n      }\n    }\n    transactionConfirmation(toastType)\n\n    try {\n      const tx = new Transaction()\n      const sdkParams: BuildFastMergeSwapParams = {\n        router: data!,\n        slippage: Number(slippage),\n        txb: tx,\n        partner: aggregatorPartner\n      }\n\n      const txb = async () => {\n        await aggregatorSDK!.fastMergeSwap(sdkParams)\n        return tx\n      }\n\n      const res = await signAndExecuteTransaction(txb, toastType, {\n        useMev: mevProtect\n        // useFastMode: transactionMode === 'Fast Mode',\n        // maxCapForGas,\n        // customGasPrice\n      })\n      if (res) {\n        setToAmount('')\n        setMergeSwapQuote(undefined)\n        clearFromAmountObj()\n        setTimeout(() => {\n          fetchAccountBalance()\n        }, 1000)\n      } else {\n        reCalculateRouteData()\n      }\n    } catch (error) {\n      console.log('🚀 ~ handleSwapSubmit ~ error:', error)\n    }\n  }\n  // 刷新\n  const handleRefresh = () => {\n    reCalculateRouteData()\n    if (!isOpenConfirmModel) {\n      fetchAccountBalance()\n    }\n    handleTokenPrices(fromTokenList, toToken)\n  }\n\n  return {\n    totalOutValue,\n    totalInputValue,\n    minReceivedAmount,\n    toBalanceInfo,\n    handleSwapSubmit,\n    reCalculateRouteData,\n    isAllowFindRouter,\n    isAllBalanceEnough,\n    isAllInputValid,\n    handleRefresh,\n    isOpenConfirmModel,\n    setIsOpenConfirmModel,\n    progressRef,\n    hasAnyInput,\n    targetTokenList\n  }\n}\n","import { Token } from '@cetus/types'\nimport { MergeSwapRouterData } from '@cetusprotocol/aggregator-sdk'\n\nexport const MergeSwapMaxOutValue = 10000\n\nexport type MergeSwapQuote = {\n  data?: MergeSwapRouterData\n  uuid: string\n  totalAmountOut: string\n  totalAmountOutDisplay: string\n  fromTokenList: Token[]\n  toToken: Token\n  fromAmountObj: Record<string, string>\n  error?: {\n    code: number\n    msg: string\n    coin?: Token\n  }\n}\n","import useMergeSwapStore from '@/store/merge-swap/useMergeSwapStore'\nimport { MergeSwapMaxOutValue } from '@/types/merge_swap'\nimport { useAccountStore } from '@cetus/stores'\nimport { AggregatorServerErrorCode } from '@cetusprotocol/aggregator-sdk'\nimport { d } from '@cetusprotocol/common-sdk'\nimport { useMemo } from 'react'\n\nexport function useMergeSwapButtonStatus(isAllInputValid: boolean, isAllBalanceEnough: boolean, totalOutValue: string) {\n  const { currentAccount } = useAccountStore()\n  const { fromTokenList, mergeSwapQuote, toToken } = useMergeSwapStore(state => ({\n    fromTokenList: state.fromTokenList,\n    mergeSwapQuote: state.mergeSwapQuote,\n    toToken: state.toToken\n  }))\n\n  const submitBtnInfo = useMemo(() => {\n    const btnInfo: {\n      text?: string\n      disabled: boolean\n    } = {\n      text: 'Swap',\n      disabled: true\n    }\n\n    // 判断钱包\n    if (!currentAccount?.address) {\n      btnInfo.text = 'Connect Wallet'\n      btnInfo.disabled = false\n      return btnInfo\n    }\n\n    // token 选择判断\n    if (fromTokenList.length === 0 || !toToken) {\n      btnInfo.text = 'Select a token'\n      btnInfo.disabled = true\n      return btnInfo\n    }\n\n    // 判断输入\n    if (!isAllInputValid) {\n      btnInfo.text = `Enter an amount`\n      btnInfo.disabled = true\n      return btnInfo\n    }\n    //  errorCode\n    if (mergeSwapQuote?.error) {\n      if (\n        mergeSwapQuote.error.code === AggregatorServerErrorCode.InsufficientLiquidity ||\n        mergeSwapQuote.error.code === AggregatorServerErrorCode.HoneyPot\n      ) {\n        btnInfo.text = 'Insufficient Liquidity'\n        btnInfo.disabled = true\n        return btnInfo\n      }\n      if (mergeSwapQuote.error.code === AggregatorServerErrorCode.BadRequest) {\n        btnInfo.text = 'No Available Route'\n        btnInfo.disabled = true\n        return btnInfo\n      }\n    }\n\n    //判断余额\n    if (!isAllBalanceEnough) {\n      btnInfo.disabled = true\n      btnInfo.text = `Insufficient  Balance`\n      return btnInfo\n    }\n\n    if (+totalOutValue && d(totalOutValue).gt(MergeSwapMaxOutValue)) {\n      btnInfo.disabled = true\n      return btnInfo\n    }\n\n    if (mergeSwapQuote) {\n      btnInfo.disabled = false\n    }\n    return btnInfo\n  }, [currentAccount?.address, fromTokenList, isAllBalanceEnough, isAllInputValid, mergeSwapQuote, totalOutValue])\n\n  return {\n    btnText: submitBtnInfo.text,\n    btnDisabled: submitBtnInfo.disabled\n  }\n}\n","import { useGetMinReceivedAmount, usePriceAcceptSwapQuote } from '@/hooks/merge-swap/useMergeSwapHelper'\nimport { usePriceImpact } from '@/hooks/swap/usePriceImpact'\nimport useGlobalStore from '@/store/common/global'\nimport useMergeSwapStore from '@/store/merge-swap/useMergeSwapStore'\nimport { MergeSwapQuote } from '@/types/merge_swap'\nimport { CurrentPrice } from '@cetus/design'\nimport { Token } from '@cetus/types'\nimport { HTextLabelBox, Icon, SingleCoinImage } from '@cetus/ui-kit'\nimport { formatNumber, formatPercentage } from '@cetus/utils'\nimport { fixCoinType, fromDecimalsAmount } from '@cetusprotocol/common-sdk'\nimport {\n  Box,\n  Button,\n  Center,\n  Heading,\n  HStack,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n  VStack\n} from '@chakra-ui/react'\nimport cloneDeep from 'lodash-es/cloneDeep'\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport PriceImpact from '../swap/PriceImpact'\n\ntype MergeSwapConfirmProps = {\n  data: MergeSwapQuote\n  isOpen: boolean\n  onClose: () => void\n  handleRouterSwap: (data: MergeSwapQuote) => void\n}\n\nexport default function MergeSwapConfirm(props: MergeSwapConfirmProps) {\n  const { mergeSwapQuote } = useMergeSwapStore()\n  const { data, isOpen, onClose, handleRouterSwap } = props\n  const { slippage } = useGlobalStore()\n  const [hasPriceImpactWarn, setHasPriceImpactWarn] = useState(false)\n  const [tokenWarnStates, setTokenWarnStates] = useState<Record<string, boolean>>({})\n  const [originData, setOriginData] = useState<MergeSwapQuote>(data)\n  // 用户点击了 忽视PriceImpact\n  const [ignorePriceImpact, setIgnorePriceImpact] = useState<boolean>(false)\n  // 控制滚动容器的状态\n  const [needsScroll, setNeedsScroll] = useState(true)\n  const scrollContainerRef = useRef<HTMLDivElement>(null)\n\n  const minReceivedAmount = useGetMinReceivedAmount(slippage.toString(), originData.totalAmountOutDisplay)\n\n  const priceAcceptSwapQuote = usePriceAcceptSwapQuote(originData, mergeSwapQuote)\n\n  const [maxHeight, setMaxHeight] = useState<number>(600)\n\n  const showPriceUpdated = useMemo(() => {\n    return priceAcceptSwapQuote !== undefined\n  }, [priceAcceptSwapQuote])\n\n  // 处理单个 token 的价格影响警告状态变化\n  const handleTokenPriceImpactWarnChange = useCallback((coinType: string, hasWarn: boolean) => {\n    setTokenWarnStates(prev => ({\n      ...prev,\n      [coinType]: hasWarn\n    }))\n  }, [])\n\n  // 检查是否有任何 token 显示价格影响警告\n  useEffect(() => {\n    const hasAnyWarn = Object.values(tokenWarnStates).some(hasWarn => hasWarn)\n    setHasPriceImpactWarn(hasAnyWarn)\n  }, [tokenWarnStates])\n\n  // 检测内容高度，决定是否需要滚动\n  useEffect(() => {\n    const checkScrollNeeded = () => {\n      if (scrollContainerRef.current) {\n        const container = scrollContainerRef.current\n        const maxHeight = window.innerHeight - 300\n        const needsScroll = container.scrollHeight > maxHeight\n        setNeedsScroll(needsScroll)\n        setMaxHeight(maxHeight)\n      }\n    }\n\n    // 初始检查\n    checkScrollNeeded()\n\n    // 监听窗口大小变化\n    window.addEventListener('resize', checkScrollNeeded)\n\n    // 使用 ResizeObserver 监听内容变化\n    let resizeObserver: ResizeObserver | null = null\n    if (scrollContainerRef.current) {\n      resizeObserver = new ResizeObserver(checkScrollNeeded)\n      resizeObserver.observe(scrollContainerRef.current)\n    }\n\n    return () => {\n      window.removeEventListener('resize', checkScrollNeeded)\n      if (resizeObserver) {\n        resizeObserver.disconnect()\n      }\n    }\n  }, [scrollContainerRef.current, originData.fromTokenList, hasPriceImpactWarn, showPriceUpdated])\n\n  const toAmountItem = useCallback(\n    (coinType: string) => {\n      const coinTypeFix = fixCoinType(coinType, false)\n      const amountOut = originData.data?.allRoutes.find(route => fixCoinType(route.paths[0].from, false) === coinTypeFix)?.amountOut.toString()\n      if (amountOut) {\n        return fromDecimalsAmount(amountOut, originData.toToken.decimals)\n      }\n      return '0'\n    },\n    [originData?.data?.allRoutes, originData.toToken.decimals]\n  )\n\n  const buttonDisabled = useMemo(() => {\n    if (ignorePriceImpact) {\n      return false\n    }\n\n    if (hasPriceImpactWarn) {\n      return true\n    }\n    return false\n  }, [ignorePriceImpact, hasPriceImpactWarn])\n\n  const handlePriceAcceptClick = () => {\n    if (priceAcceptSwapQuote) {\n      const safeData = cloneDeep(priceAcceptSwapQuote)\n      setOriginData({ ...safeData })\n    }\n  }\n\n  return (\n    <Modal autoFocus={false} returnFocusOnClose={false} trapFocus={false} isOpen={isOpen} onClose={() => onClose()} isCentered>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>\n          <Heading fontWeight=\"500\" fontSize=\"16px\">\n            Merge Swap\n          </Heading>\n        </ModalHeader>\n        <ModalCloseButton onClick={() => onClose()} />\n        <ModalBody textAlign=\"center\" p=\"16px\">\n          <VStack w=\"100%\" gap=\"16px\">\n            <VStack ref={scrollContainerRef} w=\"100%\" gap=\"8px\" maxH={`${maxHeight}px`} overflowY={needsScroll ? 'auto' : 'visible'}>\n              {/* from token 列表 */}\n              {originData.fromTokenList.map(token => (\n                <TokenInItem\n                  key={token.coin_type}\n                  fromToken={token}\n                  toToken={originData.toToken}\n                  fromAmount={originData.fromAmountObj[token.coin_type]}\n                  toAmount={toAmountItem(token.coin_type)}\n                  onPriceImpactWarnChange={hasWarn => handleTokenPriceImpactWarnChange(token.coin_type, hasWarn)}\n                />\n              ))}\n              {/* 指示箭头 */}\n              <Center\n                minH=\"36px\"\n                maxH=\"36px\"\n                w=\"36px\"\n                h=\"36px\"\n                mt=\"8px\"\n                mb=\"8px\"\n                borderRadius=\"50%\"\n                border=\"1px solid\"\n                borderColor=\"token_inactive_border\"\n                bg={'input_bg'}\n              >\n                <Icon cursor=\"default\" xlinkHref=\"#icon-a-icon_trade\" svgFill=\"text_caption\" fontSize=\"12px\" />\n              </Center>\n\n              {/* to token */}\n              <HStack\n                justifyContent={'center'}\n                w=\"100%\"\n                borderRadius=\"12px\"\n                bg=\"bg_primary\"\n                border=\"1px solid\"\n                borderColor=\"border\"\n                p=\"16px\"\n                gap=\"8px\"\n              >\n                <SingleCoinImage imageUrl={originData.toToken.logo_url} w=\"32px\" h=\"32px\" coinType={data.toToken.coin_type} />\n                <Text fontSize=\"16px\" color=\"text_caption\">\n                  {formatNumber(originData.totalAmountOutDisplay, originData.toToken.decimals)} {originData.toToken.symbol}\n                </Text>\n              </HStack>\n\n              <HTextLabelBox\n                label={'Slippage Tolerance'}\n                value={formatPercentage(Number(slippage) * 100)}\n                labelStyle={{ fontWeight: 500, whiteSpace: 'nowrap', fontSize: '14px' }}\n                valueStyle={{ fontWeight: 500, fontSize: '14px' }}\n                skeletonStyle={{\n                  valueW: '128px'\n                }}\n                wrapStyle={{\n                  mt: '8px'\n                }}\n              />\n              <HTextLabelBox\n                label={'Minimum Received'}\n                value={`${formatNumber(minReceivedAmount, originData.toToken.decimals)} ${originData.toToken.symbol}`}\n                labelStyle={{ fontWeight: 500, whiteSpace: 'nowrap', fontSize: '14px' }}\n                valueStyle={{ fontWeight: 500, fontSize: '14px' }}\n                skeletonStyle={{\n                  valueW: '128px'\n                }}\n                wrapStyle={{\n                  mt: '8px'\n                }}\n              />\n            </VStack>\n\n            {/* 价格警告 */}\n            {hasPriceImpactWarn && (\n              <VStack w=\"100%\" gap=\"8px\">\n                <HStack\n                  w=\"100%\"\n                  bg=\"primary_red_opacity.10\"\n                  borderRadius=\"12px\"\n                  border=\"1px solid\"\n                  borderColor=\"border\"\n                  justifyContent=\"start\"\n                  p=\"10px 16px\"\n                >\n                  <Text color=\"primary_red\" fontSize=\"12px\" lineHeight=\"20px\" textAlign=\"start\">\n                    The exchange rate of this order deviates from the market price by a large percentage. Are you sure you want to continue the swap?\n                  </Text>\n                </HStack>\n                <HStack w=\"100%\" justifyContent=\"space-between\" gap=\"16px\">\n                  <Button\n                    variant=\"outline\"\n                    w=\"100%\"\n                    color=\"text_highlight\"\n                    fontSize=\"14px\"\n                    borderColor={ignorePriceImpact ? 'text_highlight' : 'button_outline_border'}\n                    onClick={() => {\n                      setIgnorePriceImpact(true)\n                    }}\n                  >\n                    Yes, please continue.\n                  </Button>\n                  <Button\n                    variant=\"outline\"\n                    w=\"100%\"\n                    color=\"text_highlight\"\n                    fontSize=\"14px\"\n                    borderColor=\"button_outline_border\"\n                    onClick={() => onClose()}\n                  >\n                    No,cancel it.\n                  </Button>\n                </HStack>\n              </VStack>\n            )}\n            {showPriceUpdated && (\n              <HStack w=\"100%\" justifyContent=\"space-between\">\n                <HStack>\n                  <Icon xlinkHref=\"#icon-icon_priceupdated1\" svgW=\"20px\" svgH=\"20px\" />\n                  <Text color=\"text_caption\" fontWeight=\"500\" fontSize=\"14px\">\n                    Price updated\n                  </Text>\n                </HStack>\n                <Button onClick={handlePriceAcceptClick} h=\"40px\" borderRadius=\"12px\" fontSize=\"16px\" fontWeight=\"500\" p=\"0 42px\">\n                  Accept\n                </Button>\n              </HStack>\n            )}\n            {!showPriceUpdated && (\n              <Button\n                fontSize=\"18px\"\n                fontWeight=\"500\"\n                width=\"100%\"\n                h=\"52px\"\n                isDisabled={buttonDisabled}\n                colorScheme={hasPriceImpactWarn ? 'orange' : 'blue'}\n                onClick={() => {\n                  handleRouterSwap(originData)\n                  onClose()\n                }}\n              >\n                Confirm\n              </Button>\n            )}\n          </VStack>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  )\n}\n\ntype TokenInItemProps = {\n  fromToken: Token\n  toToken: Token\n  fromAmount: string\n  toAmount: string\n  onPriceImpactWarnChange?: (hasWarn: boolean) => void\n}\nfunction TokenInItem(props: TokenInItemProps) {\n  const { fromToken, toToken, fromAmount, toAmount, onPriceImpactWarnChange } = props\n  const { marketPrice, priceImpact, sources, priceImpactTextInfo, showIncalculable, showPriceImpactWarn } = usePriceImpact(\n    fromToken,\n    toToken,\n    fromAmount,\n    toAmount\n  )\n\n  useEffect(() => {\n    onPriceImpactWarnChange?.(showPriceImpactWarn)\n  }, [showPriceImpactWarn])\n  return (\n    <VStack gap=\"12px\" w=\"100%\" borderRadius=\"12px\" bg=\"bg_primary\" border=\"1px solid\" borderColor=\"border\" p=\"16px\">\n      <HStack w=\"100%\" justifyContent=\"space-between\">\n        <SingleCoinImage imageUrl={fromToken.logo_url} w=\"32px\" h=\"32px\" coinType={fromToken.coin_type} />\n        <VStack alignItems=\"end\" gap=\"4px\">\n          <Text fontSize=\"16px\" color=\"text_caption\" fontWeight=\"500\">\n            {formatNumber(fromAmount, fromToken.decimals)} {fromToken.symbol}\n          </Text>\n          <CurrentPrice noIcon={true} fromToken={fromToken} toToken={toToken} fromValue={fromAmount} toValue={toAmount} fontSize={'14px'} />\n        </VStack>\n      </HStack>\n\n      <Box w=\"100%\" borderBottom=\"1px dashed\" borderColor=\"border\" />\n\n      <PriceImpact\n        fromToken={fromToken}\n        toToken={toToken}\n        marketPrice={marketPrice}\n        priceImpact={priceImpactTextInfo}\n        sources={sources}\n        showIncalculable={showIncalculable}\n      />\n    </VStack>\n  )\n}\n","import { HStack } from '@chakra-ui/react'\nimport Slippage from '../common/Slippage'\nimport AggregatorMode from '../swap/AggregatorMode'\nimport FreshProgressV2 from '../swap/FreshProgressV2'\n\ninterface MergeTradeHeaderProps {\n  progressRef: any\n  callbackInterval: number\n  handleRefresh: () => void\n}\n\nexport function MergeTradeHeader(props: MergeTradeHeaderProps) {\n  const { progressRef, handleRefresh, callbackInterval } = props\n  return (\n    <HStack>\n      <AggregatorMode showRfqSwitch={false} />\n      {/* 滑点 */}\n      <Slippage slippageType=\"merge_swap\" showFastMode={false} />\n      {/* 进度条 */}\n      <FreshProgressV2 callbackInterval={callbackInterval} ref={progressRef} min={0} max={10} onClick={handleRefresh} />\n    </HStack>\n  )\n}\n","import useMergeSwapStore from '@/store/merge-swap/useMergeSwapStore'\nimport { TradeInput } from '@cetus/design'\nimport { useGetTokenBalance } from '@cetus/hooks/src/useTokenBalance'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport { Token } from '@cetus/types'\nimport { Icon } from '@cetus/ui-kit'\nimport { Button, Center, HStack, VStack } from '@chakra-ui/react'\nimport { useMemo } from 'react'\n\ntype MergeTradeInputFromProps = {\n  openSelectTokenModal: (selectType: 'single' | 'multiple', fromIndex: number) => void\n  handleRemoveClick: (token: Token) => void\n}\n\nexport function MergeTradeInputFrom({ handleRemoveClick, openSelectTokenModal }: MergeTradeInputFromProps) {\n  const { fromTokenList } = useMergeSwapStore()\n\n  const showAddToken = useMemo(() => {\n    return fromTokenList.length < 6\n  }, [fromTokenList])\n\n  return (\n    <VStack w=\"100%\" gap=\"8px\">\n      {/* 默认占位框 */}\n      {fromTokenList.length === 0 && <MergeTradeInputFromPlaceholder openSelectTokenModal={openSelectTokenModal} />}\n\n      {/* coin输入框 */}\n      {fromTokenList.map((token, index) => (\n        <MergeTradeInputTokenItem\n          key={token.coin_type}\n          token={token}\n          showRemoveIcon={fromTokenList.length > 1}\n          handleRemoveClick={handleRemoveClick}\n          openSelectTokenModal={() => {\n            openSelectTokenModal('single', index)\n          }}\n        />\n      ))}\n\n      {/* 添加token */}\n      {showAddToken && (\n        <Button\n          bg=\"primary_opacity.10\"\n          color=\"primary\"\n          w=\"100%\"\n          h=\"44px\"\n          fontSize=\"14px\"\n          borderRadius=\"12px\"\n          _hover={{\n            bg: 'primary_opacity.20'\n          }}\n          variant=\"solid\"\n          leftIcon={<Icon cursor={'pointer'} svgFill=\"primary\" xlinkHref={'#icon-a-icon_add1'} fontSize=\"14px\" />}\n          onClick={() => {\n            openSelectTokenModal('multiple', 0)\n          }}\n        >\n          Add one more token\n        </Button>\n      )}\n    </VStack>\n  )\n}\n\ntype MergeTradeInputTokenItemProps = {\n  token: Token\n  showRemoveIcon: boolean\n  handleRemoveClick: (token: Token) => void\n  openSelectTokenModal: () => void\n}\n\nfunction MergeTradeInputTokenItem({ token, handleRemoveClick, openSelectTokenModal, showRemoveIcon }: MergeTradeInputTokenItemProps) {\n  const { setFromAmountObj, fromAmountObj } = useMergeSwapStore()\n  const { getTokenAmountValue } = useTokenPrice()\n  const { balanceInfo } = useGetTokenBalance(token)\n  const tokenAmount = fromAmountObj[token.coin_type] || ''\n  const totalAmountOutValue = getTokenAmountValue(token.coin_type, tokenAmount)\n\n  return (\n    <HStack w=\"100%\" gap=\"8px\" bg={showRemoveIcon ? 'primary_opacity.10' : 'transparent'} borderRadius=\"12px\" pr={showRemoveIcon ? '8px' : '0px'}>\n      <TradeInput\n        value={tokenAmount || ''}\n        balance={balanceInfo?.balanceFormat || '0'}\n        token={token}\n        inputAllowed={true}\n        selectable={true}\n        placeholder={'0'}\n        openSelectTokenModal={openSelectTokenModal}\n        onChange={function (value: string): void {\n          setFromAmountObj(token.coin_type, value)\n        }}\n        amountValue={totalAmountOutValue}\n        wrapStyle={{\n          h: '98px',\n          borderRadius: '12px'\n        }}\n      />\n      {showRemoveIcon && (\n        <Center\n          w=\"18px\"\n          h=\"18px\"\n          borderRadius=\"50%\"\n          bg=\"primary_opacity.10\"\n          cursor=\"pointer\"\n          _hover={{ bg: 'primary', svg: { fill: 'black' } }}\n          onClick={() => {\n            handleRemoveClick(token)\n            setFromAmountObj(token.coin_type, '')\n          }}\n        >\n          <Icon svgFill=\"primary\" xlinkHref={'#icon-tx_remove'} fontSize=\"10px\" svgHover=\"black\" />\n        </Center>\n      )}\n    </HStack>\n  )\n}\n\nfunction MergeTradeInputFromPlaceholder({\n  openSelectTokenModal\n}: {\n  openSelectTokenModal: (selectType: 'single' | 'multiple', fromIndex: number) => void\n}) {\n  return (\n    <TradeInput\n      value={''}\n      balance={''}\n      inputAllowed={true}\n      selectable={true}\n      placeholder={'0'}\n      half={false}\n      max={false}\n      openSelectTokenModal={() => {\n        openSelectTokenModal('multiple', 0)\n      }}\n      onChange={() => {}}\n      amountValue={''}\n      wrapStyle={{\n        h: '98px',\n        borderRadius: '12px'\n      }}\n      rightJustify=\"flex-end\"\n      symbolTipStyle={{\n        fontSize: '16px'\n      }}\n    />\n  )\n}\n","import { useMergeSwap } from '@/hooks/merge-swap/useMergeSwap'\nimport { useMergeSwapButtonStatus } from '@/hooks/merge-swap/useMergeSwapButtonStatus'\nimport { useFormatMergeSwapRoute, useMergeSwapScamsText } from '@/hooks/merge-swap/useMergeSwapHelper'\nimport useMergeSwapStore from '@/store/merge-swap/useMergeSwapStore'\nimport { MergeSwapMaxOutValue, MergeSwapQuote } from '@/types/merge_swap'\nimport { ErrorTips, TokenSelectModal, TradeInput } from '@cetus/design'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { useAccountStore } from '@cetus/stores'\nimport { Token } from '@cetus/types'\nimport { BackButton, HTextLabelBox, Icon } from '@cetus/ui-kit'\nimport { addComma, cancelBubble, formatCurrency, formatNumber } from '@cetus/utils'\nimport { d, fixCoinType } from '@cetusprotocol/common-sdk'\nimport { Box, Button, Center, HStack, Text, VStack } from '@chakra-ui/react'\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport ScamsAlert from '../swap/ScamsAlert'\nimport OverView from '../swap/SwapRoutes/OverView'\nimport RoutesModal from '../swap/SwapRoutes/RoutesModal'\nimport MergeSwapConfirm from './MergeSwapConfirm'\nimport { MergeTradeHeader } from './MergeTradeHeader'\nimport { MergeTradeInputFrom } from './MergeTradeInputFrom'\n\nexport default function MergeSwapTrade() {\n  const { windowWidth } = useWindowWidth()\n  const navigate = useNavigate()\n  const {\n    toToken,\n    setToToken,\n    setFromTokenList,\n    switchFromToken,\n    fromTokenList,\n    removeFromToken,\n    mergeSwapQuote,\n    findRouterLoading,\n    isOpenRoutePathModal,\n    setIsOpenRoutePathModal,\n    selectedRoutePathIndex,\n    setSelectedRoutePathIndex,\n    isShowSelectRouter\n  } = useMergeSwapStore()\n  const {\n    totalOutValue,\n    totalInputValue,\n    minReceivedAmount,\n    toBalanceInfo,\n    handleSwapSubmit,\n    isAllInputValid,\n    hasAnyInput,\n    isAllBalanceEnough,\n    handleRefresh,\n    isOpenConfirmModel,\n    setIsOpenConfirmModel,\n    progressRef,\n    targetTokenList\n  } = useMergeSwap()\n  const { btnText, btnDisabled } = useMergeSwapButtonStatus(isAllInputValid, isAllBalanceEnough, totalOutValue)\n  const { currentAccount, onWalletModal } = useAccountStore()\n  const [isOpenSelectTokenModal, setIsOpenSelectTokenModal] = useState(false)\n  const [tokenModalType, setTokenModalType] = useState<'from' | 'to'>('from')\n  const [tokenSelectType, setTokenSelectType] = useState<'multiple' | 'single'>('multiple')\n  const [actionFromIndex, setActionFromIndex] = useState<number>(0)\n\n  const { scamsText } = useMergeSwapScamsText(fromTokenList)\n\n  const onSelectToken = useCallback(\n    (tokenInfo: Token | Token[]) => {\n      console.log('MergeSwapTrade 🚀 ~ onSelectToken ~ tokenInfo:', tokenInfo)\n      if (!tokenInfo) return\n      if (tokenSelectType === 'multiple') {\n        const tokenList = tokenInfo as Token[]\n        if (toToken && tokenList.find(item => fixCoinType(item.coin_type) === fixCoinType(toToken.coin_type))) {\n          setToToken(undefined)\n        }\n        setFromTokenList(tokenInfo as Token[])\n      } else {\n        if (tokenModalType === 'from') {\n          const newToken = tokenInfo as Token\n          // 如果选择的是from token，则不进行切换\n          if (newToken.coin_type === fromTokenList[actionFromIndex].coin_type) {\n            return\n          }\n          if (toToken && fixCoinType(newToken.coin_type) === fixCoinType(toToken.coin_type)) {\n            setToToken(undefined)\n          }\n          switchFromToken(newToken, actionFromIndex)\n        } else {\n          setFromTokenList(fromTokenList.filter(item => fixCoinType(item.coin_type) !== fixCoinType((tokenInfo as Token).coin_type)))\n          setToToken(tokenInfo as Token)\n        }\n      }\n    },\n    [tokenSelectType, tokenModalType, fromTokenList, toToken, actionFromIndex]\n  )\n\n  const confirmModalDataRef = useRef<MergeSwapQuote | null>(null)\n\n  const { allProviders, hasHighPriceDiff } = useFormatMergeSwapRoute(mergeSwapQuote)\n\n  const modalSelectTokens = useMemo(() => {\n    if (tokenSelectType === 'multiple') {\n      return fromTokenList\n    } else {\n      if (tokenModalType === 'from') {\n        return fromTokenList[actionFromIndex]\n      } else {\n        return toToken\n      }\n    }\n  }, [fromTokenList, toToken, tokenSelectType, actionFromIndex, tokenModalType])\n\n  const getMergeSwapQuote = (): MergeSwapQuote => {\n    if (isOpenConfirmModel && confirmModalDataRef.current) {\n      return confirmModalDataRef.current\n    }\n    return { ...mergeSwapQuote! }\n  }\n\n  useEffect(() => {\n    if (!isOpenConfirmModel) {\n      confirmModalDataRef.current = null\n    }\n  }, [isOpenConfirmModel])\n\n  return (\n    <VStack alignItems=\"start\" mt={{ base: '28px', lg: '32px' }} w={{ base: '100%', lg: '470px' }} position=\"relative\" gap=\"12px\">\n      <BackButton\n        h=\"28px\"\n        customTextStyle={{ fontSize: '12px' }}\n        onClick={() => {\n          navigate('/swap')\n        }}\n      />\n      <HStack mt=\"20px\" width=\"100%\" justifyContent=\"space-between\" alignItems=\"center\">\n        <Text fontSize=\"16px\" fontWeight=\"500\" color=\"text_caption\">\n          Merge Swap\n        </Text>\n        {/* 滑点、进度条 */}\n        <MergeTradeHeader progressRef={progressRef} handleRefresh={handleRefresh} callbackInterval={isOpenConfirmModel ? 5 : 10} />\n      </HStack>\n\n      <VStack w=\"100%\" gap=\"12px\" pt=\"12px\" pb=\"12px\" alignItems=\"start\">\n        <Text fontSize=\"13px\">You Pay</Text>\n        {/* 选择from token */}\n        <MergeTradeInputFrom\n          openSelectTokenModal={(selectType, fromIndex) => {\n            setTokenSelectType(selectType)\n            setTokenModalType('from')\n            setActionFromIndex(fromIndex)\n            setIsOpenSelectTokenModal(true)\n          }}\n          handleRemoveClick={token => {\n            removeFromToken(token)\n          }}\n        />\n        {/* 指示箭头 */}\n        <Center w=\"36px\" h=\"36px\" ml=\"calc(50% - 18px)\" borderRadius=\"50%\" border=\"1px solid\" borderColor=\"token_inactive_border\" bg={'input_bg'}>\n          <Icon cursor=\"default\" xlinkHref=\"#icon-a-icon_trade\" svgFill=\"text_caption\" fontSize=\"12px\" />\n        </Center>\n\n        <Text fontSize=\"13px\">You Receive</Text>\n        {/* 选择to token */}\n        <TradeInput\n          token={toToken}\n          value={mergeSwapQuote?.totalAmountOutDisplay || ''}\n          balance={toBalanceInfo?.balanceFormat || '0'}\n          selectable={true}\n          placeholder={'0'}\n          inputAllowed={false}\n          half={false}\n          max={false}\n          loading={findRouterLoading}\n          onChange={() => {}}\n          openSelectTokenModal={() => {\n            setTokenModalType('to')\n            setTokenSelectType('single')\n            setIsOpenSelectTokenModal(true)\n          }}\n          amountValue={totalOutValue}\n          wrapStyle={{\n            h: '98px',\n            borderRadius: '12px'\n          }}\n          symbolTipStyle={{\n            fontSize: '16px'\n          }}\n        />\n\n        {/* 风险提示 */}\n        {scamsText && (\n          <Box mt=\"-44px\" p=\"48px 16px 16px\" borderRadius=\"20px\" bg=\"bg_secondary\" border=\"1px solid\" borderColor=\"border\">\n            <ScamsAlert scamsText={scamsText} />\n          </Box>\n        )}\n\n        {/* 超出最大输出值 */}\n        {!findRouterLoading && totalOutValue && d(totalOutValue).gt(MergeSwapMaxOutValue) && (\n          <ErrorTips mt=\"-4px\" type=\"error\" tips={`The Output exceeds the maximum: $${addComma(MergeSwapMaxOutValue)}`} />\n        )}\n        {/* 流动性不足 */}\n        {!findRouterLoading && mergeSwapQuote?.error?.coin && (\n          <ErrorTips mt=\"-4px\" type=\"error\" tips={`Insufficient Liquidity on ${mergeSwapQuote?.error?.coin?.symbol}`} />\n        )}\n        {/* 未连接钱包 */}\n        {!currentAccount && hasAnyInput && <ErrorTips mt=\"-4px\" type=\"warning\" tips={`Please connect wallet to load results.`} />}\n        {/* 价格差异过大 */}\n        {/* {hasHighPriceDiff && !findRouterLoading && isShowSelectRouter && (\n          <ErrorTips mt=\"-4px\" type=\"warning\" tips={`High price difference. Be cautious before submitting your order`} />\n        )} */}\n        <VStack gap=\"12px\" bg=\"bg_secondary\" w=\"100%\" borderRadius=\"12px 12px 16px 16px\" border=\"1px solid\" borderColor=\"border\">\n          {/* 提交按钮 */}\n          <Button\n            fontSize=\"18px\"\n            fontWeight=\"500\"\n            width=\"100%\"\n            h=\"52px\"\n            m=\"-1px\"\n            isDisabled={btnDisabled || findRouterLoading}\n            isLoading={findRouterLoading}\n            onClick={() => {\n              if (!currentAccount?.address) {\n                onWalletModal(true)\n                return\n              }\n              // 在打开确认弹窗前保存当前数据\n              if (mergeSwapQuote) {\n                confirmModalDataRef.current = { ...mergeSwapQuote }\n              }\n              setIsOpenConfirmModel(true)\n            }}\n          >\n            {btnText}\n          </Button>\n\n          {/* 报价结果 */}\n          {mergeSwapQuote?.data && mergeSwapQuote.data.allRoutes.length > 0 && isShowSelectRouter && (\n            <VStack w=\"100%\" mt=\"4px\" pb=\"12px\">\n              <HTextLabelBox\n                isLoading={findRouterLoading}\n                label={'Total Input Value'}\n                value={`${totalInputValue === 'Incalculable' ? totalInputValue : formatCurrency(totalInputValue, 2)}`}\n                labelStyle={{ fontWeight: 500, whiteSpace: 'nowrap', fontSize: '14px' }}\n                valueStyle={{ fontWeight: 500, fontSize: '14px', color: totalInputValue === 'Incalculable' ? 'primary_yellow' : 'text_primary' }}\n                skeletonStyle={{\n                  valueW: '128px'\n                }}\n                wrapStyle={{\n                  p: '0 8px',\n                  minH: '20px'\n                }}\n              />\n              <HTextLabelBox\n                isLoading={findRouterLoading}\n                label={'Minimum Received'}\n                value={`${formatNumber(minReceivedAmount, toToken?.decimals)} ${toToken?.symbol}`}\n                labelStyle={{ fontWeight: 500, whiteSpace: 'nowrap', fontSize: '14px' }}\n                valueStyle={{ fontWeight: 500, fontSize: '14px' }}\n                skeletonStyle={{\n                  valueW: '128px'\n                }}\n                wrapStyle={{\n                  p: '0 8px',\n                  minH: '20px'\n                }}\n              />\n\n              <HStack w=\"100%\" justify=\"space-between\" align=\"flex-start\" p=\"0 8px\" mt=\"2px\">\n                <Text fontWeight=\"500\" whiteSpace=\"nowrap\">\n                  Route\n                </Text>\n                <Box\n                  mt=\"-2px\"\n                  onClick={e => {\n                    cancelBubble(e)\n                    setIsOpenRoutePathModal(true)\n                    setSelectedRoutePathIndex(0)\n                  }}\n                  cursor=\"pointer\"\n                >\n                  <OverView allProviders={allProviders} loading={findRouterLoading}>\n                    <Icon xlinkHref=\"#icon-icon_spread\" fontSize=\"16px\" />\n                  </OverView>\n                </Box>\n              </HStack>\n            </VStack>\n          )}\n        </VStack>\n      </VStack>\n      {/* 交易确认弹窗 */}\n      {isOpenConfirmModel && getMergeSwapQuote() && (\n        <MergeSwapConfirm\n          data={getMergeSwapQuote()!}\n          onClose={() => {\n            setIsOpenConfirmModel(false)\n            confirmModalDataRef.current = null\n          }}\n          handleRouterSwap={data => {\n            handleSwapSubmit(data)\n          }}\n          isOpen={isOpenConfirmModel}\n        />\n      )}\n\n      {/* 路由path弹窗 */}\n      {isOpenRoutePathModal && mergeSwapQuote?.data && (\n        <RoutesModal\n          isOpen={isOpenRoutePathModal}\n          onClose={() => {\n            setIsOpenRoutePathModal(false)\n          }}\n          mergeSwapData={{\n            allRoutes: [...mergeSwapQuote?.data?.allRoutes],\n            currentIndex: selectedRoutePathIndex\n          }}\n          toCoin={toToken}\n          allProviders={allProviders}\n        />\n      )}\n\n      {/* 选择token弹窗      */}\n      <TokenSelectModal\n        selectType={tokenSelectType}\n        value={modalSelectTokens}\n        isShowCoinInfo={tokenModalType === 'from'}\n        showSearchInput={tokenModalType === 'from'}\n        isShowHotList={tokenModalType !== 'to'}\n        haveImport={tokenModalType !== 'to'}\n        isShowLabelTab={tokenModalType !== 'to'}\n        isShowTokenListTab={tokenModalType !== 'to'}\n        isShowCollectListBox={tokenModalType === 'from'}\n        whiteTokenList={tokenModalType === 'to' ? targetTokenList : undefined}\n        maxSelectNum={tokenSelectType === 'multiple' ? 6 : 1}\n        isOnlyMergeTargetToken={tokenModalType === 'to'}\n        onSelectToken={onSelectToken}\n        isOpen={isOpenSelectTokenModal}\n        onClose={() => {\n          setIsOpenSelectTokenModal(false)\n        }}\n      />\n    </VStack>\n  )\n}\n","import PriceImpact from '@/components/swap/PriceImpact'\nimport OverView from '@/components/swap/SwapRoutes/OverView'\nimport { useGetRouterProviders } from '@/hooks/merge-swap/useMergeSwapHelper'\nimport { usePriceImpact } from '@/hooks/swap/usePriceImpact'\nimport useGlobalStore from '@/store/common/global'\nimport { CurrentPrice, ErrorTips } from '@cetus/design'\nimport { useGetToken } from '@cetus/hooks/src/useToken'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport { Token } from '@cetus/types'\nimport { HTextLabelBox, Icon, SingleCoinImage } from '@cetus/ui-kit'\nimport { cancelBubble, formatCurrency, formatNumber } from '@cetus/utils'\nimport { MergeRoute } from '@cetusprotocol/aggregator-sdk'\nimport { d, fromDecimalsAmount } from '@cetusprotocol/common-sdk'\nimport { Box, Collapse, HStack, Text, VStack } from '@chakra-ui/react'\nimport { useMemo, useState } from 'react'\n\nexport function MergeSwapRouteItem({\n  route,\n  index,\n  openRoutesModal\n}: {\n  route: MergeRoute\n  index: number\n  openRoutesModal: (index: number) => void\n}) {\n  const { getTokenAmountValue } = useTokenPrice()\n  if (route.paths.length === 0) return <></>\n  const fromCoinType = route.paths[0].from\n  const toCoinType = route.paths[route.paths.length - 1].target\n  const { routeProviders } = useGetRouterProviders(route.paths || [])\n  const { tokenInfo: fromToken } = useGetToken(fromCoinType)\n  const { tokenInfo: toToken } = useGetToken(toCoinType)\n\n  const amount_out_ui = fromDecimalsAmount(route.amountOut.toString(), toToken?.decimals || 0)\n  const amount_in_ui = fromDecimalsAmount(route.amountIn.toString(), fromToken?.decimals || 0)\n\n  const amount_out_usd = getTokenAmountValue(toCoinType, amount_out_ui)\n\n  const { marketPrice, swapPrice, priceImpact, sources, priceImpactTextInfo, showIncalculable } = usePriceImpact(\n    fromToken,\n    toToken,\n    amount_in_ui,\n    amount_out_ui\n  )\n  const [isOpenEx, setIsOpenEx] = useState(false)\n\n  return (\n    <VStack w=\"100%\" borderRadius=\"12px\" bg=\"card_bg\" p=\"16px\" gap=\"12px\">\n      <HStack w=\"100%\" justifyContent=\"space-between\">\n        <HStack gap=\"8px\">\n          <SingleCoinImage imageUrl={fromToken?.logo_url} w=\"28px\" h=\"28px\" coinType={fromCoinType} />\n          <Icon xlinkHref=\"#icon-icon_double_arrow_left\" svgW=\"12px\" svgH=\"12px\" iconCursor=\"default\" showHover={false} />\n          <SingleCoinImage imageUrl={toToken?.logo_url} w=\"28px\" h=\"28px\" coinType={toCoinType} />\n        </HStack>\n        <VStack gap=\"6px\" alignItems=\"end\">\n          <Text fontSize=\"16px\" color=\"text_caption\" fontWeight=\"500\">\n            {formatNumber(amount_out_ui)} {toToken?.symbol}\n          </Text>\n          <Text fontSize=\"14px\">{formatCurrency(amount_out_usd, 2)}</Text>\n        </VStack>\n      </HStack>\n      <Box w=\"100%\" borderBottom=\"1px dashed\" borderColor=\"border\" />\n      <PriceImpact\n        fromToken={fromToken!}\n        toToken={toToken!}\n        marketPrice={marketPrice}\n        priceImpact={priceImpactTextInfo}\n        sources={sources}\n        showIncalculable={showIncalculable}\n      />\n      <HStack w=\"100%\" justifyContent=\"space-between\">\n        <CurrentPrice\n          noIcon={true}\n          fromToken={fromToken!}\n          toToken={toToken!}\n          fromValue={amount_in_ui}\n          toValue={amount_out_ui}\n          color=\"text_caption\"\n          fontSize={'14px'}\n        />\n        <HStack flex={1} justifyContent=\"end\" alignItems=\"center\" cursor=\"pointer\" onClick={() => setIsOpenEx(!isOpenEx)}>\n          <Icon\n            transform={isOpenEx ? 'rotate(0deg)' : 'rotate(180deg)'}\n            transition=\"transform 0.5s\"\n            xlinkHref=\"#icon-icon_ascending\"\n            fontSize=\"18px\"\n          />\n        </HStack>\n      </HStack>\n      {d(priceImpact).lte(-30) && (\n        <ErrorTips tipsFontSize=\"12px\" tips=\"High price difference. Be cautious before submitting your order.\" p=\"8px\" gap=\"4px\" />\n      )}\n      <Collapse\n        unmountOnExit\n        animateOpacity\n        in={isOpenEx}\n        style={{ width: '100%' }}\n        transition={{\n          enter: { duration: 0.2, ease: 'easeOut' },\n          exit: { duration: 0.2, ease: 'easeIn' }\n        }}\n      >\n        <RouteItemEx\n          toToken={toToken}\n          amount_out_ui={amount_out_ui}\n          allProviders={routeProviders}\n          handleOpenRoutesModal={() => openRoutesModal(index)}\n        />\n      </Collapse>\n    </VStack>\n  )\n}\n\ntype RouteItemExProps = {\n  amount_out_ui: string\n  allProviders: string[]\n  toToken?: Token\n  handleOpenRoutesModal: () => void\n}\n\nfunction RouteItemEx({ amount_out_ui, allProviders, handleOpenRoutesModal, toToken }: RouteItemExProps) {\n  const { slippage } = useGlobalStore()\n\n  const minReceivedAmount = useMemo(() => {\n    if (+amount_out_ui) {\n      return d(amount_out_ui)\n        .mul(d(1).sub(d(slippage)))\n        .toString()\n    }\n  }, [slippage, amount_out_ui])\n\n  return (\n    <VStack w=\"100%\" bg=\"primary_opacity.10\" borderRadius=\"8px\" p=\"12px\" gap=\"12px\">\n      <HTextLabelBox\n        label={'Minimum Received'}\n        value={`${formatNumber(minReceivedAmount)} ${toToken?.symbol}`}\n        labelStyle={{ fontWeight: 500, whiteSpace: 'nowrap', fontSize: '14px' }}\n        valueStyle={{ fontWeight: 500, fontSize: '14px' }}\n        skeletonStyle={{\n          valueW: '128px'\n        }}\n        wrapStyle={{\n          minH: '20px'\n        }}\n      />\n\n      <HStack w=\"100%\" justify=\"space-between\" align=\"flex-start\">\n        <Text fontWeight=\"500\" whiteSpace=\"nowrap\">\n          Route\n        </Text>\n        <Box\n          mt=\"-2px\"\n          onClick={e => {\n            cancelBubble(e)\n            handleOpenRoutesModal()\n          }}\n          cursor=\"pointer\"\n        >\n          <OverView allProviders={allProviders}>\n            <Icon xlinkHref=\"#icon-icon_spread\" fontSize=\"16px\" />\n          </OverView>\n        </Box>\n      </HStack>\n    </VStack>\n  )\n}\n","import useMergeSwapStore from '@/store/merge-swap/useMergeSwapStore'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { Icon } from '@cetus/ui-kit'\nimport { MergeSwapRouterData } from '@cetusprotocol/aggregator-sdk'\nimport { HStack, Skeleton, Text, VStack } from '@chakra-ui/react'\nimport { useMemo, useState } from 'react'\nimport { MergeSwapRouteItem } from './MergeSwapRouteItem'\n\ntype MergeSwapRouteProps = {\n  routerData?: MergeSwapRouterData\n  findRouterLoading: boolean\n}\n\nexport function MergeSwapRoute(props: MergeSwapRouteProps) {\n  const { routerData, findRouterLoading } = props\n  const [localData, setLocalData] = useState<MergeSwapRouterData | undefined>(routerData)\n  const { windowWidth } = useWindowWidth()\n  const { setIsOpenRoutePathModal, setSelectedRoutePathIndex } = useMergeSwapStore(state => ({\n    setIsOpenRoutePathModal: state.setIsOpenRoutePathModal,\n    setSelectedRoutePathIndex: state.setSelectedRoutePathIndex\n  }))\n\n  const showData = useMemo(() => {\n    if (routerData) {\n      setLocalData(routerData)\n      return routerData\n    }\n    // 返回上一次记录数据，保证在routerData 为空的情况下，动画消失过程中，有数据占位\n    return localData\n  }, [localData?.quoteID, routerData?.quoteID])\n\n  return (\n    <VStack gap=\"12px\" alignItems=\"start\" mt={{ base: '20px', lg: '144px' }} w={{ base: '100%', lg: '470px' }}>\n      <Text mt=\"0px\" fontSize=\"13px\" color=\"text_caption\">\n        Route\n      </Text>\n\n      <VStack bg=\"block_color_opacity.10\" p=\"12px\" w=\"100%\" gap=\"8px\" borderRadius=\"12px\" border=\"1px solid\" borderColor=\"border\">\n        {(!showData || findRouterLoading) && <RouterItemSkeleton data={showData} />}\n        {showData &&\n          !findRouterLoading &&\n          showData?.allRoutes.map((route, index) => (\n            <MergeSwapRouteItem\n              key={index + route.amountIn.toString() + route?.amountOut.toString()}\n              route={route}\n              index={index}\n              openRoutesModal={index => {\n                setIsOpenRoutePathModal(true)\n                setSelectedRoutePathIndex(index)\n              }}\n            />\n          ))}\n      </VStack>\n    </VStack>\n  )\n}\n\nexport function RouterItemSkeleton({ data }: { data?: MergeSwapRouterData }) {\n  const allRoutes = data?.allRoutes || [1, 2, 3]\n  return (\n    <VStack w=\"100%\" gap=\"16px\">\n      {allRoutes.map((_, idx) => (\n        <VStack\n          key={idx}\n          width=\"100%\"\n          bg=\"bg_primary\"\n          position=\"relative\"\n          alignItems=\"flex-start\"\n          padding=\"16px\"\n          borderRadius=\"8px\"\n          border=\"1px solid\"\n          borderColor=\"border\"\n          gap=\"12px\"\n        >\n          {/* Header骨架 */}\n          <HStack w=\"100%\" justifyContent=\"space-between\">\n            <HStack>\n              <Skeleton boxSize=\"32px\" borderRadius=\"50%\" />\n              <Icon xlinkHref=\"#icon-icon_double_arrow_left\" svgW=\"12px\" svgH=\"12px\" iconCursor=\"default\" showHover={false} />\n              <Skeleton boxSize=\"32px\" borderRadius=\"50%\" />\n            </HStack>\n\n            <VStack alignItems=\"flex-end\">\n              <Skeleton height=\"20px\" width=\"100px\" />\n              <Skeleton height=\"16px\" width=\"100px\" />\n            </VStack>\n          </HStack>\n\n          {/* Footer骨架 */}\n          <VStack w=\"100%\" gap=\"8px\">\n            <HStack w=\"100%\" justifyContent=\"space-between\">\n              <HStack>\n                <Skeleton height=\"16px\" width=\"100px\" />\n              </HStack>\n              <Skeleton height=\"16px\" width=\"100px\" />\n            </HStack>\n            <HStack w=\"100%\" justifyContent=\"space-between\">\n              <HStack>\n                <Skeleton height=\"16px\" width=\"100px\" />\n              </HStack>\n              <Skeleton height=\"16px\" width=\"100px\" />\n            </HStack>\n          </VStack>\n        </VStack>\n      ))}\n    </VStack>\n  )\n}\n","import MergeSwapTrade from '@/components/merge-swap/MergeSwapTrade'\nimport { MergeSwapRoute } from '@/components/merge-swap/route/MergeSwapRoute'\nimport useMergeSwapStore from '@/store/merge-swap/useMergeSwapStore'\nimport { MergeSwapQuote } from '@/types/merge_swap'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { Box, HStack, VStack } from '@chakra-ui/react'\n\nfunction MergeSwap() {\n  const { isApp } = useWindowWidth()\n  const { isShowSelectRouter, findRouterLoading, mergeSwapQuote } = useMergeSwapStore(state => ({\n    isShowSelectRouter: state.isShowSelectRouter,\n    mergeSwapQuote: state.mergeSwapQuote,\n    findRouterLoading: state.findRouterLoading\n  }))\n\n  return (\n    <VStack w={isApp ? '100%' : '1200px'}>\n      {isApp ? (\n        <MergeSwapContentMobile isShowSelectRouter={isShowSelectRouter} mergeSwapQuoteData={mergeSwapQuote} findRouterLoading={findRouterLoading} />\n      ) : (\n        <MergeSwapContentPc isShowSelectRouter={isShowSelectRouter} mergeSwapQuoteData={mergeSwapQuote} findRouterLoading={findRouterLoading} />\n      )}\n    </VStack>\n  )\n}\n\ntype MergeSwapContentProps = {\n  isShowSelectRouter: boolean\n  mergeSwapQuoteData?: MergeSwapQuote\n  findRouterLoading: boolean\n}\n\nfunction MergeSwapContentPc({ isShowSelectRouter, mergeSwapQuoteData, findRouterLoading }: MergeSwapContentProps) {\n  return (\n    <Box\n      transition=\"all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94)\"\n      willChange=\"transform\"\n      transform={isShowSelectRouter ? 'calc(50% - 235px))' : 'translateX(calc(50% - 235px))'}\n    >\n      <HStack alignItems=\"start\" gap=\"16px\" position=\"relative\">\n        {/* 交易组件 */}\n        <MergeSwapTrade />\n        {/* 选择路由 */}\n        <Box\n          transition=\"all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94)\"\n          opacity={isShowSelectRouter ? 1 : 0}\n          transform={isShowSelectRouter ? 'translateX(0) scale(1)' : 'translateX(30px) scale(0.95)'}\n          pointerEvents={isShowSelectRouter ? 'auto' : 'none'}\n          willChange=\"transform, opacity\"\n          visibility={isShowSelectRouter ? 'visible' : 'hidden'}\n        >\n          <MergeSwapRoute routerData={mergeSwapQuoteData?.data} findRouterLoading={findRouterLoading} />\n        </Box>\n      </HStack>\n    </Box>\n  )\n}\n\nfunction MergeSwapContentMobile({ isShowSelectRouter, mergeSwapQuoteData, findRouterLoading }: MergeSwapContentProps) {\n  return (\n    <VStack w=\"100%\" maxW=\"100%\" gap=\"0px\">\n      {/* 交易组件 */}\n      <MergeSwapTrade />\n      {/* 选择路由 */}\n      {isShowSelectRouter && mergeSwapQuoteData && !mergeSwapQuoteData?.data?.error && (\n        <MergeSwapRoute routerData={mergeSwapQuoteData?.data} findRouterLoading={findRouterLoading} />\n      )}\n    </VStack>\n  )\n}\n\nexport default MergeSwap\n"],"names":["store","set","get","isOpenRoutePathModal","selectedRoutePathIndex","isShowSelectRouter","mergeSwapQuote","loading","coinType","fromAmount","toAmount","envConfigs","toToken","fromTokenList","newAmountObj","newCoinTypes","token","fromIndex","currentList","currentAmountObj","dupeIndex","item","fixCoinType","newList","_","index","existingToken","useMergeSwapStore","create","_interopRequireDefault","require$$0","exports","_debounce","_typeof2","require$$1","require$$2","isNodeOrWeb","freeGlobal","global","freeSelf","_react","useLatest","value","ref","utils","isDev","_useLatest","require$$3","_utils","require$$4","_isDev","require$$5","useUnmount","fn","fnRef","_tslib","_lodashPolyfill","_useUnmount","require$$6","require$$7","require$$8","useDebounceFn","options","_a","wait","debounced","args","_i","createUpdateEffect","hook","effect","deps","isMounted","_createUpdateEffect","_useDebounceFn","_useUpdateEffect","useDebounceEffect","flag","setFlag","run","usePriceAcceptSwapQuote","originData","newData","useMemo","originOutput","route","d","newPrice","price","useGetMinReceivedAmount","slippage","totalAmountOutDisplay","useGetRouterProviders","paths","routeProviders","setRouteProviders","useState","providers","path","useMergeSwapPrice","getTokenPrice","fetchTokenPrices","useTokenPrice","handleTokenPrices","skipVerify","tokenList","coinTypeList","useFormatMergeSwapRoute","quote","hasHighPriceDiff","setHasHighPriceDiff","useMergeTotalInputValue","fromAmountObj","getTokenAmountValue","coinPriceObj","totalInputValue","setTotalInputValue","totalValue","hasCoinPrice","amount","tokenValue","useVerifySwapInput","currentAccount","useAccountStore","state","getBalanceInfoFromCache","tokenBalanceObj","useGetTokenBalance","isAllBalanceEnough","setIsAllBalanceEnough","isAllInputValid","setIsAllInputValid","hasAnyInput","setHasAnyInput","verifySwapInput","useCallback","allInputValid","allBalanceEnough","balanceInfo","handleMergeSwapQuote","uuid","routerResult","totalAmountOut","AggregatorServerErrorCode","errorMsg","regex","match","coin","errorCoin","fromDecimalsAmount","useMergeSwapScamsText","scamsCoinList","useCheckTokenScamsAlert","scamsText","setScamsText","useDeepCompareEffect","scamsTokenList","useMergeSwap","aggregatorSDK","useClmmSDKStore","useWebConfigStore","mevProtect","maxCapForGas","transactionMode","customGasPrice","useGlobalStore","fetchAccountBalance","useAccountBalance","providersSwitchStates","useSwapConfigStore","setToAmount","findRouterLoading","setFindRouterLoading","clearFromAmountObj","setMergeSwapQuote","clearData","setIsShowSelectRouter","uuidRef","useRef","isOpenConfirmModel","setIsOpenConfirmModel","progressRef","verifiedTokenMap","useTokenStore","handleReset","useEffect","isAllowFindRouter","targetTokenList","findRouter","mergeSwapParams","key","BN","toDecimalsAmount","error","resetData","v4","reCalculateRouteData","totalOutValue","toBalanceInfo","minReceivedAmount","signAndExecuteTransaction","transactionConfirmation","useTransaction","swapData","aggregatorPartner","data","toastType","status","description","addComma","info","newDescription","tx","Transaction","sdkParams","MergeSwapMaxOutValue","useMergeSwapButtonStatus","submitBtnInfo","btnInfo","MergeSwapConfirm","props","isOpen","onClose","handleRouterSwap","hasPriceImpactWarn","setHasPriceImpactWarn","tokenWarnStates","setTokenWarnStates","setOriginData","ignorePriceImpact","setIgnorePriceImpact","needsScroll","setNeedsScroll","scrollContainerRef","priceAcceptSwapQuote","maxHeight","setMaxHeight","showPriceUpdated","handleTokenPriceImpactWarnChange","hasWarn","prev","hasAnyWarn","checkScrollNeeded","container","resizeObserver","toAmountItem","coinTypeFix","amountOut","_b","buttonDisabled","handlePriceAcceptClick","safeData","cloneDeep","jsxs","Modal","jsx","ModalOverlay","ModalContent","ModalHeader","Heading","ModalCloseButton","ModalBody","VStack","TokenInItem","Center","Icon","HStack","SingleCoinImage","Text","formatNumber","HTextLabelBox","formatPercentage","Button","fromToken","onPriceImpactWarnChange","marketPrice","sources","priceImpactTextInfo","showIncalculable","showPriceImpactWarn","usePriceImpact","CurrentPrice","Box","PriceImpact","MergeTradeHeader","handleRefresh","callbackInterval","AggregatorMode","Slippage","FreshProgressV2","MergeTradeInputFrom","handleRemoveClick","openSelectTokenModal","showAddToken","MergeTradeInputFromPlaceholder","MergeTradeInputTokenItem","showRemoveIcon","setFromAmountObj","tokenAmount","totalAmountOutValue","TradeInput","MergeSwapTrade","useWindowWidth","navigate","useNavigate","setToToken","setFromTokenList","switchFromToken","removeFromToken","setIsOpenRoutePathModal","setSelectedRoutePathIndex","handleSwapSubmit","btnText","btnDisabled","onWalletModal","isOpenSelectTokenModal","setIsOpenSelectTokenModal","tokenModalType","setTokenModalType","tokenSelectType","setTokenSelectType","actionFromIndex","setActionFromIndex","onSelectToken","tokenInfo","newToken","confirmModalDataRef","allProviders","modalSelectTokens","getMergeSwapQuote","BackButton","selectType","ScamsAlert","ErrorTips","_c","formatCurrency","e","cancelBubble","OverView","RoutesModal","_d","TokenSelectModal","MergeSwapRouteItem","openRoutesModal","Fragment","fromCoinType","toCoinType","useGetToken","amount_out_ui","amount_in_ui","amount_out_usd","priceImpact","isOpenEx","setIsOpenEx","Collapse","RouteItemEx","handleOpenRoutesModal","MergeSwapRoute","routerData","localData","setLocalData","showData","RouterItemSkeleton","allRoutes","idx","Skeleton","MergeSwap","isApp","MergeSwapContentMobile","MergeSwapContentPc","mergeSwapQuoteData"],"mappings":"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","x_google_ignoreList":[1,2,3,4,5,6,7,8,9]}