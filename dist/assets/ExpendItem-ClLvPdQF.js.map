{"version":3,"file":"ExpendItem-ClLvPdQF.js","sources":["../../src/hooks/farms/useFarmsAction.ts","../../src/components/position/clmm/PriceRange.tsx","../../src/components/farms/ExpendItem.tsx"],"sourcesContent":["import useTransaction from '@/hooks/common/useTransaction'\nimport { PosBaseInfo } from '@/types'\nimport { useAccountBalance } from '@cetus/hooks'\nimport { CommonTypeInfo } from '@cetus/types'\nimport { useState } from 'react'\nimport useFarms from './useFarms'\n\nexport default function useFarmsActions() {\n  const { getBatchHarvestFarmsTxPayload, getStakeTxPayload, getUnstakeTxPayload, getHarvestFarmsTxPayload } = useFarms()\n  const { signAndExecuteTransaction } = useTransaction()\n  const [claimLoading, setClaimLoading] = useState(false)\n  const [unstakeLoading, setUnstakeLoading] = useState(false)\n  const { fetchAccountBalance } = useAccountBalance()\n\n  const toClaimAllPos = async (list: PosBaseInfo[], refreshFun: () => void) => {\n    setClaimLoading(true)\n    try {\n      const params: any = []\n      list.forEach((position: any) => {\n        if (position?.farmsPool) {\n          params.push({\n            pool_id: position.farmsPool,\n            position_nft_id: position.id\n          })\n        }\n      })\n      console.log('🚀 ~ list.forEach  toClaimAllPos ~ params:', params)\n      const { tx, msafeParams } = await getBatchHarvestFarmsTxPayload(params)\n      console.log('🚀 ~ toClaimAllPos ~ tx:', tx)\n      const res = await signAndExecuteTransaction(\n        tx,\n        {\n          getShowInfo: () => {\n            const info: CommonTypeInfo = {\n              modalDescriptionText: ` Claim rewards`,\n              toastTitleText: ' Claim'\n            }\n            return info\n          }\n        },\n        { msafeParams }\n      )\n      console.log('🚀 ~ toClaimAllPos ~ res:', res)\n      if (res) {\n        // 重新拿数据\n        setTimeout(async () => {\n          fetchAccountBalance()\n          refreshFun()\n        }, 2000)\n      }\n      setClaimLoading(false)\n    } catch (error) {\n      setClaimLoading(false)\n      console.log('🚀 ~ toClaimAllPos ~ error:', error)\n    }\n  }\n\n  const toStakePos = async (posInfo: any, farmsPool: string, tokenName: string, refreshFun: (events: any) => void) => {\n    console.log('🚀 ~ toStakePos ~ posInfo:', posInfo)\n\n    const { posId, clmmPool, coinTypeA, coinTypeB } = posInfo\n    setUnstakeLoading(true)\n    try {\n      const { tx, msafeParams } = await getStakeTxPayload(posId, farmsPool, clmmPool, coinTypeA, coinTypeB)\n      console.log('🚀 ~ toStakePos ~ tx:', tx)\n      const res = await signAndExecuteTransaction(\n        tx,\n        {\n          getShowInfo: () => {\n            const info: CommonTypeInfo = {\n              modalDescriptionText: `Stake ${tokenName}`,\n              toastTitleText: 'Stake'\n            }\n            return info\n          }\n        },\n        { msafeParams }\n      )\n\n      if (res) {\n        console.log('🚀 ~ toStakePos ~ res:', res)\n        refreshFun(res.events)\n      }\n      setUnstakeLoading(false)\n    } catch (error) {\n      console.log('🚀 ~ toStakePos ~ error:', error)\n      setUnstakeLoading(false)\n    }\n  }\n\n  const toUnStakePos = async (posId: string, farmsPool: string, tokenName: string, refreshFun: () => void) => {\n    setUnstakeLoading(true)\n    try {\n      const { tx, msafeParams } = await getUnstakeTxPayload(farmsPool, posId)\n      console.log('🚀 ~ toUnstack ~ tx:', tx)\n      const res = await signAndExecuteTransaction(\n        tx,\n        {\n          getShowInfo: () => {\n            const info: CommonTypeInfo = {\n              modalDescriptionText: `Unstake ${tokenName}`,\n              toastTitleText: 'Unstake'\n            }\n            return info\n          }\n        },\n        { msafeParams }\n      )\n      console.log('🚀 ~ toUnStakePos ~ res:', res)\n\n      if (res) {\n        // 重新拿数据\n        fetchAccountBalance()\n        refreshFun()\n      }\n      setUnstakeLoading(false)\n    } catch (error) {\n      console.log('🚀 ~ toUnStakePos ~ error:', error)\n      setUnstakeLoading(false)\n    }\n  }\n\n  const toClaimPos = async (posId: string, farmsPool: string, refreshFun: () => void) => {\n    setClaimLoading(true)\n    try {\n      const { tx, msafeParams } = await getHarvestFarmsTxPayload(farmsPool, posId)\n      console.log('🚀 ~ toClaimPos ~ tx:', tx)\n      const res = await signAndExecuteTransaction(\n        tx,\n        {\n          getShowInfo: () => {\n            const info: CommonTypeInfo = {\n              modalDescriptionText: ` Claim rewards`,\n              toastTitleText: ' Claim'\n            }\n            return info\n          }\n        },\n        { msafeParams }\n      )\n      console.log('🚀 ~ toClaimPos ~ res:', res)\n      if (res) {\n        // 重新拿数据\n        fetchAccountBalance()\n        refreshFun()\n      }\n      setClaimLoading(false)\n    } catch (error) {\n      setClaimLoading(false)\n      console.log('🚀 ~ toClaimPos ~ error:', error)\n    }\n  }\n  return {\n    toStakePos,\n    toUnStakePos,\n    toClaimPos,\n    toClaimAllPos,\n    claimLoading,\n    unstakeLoading\n  }\n}\n","import PositionPriceBar from '@/components/position/list/PositionPriceRangeBar'\nimport usePosHelper from '@/hooks/position/usePosHelper'\nimport usePositionStore from '@/store/position'\nimport { PosBaseInfo } from '@/types'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { HStack, Skeleton, Text, VStack } from '@chakra-ui/react'\nimport { ReactNode, useMemo, useState } from 'react'\nimport RangeValue from './RangeValue'\n\nfunction PriceRange({\n  positionInfo,\n  symbolEllipsesDecimals = 0,\n  labelInfo,\n  children\n}: {\n  positionInfo: PosBaseInfo\n  symbolEllipsesDecimals?: number\n  labelInfo?: { text: string; style?: any }\n  children?: ReactNode\n}) {\n  const { posPoolsRelatedData, posPoolsOriginalData } = usePositionStore()\n  const currentPosPoolsRelatedData = posPoolsRelatedData[positionInfo?.posId]\n  const { getPosIsActive } = usePosHelper()\n  // const isActive = currentPosPoolsRelatedData?.currentStatus == 'Active'\n  const isActive = useMemo(() => {\n    return getPosIsActive(positionInfo as PosBaseInfo, posPoolsOriginalData?.[positionInfo?.clmmPool || '']?.current_sqrt_price)\n  }, [positionInfo, posPoolsOriginalData])\n\n  const { isApp } = useWindowWidth()\n\n  const [priceDirect, setPriceDirect] = useState(true)\n  console.log('🚀🚀🚀 ~ PriceRange.tsx:32 ~ priceDirect:', priceDirect)\n  return (\n    <VStack w={{ base: '100%', lg: '480px' }} maxW={{ base: '100%', lg: '480px' }} height=\"100%\" alignItems=\"flex-start\" justifyContent=\"center\">\n      {/* <HStack maxW=\"100%\" w={{ base: '100%', lg: 'auto' }} height=\"100%\" borderRadius=\"12px\" bg=\"position_status_bg\"  alignItems=\"center\"> */}\n      <HStack\n        justifyContent=\"flex-start\"\n        height={{ base: 'auto', lg: '60px' }}\n        p={{ base: '12px', lg: '16px' }}\n        borderRadius=\"12px\"\n        bg=\"position_status_bg\"\n        alignItems={{\n          base: 'flex-start',\n          lg: 'center'\n        }}\n        w={{ base: '100%', lg: 'auto' }}\n        flexDirection={{\n          base: 'column',\n          lg: 'row'\n        }}\n        gap={{ base: '12px', lg: '8px' }}\n      >\n        {!isApp && (\n          <PositionPriceBar\n            minPrice={currentPosPoolsRelatedData?.minPrice}\n            maxPrice={currentPosPoolsRelatedData?.maxPrice}\n            currPrice={currentPosPoolsRelatedData?.currentPrice}\n            isActive={isActive}\n            isShowActive={true}\n            priceDirect={priceDirect}\n            wrapStyle={{\n              flexDirection: {\n                base: 'row-reverse',\n                lg: 'column'\n              }\n            }}\n          />\n        )}\n\n        <VStack\n          align=\"flex-start\"\n          gap={{ base: '12px', lg: '4px' }}\n          width={{\n            lg: '100%'\n          }}\n          justifyContent={{\n            lg: 'space-between'\n          }}\n        >\n          <HStack\n            width={{\n              base: '100%'\n            }}\n            justifyContent={{\n              base: 'space-between'\n            }}\n          >\n            <Skeleton isLoaded={!!labelInfo?.text}>\n              <Text fontSize=\"12px\" color=\"primary_gray\" {...labelInfo?.style}>\n                {labelInfo?.text}\n              </Text>\n            </Skeleton>\n            {children}\n          </HStack>\n          {isApp && (\n            <PositionPriceBar\n              minPrice={currentPosPoolsRelatedData?.minPrice}\n              maxPrice={currentPosPoolsRelatedData?.maxPrice}\n              currPrice={currentPosPoolsRelatedData?.currentPrice}\n              isActive={isActive}\n              priceDirect={priceDirect}\n              isShowActive={true}\n              wrapStyle={{\n                flexDirection: {\n                  base: 'row-reverse',\n                  lg: 'column'\n                }\n              }}\n            />\n          )}\n          <RangeValue\n            symbolEllipsesDecimals={symbolEllipsesDecimals}\n            displayTokenA={positionInfo?.displayTokenA}\n            displayTokenB={positionInfo?.displayTokenB}\n            setPriceDirect={setPriceDirect}\n            priceInfo={{\n              minPrice: currentPosPoolsRelatedData?.minPrice,\n              maxPrice: currentPosPoolsRelatedData?.maxPrice,\n              minPriceResever: currentPosPoolsRelatedData?.minPriceResever,\n              maxPriceResever: currentPosPoolsRelatedData?.maxPriceResever\n            }}\n          />\n          {/* {isApp && children} */}\n        </VStack>\n      </HStack>\n      {/* </HStack> */}\n    </VStack>\n  )\n}\n\nexport default PriceRange\n","import useFarmsActions from '@/hooks/farms/useFarmsAction'\nimport usePosHelper from '@/hooks/position/usePosHelper'\nimport usePositionList from '@/hooks/position/usePositionList'\nimport usePositionStore from '@/store/position'\nimport { PosReward } from '@/types'\nimport { CetusTooltip } from '@cetus/design'\nimport SingleTokenInfo from '@cetus/design/src/components/common/SingleTokenInfo'\nimport { useGetToken } from '@cetus/hooks/src/useToken'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { useAccountStore } from '@cetus/stores'\nimport { CoinType } from '@cetus/types'\nimport { Icon } from '@cetus/ui-kit'\nimport { cancelBubble } from '@cetus/utils'\nimport { d } from '@cetusprotocol/common-sdk'\nimport { Button, HStack, Skeleton, Text, VStack } from '@chakra-ui/react'\nimport React, { useMemo } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport LiquidityValueBlock from '../position/clmm/list/LiquidityValueBlock'\nimport PriceRange from '../position/clmm/PriceRange'\n\ntype ExpendItemProps = {\n  positionInfo: any\n  apiInfo: any\n}\n\nexport function ExpendItem({ positionInfo, apiInfo }: ExpendItemProps) {\n  const { farmsPosRewardsData, posPoolsRelatedData, posPoolsOriginalData } = usePositionStore()\n  const { getPositionBaseList, getPosRelatedData } = usePositionList()\n  const { currentAccount } = useAccountStore()\n  const { isApp } = useWindowWidth()\n\n  const posFarmsData = farmsPosRewardsData[positionInfo?.id]\n  const totalRewards = posFarmsData?.reduce((sum: number, item: any) => d(sum).add(item.display_amount_owed).toString(), 0)\n  // const currentPosPoolsRelatedData = posPoolsRelatedData[positionInfo?.posId]\n  // const isActive = currentPosPoolsRelatedData?.currentStatus == 'Active'\n  const { getPosIsActive } = usePosHelper()\n  const isActive = useMemo(() => {\n    return getPosIsActive(positionInfo as PosBaseInfo, posPoolsOriginalData?.[positionInfo?.clmmPool || '']?.current_sqrt_price)\n  }, [positionInfo, posPoolsOriginalData])\n  const { getClmmPosName } = usePosHelper()\n  const tokenName = useMemo(() => {\n    if (positionInfo?.tokenName) {\n      return positionInfo?.tokenName\n    } else {\n      const position_index = posPoolsOriginalData?.[positionInfo?.clmmPool]?.index\n      return getClmmPosName(positionInfo?.index, position_index)\n    }\n  }, [positionInfo?.tokenName, positionInfo?.index, positionInfo?.clmmPool, posPoolsOriginalData])\n\n  const navigate = useNavigate()\n  const getPositionList = () => {\n    setTimeout(async () => {\n      await getPositionBaseList(currentAccount?.address)\n    }, 2000)\n  }\n\n  const { toStakePos, toUnStakePos, toClaimPos, unstakeLoading, claimLoading } = useFarmsActions()\n\n  const toStake = async (events: any) => {\n    console.log('🚀 ~ toStake ~ apiInfo:', apiInfo)\n    toStakePos(positionInfo, apiInfo?.farmsPoolAddress, tokenName, getPositionList)\n  }\n\n  const toUnstack = async () => {\n    toUnStakePos(positionInfo?.id, positionInfo?.farmsPool, tokenName, getPositionList)\n  }\n  const toClaim = async () => {\n    toClaimPos(positionInfo?.id, positionInfo?.farmsPool, getPositionList)\n  }\n  // 计算仓位的farms奖励数量 来判断是否展示\n  // 如果总的farms奖励数量大于0 并且farms奖励列表>0 用farms奖励列表做循环展示数量\n  // 否则 用api接口返回来的释放速率大于0的奖励列表做循环 数量写死为0\n  // 要求：释放速率为0的奖励不展示 （api接口有过滤 但是posFarmsData用sdk请求回来的没有屏蔽释放速率为0的奖励）\n  const totalAmount = useMemo(() => {\n    if (posFarmsData?.length > 0) {\n      return posFarmsData.reduce((sum: any, rewardData: PosReward) => {\n        return d(sum).plus(rewardData?.display_amount_owed).toString()\n      }, '0')\n    }\n    return '0'\n  }, [posFarmsData, currentAccount?.address, claimLoading, unstakeLoading])\n\n  const isCanStake = useMemo(() => {\n    if (positionInfo && apiInfo) {\n      return positionInfo.posType == 'clmm' && apiInfo.haveFarming === true\n    }\n    return false\n  }, [positionInfo?.posType, apiInfo?.haveFarming])\n\n  return (\n    <HStack\n      bg=\"bg_primary\"\n      w=\"100%\"\n      gap=\"16px\"\n      borderRadius={{ base: '12px', lg: '20px' }}\n      border={{ base: 'none', lg: '1px solid' }}\n      borderColor=\"border !important\"\n      p={{ base: '8px', lg: '12px' }}\n      justifyContent=\"space-between\"\n      flexDirection={{ base: 'column', lg: 'row' }}\n    >\n      <PriceRange\n        positionInfo={positionInfo}\n        symbolEllipsesDecimals={10}\n        labelInfo={{ text: tokenName, style: { color: 'text_caption', mb: '-2px' } }}\n        children={\n          <HStack\n            justify=\"center\"\n            h={{ base: '14px', lg: '20px' }}\n            borderRadius=\"4px\"\n            p=\"0px\"\n            mb={{ base: '0', lg: '-2px' }}\n            cursor=\"pointer\"\n            onClick={e => {\n              cancelBubble(e)\n              navigate(`/position-detail/${positionInfo?.id}`)\n            }}\n            sx={{\n              _hover: {\n                p: {\n                  color: 'text_caption'\n                },\n                svg: {\n                  fill: 'text_caption'\n                }\n              }\n            }}\n          >\n            <Text fontSize=\"12px\" color=\"primary\">\n              Manage position\n            </Text>\n            <Icon\n              ml=\"-8px\"\n              svgW=\"12px\"\n              svgH=\"12px\"\n              xlinkHref=\"#icon-icon_arrow\"\n              variant=\"gray\"\n              transition=\"transform 0.5s\"\n              transform=\"rotate(-90deg)\"\n            />\n          </HStack>\n        }\n      />\n      <HStack w={{ base: '100%', lg: 'unset' }} gap={{ base: '8px', lg: '40px' }} flexDirection={{ base: 'column', lg: 'row' }}>\n        <VStack w={{ base: '100%', lg: 'unset' }} align=\"flex-start\" justify=\"space-between\" gap=\"4px\" flexDirection={{ base: 'row', lg: 'column' }}>\n          <Text color=\"primary_gray\" mb=\"-12px\" mt=\"12px\">\n            Liquidity\n          </Text>\n          <LiquidityValueBlock positionInfo={positionInfo} fontSize=\"14px\" />\n        </VStack>\n        <VStack\n          justify=\"space-between\"\n          w={{ base: '100%', lg: 'unset' }}\n          minW={{ base: '100%', lg: '180px' }}\n          align=\"flex-end\"\n          gap=\"4px\"\n          flexDirection={{ base: 'row', lg: 'column' }}\n        >\n          <HStack gap=\"4px\">\n            <Text color=\"primary_gray\">Earnings</Text>\n            {!isApp && (\n              <Button\n                isLoading={claimLoading}\n                isDisabled={unstakeLoading || claimLoading || d(totalRewards).eq(0)}\n                onClick={unstakeLoading || claimLoading || d(totalRewards).eq(0) ? () => {} : toClaim}\n                h=\"20px\"\n                w=\"48px\"\n                fontSize=\"12px\"\n                borderRadius=\"4px\"\n                variant=\"outline\"\n              >\n                Claim\n              </Button>\n            )}\n          </HStack>\n          <HStack>\n            <Skeleton isLoaded={!!totalAmount}>\n              <VStack align=\"flex-end\">\n                {posFarmsData && posFarmsData?.length > 0 && d(totalAmount).gt(0) ? (\n                  posFarmsData?.map((item: any) => {\n                    console.log(\n                      '🚀 ~ ExpendItem ~ posFarmsData && posFarmsData?.length > 0 && d(totalAmount).gt(0) :',\n                      posFarmsData,\n                      posFarmsData?.length > 0,\n                      totalAmount,\n                      d(totalAmount).gt(0)\n                    )\n                    return (\n                      <React.Fragment key={item?.rewarder_type}>\n                        {d(item?.display_amount_owed).gt(0) && (\n                          <RewardsCoin\n                            key={item?.coinType}\n                            coinType={item?.token?.coin_type}\n                            amount={item?.display_amount_owed || 0}\n                            tokenInfo={item?.token}\n                          />\n                        )}\n                      </React.Fragment>\n                    )\n                  })\n                ) : apiInfo?.farmsRewarderList?.length > 0 ? (\n                  apiInfo?.farmsRewarderList?.map((item: any) => {\n                    console.log('🚀 ~ apiInfo?.farmsRewarderList?.map ~ item:', item)\n                    return <RewardsCoin key={item?.coinType} coinType={item?.coinType} amount=\"0\" />\n                  })\n                ) : (\n                  <Text textColor=\"text_caption\" textAlign=\"right\">\n                    --\n                  </Text>\n                )}\n              </VStack>\n            </Skeleton>\n            {isApp && (\n              <Button\n                isLoading={claimLoading}\n                isDisabled={unstakeLoading || claimLoading || d(totalRewards).eq(0)}\n                onClick={unstakeLoading || claimLoading || d(totalRewards).eq(0) ? () => {} : toClaim}\n                h=\"20px\"\n                w=\"48px\"\n                fontSize=\"12px\"\n                borderRadius=\"4px\"\n                variant=\"outline\"\n              >\n                Claim\n              </Button>\n            )}\n          </HStack>\n        </VStack>\n        <VStack mt={{ base: '8px', lg: '0' }} w={{ base: '100%', lg: 'unset' }}>\n          {positionInfo?.posType == 'farms' && (\n            <Button\n              isDisabled={unstakeLoading}\n              isLoading={unstakeLoading}\n              variant=\"outline\"\n              w={{ base: '100%', lg: '100px' }}\n              h=\"32px\"\n              borderRadius=\"8px\"\n              fontSize=\"14px\"\n              onClick={toUnstack}\n            >\n              Unstake\n            </Button>\n          )}\n          {isCanStake && !isActive && (\n            <CetusTooltip\n              placement=\"top\"\n              tooltip={\n                <Text fontSize=\"12px\" lineHeight=\"20px\" w=\"200px\">\n                  Farming rewards are only available for active positions.\n                </Text>\n              }\n            >\n              <Button isDisabled={true} borderRadius=\"8px\" w={{ base: 'calc(100vw - 68px)', lg: '100px' }} h=\"32px\" fontSize=\"14px\">\n                Stake\n              </Button>\n            </CetusTooltip>\n          )}\n          {isCanStake && isActive && (\n            <Button\n              isDisabled={unstakeLoading}\n              isLoading={unstakeLoading}\n              w={{ base: '100%', lg: '100px' }}\n              h=\"32px\"\n              borderRadius=\"8px\"\n              fontSize=\"14px\"\n              onClick={toStake}\n            >\n              Stake\n            </Button>\n          )}\n        </VStack>\n      </HStack>\n    </HStack>\n  )\n}\n\nexport const RewardsCoin = ({\n  coinType,\n  amount,\n  tokenInfo,\n  boxStyle,\n  textAlign = 'right'\n}: {\n  coinType: string\n  amount: string\n  tokenInfo?: any\n  boxStyle?: any\n  textAlign?: 'right' | 'left' | 'center'\n}) => {\n  const { tokenInfo: token } = useGetToken<CoinType>(coinType as CoinType)\n\n  return (\n    <HStack {...boxStyle}>\n      <SingleTokenInfo\n        token={tokenInfo || token}\n        coinType={coinType}\n        imgBoxStyle={{ w: '20px', h: '20px' }}\n        warningIcon={{ iconW: '10px', iconH: '10px' }}\n        haveName={false}\n        haveSymbol={false}\n      />\n      <Text textColor=\"text_caption\" textAlign={textAlign}>\n        {amount} {tokenInfo?.symbol || token?.symbol}\n      </Text>\n    </HStack>\n  )\n}\n"],"names":["useFarmsActions","getBatchHarvestFarmsTxPayload","getStakeTxPayload","getUnstakeTxPayload","getHarvestFarmsTxPayload","useFarms","signAndExecuteTransaction","useTransaction","claimLoading","setClaimLoading","useState","unstakeLoading","setUnstakeLoading","fetchAccountBalance","useAccountBalance","posInfo","farmsPool","tokenName","refreshFun","posId","clmmPool","coinTypeA","coinTypeB","tx","msafeParams","res","error","list","params","position","PriceRange","positionInfo","symbolEllipsesDecimals","labelInfo","children","posPoolsRelatedData","posPoolsOriginalData","usePositionStore","currentPosPoolsRelatedData","getPosIsActive","usePosHelper","isActive","useMemo","_a","isApp","useWindowWidth","priceDirect","setPriceDirect","jsx","VStack","jsxs","HStack","PositionPriceBar","Skeleton","Text","RangeValue","ExpendItem","apiInfo","farmsPosRewardsData","getPositionBaseList","usePositionList","currentAccount","useAccountStore","posFarmsData","totalRewards","sum","item","d","getClmmPosName","position_index","navigate","useNavigate","getPositionList","toStakePos","toUnStakePos","toClaimPos","toStake","events","toUnstack","toClaim","totalAmount","rewardData","isCanStake","e","cancelBubble","Icon","LiquidityValueBlock","Button","React","RewardsCoin","_b","CetusTooltip","coinType","amount","tokenInfo","boxStyle","textAlign","token","useGetToken","SingleTokenInfo"],"mappings":"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"}