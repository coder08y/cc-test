{"version":3,"file":"usePosClaimFeeAndReward-R-HkZji1.js","sources":["../../src/hooks/burn/useBurn.ts","../../src/hooks/position/useCalculatePendingYield.ts","../../src/hooks/dlmm-position/useDlmmPosCollect.ts","../../src/utils/contract-helper.ts","../../src/hooks/position/usePosClaimFeeAndReward.ts"],"sourcesContent":["import { PoolApiInfo, PosBaseInfo } from '@/types'\nimport { useSdk } from '@cetus/sdk-factory'\nimport { Token } from '@cetus/types'\nimport { convertScientificToDecimal, d } from '@cetus/utils'\nimport { ClmmPoolUtil, TickMath } from '@cetusprotocol/common-sdk'\nimport { BN } from 'bn.js'\n\nexport default function useBurn() {\n  const burnSdk = useSdk('burn')\n\n  /**\n   * 获取Burn操作tx paylaod\n   * @param posBaseInfo\n   * @returns\n   */\n  const getBurnTxPayload = (posBaseInfo: PosBaseInfo) => {\n    const { posId, clmmPool, coinTypeA, coinTypeB } = posBaseInfo\n    const params = {\n      pos_id: posId,\n      pool_id: clmmPool,\n      coin_type_a: coinTypeA,\n      coin_type_b: coinTypeB\n    }\n\n    const tx = burnSdk!.Burn.createBurnPayload(params)\n\n    return tx\n  }\n\n  /**\n   * 获取Burn仓位Claim操作tx payload\n   * @param params\n   * @returns\n   */\n  const getBurnClaimTxPayload = (params: {\n    poolAddress: string\n    posId: string\n    coinTypeA: string\n    coinTypeB: string\n    account: string\n    rewarderCoinTypes: any\n  }) => {\n    const { poolAddress, posId, coinTypeA, coinTypeB, account, rewarderCoinTypes } = params\n\n    const txb = burnSdk!.Burn.createCollectFeesPayload([\n      {\n        pool_id: poolAddress,\n        pos_id: posId,\n        coin_type_a: coinTypeA,\n        coin_type_b: coinTypeB,\n        account\n      }\n    ])\n\n    const tx = burnSdk!.Burn.createCollectRewardsPayload(\n      [\n        {\n          pool_id: poolAddress,\n          pos_id: posId,\n          coin_type_a: coinTypeA,\n          coin_type_b: coinTypeB,\n          rewarder_coin_types: rewarderCoinTypes,\n          account\n        }\n      ],\n      txb\n    )\n\n    return tx\n  }\n\n  const getCoinAmountFromLiquidity = (params: {\n    liquidity: string\n    lowerTick: number\n    upperTick: number\n    currentSqrtPrice: string\n    roundUp: boolean\n    defaultCoinA: Token\n    defaultCoinB: Token\n  }) => {\n    console.log('🚀🚀🚀 ~ file: usePositionList.ts:71 ~ getCoinAmountFromLiquidity ~ params:', params)\n    const lowerSqrtPrice = TickMath.tickIndexToSqrtPriceX64(params.lowerTick)\n    const upperSqrtPrice = TickMath.tickIndexToSqrtPriceX64(params.upperTick)\n    const result = ClmmPoolUtil.getCoinAmountFromLiquidity(\n      new BN(params.liquidity),\n      new BN(params.currentSqrtPrice),\n      lowerSqrtPrice,\n      upperSqrtPrice,\n      params.roundUp\n    )\n\n    const coinAAmount = convertScientificToDecimal(result.coin_amount_a.toString(), params.defaultCoinA?.decimals)\n    const coinBAmount = convertScientificToDecimal(result.coin_amount_b.toString(), params.defaultCoinB?.decimals)\n\n    return {\n      coinAAmount,\n      coinBAmount\n    }\n  }\n  const getBurnPositionAmountByPool = async (poolInfo: PoolApiInfo, current_sqrt_price: string) => {\n    const { poolAddress } = poolInfo\n    // const contractPoolInfo = await clmmSDK.Pool.getPool(address)\n    const positionList = (await burnSdk!.Burn.getPoolBurnPositionList(poolAddress)) || []\n    console.log('🚀🚀🚀 ~ file: useBurn.ts:92 ~ getBurnPositionAmountByPool ~ positionList:', positionList)\n    let totalA = d(0)\n    let totalB = d(0)\n    for (let i = 0; i < positionList?.length; i++) {\n      const position = positionList[i]\n      // 计算tokenA B数量\n      const { tick_lower_index, tick_upper_index, liquidity } = position\n      // const { current_sqrt_price } = contractPoolInfo\n      const defaultCoinA = poolInfo?.tokenA\n      const defaultCoinB = poolInfo?.tokenB\n      const { coinAAmount, coinBAmount } = getCoinAmountFromLiquidity({\n        lowerTick: tick_lower_index,\n        upperTick: tick_upper_index,\n        currentSqrtPrice: current_sqrt_price as string,\n        roundUp: false,\n        liquidity,\n        defaultCoinA: defaultCoinA as Token,\n        defaultCoinB: defaultCoinB as Token\n      })\n      totalA = d(totalA).add(d(coinAAmount))\n      totalB = d(totalB).add(d(coinBAmount))\n    }\n    return {\n      totalA: totalA.toString(),\n      totalB: totalB.toString()\n    }\n  }\n\n  return {\n    getBurnTxPayload,\n    getBurnClaimTxPayload,\n    getBurnPositionAmountByPool\n  }\n}\n","import { PosBaseInfo, PosFee, PosReward } from '@/types'\nimport { DlmmPosBaseInfo } from '@/types/dlmm'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport { d } from '@cetus/utils'\nimport { fixCoinType } from '@cetusprotocol/common-sdk'\n// 根据仓位列表返回fee和mining奖励的token数组\nexport default function useCalculatePendingYield() {\n  const { getTokenAmountValue } = useTokenPrice()\n\n  const calculatePendingYield = (\n    list: (PosBaseInfo | DlmmPosBaseInfo)[],\n    posFeeData: Record<string, any>,\n    posRewardsData: Record<string, any>,\n    posFarmsData?: Record<string, any>,\n    dlmmPosFeeData?: Record<string, PosFee>,\n    dlmmPosRewardsData?: Record<string, PosReward[]>\n  ) => {\n    if (!list?.length) {\n      return {\n        total: '0',\n        rewardAndFeeList: []\n      }\n    }\n\n    let total = d(0)\n    let totalOrigin = d(0)\n    const rewardAndFeeList: any[] = []\n\n    const dlmmPosBaseList = list.filter((item: any) => item.posType === 'dlmm') as DlmmPosBaseInfo[]\n    const clmmPosBaseList = list.filter((item: any) => item.posType !== 'dlmm') as PosBaseInfo[]\n\n    if (clmmPosBaseList) {\n      clmmPosBaseList.map(position => {\n        const currentFeesData = posFeeData[position?.posId]\n        const currentPosRewardsData = posRewardsData[position?.posId] || []\n        const currentPosFarmsData = posFarmsData ? posFarmsData[position?.id] : []\n        const rewardsArr = currentPosRewardsData.concat(currentPosFarmsData)\n        console.log(currentPosFarmsData, posFarmsData, position, list, 'posFarmsData')\n        let positionTotal = d(0)\n        const tokens: any[] = []\n\n        // 处理 fee\n        if (currentFeesData) {\n          const feeTokenA = processToken(position?.displayTokenA, currentFeesData?.displayFeeOwedA)\n          const feeTokenB = processToken(position?.displayTokenB, currentFeesData?.displayFeeOwedB)\n\n          if (feeTokenA) {\n            tokens.push(feeTokenA)\n            positionTotal = addAmountValue(positionTotal, feeTokenA.amountUSD)\n          }\n          if (feeTokenB) {\n            tokens.push(feeTokenB)\n            positionTotal = addAmountValue(positionTotal, feeTokenB.amountUSD)\n          }\n        }\n\n        // 处理 reward\n        rewardsArr.forEach((reward: any) => {\n          if (Number(reward?.display_amount_owed) > 0) {\n            const rewardToken = processToken(reward?.token, reward?.display_amount_owed, reward?.token?.coin_type)\n\n            if (rewardToken) {\n              tokens.push(rewardToken)\n              positionTotal = addAmountValue(positionTotal, rewardToken.amountUSD)\n            }\n          }\n        })\n\n        rewardAndFeeList.push(...tokens)\n        totalOrigin = totalOrigin.plus(positionTotal)\n\n        const fixedTotalUsd = d(positionTotal.toFixed(2)) // 固定两位小数\n        total = total.plus(fixedTotalUsd)\n        return {\n          ...position,\n          totalUsd: positionTotal.toString()\n        }\n      })\n    }\n\n    if (dlmmPosBaseList) {\n      dlmmPosBaseList.forEach(position => {\n        let positionTotal = d(0)\n        const tokens: any[] = []\n\n        const currentFeesData = dlmmPosFeeData?.[position.id]\n        const currentPosRewardsData = dlmmPosRewardsData?.[position.id] || []\n        const rewardsArr = currentPosRewardsData\n        // Process fees\n        if (currentFeesData) {\n          const feeTokenA = processToken(position?.displayTokenA, currentFeesData?.displayFeeOwedA)\n          const feeTokenB = processToken(position?.displayTokenB, currentFeesData?.displayFeeOwedB)\n\n          if (feeTokenA) {\n            tokens.push(feeTokenA)\n            positionTotal = addAmountValue(positionTotal, feeTokenA.amountUSD)\n          }\n          if (feeTokenB) {\n            tokens.push(feeTokenB)\n            positionTotal = addAmountValue(positionTotal, feeTokenB.amountUSD)\n          }\n        }\n\n        // 处理 reward\n        rewardsArr.forEach((reward: any) => {\n          if (Number(reward?.display_amount_owed) > 0) {\n            const rewardToken = processToken(reward?.token, reward?.display_amount_owed, reward?.token?.coin_type)\n\n            if (rewardToken) {\n              tokens.push(rewardToken)\n              positionTotal = addAmountValue(positionTotal, rewardToken.amountUSD)\n            }\n          }\n        })\n\n        rewardAndFeeList.push(...tokens)\n        totalOrigin = totalOrigin.plus(positionTotal)\n\n        const fixedTotalUsd = d(positionTotal.toFixed(2)) // 固定两位小数\n        total = total.plus(fixedTotalUsd)\n        return {\n          ...position,\n          totalUsd: positionTotal.toString()\n        }\n      })\n    }\n\n    const aggregatedList = aggregateRewardsAndFees(rewardAndFeeList)\n    console.log('🚀 ~ calculatePendingYield ~  total,:', aggregatedList, totalOrigin.toString(), total.toString())\n    // aggregatedList?.length > 0 && totalOrigin.eq(0)说明没有价格; total.eq(0)说明 '<0.01'此时用原值\n    return {\n      total: aggregatedList?.length > 0 && totalOrigin.eq(0) ? '--' : total.eq(0) ? totalOrigin.toString() : total.toFixed(2),\n      rewardAndFeeList: aggregatedList\n    }\n  }\n\n  // 单个 token 的转换处理\n  const processToken = (token: any, amount: any, coinAddress?: string) => {\n    if (!token || !amount) return null\n\n    const coinType = coinAddress || token.coin_type\n    if (!coinType) return null\n\n    const amountUSD = getTokenAmountValue(coinType, amount)\n\n    return {\n      coin_address: fixCoinType(coinType, false),\n      amount,\n      amountUSD: d(amount).gt(0) && d(amountUSD).lte(0) ? '--' : amountUSD,\n      token\n    }\n  }\n\n  // 累加 helper\n  const addAmountValue = (acc: any, amount?: string) => {\n    if (!amount || amount === '--') return acc\n    return acc.plus(amount)\n  }\n\n  // 聚合重复 token 并排序\n  const aggregateRewardsAndFees = (list: any[]) => {\n    const claimObj: Record<string, any> = {}\n\n    list.forEach(item => {\n      const { coin_address, amount, amountUSD } = item\n      // console.log('🚀 ~ aggregateRewardsAndFees ~ claimObj:', amount, amountUSD, item, claimObj)\n\n      if (!claimObj[coin_address]) {\n        claimObj[coin_address] = { ...item, amount: '0', amountUSD: '0' }\n      }\n\n      if (amountUSD == '--') {\n        claimObj[coin_address].amountUSD = '--'\n      } else {\n        claimObj[coin_address].amountUSD =\n          claimObj[coin_address].amountUSD == '--'\n            ? '--'\n            : d(claimObj[coin_address]?.amountUSD)\n                .plus(amountUSD || 0)\n                .toString()\n      }\n\n      claimObj[coin_address].amount = d(claimObj[coin_address]?.amount)\n        .plus(amount || 0)\n        .toString()\n    })\n\n    return Object.values(claimObj)\n      .filter((item: any) => Number(item.amount) > 0)\n      .sort((a: any, b: any) =>\n        d(b.amountUSD == '--' ? 0 : b.amountUSD)\n          .minus(a.amountUSD == '--' ? 0 : a.amountUSD)\n          .toNumber()\n      )\n  }\n\n  return {\n    calculatePendingYield\n  }\n}\n","import { CollectDlmmRewardAndFeeParams, CollectDlmmRewardPayloadParams } from '@/types/dlmm'\nimport { useSdk } from '@cetus/sdk-factory'\nimport { Transaction } from '@mysten/sui/transactions'\n\nexport default function useDlmmPosCollect() {\n  const dlmmSdk = useSdk('dlmm')\n\n  const collectRewardPayload = (params: CollectDlmmRewardPayloadParams[], tx?: Transaction) => {\n    const collectDlmmRewardParams = params.map(param => {\n      const { dlmmPool, positionId, rewardCoins, coinTypeA, coinTypeB } = param\n\n      return {\n        pool_id: dlmmPool,\n        position_id: positionId,\n        reward_coins: rewardCoins,\n        coin_type_a: coinTypeA,\n        coin_type_b: coinTypeB\n      }\n    })\n    const payload = dlmmSdk?.Position.collectRewardPayload(collectDlmmRewardParams, tx)\n    return payload\n  }\n\n  const collectRewardAndFeePayload = (params: CollectDlmmRewardAndFeeParams[], tx?: Transaction) => {\n    const collectDlmmRewardAndFee = params.map(param => {\n      const { dlmmPool, positionId, rewardCoins, coinTypeA, coinTypeB } = param\n\n      return {\n        pool_id: dlmmPool,\n        position_id: positionId,\n        reward_coins: rewardCoins,\n        coin_type_a: coinTypeA,\n        coin_type_b: coinTypeB\n      }\n    })\n    const payload = dlmmSdk!.Position.collectRewardAndFeePayload(collectDlmmRewardAndFee, tx)\n    return payload\n  }\n\n  return { collectRewardPayload, collectRewardAndFeePayload }\n}\n","import { asIntN } from '@cetusprotocol/common-sdk'\nimport BN from 'bn.js'\n\nexport const deleteOx = (address: string) => {\n  if (address.startsWith('0x')) {\n    return address.slice(2)\n  }\n  return address\n}\n\nexport function getTickDataFromUrlData(ticks: any) {\n  const tickdatas: any[] = []\n  for (const tick of ticks) {\n    const item = {\n      objectId: tick?.objectId || tick?.object_id,\n      index: tick?.index,\n      sqrtPrice: tick?.sqrtPrice || tick?.sqrt_price,\n      liquidityNet: tick?.liquidityNet || tick?.liquidity_net,\n      liquidityGross: tick?.liquidityGross || tick?.liquidity_gross,\n      feeGrowthOutsideA: tick?.feeGrowthOutsideA || tick?.fee_growth_outside_a,\n      feeGrowthOutsideB: tick?.feeGrowthOutsideB || tick?.fee_growth_outside_b,\n      rewardersGrowthOutside: tick?.rewardersGrowthOutside || tick?.rewarders_growth_outside\n    }\n    const td: any = {\n      objectId: item.objectId,\n      index: Number(asIntN(BigInt(item.index)).toString()),\n      sqrtPrice: item.sqrtPrice,\n      liquidityNet: new BN(BigInt.asIntN(128, BigInt(BigInt(item.liquidityNet.toString()))).toString()),\n      liquidityGross: item.liquidityGross,\n      feeGrowthOutsideA: item.feeGrowthOutsideA,\n      feeGrowthOutsideB: item.feeGrowthOutsideB,\n      rewardersGrowthOutside: [new BN(item.rewardersGrowthOutside[0]), new BN(item.rewardersGrowthOutside[1]), new BN(item.rewardersGrowthOutside[2])]\n    }\n    tickdatas.push(td)\n  }\n  return tickdatas\n}\n","import useBurn from '@/hooks/burn/useBurn'\nimport useDlmmPosCollect from '@/hooks/dlmm-position/useDlmmPosCollect'\nimport { MsafeTransactionSubType, PosBaseInfo, PosReward } from '@/types'\nimport { DlmmPosBaseInfo } from '@/types/dlmm'\nimport { deleteOx } from '@/utils/contract-helper'\nimport { spitClaimDlmmPosList } from '@/utils/dlmm'\nimport { useSdk } from '@cetus/sdk-factory'\nimport { fixCoinType } from '@cetusprotocol/common-sdk'\nimport { CollectRewardAndFeeOption } from '@cetusprotocol/dlmm-sdk'\nimport { HarvestFeeAndClmmRewarderParams } from '@cetusprotocol/farms-sdk'\nimport { CollectRewarderParams } from '@cetusprotocol/sui-clmm-sdk'\nimport useFarms from '../farms/useFarms'\n\nexport default function usePosClaimFeeAndReward() {\n  const clmmSdk = useSdk('clmm')\n  const dlmmSdk = useSdk('dlmm')\n  const farmsSdk = useSdk('farms')\n  const burnSdk = useSdk('burn')\n  const { getBurnClaimTxPayload } = useBurn()\n  const { getHarvestFarmsTxPayload } = useFarms()\n  const { collectRewardAndFeePayload } = useDlmmPosCollect()\n\n  /**\n   * 收割仓位的fee和reward，支持clmm, farms, burn\n   * @param params\n   * @returns\n   */\n  interface RewardTxPayloadProps {\n    posType: 'clmm' | 'farms' | 'burn'\n    id: string\n    clmmPool: string\n    coinTypeA: string\n    coinTypeB: string\n    rewarderCoinTypes?: any\n    account?: string\n    dlmmPool?: string\n  }\n  const getPosClaimFeeAndRewardTxPayload = async (params: RewardTxPayloadProps) => {\n    const { posType, id, clmmPool, coinTypeA, coinTypeB, rewarderCoinTypes, account, dlmmPool } = params\n    let tx, msafeParams\n    if (posType === 'clmm') {\n      const parameter = {\n        pool_id: clmmPool,\n        pos_id: id,\n        rewarder_coin_types: rewarderCoinTypes,\n        coin_type_a: coinTypeA,\n        coin_type_b: coinTypeB,\n        collect_fee: true\n      }\n\n      tx = await clmmSdk!.Rewarder.collectRewarderPayload(parameter)\n\n      msafeParams = {\n        action: MsafeTransactionSubType.ClaimFeeAndMining,\n        txbParams: parameter\n      }\n    } else if (posType === 'farms') {\n      const parameter = {\n        coin_type_a: coinTypeA,\n        coin_type_b: coinTypeB,\n        clmm_pool_id: clmmPool,\n        position_nft_id: id,\n        clmm_rewarder_types: rewarderCoinTypes,\n        collect_fee: true\n      }\n\n      tx = await farmsSdk!.Farms.claimFeeAndClmmReward(parameter)\n\n      msafeParams = {\n        action: 'FarmingClaimFeeAndReward',\n        txbParams: parameter\n      }\n    } else if (posType === 'burn') {\n      const parameter = {\n        poolAddress: clmmPool,\n        posId: id,\n        coinTypeA,\n        coinTypeB,\n        account: account as string,\n        rewarderCoinTypes\n      }\n\n      tx = getBurnClaimTxPayload(parameter)\n    } else if (posType === 'dlmm') {\n      const parameter = {\n        pool_id: dlmmPool,\n        pos_id: id,\n        rewarder_coin_types: rewarderCoinTypes,\n        coin_type_a: coinTypeA,\n        coin_type_b: coinTypeB\n      }\n      const params: any = {\n        dlmmPool,\n        positionId: id,\n        rewardCoins: rewarderCoinTypes,\n        coinTypeA,\n        coinTypeB\n      }\n      tx = collectRewardAndFeePayload([params])\n\n      msafeParams = {\n        action: 'DlmmClaimFeeAndReward',\n        txbParams: parameter\n      }\n    }\n\n    return {\n      tx,\n      msafeParams\n    }\n  }\n\n  /**\n   * 批量收割Fee和Rewards\n   * @param posBaseList\n   * @param posRewardsData\n   * @param account\n   * @returns\n   */\n  const getBatchHarvestFeeAndRewardsTxPayload = async (\n    posBaseList: (PosBaseInfo | DlmmPosBaseInfo)[],\n    posRewardsData: Record<string, PosReward[]>,\n    account: string\n  ) => {\n    console.log('🚀 ~ getBatchHarvestFeeAndRewardsTxPayload ~ posBaseList:', posBaseList, posRewardsData, account)\n    const clmmHarvestParams: CollectRewarderParams[] = []\n    const framsHavestParams: HarvestFeeAndClmmRewarderParams[] = []\n    const burnHavestParams: CollectRewarderParams[] = []\n\n    const clmmPosIdList = posBaseList.filter(item => item.posType !== 'dlmm').map((item: any) => item) as PosBaseInfo[]\n    const dlmmPosIdList = posBaseList.filter(item => item.posType === 'dlmm').map((item: any) => item) as DlmmPosBaseInfo[]\n\n    const batchDlmmPosList = spitClaimDlmmPosList(dlmmPosIdList, 1800)\n    const batchDlmmPosOptionList: CollectRewardAndFeeOption[][] = []\n    batchDlmmPosList.forEach(batch => {\n      const options: CollectRewardAndFeeOption[] = []\n\n      batch.forEach(position => {\n        const rewarderCoinTypes = posRewardsData[position.id]?.map((item: PosReward) => fixCoinType(item.coin_address, true)) || []\n        options.push({\n          pool_id: position.dlmmPool,\n          position_id: position.id,\n          reward_coins: rewarderCoinTypes,\n          coin_type_a: position.coinTypeA,\n          coin_type_b: position.coinTypeB\n        })\n      })\n      batchDlmmPosOptionList.push(options)\n    })\n\n    clmmPosIdList.forEach(position => {\n      const rewarderCoinTypes = posRewardsData[position.posId]?.map((item: PosReward) => fixCoinType(item.coin_address, true)) || []\n\n      if (position.posType == 'clmm') {\n        clmmHarvestParams.push({\n          pool_id: position.clmmPool,\n          pos_id: position.id,\n          collect_fee: true,\n          rewarder_coin_types: rewarderCoinTypes,\n          coin_type_a: deleteOx(position.coinTypeA),\n          coin_type_b: deleteOx(position.coinTypeB)\n        })\n      } else if (position.posType == 'farms') {\n        console.log('🚀 ~ getBatchHarvestFeeAndRewardsTxPayload ~ clmm rewarderCoinTypes:', {\n          position,\n          posRewardsData\n        })\n        framsHavestParams.push({\n          pool_id: position.farmsPool || '',\n          position_nft_id: position.id,\n          clmm_pool_id: position.clmmPool,\n          collect_fee: true,\n          collect_farms_rewarder: true,\n          clmm_rewarder_types: [],\n          coin_type_a: position.coinTypeA,\n          coin_type_b: position.coinTypeB\n        })\n      } else {\n        burnHavestParams.push({\n          pos_id: position?.id || '',\n          pool_id: position.clmmPool,\n          coin_type_a: position.coinTypeA,\n          coin_type_b: position.coinTypeB,\n          rewarder_coin_types: rewarderCoinTypes,\n          account\n        })\n      }\n    })\n\n    // 收割 farms reward 和 clmm 的 fee 和 reward\n    let tx = await farmsSdk!.Farms.batchHarvestAndClmmFeePayload(framsHavestParams, clmmHarvestParams)\n\n    const burnRewardList = []\n    for (let i = 0; i < burnHavestParams.length; i++) {\n      const item = burnHavestParams[i]\n      if (item?.rewarder_coin_types.length > 0) {\n        burnRewardList.push(item)\n      }\n    }\n    tx = burnSdk!.Burn.createCollectFeesPayload(burnHavestParams, tx)\n\n    tx = burnSdk!.Burn.createCollectRewardsPayload(burnRewardList, tx)\n\n    console.log('🚀 ~ getBatchHarvestFeeAndRewardsTxPayload ~ batchDlmmPosOptionList:', batchDlmmPosOptionList)\n\n    const txs = [tx]\n\n    batchDlmmPosOptionList.forEach((item, index) => {\n      if (index === 0) {\n        tx = dlmmSdk!.Position.collectRewardAndFeePayload(item, tx)\n      } else {\n        const tx = dlmmSdk!.Position.collectRewardAndFeePayload(item)\n        txs.push(tx)\n      }\n    })\n\n    return { txs }\n  }\n\n  /**\n   * 收割仓位的fee和mining和farming奖励，支持clmm, farms, burn\n   * @param params\n   * @returns\n   */\n  const getPosClaimFeeAndRewardAndFarmsTxPayload = async (\n    params: RewardTxPayloadProps & {\n      farmsPool: string\n    }\n  ) => {\n    console.log('🚀 ~ usePosClaimFeeAndReward ~ params:', params)\n\n    const { id, farmsPool } = params\n    let txf\n    const { tx, msafeParams } = await getPosClaimFeeAndRewardTxPayload(params)\n    txf = tx\n\n    if (farmsPool) {\n      const { tx, msafeParams } = await getHarvestFarmsTxPayload(farmsPool, id, txf)\n      return { tx, msafeParams }\n    }\n\n    console.log(`🚀 ~ getPosClaimFeeAndRewardAndFarmsTxPayload ~ { tx, msafeParams }:`, { tx, msafeParams })\n    return { tx, msafeParams }\n  }\n  return {\n    getPosClaimFeeAndRewardAndFarmsTxPayload,\n    getPosClaimFeeAndRewardTxPayload,\n    getBatchHarvestFeeAndRewardsTxPayload\n  }\n}\n"],"names":["useBurn","burnSdk","useSdk","getBurnTxPayload","posBaseInfo","posId","clmmPool","coinTypeA","coinTypeB","params","getBurnClaimTxPayload","poolAddress","account","rewarderCoinTypes","txb","getCoinAmountFromLiquidity","lowerSqrtPrice","TickMath","upperSqrtPrice","result","ClmmPoolUtil","BN","coinAAmount","convertScientificToDecimal","_a","coinBAmount","_b","poolInfo","current_sqrt_price","positionList","totalA","d","totalB","i","position","tick_lower_index","tick_upper_index","liquidity","defaultCoinA","defaultCoinB","useCalculatePendingYield","getTokenAmountValue","useTokenPrice","calculatePendingYield","list","posFeeData","posRewardsData","posFarmsData","dlmmPosFeeData","dlmmPosRewardsData","total","totalOrigin","rewardAndFeeList","dlmmPosBaseList","item","clmmPosBaseList","currentFeesData","currentPosRewardsData","currentPosFarmsData","rewardsArr","positionTotal","tokens","feeTokenA","processToken","feeTokenB","addAmountValue","reward","rewardToken","fixedTotalUsd","aggregatedList","aggregateRewardsAndFees","token","amount","coinAddress","coinType","amountUSD","fixCoinType","acc","claimObj","coin_address","a","b","useDlmmPosCollect","dlmmSdk","tx","collectDlmmRewardParams","param","dlmmPool","positionId","rewardCoins","collectDlmmRewardAndFee","deleteOx","address","getTickDataFromUrlData","ticks","tickdatas","tick","td","asIntN","usePosClaimFeeAndReward","clmmSdk","farmsSdk","getHarvestFarmsTxPayload","useFarms","collectRewardAndFeePayload","getPosClaimFeeAndRewardTxPayload","posType","id","msafeParams","parameter","MsafeTransactionSubType","farmsPool","txf","posBaseList","clmmHarvestParams","framsHavestParams","burnHavestParams","clmmPosIdList","dlmmPosIdList","batchDlmmPosList","spitClaimDlmmPosList","batchDlmmPosOptionList","batch","options","burnRewardList","txs","index"],"mappings":"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"}