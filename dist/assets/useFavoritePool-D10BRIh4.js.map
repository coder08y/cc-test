{"version":3,"file":"useFavoritePool-D10BRIh4.js","sources":["../../src/store/pool/index.ts","../../src/hooks/pool/useFavoritePool.ts"],"sourcesContent":["import { Token } from '@cetus/types'\nimport { IS_ALL_POOLS, IS_INCENTIVIZED_ONLY, IS_WATCH_LIST, POOL_FAVORITE_LIST, POOL_SELECT_COIN_LIST, VariousTokensTable } from '@cetus/utils'\nimport { create, StateCreator } from 'zustand'\n\ninterface poolsState {\n  poolListLength: string\n  setPoolListLength: (data: string) => void\n  poolRefreshStatus: string\n  setPoolRefreshStatus: (data: string) => void\n  isWatchList: boolean | undefined\n  setIsWatchList: (isWatchList: boolean) => void\n  isAllPools: boolean\n  setIsAllPools: (isAllPools: boolean) => void\n  isIncentivizedOnly: boolean\n  setIsIncentivizedOnly: (isIncentivizedOnly: boolean) => void\n  poolFavoriteIds: string[]\n  setPoolFavoriteId: (id: string) => void\n  setPoolFavoriteIds: (ids: string[]) => void\n  poolFavoriteIdsChange: boolean\n  setPoolFavoriteIdsChange: (data: boolean) => void\n  showClmmPositionList: boolean\n  setShowClmmPositionList: (data: boolean) => void\n  showDlmmPositionList: boolean\n  setShowDlmmPositionList: (data: boolean) => void\n  selectCoinList: Token[]\n  setSelectCoinList: (list: Token[]) => void\n  // ÊòØÂê¶Â±ïÂºÄÊâÄÊúâÊåÅ‰ªì\n  isExpandAllPosition: boolean\n  setIsExpandAllPosition: (status: boolean) => void\n  isExpendPositionMap: Record<string, boolean>\n  setIsExpendPosition: (poolAddresses: string[], status: boolean) => void\n  clearIsExpendPositionMap: () => void\n  resetPoolFilterParams: () => void\n}\n\nconst store: StateCreator<poolsState> = (set, get) => ({\n  poolListLength: '',\n  setPoolListLength: (data: string) => {\n    set(() => ({\n      poolListLength: data\n    }))\n  },\n  poolRefreshStatus: 'pending', // 'pending'|'success'|'error'|'timeout' ËØ∑Ê±ÇÊ±†Â≠êÂàóË°®Êó∂ÁöÑÁä∂ÊÄÅ\n  setPoolRefreshStatus: (data: string) => {\n    set(() => ({\n      poolRefreshStatus: data\n    }))\n  },\n  isWatchList: undefined,\n  setIsWatchList: (isWatchList: boolean) => {\n    set(() => ({\n      isWatchList\n    }))\n    VariousTokensTable.setItem(IS_WATCH_LIST, isWatchList)\n  },\n  isAllPools: false,\n  setIsAllPools: (isAllPools: boolean) => {\n    set(() => ({\n      isAllPools\n    }))\n    VariousTokensTable.setItem(IS_ALL_POOLS, isAllPools)\n  },\n\n  isIncentivizedOnly: false,\n  setIsIncentivizedOnly: (isIncentivizedOnly: boolean) => {\n    set(() => ({\n      isIncentivizedOnly\n    }))\n    VariousTokensTable.setItem(IS_INCENTIVIZED_ONLY, isIncentivizedOnly)\n  },\n\n  poolFavoriteIds: [],\n  setPoolFavoriteId: (id: string) => {\n    const newPoolFavoriteIds = [...get().poolFavoriteIds, id]\n    set(() => ({\n      poolFavoriteIds: newPoolFavoriteIds\n    }))\n    VariousTokensTable.setItem(POOL_FAVORITE_LIST, newPoolFavoriteIds)\n  },\n  setPoolFavoriteIds: (ids: string[]) => {\n    set(() => ({\n      poolFavoriteIds: ids\n    }))\n    VariousTokensTable.setItem(POOL_FAVORITE_LIST, ids)\n  },\n  poolFavoriteIdsChange: false,\n  setPoolFavoriteIdsChange: (data: boolean) => {\n    set(() => ({\n      poolFavoriteIdsChange: data\n    }))\n  },\n\n  showClmmPositionList: true,\n  setShowClmmPositionList: (value: boolean) => {\n    set(() => ({\n      showClmmPositionList: value\n    }))\n  },\n  showDlmmPositionList: true,\n  setShowDlmmPositionList: (value: boolean) => {\n    set(() => ({\n      showDlmmPositionList: value\n    }))\n  },\n  selectCoinList: [],\n  setSelectCoinList: (selectCoinList: Token[]) => {\n    set(() => ({\n      selectCoinList\n    }))\n    VariousTokensTable.setItem(POOL_SELECT_COIN_LIST, selectCoinList)\n  },\n  // toDo: Âè™ÊòØstoreÈáåÂä†‰∫ÜÔºåÁ≠âÂêéÈù¢ÂØπÊé•apiÊï∞ÊçÆÂêéÂÜçÊ†πÊçÆfilterÊÉÖÂÜµËÆæÁΩÆ\n\n  isExpandAllPosition: false,\n  setIsExpandAllPosition: (status: boolean) => {\n    set(() => ({\n      isExpandAllPosition: status\n    }))\n  },\n  isExpendPositionMap: {},\n  setIsExpendPosition: (poolAddresses: string[], status: boolean) => {\n    set(() => {\n      const currentMap = get().isExpendPositionMap\n      const newMap = { ...currentMap }\n      poolAddresses.forEach(address => {\n        newMap[address] = status\n      })\n      return {\n        isExpendPositionMap: newMap\n      }\n    })\n  },\n  clearIsExpendPositionMap: () => {\n    set(() => ({\n      isExpendPositionMap: {}\n    }))\n  },\n  resetPoolFilterParams: () => {\n    set(() => ({\n      isWatchList: undefined,\n      isAllPools: false,\n      isIncentivizedOnly: false\n    }))\n  }\n})\n\nconst usePoolsStore = create(store)\nexport default usePoolsStore\n\n// ‰ªé localForage Âä†ËΩΩÊï∞ÊçÆ\nVariousTokensTable.getItem<any>(POOL_FAVORITE_LIST).then(savedPoolFavoriteList => {\n  console.log('üöÄ ~ file: store/pool/index.ts.ts ~ savedPoolFavoriteList:', savedPoolFavoriteList)\n  if (savedPoolFavoriteList?.length > 0) {\n    usePoolsStore.getState().setPoolFavoriteIds(savedPoolFavoriteList)\n  }\n})\n\n// ‰ªé localForage Âä†ËΩΩÊï∞ÊçÆ\nVariousTokensTable.getItem<any>(IS_WATCH_LIST).then(isWatchList => {\n  console.log('üöÄ ~ VariousTokensTable isWatchList:', isWatchList)\n  if (typeof isWatchList === 'boolean') {\n    usePoolsStore.getState().setIsWatchList(isWatchList)\n  } else {\n    usePoolsStore.getState().setIsWatchList(false)\n  }\n})\n\n// ‰ªé localForage Âä†ËΩΩÊï∞ÊçÆ\nVariousTokensTable.getItem<any>(IS_ALL_POOLS).then(isAllPools => {\n  console.log('üöÄ ~ VariousTokensTable isAllPools:', isAllPools)\n  if (typeof isAllPools === 'boolean') {\n    usePoolsStore.getState().setIsAllPools(isAllPools)\n  }\n})\n\n// ‰ªé localForage Âä†ËΩΩÊï∞ÊçÆ\nVariousTokensTable.getItem<any>(IS_INCENTIVIZED_ONLY).then(isIncentivizedOnly => {\n  console.log('üöÄ ~ VariousTokensTable isIncentivizedOnly:', isIncentivizedOnly)\n  if (typeof isIncentivizedOnly === 'boolean') {\n    usePoolsStore.getState().setIsIncentivizedOnly(isIncentivizedOnly)\n  }\n})\n\n// ‰ªé localForage Âä†ËΩΩÊï∞ÊçÆ\nVariousTokensTable.getItem<any>(POOL_SELECT_COIN_LIST).then(poolSelectCoinList => {\n  console.log('üöÄ ~ VariousTokensTable poolSelectCoinList:', poolSelectCoinList)\n  if (poolSelectCoinList && poolSelectCoinList.length > 0) {\n    usePoolsStore.getState().setSelectCoinList(poolSelectCoinList)\n  }\n})\n","import { StatsPoolsPath } from '@/apis/path'\nimport usePoolsStore from '@/store/pool'\nimport { useGlobalToast } from '@cetus/design'\nimport { useFetch } from '@cetus/hooks'\nimport { CommonTypeInfo, ToastType } from '@cetus/types'\nimport { GetPoolListParams } from './type'\nimport useGetPoolList from './useGetPoolList'\nimport useWrapPoolData from './useWrapPoolData'\n\nexport interface GetFavoritePoolListProps extends GetPoolListParams {\n  pools?: string[]\n  needLocalData?: boolean\n}\nexport default function useFavoritePool() {\n  const { fetchByApi } = useFetch()\n  const { getLocalJsonPoolList, wrapGetPoolParams } = useGetPoolList()\n  const { wrapPoolDataV2 } = useWrapPoolData()\n  const { poolFavoriteIds, setPoolFavoriteId, setPoolFavoriteIds, setPoolFavoriteIdsChange } = usePoolsStore()\n  const { successTsToast, failedTsToast } = useGlobalToast()\n  const addFavorites = (id: string) => {\n    const info: ToastType = {\n      linkLabel: '',\n      getShowInfo: () => {\n        const info: CommonTypeInfo = {\n          toastTitleText: poolFavoriteIds.length >= 100 ? 'Watchlist exceeds the maximum limit' : 'Added to Watchlist'\n        }\n        return info\n      }\n    }\n    if (poolFavoriteIds.length >= 100) {\n      failedTsToast(info)\n    } else {\n      setPoolFavoriteId(id)\n      setPoolFavoriteIdsChange(true)\n      successTsToast(info)\n    }\n  }\n\n  const removeFavorites = (id: string) => {\n    const newList = poolFavoriteIds?.filter((item: string) => item !== id)\n    setPoolFavoriteIds(newList)\n    setPoolFavoriteIdsChange(true)\n    const info: ToastType = {\n      linkLabel: '',\n      getShowInfo: () => {\n        const info: CommonTypeInfo = {\n          toastTitleText: 'Removed from Watchlist'\n        }\n        return info\n      }\n    }\n    successTsToast(info)\n  }\n  const getFavoritePoolList = async (params: GetFavoritePoolListProps) => {\n    // toDo: ËØ∑Ê±ÇÂêéÁ´ØÊñ∞Êé•Âè£Ôºå‰º†ÂÖ•Êî∂ËóèÂàóË°®ÔºåËøîÂõûÊ±†Â≠êÂàóË°®, ÊúÄÁªàÊï∞ÊçÆË¶ÅÂåÖË£ÖÁöÑÂíåpoolList‰∏ÄÊ†∑\n    const { needLocalData = true } = params\n    const pools = params?.pools || []\n    const warapApiParams = wrapGetPoolParams(params)\n    if (pools.length > 0) {\n      try {\n        const res = await fetchByApi(StatsPoolsPath, 'POST', warapApiParams)\n        if (res?.data) {\n          console.log('üöÄ ~ getFavoritePoolList ~ res?.data:', res?.data)\n          const poolList = res?.data?.list?.map((item: any) => {\n            return wrapPoolDataV2(item)\n          })\n          return {\n            list: poolList,\n            total: res?.data?.total\n          }\n        }\n      } catch (error) {\n        console.log('üöÄ ~ getFavoritePoolList ~ error:', error)\n        if (needLocalData) {\n          return await getLocalJsonPoolList(params)\n        }\n      }\n    }\n    return {\n      list: [],\n      total: 0\n    }\n  }\n  return {\n    addFavorites,\n    removeFavorites,\n    getFavoritePoolList\n  }\n}\n"],"names":["store","set","get","data","isWatchList","VariousTokensTable","IS_WATCH_LIST","isAllPools","IS_ALL_POOLS","isIncentivizedOnly","IS_INCENTIVIZED_ONLY","id","newPoolFavoriteIds","POOL_FAVORITE_LIST","ids","value","selectCoinList","POOL_SELECT_COIN_LIST","status","poolAddresses","newMap","address","usePoolsStore","create","savedPoolFavoriteList","poolSelectCoinList","useFavoritePool","fetchByApi","useFetch","getLocalJsonPoolList","wrapGetPoolParams","useGetPoolList","wrapPoolDataV2","useWrapPoolData","poolFavoriteIds","setPoolFavoriteId","setPoolFavoriteIds","setPoolFavoriteIdsChange","successTsToast","failedTsToast","useGlobalToast","info","newList","item","params","needLocalData","pools","warapApiParams","res","StatsPoolsPath","_b","_a","_c","error"],"mappings":"0QAmCA,MAAMA,EAAkC,CAACC,EAAKC,KAAS,CACrD,eAAgB,GAChB,kBAAoBC,GAAiB,CACnCF,EAAI,KAAO,CACT,eAAgBE,CAAA,EAChB,CACJ,EACA,kBAAmB,UACnB,qBAAuBA,GAAiB,CACtCF,EAAI,KAAO,CACT,kBAAmBE,CAAA,EACnB,CACJ,EACA,YAAa,OACb,eAAiBC,GAAyB,CACxCH,EAAI,KAAO,CACT,YAAAG,CAAA,EACA,EACFC,EAAmB,QAAQC,EAAeF,CAAW,CACvD,EACA,WAAY,GACZ,cAAgBG,GAAwB,CACtCN,EAAI,KAAO,CACT,WAAAM,CAAA,EACA,EACFF,EAAmB,QAAQG,EAAcD,CAAU,CACrD,EAEA,mBAAoB,GACpB,sBAAwBE,GAAgC,CACtDR,EAAI,KAAO,CACT,mBAAAQ,CAAA,EACA,EACFJ,EAAmB,QAAQK,EAAsBD,CAAkB,CACrE,EAEA,gBAAiB,CAAA,EACjB,kBAAoBE,GAAe,CACjC,MAAMC,EAAqB,CAAC,GAAGV,EAAA,EAAM,gBAAiBS,CAAE,EACxDV,EAAI,KAAO,CACT,gBAAiBW,CAAA,EACjB,EACFP,EAAmB,QAAQQ,EAAoBD,CAAkB,CACnE,EACA,mBAAqBE,GAAkB,CACrCb,EAAI,KAAO,CACT,gBAAiBa,CAAA,EACjB,EACFT,EAAmB,QAAQQ,EAAoBC,CAAG,CACpD,EACA,sBAAuB,GACvB,yBAA2BX,GAAkB,CAC3CF,EAAI,KAAO,CACT,sBAAuBE,CAAA,EACvB,CACJ,EAEA,qBAAsB,GACtB,wBAA0BY,GAAmB,CAC3Cd,EAAI,KAAO,CACT,qBAAsBc,CAAA,EACtB,CACJ,EACA,qBAAsB,GACtB,wBAA0BA,GAAmB,CAC3Cd,EAAI,KAAO,CACT,qBAAsBc,CAAA,EACtB,CACJ,EACA,eAAgB,CAAA,EAChB,kBAAoBC,GAA4B,CAC9Cf,EAAI,KAAO,CACT,eAAAe,CAAA,EACA,EACFX,EAAmB,QAAQY,EAAuBD,CAAc,CAClE,EAGA,oBAAqB,GACrB,uBAAyBE,GAAoB,CAC3CjB,EAAI,KAAO,CACT,oBAAqBiB,CAAA,EACrB,CACJ,EACA,oBAAqB,CAAA,EACrB,oBAAqB,CAACC,EAAyBD,IAAoB,CACjEjB,EAAI,IAAM,CAER,MAAMmB,EAAS,CAAE,GADElB,IAAM,mBACL,EACpB,OAAAiB,EAAc,QAAQE,GAAW,CAC/BD,EAAOC,CAAO,EAAIH,CACpB,CAAC,EACM,CACL,oBAAqBE,CAAA,CAEzB,CAAC,CACH,EACA,yBAA0B,IAAM,CAC9BnB,EAAI,KAAO,CACT,oBAAqB,CAAA,CAAC,EACtB,CACJ,EACA,sBAAuB,IAAM,CAC3BA,EAAI,KAAO,CACT,YAAa,OACb,WAAY,GACZ,mBAAoB,EAAA,EACpB,CACJ,CACF,GAEMqB,EAAgBC,EAAOvB,CAAK,EAIlCK,EAAmB,QAAaQ,CAAkB,EAAE,KAAKW,GAAyB,CAChF,QAAQ,IAAI,6DAA8DA,CAAqB,GAC3FA,GAAA,YAAAA,EAAuB,QAAS,GAClCF,EAAc,SAAA,EAAW,mBAAmBE,CAAqB,CAErE,CAAC,EAGDnB,EAAmB,QAAaC,CAAa,EAAE,KAAKF,GAAe,CACjE,QAAQ,IAAI,uCAAwCA,CAAW,EAC3D,OAAOA,GAAgB,UACzBkB,EAAc,SAAA,EAAW,eAAelB,CAAW,EAEnDkB,EAAc,SAAA,EAAW,eAAe,EAAK,CAEjD,CAAC,EAGDjB,EAAmB,QAAaG,CAAY,EAAE,KAAKD,GAAc,CAC/D,QAAQ,IAAI,sCAAuCA,CAAU,EACzD,OAAOA,GAAe,WACxBe,EAAc,SAAA,EAAW,cAAcf,CAAU,CAErD,CAAC,EAGDF,EAAmB,QAAaK,CAAoB,EAAE,KAAKD,GAAsB,CAC/E,QAAQ,IAAI,8CAA+CA,CAAkB,EACzE,OAAOA,GAAuB,WAChCa,EAAc,SAAA,EAAW,sBAAsBb,CAAkB,CAErE,CAAC,EAGDJ,EAAmB,QAAaY,CAAqB,EAAE,KAAKQ,GAAsB,CAChF,QAAQ,IAAI,8CAA+CA,CAAkB,EACzEA,GAAsBA,EAAmB,OAAS,GACpDH,EAAc,SAAA,EAAW,kBAAkBG,CAAkB,CAEjE,CAAC,EChLD,SAAwBC,GAAkB,CACxC,KAAM,CAAE,WAAAC,CAAA,EAAeC,EAAA,EACjB,CAAE,qBAAAC,EAAsB,kBAAAC,CAAA,EAAsBC,EAAA,EAC9C,CAAE,eAAAC,CAAA,EAAmBC,EAAA,EACrB,CAAE,gBAAAC,EAAiB,kBAAAC,EAAmB,mBAAAC,EAAoB,yBAAAC,CAAA,EAA6Bf,EAAA,EACvF,CAAE,eAAAgB,EAAgB,cAAAC,CAAA,EAAkBC,EAAA,EAiE1C,MAAO,CACL,aAjEoB7B,GAAe,CACnC,MAAM8B,EAAkB,CACtB,UAAW,GACX,YAAa,KACkB,CAC3B,eAAgBP,EAAgB,QAAU,IAAM,sCAAwC,oBAAA,EAG5F,EAEEA,EAAgB,QAAU,IAC5BK,EAAcE,CAAI,GAElBN,EAAkBxB,CAAE,EACpB0B,EAAyB,EAAI,EAC7BC,EAAeG,CAAI,EAEvB,EAiDE,gBA/CuB9B,GAAe,CACtC,MAAM+B,EAAUR,GAAA,YAAAA,EAAiB,OAAQS,GAAiBA,IAAShC,GACnEyB,EAAmBM,CAAO,EAC1BL,EAAyB,EAAI,EAU7BC,EATwB,CACtB,UAAW,GACX,YAAa,KACkB,CAC3B,eAAgB,wBAAA,EAGpB,CAEiB,CACrB,EAkCE,oBAjC0B,MAAOM,GAAqC,WAEtE,KAAM,CAAE,cAAAC,EAAgB,EAAA,EAASD,EAC3BE,GAAQF,GAAA,YAAAA,EAAQ,QAAS,CAAA,EACzBG,EAAiBjB,EAAkBc,CAAM,EAC/C,GAAIE,EAAM,OAAS,EACjB,GAAI,CACF,MAAME,EAAM,MAAMrB,EAAWsB,EAAgB,OAAQF,CAAc,EACnE,GAAIC,GAAA,MAAAA,EAAK,KACP,eAAQ,IAAI,wCAAyCA,GAAA,YAAAA,EAAK,IAAI,EAIvD,CACL,MAJeE,GAAAC,EAAAH,GAAA,YAAAA,EAAK,OAAL,YAAAG,EAAW,OAAX,YAAAD,EAAiB,IAAKP,GAC9BX,EAAeW,CAAI,GAI1B,OAAOS,EAAAJ,GAAA,YAAAA,EAAK,OAAL,YAAAI,EAAW,KAAA,CAGxB,OAASC,EAAO,CAEd,GADA,QAAQ,IAAI,oCAAqCA,CAAK,EAClDR,EACF,OAAO,MAAMhB,EAAqBe,CAAM,CAE5C,CAEF,MAAO,CACL,KAAM,CAAA,EACN,MAAO,CAAA,CAEX,CAIE,CAEJ"}