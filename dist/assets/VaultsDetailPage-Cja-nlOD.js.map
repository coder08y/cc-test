{"version":3,"file":"VaultsDetailPage-Cja-nlOD.js","sources":["../../../../../../../../../images/icon_vault_currentprice@2x.png","../../../ui-kit/src/components/PositionPriceRange.tsx","../../src/components/vaults-v2/farming/FarmingOverview.tsx","../../src/components/chart/ApyAndFeesChart.tsx","../../src/hooks/vault-v2/chart/useGetVaultApyAndFeesHistogram.ts","../../src/components/vaults-v2/detail/chart/ApyAndFeesChartBlock.tsx","../../src/components/chart/CustomPriceRangeTooltip.tsx","../../src/components/chart/PriceRangeChart.tsx","../../src/hooks/vault-v2/chart/useGetVaultPriceRange.ts","../../src/components/vaults-v2/detail/chart/PriceRangeChartPageBlock.tsx","../../src/hooks/vault-v2/chart/useGetVaultHistogram.ts","../../src/components/vaults-v2/detail/chart/TvlChartPageBlock.tsx","../../src/components/vaults-v2/detail/MyLiquidity.tsx","../../src/hooks/common/useDisplayPrice.tsx","../../src/hooks/common/useDisplayTickPrice.tsx","../../src/components/vaults-v2/detail/PositionRange.tsx","../../src/components/vaults-v2/detail/VaultsComposition.tsx","../../src/components/vaults-v2/detail/VaultsPoolSelect.tsx","../../src/components/vaults-v2/detail/VaultsHeader.tsx","../../src/components/vaults-v2/detail/VaultsDetailPage.tsx"],"sourcesContent":["export default \"__VITE_PUBLIC_ASSET__51ca5882__\"","import useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { d, Decimal, formatNumber } from '@cetus/utils'\nimport { Box, Center, Flex, HStack, Image, Skeleton, Spinner, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useMemo, useRef, useState } from 'react'\nimport Comma from './Comma'\nimport icon_currentprice from '/images/icon_vault_currentprice@2x.png'\n\ntype PositionPriceRangeProps = {\n  displayMaxPrice?: string\n  displayMinPrice?: string\n  displayPrice?: string\n  isLoading?: boolean\n}\n\nexport default function PositionPriceRange(props: PositionPriceRangeProps) {\n  const { displayMaxPrice, displayMinPrice, displayPrice, isLoading } = props\n  const { isApp } = useWindowWidth()\n  const fallbackWidth = isApp ? 200 : 366\n  const [currentElementWidth, setCurrentElementWidth] = useState<number>(0)\n  const currentElementRef = useRef<HTMLDivElement>(null)\n\n  const actualWidth = currentElementWidth || fallbackWidth\n\n  const positionPriceRangeLoading = useMemo(() => {\n    return !(displayMinPrice && displayMaxPrice && displayPrice)\n  }, [displayMaxPrice, displayMinPrice, displayPrice])\n\n  useEffect(() => {\n    const getElementWidth = () => {\n      if (currentElementRef.current) {\n        setCurrentElementWidth(currentElementRef.current.offsetWidth)\n      }\n    }\n\n    getElementWidth()\n\n    const resizeObserver = new ResizeObserver(getElementWidth)\n    if (currentElementRef.current) resizeObserver.observe(currentElementRef.current)\n\n    return () => {\n      if (currentElementRef.current) resizeObserver.unobserve(currentElementRef.current)\n    }\n  }, [positionPriceRangeLoading])\n\n  const isActive = useMemo(() => {\n    if (displayMaxPrice === '∞') return true\n    if (displayPrice && displayMinPrice && displayMaxPrice) {\n      if (d(displayPrice).greaterThanOrEqualTo(displayMaxPrice)) return false\n      if (d(displayMinPrice).greaterThanOrEqualTo(displayPrice)) return false\n    }\n    return true\n  }, [displayPrice, displayMinPrice, displayMaxPrice])\n\n  const sliderML = useMemo(() => {\n    if (d(actualWidth).gt(0)) {\n      if (displayMaxPrice === '∞') return `calc(50% - ${actualWidth / 2}px)`\n      if (displayPrice && displayMinPrice && displayMaxPrice) {\n        if (d(displayPrice).lessThanOrEqualTo(displayMaxPrice) && d(displayPrice).greaterThanOrEqualTo(displayMinPrice)) {\n          const relativePosition = d(displayPrice)\n            .sub(displayMinPrice)\n            .div(d(displayMaxPrice).sub(d(displayMinPrice)))\n            .mul(100)\n\n          return `calc(${relativePosition}% - ${actualWidth / 2}px)`\n        }\n      }\n      return `calc(50% - ${actualWidth / 2}px)`\n    }\n  }, [displayPrice, displayMinPrice, displayMaxPrice, actualWidth])\n\n  return (\n    <>\n      {!positionPriceRangeLoading ? (\n        <Flex w=\"100%\" h=\"120px\" position=\"relative\">\n          <HStack w=\"100%\" alignItems=\"center\" justify=\"center\" position=\"absolute\" left=\"0\" top=\"50%\">\n            {/* Min Price */}\n            <VStack align=\"flex-end\" gap=\"6px\" maxW={{ md: '48%', lg: 'auto' }} zIndex=\"9999\">\n              <Text fontSize=\"12px\">Min Price</Text>\n              {isLoading ? (\n                <Flex h=\"18px\" align=\"center\">\n                  <Skeleton />\n                </Flex>\n              ) : (\n                <Text fontSize=\"14px\" fontWeight=\"500\" color=\"text_caption\">\n                  <Comma value={formatNumber(displayMinPrice, 6, true, Decimal.ROUND_DOWN)} />\n                </Text>\n              )}\n            </VStack>\n\n            <Center zIndex=\"99\" position=\"relative\" h=\"40px\" w=\"366px\">\n              <Center\n                w=\"100%\"\n                h=\"100%\"\n                borderRadius=\"8px\"\n                bg={isActive ? 'linear-gradient( 270deg, #003F68 0%, #006E51 100%)' : 'primary_opacity.10'}\n              />\n              <VStack\n                gap=\"8px\"\n                mt=\"-48px\"\n                ref={currentElementRef}\n                ml={isActive ? '-2px' : '0px'}\n                position=\"absolute\"\n                left={sliderML}\n                zIndex=\"999\"\n                // w={`${actualWidth}px`}\n                transition=\"left 0.3s ease\"\n              >\n                {/* Current Price p=\"6px 24px\" */}\n                <VStack p=\"6px 0px\" borderRadius=\"8px\" gap=\"4px\" transition=\"all 0.3s ease\">\n                  <Text fontSize=\"xs\" h=\"14px\" whiteSpace=\"nowrap\">\n                    Current Price\n                  </Text>\n                  {isLoading ? (\n                    <Flex h=\"18px\" align=\"center\">\n                      <Skeleton />\n                    </Flex>\n                  ) : (\n                    <HStack>\n                      <Text fontSize=\"16px\" color=\"text_highlight\" whiteSpace=\"nowrap\">\n                        <Comma value={formatNumber(displayPrice, 6, true, Decimal.ROUND_DOWN)} />\n                      </Text>\n                    </HStack>\n                  )}\n                </VStack>\n\n                <VStack zIndex=\"100\">\n                  <Box w=\"2px\" h=\"42px\" bg={isActive && displayMaxPrice !== '∞' ? '#fff' : 'transparent'} />\n                  {isActive && displayMaxPrice !== '∞' && <Image src={icon_currentprice} w=\"10px\" h=\"6px\" mt=\"-6px\" />}\n                </VStack>\n              </VStack>\n            </Center>\n\n            {/* Max Price */}\n            <VStack align=\"flex-start\" gap=\"6px\" maxW={{ md: '48%', lg: 'auto' }}>\n              <Text fontSize=\"12px\">Max Price</Text>\n              {isLoading ? (\n                <Flex h=\"18px\" align=\"center\">\n                  <Skeleton />\n                </Flex>\n              ) : (\n                <Text fontSize=\"14px\" fontWeight=\"500\" color=\"text_caption\">\n                  <Comma value={formatNumber(displayMaxPrice, 6, true, Decimal.ROUND_DOWN)} />\n                </Text>\n              )}\n            </VStack>\n          </HStack>\n        </Flex>\n      ) : (\n        <Flex h=\"120px\" width=\"100%\" align=\"center\" position=\"relative\">\n          <Box position=\"absolute\" top=\"50%\" left=\"50%\" transform=\"translate(-50%,-50%)\">\n            <Spinner />\n          </Box>\n        </Flex>\n      )}\n    </>\n  )\n}\n","import useVaultFarmingOverview from '@/hooks/vaults-farming/useVaultsFarmingOverview'\nimport { CetusTooltip } from '@cetus/design'\nimport { useAccountStore } from '@cetus/stores'\nimport { HTextLabelBox, SingleCoinImage, VTextLabelBox } from '@cetus/ui-kit'\nimport { symbolDataDisplayProcessing } from '@cetus/utils'\nimport { Box, Button, HStack, Text, VStack } from '@chakra-ui/react'\nimport { useMemo, useState } from 'react'\nimport { RewardItem } from './FarmingIncentives'\nimport FarmingModal from './FarmingModal'\n\n// vaults 详情 farming卡片部分\nexport default function FarmingOverview({ vaultId }: { vaultId: string }) {\n  const [isOpenFarmingModal, setIsOpenFarmingModal] = useState(false)\n  const [farmingModalAction, setFarmingModalAction] = useState('Stake')\n  const {\n    vaultFarmingAprDisplay,\n    vaultFarmingLoading,\n    farmingTvlDisplay,\n    stakeVaultFarmingTvl,\n    vaultFarmingRewardAmountUSD,\n    vaultFarmingRewardLoading,\n    farmClaimAction,\n    farmClaimLoading,\n    vaultsFarmingStaked,\n    currentVaultPositionLoading,\n    currentVaultPositionInfo,\n    stakeButtonDisabled,\n    claimButtonDisabled,\n    unStakeButtonDisabled,\n    vaultsFarmingRewardsLoading,\n    holdingVaultAmountDisplay,\n    vaultsFarmingRewards,\n    currentVaultsFarm,\n    vaultsFarmingStakeLoading,\n    currentVaultsFarmingStaked\n  } = useVaultFarmingOverview(vaultId)\n\n  const { currentAccount } = useAccountStore()\n\n  const stakeLoading = useMemo(() => {\n    return (\n      vaultsFarmingStakeLoading &&\n      ((currentVaultsFarmingStaked && currentVaultsFarmingStaked?.ownerAddress != currentAccount?.address) || !currentVaultsFarmingStaked)\n    )\n  }, [vaultsFarmingStakeLoading, currentAccount?.address, currentVaultsFarmingStaked?.ownerAddress])\n  console.log('🚀🚀🚀 ~ FarmingOverview.tsx:46 ~ FarmingOverview ~ stakeLoading:', stakeLoading)\n\n  return (\n    <VStack\n      width=\"100%\"\n      bg=\"bg_six\"\n      p=\"16px\"\n      borderRadius=\"16px\"\n      background=\"linear-gradient( 180deg, #003125 0%, #111111 100%);\"\n      position=\"relative\"\n    >\n      <Box\n        backgroundImage=\"url(/images/img_farming_bg_2@2x.png)\"\n        backgroundSize=\"100% 100%\"\n        opacity=\"0.1\"\n        w=\"169px\"\n        h=\"169px\"\n        position=\"absolute\"\n        top=\"12px\"\n        right=\"16px\"\n      />\n      <VStack w=\"100%\" alignItems=\"flex-start\" position=\"relative\" zIndex=\"5\">\n        <HStack w=\"100%\" justifyContent=\"space-between\">\n          <VTextLabelBox\n            title=\"haeVault Farming\"\n            titleStyle={{\n              color: 'text_caption'\n            }}\n            value=\"Stake your LP tokens to Earn\"\n            valueStyle={{ fontSize: '12px', color: 'primary_gray' }}\n            wrapStyle={{\n              gap: '8px'\n            }}\n          />\n          <HTextLabelBox\n            label=\"APR\"\n            value={vaultFarmingAprDisplay}\n            wrapStyle={{\n              w: 'auto',\n              gap: '4px'\n            }}\n            labelStyle={{\n              fontSize: '14px',\n              color: 'text_caption'\n            }}\n            valueStyle={{\n              fontSize: '14px',\n              color: 'primary'\n            }}\n          />\n        </HStack>\n        <HStack\n          justifyContent=\"center\"\n          w=\"100%\"\n          gap=\"90px\"\n          mt=\"6px\"\n          alignItems=\"center\"\n          backgroundImage=\"url('/images/img_farming_bg@2x.png')\"\n          backgroundSize=\"100% 100%\"\n          backgroundRepeat=\"no-repeat\"\n          padding=\"12px 0\"\n        >\n          <VTextLabelBox\n            wrapStyle={{\n              textAlign: 'center',\n              alignItems: 'center',\n              gap: '8px'\n            }}\n            skeletonStyle={{\n              valueH: '20px'\n            }}\n            title=\"TVL\"\n            isLoading={vaultFarmingLoading}\n            value={farmingTvlDisplay as string}\n          />\n          <VTextLabelBox\n            wrapStyle={{\n              textAlign: 'center',\n              alignItems: 'center',\n              gap: '8px'\n            }}\n            titleStyle={{\n              color: 'primary_gray'\n            }}\n            title=\"Farming Rewards\"\n            isLoading={vaultFarmingLoading}\n            skeletonStyle={{\n              valueH: '20px'\n            }}\n            value={\n              <HStack>\n                {currentVaultsFarm?.rewardList?.map((item: any) => {\n                  return (\n                    <HStack>\n                      <SingleCoinImage\n                        key={item?.coinDetail?.name + 'Icon'}\n                        imageUrl={item?.coinDetail?.logo_url}\n                        w=\"20px\"\n                        h=\"20px\"\n                        coinType={item?.coin_type}\n                        showTag={false}\n                      />\n                      <Text color=\"text_caption\">\n                        {item.rewardItemRateDisplay} {item?.coinDetail?.symbol}/day\n                      </Text>\n                    </HStack>\n                  )\n                })}\n              </HStack>\n            }\n          />\n        </HStack>\n      </VStack>\n      <VStack gap=\"16px\" w=\"100%\" mt=\"8px\" position=\"relative\" zIndex=\"5\">\n        <HTextLabelBox\n          label=\"Available to Stake\"\n          isLoading={currentVaultPositionLoading}\n          skeletonStyle={{\n            valueH: '24px'\n          }}\n          value={\n            <HStack gap=\"8px\">\n              <VStack gap=\"4px\" alignItems=\"flex-end\">\n                <Text fontSize=\"14px\" color=\"text_caption\">\n                  {!currentAccount?.address ? '--' : currentVaultPositionInfo?.vaultBalanceDisplay} LP\n                </Text>\n                <Text fontSize=\"12px\">{holdingVaultAmountDisplay}</Text>\n              </VStack>\n              <Button\n                w=\"80px\"\n                h=\"24px\"\n                bg=\"none\"\n                borderRadius=\"8px\"\n                fontSize=\"12px\"\n                variant=\"outline\"\n                onClick={() => {\n                  setFarmingModalAction('Stake')\n                  setIsOpenFarmingModal(true)\n                }}\n                isDisabled={stakeButtonDisabled}\n              >\n                Stake\n              </Button>\n            </HStack>\n          }\n          labelStyle={{ color: 'primary_gray', fontSize: '14px' }}\n        />\n        <HTextLabelBox\n          label=\"Your Staked\"\n          isLoading={stakeLoading || currentVaultPositionLoading}\n          skeletonStyle={{\n            valueH: '24px'\n          }}\n          value={\n            <HStack gap=\"8px\">\n              <VStack gap=\"4px\" alignItems=\"flex-end\">\n                <Text fontSize=\"14px\" color=\"text_caption\">\n                  {!currentAccount?.address ? '--' : vaultsFarmingStaked?.stakedBalanceDisplay} LP\n                </Text>\n                <Text fontSize=\"12px\">{symbolDataDisplayProcessing(stakeVaultFarmingTvl)}</Text>\n              </VStack>\n              <Button\n                variant=\"outline\"\n                w=\"80px\"\n                h=\"24px\"\n                bg=\"none\"\n                borderRadius=\"8px\"\n                fontSize=\"12px\"\n                isDisabled={unStakeButtonDisabled}\n                onClick={() => {\n                  setFarmingModalAction('Unstake')\n                  setIsOpenFarmingModal(true)\n                  // getVaultFarmingUnStakePayload()\n                }}\n              >\n                Unstake\n              </Button>\n            </HStack>\n          }\n          labelStyle={{ color: 'primary_gray', fontSize: '14px' }}\n        />\n        <HTextLabelBox\n          label=\"Your Rewards\"\n          isLoading={vaultFarmingRewardLoading || currentVaultPositionLoading}\n          skeletonStyle={{\n            valueH: '24px'\n          }}\n          value={\n            <HStack gap=\"8px\">\n              <CetusTooltip\n                tooltip={\n                  <VStack>\n                    {vaultsFarmingRewards?.map(rewardInfo => (\n                      <RewardItem key={rewardInfo.rewardCoinType} rewardInfo={rewardInfo} />\n                    ))}\n                  </VStack>\n                }\n              >\n                <Text textDecoration=\"underline dotted\" textDecorationColor=\"text_paragraph\" color=\"text_caption\">\n                  {symbolDataDisplayProcessing(vaultFarmingRewardAmountUSD)}\n                </Text>\n              </CetusTooltip>\n              <Button\n                variant=\"outline\"\n                w=\"80px\"\n                h=\"24px\"\n                bg=\"none\"\n                borderRadius=\"8px\"\n                fontSize=\"12px\"\n                onClick={farmClaimAction}\n                isLoading={farmClaimLoading}\n                isDisabled={claimButtonDisabled}\n              >\n                Claim\n              </Button>\n            </HStack>\n          }\n          labelStyle={{ color: 'primary_gray', fontSize: '14px' }}\n        />\n      </VStack>\n\n      {isOpenFarmingModal && (\n        <FarmingModal\n          isOpen={isOpenFarmingModal}\n          setIsOpen={setIsOpenFarmingModal}\n          setIsOpenPre={setIsOpenFarmingModal}\n          onClose={() => setIsOpenFarmingModal(false)}\n          farmingModalAction={farmingModalAction}\n          vaultsId={vaultId}\n          isDetail={true}\n        />\n      )}\n    </VStack>\n  )\n}\n","import useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { Token } from '@cetus/types'\nimport { d, formatNumber } from '@cetus/utils'\nimport { useMemo, useState } from 'react'\nimport { Bar, ComposedChart, Legend, Line, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts'\nimport { CustomizedApyAndFeesRightYAxisTick, CustomizedApyAndFeesYAxisTick } from './CustomizedAxisTick'\nimport { ApyAndFeesChartTooltip } from './CustomTooltip'\ntype ApyAndFeesChartProps = {\n  data: any\n  dateType: string\n  quoteCoin?: Token\n  category: string\n}\n\nexport default function ApyAndFeesChart({ data = [], dateType, quoteCoin, category }: ApyAndFeesChartProps) {\n  const [hidden, setHidden] = useState<{ apy: boolean; lp_fee: boolean }>({\n    apy: false, // 控制 `Bar` 是否隐藏\n    lp_fee: false // 控制 `Line` 是否隐藏\n  })\n  const handleLegendClick = (e: any) => {\n    setHidden(prev => ({ ...prev, [e.id]: !prev[e.id] }))\n  }\n  const legendPayload = [\n    { value: 'Cumulative Yields', type: 'line', id: 'lp_fee', color: '#07EBAD' }, // 对应折线图\n    { value: 'APY', type: 'line', id: 'apy', color: '#75C8FF' } // 对应柱状图\n  ]\n\n  const ticks = useMemo(() => {\n    if (data.length) {\n      const min = Math.min(...data.map((item: any) => item.apy))\n      const max = Math.max(...data.map((item: any) => item.apy))\n      const tick4 = category == 'haedal' ? d(max).mul(1.05) : d(max).mul(1.05)\n      const tick0 = d(min)\n      const interval = tick4.sub(tick0).div(4)\n      return Array.from({ length: 5 }, (_, i) => tick0.add(interval.mul(i)).toNumber())\n    }\n    return []\n  }, [data])\n\n  const ticksFee = useMemo(() => {\n    if (data.length) {\n      const min = Math.min(...data.map((item: any) => item.lp_fee))\n      const max = Math.max(...data.map((item: any) => item.lp_fee))\n      const tick4 = category == 'haedal' ? d(max).mul(1.05) : d(max).mul(1.0001)\n      const tick0 = d(min)\n      const interval = tick4.sub(tick0).div(4)\n      return Array.from({ length: 5 }, (_, i) => tick0.add(interval.mul(i)).toNumber())\n    }\n    return []\n  }, [data])\n\n  const getXData = (dataLength: number, value: any) => {\n    const date = new Date(value * 1000)\n    const hours = date.getUTCHours()\n    const minutes = date.getUTCMinutes()\n    const day = date.getUTCDate()\n    const month = date.getUTCMonth() + 1\n\n    if (dataLength < 24 || dateType === '24H') {\n      const period = hours >= 12 ? 'PM' : 'AM'\n      const displayHours = hours % 12 || 12\n      return `${String(displayHours).padStart(2, '0')}:${String(minutes).padStart(2, '0')} ${period}`\n    }\n    return `${month}/${day}`\n  }\n\n  const { isApp } = useWindowWidth()\n\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      <ComposedChart data={data} margin={{ top: 0, left: 10, right: 28, bottom: 5 }}>\n        <XAxis\n          dataKey=\"date\"\n          fontSize=\"12px\"\n          axisLine={false}\n          tickLine={false}\n          tick={{ fill: '#909CA4' }}\n          dy={16}\n          tickFormatter={value => getXData(data.length, value)}\n          minTickGap={data?.length > 8 ? 36 : undefined}\n          interval={data?.length <= 8 ? 0 : undefined}\n        />\n        <YAxis\n          yAxisId=\"bar\"\n          xAxisId=\"x\"\n          fontSize=\"12px\"\n          orientation=\"left\"\n          width={50}\n          tickLine={false}\n          position=\"insideRight\"\n          ticks={ticks}\n          domain={[ticks[0], ticks[ticks.length - 1]]}\n          tickFormatter={value => {\n            return formatNumber(value, 2) // 需要 return\n          }}\n          tick={<CustomizedApyAndFeesYAxisTick />}\n        />\n        <YAxis\n          yAxisId=\"line\"\n          orientation=\"right\"\n          fontSize=\"12px\"\n          tickLine={false}\n          ticks={ticksFee}\n          domain={[ticksFee[0], ticksFee[ticksFee.length - 1]]}\n          tick={<CustomizedApyAndFeesRightYAxisTick isRight={true} isApp={isApp} symbol={quoteCoin?.symbol} category={category} />}\n        />\n        <Tooltip content={<ApyAndFeesChartTooltip symbol={quoteCoin?.symbol} />} />\n        <Legend\n          align=\"right\"\n          verticalAlign=\"top\"\n          layout=\"horizontal\"\n          wrapperStyle={{ top: -32, right: 0, fontSize: 12 }}\n          payload={legendPayload}\n          // onClick={handleLegendClick}\n        />\n        <Bar yAxisId=\"bar\" barSize={1} dataKey=\"apy\" fill=\"#75C8FF\" isAnimationActive={false} hide={hidden.apy} />\n\n        {/* 折线图 */}\n        <Line\n          yAxisId=\"line\"\n          type=\"monotone\"\n          dataKey=\"lp_fee\"\n          stroke=\"#07EBAD\"\n          activeDot={{ r: 4, stroke: '#07EBAD' }}\n          dot={false}\n          isAnimationActive={false}\n          hide={hidden.lp_fee}\n        />\n      </ComposedChart>\n    </ResponsiveContainer>\n  )\n}\n","import { VaultStableLpFeeHistogram, VaultUnStableLpFeeHistogram } from '@/apis/path'\nimport { useFetch } from '@cetus/hooks'\nimport { formatTimestamp } from '@cetus/utils'\nimport { identity, pickBy } from 'lodash-es'\n\nexport type GetVaultApyAndFeesHistogramParams = {\n  vaultID: string\n  beginTimestamp: number | string\n  endTimestamp: number | string\n}\n\n// 获取Vault的apy和fees的histogram数据\nexport default function useGetVaultApyAndFeesHistogram(category: string) {\n  const { fetchByApi } = useFetch()\n\n  const getVaultApyAndFeesHistogram = async (params: GetVaultApyAndFeesHistogramParams) => {\n    console.log('🚀 ~ getVaultHistogram ~ params:', params)\n    const requestParams: any = { ...params }\n    requestParams['dateType'] = 'hour'\n    try {\n      const options = pickBy(requestParams, identity)\n      const res = await fetchByApi(category == 'haedal' ? VaultUnStableLpFeeHistogram : VaultStableLpFeeHistogram, 'GET', options)\n      console.log('🚀 ~ getVaultApyAndFeesHistogram ~ res:', res)\n\n      if (!res?.list) return []\n\n      const list = res?.list.map((item: any, index: number) => {\n        const timestampMs = item.Timestamp * 1000\n        const date = new Date(timestampMs)\n        const monthIndex = Number(date.toISOString().slice(5, 7)) // 获取月份\n\n        return {\n          apy: +item.value.apy * 100, // 快速转换为数字\n          lp_fee: +item.value.lp_fee, // 快速转换为数字\n          date: item.Timestamp,\n          tooltipTime: formatTimestamp(timestampMs)\n        }\n      })\n      return {\n        list,\n        quote_type: res?.quote_type\n      }\n    } catch (error) {\n      console.error('🚀 ~ useGetHistogramData ~ getHistogramData Error:', error)\n      return []\n    }\n  }\n\n  return { getVaultApyAndFeesHistogram }\n}\n","import ApyAndFeesChart from '@/components/chart/ApyAndFeesChart'\nimport useGetVaultApyAndFeesHistogram from '@/hooks/vault-v2/chart/useGetVaultApyAndFeesHistogram'\nimport { Block } from '@cetus/design'\nimport { useGetToken } from '@cetus/hooks/src/useToken'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { CoinType } from '@cetus/types'\nimport { Box, HStack, Spinner, Text } from '@chakra-ui/react'\nimport { useEffect, useState } from 'react'\n\nexport default function ApyAndFeesChartBlock({ isRefresh, vaultsId, category }: { vaultsId?: string; isRefresh?: boolean; category: string }) {\n  const [isLoading, setIsLoading] = useState(false)\n  const [chartData, setChartDate] = useState()\n  const [quoteCoin, setQuoteCoin] = useState()\n  const { isApp } = useWindowWidth()\n\n  const { getTokenInfo } = useGetToken()\n  const fetchToken = async (coinType: string) => {\n    if (!coinType) return\n    try {\n      const coinInfo = await getTokenInfo(coinType as CoinType)\n      console.log('🚀 ~ fetchToken ~ coinInfo:', coinType, coinInfo)\n      if (coinInfo) {\n        setQuoteCoin(coinInfo)\n      }\n    } catch (error) {\n      console.error('Error fetching token info:', error)\n    }\n  }\n\n  // 图表数据\n  const { getVaultApyAndFeesHistogram } = useGetVaultApyAndFeesHistogram(category)\n\n  const fetchPricerangeHistogram = async () => {\n    setIsLoading(true)\n    const now = Date.now()\n    const oneDay = 86400 // 1 天的秒数\n    const timeLimit = isApp ? 2 * oneDay : 7 * oneDay\n    const beginTimestamp = !timeLimit ? 0 : String(Math.floor(now / 1000 - timeLimit))\n\n    const { list, quote_type } = await getVaultApyAndFeesHistogram({\n      vaultID: vaultsId as string,\n      beginTimestamp,\n      endTimestamp: String(Math.floor(now / 1000))\n    })\n    fetchToken(quote_type)\n    setChartDate(list)\n    console.log('🚀 ~ fetchPricerangeHistogram ~ tvl_res:', quote_type, list)\n    setIsLoading(false)\n  }\n\n  useEffect(() => {\n    if (vaultsId) {\n      fetchPricerangeHistogram()\n    }\n  }, [vaultsId])\n\n  useEffect(() => {\n    if (isRefresh) {\n      fetchPricerangeHistogram()\n    }\n  }, [isRefresh])\n\n  return (\n    <Block border=\"none\" padding={isApp ? '12px' : '20px 8px 20px 20px'}>\n      <HStack justify=\"space-between\">\n        <HStack pr=\"12px\" w=\"100%\" justify=\"space-between\" gap=\"4px\">\n          <Text fontWeight=\"500\" fontSize=\"14px\">\n            APY & Yields\n          </Text>\n        </HStack>\n      </HStack>\n      <Box w=\"100%\" h=\"260px\" mt=\"20px\">\n        <Box w=\"100%\" h=\"260px\" position=\"relative\">\n          {isLoading && (\n            <Box position=\"absolute\" top=\"50%\" left=\"50%\" transform=\"translate(-50%,-50%)\">\n              <Spinner />\n            </Box>\n          )}\n          <ApyAndFeesChart data={chartData} dateType=\"\" quoteCoin={quoteCoin} category={category} />\n        </Box>\n      </Box>\n    </Block>\n  )\n}\n","import { d, formatNumber } from '@cetus/utils'\nimport { HStack, Text, VStack } from '@chakra-ui/react'\n\nexport default function CustomPirceRangeTooltip({ payload, label }: any) {\n  const lowerPriceSize = payload?.[0]?.payload && formatNumber(d(payload[0].payload.lower).div(payload[0].payload.real).sub(1).mul(100).toString(), 2)\n  const upperPriceSize = payload?.[0]?.payload && formatNumber(d(payload[0].payload.upper).div(payload[0].payload.real).sub(1).mul(100).toString(), 2)\n\n  return (\n    payload &&\n    payload.length && (\n      <VStack\n        padding=\"16px\"\n        bg=\"bg_secondary\"\n        borderRadius=\"12px\"\n        border=\"1px\"\n        borderStyle=\"solid\"\n        borderColor=\"border\"\n        justifyContent=\"flex-start\"\n        alignItems=\"left\"\n      >\n        <Text fontSize=\"12px\">{payload[0].payload.tooltipTime}</Text>\n        <HStack textAlign=\"left\">\n          <Text color=\"#68FFD8\" fontSize=\"12px\">\n            Pool Price\n          </Text>\n          <Text color=\"#68FFD8\" fontSize=\"12px\">\n            {formatNumber(payload[0].payload.real)}\n          </Text>\n        </HStack>\n        <HStack alignItems=\"flex-start\">\n          <Text color=\"#6FBCF0\" fontSize=\"12px\">\n            Price Range\n          </Text>\n          {/* <Text color=\"#6FBCF0\" fontSize=\"12px\">\n            {formatNumber(payload[0].payload.lower)}-{formatNumber(payload[0].payload.upper)}\n          </Text> */}\n          <HStack gap=\"2px\">\n            <VStack gap=\"4px\" bg=\"primary_opacity.10\" p=\"4px\" borderRadius=\"4px\">\n              <Text color=\"#6FBCF0\" fontSize=\"12px\">\n                {formatNumber(payload[0].payload.lower)}\n              </Text>\n              <Text fontSize=\"12px\" transform=\"scale(0.9)\">\n                ({lowerPriceSize}%)\n              </Text>\n            </VStack>\n            <Text color=\"#6FBCF0\" fontSize=\"12px\">\n              -\n            </Text>\n            <VStack gap=\"4px\" bg=\"primary_opacity.10\" p=\"4px\" borderRadius=\"4px\">\n              <Text color=\"#6FBCF0\" fontSize=\"12px\">\n                {formatNumber(payload[0].payload.upper)}\n              </Text>\n              <Text fontSize=\"12px\" transform=\"scale(0.9)\">\n                ({upperPriceSize}%)\n              </Text>\n            </VStack>\n          </HStack>\n        </HStack>\n      </VStack>\n    )\n  )\n}\n","import useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { d, formatNumber } from '@cetus/utils'\nimport { useMemo, useState } from 'react'\nimport { Legend, Line, LineChart, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts'\nimport CustomPirceRangeTooltip from './CustomPriceRangeTooltip'\nimport { CustomizedVaultYAxisTick } from './CustomizedAxisTick'\n\ntype PriceRangeChartProps = {\n  data: any\n  dateType: string\n  isTabLoading: boolean\n  category: string\n}\n\nexport default function PriceRangeChart({ data = [], dateType, isTabLoading, category }: PriceRangeChartProps) {\n  const slicedData = useMemo(() => data, [data])\n  const [hidden, setHidden] = useState({ lower: false, upper: false, real: false })\n\n  const ticks = useMemo(() => {\n    if (slicedData.length) {\n      const min = Math.min(...slicedData.map((item: any) => item.lower))\n      const max = Math.max(...slicedData.map((item: any) => item.upper))\n      const tick4 = category == 'haedal' ? d(max).mul(1.1) : d(max).mul(1.001)\n      const tick0 = category == 'haedal' ? d(min).mul(0.9) : d(min).mul(0.999)\n      const interval = tick4.sub(tick0).div(4)\n      return Array.from({ length: 5 }, (_, i) => tick0.add(interval.mul(i)).toNumber())\n    }\n    return []\n  }, [slicedData])\n  console.log('🚀🚀🚀 ~ PriceRangeChart.tsx:30 ~ ticks ~ ticks:', ticks)\n\n  const getXData = (dataLength: number, value: any) => {\n    const date = new Date(value * 1000)\n    const hours = date.getUTCHours()\n    const minutes = date.getUTCMinutes()\n    const day = date.getUTCDate()\n    const month = date.getUTCMonth() + 1\n\n    if (dataLength < 24 || dateType === '24H') {\n      const period = hours >= 12 ? 'PM' : 'AM'\n      const displayHours = hours % 12 || 12\n      return `${String(displayHours).padStart(2, '0')}:${String(minutes).padStart(2, '0')} ${period}`\n    }\n    return `${month}/${day}`\n  }\n\n  const { isApp } = useWindowWidth()\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      <LineChart data={slicedData} margin={{ top: 0, left: 10, right: 28, bottom: 5 }}>\n        <XAxis\n          dataKey=\"date\"\n          fontSize=\"12px\"\n          axisLine={false}\n          tickLine={false}\n          tick={{ fill: '#909CA4' }}\n          dy={16}\n          tickFormatter={value => (isTabLoading ? '' : getXData(slicedData.length, value))}\n          minTickGap={slicedData?.length > 8 ? 36 : undefined}\n          interval={slicedData?.length <= 8 ? 0 : undefined}\n        />\n        <YAxis\n          fontSize=\"12px\"\n          ticks={ticks}\n          domain={[ticks[0], ticks[ticks.length - 1]]}\n          axisLine={false}\n          tickLine={false}\n          tickFormatter={value => formatNumber(value, 4)}\n          tick={<CustomizedVaultYAxisTick category={category} />}\n        />\n        <Tooltip content={<CustomPirceRangeTooltip />} />\n        <Legend\n          align=\"right\"\n          verticalAlign=\"top\"\n          layout=\"horizontal\"\n          wrapperStyle={{ top: isApp ? -8 : -41, right: isApp ? 4 : 100, fontSize: 12 }}\n          formatter={value => ({ lower: 'Price Range', upper: 'Price Range', real: 'Pool Price' })[value] || value}\n        />\n        <Line\n          type=\"monotone\"\n          dataKey=\"real\"\n          stroke=\"#07EBAD\"\n          activeDot={{ r: 4, stroke: '#07EBAD' }}\n          hide={hidden.real}\n          dot={false}\n          isAnimationActive={false}\n        />\n        <Line\n          type=\"monotone\"\n          dataKey=\"lower\"\n          stroke=\"#6FBCF0\"\n          activeDot={{ r: 4, stroke: '#6FBCF0' }}\n          dot={false}\n          hide={hidden.lower}\n          isAnimationActive={false}\n        />\n        <Line\n          type=\"monotone\"\n          dataKey=\"upper\"\n          stroke=\"#6FBCF0\"\n          activeDot={{ r: 4, stroke: '#6FBCF0' }}\n          legendType=\"none\"\n          dot={false}\n          hide={hidden.upper}\n          isAnimationActive={false}\n        />\n      </LineChart>\n    </ResponsiveContainer>\n  )\n}\n","import { VaultStablePriceRangeHistogram, VaultUnstablePriceRangeHistogram } from '@/apis/path'\nimport { dayStrZeroPadding } from '@/utils/api-data-utils'\nimport { useFetch } from '@cetus/hooks'\nimport { formatTimestamp } from '@cetus/utils'\nimport { identity, pickBy } from 'lodash-es'\n\nexport type GetPriceRangeDataParams = {\n  vaultID?: string\n  dateType?: 'hour' | 'min'\n  beginTimestamp: number | string\n  endTimestamp: number | string\n}\n\nexport default function useGetPriceRangeData(category: string) {\n  const { fetchByApi } = useFetch()\n\n  const getPriceRangeData = async (params: GetPriceRangeDataParams) => {\n    try {\n      const options = pickBy(params, identity)\n      const res = await fetchByApi(category == 'haedal' ? VaultUnstablePriceRangeHistogram : VaultStablePriceRangeHistogram, 'GET', options)\n\n      if (!res?.list) return []\n\n      return res.list.map((item: any) => {\n        const timestampMs = item.Timestamp * 1000\n        const date = new Date(timestampMs)\n        return {\n          lower: item.value.lower,\n          upper: item.value.upper,\n          real: item.value.real,\n          date: item.Timestamp,\n          xAxis: dayStrZeroPadding(date.toISOString().slice(0, 10)), // 只取 YYYY-MM-DD\n          tooltipTime: formatTimestamp(timestampMs),\n          hour: date.getHours()\n        }\n      })\n    } catch (error) {\n      console.error('🚀 ~ useGetPriceRangeData ~ getPriceRangeData Error:', error)\n      return []\n    }\n  }\n\n  return { getPriceRangeData }\n}\n","import PriceRangeChart from '@/components/chart/PriceRangeChart'\nimport useGetPriceRangeData from '@/hooks/vault-v2/chart/useGetVaultPriceRange'\nimport { Block, SelectTab } from '@cetus/design'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { d } from '@cetus/utils'\nimport { Box, HStack, Spinner, Text } from '@chakra-ui/react'\nimport { useEffect, useState } from 'react'\n\nexport default function PriceRangeChartPageBlock({\n  isRefresh,\n  vaultsId,\n  isReverse,\n  category\n}: {\n  vaultsId?: string\n  isRefresh?: boolean\n  isReverse?: boolean\n  category: string\n}) {\n  const [isLoading, setIsLoading] = useState(false)\n  const { getPriceRangeData } = useGetPriceRangeData(category)\n  const [priceRangeData, setPriceRangeDate] = useState()\n\n  const chartTypeList = [\n    {\n      label: '24H'\n    },\n    {\n      label: '1W'\n    }\n  ]\n  const [dateType, setDateType] = useState<'24H' | '1W'>('1W')\n  const [isTabLoading, setIsTabLoading] = useState(false)\n\n  const fetchPricerangeHistogram = async (type: string) => {\n    const now = Date.now()\n    const oneDay = 86400 // 1 天的秒数\n    const beginTimestamp = String(Math.floor(now / 1000 - oneDay))\n    try {\n      setIsLoading(true)\n      const res = await getPriceRangeData({\n        vaultID: vaultsId,\n        dateType: type == '24H' ? 'min' : 'hour',\n        beginTimestamp: type == '24H' ? beginTimestamp : '',\n        endTimestamp: d(new Date().getTime()).toFixed(0)\n      })\n\n      const result = res.map((item: any) => {\n        const lower = isReverse ? d(1).div(d(item.upper)).toString() : item.lower\n        const upper = isReverse ? d(1).div(d(item.lower)).toString() : item.upper\n        const real = isReverse ? d(1).div(item.real).toString() : item.real\n        return {\n          ...item,\n          lower,\n          upper,\n          real\n        }\n      })\n\n      setPriceRangeDate(result)\n      setIsTabLoading(false)\n      setIsLoading(false)\n    } catch (error) {\n      setIsLoading(false)\n      setIsTabLoading(false)\n      console.log('🚀🚀🚀 ~ PriceRangeChartPageBlock.tsx:40 ~ fetchPricerangeHistogram ~ error:', error)\n    }\n  }\n\n  useEffect(() => {\n    if (vaultsId) {\n      fetchPricerangeHistogram(dateType)\n    }\n  }, [vaultsId, dateType])\n\n  useEffect(() => {\n    if (isRefresh) {\n      fetchPricerangeHistogram(dateType)\n    }\n  }, [isRefresh])\n\n  const { isApp } = useWindowWidth()\n\n  return (\n    <Block border=\"none\" padding={isApp ? '12px' : '20px 8px 20px 20px'}>\n      <HStack justify=\"space-between\">\n        <HStack pr=\"12px\" w=\"100%\" justify=\"space-between\" gap=\"4px\">\n          <Text fontWeight=\"500\" fontSize=\"14px\">\n            Historical Ranges\n          </Text>\n          <SelectTab\n            type=\"outlineTab\"\n            tabList={chartTypeList}\n            currentTab={dateType}\n            handleChangeTab={tab => {\n              setIsTabLoading(true)\n              setDateType(tab.label)\n            }}\n            wrapStyle={{\n              w: '80px',\n              h: '28px',\n              p: '3px',\n              borderRadius: '8px'\n            }}\n            itemStyle={{\n              flex: '1',\n              fontSize: '12px',\n              margin: '0px'\n            }}\n          />\n        </HStack>\n      </HStack>\n      <Box w=\"100%\" h=\"260px\" mt=\"20px\">\n        <Box w=\"100%\" h=\"260px\" position=\"relative\">\n          {isLoading && (\n            <Box position=\"absolute\" top=\"50%\" left=\"50%\" transform=\"translate(-50%,-50%)\">\n              <Spinner />\n            </Box>\n          )}\n          <PriceRangeChart data={priceRangeData} dateType={dateType} isTabLoading={isTabLoading} category={category} />\n        </Box>\n      </Box>\n    </Block>\n  )\n}\n","import { VaultStableHistogram, VaultUnstableHistogram } from '@/apis/path'\nimport { useFetch } from '@cetus/hooks'\nimport { formatTimestamp } from '@cetus/utils'\nimport { identity, pickBy } from 'lodash-es'\n\nexport type GetHistogramDataParams = {\n  vaultID: string\n  type?: 'hour' | 'day' | 'week' | 'month'\n  beginTimestamp: number | string\n  endTimestamp: number | string\n}\n\nexport default function useGetVaultHistogram(category: string) {\n  const { fetchByApi } = useFetch()\n\n  const getVaultHistogram = async (params: GetHistogramDataParams) => {\n    console.log('🚀 ~ getVaultHistogram ~ params:', params)\n    const requestParams: any = { ...params }\n    requestParams['dateType'] = params.type == 'day' || params.type == 'week' ? 'hour' : 'day'\n    delete requestParams['type']\n    try {\n      const options = pickBy(requestParams, identity)\n      const res = await fetchByApi(category == 'haedal' ? VaultUnstableHistogram : VaultStableHistogram, 'GET', options)\n\n      if (!res?.list) return []\n\n      return res?.list.map((item: any, index: number) => {\n        const timestampMs = item.Timestamp * 1000\n        const date = new Date(timestampMs)\n        const monthIndex = Number(date.toISOString().slice(5, 7)) // 获取月份\n\n        const xAxis = getXData(res?.list?.length, date, params?.type, index)\n\n        return {\n          num: +item.value, // 快速转换为数字\n          date: item.Timestamp,\n          // xAxis: params.dateType === 'mon' ? Month[monthIndex] : dayStrZeroPadding(date.toISOString().slice(0, 10)),\n          xAxis,\n          tooltipTime: formatTimestamp(timestampMs)\n        }\n      })\n    } catch (error) {\n      console.error('🚀 ~ useGetHistogramData ~ getHistogramData Error:', error)\n      return []\n    }\n  }\n  const getXData = (dataLength: number, value: any, type: string = 'D', index: number) => {\n    const dateType = type == 'D' || type == 'day' ? 'D' : type == 'W' || type == 'week' ? 'W' : 'M'\n    console.log('🚀 ~ getXData ~ type:', type)\n    const date = value\n    const noShowHours = date.getUTCHours()\n    let hours = date.getUTCHours()\n    const minutes = date.getUTCMinutes()\n    const day = date.getUTCDate()\n    const month = date.getUTCMonth() + 1 // 月份从 0 开始\n    const period = hours >= 12 ? 'PM' : 'AM'\n    hours = hours % 12 || 12 // 0 变为 12，13 变为 1\n    if (dateType == 'D') {\n      // dateType为天的话，显示具体 UTC 时间 (06:00, 12:00, 18:00, 00:00)\n      return `${String(hours).padStart(2, '0')}:${String(minutes).padStart(2, '0')} ${period}`\n    } else {\n      if (dateType == 'M') {\n        // dateType为月的话，显示具体的天\n        return `${month}/${day}`\n      } else {\n        console.log('🚀 ~ getXData ~ noShowHours:', noShowHours)\n        // 如果数据为周,那么小于一天，展示平均两个点，大于一天小于五天，每天展示两个点，大于等于5天，每天展示一个点\n        if (dataLength < 24) {\n          const step = Math.floor(dataLength / 2)\n          console.log('🚀 ~ getXData ~ step:', dataLength, index, index % step === 0, step)\n          if (index % step === 0) {\n            return `${month}/${day}`\n          }\n        }\n        if (dataLength >= 24 && dataLength < 120) {\n          if (noShowHours === 0 || noShowHours === 12) {\n            return `${month}/${day}`\n          }\n        }\n        if (dataLength >= 120) {\n          if (noShowHours === 0 && minutes === 0) {\n            return `${month}/${day}`\n          }\n        }\n      }\n    }\n    return '' // 其他时间点不显示\n  }\n\n  return { getVaultHistogram }\n}\n","import TvlChart from '@/components/chart/TvlChart'\nimport useGetVaultHistogram from '@/hooks/vault-v2/chart/useGetVaultHistogram'\nimport { Block, SelectTab } from '@cetus/design'\nimport { Tab } from '@cetus/design/src/components/common/SelectTab'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { NoData } from '@cetus/ui-kit'\nimport { formatCurrency } from '@cetus/utils'\nimport { Box, HStack, Spinner, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useState } from 'react'\n\nexport default function TvlChartPageBlock({ isRefresh, vaultsId, category }: { vaultsId: string; isRefresh: boolean; category: string }) {\n  const chartTypeList = [\n    {\n      label: '24H'\n    },\n    {\n      label: '1W'\n    },\n    {\n      label: '1M'\n    }\n  ]\n  const [isLoading, setIsLoading] = useState(true)\n  const [dateType, setDateType] = useState<'24H' | '1W' | '1M'>('24H')\n  // 图表数据\n  const { getVaultHistogram } = useGetVaultHistogram(category)\n  const [pureTvlChartData, setPureTvlChartData] = useState([])\n  const [pureTvlCurrentData, setPureTvlCurrentData] = useState()\n  const [currentPureTvlCurrentData, setCurrentPureTvlCurrentDatC] = useState()\n  const handleGetHistogramTvlData = async () => {\n    setIsLoading(true)\n    const now = Date.now()\n    const oneDay = 86400 // 1 天的秒数\n    const timeLimit = dateType == '24H' ? 1 * oneDay : dateType == '1W' ? 7 * oneDay : 30 * oneDay\n    const beginTimestamp = !timeLimit ? 0 : String(Math.floor(now / 1000 - timeLimit))\n\n    const tvl_res = await getVaultHistogram({\n      type: dateType == '24H' ? 'day' : dateType == '1W' ? 'week' : 'month',\n      vaultID: vaultsId,\n      beginTimestamp,\n      endTimestamp: String(Math.floor(now / 1000))\n    })\n    setCurrentPureTvlCurrentDatC(tvl_res[tvl_res.length - 1]?.num)\n    setPureTvlCurrentData(tvl_res[tvl_res.length - 1]?.num)\n    console.log('🚀 ~ file: TestData.tsx:78 ~ handleGetHistogramData ~ res:', tvl_res)\n    setPureTvlChartData(tvl_res)\n    setIsLoading(false)\n  }\n\n  const handleChangePureTvl = (data: any) => {\n    console.log('🚀 ~ file: TestData.tsx:88 ~ handleChangePureTvl ~ data:', data)\n    if (data) {\n      setPureTvlCurrentData(data.num)\n    } else {\n      setPureTvlCurrentData(currentPureTvlCurrentData)\n    }\n  }\n\n  useEffect(() => {\n    if (vaultsId) {\n      handleGetHistogramTvlData()\n    }\n  }, [dateType, vaultsId])\n\n  useEffect(() => {\n    if (isRefresh) {\n      handleGetHistogramTvlData()\n    }\n  }, [isRefresh])\n\n  const { isApp } = useWindowWidth()\n\n  return (\n    <Block border=\"none\" padding={isApp ? '12px' : '20px'}>\n      <HStack justify=\"space-between\">\n        {pureTvlCurrentData ? (\n          <VStack align=\"flex-start\" gap=\"4px\">\n            <Text fontWeight=\"500\" fontSize=\"12px\">\n              TVL\n            </Text>\n\n            <Text fontSize=\"16px\" color=\"text_caption\" mt=\"8px\">\n              {formatCurrency(pureTvlCurrentData, 2)}\n            </Text>\n          </VStack>\n        ) : (\n          <VStack align=\"flex-start\" gap=\"4px\" />\n        )}\n        <SelectTab\n          type=\"outlineTab\"\n          tabList={chartTypeList as Tab}\n          currentTab={dateType}\n          handleChangeTab={tab => setDateType(tab.label as '24H' | '1W' | '1M')}\n          wrapStyle={{\n            w: '120px',\n            h: '28px',\n            p: '3px',\n            borderRadius: '8px'\n          }}\n          itemStyle={{\n            flex: '1',\n            fontSize: '12px',\n            margin: '0px'\n          }}\n        />\n      </HStack>\n      <Box w=\"100%\" h=\"260px\" mt=\"20px\">\n        <Box w=\"100%\" h=\"260px\" position=\"relative\">\n          {isLoading && (\n            <Box position=\"absolute\" top=\"38%\" left=\"50%\" transform=\"translate(-50%,-50%)\">\n              <Spinner />\n            </Box>\n          )}\n          {pureTvlChartData.length > 0 && (\n            <TvlChart data={pureTvlChartData} onChangeValue={handleChangePureTvl} isShowYAxis={true} toolTipsType=\"tvl\" />\n          )}\n          {!isLoading && pureTvlChartData.length === 0 && <NoData type=\"nodata\" />}\n        </Box>\n      </Box>\n    </Block>\n  )\n}\n","import { Block } from '@cetus/design'\nimport SingleTokenInfo from '@cetus/design/src/components/common/SingleTokenInfo'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { Token } from '@cetus/types'\nimport { HTextLabelBox } from '@cetus/ui-kit'\nimport VTextLabelBox from '@cetus/ui-kit/src/components/VTextLabelBox'\nimport { formatCurrency, textEllipses } from '@cetus/utils'\nimport { HStack, Skeleton, Stack, Text, VStack } from '@chakra-ui/react'\n\n// Vault详情我的流动性\nexport function MyLiquidity({\n  balanceDisplay,\n  holdCoinAmounts,\n  lpTokenInfo,\n  displayTokenA,\n  displayTokenB,\n  sharePoolRate,\n  totalHolding,\n  holdCoinAValue,\n  holdCoinBValue\n}: {\n  sharePoolRate?: string\n  balanceDisplay?: any\n  totalHolding?: string\n  displayTokenA?: Token\n  displayTokenB?: Token\n  lpTokenInfo?: any\n  holdCoinAmounts?: any\n  holdCoinAValue?: string\n  holdCoinBValue?: string\n}) {\n  const { isApp } = useWindowWidth()\n\n  return (\n    <Block border=\"none\" p={{ base: '20px 8px', lg: '20px 16px 48px' }}>\n      <VStack w=\"100%\" gap={{ base: '24px', lg: '8px' }}>\n        <HStack w=\"100%\" justifyContent=\"space-between\">\n          <HStack>\n            <Text textAlign=\"start\" fontSize=\"16px\" color=\"text_caption\">\n              Your Holdings\n            </Text>\n            {/** 由于当前数据较低，先隐藏icon */}\n            {/* <CetusTooltip\n              tooltip={\n                <VStack gap=\"8px\" cursor=\"pointer\" alignItems=\"start\">\n                  <Text fontSize=\"12px\" lineHeight=\"20px\">\n                    Your estimated daily earnings to be compounded according to recent vault performance.\n                  </Text>\n                  {rewardPerA && rewardPerB && (\n                    <Text fontSize=\"14px\" color=\"text_caption\">\n                      {`${rewardPerA} + ${rewardPerB}`}\n                    </Text>\n                  )}\n                </VStack>\n              }\n            >\n              <Image src=\"/images/icon_apr@2x.png\" w=\"24px\" h=\"24px\" />\n            </CetusTooltip> */}\n          </HStack>\n\n          {/* 持仓占比 */}\n          <HStack gap=\"8px\">\n            <Text whiteSpace=\"nowrap\">Your share of pool</Text>\n            <Text color=\"text_highlight\" fontWeight=\"500\">\n              {sharePoolRate ? `${sharePoolRate}` : '-'}\n            </Text>\n          </HStack>\n        </HStack>\n        {isApp ? (\n          <VStack w=\"100%\" gap=\"16px\">\n            <HTextLabelBox\n              label=\"LP Token Balance\"\n              labelStyle={{ fontSize: '13px' }}\n              value={\n                <HStack>\n                  <SingleTokenInfo\n                    token={lpTokenInfo}\n                    haveName={false}\n                    haveSymbol={false}\n                    symbolFontSize=\"12px\"\n                    warningIcon={{ isNeedShow: false }}\n                    imgBoxStyle={{ w: '28px', h: '28px' }}\n                    haveTooltip={true}\n                  />\n                  <Text color=\"text_caption\" ml=\"4px\" fontWeight=\"500\" fontSize=\"13px\">\n                    {balanceDisplay ? balanceDisplay : '-'} LP\n                  </Text>\n                </HStack>\n              }\n              subValue={<Text>{balanceDisplay ? totalHolding : '-'}</Text>}\n              subValueStyle={{ fontSize: '13px' }}\n            />\n            <HTextLabelBox\n              label={textEllipses(displayTokenA?.symbol, 10)}\n              labelStyle={{ fontSize: '13px' }}\n              value={\n                <HStack>\n                  <SingleTokenInfo\n                    token={displayTokenA}\n                    haveName={false}\n                    haveSymbol={false}\n                    symbolFontSize=\"12px\"\n                    warningIcon={{ iconW: '14px', iconH: '14px' }}\n                    imgBoxStyle={{ w: '20px', h: '20px' }}\n                    haveTooltip={true}\n                  />\n                  {holdCoinAmounts?.displayCoinA ? (\n                    <Text\n                      fontSize=\"13px\"\n                      color=\"text_caption\"\n                      fontWeight=\"500\"\n                    >{`${holdCoinAmounts?.displayCoinA ? holdCoinAmounts?.displayCoinA : '-'} ${textEllipses(displayTokenA?.symbol, 10)}`}</Text>\n                  ) : (\n                    <Skeleton w=\"100px\" h=\"14px\" />\n                  )}\n                </HStack>\n              }\n              subValue={holdCoinAValue ? formatCurrency(holdCoinAValue, 2) : <Skeleton w=\"80px\" h=\"14px\" />}\n              subValueStyle={{ fontSize: '13px' }}\n            />\n            <HTextLabelBox\n              label={textEllipses(displayTokenB?.symbol, 10)}\n              labelStyle={{ fontSize: '13px' }}\n              value={\n                <HStack>\n                  <SingleTokenInfo\n                    token={displayTokenB}\n                    haveName={false}\n                    haveSymbol={false}\n                    symbolFontSize=\"12px\"\n                    warningIcon={{ iconW: '14px', iconH: '14px' }}\n                    imgBoxStyle={{ w: '20px', h: '20px' }}\n                    haveTooltip={true}\n                  />\n\n                  {holdCoinAmounts?.displayCoinB ? (\n                    <Text\n                      fontSize=\"13px\"\n                      color=\"text_caption\"\n                      fontWeight=\"500\"\n                    >{`${holdCoinAmounts?.displayCoinB ? holdCoinAmounts?.displayCoinB : '-'} ${textEllipses(displayTokenB?.symbol, 10)}`}</Text>\n                  ) : (\n                    <Skeleton w=\"100px\" h=\"14px\" />\n                  )}\n                </HStack>\n              }\n              subValue={holdCoinBValue ? formatCurrency(holdCoinBValue, 2) : <Skeleton w=\"80px\" h=\"14px\" />}\n              subValueStyle={{ fontSize: '13px' }}\n            />\n          </VStack>\n        ) : (\n          <>\n            {/* 余额 */}\n            <Stack flexDir={{ base: 'column', lg: 'row' }} mt=\"16px\" gap={{ base: '8px', lg: '4px' }} align=\"center\">\n              <Text>LP Token Balance</Text>\n              <Text color=\"text_caption\" ml=\"4px\" fontWeight=\"500\">\n                {balanceDisplay ? balanceDisplay : '-'} LP\n              </Text>\n              <Text>{balanceDisplay ? totalHolding : '-'}</Text>\n            </Stack>\n\n            {/* token详情 */}\n            <HStack\n              w={{ base: '100%', lg: '90%' }}\n              mt=\"16px\"\n              h=\"68px\"\n              justifyContent=\"space-between\"\n              pos=\"relative\"\n              // bg=\"linear-gradient(270deg, #0F0F0F 0%, #252525 50%, #0F0F0F 100%)\"\n              background=\"url(/images/vaultLpBg.png)\"\n              backgroundSize=\"100% auto\"\n              borderRadius=\"69px\"\n              gap=\"0\"\n            >\n              {/* 左边 */}\n              <HStack flex=\"1\" justifyContent=\"center\" alignItems=\"start\">\n                <SingleTokenInfo\n                  token={displayTokenA}\n                  haveName={false}\n                  haveSymbol={false}\n                  symbolFontSize=\"12px\"\n                  warningIcon={{ iconW: '14px', iconH: '14px' }}\n                  imgBoxStyle={{ w: '32px', h: '32px' }}\n                  haveTooltip={true}\n                />\n                <VTextLabelBox\n                  wrapStyle={{\n                    gap: '4px',\n                    w: 'calc(100% - 60px)'\n                  }}\n                  title={`${holdCoinAmounts?.displayCoinA} ${textEllipses(displayTokenA?.symbol, 10)}`}\n                  isTitleLoading={!holdCoinAmounts?.displayCoinA}\n                  titleStyle={{\n                    fontSize: { base: '12px', lg: '14px' },\n                    color: 'text_caption',\n                    whiteSpace: 'wrap',\n                    lineHeight: { base: '16px', lg: '14px' },\n                    wordBreak: 'break-all'\n                  }}\n                  value={holdCoinAmounts?.displayCoinA ? formatCurrency(holdCoinAValue || 0, 2) : <Skeleton w=\"80px\" h=\"14px\" />}\n                  valueStyle={{\n                    fontSize: { base: '12px', lg: '12px' },\n                    color: 'text_paragraph',\n                    whiteSpace: 'wrap',\n                    lineHeight: { base: '16px', lg: '12px' },\n                    wordBreak: 'break-all',\n                    fontWeight: 500\n                  }}\n                />\n              </HStack>\n              {/* 右边 */}\n              <HStack flex=\"1\" justifyContent=\"center\" alignItems=\"end\">\n                <VTextLabelBox\n                  wrapStyle={{\n                    gap: '4px',\n                    alignItems: 'flex-end',\n                    w: 'calc(100% - 60px)'\n                  }}\n                  title={\n                    holdCoinAmounts?.displayCoinB ? (\n                      `${holdCoinAmounts?.displayCoinB} ${textEllipses(displayTokenB?.symbol, 10)}`\n                    ) : (\n                      <Skeleton w=\"100px\" h=\"14px\" />\n                    )\n                  }\n                  titleStyle={{\n                    fontSize: { base: '12px', lg: '14px' },\n                    color: 'text_caption',\n                    whiteSpace: 'wrap',\n                    lineHeight: { base: '16px', lg: '14px' },\n                    wordBreak: 'break-all'\n                  }}\n                  value={holdCoinAmounts?.displayCoinB ? formatCurrency(holdCoinBValue || 0, 2) : <Skeleton w=\"80px\" h=\"14px\" />}\n                  valueStyle={{\n                    fontSize: { base: '12px', lg: '12px' },\n                    color: 'text_paragraph',\n                    whiteSpace: 'wrap',\n                    lineHeight: { base: '16px', lg: '12px' },\n                    wordBreak: 'break-all',\n                    fontWeight: 500\n                  }}\n                />\n                <SingleTokenInfo\n                  token={displayTokenB}\n                  haveName={false}\n                  haveSymbol={false}\n                  symbolFontSize=\"12px\"\n                  warningIcon={{ iconW: '14px', iconH: '14px' }}\n                  imgBoxStyle={{ w: '32px', h: '32px' }}\n                  haveTooltip={true}\n                />\n              </HStack>\n              {/* 中间icon */}\n              <Block border=\"none\" pos=\"absolute\" left=\"calc(50% - 52px)\" w=\"100px\" h=\"100px\" borderRadius=\"70px\" p=\"8px 0px\">\n                <VStack justify=\"center\" gap=\"4px\" pt=\"12px\">\n                  <SingleTokenInfo\n                    token={lpTokenInfo}\n                    haveName={false}\n                    haveSymbol={false}\n                    symbolFontSize=\"12px\"\n                    warningIcon={{ isNeedShow: false }}\n                    imgBoxStyle={{ w: '60px', h: '60px' }}\n                    haveTooltip={true}\n                  />\n                  <Text color=\"#8BAABE\" fontSize=\"12px\" mt=\"12px\">\n                    Pooled Assets\n                  </Text>\n                </VStack>\n              </Block>\n            </HStack>\n          </>\n        )}\n      </VStack>\n    </Block>\n  )\n}\n","import { formatNumber } from '@cetus/utils'\nimport { d } from '@cetusprotocol/common-sdk'\nimport { useMemo } from 'react'\n\nexport default function useDisplayPrice(props: { price?: string; changeSide: boolean }) {\n  const { price, changeSide } = props\n  const displayPrice = useMemo(() => {\n    if (price) {\n      if (changeSide) {\n        return formatNumber(d(1).div(price).toString(), 10, true).toString()\n      } else {\n        return price\n      }\n    }\n    return undefined\n  }, [price, changeSide])\n\n  return {\n    displayPrice\n  }\n}\n","import { formatNumber } from '@cetus/utils'\nimport { d } from '@cetusprotocol/common-sdk'\nimport { useMemo } from 'react'\n\nexport default function useDisplayTickPrice(props: { minPrice?: string; maxPrice?: string; changeSide: boolean }) {\n  const { minPrice, maxPrice, changeSide } = props\n\n  const displayMinPrice = useMemo(() => {\n    if (minPrice && maxPrice) {\n      if (changeSide) {\n        if (minPrice === '0') {\n          return '0'\n        }\n        if (minPrice === '∞') {\n          return '0'\n        }\n        return formatNumber(d(1).div(maxPrice).toString(), 10, true).toString()\n      } else {\n        return minPrice\n      }\n    }\n    return undefined\n  }, [minPrice, maxPrice, changeSide])\n\n  const displayMaxPrice = useMemo(() => {\n    if (minPrice && maxPrice) {\n      if (changeSide) {\n        if (maxPrice === '0') {\n          return '∞'\n        }\n        if (maxPrice === '∞') {\n          return '∞'\n        }\n        return formatNumber(d(1).div(minPrice).toString(), 10, true).toString()\n      } else {\n        return maxPrice\n      }\n    }\n    return undefined\n  }, [minPrice, maxPrice, changeSide])\n\n  return {\n    displayMinPrice,\n    displayMaxPrice\n  }\n}\n","import useDisplayPrice from '@/hooks/common/useDisplayPrice'\nimport useDisplayTickPrice from '@/hooks/common/useDisplayTickPrice'\nimport { Block, SelectTab } from '@cetus/design'\nimport { Tab } from '@cetus/design/src/components/common/SelectTab'\nimport { Token } from '@cetus/types'\nimport { PositionPriceRange } from '@cetus/ui-kit'\nimport { HStack, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useMemo, useState } from 'react'\n\n// Vault详情 价格范围\nexport function PositionRange({\n  currentPrice,\n  minPrice,\n  maxPrice,\n  displayTokenA,\n  displayTokenB\n}: {\n  currentPrice?: string\n  minPrice?: string\n  maxPrice?: string\n  displayTokenA?: Token\n  displayTokenB?: Token\n}) {\n  const [changeSide, setChangeSide] = useState<boolean>(false)\n  const { displayPrice } = useDisplayPrice({ price: currentPrice, changeSide })\n  const { displayMaxPrice, displayMinPrice } = useDisplayTickPrice({ minPrice, maxPrice, changeSide })\n  console.log('🚀🚀🚀 ~ PositionRange.tsx:27 ~ PositionRange ~ changeSide:', changeSide)\n\n  const baseCoin = useMemo(() => {\n    return !changeSide ? displayTokenA : displayTokenB\n  }, [displayTokenA, displayTokenB, changeSide])\n\n  const rangeTabList = useMemo(() => {\n    if (displayTokenA && displayTokenB) {\n      console.log('🚀 ~ rangeTabList ~ rangeTabList:', displayTokenA)\n      return [displayTokenA, displayTokenB]?.filter(Boolean).map(item => ({\n        label: item?.symbol,\n        key: item?.coin_type,\n        isToken: true,\n        imgInfo: {\n          src: item?.logo_url,\n          w: '16px',\n          h: '16px',\n          coinType: item ? item?.coin_type : '',\n          showTagWidth: '8px',\n          showTagHeight: '8px'\n        }\n      }))\n    } else {\n      return []\n    }\n  }, [displayTokenA?.coin_type, displayTokenB?.coin_type])\n\n  const [currentRangeTab, setCurrentRangeTab] = useState<string>()\n\n  const onReverseClick = (item?: Tab) => {\n    setChangeSide(!changeSide)\n    if (item && item?.coin_type) {\n      setCurrentRangeTab(item?.coin_type)\n    } else {\n      setCurrentRangeTab(rangeTabList?.find(tab => tab.key !== currentRangeTab)?.key)\n    }\n  }\n  useEffect(() => {\n    if (baseCoin) {\n      setCurrentRangeTab(baseCoin?.coin_type)\n    }\n  }, [baseCoin])\n  return (\n    <Block border=\"none\" mt={{ base: '12px', lg: '0' }} p={{ base: '16px 8px', lg: '15px 16px 16px' }} position=\"relative\" height=\"190px\">\n      <VStack w=\"100%\">\n        <HStack w=\"100%\" justifyContent=\"space-between\">\n          <Text fontSize=\"16px\" color=\"text_caption\">\n            Position Range\n          </Text>\n          {/* 切换base */}\n          <HStack gap=\"0px\">\n            {/* {logoUrl && (\n              <SingleCoinImage\n                imageUrl={logoUrl}\n                imageStyle={{\n                  w: '20px',\n                  h: '20px'\n                }}\n              />\n            )}\n            <Text color=\"text_caption\"> {baseCoin?.symbol}</Text> */}\n            {/* <HStack ml=\"8px\" gap=\"4px\" cursor=\"pointer\" onClick={()=>setChangeSide(!changeSide)}> */}\n            {/* <Text fontSize=\"12px\"> Base coin</Text>\n              <Icon xlinkHref=\"#icon-icon_swap1\" /> */}\n            {rangeTabList?.length > 0 && (\n              <SelectTab<any, any>\n                type=\"outlineTab\"\n                tabList={rangeTabList}\n                currentTab={currentRangeTab}\n                handleChangeTab={tab => onReverseClick(tab)}\n                wrapStyle={{\n                  h: '32px',\n                  p: '3px',\n                  border: '1px solid',\n                  borderColor: 'border',\n                  borderRadius: '8px',\n                  gap: '4px',\n                  zIndex: '99'\n                }}\n                itemStyle={{\n                  h: '24px',\n                  p: '4px 8px',\n                  borderRadius: '4px',\n                  gap: '4px'\n                }}\n              />\n            )}\n            {/* </HStack> */}\n          </HStack>\n        </HStack>\n\n        <PositionPriceRange displayPrice={displayPrice} displayMaxPrice={displayMaxPrice} displayMinPrice={displayMinPrice} />\n      </VStack>\n    </Block>\n  )\n}\n","import { Block } from '@cetus/design'\nimport SingleTokenInfo from '@cetus/design/src/components/common/SingleTokenInfo'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { Token } from '@cetus/types'\nimport { VTextLabelBox } from '@cetus/ui-kit'\nimport { formatCurrency, formatNumber, symbolDataDisplayProcessing, textEllipses } from '@cetus/utils'\nimport { HStack, Progress, Text, VStack } from '@chakra-ui/react'\nimport { AumLimit } from '../common/AumLimit'\n\n// Vault详情 池子流动性组成\nexport function VaultsComposition({\n  displayAmountA,\n  displayAmountB,\n  displayPercentA,\n  displayPercentB,\n  displayTokenA,\n  displayTokenB,\n  vaultsCoinAValue,\n  vaultsCoinBValue,\n  depositRatio,\n  hardCapUSD,\n  vaultTvl\n}: {\n  displayAmountA?: string\n  displayAmountB?: string\n  displayPercentA?: string\n  displayPercentB?: string\n  displayTokenA?: Token\n  displayTokenB?: Token\n  vaultsCoinAValue?: string\n  vaultsCoinBValue?: string\n  depositRatio?: string\n  hardCapUSD?: string\n  vaultTvl?: string\n}) {\n  const { isApp } = useWindowWidth()\n\n  return (\n    <Block border=\"none\" p={{ base: '16px 8px', lg: '20px 16px 28px' }}>\n      <VStack w=\"100%\" gap=\"0px\">\n        <HStack w=\"100%\" justifyContent=\"space-between\">\n          <Text w=\"100%\" textAlign=\"start\" fontSize=\"16px\" color=\"text_caption\">\n            Vault Composition\n          </Text>\n          {hardCapUSD && (\n            <AumLimit\n              depositRatio={depositRatio}\n              hardCapUSD={hardCapUSD}\n              vaultTvl={vaultTvl}\n              label=\"Capacity\"\n              value={symbolDataDisplayProcessing(hardCapUSD, '$')}\n              haveCircleProgress={true}\n              labelStyle={{\n                fontSize: '14px'\n              }}\n              textStyle={{\n                fontSize: '14px'\n              }}\n            />\n          )}\n        </HStack>\n        {/* 百分比  */}\n        <HStack w={{ base: '100%', lg: '90%' }} justifyContent=\"space-between\" mt=\"28px\">\n          <HStack>\n            <SingleTokenInfo\n              token={displayTokenA}\n              haveName={false}\n              haveSymbol={false}\n              symbolFontSize=\"12px\"\n              warningIcon={{ iconW: '16px', iconH: '16px' }}\n              imgBoxStyle={{ w: '32px', h: '32px' }}\n              haveTooltip={!isApp}\n            />\n            <VTextLabelBox\n              wrapStyle={{\n                gap: '4px'\n              }}\n              title={textEllipses(displayTokenA?.symbol, 10) || ''}\n              titleStyle={{\n                fontSize: '14px',\n                color: 'text_caption'\n              }}\n              value={`${displayPercentA}%`}\n              isLoading={!displayPercentA}\n              valueStyle={{\n                fontSize: '12px',\n                color: 'primary',\n                fontWeight: '500'\n              }}\n            />\n          </HStack>\n\n          <Progress\n            ml=\"16px\"\n            mr=\"16px\"\n            flex=\"1\"\n            h=\"4px\"\n            value={Number(displayPercentA)}\n            bg={Number(displayPercentA) == 0 && Number(displayPercentB) == 0 ? 'process_bg_gray' : 'quote_green'}\n            sx={{\n              'div[role=\"progressbar\"]': {\n                bg: 'primary'\n              }\n            }}\n          />\n          <HStack>\n            <VTextLabelBox\n              wrapStyle={{\n                gap: '4px',\n                alignItems: 'flex-end'\n              }}\n              title={textEllipses(displayTokenB?.symbol, 10) || ''}\n              titleStyle={{\n                fontSize: '14px',\n                color: 'text_caption'\n              }}\n              value={`${displayPercentB}%`}\n              isLoading={!displayPercentB}\n              valueStyle={{\n                fontSize: '12px',\n                color: 'primary_green',\n                fontWeight: '500'\n              }}\n            />\n\n            <SingleTokenInfo\n              token={displayTokenB}\n              haveName={false}\n              haveSymbol={false}\n              symbolFontSize=\"12px\"\n              warningIcon={{ iconW: '16px', iconH: '16px' }}\n              imgBoxStyle={{ w: '32px', h: '32px' }}\n              haveTooltip={true}\n            />\n          </HStack>\n        </HStack>\n        {/* 数量/价值 */}\n        <HStack w={{ base: '100%', lg: '90%' }} justifyContent=\"space-between\" mt=\"16px\">\n          <VTextLabelBox\n            wrapStyle={{\n              gap: { base: '8px', lg: '4px' }\n            }}\n            title={`${formatNumber(displayAmountA, 6)} ${textEllipses(displayTokenA?.symbol, 10)}`}\n            isTitleLoading={!displayAmountA}\n            titleStyle={{\n              fontSize: { base: '12px', lg: '14px' },\n              color: 'text_caption'\n            }}\n            value={formatCurrency(vaultsCoinAValue, 2)}\n            isLoading={!vaultsCoinAValue}\n            valueStyle={{\n              color: 'text_paragraph',\n              fontSize: { base: '12px', lg: '12px' },\n              fontWeight: '500'\n            }}\n          />\n\n          <VTextLabelBox\n            wrapStyle={{\n              gap: { base: '8px', lg: '4px' },\n              alignItems: 'flex-end'\n            }}\n            title={`${formatNumber(displayAmountB, 6)} ${textEllipses(displayTokenB?.symbol, 10)}`}\n            isTitleLoading={!displayAmountB}\n            titleStyle={{\n              fontSize: { base: '12px', lg: '14px' },\n              color: 'text_caption'\n            }}\n            value={formatCurrency(vaultsCoinBValue, 2)}\n            isLoading={!vaultsCoinBValue}\n            valueStyle={{\n              color: 'text_paragraph',\n              fontSize: { base: '12px', lg: '12px' },\n              fontWeight: '500'\n            }}\n          />\n        </HStack>\n      </VStack>\n    </Block>\n  )\n}\n","import CoinPairInfo from '@/components/common/CoinPairInfo'\nimport PoolTag from '@/components/common/PoolTag'\nimport useVaultList from '@/hooks/vault-v2/useVaultList'\nimport useVaultsFarmingStore from '@/store/vaults-farming'\nimport useVaultsActionStore from '@/store/vaults-v2/useVaultsAction'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { CoinPairImage, Icon, Table } from '@cetus/ui-kit'\nimport { Box, Button, HStack, Menu, MenuButton, MenuItem, MenuList, Text, VStack, useDisclosure } from '@chakra-ui/react'\nimport { useEffect, useMemo, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport PoweredByHaedal from '../common/PoweredByHaedal'\nimport VaultsAprBlock from '../list/common/VaultsAprBlock'\nimport VaultsTabList from '../list/common/VaultsTab'\n\ntype VaultsPoolTabProps = {\n  apiVaultInfo: any\n  isVaultsFarming: boolean\n  vaultsList?: any\n  setVaultCurrTab: (value: string) => void\n}\n\nexport default function VaultsPoolSelect(props: VaultsPoolTabProps) {\n  const { apiVaultInfo, vaultsList, setVaultCurrTab } = props\n  const menuDisclosure = useDisclosure()\n  const [currentTab, setCurrentTab] = useState({ label: 'All', value: 'all' })\n  const navigate = useNavigate()\n  const { vaultPageList, filterVaultList, setVaultPageList } = useVaultList()\n  // const { isVaultsFarming } = useCurrentVaultsFarm(apiVaultInfo?.vaultId)\n  const { vaultsFarmObj } = useVaultsFarmingStore()\n  const { isApp } = useWindowWidth()\n  const { setAssetAction, setIsCheckedZAP, setCurrTab, setFromToken, setToToken } = useVaultsActionStore()\n  const { setVaultsFarmingStakeLoading, setVaultsFarmingRewardsLoading } = useVaultsFarmingStore()\n\n  const [isHover, setIsHover] = useState(false)\n\n  useEffect(() => {\n    if (vaultsList?.length > 0) {\n      setVaultPageList(vaultsList.sort((a, b) => b.vaultsTvl - a.vaultsTvl))\n    }\n  }, [vaultsList?.length, setVaultPageList])\n\n  const handleVaultsTab = (data: any) => {\n    setCurrentTab(data)\n    filterVaultList({\n      sortOptions: { sortRule: 'desc', sortType: 'tvl' },\n      currentTab: data.value,\n      isYourHoldings: false,\n      selectCoinList: []\n    })\n  }\n\n  const columnsList = useMemo(() => {\n    return [\n      {\n        title: (\n          <Text color=\"primary_gray\" fontSize=\"13px\" pl={{ base: '12px', lg: '16px' }}>\n            Vault\n          </Text>\n        ),\n        key: '#',\n        thConfig: { w: '70%' }\n      },\n      !isApp && {\n        title: (\n          <Text color=\"primary_gray\" fontSize=\"13px\" pl={{ base: '12px', lg: '16px' }}>\n            TVL\n          </Text>\n        ),\n        key: 'tvl',\n        thConfig: { w: '15%' }\n      },\n      {\n        title: (\n          <Text color=\"primary_gray\" fontSize=\"13px\" pr={{ base: '12px', lg: '16px' }}>\n            APY\n          </Text>\n        ),\n        key: 'apr',\n        thConfig: { w: '15%' }\n      }\n    ]\n  }, [isApp])\n\n  const getColumns = () => [\n    {\n      title: '',\n      key: '#',\n      thConfig: { w: '70%' },\n      render: (item: any) => (\n        <HStack w=\"100%\" justify={{ base: 'flex-start', lg: 'flex-start' }} pl={{ base: '12px', lg: '16px' }}>\n          <CoinPairInfo\n            versionBlockPosition=\"right\"\n            type=\"column\"\n            poolInfo={{ ...item, poolAddress: item?.vaultId, poolType: item?.category === 'cetus-dlmm' ? 'dlmm' : 'clmm' }}\n            // isShowPowered={item?.category === 'haedal'}\n            symbolFontSize=\"15px\"\n            coinPairInfoWrapStyle={{ gap: '4px', p: '4px 0' }}\n            isShowVaultsFarmIcon={vaultsFarmObj[item.vaultId]?.isVaultsFarming}\n            zIndex=\"-1\"\n            needPortal={false}\n            placement={vaultPageList?.length == 1 ? 'bottom-start' : 'top-start'}\n            showPoolTypeTag\n          />\n        </HStack>\n      )\n    },\n    !isApp && {\n      title: '',\n      key: 'tvl',\n      thConfig: { w: '15%' },\n      render: (item: any) => (\n        <HStack w=\"100%\" justify={{ base: 'flex-end', lg: 'flex-start' }}>\n          <Text color=\"text_caption\">{item.vaultsTvlDisplay}</Text>\n        </HStack>\n      )\n    },\n    {\n      title: '',\n      key: 'apy',\n      thConfig: { w: '15%' },\n      render: (item: any) => (\n        <HStack pr={{ base: '12px', lg: '16px' }} justifyContent=\"flex-end\">\n          <VaultsAprBlock\n            vaultId={item.vaultId}\n            wrapStyle={{\n              alignItems: 'flex-end'\n            }}\n            farmingTextStyle={{ p: '4px' }}\n          />\n        </HStack>\n      )\n    }\n  ]\n\n  return (\n    <HStack\n      w={{ base: '100%', lg: 'unset' }}\n      position=\"relative\"\n      zIndex=\"99999\"\n      cursor=\"pointer\"\n      onMouseEnter={() => setIsHover(true)}\n      onMouseLeave={() => setIsHover(false)}\n    >\n      <Menu isOpen={menuDisclosure.isOpen} onClose={menuDisclosure.onClose}>\n        <MenuButton\n          as={Button}\n          bg=\"none\"\n          _hover={{ bg: 'none' }}\n          _active={{ bg: 'none' }}\n          p=\"0\"\n          onClick={menuDisclosure.onOpen}\n          w={{ base: '100%', lg: 'auto' }}\n          h=\"62px\"\n        >\n          <HStack\n            bg=\"bg_secondary\"\n            p=\"8px 16px 8px 12px\"\n            borderRadius=\"12px\"\n            border=\"1px solid\"\n            borderColor=\"border\"\n            w={{ base: '100%', lg: 'unset' }}\n            justifyContent=\"space-between\"\n            h=\"62px\"\n          >\n            <HStack>\n              <CoinPairImage\n                coinACoinType={apiVaultInfo?.displayTokenA?.coin_type}\n                coinBCoinType={apiVaultInfo?.displayTokenB?.coin_type}\n                coinAIconUrl={apiVaultInfo?.displayTokenA?.logo_url}\n                coinBIconUrl={apiVaultInfo?.displayTokenB?.logo_url}\n              />\n              <VStack\n                alignItems=\"start\"\n                flexDirection={apiVaultInfo?.category === 'haedal' || apiVaultInfo?.category === 'cetus-dlmm' ? 'column' : 'row'}\n                gap=\"2px\"\n              >\n                <HStack>\n                  <Text fontSize=\"18px\" color=\"text_caption\" fontWeight=\"500\">\n                    {`${apiVaultInfo?.displayTokenA?.symbol || ''} - ${apiVaultInfo?.displayTokenB?.symbol || ''}`}\n                  </Text>\n                  <PoolTag\n                    poolType={apiVaultInfo?.category === 'cetus-dlmm' ? 'dlmm' : 'clmm'}\n                    binStep={apiVaultInfo?.binStep}\n                    displayFee={apiVaultInfo?.feeDisplay}\n                  />\n                </HStack>\n                {(apiVaultInfo?.category === 'haedal' || apiVaultInfo?.category === 'cetus-dlmm') && <PoweredByHaedal category=\"haedal\" mt=\"0px\" />}\n              </VStack>\n            </HStack>\n            <Icon\n              fontSize=\"12px\"\n              xlinkHref=\"#icon-icon_arrow\"\n              transition=\"transform 0.5s\"\n              transform={menuDisclosure.isOpen ? 'rotate(180deg)' : 'rotate(0deg)'}\n              svgFill={isHover ? 'text_caption' : 'text_paragraph'}\n            />\n          </HStack>\n        </MenuButton>\n        <MenuList w={{ base: 'calc(100vw - 24px)', lg: 'unset' }} p=\"0\" mt=\"0\">\n          <MenuItem closeOnSelect={false} p=\"0\" w=\"100%\">\n            <VStack w={{ base: '100%', lg: '540px' }} p=\"16px 0px 0px\" gap={{ base: '12px', lg: '16px' }}>\n              <HStack w=\"100%\" p={{ base: '0 12px', lg: '0 16px' }}>\n                <VaultsTabList\n                  currentTab={currentTab}\n                  onClickVaultsTab={handleVaultsTab}\n                  vaultsTabWrapStyle={{\n                    flexWrap: { base: 'wrap' },\n                    gap: { base: '8px', lg: '8px' }\n                  }}\n                  vaultsTabItemStyle={{\n                    width: { base: 'auto', lg: '' },\n                    p: { base: '6px 10px', lg: '10px 12px' },\n                    border: '1px solid',\n                    borderColor: 'border'\n                  }}\n                />\n              </HStack>\n              <Box p=\"0\" h=\"32px\" bg=\"bg_secondary\" w=\"100%\" zIndex=\"9999\">\n                <Table\n                  rowKey=\"vaults1\"\n                  columns={columnsList}\n                  dataSource={null}\n                  skeletonLength={3}\n                  loading={false}\n                  isFlexStart={true}\n                  trPadding=\"0px\"\n                />\n              </Box>\n              <Box w=\"100%\" maxH=\"475px\" overflowY=\"auto\" p=\"0 4px 4px\" mt=\"-30px\">\n                <Table\n                  rowKey=\"vaults\"\n                  columns={getColumns()}\n                  dataSource={vaultPageList}\n                  skeletonLength={3}\n                  loading={false}\n                  isFlexStart={true}\n                  trPadding=\"0px\"\n                  tableContainerWrapStyle={{\n                    minH: '200px'\n                  }}\n                  onRowClick={(item: any) => {\n                    menuDisclosure.onClose()\n                    setCurrTab('Deposit')\n                    setAssetAction('both')\n                    setIsCheckedZAP(false)\n                    setVaultCurrTab('Overview')\n                    setFromToken(item.displayTokenA)\n                    setToToken(item.displayTokenB)\n                    setVaultsFarmingStakeLoading(true)\n                    setVaultsFarmingRewardsLoading(true)\n                    navigate(`/vaults-detail/${item.vaultId}/${item.category}`)\n                  }}\n                  rowStyle={{\n                    h: '70px',\n                    cursor: 'pointer',\n                    _hover: { bg: 'primary_opacity.10)' }\n                  }}\n                />\n              </Box>\n            </VStack>\n          </MenuItem>\n        </MenuList>\n      </Menu>\n    </HStack>\n  )\n}\n","import useCalculateVaultFarmingApr from '@/hooks/vaults-farming/useCalculateVaultFarmingApr'\nimport useCurrentVaultsFarm from '@/hooks/vaults-farming/useCurrentVaultsFarm'\nimport { VaultV2ApiInfo } from '@/types/vaults-v2'\nimport { AddressCopyLink, CetusTooltip, SelectTab, TooltipIcon } from '@cetus/design'\nimport useExplorer from '@cetus/hooks/src/useExplorer'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { HTextLabelBox } from '@cetus/ui-kit'\nimport { symbolDataDisplayProcessing } from '@cetus/utils'\nimport { Center, HStack, Stack, Text, VStack } from '@chakra-ui/react'\nimport VaultsAprBlock from '../list/common/VaultsAprBlock'\nimport { CoinImage } from '../list/common/VaultsRewardsBlock'\nimport VaultsPoolSelect from './VaultsPoolSelect'\n\ntype VaultsHeaderProps = {\n  apiVaultInfo: VaultV2ApiInfo\n  vaultTvl: string\n  performanceFee: string\n  vaultTabList: any\n  vaultCurrTab: string\n  setVaultCurrTab: (item: any) => void\n  vaultsList?: any\n}\n\nexport function VaultsHeader({ apiVaultInfo, vaultTvl, performanceFee, vaultTabList, vaultCurrTab, setVaultCurrTab, vaultsList }: VaultsHeaderProps) {\n  const { isApp } = useWindowWidth()\n  const { getExplorerUrl } = useExplorer()\n  const { currentVaultsFarm, isVaultsFarming } = useCurrentVaultsFarm(apiVaultInfo?.vaultId)\n  const { vaultFarmingAprDisplay } = useCalculateVaultFarmingApr(currentVaultsFarm)\n\n  return (\n    <Stack\n      mb=\"16px\"\n      flexDir={{ base: 'column', lg: 'row' }}\n      w=\"100%\"\n      alignItems=\"flex-end\"\n      justifyContent=\"space-between\"\n      gap={{ base: '12px', lg: '8px' }}\n    >\n      <VStack w={{ base: '100%', lg: 'unset' }} gap=\"4px\" align=\"flex-start\">\n        <VaultsPoolSelect isVaultsFarming={isVaultsFarming} apiVaultInfo={apiVaultInfo} vaultsList={vaultsList} setVaultCurrTab={setVaultCurrTab} />\n        {!isApp && (\n          <SelectTab\n            type=\"borderTab\"\n            wrapStyle={{\n              w: '100%',\n              h: '60px',\n              bg: 'none',\n              border: 'none'\n            }}\n            itemStyle={{\n              fontSize: '16px',\n              mr: '28px'\n            }}\n            tabList={vaultTabList}\n            currentTab={vaultCurrTab}\n            handleChangeTab={(item: any) => {\n              setVaultCurrTab(item?.value)\n            }}\n          />\n        )}\n      </VStack>\n      {/* 右边区域 */}\n      <Stack w={{ base: '100%', lg: 'unset' }} flexDir={{ base: 'column', lg: 'row' }} gap={{ base: '8px', lg: '28px' }}>\n        {isApp && (\n          <HTextLabelBox\n            label=\"Vault Address\"\n            labelStyle={{\n              fontSize: '14px'\n            }}\n            value={\n              <AddressCopyLink\n                fontSize=\"14px\"\n                color=\"text_caption\"\n                address={apiVaultInfo?.vaultId || ''}\n                onClickLink={() => {\n                  window.open(getExplorerUrl(apiVaultInfo?.vaultId, 'poolAddress'), '_blank')\n                }}\n              />\n            }\n          />\n        )}\n        <VStack w={{ base: '100%', lg: 'unset' }} justify=\"space-between\" gap=\"6px\" flexDirection={{ base: 'row', lg: 'column' }}>\n          {!isApp ? (\n            <>\n              <Text w=\"100%\" fontSize={{ base: '14px', lg: '12px' }} textAlign={isApp ? 'left' : 'right'}>\n                APY\n              </Text>\n              <VaultsAprBlock\n                vaultId={apiVaultInfo?.vaultId}\n                wrapStyle={{\n                  flexDirection: 'row',\n                  h: '20px'\n                }}\n                farmingTextStyle={{\n                  p: '4px'\n                }}\n              />\n            </>\n          ) : (\n            <HTextLabelBox\n              wrapStyle={{\n                w: '100%',\n                gap: '6px'\n              }}\n              label=\"APY\"\n              labelStyle={{\n                fontSize: '14px',\n                fontWeight: '500'\n              }}\n              value={\n                <VaultsAprBlock\n                  vaultId={apiVaultInfo?.vaultId}\n                  wrapStyle={{\n                    flexDirection: 'row',\n                    alignItems: 'center'\n                  }}\n                  farmingTextStyle={{\n                    p: '0 6px'\n                  }}\n                />\n              }\n              valueStyle={{\n                color: 'text_highlight',\n                h: '20px',\n                lineHeight: '20px',\n                fontSize: '14px',\n                fontWeight: '500',\n                textDecoration: 'none'\n              }}\n            />\n          )}\n        </VStack>\n        <VStack w={{ base: '100%', lg: 'unset' }} justify=\"space-between\" gap=\"6px\" flexDirection={{ base: 'row', lg: 'column' }}>\n          <Text w=\"100%\" fontSize={{ base: '14px', lg: '12px' }} textAlign={isApp ? 'left' : 'right'}>\n            Earnings\n          </Text>\n          <CetusTooltip\n            placement=\"top\"\n            tooltip={\n              <Text fontSize=\"12px\" lineHeight=\"20px\" maxW=\"240px\">\n                Rewards will be auto harvested and compounded to your position.\n              </Text>\n            }\n          >\n            <Center>\n              <HStack justifyContent=\"end\">\n                {apiVaultInfo?.vaultsRewards.map(coinType => {\n                  return <CoinImage key={coinType} coinType={coinType} />\n                })}\n              </HStack>\n            </Center>\n          </CetusTooltip>\n        </VStack>\n        <VStack w={{ base: '100%', lg: 'unset' }} justify=\"space-between\" gap=\"6px\" flexDirection={{ base: 'row', lg: 'column' }}>\n          <Text w=\"100%\" fontSize={{ base: '14px', lg: '12px' }} textAlign={isApp ? 'left' : 'right'}>\n            TVL\n          </Text>\n          <Text color=\"text_caption\" h=\"20px\" lineHeight=\"20px\" fontWeight=\"500\">\n            {(apiVaultInfo?.category == 'haedal' || apiVaultInfo?.category == 'cetus-dlmm'\n              ? symbolDataDisplayProcessing(vaultTvl, '$')\n              : apiVaultInfo?.vaultsTvlDisplay) || '-'}\n          </Text>\n        </VStack>\n        {apiVaultInfo?.category == 'haedal' ||\n          (apiVaultInfo?.category == 'cetus-dlmm' && (\n            <VStack\n              w={{ base: '100%', lg: 'unset' }}\n              justify=\"space-between\"\n              align={{ base: 'center', lg: 'flex-end' }}\n              gap=\"6px\"\n              flexDirection={{ base: 'row', lg: 'column' }}\n            >\n              <HStack gap=\"4px\" mt=\"-4px\">\n                <Text w=\"100%\" fontSize={{ base: '14px', lg: '12px' }}>\n                  Performance Fee\n                </Text>\n                <TooltipIcon maxW=\"340px\" tooltipCon=\"Commission charged from earned fees and rewards\" />\n              </HStack>\n              <Text color=\"text_caption\" h=\"20px\" lineHeight=\"20px\" fontWeight=\"500\">\n                {performanceFee || '-'}\n              </Text>\n            </VStack>\n          ))}\n      </Stack>\n    </Stack>\n  )\n}\n","import useGetPythLastPrice from '@/hooks/vault-v2/pyth-price/useGetPythLastPrice'\nimport useCurrentVaultDetail from '@/hooks/vault-v2/useCurrentVaultDetail'\nimport useVaultAvaiableCapacity from '@/hooks/vault-v2/useVaultAvaiableCapacity'\nimport useVaultHoadings from '@/hooks/vault-v2/useVaultsHoldings'\nimport useCurrentVaultsFarm from '@/hooks/vaults-farming/useCurrentVaultsFarm'\nimport useGetVaultsFarmingApiInfo from '@/hooks/vaults-farming/useGetVaultsFarmingApiInfo'\nimport useSwapWidgetStore from '@/store/swap-widget/swapWidget'\nimport useVaultsFarmingStore from '@/store/vaults-farming'\nimport useVaultsActionStore from '@/store/vaults-v2/useVaultsAction'\nimport useVaultsListV2Store from '@/store/vaults-v2/useVaultsList'\nimport useVaultsPoolStore from '@/store/vaults-v2/useVaultsPool'\nimport useVaultsPoolContractStore from '@/store/vaults-v2/useVaultsPoolContract'\nimport useVaultsPositionStore from '@/store/vaults-v2/useVaultsPosition'\nimport { Block, SelectTab } from '@cetus/design'\nimport { useAccountBalance, useInterval } from '@cetus/hooks'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { useSdkStore } from '@cetus/sdk-factory'\nimport { useAccountStore } from '@cetus/stores'\nimport usePeripherySDKStore from '@cetus/stores/src/usePeripherySDKStore'\nimport envConfigs from '@cetus/types/src/config/envConfigs'\nimport { BackButton, NoData, RefreshButton } from '@cetus/ui-kit'\nimport { formatNumber, isAvailableObject } from '@cetus/utils'\nimport { BinUtils } from '@cetusprotocol/dlmm-sdk'\nimport { Vault } from '@cetusprotocol/vaults-sdk'\nimport { Box, Button, HStack, Stack, Text, VStack } from '@chakra-ui/react'\nimport { buildVaultsBalanceV2 } from 'kk-vault-sdk'\nimport { useEffect, useMemo, useRef, useState } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport FarmingOverview from '../farming/FarmingOverview'\nimport ApyAndFeesChartBlock from './chart/ApyAndFeesChartBlock'\nimport PriceRangeChartPageBlock from './chart/PriceRangeChartPageBlock'\nimport TvlChartPageBlock from './chart/TvlChartPageBlock'\nimport { MyLiquidity } from './MyLiquidity'\nimport { PositionRange } from './PositionRange'\nimport VaultsAction from './VaultsAction'\nimport { VaultsComposition } from './VaultsComposition'\nimport { VaultsHeader } from './VaultsHeader'\n\nexport default function VaultsDetailPage() {\n  const navigate = useNavigate()\n  const { vaultId, category = 'cetus' } = useParams()\n  const { getCurrentVaultDetail } = useCurrentVaultDetail()\n  const { currentAccount } = useAccountStore()\n  const { clearVaultsActionData, setFromToken, setToToken } = useVaultsActionStore()\n  const { currentVaultPosition, currentVaultPositionLoading, clearVaultsPositionObj, setCurrentVaultPosition } = useVaultsPositionStore()\n  const { vaultsPoolObj } = useVaultsPoolStore()\n  const { vaultListObj, lpTokenInfoObj, vaultsList } = useVaultsListV2Store()\n  const { haedalFarmSdk } = usePeripherySDKStore()\n  const { fetchAccountBalance } = useAccountBalance()\n  const { getCurrentVaultContractInfo } = useCurrentVaultDetail()\n  const [isAvailableVaultId, setIsAvailableVaultId] = useState(true)\n  const { setFromCoin, setToCoin } = useSwapWidgetStore()\n\n  const currentVaultPool = useMemo(() => {\n    return vaultsPoolObj[vaultId as string]\n  }, [vaultsPoolObj, vaultId])\n  const { isInitialized } = useSdkStore()\n\n  const { vaultsFarmObj, clearVaultsFarmingInfo } = useVaultsFarmingStore()\n\n  const currentVaultPositionInfo = useMemo(() => {\n    return currentVaultPosition\n  }, [currentVaultPosition, vaultId])\n\n  useEffect(() => {\n    if (!currentAccount?.address) {\n      clearVaultsPositionObj()\n      setCurrentVaultPosition({})\n    }\n  }, [currentAccount?.address])\n\n  useEffect(() => {\n    if (vaultId && isAvailableObject(vaultListObj)) {\n      const res = Object.values(vaultListObj)?.filter((item: any) => {\n        return item.vaultId == vaultId\n      })\n      if (res?.length > 0) {\n        console.log('🚀 ~ res ~ res:', res)\n        setIsAvailableVaultId(true)\n      } else {\n        setIsAvailableVaultId(false)\n      }\n    }\n  }, [vaultId, vaultListObj])\n\n  const apiVaultInfo = useMemo(() => {\n    if (isAvailableObject(vaultListObj) && vaultId) {\n      return vaultListObj[vaultId]\n    }\n    return\n  }, [vaultListObj, vaultId])\n\n  useEffect(() => {\n    if (\n      vaultId &&\n      isInitialized &&\n      isAvailableObject(vaultsFarmObj) &&\n      (currentAccount?.address == haedalFarmSdk?.senderAddress || !currentAccount?.address)\n    ) {\n      getCurrentVaultDetail(vaultId as string, false)\n    }\n  }, [currentAccount?.address, vaultId, isInitialized, vaultsFarmObj, haedalFarmSdk?.senderAddress])\n\n  const lpTokenInfo = useMemo(() => {\n    return lpTokenInfoObj[apiVaultInfo?.lpTokenType]\n  }, [apiVaultInfo?.lpTokenType, JSON.stringify(lpTokenInfoObj)])\n\n  const vaultTabList = [\n    {\n      label: 'Overview',\n      value: 'Overview'\n    },\n    {\n      label: 'Analytics',\n      value: 'Analytics'\n    }\n  ]\n\n  const [vaultCurrTab, setVaultCurrTab] = useState('Overview')\n\n  const { holdingAmountDisplay, holdCoinAValue, holdCoinBValue } = useVaultHoadings(\n    currentVaultPosition?.displayAmountA,\n    currentVaultPosition?.displayAmountB,\n    currentVaultPosition?.displayCoinTypeA,\n    currentVaultPosition?.displayCoinTypeB,\n    undefined,\n    undefined,\n    category as string\n  )\n\n  const {\n    holdingAmount: vaultTvl,\n    holdCoinAValue: poolHoldCoinAValue,\n    holdCoinBValue: poolHoldCoinBValue\n  } = useVaultHoadings(\n    currentVaultPool?.displayAmountA,\n    currentVaultPool?.displayAmountB,\n    currentVaultPool?.displayCoinTypeA,\n    currentVaultPool?.displayCoinTypeB,\n    undefined,\n    undefined,\n    category as string\n  )\n\n  const [chartRefresh, setChartRefresh] = useState(false)\n  const { getPythLastPrice } = useGetPythLastPrice()\n\n  useInterval({\n    interval: 20 * 1000,\n    callback: () => {\n      if (isMountedRef.current && (category == 'haedal' || category == 'cetus-dlmm')) {\n        getPythLastPrice([currentVaultPool?.displayCoinTypeA, currentVaultPool?.displayCoinTypeB])\n      }\n    }\n  })\n\n  const isMountedRef = useRef(false)\n\n  useEffect(() => {\n    isMountedRef.current = true\n    clearVaultsActionData()\n\n    return () => {\n      isMountedRef.current = false\n      clearVaultsActionData()\n      setFromToken({})\n      setToToken({})\n      setCurrentVaultPosition({})\n    }\n  }, [])\n\n  const autoRefresh = () => {\n    if (currentAccount?.address) {\n      // 刷新余额\n      fetchAccountBalance()\n      getCurrentVaultDetail(vaultId as string, true)\n    } else {\n      getCurrentVaultContractInfo(vaultId as string)\n    }\n\n    if (vaultCurrTab !== 'Overview') {\n      setChartRefresh(true)\n      setTimeout(() => {\n        setChartRefresh(false)\n      }, 1000)\n    }\n  }\n\n  const avaiableCapacityInfo = useVaultAvaiableCapacity(currentVaultPool)\n\n  const { isApp } = useWindowWidth()\n\n  useEffect(() => {\n    if (apiVaultInfo) {\n      setFromCoin(apiVaultInfo?.displayTokenA)\n      setToCoin(apiVaultInfo?.displayTokenB)\n    }\n    return () => {\n      setFromCoin(envConfigs.clmm_swap.from_coin)\n      setToCoin(envConfigs.clmm_swap.to_coin)\n    }\n  }, [apiVaultInfo?.vaultsId, vaultId])\n\n  const [isRefresh, setIsRefresh] = useState(false)\n\n  const handleRefresh = () => {\n    autoRefresh()\n    setIsRefresh(prev => !prev)\n  }\n\n  const { getHaedalFarmingList } = useGetVaultsFarmingApiInfo()\n  // 页面刷新重新获取\n  useEffect(() => {\n    if (!isAvailableObject(vaultsFarmObj)) {\n      getHaedalFarmingList()\n    }\n  }, [vaultsFarmObj])\n\n  const { isVaultsFarming, currentVaultsFarm } = useCurrentVaultsFarm(vaultId)\n\n  useEffect(() => {\n    if (!currentAccount?.address) {\n      clearVaultsFarmingInfo()\n    }\n  }, [currentAccount?.address])\n\n  const { volatileVaultsSdk } = usePeripherySDKStore()\n\n  const { dlmmVaultContractInfoObj, vaultDlmmPoolContractInfoObj } = useVaultsPoolContractStore()\n\n  const vaultContractInfo = useMemo(() => {\n    return dlmmVaultContractInfoObj[vaultId as string]\n  }, [dlmmVaultContractInfoObj, vaultId])\n  console.log('🚀🚀🚀 ~ VaultsDetailPage.tsx:233 ~ VaultsDetailPage ~ vaultContractInfo:', vaultContractInfo)\n\n  const poolContractInfo = useMemo(() => {\n    console.log('🚀🚀🚀 ~ VaultsDetailPage.tsx:236 ~ VaultsDetailPage ~ vaultDlmmPoolContractInfoObj:', vaultDlmmPoolContractInfoObj)\n    console.log('🚀🚀🚀 ~ VaultsDetailPage.tsx:238 ~ VaultsDetailPage ~ currentVaultPool:', currentVaultPool)\n    return vaultDlmmPoolContractInfoObj[currentVaultPool?.dlmmPoolAddress as string]\n  }, [vaultDlmmPoolContractInfoObj, currentVaultPool?.dlmmPoolAddress])\n  console.log('🚀🚀🚀 ~ VaultsDetailPage.tsx:233 ~ VaultsDetailPage ~ poolContractInfo:', poolContractInfo)\n\n  useEffect(() => {\n    // TODO 给测试临时打印\n    if (currentVaultPool && vaultContractInfo && poolContractInfo) {\n      buildVaultsBalanceV2(volatileVaultsSdk, currentVaultPool.totalSupply, vaultContractInfo as Vault, poolContractInfo, '').then(res => {\n        const { original_lower_bin_id, original_upper_bin_id } = res\n\n        const original_lower_bin_id_price = BinUtils.getPricePerLamportFromBinId(original_lower_bin_id, poolContractInfo.bin_step)\n        const original_upper_bin_id_price = BinUtils.getPricePerLamportFromBinId(original_upper_bin_id, poolContractInfo.bin_step)\n\n        console.log('🚀🚀🚀 ~ VaultsDetailPage.tsx:246 ~ VaultsDetailPage ~ res:', {\n          ...res,\n          original_lower_bin_id_price,\n          original_upper_bin_id_price\n        })\n      })\n    }\n  }, [vaultContractInfo, poolContractInfo, currentVaultPool])\n\n  // buildVaultsBalanceV2(volatileVaultsSdk, balance.totalBalance, vaultContractInfo as Vault, poolContractInfo, account)\n\n  return (\n    <Box pt=\"32px\" w={{ base: '100%', lg: '1160px' }}>\n      {isAvailableVaultId ? (\n        <VStack gap=\"0px\" w=\"100%\" align=\"flex-start\">\n          <HStack w=\"100%\" justify=\"space-between\" mb=\"20px\">\n            <BackButton borderColor=\"border_secondary\" onClick={() => navigate('/vaults')} />\n            <RefreshButton\n              handleRefresh={() => handleRefresh()}\n              isAutoRefresh={true}\n              refreshInterval={20}\n              innerStyle={{ bg: 'bg_secondary' }}\n              w=\"32px\"\n              h=\"32px\"\n              borderRadius=\"8px\"\n              bg=\"bg_secondary\"\n            />\n          </HStack>\n          {/* 头部区域 */}\n          <VaultsHeader\n            vaultTabList={vaultTabList}\n            vaultCurrTab={vaultCurrTab}\n            setVaultCurrTab={setVaultCurrTab}\n            apiVaultInfo={apiVaultInfo}\n            vaultTvl={vaultTvl}\n            performanceFee={currentVaultPool?.disPlayProtocolFeeRate}\n            vaultsList={vaultsList}\n          />\n          <Stack\n            flexDir={{ base: 'column-reverse', lg: 'row' }}\n            w=\"100%\"\n            justifyContent=\"space-between\"\n            gap={{ base: '0px', lg: '16px' }}\n            alignItems=\"start\"\n          >\n            {/* 左边区域 */}\n\n            <VStack width=\"100%\" flex=\"1\" gap=\"12px\">\n              {isApp && (\n                <SelectTab\n                  type=\"borderTab\"\n                  wrapStyle={{\n                    w: '100%',\n                    h: '60px',\n                    bg: 'none',\n                    border: 'none'\n                  }}\n                  itemStyle={{\n                    fontSize: '16px',\n                    mr: '28px'\n                  }}\n                  tabList={vaultTabList}\n                  currentTab={vaultCurrTab}\n                  handleChangeTab={(item: any) => {\n                    setVaultCurrTab(item?.value)\n                  }}\n                />\n              )}\n              {vaultCurrTab == 'Overview' ? (\n                <>\n                  {/* 价格区间 */}\n                  <PositionRange\n                    minPrice={currentVaultPool?.minPrice}\n                    maxPrice={currentVaultPool?.maxPrice}\n                    currentPrice={currentVaultPool?.currentPrice}\n                    displayTokenA={apiVaultInfo?.displayTokenA}\n                    displayTokenB={apiVaultInfo?.displayTokenB}\n                  />\n                  {/* 池子 token 分配 */}\n                  <VaultsComposition\n                    displayAmountA={currentVaultPool?.displayAmountA}\n                    displayAmountB={currentVaultPool?.displayAmountB}\n                    displayPercentA={currentVaultPool?.displayPercentA}\n                    displayPercentB={currentVaultPool?.displayPercentB}\n                    displayTokenB={apiVaultInfo?.displayTokenB}\n                    displayTokenA={apiVaultInfo?.displayTokenA}\n                    vaultsCoinAValue={currentVaultPool?.displayAmountA ? poolHoldCoinAValue : ''}\n                    vaultsCoinBValue={currentVaultPool?.displayAmountB ? poolHoldCoinBValue : ''}\n                    depositRatio={avaiableCapacityInfo?.depositRatio}\n                    hardCapUSD={avaiableCapacityInfo?.hardCapUSD}\n                    vaultTvl={vaultTvl}\n                  />\n                  {/* 我的流动性 */}\n                  <MyLiquidity\n                    lpTokenInfo={lpTokenInfo}\n                    sharePoolRate={currentVaultPositionLoading ? '' : currentVaultPositionInfo?.shartOfPoolDisplay || 0}\n                    balanceDisplay={currentVaultPositionLoading ? '' : currentVaultPositionInfo?.balanceDisplay || 0}\n                    totalHolding={currentVaultPositionLoading ? '' : holdingAmountDisplay || ''}\n                    displayTokenB={apiVaultInfo?.displayTokenB}\n                    displayTokenA={apiVaultInfo?.displayTokenA}\n                    holdCoinAmounts={{\n                      displayCoinA: currentVaultPositionLoading ? '' : formatNumber(currentVaultPositionInfo?.displayAmountA, 6) || '--',\n                      displayCoinB: currentVaultPositionLoading ? '' : formatNumber(currentVaultPositionInfo?.displayAmountB, 6) || '--'\n                    }}\n                    holdCoinAValue={holdCoinAValue}\n                    holdCoinBValue={holdCoinBValue}\n                  />\n                </>\n              ) : (\n                <>\n                  <TvlChartPageBlock isRefresh={chartRefresh} vaultsId={apiVaultInfo?.vaultId} category={apiVaultInfo?.category} />\n                  <ApyAndFeesChartBlock isRefresh={chartRefresh} vaultsId={apiVaultInfo?.vaultId} category={apiVaultInfo?.category} />\n                  <PriceRangeChartPageBlock\n                    isRefresh={chartRefresh}\n                    vaultsId={apiVaultInfo?.vaultId}\n                    isReverse={apiVaultInfo?.isReverse}\n                    category={apiVaultInfo?.category}\n                  />\n                </>\n              )}\n            </VStack>\n            <VStack w={isApp ? '100%' : '40%'} gap=\"12px\">\n              <Block borderRadius=\"16px\" border=\"none\" p={{ base: '0px 8px 16px', lg: '0 16px 20px' }} bg=\"card_bg\">\n                <VaultsAction autoRefresh={autoRefresh} vaultId={vaultId as string} isRefresh={isRefresh} isModal={false} />\n              </Block>\n              {isVaultsFarming && <FarmingOverview vaultId={apiVaultInfo?.vaultId} />}\n            </VStack>\n          </Stack>\n        </VStack>\n      ) : (\n        <NoData type=\"custom\" imgUrl=\"/images/img_pool@2x.png\" h=\"480px\">\n          <VStack>\n            <Text h=\"20px\" lineHeight=\"20px\" fontSize=\"14px\" color=\"text_caption\">\n              Pool address not found\n            </Text>\n            <Button\n              mt=\"12px\"\n              w=\"120px\"\n              h=\"32px\"\n              borderRadius=\"8px\"\n              colorScheme=\"blue\"\n              fontSize=\"14px\"\n              fontWeight=\"500\"\n              onClick={() => {\n                navigate('/vaults')\n              }}\n            >\n              Back to Vault\n            </Button>\n          </VStack>\n        </NoData>\n      )}\n    </Box>\n  )\n}\n"],"names":["icon_currentprice","PositionPriceRange","props","displayMaxPrice","displayMinPrice","displayPrice","isLoading","isApp","useWindowWidth","fallbackWidth","currentElementWidth","setCurrentElementWidth","useState","currentElementRef","useRef","actualWidth","positionPriceRangeLoading","useMemo","useEffect","getElementWidth","resizeObserver","isActive","d","sliderML","jsx","Fragment","Flex","Box","Spinner","jsxs","HStack","VStack","Text","Skeleton","Comma","formatNumber","Decimal","Center","Image","FarmingOverview","vaultId","isOpenFarmingModal","setIsOpenFarmingModal","farmingModalAction","setFarmingModalAction","vaultFarmingAprDisplay","vaultFarmingLoading","farmingTvlDisplay","stakeVaultFarmingTvl","vaultFarmingRewardAmountUSD","vaultFarmingRewardLoading","farmClaimAction","farmClaimLoading","vaultsFarmingStaked","currentVaultPositionLoading","currentVaultPositionInfo","stakeButtonDisabled","claimButtonDisabled","unStakeButtonDisabled","holdingVaultAmountDisplay","vaultsFarmingRewards","currentVaultsFarm","vaultsFarmingStakeLoading","currentVaultsFarmingStaked","useVaultFarmingOverview","currentAccount","useAccountStore","stakeLoading","VTextLabelBox","HTextLabelBox","item","SingleCoinImage","_a","_b","_c","Button","symbolDataDisplayProcessing","CetusTooltip","rewardInfo","RewardItem","FarmingModal","ApyAndFeesChart","data","dateType","quoteCoin","category","hidden","setHidden","legendPayload","ticks","min","max","tick4","tick0","interval","_","i","ticksFee","getXData","dataLength","value","date","hours","minutes","day","month","period","displayHours","ResponsiveContainer","ComposedChart","XAxis","YAxis","CustomizedApyAndFeesYAxisTick","CustomizedApyAndFeesRightYAxisTick","Tooltip","ApyAndFeesChartTooltip","Legend","Bar","Line","useGetVaultApyAndFeesHistogram","fetchByApi","useFetch","params","requestParams","options","pickBy","identity","res","VaultUnStableLpFeeHistogram","VaultStableLpFeeHistogram","index","timestampMs","monthIndex","formatTimestamp","error","ApyAndFeesChartBlock","isRefresh","vaultsId","setIsLoading","chartData","setChartDate","setQuoteCoin","getTokenInfo","useGetToken","fetchToken","coinType","coinInfo","getVaultApyAndFeesHistogram","fetchPricerangeHistogram","now","oneDay","timeLimit","beginTimestamp","list","quote_type","Block","CustomPirceRangeTooltip","payload","label","lowerPriceSize","upperPriceSize","PriceRangeChart","isTabLoading","slicedData","LineChart","CustomizedVaultYAxisTick","useGetPriceRangeData","VaultUnstablePriceRangeHistogram","VaultStablePriceRangeHistogram","dayStrZeroPadding","PriceRangeChartPageBlock","isReverse","getPriceRangeData","priceRangeData","setPriceRangeDate","chartTypeList","setDateType","setIsTabLoading","type","result","lower","upper","real","SelectTab","tab","useGetVaultHistogram","getVaultHistogram","VaultUnstableHistogram","VaultStableHistogram","xAxis","noShowHours","step","TvlChartPageBlock","pureTvlChartData","setPureTvlChartData","pureTvlCurrentData","setPureTvlCurrentData","currentPureTvlCurrentData","setCurrentPureTvlCurrentDatC","handleGetHistogramTvlData","tvl_res","handleChangePureTvl","formatCurrency","TvlChart","NoData","MyLiquidity","balanceDisplay","holdCoinAmounts","lpTokenInfo","displayTokenA","displayTokenB","sharePoolRate","totalHolding","holdCoinAValue","holdCoinBValue","SingleTokenInfo","textEllipses","Stack","useDisplayPrice","price","changeSide","useDisplayTickPrice","minPrice","maxPrice","PositionRange","currentPrice","setChangeSide","baseCoin","rangeTabList","currentRangeTab","setCurrentRangeTab","onReverseClick","VaultsComposition","displayAmountA","displayAmountB","displayPercentA","displayPercentB","vaultsCoinAValue","vaultsCoinBValue","depositRatio","hardCapUSD","vaultTvl","AumLimit","Progress","VaultsPoolSelect","apiVaultInfo","vaultsList","setVaultCurrTab","menuDisclosure","useDisclosure","currentTab","setCurrentTab","navigate","useNavigate","vaultPageList","filterVaultList","setVaultPageList","useVaultList","vaultsFarmObj","useVaultsFarmingStore","setAssetAction","setIsCheckedZAP","setCurrTab","setFromToken","setToToken","useVaultsActionStore","setVaultsFarmingStakeLoading","setVaultsFarmingRewardsLoading","isHover","setIsHover","a","b","handleVaultsTab","columnsList","getColumns","CoinPairInfo","VaultsAprBlock","Menu","MenuButton","CoinPairImage","_d","_e","_f","PoolTag","PoweredByHaedal","Icon","MenuList","MenuItem","VaultsTabList","Table","VaultsHeader","performanceFee","vaultTabList","vaultCurrTab","getExplorerUrl","useExplorer","isVaultsFarming","useCurrentVaultsFarm","useCalculateVaultFarmingApr","AddressCopyLink","CoinImage","TooltipIcon","VaultsDetailPage","useParams","getCurrentVaultDetail","useCurrentVaultDetail","clearVaultsActionData","currentVaultPosition","clearVaultsPositionObj","setCurrentVaultPosition","useVaultsPositionStore","vaultsPoolObj","useVaultsPoolStore","vaultListObj","lpTokenInfoObj","useVaultsListV2Store","haedalFarmSdk","usePeripherySDKStore","fetchAccountBalance","useAccountBalance","getCurrentVaultContractInfo","isAvailableVaultId","setIsAvailableVaultId","setFromCoin","setToCoin","useSwapWidgetStore","currentVaultPool","isInitialized","useSdkStore","clearVaultsFarmingInfo","isAvailableObject","holdingAmountDisplay","useVaultHoadings","poolHoldCoinAValue","poolHoldCoinBValue","chartRefresh","setChartRefresh","getPythLastPrice","useGetPythLastPrice","useInterval","isMountedRef","autoRefresh","avaiableCapacityInfo","useVaultAvaiableCapacity","envConfigs","setIsRefresh","handleRefresh","prev","getHaedalFarmingList","useGetVaultsFarmingApiInfo","volatileVaultsSdk","dlmmVaultContractInfoObj","vaultDlmmPoolContractInfoObj","useVaultsPoolContractStore","vaultContractInfo","poolContractInfo","buildVaultsBalanceV2","original_lower_bin_id","original_upper_bin_id","original_lower_bin_id_price","BinUtils","original_upper_bin_id_price","BackButton","RefreshButton","VaultsAction"],"mappings":"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"}