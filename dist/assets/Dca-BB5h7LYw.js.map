{"version":3,"file":"Dca-BB5h7LYw.js","sources":["../../src/components/dca/DcaItem.tsx","../../src/components/dca/ActiveAndPastDcas.tsx","../../src/hooks/dca/useDcaConfig.ts","../../src/hooks/dca/useGetDcaQuote.ts","../../src/hooks/dca/useDcaHook.ts","../../src/hooks/dca/useGetDcaTokenList.ts","../../src/hooks/dca/useOpenDcaOrder.ts","../../src/components/dca/DetailsContent.tsx","../../src/components/dca/ConfirmModal.tsx","../../src/components/dca/DetailsBlock.tsx","../../src/components/dca/InvestAndOrders.tsx","../../src/components/dca/MinAndMaxPrice.tsx","../../../../../../../../../images/icon_currentprice@2x.png","../../src/components/dca/DcaInputBlock.tsx","../../src/pages/Dca.tsx"],"sourcesContent":["import useTokenRank from '@/hooks/common/useTokenRank'\nimport useDcaItemActions from '@/hooks/dca/useDcaItemActions'\nimport useExplorer from '@cetus/hooks/src/useExplorer'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { Icon } from '@cetus/ui-kit'\nimport { Button, HStack, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useState } from 'react'\nimport DcaItemCoinPirBlock from './DcaItemBlock/DcaItemCoinPirBlock'\nimport DcaProgressBlock from './DcaItemBlock/DcaProgressBlock'\nimport RangeValueBlock from './DcaItemBlock/RangeValueBlock'\nimport OverviewOrders from './OverviewOrders'\n\nexport default function DcaItem({ currentTabVal, orderInfo }: { currentTabVal: string; orderInfo: any }) {\n  const { isApp } = useWindowWidth()\n  const { inCoin: sellCoin, outCoin: buyCoin } = orderInfo\n  const [isDetail, setIsDetail] = useState(false)\n\n  useEffect(() => {\n    setIsDetail(false)\n  }, [currentTabVal])\n\n  const { getTokenRank } = useTokenRank()\n  const [pageDirect, setPageDirect] = useState(false)\n\n  useEffect(() => {\n    const direct = getTokenRank(sellCoin, buyCoin)\n    console.log('🚀 ~ useEffectDcaItem ~ direct:', buyCoin, sellCoin, direct)\n    setPageDirect(!direct)\n  }, [sellCoin?.coin_type, buyCoin?.coin_type])\n\n  const { closeOrderAction, isCloseLoading } = useDcaItemActions()\n  const closeOrder = async () => {\n    closeOrderAction(orderInfo)\n  }\n  const { getExplorerUrl } = useExplorer()\n  return (\n    <VStack w=\"100%\" gap=\"12px\" align=\"flex-start\">\n      <HStack w=\"100%\" justify=\"space-between\" flexDirection={{ base: 'column', lg: 'row' }} align={{ base: 'flex-start', lg: 'center' }}>\n        <HStack>\n          <DcaItemCoinPirBlock orderInfo={orderInfo} />\n          <Icon\n            xlinkHref=\"#icon-icon_link1\"\n            onClick={() => {\n              window.open(getExplorerUrl(orderInfo?.orderID, 'poolAddress'))\n            }}\n            fontSize=\"16px\"\n          />\n        </HStack>\n        {!isApp && (\n          <BtnContent\n            currentTabVal={currentTabVal}\n            isCloseLoading={isCloseLoading}\n            closeOrder={closeOrder}\n            orderInfo={orderInfo}\n            isDetail={isDetail}\n            onClickDetail={() => setIsDetail(!isDetail)}\n          />\n        )}\n      </HStack>\n      <DcaProgressBlock orderInfo={orderInfo} />\n      <HStack w=\"100%\">\n        <Text color=\"primary_gray\" fontSize=\"12px\">\n          Price Range\n        </Text>\n        <RangeValueBlock orderInfo={orderInfo} isRank={true} />\n      </HStack>\n      {isApp && (\n        <BtnContent\n          currentTabVal={currentTabVal}\n          isCloseLoading={isCloseLoading}\n          closeOrder={closeOrder}\n          orderInfo={orderInfo}\n          isDetail={isDetail}\n          onClickDetail={() => setIsDetail(!isDetail)}\n        />\n      )}\n      {isDetail && <OverviewOrders pageDirect={pageDirect} isDetail={isDetail} currentTabVal={currentTabVal} orderInfo={orderInfo} />}\n    </VStack>\n  )\n}\n\nconst BtnContent = ({\n  currentTabVal,\n  isCloseLoading,\n  closeOrder,\n  orderInfo,\n  isDetail,\n  onClickDetail\n}: {\n  currentTabVal: string\n  isCloseLoading: boolean\n  closeOrder: () => void\n  orderInfo: any\n  isDetail: boolean\n  onClickDetail: () => void\n}) => {\n  return (\n    <HStack w={{ base: '100%', lg: 'unset' }} flexDirection={{ base: 'column', lg: 'row' }}>\n      {currentTabVal == 'active' && (\n        <Button\n          w={{ base: '100%', lg: 'unset' }}\n          isLoading={isCloseLoading}\n          isDisabled={isCloseLoading}\n          onClick={closeOrder}\n          h=\"32px\"\n          minH=\"unset\"\n          p=\"0px 12px\"\n          fontSize=\"14px\"\n          borderRadius=\"8px\"\n          variant=\"outline\"\n        >\n          {orderInfo?.outBalance <= 0 ? 'Close' : 'Close and Withdraw'}\n        </Button>\n      )}\n      <Button\n        w={{ base: '100%', lg: 'unset' }}\n        h=\"32px\"\n        borderRadius=\"8px\"\n        minH=\"unset\"\n        p=\"0px 12px\"\n        fontSize=\"14px\"\n        variant=\"ghost\"\n        rightIcon={\n          <Icon\n            svgW=\"12px\"\n            svgH=\"12px\"\n            xlinkHref=\"#icon-icon_arrow\"\n            transform={isDetail ? 'rotate(180deg)' : 'rotate(0deg)'}\n            transition=\"transform 0.5s\"\n            ml=\"-4px\"\n            mr=\"-4px\"\n          />\n        }\n        onClick={onClickDetail}\n      >\n        Details\n      </Button>\n    </HStack>\n  )\n}\n","import useDcaActions from '@/hooks/dca/useDcaActions'\nimport { Block, SelectTab } from '@cetus/design'\nimport { Tab } from '@cetus/design/src/components/common/SelectTab'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { useAccountStore } from '@cetus/stores'\nimport { Icon, NoData, Pagination, RefreshButton } from '@cetus/ui-kit'\nimport { d } from '@cetus/utils'\nimport { Button, Center, HStack, Skeleton, SkeletonCircle, VStack } from '@chakra-ui/react'\nimport { useEffect, useMemo, useState } from 'react'\nimport DcaItem from './DcaItem'\n\nexport default function ActiveAndPastDcas({\n  handleRefresh,\n  activeList,\n  pastList,\n  isOrderLoading\n}: {\n  handleRefresh: (isLoading: boolean) => void\n  activeList: any\n  pastList: any\n  isOrderLoading: boolean\n}) {\n  const pageSize = 10\n  const [pageList, setPageList] = useState([])\n  const [paginationList, setPaginationList] = useState([])\n  const [total, setTotal] = useState(0)\n  const [currentPage, setCurrentPage] = useState(1)\n\n  const { currentAccount, onWalletModal } = useAccountStore()\n  const [currentTab, setCurrentTab] = useState<Tab>({\n    label: 'Active DCAs',\n    value: 'active'\n  })\n\n  const tabList: Tab[] = useMemo(\n    () => [\n      {\n        label: 'Active DCAs',\n        value: 'active',\n        num: activeList?.length > 0 ? activeList?.length : undefined\n      },\n      {\n        label: 'Past DCAs',\n        value: 'past',\n        num: pastList?.length > 0 ? pastList?.length : undefined\n      }\n    ],\n    [currentTab?.value, activeList, pastList]\n  )\n\n  const handleChangeTab = (item: Tab) => {\n    setCurrentPage(1)\n    setCurrentTab(item)\n  }\n\n  useEffect(() => {\n    const currentList = currentTab?.value === 'active' ? activeList : pastList\n    setPageList(currentList)\n    setTotal(currentList?.length)\n  }, [currentTab?.value, activeList, pastList])\n\n  useEffect(() => {\n    const start = (currentPage - 1) * pageSize\n    const end = start + pageSize\n    setPaginationList(pageList?.slice(start, end))\n  }, [currentPage, pageList, currentTab?.value])\n\n  const totalClaimNum = useMemo(() => {\n    if (currentTab?.value === 'past' || pageList?.length === 0) return 0\n    return pageList?.reduce((sum, orderInfo: any) => d(sum).plus(orderInfo?.outBalance as string), d(0)).toString()\n  }, [currentTab?.value, pageList])\n\n  const { closeAll, claimAll, isClaimAllLoading, isCloseAllLoading } = useDcaActions()\n\n  const { isApp } = useWindowWidth()\n\n  return (\n    <VStack w=\"100%\">\n      <HStack w=\"100%\" justify=\"space-between\" flexDirection={{ base: 'column', lg: 'row' }}>\n        <HStack w={{ base: '100%', lg: 'unset' }} justify=\"space-between\">\n          <SelectTab\n            type=\"borderTab\"\n            wrapStyle={{\n              w: { base: '100%', lg: '300px' },\n              h: '52px',\n              gap: '32px',\n              bg: 'none',\n              border: 'none',\n              mb: '8px'\n            }}\n            itemStyle={{ fontSize: '16px' }}\n            tabList={tabList}\n            currentTab={currentTab.label}\n            handleChangeTab={handleChangeTab}\n          />\n          {isApp && <RefreshButton handleRefresh={handleRefresh} w=\"28px\" h=\"28px\" innerStyle={{ bg: 'none' }} />}\n        </HStack>\n        <HStack w={{ base: '100%', lg: 'unset' }}>\n          {currentTab.value === 'active' && pageList?.length > 0 && currentAccount?.address && (\n            <Button\n              w={{ base: '50%', lg: 'unset' }}\n              h=\"28px\"\n              minH=\"unset\"\n              p=\"0 10px\"\n              fontSize=\"14px\"\n              borderRadius=\"8px\"\n              variant=\"outline\"\n              color=\"primary_gray\"\n              _hover={{\n                color: 'text_caption'\n              }}\n              isLoading={isClaimAllLoading}\n              isDisabled={Number(totalClaimNum) === 0 || isClaimAllLoading}\n              onClick={() => claimAll(pageList)}\n              leftIcon={<Icon xlinkHref=\"#icon-icon_incentive\" svgFill=\"primary\" mr=\"-4px\" ml=\"-4px\" />}\n            >\n              Claim all\n            </Button>\n          )}\n          {currentTab.value === 'active' && pageList?.length > 0 && currentAccount?.address && (\n            <Button\n              w={{ base: '50%', lg: 'unset' }}\n              isLoading={isCloseAllLoading}\n              isDisabled={pageList?.length == 0 || isCloseAllLoading}\n              h=\"28px\"\n              borderRadius=\"8px\"\n              minH=\"unset\"\n              p=\"0 12px\"\n              fontSize=\"14px\"\n              variant=\"outline\"\n              color=\"primary_gray\"\n              _hover={{\n                color: 'text_caption'\n              }}\n              onClick={() => closeAll(pageList)}\n            >\n              Close All\n            </Button>\n          )}\n          {!isApp && <RefreshButton handleRefresh={handleRefresh} w=\"28px\" h=\"28px\" innerStyle={{ bg: 'none' }} />}\n        </HStack>\n      </HStack>\n      {!currentAccount?.address ? (\n        <NoData type=\"nowallet\" onboard={() => onWalletModal(true)} />\n      ) : isOrderLoading ? (\n        <Block>\n          <VStack\n            gap=\"16px\"\n            sx={{ '>div': { borderBottom: '1px solid', borderColor: 'border', pb: '16px', _last: { borderBottom: 'none', pb: '0px' } } }}\n          >\n            {[{}, {}].map((item, index) => (\n              <OrderLoading key={index} />\n            ))}\n          </VStack>\n        </Block>\n      ) : pageList?.length === 0 ? (\n        <NoData type=\"nodata\" text={currentTab?.value === 'active' ? 'No active orders' : 'No closed orders'} />\n      ) : (\n        <Block h={paginationList?.length > 8 ? '927px' : 'unset'} overflowY=\"auto\" p={{ base: '12px', lg: '20px 16px' }}>\n          <VStack\n            gap=\"16px\"\n            sx={{ '>div': { borderBottom: '1px solid', borderColor: 'border', pb: '16px', _last: { borderBottom: 'none', pb: '0px' } } }}\n          >\n            {paginationList?.map((item: any) => <DcaItem key={item?.orderID} currentTabVal={currentTab.value} orderInfo={item} />)}\n          </VStack>\n          {!isOrderLoading && pageList?.length > pageSize && (\n            <Center mt=\"28px\">\n              <Pagination total={total} size={pageSize} currentPage={currentPage} onChange={setCurrentPage} />\n            </Center>\n          )}\n        </Block>\n      )}\n    </VStack>\n  )\n}\n\nconst OrderLoading = () => (\n  <VStack w=\"100%\" gap=\"16px\" align=\"flex-start\">\n    <HStack w=\"100%\" gap=\"0\" justify=\"space-between\">\n      <HStack gap=\"0\">\n        <HStack gap=\"0px\" mr=\"8px\" align=\"flex-start\">\n          <SkeletonCircle size=\"8\" />\n          <SkeletonCircle size=\"8\" />\n        </HStack>\n        <Skeleton height=\"4\" width=\"100px\" />\n      </HStack>\n      <Skeleton height=\"4\" width=\"150px\" />\n    </HStack>\n    <Skeleton height=\"4\" width=\"180px\" />\n  </VStack>\n)\n","import { DcaConfigPath } from '@/apis/path'\nimport useDcaStore from '@/store/dca'\nimport { DcaConfig } from '@/types/dca'\nimport { useFetch } from '@cetus/hooks'\nimport { useSdk } from '@cetus/sdk-factory'\n\nexport default function useDcaConfig() {\n  const { fetchByApi } = useFetch()\n  const dcaSdk = useSdk('dca')\n  const { setDcaConfig } = useDcaStore()\n\n  const getDcaConfigFromApi = async () => {\n    const res = await fetchByApi(DcaConfigPath, 'GET')\n    return res || null\n  }\n\n  const getDcaConfigFromContract = async () => {\n    const data = await dcaSdk!.Dca.getDcaGlobalConfig()\n    return data\n  }\n\n  const getDcaConfig = async () => {\n    const dcaConfig: DcaConfig = {}\n    try {\n      const apiConfig = await getDcaConfigFromApi()\n      if (apiConfig) {\n        dcaConfig['minCycleAmountInUsd'] = apiConfig?.min_amount_in_usd\n      }\n    } catch (error) {\n      console.log('🚀 ~ file: useDcaConfig.ts:22 ~ getDcaConfig ~ error:', error)\n    }\n\n    try {\n      const contractConfig = await getDcaConfigFromContract()\n      dcaConfig['minCycleCount'] = contractConfig?.min_cycle_count\n      dcaConfig['minCycleFrequency'] = contractConfig?.min_cycle_frequency\n      dcaConfig['whitelistMode'] = contractConfig?.whitelist_mode\n    } catch (error) {\n      console.log('🚀 ~ file: useDcaConfig.ts:32 ~ getDcaConfig ~ error:', error)\n    }\n\n    console.log('🚀🚀🚀 ~ file: useDcaConfig.ts:45 ~ getDcaConfig ~ dcaConfig:', dcaConfig)\n    setDcaConfig(dcaConfig)\n    return dcaConfig\n  }\n\n  return {\n    getDcaConfig\n  }\n}\n","import { DcaQuotePath } from '@/apis/path'\nimport useDcaStore from '@/store/dca'\nimport { DcaQuoteData } from '@/types'\nimport { useFetch } from '@cetus/hooks'\n\nexport default function useDcaGetQuote() {\n  const { fetchByApi } = useFetch()\n  const { setDcaQuote } = useDcaStore()\n  const getDcaQuote = async ({\n    inCoin,\n    freq,\n    count,\n    sender\n  }: {\n    inCoin: string\n    freq: string | number\n    count: string | number\n    sender: string\n  }): Promise<DcaQuoteData | null> => {\n    try {\n      const data = await fetchByApi(DcaQuotePath, 'GET', {\n        in_coin: inCoin,\n        freq,\n        count,\n        sender\n      })\n      if (data) {\n        const result = {\n          amountInLimitPerCycle: data?.amount_in_limit_per_cycle,\n          coinType: data?.coin_type,\n          feeRate: data?.fee_rate,\n          signature: data?.signature,\n          signer: data?.signer,\n          timestamp: data?.timestamp\n        }\n        setDcaQuote(result)\n        return result\n      }\n    } catch (error) {\n      console.log('getDcaQuote ~ error:', error)\n    }\n\n    return null\n  }\n\n  return {\n    getDcaQuote\n  }\n}\n","import { AggregatorDexMap } from '@/config/aggregator'\nimport useDcaStore from '@/store/dca'\nimport useProStore from '@/store/pro'\nimport { AggregatorServerErrorCode, SwapRouterData } from '@/types'\nimport { useDebounceFunction, useFetch } from '@cetus/hooks'\nimport { useGetToken } from '@cetus/hooks/src/useToken'\nimport { useGetTokenBalance } from '@cetus/hooks/src/useTokenBalance'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport { useAccountStore } from '@cetus/stores'\nimport useTokenPriceStore from '@cetus/stores/src/tokenPrice'\nimport { Token } from '@cetus/types'\nimport envConfigs from '@cetus/types/src/config/envConfigs'\nimport { bnToAmount, d, Decimal, formatNumber, formatNumberWithDown, suiAddressShortToLong, timeFormatUTC } from '@cetus/utils'\nimport { extractStructTagFromType, fixCoinType, toDecimalsAmount } from '@cetusprotocol/common-sdk'\nimport { useEffect, useMemo, useRef, useState } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport useTokenRank from '../common/useTokenRank'\nimport { useFindBestRouting } from '../swap/useFindBestRouting'\nimport useDcaConfig from './useDcaConfig'\nimport useDcaGetQuote from './useGetDcaQuote'\n\nexport function useDcaHook() {\n  const navigate = useNavigate()\n  const {\n    sellCoin,\n    buyCoin,\n    setSellCoin,\n    setBuyCoin,\n    sellAmount,\n    buyAmount,\n    setBuyAmount,\n    setSellAmount,\n    dcaConfig,\n    setCurrentCoinKey,\n    currentCoinKey,\n    investNum,\n    currentInvest,\n    orderNum,\n    dcaQuote,\n    setInvestNum,\n    setOrderNum,\n    setCurrentInvest,\n    setPageDirect,\n    pageDirect,\n    dcaMode,\n    sellTotalAmount,\n    setSellTotalAmount,\n    setLowerPriceSize,\n    setUpperPriceSize\n  } = useDcaStore()\n  const { from, to } = useParams()\n\n  const { currentAccount } = useAccountStore()\n  const { getDcaConfig } = useDcaConfig()\n  const { getDcaQuote } = useDcaGetQuote()\n  const { coinPriceObj } = useTokenPriceStore()\n  const { fetchTokenPrices, getTokenAmountValue } = useTokenPrice()\n  const [uuid, setUuid] = useState<string>('')\n  const uuidRef = useRef(uuid)\n  const { fetchTokenInfo } = useGetToken()\n  const { setCurrentProTab, currentProTab, currentProTabUpdateWith } = useProStore()\n\n  useEffect(() => {\n    uuidRef.current = uuid\n  }, [uuid])\n\n  // 处理导航Token\n  useEffect(() => {\n    const fetTokenInfo = async () => {\n      console.log('dca hook0619 🚀 ~ fetTokenInfo ~ from:', from)\n      console.log('dca hook0619 🚀 ~ fetTokenInfo ~ to:', to)\n      if ((!from || from === 'undefined') && (!to || to === 'undefined')) {\n        setSellCoin(envConfigs.clmm_swap.from_coin)\n        setBuyCoin(envConfigs.clmm_swap.to_coin)\n        return\n      }\n\n      if (from && from !== 'undefined') {\n        fetchTokenInfo<string>(from)\n          .then((token: Token | undefined) => {\n            if (!token) {\n              navigate(`/dca/${sellCoin?.coin_type}/${buyCoin?.coin_type}`)\n            } else {\n              if (token?.coin_type !== sellCoin?.coin_type) {\n                setSellCoin(token)\n              }\n            }\n          })\n          .catch(() => {\n            navigate(`/dca/${sellCoin?.coin_type}/${buyCoin?.coin_type}`)\n          })\n      } else {\n        setSellCoin(undefined)\n      }\n\n      if (to && to !== 'undefined') {\n        fetchTokenInfo<string>(to)\n          .then((token: Token | undefined) => {\n            if (!token) {\n              navigate(`/dca/${sellCoin?.coin_type}/${buyCoin?.coin_type}`)\n            } else {\n              if (token?.coin_type !== buyCoin?.coin_type) {\n                setBuyCoin(token)\n              }\n            }\n          })\n          .catch(() => {\n            navigate(`/dca/${sellCoin?.coin_type}/${buyCoin?.coin_type}`)\n          })\n      } else {\n        setBuyCoin(undefined)\n      }\n    }\n\n    fetTokenInfo()\n  }, [from, to])\n\n  // 销毁时清空token的值\n  useEffect(() => {\n    return () => {\n      setBuyCoin(undefined)\n      setSellCoin(undefined)\n    }\n  }, [])\n\n  // 获取dca的配置(单笔订单数量不能小于多少)\n  const handleGetDcaConfig = async () => {\n    const res = await getDcaConfig()\n    console.log('🚀 ~ handleGetDcaConfig ~ res:', res)\n  }\n\n  // Initialization dca Token\n  const initiaTokenSelect = () => {\n    console.log('🚀 ~ initiaTokenSelect ~ setSellCoin:')\n    setSellCoin(envConfigs.clmm_swap.from_coin)\n    setBuyCoin(envConfigs.clmm_swap.to_coin)\n  }\n\n  useEffect(() => {\n    setLowerPriceSize('0%')\n    setUpperPriceSize('0%')\n    // initiaTokenSelect()\n    getDcaConfig()\n    return () => {\n      resetInputAmount()\n    }\n  }, [])\n\n  // 订单价格最小值\n  const [minPriceValue, setMinPriceValue] = useState<string>('')\n  // 订单价格最大值\n  const [maxPriceValue, setMaxPriceValue] = useState<string>('')\n  // 余额\n  const { balanceInfo: sellBalanceInfo } = useGetTokenBalance(sellCoin)\n  const { balanceInfo: buyBalanceInfo } = useGetTokenBalance(buyCoin)\n\n  // 价值\n  const sellAmountValue = getTokenAmountValue(sellCoin?.coin_type, sellAmount)\n\n  // 卖出数量变化\n  const handleAmountChange = (amount: string) => {\n    setCurrentCoinKey('sellCoin')\n    setSellAmount(amount)\n    fetchFindAvailableRouterDebounce()\n  }\n  useEffect(() => {\n    if (+sellAmount && +orderNum) {\n      if (dcaMode == 'total') {\n        setSellTotalAmount(sellAmount)\n      } else {\n        setSellTotalAmount(d(sellAmount).mul(orderNum).toString())\n      }\n    } else {\n      setSellTotalAmount('')\n    }\n  }, [sellAmount, dcaMode, orderNum])\n  const handlePageToggleDirect = () => {\n    const decimals = pageDirect ? sellCoin?.decimals : buyCoin?.decimals\n    setPageDirect(!pageDirect)\n    if (minPriceValue && maxPriceValue) {\n      const value = minPriceValue\n      const newMinVal = d(1).div(maxPriceValue).toString()\n      const newMaxVal = d(1).div(value).toString()\n      setMinPriceValue(formatNumberWithDown(newMinVal, decimals, true).toString())\n      setMaxPriceValue(formatNumberWithDown(newMaxVal, decimals, true).toString())\n    }\n  }\n  // token选择\n  const handleSelectToken = (coin: Token, isSell: boolean = true) => {\n    console.log('🚀🚀🚀 ~ useDcaHook.ts:143 ~ handleSelectToken ~ handleSelectToken:')\n\n    setMinPriceValue('')\n    setMaxPriceValue('')\n    if (isSell) {\n      if (fixCoinType(coin?.coin_type) === fixCoinType(buyCoin!.coin_type)) {\n        onReverseClick()\n        setCurrentProTab(currentProTab === 'Buy' ? 'Sell' : 'Buy')\n      } else {\n        // setSellCoin(coin)\n        navigate(`/dca/${coin?.coin_type}/${buyCoin?.coin_type}`)\n      }\n      setCurrentCoinKey('sellCoin')\n    } else {\n      if (fixCoinType(coin?.coin_type) === fixCoinType(sellCoin!.coin_type)) {\n        onReverseClick()\n        setCurrentProTab(currentProTab === 'Buy' ? 'Sell' : 'Buy')\n      } else {\n        // setBuyCoin(coin)\n        navigate(`/dca/${sellCoin?.coin_type}/${coin?.coin_type}`)\n      }\n      setCurrentCoinKey('buyCoin')\n    }\n  }\n  // 清空输入框\n  const resetInputAmount = () => {\n    setSellAmount('')\n    setMinPriceValue('')\n    setMaxPriceValue('')\n    setUuid('')\n    setInvestNum('1')\n    setOrderNum('2')\n    setCurrentInvest('Hour')\n  }\n  // 交换token方向\n  const onReverseClick = (isClickToggle?: boolean) => {\n    if ((sellCoin?.coin_type && sellCoin?.coin_type === from) || (sellCoin?.coin_type && !from)) {\n      navigate(`/dca/${buyCoin?.coin_type}/${sellCoin?.coin_type}`)\n    } else if (\n      (sellCoin?.coin_type && sellCoin?.coin_type !== 'undefined' && (!buyCoin?.coin_type || buyCoin?.coin_type == 'undefined')) ||\n      (buyCoin?.coin_type && buyCoin?.coin_type !== 'undefined' && (!sellCoin?.coin_type || sellCoin?.coin_type == 'undefined'))\n    ) {\n      console.log('useDcaHook 🚀 ~ onReverseClick ~ buyCoin?.coin_type:', buyCoin?.coin_type)\n      console.log('useDcaHook 🚀 ~ onReverseClick ~ sellCoin?.coin_type:', sellCoin?.coin_type)\n\n      navigate(`/dca/${buyCoin?.coin_type}/${sellCoin?.coin_type}`)\n    }\n    if (isClickToggle) {\n      setCurrentProTab(currentProTab === 'Buy' ? 'Sell' : 'Buy', 'toggleBtn')\n    }\n  }\n\n  // dca白名单判断\n  const isDcaSelect = useMemo(() => {\n    const whitelistMode = dcaConfig?.whitelistMode\n    console.log('🚀 ~ useDcaHook ~ whitelistMode:', whitelistMode)\n    if (whitelistMode === 3) return true\n    if (whitelistMode === 0) return false\n\n    if (currentCoinKey === 'sellCoin') {\n      return whitelistMode === 1\n    } else if (currentCoinKey === 'buyCoin') {\n      return whitelistMode === 2\n    }\n    return false\n  }, [dcaConfig?.whitelistMode])\n\n  // sellCoin的当前价格\n  const sellCoinPrice = coinPriceObj[extractStructTagFromType(sellCoin?.coin_type).full_address]?.price || 0\n  // 单笔订单的数量\n  const sellPerOrder = useMemo(() => {\n    if (sellTotalAmount && orderNum) {\n      return d(sellTotalAmount).div(orderNum).toString()\n    } else {\n      return 0\n    }\n  }, [sellTotalAmount, orderNum])\n  // 单笔订单的价值\n  const sellPerOrderUSD = useMemo(() => {\n    if (sellTotalAmount && orderNum && sellCoinPrice) {\n      return d(sellTotalAmount).div(orderNum).mul(sellCoinPrice).toString() || 0\n    } else {\n      return 0\n    }\n  }, [sellTotalAmount, orderNum, sellCoinPrice])\n  // 订单费率\n  const platformFee = d(dcaQuote?.feeRate).div(Decimal.pow(10, 6)).mul(100).toString() + '%' || '0%'\n  // 单比订单的数量限制\n  const amountInLimit = useMemo(() => {\n    if (dcaQuote?.amountInLimitPerCycle && sellCoin?.decimals) {\n      return bnToAmount(dcaQuote?.amountInLimitPerCycle, sellCoin?.decimals)\n    }\n  }, [dcaQuote?.amountInLimitPerCycle])\n  // 单比订单的数量错误\n  const orderSizeError = useMemo(() => {\n    console.log('🚀 ~ orderSizeError ~ sellPerOrder:', sellPerOrder, amountInLimit)\n    if (dcaConfig?.minCycleAmountInUsd && orderNum && sellAmount && amountInLimit && Number(sellPerOrder) < Number(amountInLimit)) {\n      return {\n        status: true,\n        tips: `Each order size should be higher than $${dcaConfig?.minCycleAmountInUsd}.`\n      }\n    }\n    if (sellAmount && orderNum && Number(sellPerOrderUSD) > 10000) {\n      return {\n        status: true,\n        tips: 'Each order size should be less than $10,000'\n      }\n    }\n    return {\n      status: false,\n      tips: ''\n    }\n  }, [dcaMode, amountInLimit, orderNum, sellPerOrder, sellAmount, sellPerOrderUSD, dcaConfig?.minCycleAmountInUsd])\n  // 订单数量输入错误\n  const orderInputError = useMemo(() => {\n    console.log('🚀 ~ orderInputError ~ orderNum:', orderNum, orderNum && Number(orderNum) < Number(dcaConfig?.minCycleCount))\n    if (dcaConfig?.minCycleCount && orderNum && Number(orderNum) < Number(dcaConfig?.minCycleCount)) {\n      return {\n        status: true,\n        tips: `Number of Orders cannot be lower than ${dcaConfig?.minCycleCount}.`\n      }\n    } else if (orderNum && Number(investNum) <= 0) {\n      return {\n        status: true,\n        tips: 'Please enter an interval above 0'\n      }\n    } else if (orderNum && investNum && Number(investNum) > 10000) {\n      return {\n        status: true,\n        tips: 'The maximum interval is 10,000.'\n      }\n    } else {\n      return {\n        status: false,\n        tips: ''\n      }\n    }\n  }, [orderNum, dcaConfig?.minCycleCount, investNum])\n\n  // 最大最小价格错误\n  const priceError = useMemo(() => {\n    if ((minPriceValue && Number(minPriceValue) == 0) || (maxPriceValue && Number(maxPriceValue) == 0)) {\n      return {\n        status: true,\n        tips: 'Please enter a price greater than 0.'\n      }\n    } else if (minPriceValue && maxPriceValue && Number(minPriceValue) >= Number(maxPriceValue)) {\n      return {\n        status: true,\n        tips: 'The max price should be higher than min price.'\n      }\n    } else {\n      return {\n        status: false,\n        tips: ''\n      }\n    }\n  }, [minPriceValue, maxPriceValue])\n\n  // 订单结束时间\n  const [estEndDate, setEstEndDate] = useState('')\n  // 订单时间错误\n  const [orderTimeError, setOrderTimeError] = useState({\n    status: false,\n    tips: ''\n  })\n  const getEstEndDate = () => {\n    const date = new Date().getTime()\n    let investTime = 0\n    console.log('🚀🚀🚀 ~ file: dca-detail.vue:34 ~ estEndDate ~ currentTime.value:', currentInvest)\n    switch (currentInvest) {\n      case 'Minute':\n        // investTime = d(investNum).mul(60).mul(1000).mul(d(orderNum).sub(1)).plus(60000).toNumber()\n        investTime = Number(investNum) * 60 * 1000 * (Number(orderNum) - 1) + 60000\n        break\n      case 'Hour':\n        investTime = Number(investNum) * 60 * 60 * 1000 * (Number(orderNum) - 1) + 60000\n        break\n      case 'Day':\n        investTime = Number(investNum) * 60 * 60 * 24 * 1000 * (Number(orderNum) - 1) + 60000\n        break\n      case 'Week':\n        investTime = Number(investNum) * 60 * 60 * 24 * 7 * 1000 * (Number(orderNum) - 1) + 60000\n        break\n      case 'Month':\n        investTime = Number(investNum) * 60 * 60 * 24 * 30 * 1000 * (Number(orderNum) - 1) + 60000\n        break\n    }\n    console.log(\n      '🚀🚀🚀 ~ file: dca-detail.vue:46 ~ estEndDate ~ date + investTime:',\n      orderNum,\n      date,\n      investTime,\n      investTime > 60 * 60 * 24 * 365 * 1000\n    )\n    const result = timeFormatUTC(date + investTime, 'YMDHM')\n    console.log('🚀🚀🚀 ~ file: dca-data.ts:303 ~ getEstEndDate ~ result:', result)\n    setEstEndDate(result!)\n    if (result == 'NaN-NaN-NaN NaN:NaN') {\n      setEstEndDate('--')\n    }\n    if (investTime > 60 * 60 * 24 * 365 * 1000) {\n      setOrderTimeError({\n        status: true,\n        tips: 'The maximum execution period is 1 year'\n      })\n    } else {\n      setOrderTimeError({\n        status: false,\n        tips: 'The maximum execution period is 1 year'\n      })\n    }\n  }\n\n  useEffect(() => {\n    getEstEndDate()\n  }, [sellAmount, investNum, orderNum, minPriceValue, maxPriceValue, currentInvest])\n\n  const cycleFrequency = useMemo(() => {\n    let investTime = 0\n    switch (currentInvest) {\n      case 'Minute':\n        investTime = Number(investNum) * 60\n        break\n      case 'Hour':\n        investTime = Number(investNum) * 60 * 60\n        break\n      case 'Day':\n        investTime = Number(investNum) * 60 * 60 * 24\n        break\n      case 'Week':\n        investTime = Number(investNum) * 60 * 60 * 24 * 7\n        break\n      case 'Month':\n        investTime = Number(investNum) * 60 * 60 * 24 * 30\n        break\n    }\n    console.log('🚀🚀🚀 ~ file: dca-data.ts:333 ~ cycleFrequency ~ investTime:', investTime)\n    return investTime\n  }, [currentInvest, investNum])\n\n  useEffect(() => {\n    if (sellCoin?.coin_type && cycleFrequency && orderNum) {\n      queryDcaQuoteDebounce(sellCoin?.coin_type, cycleFrequency, orderNum, currentAccount?.address)\n    }\n  }, [sellCoin?.coin_type, cycleFrequency, orderNum, currentAccount?.address])\n\n  const queryDcaQuote = async (coinAddress: string, freq: string | number, count: string | number, sender: string) => {\n    const defaultWalletAddress = sender || '0x0000000000000000000000000000000000000000000000000000000000000000'\n    try {\n      const result = await getDcaQuote({ inCoin: coinAddress, freq, count, sender: defaultWalletAddress })\n      console.log('🚀 ~ queryDcaQuote ~ result:', result)\n      return result\n    } catch (error) {\n      console.log('🚀🚀🚀 ~ file: dca-data.ts:344 ~ queryDcaQuote ~ error:', error)\n    }\n  }\n\n  const queryDcaQuoteDebounce = useDebounceFunction((coinAddress: string, freq: string | number, count: string | number, sender: string) => {\n    queryDcaQuote(coinAddress, freq, count, sender)\n  }, 500)\n\n  const { findBestRouters } = useFindBestRouting()\n  const [findRouterLoading, setFindRouterLoading] = useState<boolean>(false)\n  const [routerData, setRouterData] = useState<SwapRouterData | undefined>(undefined)\n\n  const { getTokenRank } = useTokenRank()\n  const { fetchByApi } = useFetch()\n  const [missingCoins, setMissingCoins] = useState<Token[]>([])\n\n  useEffect(() => {\n    getTokensPrice()\n    const direct = getTokenRank(sellCoin!, buyCoin!)\n    console.log('🚀 ~ useEffect ~ direct:', direct)\n    setPageDirect(direct)\n  }, [sellCoin?.coin_type, buyCoin?.coin_type])\n\n  useEffect(() => {\n    fetchFindAvailableRouterDebounce()\n    if (sellCoin?.coin_type && buyCoin?.coin_type) {\n      setMissingCoins([])\n      checkPriceAvailability()\n    }\n  }, [sellPerOrder, sellCoin?.coin_type, buyCoin?.coin_type])\n\n  const fetchFindAvailableRouterDebounce = () => {\n    if (d(sellPerOrder).gt(0) && sellCoin?.coin_type && buyCoin?.coin_type) {\n      setFindRouterLoading(true)\n      console.log('🚀 ~ useDcaHook ~ sellAmountDebounce:', Number(sellPerOrder) > 0, sellPerOrder, sellCoin?.coin_type, buyCoin?.coin_type, orderNum)\n      findAvailableRouterDebounce()\n    }\n  }\n\n  const findAvailableRouterDebounce = useDebounceFunction(() => {\n    findAvailableRouter()\n  }, 500)\n\n  // 判断该交易对，是否存在可用路由\n  const findAvailableRouter = async () => {\n    console.log('🚀 ~ findAvailableRouter ~ findAvailableRouter:', sellPerOrder)\n    if (sellCoin && buyCoin) {\n      const newUuid = `${sellCoin.coin_type}_${buyCoin.coin_type}`\n      setUuid(newUuid)\n      const providersKeys = Object.entries(AggregatorDexMap).map(([key, value]) => value.id)\n      try {\n        const result = await findBestRouters({\n          fromToken: sellCoin,\n          toToken: buyCoin,\n          amount: toDecimalsAmount(sellPerOrder || 1, sellCoin?.decimals),\n          providersKeys: providersKeys as string[],\n          by_amount_in: true,\n          uuid: newUuid\n        })\n\n        console.log('🚀 ~ findAvailableRouter ~ newUuid:', newUuid, uuid, result)\n        if (newUuid === uuidRef.current && result?.routerData) {\n          setRouterData(result)\n          setBuyAmount(result?.toAmountUi || '')\n          setFindRouterLoading(false)\n        } else {\n          setRouterData(result)\n          setBuyAmount('0')\n          setFindRouterLoading(false)\n        }\n      } catch (error) {\n        console.log('🚀 ~ findAvailableRouter ~ error:', error)\n      }\n    }\n  }\n\n  // 获取当前的token价格\n  const getTokensPrice = () => {\n    const uniqueTokens = (sellCoin?.coin_type || buyCoin?.coin_type) && Array.from(new Set([sellCoin?.coin_type, buyCoin?.coin_type]))\n    // fetchTokenPrices(uniqueTokens || [])\n    if (uniqueTokens?.length > 0) {\n      fetchTokenPrices(uniqueTokens)\n    }\n  }\n\n  const btnStatus = useMemo(() => {\n    console.log('🚀 ~ btnStatus ~ routerData:', routerData)\n    const btnInfo: {\n      text?: string\n      disabled: boolean\n    } = {\n      text: 'Create DCA Order',\n      disabled: false\n    }\n    if (!currentAccount?.address) {\n      btnInfo.text = 'Connect Wallet'\n      btnInfo.disabled = false\n      return btnInfo\n    }\n    if (!sellCoin?.coin_type || !buyCoin?.coin_type) {\n      btnInfo.disabled = true\n      btnInfo.text = 'Select a token'\n      return btnInfo\n    }\n    if (!sellAmount || Number(sellAmount) == 0) {\n      btnInfo.disabled = true\n      btnInfo.text = 'Enter an amount'\n      return btnInfo\n    }\n    if (d(sellTotalAmount).gt(sellBalanceInfo?.balanceFormat || 0)) {\n      btnInfo.disabled = true\n      btnInfo.text = `Insufficient ${sellCoin?.symbol} balance`\n      return btnInfo\n    }\n    if (d(dcaConfig?.minCycleCount).gt(orderNum || 0)) {\n      btnInfo.disabled = true\n      btnInfo.text = `Minimum ${dcaConfig?.minCycleCount} orders`\n      return btnInfo\n    }\n\n    if (d(amountInLimit).gt(sellPerOrder || 0)) {\n      btnInfo.disabled = true\n      btnInfo.text = `Minimum $${dcaConfig?.minCycleAmountInUsd} per order`\n      return btnInfo\n    }\n\n    if (\n      orderSizeError.status ||\n      orderInputError.status ||\n      priceError.status ||\n      orderTimeError.status ||\n      !sellCoin?.coin_type ||\n      !buyCoin?.coin_type ||\n      !orderNum ||\n      !investNum ||\n      !minPriceValue ||\n      !maxPriceValue\n    ) {\n      btnInfo.disabled = true\n      btnInfo.text = 'Create DCA Order'\n      return btnInfo\n    }\n    console.log('🚀 ~ btnStatus ~ routerData:', routerData)\n    // errorCode\n    if (routerData && routerData.errorCode) {\n      if (\n        routerData.errorCode === AggregatorServerErrorCode.NoRouter ||\n        routerData.errorCode === AggregatorServerErrorCode.HoneyPot ||\n        routerData.errorCode === AggregatorServerErrorCode.InsufficientLiquidity\n      ) {\n        btnInfo.text = 'No Available Route'\n        btnInfo.disabled = true\n        return btnInfo\n      }\n    }\n    return btnInfo\n  }, [\n    currentAccount?.address,\n    sellBalanceInfo,\n    orderSizeError,\n    orderInputError,\n    priceError,\n    orderTimeError,\n    sellCoin?.coin_type,\n    buyCoin?.coin_type,\n    sellTotalAmount,\n    investNum,\n    orderNum,\n    minPriceValue,\n    maxPriceValue,\n    routerData?.routerData?.routes?.length\n  ])\n  const warningTokenList = useMemo(() => {\n    const list: Token[] = []\n    if (buyCoin) {\n      list.push(buyCoin)\n    }\n\n    if (sellCoin) {\n      list.push(sellCoin)\n    }\n\n    return list\n  }, [buyCoin, sellCoin])\n\n  const currentPrice = useMemo(() => {\n    if (pageDirect && buyAmount && sellPerOrder) {\n      return formatNumber(d(buyAmount).div(sellPerOrder).toString(), buyCoin?.decimals, true)\n    }\n    if (!pageDirect && buyAmount && sellPerOrder) {\n      return formatNumber(d(sellPerOrder).div(buyAmount).toString(), sellCoin?.decimals, true)\n    }\n    return ''\n  }, [pageDirect, sellPerOrder, buyAmount])\n\n  const minPriceValueDebounce = useDebounceFunction((val: string) => {\n    setMinPriceValue(val)\n  }, 500)\n\n  const maxPriceValueDebounce = useDebounceFunction((val: string) => {\n    setMaxPriceValue(val)\n  }, 500)\n\n  const handleMinInputChange = (val: string) => {\n    console.log('🚀 ~ handleMinInputChange ~ val:', val)\n    minPriceValueDebounce(val)\n  }\n  const handleMaxInputChange = (val: string) => {\n    console.log('🚀 ~ handleMaxInputChange ~ val:', val)\n    maxPriceValueDebounce(val)\n  }\n\n  useEffect(() => {\n    changeLowerPriceSize(minPriceValue)\n  }, [minPriceValue, currentPrice])\n\n  useEffect(() => {\n    changeUpperPriceSize(maxPriceValue)\n  }, [maxPriceValue, currentPrice])\n\n  const changeLowerPriceSize = (val: string) => {\n    console.log('🚀 ~ changeLowerPriceSize ~ val:', val)\n    if (currentPrice && val) {\n      // 公式 lowerPriceSize = (lowerPrice/currentPrice - 1)*100\n      const lowerPrice = d(val).div(currentPrice).sub(1).mul(100).toString()\n      console.log('🚀 ~ handleMaxInputChange ~ upperPrice:', lowerPrice)\n      setLowerPriceSize(d(lowerPrice).gt(10000) ? '>10,000%' : `${formatNumber(lowerPrice, 1, false, Decimal.ROUND_HALF_DOWN)}%`)\n    }\n  }\n  const changeUpperPriceSize = (val: string) => {\n    if (currentPrice && val) {\n      // 公式 upperPriceSize = (upperPrice/currentPrice - 1)*100\n      const upperPrice = d(val).div(currentPrice).sub(1).mul(100).toString()\n      console.log('🚀 ~ handleMaxInputChange ~ upperPrice:', upperPrice)\n      setUpperPriceSize(d(upperPrice).gt(10000) ? '>10,000%' : `${formatNumber(upperPrice, 1, false, Decimal.ROUND_HALF_DOWN)}%`)\n    }\n  }\n\n  const checkPriceAvailability = async () => {\n    const requestedCoinTypes = [suiAddressShortToLong(sellCoin?.coin_type), suiAddressShortToLong(buyCoin?.coin_type)].filter(Boolean)\n\n    try {\n      const priceResponse = await fetchByApi('/v2/sui/price', 'GET', {\n        base_symbol_address_pair: requestedCoinTypes.join(',')\n      })\n      console.log('🚀🚀🚀 ~ useDcaHook.ts:478 ~ checkPriceAvailability ~ priceResponse:', priceResponse)\n\n      if (priceResponse && priceResponse.prices) {\n        // 获取API返回的币种符号\n        const availableCoinTypes = priceResponse.prices.map((price: any) => price.base_symbol)\n\n        // 找出没有返回价格的币种\n        const unsupportedCoinTypes = requestedCoinTypes.filter(coinType => !availableCoinTypes.includes(coinType))\n\n        console.log('🚀 ~ checkPriceAvailability ~ availableCoinTypes:', availableCoinTypes)\n        console.log('🚀 ~ checkPriceAvailability ~ unsupportedCoinTypes:', unsupportedCoinTypes)\n        console.log('🚀 ~ checkPriceAvailability ~ requestedCoinTypes:', requestedCoinTypes)\n\n        if (unsupportedCoinTypes.length > 0) {\n          console.log('🚀 ~ checkPriceAvailability ~ 缺失价格的币种:', unsupportedCoinTypes)\n        }\n\n        // 将币种地址转换为完整的币种信息\n        const missingCoinInfos = unsupportedCoinTypes\n          .map(coinType => {\n            if (coinType === suiAddressShortToLong(sellCoin?.coin_type || '')) return sellCoin\n            if (coinType === suiAddressShortToLong(buyCoin?.coin_type || '')) return buyCoin\n            return null\n          })\n          .filter(Boolean) as Token[]\n\n        setMissingCoins(missingCoinInfos)\n        console.log('🚀 ~ checkPriceAvailability ~ priceResponse:', priceResponse)\n      } else {\n        // 没有返回数据，所有请求的币种都缺失价格\n        const allRequestedCoins = [sellCoin, buyCoin].filter(Boolean) as Token[]\n        setMissingCoins(allRequestedCoins)\n      }\n    } catch (error) {\n      console.log('🚀 ~ checkPriceAvailability ~ error:', error)\n      // 请求失败，所有请求的币种都缺失价格\n      const allRequestedCoins = [sellCoin, buyCoin].filter(Boolean) as Token[]\n      setMissingCoins(allRequestedCoins)\n    }\n  }\n  return {\n    currentPrice,\n    handleMinInputChange,\n    handleMaxInputChange,\n    warningTokenList,\n    resetInputAmount,\n    cycleFrequency,\n    btnStatus,\n    fetchFindAvailableRouterDebounce,\n    queryDcaQuote,\n    findRouterLoading,\n    platformFee,\n    estEndDate,\n    sellPerOrder,\n    isDcaSelect,\n    onReverseClick,\n    sellBalanceInfo,\n    buyBalanceInfo,\n    sellAmountValue,\n    handleAmountChange,\n    handleSelectToken,\n    minPriceValue,\n    maxPriceValue,\n    handlePageToggleDirect,\n    orderSizeError,\n    orderInputError,\n    priceError,\n    orderTimeError,\n    missingCoins,\n    checkPriceAvailability\n  }\n}\n","import useDcaStore from '@/store/dca'\nimport { useGetToken } from '@cetus/hooks/src/useToken'\nimport { useSdk } from '@cetus/sdk-factory'\nimport useTokenSelectStore from '@cetus/stores/src/useTokenSelectStore'\nimport { CoinType } from '@cetus/types'\n\nexport default function () {\n  const dcaSdk = useSdk('dca')\n  const { getTokenListInfo } = useGetToken()\n  const { setFilterTokenLoading } = useTokenSelectStore()\n  const { setInCoinWhiteList, setOutCoinWhiteList } = useDcaStore()\n  // whitelist_mode = 0 关闭白名单模式\n  // whitelist_mode = 1 只开启in_coin\n  // whitelist_mode = 2 只开启out_coin\n  // whitelist_mode = 3 全部开启\n  const getDcaCoinWhiteList = async (whitelist_mode: number) => {\n    console.log('🚀🚀🚀 ~ file: useGetDcaTokenList.ts:44 ~ getDcaCoinWhiteList ~ getDcaCoinWhiteList:')\n    try {\n      setFilterTokenLoading(true)\n      const { in_coin_list, out_coin_list } = await dcaSdk!.Dca.getDcaCoinWhiteList(whitelist_mode)\n      console.log('🚀🚀🚀 ~ file: useGetDcaTokenList.ts:18 ~ getDcaCoinWhiteList ~ outCoinList:', out_coin_list)\n      console.log('🚀🚀🚀 ~ file: useGetDcaTokenList.ts:18 ~ getDcaCoinWhiteList ~ inCoinList:', in_coin_list)\n      const inList: any = []\n      const outList: any = []\n      const inCoinTypeList = in_coin_list.map((item: any) => item)\n      const inTokenMap = await getTokenListInfo(inCoinTypeList)\n      if (inTokenMap) {\n        for (let i = 0; i < in_coin_list.length; i++) {\n          const tokenInfo = inTokenMap.get(in_coin_list[i] as CoinType)\n          if (tokenInfo) {\n            inList.push({\n              ...tokenInfo,\n              labels: tokenInfo?.labels?.length > 0 ? tokenInfo?.labels : ''\n            })\n          }\n        }\n      }\n      const outCoinTypeList = out_coin_list.map((item: any) => item)\n      const outTokenMap = await getTokenListInfo(outCoinTypeList)\n      if (outTokenMap) {\n        for (let i = 0; i < out_coin_list.length; i++) {\n          const tokenInfo = outTokenMap.get(out_coin_list[i] as CoinType)\n          if (tokenInfo) {\n            outList.push({\n              ...tokenInfo,\n              labels: tokenInfo?.labels?.length > 0 ? tokenInfo?.labels : ''\n            })\n          }\n        }\n      }\n\n      console.log('🚀🚀🚀 ~ file: useDca.ts:351 ~ getDcaCoinWhiteList ~ outList:', outList)\n      console.log('🚀🚀🚀 ~ file: useDca.ts:351 ~ getDcaCoinWhiteList ~ inList:', inList)\n      setInCoinWhiteList(inList)\n      setOutCoinWhiteList(outList)\n      setFilterTokenLoading(false)\n    } catch (error) {\n      setInCoinWhiteList([])\n      setOutCoinWhiteList([])\n      setFilterTokenLoading(false)\n      console.log('🚀 ~ file: useGetDcaTokenList.ts:35 ~ getDcaCoinWhiteList ~ error:', error)\n    }\n  }\n  return { getDcaCoinWhiteList }\n}\n","import { useSdk } from '@cetus/sdk-factory'\nimport { Token } from '@cetus/types'\nimport { d, Decimal } from '@cetus/utils'\nimport { toDecimalsAmount } from '@cetusprotocol/common-sdk'\nimport useDcaGetQuote from './useGetDcaQuote'\nexport type OpenDcaOrderParams = {\n  in_coin: Token\n  out_coin: Token\n  in_coin_amount: number\n  cycle_count: number\n  min_price: number\n  max_price: number\n  freq: number\n}\nexport default function () {\n  const dcaSdk = useSdk('dca')\n  const { getDcaQuote } = useDcaGetQuote()\n\n  // Helper function: 计算单周期最大最小期望数量\n  const calculateCycleAmounts = (\n    inCoinAmount: number,\n    cycleCount: number,\n    inCoinDecimals: number,\n    outCoinDecimals: number,\n    minPrice: number,\n    maxPrice: number\n  ) => {\n    const cycleCountAmount = d(toDecimalsAmount(inCoinAmount, inCoinDecimals)).div(cycleCount)\n\n    const maxAmount = d(cycleCountAmount).div(d(minPrice))\n    const minAmount = d(cycleCountAmount).div(d(maxPrice))\n\n    let perCycleMinOutAmount: string, perCycleMaxOutAmount: string\n\n    if (inCoinDecimals > outCoinDecimals) {\n      const perCycleAmountDecimal = Decimal.pow(10, inCoinDecimals - outCoinDecimals)\n      perCycleMinOutAmount = minAmount.div(perCycleAmountDecimal).ceil().toString()\n      perCycleMaxOutAmount = maxAmount.div(perCycleAmountDecimal).ceil().toString()\n    } else if (inCoinDecimals < outCoinDecimals) {\n      const perCycleAmountDecimal = Decimal.pow(10, outCoinDecimals - inCoinDecimals)\n      perCycleMinOutAmount = minAmount.mul(perCycleAmountDecimal).ceil().toString()\n      perCycleMaxOutAmount = maxAmount.mul(perCycleAmountDecimal).ceil().toString()\n    } else {\n      perCycleMinOutAmount = minAmount.ceil().toString()\n      perCycleMaxOutAmount = maxAmount.ceil().toString()\n    }\n\n    return { perCycleMinOutAmount, perCycleMaxOutAmount, cycleCountAmount }\n  }\n\n  // Helper function: 构造 DCA 参数\n  const buildDcaOrderPayload = (params: OpenDcaOrderParams, quoteResult: any, perCycleMinOutAmount: string, perCycleMaxOutAmount: string) => {\n    const { in_coin, in_coin_amount, freq, cycle_count, out_coin } = params\n\n    return {\n      in_coin_amount: String(toDecimalsAmount(in_coin_amount, in_coin.decimals)),\n      in_coin_type: in_coin.coin_type,\n      out_coin_type: out_coin.coin_type,\n      cycle_frequency: freq,\n      cycle_count,\n      per_cycle_min_out_amount: perCycleMinOutAmount,\n      per_cycle_max_out_amount: perCycleMaxOutAmount,\n      per_cycle_in_amount_limit: quoteResult.amountInLimitPerCycle,\n      fee_rate: quoteResult.feeRate,\n      timestamp: quoteResult.timestamp,\n      signature: quoteResult.signature\n    }\n  }\n\n  // Main function\n  const openDcaOrder = async (params: OpenDcaOrderParams) => {\n    const { in_coin, out_coin, in_coin_amount, cycle_count, min_price, max_price, freq } = params\n\n    // Step 1: 获取报价\n    const sender = (await dcaSdk!.getSenderAddress()) || '0x0000000000000000000000000000000000000000000000000000000000000000'\n    const quoteResult = await getDcaQuote({ inCoin: in_coin.coin_type, freq, count: cycle_count, sender })\n    if (!quoteResult) {\n      throw new Error('Request timed out')\n    }\n\n    // Step 2: 计算单周期金额\n    const { perCycleMinOutAmount, perCycleMaxOutAmount } = calculateCycleAmounts(\n      in_coin_amount,\n      cycle_count,\n      in_coin.decimals,\n      out_coin.decimals,\n      min_price,\n      max_price\n    )\n\n    // Step 3: 构造 DCA 开单参数\n    const dcaOpenOrderPayloadParams = buildDcaOrderPayload(params, quoteResult, perCycleMinOutAmount, perCycleMaxOutAmount)\n    console.log('🚀🚀🚀 ~ file: useOpenDcaOrder.ts:91 ~ openDcaOrder ~ dcaOpenOrderPayloadParams:', dcaOpenOrderPayloadParams)\n\n    // Step 4: 调用 SDK 提交订单\n    const tx = await dcaSdk!.Dca.dcaOpenOrderPayload(dcaOpenOrderPayloadParams)\n    console.log('🚀🚀🚀 ~ file: useOpenDcaOrder.ts:55 ~ openDcaOrder ~ tx:', tx)\n    return tx\n  }\n\n  return { openDcaOrder }\n}\n","import useDcaStore from '@/store/dca'\nimport { HTextLabelBox, SingleCoinImage } from '@cetus/ui-kit'\nimport { addComma, formatNumber, timeFormatUTC } from '@cetus/utils'\nimport { HStack, Text, VStack } from '@chakra-ui/react'\nimport RangeValue from '../position/clmm/RangeValue'\nexport type detailsDataType = {\n  sellPerOrder: string | number\n  estEndDate: string\n  platformFee: string\n  minPriceValue: string\n  maxPriceValue: string\n  minPriceResever: string\n  maxPriceResever: string\n}\ninterface DetailsContentProps {\n  detailsData: detailsDataType\n  isConfirm?: boolean\n}\nexport default function DetailsContent({ detailsData, isConfirm = false }: DetailsContentProps) {\n  const { sellPerOrder, estEndDate, platformFee, minPriceValue, maxPriceValue, minPriceResever, maxPriceResever } = detailsData\n  const { sellCoin, buyCoin, sellTotalAmount, investNum, currentInvest, pageDirect } = useDcaStore()\n  console.log('🚀 ~ DetailsBlock ~ investNum:', detailsData, investNum)\n  return (\n    <VStack w=\"100%\" gap={isConfirm ? '20px' : '16px'}>\n      <HTextLabelBox\n        isLoading={false}\n        label=\"Sell total\"\n        value={!sellTotalAmount ? `-- ${sellCoin?.symbol}` : `${formatNumber(sellTotalAmount, sellCoin?.decimals)} ${sellCoin?.symbol}`}\n        labelStyle={{\n          fontSize: '14px'\n        }}\n        valueStyle={{\n          fontSize: '14px'\n        }}\n        skeletonStyle={{\n          valueW: '128px'\n        }}\n      />\n      <HTextLabelBox\n        isLoading={false}\n        label=\"Sell per order\"\n        value={!sellPerOrder ? `-- ${sellCoin?.symbol}` : `${formatNumber(sellPerOrder, sellCoin?.decimals)} ${sellCoin?.symbol}`}\n        labelStyle={{\n          fontSize: '14px'\n        }}\n        valueStyle={{\n          fontSize: '14px'\n        }}\n        skeletonStyle={{\n          valueW: '128px'\n        }}\n      />\n      {!isConfirm && (\n        <HTextLabelBox\n          isLoading={false}\n          label=\"Receive\"\n          value={\n            <HStack gap=\"4px\">\n              <SingleCoinImage\n                imageUrl={buyCoin?.logo_url}\n                w=\"20px\"\n                h=\"20px\"\n                coinType={buyCoin?.coin_type}\n                showTagHeight=\"10px\"\n                showTagWidth=\"10px\"\n              />\n              <Text color=\"text_caption\">{buyCoin?.symbol}</Text>\n            </HStack>\n          }\n          labelStyle={{\n            fontSize: '14px'\n          }}\n          valueStyle={{\n            fontSize: '14px'\n          }}\n          skeletonStyle={{\n            valueW: '128px'\n          }}\n        />\n      )}\n      {isConfirm && (\n        <HStack w=\"100%\" justify=\"space-between\">\n          <Text textAlign=\"left\" whiteSpace=\"nowrap\">\n            Price range\n          </Text>\n          <RangeValue\n            displayTokenA={buyCoin}\n            displayTokenB={sellCoin}\n            isRank={true}\n            justify=\"flex-end\"\n            priceInfo={{\n              minPrice: addComma(minPriceValue).toString(),\n              maxPrice: addComma(maxPriceValue).toString(),\n              minPriceResever: addComma(minPriceResever).toString(),\n              maxPriceResever: addComma(maxPriceResever).toString()\n            }}\n            fontSize=\"14px\"\n            color=\"text_caption\"\n          />\n        </HStack>\n      )}\n      <HTextLabelBox\n        isLoading={false}\n        label=\"Invest every\"\n        value={Number(investNum) > 1 ? `${investNum} ${currentInvest}s` : `${investNum} ${currentInvest}`}\n        labelStyle={{\n          fontSize: '14px'\n        }}\n        valueStyle={{\n          fontSize: '14px'\n        }}\n        skeletonStyle={{\n          valueW: '128px'\n        }}\n      />\n      {isConfirm && (\n        <HTextLabelBox\n          isLoading={false}\n          label=\"Start date\"\n          value={String(timeFormatUTC(Date.now(), 'YMDHM'))}\n          labelStyle={{\n            fontSize: '14px'\n          }}\n          valueStyle={{\n            fontSize: '14px'\n          }}\n          skeletonStyle={{\n            valueW: '128px'\n          }}\n        />\n      )}\n      <HTextLabelBox\n        isLoading={false}\n        label=\"Est. end date(UTC)\"\n        value={estEndDate}\n        labelStyle={{\n          fontSize: '14px'\n        }}\n        valueStyle={{\n          fontSize: '14px'\n        }}\n        skeletonStyle={{\n          valueW: '128px'\n        }}\n      />\n      <HTextLabelBox\n        isLoading={false}\n        label=\"Platform fee\"\n        value={platformFee}\n        labelStyle={{\n          fontSize: '14px'\n        }}\n        valueStyle={{\n          fontSize: '14px'\n        }}\n        skeletonStyle={{\n          valueW: '128px'\n        }}\n      />\n    </VStack>\n  )\n}\n","import useDcaStore from '@/store/dca'\nimport { Block } from '@cetus/design'\nimport SingleTokenInfo from '@cetus/design/src/components/common/SingleTokenInfo'\nimport { Icon } from '@cetus/ui-kit'\nimport {\n  Box,\n  Button,\n  Center,\n  Heading,\n  HStack,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n  VStack\n} from '@chakra-ui/react'\nimport DetailsContent from './DetailsContent'\n\ninterface ConfirmModalProps {\n  isOpen: boolean\n  onClose: () => void\n  toOpenDca: () => void\n  confirmData: any\n  toOpenDcaLoading: boolean\n}\n\nconst ConfirmModal = ({ confirmData, isOpen, onClose, toOpenDca, toOpenDcaLoading }: ConfirmModalProps) => {\n  const { sellCoin, buyCoin } = useDcaStore()\n  return (\n    <Modal autoFocus={false} returnFocusOnClose={false} isOpen={isOpen} onClose={onClose} isCentered>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>\n          <Heading fontWeight=\"500\" fontSize=\"16px\">\n            Review your order\n          </Heading>\n        </ModalHeader>\n        <ModalCloseButton />\n        <ModalBody textAlign=\"center\" p=\"0px\">\n          <VStack w=\"100%\" gap=\"16px\" p=\"16px\">\n            <Block borderRadius=\"12px\" position=\"relative\" p=\"0 12px\">\n              <HStack w=\"100%\" justify=\"space-between\">\n                <VStack align=\"flex-start\" w=\"calc(50% - 24px)\">\n                  <Text>Sell</Text>\n                  <SingleTokenInfo token={sellCoin} haveName={false} symbolEllipsesDecimals={10} />\n                </VStack>\n                <Box w=\"1px\" h=\"100px\" bg=\"border\" />\n                <VStack align=\"flex-end\" w=\"calc(50% - 24px)\">\n                  <Text>Buy</Text>\n                  <SingleTokenInfo token={buyCoin} haveName={false} symbolEllipsesDecimals={10} />\n                </VStack>\n              </HStack>\n              <Center\n                w=\"36px\"\n                h=\"36px\"\n                borderRadius=\"50%\"\n                position=\"absolute\"\n                left=\"calc(50% - 18px)\"\n                top=\"calc(50% - 18px)\"\n                border=\"1px solid\"\n                borderColor=\"border\"\n                boxShadow=\"trade_icon_shadow\"\n                bg=\"input_bg\"\n              >\n                <Icon mt=\"-1px\" svgW=\"12px\" svgH=\"12px\" xlinkHref=\"#icon-a-icon_trade\" svgFill=\"text_caption\" transform=\"rotate(-90deg)\" />\n              </Center>\n            </Block>\n            <DetailsContent detailsData={confirmData} isConfirm />\n            <Button\n              mt=\"12px\"\n              onClick={() => {\n                toOpenDca()\n                onClose()\n              }}\n              isDisabled={toOpenDcaLoading}\n              w=\"calc(100% + 32px)\"\n              mb=\"-30px\"\n              h=\"52px\"\n              fontWeight=\"500\"\n            >\n              Create DCA Order\n            </Button>\n          </VStack>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  )\n}\n\nexport default ConfirmModal\n","import { Block } from '@cetus/design'\nimport { HStack, Text, VStack } from '@chakra-ui/react'\nimport DetailsContent, { detailsDataType } from './DetailsContent'\n\ninterface DetailsBlockProps {\n  detailsData: detailsDataType\n}\nexport default function DetailsBlock({ detailsData }: DetailsBlockProps) {\n  return (\n    <Block>\n      <VStack gap=\"20px\">\n        <HStack w=\"100%\" justify=\"space-between\">\n          <Text color=\"text_caption\">Details</Text>\n          <Text fontSize=\"12px\">Your first invest cycle will begin immediately</Text>\n        </HStack>\n        <DetailsContent detailsData={detailsData} />\n      </VStack>\n    </Block>\n  )\n}\n","import { InputBox } from '@cetus/design'\nimport { HStack, Input, Text, VStack } from '@chakra-ui/react'\nimport { ReactNode } from 'react'\nimport MenuDropBlock from '../common/MenuDropBlock'\n\ninterface InvestAndOrdersProps {\n  title: string | ReactNode\n  label: string\n  inputValue: string\n  inputChange?: (value: string) => void\n  list?: string[]\n  onListItemClick?: (item: string) => void\n}\n\nexport default function InvestAndOrders({\n  title,\n  label,\n  inputValue,\n  inputChange = () => {},\n  list = [],\n  onListItemClick = () => {}\n}: InvestAndOrdersProps) {\n  // 处理输入值的变化\n  const handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value.replace(/[^\\d]/g, '') // 去掉非数字字符\n    inputChange(value)\n  }\n  return (\n    <InputBox w=\"50%\" borderRadius=\"16px\">\n      <VStack gap=\"16px\" align=\"flex-start\">\n        {typeof title === 'string' ? (\n          <Text fontWeight=\"500\" lineHeight=\"18px\" fontSize=\"13px\">\n            {title}\n          </Text>\n        ) : (\n          title\n        )}\n        <HStack w=\"100%\" justify=\"space-between\">\n          <Input\n            value={inputValue}\n            onChange={handleInputChange}\n            style={{\n              width: 'calc(100% - 8px)',\n              background: 'none',\n              whiteSpace: 'nowrap',\n              opacity: 1,\n              outline: 'none',\n              color: 'var(--chakra-colors-text_caption)',\n              fontSize: '20px',\n              fontWeight: '500',\n              touchAction: 'manipulation',\n              transition: 'all 0.3s'\n            }}\n          />\n\n          {list.length > 0 ? (\n            <MenuDropBlock label={label} list={list} onListItemClick={onListItemClick} />\n          ) : (\n            <Text color=\"text_caption\">{label}</Text>\n          )}\n        </HStack>\n      </VStack>\n    </InputBox>\n  )\n}\n","import useDcaStore from '@/store/dca'\nimport { InputBox } from '@cetus/design'\nimport { NumericFormatInput } from '@cetus/ui-kit'\nimport { HStack, Text, VStack } from '@chakra-ui/react'\n\ninterface InvestAndOrdersProps {\n  text?: string\n  inputValue: string\n  inputChange: (value: string) => void\n  align: string\n  direct: boolean\n}\n\nexport default function MinAndMaxPrice({ direct, text, align, inputValue, inputChange = () => {} }: InvestAndOrdersProps) {\n  const { sellCoin, buyCoin } = useDcaStore()\n  return (\n    <InputBox w=\"unset\" borderRadius=\"8px\">\n      <HStack>\n        <VStack align={align}>\n          <NumericFormatInput\n            value={inputValue}\n            placeholder=\"0.0\"\n            decimals={18}\n            onChange={value => inputChange(value)}\n            style={{\n              width: 'calc(100% - 8px)',\n              textAlign: align == 'flex-start' ? 'left' : 'right',\n              background: 'none',\n              whiteSpace: 'nowrap',\n              opacity: 1,\n              outline: 'none',\n              color: 'var(--chakra-colors-text_caption)',\n              fontSize: '20px',\n              fontWeight: '500',\n              touchAction: 'manipulation',\n              transition: 'all 0.3s'\n            }}\n          />\n          <HStack w=\"100%\" justify=\"space-between\">\n            <Text fontSize=\"12px\" fontWeight=\"500\">\n              {direct ? `${buyCoin?.symbol} per ${sellCoin?.symbol}` : `${sellCoin?.symbol} per ${buyCoin?.symbol}`}\n            </Text>\n            {text && (\n              <Text fontSize=\"12px\" fontWeight=\"500\">\n                {text}\n              </Text>\n            )}\n          </HStack>\n        </VStack>\n      </HStack>\n    </InputBox>\n  )\n}\n","export default \"__VITE_PUBLIC_ASSET__71e57e82__\"","import useInsufficientBalanceToast from '@/hooks/common/useInsufficientBalanceToast'\nimport useTransaction from '@/hooks/common/useTransaction'\nimport { useDcaHook } from '@/hooks/dca/useDcaHook'\nimport useGetDcaTokenList from '@/hooks/dca/useGetDcaTokenList'\nimport useOpenDcaOrder from '@/hooks/dca/useOpenDcaOrder'\nimport useDcaStore from '@/store/dca'\nimport useProStore from '@/store/pro'\nimport { Block, CurrentPrice, ErrorTips, TooltipIcon, TradeInputGroup, useGlobalToast } from '@cetus/design'\nimport WarningTokenTipsModal from '@cetus/design/src/components/common/WarningTokenTipModal'\nimport { useAccountBalance } from '@cetus/hooks'\nimport { useAccountStore } from '@cetus/stores'\nimport { CommonTypeInfo, ToastType, Token, TransactionStatusType } from '@cetus/types'\nimport { d, formatNumber, formatNumberWithDown, textEllipses } from '@cetus/utils'\nimport { fixCoinType } from '@cetusprotocol/common-sdk'\nimport { Button, HStack, Image, RangeSlider, RangeSliderFilledTrack, RangeSliderThumb, RangeSliderTrack, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useMemo, useState } from 'react'\nimport ConfirmModal from './ConfirmModal'\nimport DetailsBlock from './DetailsBlock'\nimport { detailsDataType } from './DetailsContent'\nimport InvestAndOrders from './InvestAndOrders'\nimport MinAndMaxPrice from './MinAndMaxPrice'\nimport icon_currentprice from '/images/icon_currentprice@2x.png'\n\nexport function DcaInputBlock({ handleGetDcaOrderList }: { handleGetDcaOrderList: (orderId: string) => void }) {\n  const {\n    sellCoin,\n    buyCoin,\n    sellAmount,\n    buyAmount,\n    setInvestNum,\n    setOrderNum,\n    investNum,\n    orderNum,\n    currentInvest,\n    setCurrentInvest,\n    pageDirect,\n    isDcaRefresh,\n    dcaMode,\n    setDcaMode,\n    sellTotalAmount,\n    upperPriceSize,\n    lowerPriceSize,\n    setLowerPriceSize,\n    setUpperPriceSize\n  } = useDcaStore()\n  const {\n    currentPrice,\n    btnStatus,\n    findRouterLoading,\n    sellBalanceInfo,\n    buyBalanceInfo,\n    sellAmountValue,\n    handleAmountChange,\n    handleSelectToken,\n    minPriceValue,\n    maxPriceValue,\n    handleMinInputChange,\n    handleMaxInputChange,\n    handlePageToggleDirect,\n    onReverseClick,\n    orderSizeError,\n    orderInputError,\n    orderTimeError,\n    priceError,\n    sellPerOrder,\n    estEndDate,\n    platformFee,\n    fetchFindAvailableRouterDebounce,\n    cycleFrequency,\n    resetInputAmount,\n    warningTokenList,\n    missingCoins\n  } = useDcaHook()\n\n  useEffect(() => {\n    if (isDcaRefresh) {\n      fetchFindAvailableRouterDebounce()\n    }\n  }, [isDcaRefresh])\n\n  const { currentAccount, onWalletModal } = useAccountStore()\n  const [tradeIcon, setTradeIcon] = useState<string>('#icon-a-icon_trade')\n\n  const timeList: string[] = ['Minute', 'Hour', 'Day', 'Week', 'Month']\n\n  const toggleTradeIcon = (hovered: boolean) => setTradeIcon(hovered ? '#icon-icon_swap1' : '#icon-a-icon_trade')\n  const { openDcaOrder } = useOpenDcaOrder()\n  const [toOpenDcaLoading, setToOpenDcaLoading] = useState(false)\n\n  const { fetchCoinBalance } = useAccountBalance()\n  const { signAndExecuteTransaction, transactionRejected, transactionConfirmation } = useTransaction()\n  const { failedTsToast } = useGlobalToast()\n  const { showInsufficientBalanceToast } = useInsufficientBalanceToast()\n  const toOpenDca = async () => {\n    setToOpenDcaLoading(true)\n    const toastInfo: ToastType = {\n      getShowInfo: (status: TransactionStatusType) => {\n        const desc = `Creating DCA Order for ${formatNumber(sellTotalAmount)} ${sellCoin?.symbol} to ${buyCoin?.symbol} over ${orderNum} orders`\n        const info: CommonTypeInfo = {\n          modalDescriptionText: 'Creating DCA Order',\n          toastTitleText: 'Creating DCA Order'\n        }\n        if (status === 'success') {\n          info.modalDescriptionText = 'DCA Order Created'\n          info.toastDescriptionContent = ''\n          info.toastTitleText = 'DCA Order Created'\n        }\n        return info\n      }\n    }\n    transactionConfirmation(toastInfo)\n    const min_price = !pageDirect ? minPriceValue : d(1).div(maxPriceValue).toString()\n    const max_price = !pageDirect ? maxPriceValue : d(1).div(minPriceValue).toString()\n    try {\n      const params: any = {\n        in_coin: sellCoin,\n        out_coin: buyCoin,\n        in_coin_amount: sellTotalAmount,\n        cycle_count: orderNum,\n        min_price,\n        max_price,\n        freq: cycleFrequency\n      }\n\n      console.log('🚀 ~ toOpenDca ~ params:', !pageDirect, minPriceValue, maxPriceValue, min_price, max_price, params)\n      const tx = await openDcaOrder(params)\n      console.log('🚀 ~ toOpenDca ~ tx:', tx)\n\n      const trackData = {\n        inCoin: sellCoin?.coin_type,\n        outCoin: buyCoin?.coin_type,\n        inCoinAmount: sellTotalAmount,\n        cycleCount: orderNum,\n        minPrice: min_price,\n        maxPrice: max_price,\n        freq: cycleFrequency,\n        txAction: 'openDcaOrder'\n      }\n\n      const res = await signAndExecuteTransaction(tx, toastInfo, { trackData })\n      console.log('🚀 ~ toOpenDca ~ res:', res)\n      if (res) {\n        // 重新拿数据\n        resetInputAmount()\n        setTimeout(() => {\n          fetchCoinBalance(currentAccount?.address, sellCoin?.coin_type)\n          handleGetDcaOrderList(currentAccount?.address as string)\n        }, 2000)\n      }\n      setToOpenDcaLoading(false)\n    } catch (error) {\n      const errorInfo: ToastType = {\n        getShowInfo: (status: TransactionStatusType): CommonTypeInfo => {\n          const info: CommonTypeInfo = {}\n          if (String(error) === 'Error: Each order size should be higher than $10') {\n            info['toastTitleText'] = 'Transaction Submission Error'\n            info['toastDescriptionContent'] = 'Each order size should be higher than $10.'\n          }\n          if (String(error) === 'Error: Request timed out') {\n            info['toastTitleText'] = 'Request timed out'\n            info['toastDescriptionContent'] = 'Please confirm the network status and resubmit the transaction.'\n          }\n          if (String(error) === 'Error: minPrice error') {\n            info['toastTitleText'] = 'DCA order submission failed'\n            info['toastDescriptionContent'] = 'Your nominated prices are out of scope. Please modify your accepted price range and submit it again.'\n          }\n          return info\n        }\n      }\n      console.log('🚀 ~ toOpenDca ~ error:', error)\n      console.error('Open DCA Order Error: ', error)\n      showInsufficientBalanceToast(String(error))\n      transactionRejected(errorInfo)\n      failedTsToast(errorInfo)\n      setToOpenDcaLoading(false)\n    }\n  }\n\n  const { currentCoinKey, inCoinWhiteList, outCoinWhiteList, dcaConfig, whiteTokenList, setWhiteTokenList } = useDcaStore()\n  const { getDcaCoinWhiteList } = useGetDcaTokenList()\n  // const [whiteTokenList, setWhiteTokenList] = useState<Token[]>([])\n  useEffect(() => {\n    if (currentCoinKey == 'sellCoin') {\n      setWhiteTokenList(inCoinWhiteList)\n    } else {\n      setWhiteTokenList(outCoinWhiteList)\n    }\n  }, [currentCoinKey, inCoinWhiteList, outCoinWhiteList])\n\n  useEffect(() => {\n    if (dcaConfig && (dcaConfig.whitelistMode || dcaConfig.whitelistMode == 0)) {\n      console.log('🚀🚀🚀 ~ file: DcaInputBlock.tsx:101 ~ DcaInputBlock ~ dcaConfig:', dcaConfig)\n      getDcaCoinWhiteList(dcaConfig.whitelistMode)\n    }\n  }, [dcaConfig])\n\n  const [isOpenConfirmModal, setIsOpenConfirmModal] = useState(false)\n\n  const detailsData: detailsDataType = useMemo(() => {\n    const decimals = !pageDirect ? sellCoin?.decimals : buyCoin?.decimals\n    let minPrice = ''\n    let maxPrice = ''\n    let minPriceResever = ''\n    let maxPriceResever = ''\n    if (minPriceValue && maxPriceValue) {\n      minPrice = !pageDirect ? minPriceValue : formatNumberWithDown(d(1).div(maxPriceValue).toString(), decimals, true).toString()\n      maxPrice = !pageDirect ? maxPriceValue : formatNumberWithDown(d(1).div(minPriceValue).toString(), decimals, true).toString()\n      minPriceResever = !pageDirect ? formatNumberWithDown(d(1).div(maxPriceValue).toString(), decimals, true).toString() : minPriceValue\n      maxPriceResever = !pageDirect ? formatNumberWithDown(d(1).div(minPriceValue).toString(), decimals, true).toString() : maxPriceValue\n    }\n    return { estEndDate, sellPerOrder, platformFee, minPriceValue: minPrice, maxPriceValue: maxPrice, minPriceResever, maxPriceResever }\n  }, [pageDirect, estEndDate, sellPerOrder, platformFee, minPriceValue, maxPriceValue])\n\n  const tabList = [\n    { label: 'Total', value: 'total' },\n    { label: 'Per Order', value: 'perOrder' }\n  ]\n\n  const [value, setValue] = useState<number[]>([0, 0])\n  const [minValue, setMinValue] = useState<number>(0)\n  const [maxValue, setMaxValue] = useState<number>(0)\n\n  const handleSlider = (val: number[]) => {\n    console.log('🚀 ~ handleSlider ~ val:', val)\n    setValue(val)\n    handleMinInputChange(val[0].toString())\n    handleMaxInputChange(val[1].toString())\n  }\n\n  useEffect(() => {\n    // 计算滑杆的min和max值 实际为了保证当前价格在中间 min=0 max=currentPrice * 2\n    if (minPriceValue && maxPriceValue) {\n      const start = Number(minPriceValue)\n      const end = Number(maxPriceValue)\n      setValue([start, end])\n      console.log('🚀 ~ useEffect ~ start:', start, end)\n    }\n    if (!minPriceValue) {\n      setLowerPriceSize('0%')\n    }\n    if (!maxPriceValue) {\n      setUpperPriceSize('0%')\n    }\n  }, [minPriceValue, maxPriceValue])\n\n  useEffect(() => {\n    if (currentPrice) {\n      const min = d('-100').div(100).plus(1).mul(currentPrice).toNumber()\n      const max = d('100').div(100).plus(1).mul(currentPrice).toNumber()\n      console.log('🚀 ~ useEffect ~ min:', min, max)\n      setMinValue(min)\n      setMaxValue(max)\n    }\n  }, [currentPrice])\n\n  // useEffect(() => {\n  //   console.log('DcaInputBlock#### sellCoin: ', sellCoin)\n  //   console.log('DcaInputBlock#### buyCoin: ', buyCoin)\n  //   console.log('DcaInputBlock#### pageDirect: ', pageDirect)\n  // }, [sellCoin, buyCoin, pageDirect])\n\n  const isNotSupported = useMemo(() => {\n    const a = inCoinWhiteList?.filter((item: any) => item?.coin_type == sellCoin?.coin_type)\n    const b = outCoinWhiteList?.filter((item: any) => item?.coin_type == buyCoin?.coin_type)\n\n    if (inCoinWhiteList?.length && outCoinWhiteList?.length && (a?.length < 1 || b?.length < 1)) {\n      return true\n    }\n    return false\n  }, [inCoinWhiteList, outCoinWhiteList, sellCoin, buyCoin])\n\n  const { showTokenInfo, isProMode, currentProTab, currentProTabUpdateWith } = useProStore()\n\n  useEffect(() => {\n    if (currentProTabUpdateWith === 'toggleBtn' || !currentProTabUpdateWith) return\n    if (showTokenInfo?.coin_type && buyCoin?.coin_type && sellCoin?.coin_type) {\n      if (\n        (currentProTab == 'Buy' && fixCoinType(showTokenInfo?.coin_type) !== fixCoinType(buyCoin?.coin_type)) ||\n        (currentProTab == 'Sell' && fixCoinType(showTokenInfo?.coin_type) !== fixCoinType(sellCoin?.coin_type))\n      ) {\n        onReverseClick()\n      }\n    } else if (showTokenInfo?.coin_type && buyCoin?.coin_type && !sellCoin?.coin_type) {\n      onReverseClick()\n    } else if (showTokenInfo?.coin_type && !buyCoin?.coin_type && sellCoin?.coin_type) {\n      onReverseClick()\n    }\n  }, [currentProTab])\n  return (\n    <VStack w=\"100%\">\n      <TradeInputGroup\n        onClick={() => onReverseClick(true)}\n        currentCoinKey={currentCoinKey}\n        whiteTokenList={whiteTokenList}\n        from={{\n          inputTabOptions: {\n            type: 'outlineTab',\n            tabList,\n            currentTab: dcaMode == 'total' ? 'Total' : 'Per Order',\n            handleChangeTab: tab => {\n              setDcaMode(tab?.value)\n            },\n            wrapStyle: {\n              w: '168px',\n              h: '28px',\n              p: '3px',\n              borderRadius: '10px'\n            },\n            itemStyle: {\n              flex: '1',\n              fontSize: '12px',\n              margin: '0px',\n              borderRadius: '6px'\n            }\n          },\n          title: 'You Pay',\n          balance: sellBalanceInfo?.balanceFormat || '',\n          value: sellAmount,\n          amountValue: sellAmountValue,\n          loading: false,\n          onChange: handleAmountChange,\n          selectable: true,\n          placeholder: '0.0',\n          token: sellCoin,\n          whiteTokenList: inCoinWhiteList,\n          onTokenChange: token => handleSelectToken(token, true)\n        }}\n        to={{\n          isDcaTo: true,\n          wrapStyle: {\n            backgroundColor: 'bg_secondary',\n            h: '94px'\n          },\n          title: 'You Receive',\n          inputAllowed: false,\n          balance: buyBalanceInfo?.balanceFormat || '',\n          value: '',\n          amountValue: '',\n          loading: false,\n          onChange: () => {},\n          token: buyCoin,\n          whiteTokenList: outCoinWhiteList,\n          onTokenChange: token => handleSelectToken(token, false),\n          selectable: true,\n          placeholder: '',\n          half: false,\n          max: false\n        }}\n        iconParams={{\n          xlinkHref: tradeIcon,\n          svgFill: 'text_caption',\n          transform: tradeIcon === '#icon-a-icon_trade' ? '' : 'rotate(90deg)',\n          fontSize: tradeIcon === '#icon-a-icon_trade' ? '12px' : '16px',\n          onMouseEnter: () => toggleTradeIcon(true),\n          onMouseLeave: () => toggleTradeIcon(false)\n        }}\n      />\n      {orderSizeError?.status && <ErrorTips tips={orderSizeError?.tips} bg=\"primary_red_bg\" />}\n      <HStack w=\"100%\">\n        <InvestAndOrders\n          title=\"Invest Every\"\n          label={currentInvest}\n          inputValue={investNum}\n          list={timeList}\n          onListItemClick={item => {\n            setCurrentInvest(item)\n          }}\n          inputChange={item => {\n            console.log('🚀 ~ DcaInputBlock ~ item:', item)\n            setInvestNum(item)\n          }}\n        />\n        <InvestAndOrders\n          title={\n            <TooltipIcon\n              tooltipCon=\"How many orders your want to repeat in total.\"\n              children={\n                <Text fontSize=\"13px\" fontWeight=\"500\" mr=\"4px\">\n                  Over\n                </Text>\n              }\n            />\n          }\n          label=\"Orders\"\n          inputValue={orderNum}\n          inputChange={item => {\n            setOrderNum(item)\n            fetchFindAvailableRouterDebounce()\n          }}\n        />\n      </HStack>\n      {orderInputError?.status && <ErrorTips tips={orderInputError?.tips} bg=\"primary_red_bg\" />}\n      {orderTimeError?.status && <ErrorTips tips={orderTimeError?.tips} bg=\"primary_red_bg\" />}\n      <Block zIndex=\"1\" p=\"16px\" borderRadius=\"16px\">\n        <VStack align=\"flex-start\">\n          <Text color=\"text_caption\">Set Price Range</Text>\n          <Text lineHeight=\"16px\" fontSize=\"12px\" m={{ base: '4px 0', lg: '0' }} mb={{ base: sellAmount ? '4px' : '0' }}>\n            DCA will only be executed if the price falls within the range of your pricing strategy.\n          </Text>\n          {sellAmount && sellPerOrder && buyAmount && buyAmount != '0' && (\n            <HStack mt=\"8px\" w=\"100%\" justify=\"space-between\" flexDirection={{ base: 'column', lg: 'row' }} align={{ base: 'align', lg: 'center' }}>\n              <Text>Current Rate</Text>\n              <VStack align={{ base: 'flex-start', lg: 'flex-end' }}>\n                <CurrentPrice\n                  color=\"text_caption\"\n                  pageDirect={pageDirect}\n                  handlePageToggleDirect={handlePageToggleDirect}\n                  fromToken={sellCoin!}\n                  toToken={buyCoin!}\n                  fromValue={sellPerOrder}\n                  toValue={buyAmount}\n                  isLoading={findRouterLoading || !buyAmount || !sellPerOrder}\n                />\n              </VStack>\n            </HStack>\n          )}\n        </VStack>\n        <HStack justify=\"space-between\" gap=\"8px\" mt=\"20px\">\n          <MinAndMaxPrice\n            direct={pageDirect}\n            text={sellAmount && minPriceValue ? lowerPriceSize : ''}\n            inputValue={minPriceValue}\n            inputChange={val => handleMinInputChange(val)}\n            align=\"flex-start\"\n          />\n          <Text color=\"text_caption\">-</Text>\n          <MinAndMaxPrice\n            direct={pageDirect}\n            text={sellAmount && maxPriceValue ? upperPriceSize : ''}\n            inputValue={maxPriceValue}\n            inputChange={val => handleMaxInputChange(val)}\n            align=\"flex-start\"\n          />\n        </HStack>\n        {!findRouterLoading &&\n          sellAmount &&\n          minPriceValue &&\n          maxPriceValue &&\n          Number(maxPriceValue) >= Number(minPriceValue) &&\n          btnStatus?.text !== 'No Available Route' &&\n          buyAmount &&\n          buyAmount != '0' && (\n            <VStack w=\"100%\" gap=\"0\" mt=\"20px\">\n              <RangeSlider\n                min={minValue}\n                max={maxValue}\n                step={0.1}\n                value={value}\n                onChange={val => {\n                  handleSlider(val)\n                }}\n                colorScheme=\"teal\"\n              >\n                <RangeSliderTrack>\n                  <RangeSliderFilledTrack />\n                </RangeSliderTrack>\n                <RangeSliderThumb index={0} />\n                <RangeSliderThumb index={1} />\n              </RangeSlider>\n              <Image src={icon_currentprice} w=\"32px\" h=\"32px\" />\n              <HStack w=\"100%\" h=\"14px\" justify=\"center\" mt=\"-2px\">\n                <Text>Current Rate</Text>\n              </HStack>\n            </VStack>\n          )}\n      </Block>\n      {priceError?.status && <ErrorTips tips={priceError?.tips} bg=\"primary_red_bg\" />}\n      {/* Pro选择到不支持的token时需要提示 */}\n      {isNotSupported && buyCoin && sellCoin && (\n        <ErrorTips tips=\"This token is not supported for DCA yet. Please select from the supported list.\" type=\"warning\" isShowIcon={false} />\n      )}\n      {missingCoins && missingCoins?.length > 0 && (\n        <ErrorTips\n          tips={`${missingCoins.map(coin => textEllipses(coin.symbol)).join(missingCoins.length === 2 ? ' and ' : ', ')} ${missingCoins.length === 1 ? 'is' : 'are'} not supported for DCA yet.`}\n          type=\"warning\"\n          isShowIcon={false}\n        />\n      )}\n\n      <Button\n        isLoading={toOpenDcaLoading}\n        isDisabled={btnStatus?.disabled || toOpenDcaLoading || isNotSupported || missingCoins?.length > 0}\n        w=\"100%\"\n        h=\"52px\"\n        fontSize=\"18px\"\n        fontWeight=\"500\"\n        variant={isProMode ? `solid-${currentProTab?.toLocaleLowerCase()}` : 'solid'}\n        // variant=\"solid\"\n        onClick={btnStatus?.text == 'Connect Wallet' ? () => onWalletModal(true) : () => setIsOpenConfirmModal(true)}\n      >\n        {isProMode && btnStatus?.text == 'Create DCA Order' ? currentProTab : btnStatus?.text}\n      </Button>\n      {sellAmount && <DetailsBlock detailsData={detailsData} />}\n      {isOpenConfirmModal && (\n        <ConfirmModal\n          confirmData={detailsData}\n          isOpen={isOpenConfirmModal}\n          onClose={() => setIsOpenConfirmModal(false)}\n          toOpenDca={toOpenDca}\n          toOpenDcaLoading={toOpenDcaLoading}\n        />\n      )}\n      {(buyCoin || sellCoin) && (\n        <WarningTokenTipsModal\n          addToken\n          tokensInfo={warningTokenList}\n          waringModalCancel={(tokenInfo: Token[]) => {\n            tokenInfo.forEach(coin => {\n              const hasFind = coin.coin_type === buyCoin?.coin_type || coin.coin_type === sellCoin?.coin_type\n              if (hasFind) {\n                handleSelectToken(undefined, coin.coin_type === buyCoin?.coin_type)\n              }\n            })\n          }}\n        />\n      )}\n    </VStack>\n  )\n}\n","import ProChart from '@/components/chart/ProChart'\nimport { ChartOrderIcon } from '@/components/common/ChartOrderIcon'\nimport ProModeAndChart from '@/components/common/proModeAndChart'\nimport { TradeTab } from '@/components/common/TradeTab'\nimport ActiveAndPastDcas from '@/components/dca/ActiveAndPastDcas'\nimport { DcaInputBlock } from '@/components/dca/DcaInputBlock'\nimport { LimitPriceChart } from '@/components/limit/LimitPriceChart'\nimport { TradeTabs } from '@/components/swap/type'\nimport { useGetDcaOrderList } from '@/hooks/dca/useGetDcaOrderList'\nimport useGlobalStore from '@/store/common/global'\nimport useDcaStore from '@/store/dca'\nimport useProStore from '@/store/pro'\nimport useActiveOrdersStore from '@/store/profile/activeOrders'\nimport { useAccountBalance, useInterval, useRpcListener } from '@cetus/hooks'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { useAccountStore } from '@cetus/stores'\nimport { fixCoinType } from '@cetusprotocol/common-sdk'\nimport { HStack, VStack } from '@chakra-ui/react'\nimport { Suspense, useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nexport default function Dca() {\n  const { currentAccount } = useAccountStore()\n  const { sellCoin, buyCoin, setIsDcaRefresh, whiteTokenList, setBuyCoin, setSellCoin } = useDcaStore()\n  const { isShowTradeChart, isShowTradeOrders } = useGlobalStore()\n  const { getDcaOrderList } = useGetDcaOrderList()\n  const { fetchAccountBalance } = useAccountBalance()\n\n  const { dcaOrderListLoading, setDcaOrderListLoading, dcaActiveOrderList, dcaPastOrderList, setDcaActiveOrderList, setDcaPastOrderList } =\n    useActiveOrdersStore()\n\n  const handleGetDcaOrderList = async (account: string, isLoading: boolean = false) => {\n    if (!isProMode && !isShowTradeOrders) return\n    if (isLoading) {\n      setDcaOrderListLoading(true)\n    }\n    getDcaOrderList(account, isLoading)\n  }\n\n  useEffect(() => {\n    if (currentAccount?.address) {\n      handleGetDcaOrderList(currentAccount?.address, true)\n    } else {\n      setDcaActiveOrderList([])\n      setDcaPastOrderList([])\n    }\n  }, [currentAccount?.address, isShowTradeOrders])\n\n  const handleRefresh = (isLoading: boolean = true) => {\n    setRefreshCount(0)\n    setIsDcaRefresh(true)\n    setTimeout(() => {\n      setIsDcaRefresh(false)\n    }, 1000)\n    if (currentAccount?.address) {\n      if (!isLoading) {\n        // 手动刷新的时候只请求记录不请求余额 只有20s自动刷新和进入页面时请求余额\n        fetchAccountBalance()\n      }\n      handleGetDcaOrderList(currentAccount?.address, isLoading)\n    }\n  }\n\n  useRpcListener({\n    onRpcChange: () => {\n      handleRefresh()\n    }\n  })\n\n  useEffect(() => {\n    if (currentAccount?.address) {\n      fetchAccountBalance()\n    }\n  }, [currentAccount?.address])\n\n  const { isApp, windowWidth } = useWindowWidth()\n\n  const [refreshCount, setRefreshCount] = useState<number>(0)\n  // 移动端使用更长的刷新间隔\n  const refreshInterval = isApp ? 2000 : 1000\n  const maxRefreshCount = isApp ? 10 : 20\n\n  useInterval({\n    interval: refreshInterval,\n    callback: () => {\n      setRefreshCount(refreshCount + 1)\n      if (refreshCount >= maxRefreshCount && !isProMode) {\n        handleRefresh(false)\n      }\n    }\n  })\n\n  const [isChangeDirect, setIsChangeDirect] = useState(false)\n  const { isProMode, currentProTab, showTokenInfo, setShowTokenInfo, setAnotherTokenInfo, coinBvPriceUnit, setIsCoinSelect } = useProStore()\n  const handleToggleDirect = () => {\n    setIsChangeDirect(!isChangeDirect)\n    if (showTokenInfo && fixCoinType(showTokenInfo?.coin_type) == fixCoinType(buyCoin?.coin_type || '')) {\n      setShowTokenInfo(sellCoin)\n      setAnotherTokenInfo(buyCoin)\n    } else {\n      setShowTokenInfo(buyCoin)\n      setAnotherTokenInfo(sellCoin)\n    }\n  }\n\n  const navigate = useNavigate()\n  const onCoinSelect = (item: any) => {\n    setIsCoinSelect(true)\n    setShowTokenInfo(item)\n    if (currentProTab == 'Buy') {\n      if (item?.coin_type == sellCoin?.coin_type) {\n        setIsChangeDirect(!isChangeDirect)\n        setAnotherTokenInfo(buyCoin)\n\n        // setSellCoin(buyCoin)\n        // setBuyCoin(item)\n        navigate(`/dca/${buyCoin?.coin_type}/${item?.coin_type}`)\n      } else if (item?.coin_type === buyCoin?.coin_type) {\n        setAnotherTokenInfo(sellCoin)\n      } else {\n        // setBuyCoin(item)\n        navigate(`/dca/${sellCoin?.coin_type}/${item?.coin_type}`)\n        setAnotherTokenInfo(sellCoin)\n      }\n    } else {\n      if (item?.coin_type == buyCoin?.coin_type) {\n        setIsChangeDirect(!isChangeDirect)\n        setAnotherTokenInfo(sellCoin)\n\n        // setBuyCoin(sellCoin)\n        // setSellCoin(item)\n        navigate(`/dca/${item?.coin_type}/${buyCoin?.coin_type}`)\n      } else if (item?.coin_type === sellCoin?.coin_type) {\n        setAnotherTokenInfo(buyCoin)\n      } else {\n        // setSellCoin(item)\n        navigate(`/dca/${item?.coin_type}/${buyCoin?.coin_type}`)\n        setAnotherTokenInfo(buyCoin)\n      }\n    }\n  }\n\n  useEffect(() => {\n    return () => {\n      setIsCoinSelect(false)\n    }\n  }, [])\n  return (\n    <HStack\n      mt={windowWidth && windowWidth < 1024 ? '0px' : isProMode ? '0px' : '42px'}\n      className={isProMode || isApp || isShowTradeChart || isShowTradeOrders ? '' : 'bg_img'}\n      w=\"100%\"\n      gap=\"0px\"\n      justify=\"center\"\n      align=\"flex-start\"\n      flexDirection={{ base: 'column-reverse', lg: 'row' }}\n    >\n      {/* {(isShowTradeOrders || isShowTradeChart) && (\n        <VStack w={{ base: '100%', lg: 'calc(100% - 470px)' }} mt={isApp && !isShowTradeChart ? '-16px' : '0'}>\n          {isShowTradeChart && <LimitPriceChart baseToken={sellCoin} quoteToken={buyCoin} />}\n          {isShowTradeOrders && !isApp && (\n            <ActiveAndPastDcas\n              handleRefresh={handleRefresh}\n              activeList={dcaActiveOrderList}\n              pastList={dcaPastOrderList}\n              isOrderLoading={dcaOrderListLoading}\n            />\n          )}\n        </VStack>\n      )}\n      <VStack w={{ base: '100%', lg: '470px' }}>\n        <HStack w=\"100%\" justify=\"space-between\" mb=\"8px\">\n          <TradeTab currTradeTab={TradeTabs.DCA} />\n          <ChartOrderIcon />\n        </HStack>\n        <DcaInputBlock handleGetDcaOrderList={(walletAddress: string) => handleGetDcaOrderList(walletAddress)} />\n      </VStack> */}\n      {/* h5orders */}\n      {isApp && isShowTradeOrders && (\n        <VStack w={{ base: '100%', lg: 'calc(100% - 470px)' }}>\n          <ActiveAndPastDcas\n            handleRefresh={handleRefresh}\n            activeList={dcaActiveOrderList}\n            pastList={dcaPastOrderList}\n            isOrderLoading={dcaOrderListLoading}\n          />\n        </VStack>\n      )}\n\n      {/* pc chart and orders */}\n      {(isShowTradeChart || isShowTradeOrders || isProMode) &&\n        (isProMode ? (\n          <ProModeAndChart\n            whiteTokenList={whiteTokenList}\n            onCoinSelect={(item: any) => onCoinSelect(item)}\n            isChangeDirect={isChangeDirect}\n            tokenA={sellCoin}\n            tokenB={buyCoin}\n            handleToggleDirect={handleToggleDirect}\n          />\n        ) : !isApp ? (\n          <VStack pr={isProMode ? '0' : '20px'} w={{ base: '100%', lg: isProMode ? 'calc(100% + 380px)' : 'calc(100% - 470px)' }}>\n            {isShowTradeChart && <LimitPriceChart baseToken={sellCoin} quoteToken={buyCoin} />}\n            {isShowTradeOrders && (\n              <ActiveAndPastDcas\n                handleRefresh={handleRefresh}\n                activeList={dcaActiveOrderList}\n                pastList={dcaPastOrderList}\n                isOrderLoading={dcaOrderListLoading}\n              />\n            )}\n          </VStack>\n        ) : null)}\n\n      {/* input交易框 */}\n      <VStack w={{ base: '100%', lg: isProMode ? '380px' : '470px' }}>\n        <HStack w=\"100%\" justify=\"space-between\" mb=\"8px\">\n          <TradeTab currTradeTab={TradeTabs.DCA} />\n          {!isProMode && <ChartOrderIcon />}\n        </HStack>\n        <DcaInputBlock handleGetDcaOrderList={(walletAddress: string) => handleGetDcaOrderList(walletAddress)} />\n      </VStack>\n\n      {/* h5chart */}\n      {isApp && (isShowTradeChart || isProMode) ? (\n        isProMode ? (\n          <ProChart\n            onCoinSelect={(item: any) => onCoinSelect(item)}\n            handleToggleDirect={handleToggleDirect}\n            token={showTokenInfo}\n            tokenPriceUnit={coinBvPriceUnit}\n          />\n        ) : (\n          <VStack w=\"100%\">\n            <Suspense fallback={<div />}>\n              <LimitPriceChart baseToken={buyCoin} quoteToken={sellCoin} />\n            </Suspense>\n          </VStack>\n        )\n      ) : null}\n    </HStack>\n  )\n}\n"],"names":["DcaItem","currentTabVal","orderInfo","isApp","useWindowWidth","sellCoin","buyCoin","isDetail","setIsDetail","useState","useEffect","getTokenRank","useTokenRank","pageDirect","setPageDirect","direct","closeOrderAction","isCloseLoading","useDcaItemActions","closeOrder","getExplorerUrl","useExplorer","VStack","jsxs","HStack","jsx","DcaItemCoinPirBlock","Icon","BtnContent","DcaProgressBlock","Text","RangeValueBlock","OverviewOrders","onClickDetail","Button","ActiveAndPastDcas","handleRefresh","activeList","pastList","isOrderLoading","pageList","setPageList","paginationList","setPaginationList","total","setTotal","currentPage","setCurrentPage","currentAccount","onWalletModal","useAccountStore","currentTab","setCurrentTab","tabList","useMemo","handleChangeTab","item","currentList","start","end","totalClaimNum","sum","d","closeAll","claimAll","isClaimAllLoading","isCloseAllLoading","useDcaActions","SelectTab","RefreshButton","Block","index","OrderLoading","NoData","Center","Pagination","SkeletonCircle","Skeleton","useDcaConfig","fetchByApi","useFetch","dcaSdk","useSdk","setDcaConfig","useDcaStore","getDcaConfigFromApi","DcaConfigPath","getDcaConfigFromContract","dcaConfig","apiConfig","error","contractConfig","useDcaGetQuote","setDcaQuote","inCoin","freq","count","sender","data","DcaQuotePath","result","useDcaHook","navigate","useNavigate","setSellCoin","setBuyCoin","sellAmount","buyAmount","setBuyAmount","setSellAmount","setCurrentCoinKey","currentCoinKey","investNum","currentInvest","orderNum","dcaQuote","setInvestNum","setOrderNum","setCurrentInvest","dcaMode","sellTotalAmount","setSellTotalAmount","setLowerPriceSize","setUpperPriceSize","from","to","useParams","getDcaConfig","getDcaQuote","coinPriceObj","useTokenPriceStore","fetchTokenPrices","getTokenAmountValue","useTokenPrice","uuid","setUuid","uuidRef","useRef","fetchTokenInfo","useGetToken","setCurrentProTab","currentProTab","currentProTabUpdateWith","useProStore","envConfigs","token","resetInputAmount","minPriceValue","setMinPriceValue","maxPriceValue","setMaxPriceValue","sellBalanceInfo","useGetTokenBalance","buyBalanceInfo","sellAmountValue","handleAmountChange","amount","fetchFindAvailableRouterDebounce","handlePageToggleDirect","decimals","value","newMinVal","newMaxVal","formatNumberWithDown","handleSelectToken","coin","isSell","fixCoinType","onReverseClick","isClickToggle","isDcaSelect","whitelistMode","sellCoinPrice","_a","extractStructTagFromType","sellPerOrder","sellPerOrderUSD","platformFee","Decimal","amountInLimit","bnToAmount","orderSizeError","orderInputError","priceError","estEndDate","setEstEndDate","orderTimeError","setOrderTimeError","getEstEndDate","date","investTime","timeFormatUTC","cycleFrequency","queryDcaQuoteDebounce","queryDcaQuote","coinAddress","defaultWalletAddress","useDebounceFunction","findBestRouters","useFindBestRouting","findRouterLoading","setFindRouterLoading","routerData","setRouterData","missingCoins","setMissingCoins","getTokensPrice","checkPriceAvailability","findAvailableRouterDebounce","findAvailableRouter","newUuid","providersKeys","AggregatorDexMap","key","toDecimalsAmount","uniqueTokens","btnStatus","btnInfo","AggregatorServerErrorCode","_c","_b","warningTokenList","list","currentPrice","formatNumber","minPriceValueDebounce","val","maxPriceValueDebounce","handleMinInputChange","handleMaxInputChange","changeLowerPriceSize","changeUpperPriceSize","lowerPrice","upperPrice","requestedCoinTypes","suiAddressShortToLong","priceResponse","availableCoinTypes","price","unsupportedCoinTypes","coinType","missingCoinInfos","allRequestedCoins","useGetDcaTokenList","getTokenListInfo","setFilterTokenLoading","useTokenSelectStore","setInCoinWhiteList","setOutCoinWhiteList","whitelist_mode","in_coin_list","out_coin_list","inList","outList","inCoinTypeList","inTokenMap","i","tokenInfo","outCoinTypeList","outTokenMap","useOpenDcaOrder","calculateCycleAmounts","inCoinAmount","cycleCount","inCoinDecimals","outCoinDecimals","minPrice","maxPrice","cycleCountAmount","maxAmount","minAmount","perCycleMinOutAmount","perCycleMaxOutAmount","perCycleAmountDecimal","buildDcaOrderPayload","params","quoteResult","in_coin","in_coin_amount","cycle_count","out_coin","min_price","max_price","dcaOpenOrderPayloadParams","tx","DetailsContent","detailsData","isConfirm","minPriceResever","maxPriceResever","HTextLabelBox","SingleCoinImage","RangeValue","addComma","ConfirmModal","confirmData","isOpen","onClose","toOpenDca","toOpenDcaLoading","Modal","ModalOverlay","ModalContent","ModalHeader","Heading","ModalCloseButton","ModalBody","SingleTokenInfo","Box","DetailsBlock","InvestAndOrders","title","label","inputValue","inputChange","onListItemClick","handleInputChange","event","InputBox","Input","MenuDropBlock","MinAndMaxPrice","text","align","NumericFormatInput","icon_currentprice","DcaInputBlock","handleGetDcaOrderList","isDcaRefresh","setDcaMode","upperPriceSize","lowerPriceSize","tradeIcon","setTradeIcon","timeList","toggleTradeIcon","hovered","openDcaOrder","setToOpenDcaLoading","fetchCoinBalance","useAccountBalance","signAndExecuteTransaction","transactionRejected","transactionConfirmation","useTransaction","failedTsToast","useGlobalToast","showInsufficientBalanceToast","useInsufficientBalanceToast","toastInfo","status","info","trackData","res","errorInfo","inCoinWhiteList","outCoinWhiteList","whiteTokenList","setWhiteTokenList","getDcaCoinWhiteList","isOpenConfirmModal","setIsOpenConfirmModal","setValue","minValue","setMinValue","maxValue","setMaxValue","handleSlider","min","max","isNotSupported","a","b","showTokenInfo","isProMode","TradeInputGroup","tab","ErrorTips","TooltipIcon","CurrentPrice","RangeSlider","RangeSliderTrack","RangeSliderFilledTrack","RangeSliderThumb","Image","textEllipses","WarningTokenTipsModal","Dca","setIsDcaRefresh","isShowTradeChart","isShowTradeOrders","useGlobalStore","getDcaOrderList","useGetDcaOrderList","fetchAccountBalance","dcaOrderListLoading","setDcaOrderListLoading","dcaActiveOrderList","dcaPastOrderList","setDcaActiveOrderList","setDcaPastOrderList","useActiveOrdersStore","account","isLoading","setRefreshCount","useRpcListener","windowWidth","refreshCount","refreshInterval","maxRefreshCount","useInterval","isChangeDirect","setIsChangeDirect","setShowTokenInfo","setAnotherTokenInfo","coinBvPriceUnit","setIsCoinSelect","handleToggleDirect","onCoinSelect","ProModeAndChart","LimitPriceChart","TradeTab","TradeTabs","ChartOrderIcon","walletAddress","ProChart","Suspense"],"mappings":"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"}