{"version":3,"file":"AnalyticsCharts-CS9elX4G.js","sources":["../../src/hooks/clmm/useAnalyticChart.ts","../../src/components/liquidity/clmm/analytics/AnalyticsCharts.tsx"],"sourcesContent":["import useLiquidityStore from '@/store/clmm'\nimport { Tab } from '@cetus/design/src/components/common/SelectTab'\nimport useQueryParams from '@cetus/hooks/src/useQueryParams'\nimport { isAvailableObject } from '@cetus/utils'\nimport { useEffect, useLayoutEffect, useMemo, useState } from 'react'\nimport { useChartTime } from '../common/useChartTime'\nimport useGetHistogramData from '../stats/useGetHistogramData'\n\nexport enum ChartsTabsEnum {\n  volume = 'Volume',\n  tvl = 'TVL',\n  fees = 'Fees'\n}\nexport enum ChartsTypeEnum {\n  volume = 'vol',\n  tvl = 'tvl',\n  fees = 'fee'\n}\n\nexport enum DateTabsEnum {\n  d = 'D',\n  w = 'W',\n  m = 'M'\n}\n\nexport enum DateTypeEnum {\n  d = 'day',\n  w = 'wek',\n  m = 'mon'\n}\n\nexport type ChartsTabsType = { label: ChartsTabsEnum }\n\nexport type DateTypes = { label: DateTabsEnum }\n\nconst LimitMap: Record<DateTabsEnum, number> = {\n  [DateTabsEnum.d]: 40,\n  [DateTabsEnum.w]: 30,\n  [DateTabsEnum.m]: 20\n}\nfunction useAnalyticChart(poolInfo: any) {\n  const [currentChartTab, setCurrentChartTab] = useState<ChartsTabsEnum>(ChartsTabsEnum.volume)\n  const [currentDateType, setCurrentDateType] = useState<DateTabsEnum>(DateTabsEnum.d)\n  const [analyticsData, setAnalyticsData] = useState([])\n  const { apiPoolInfo: liquidityStorePoolInfo } = useLiquidityStore()\n  const [chartLoading, setChartLoading] = useState(true)\n  const [hoverData, setHoverData] = useState<any>(null)\n  const { getHistogramData } = useGetHistogramData()\n  const { poolAddress: queryPoolAddress } = useQueryParams()\n  const { getHoverTime, time } = useChartTime()\n\n  const poolAddress = useMemo(() => {\n    return isAvailableObject(poolInfo) ? poolInfo?.poolAddress : queryPoolAddress\n  }, [queryPoolAddress, poolInfo])\n\n  const apiPoolInfo = useMemo(() => {\n    return isAvailableObject(poolInfo) ? poolInfo : liquidityStorePoolInfo\n  }, [liquidityStorePoolInfo, poolInfo])\n\n  /**\n   * 根据池子地址初始化数据\n   * Initialize data based on pool address\n   */\n  useLayoutEffect(() => {\n    setAnalyticsData([])\n    setCurrentChartTab(ChartsTabsEnum.volume)\n    setCurrentDateType(DateTabsEnum.d)\n    setHoverData(null)\n  }, [poolAddress])\n\n  const fetchAnalyticsData = async () => {\n    if (!poolAddress) return\n    try {\n      setChartLoading(true)\n      const result = await getHistogramData({\n        date_type: DateTypeEnum[currentDateType.toLowerCase() as keyof typeof DateTypeEnum],\n        type: ChartsTypeEnum[currentChartTab.toLowerCase() as keyof typeof ChartsTypeEnum],\n        limit: LimitMap[currentDateType],\n        address: poolAddress\n      })\n\n      if (result && result.length) {\n        setAnalyticsData(result)\n      }\n    } catch (error) {\n      console.error(error, 'res-fetchAnalyticsData')\n      throw error\n    } finally {\n      setChartLoading(false)\n    }\n  }\n\n  /**\n   * 切换图表类型或日期类型时，重新获取数据\n   * Re-get data when switching chart type or date type\n   */\n  useEffect(() => {\n    fetchAnalyticsData()\n  }, [poolAddress, currentChartTab, currentDateType])\n\n  /**\n   * 鼠标移动到图表上时，获取时间\n   * Get time when mouse moves over chart\n   */\n  useEffect(() => {\n    if (hoverData?.date) {\n      getHoverTime(hoverData?.date, currentDateType)\n    }\n  }, [hoverData?.date, currentDateType])\n\n  /**\n   * 切换图表类型\n   * Switch chart type\n   */\n  const handleChartTabChange = (item: Tab<ChartsTabsType>) => {\n    setCurrentChartTab(item.label)\n    if (item.label !== currentChartTab) {\n      setAnalyticsData([])\n    }\n  }\n  /**\n   * 切换日期类型\n   * Switch date type\n   */\n  const handleDateTabChange = (item: Tab<DateTypes>) => {\n    setCurrentDateType(item.label)\n    if (item.label !== currentDateType) {\n      setAnalyticsData([])\n    }\n  }\n  /**\n   * 默认展示数据\n   * Default display data\n   */\n  const defaultDisplay = useMemo(() => {\n    if (currentChartTab === ChartsTabsEnum.volume) {\n      return { value: apiPoolInfo?.volume24Display, title: 'Volume (24H)' }\n    } else if (currentChartTab === ChartsTabsEnum.tvl) {\n      return { value: apiPoolInfo?.tvlDisplay, title: 'TVL' }\n    } else if (currentChartTab === ChartsTabsEnum.fees) {\n      return { value: apiPoolInfo?.fees24Display, title: 'Fees (24H)' }\n    }\n  }, [currentChartTab, apiPoolInfo?.volume24Display, apiPoolInfo?.tvlDisplay, apiPoolInfo?.fees24Display])\n\n  const chartsTabs = Object.values(ChartsTabsEnum).map(value => ({\n    label: value\n  }))\n  const dateTypes = Object.values(DateTabsEnum).map(value => ({\n    label: value\n  }))\n\n  return {\n    handleChartTabChange,\n    handleDateTabChange,\n    defaultDisplay,\n    chartsTabs,\n    dateTypes,\n    chartLoading,\n    analyticsData,\n    hoverData,\n    setHoverData,\n    currentChartTab,\n    currentDateType,\n    time\n  }\n}\n\nexport default useAnalyticChart\n","import TvlChart from '@/components/chart/TvlChart'\nimport VolumeChart from '@/components/chart/VolumeChart'\nimport CoinPairInfo from '@/components/common/CoinPairInfo'\nimport useAnalyticChart, { ChartsTabsEnum, ChartsTabsType, DateTabsEnum, DateTypes } from '@/hooks/clmm/useAnalyticChart'\nimport useNavigateToLiquidity from '@/hooks/clmm/useNavigateToLiquidity'\nimport useGlobalStore from '@/store/common/global'\nimport { SelectTab } from '@cetus/design'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { Icon } from '@cetus/ui-kit'\nimport { d, formatPrice, isAvailableObject, removeComma } from '@cetus/utils'\nimport { Box, Center, HStack, Spinner, Text, VStack } from '@chakra-ui/react'\nimport { useMemo } from 'react'\n\n// pools列表新增AnalyticsModal需要传poolInfo 添加流动性有poolInfo不需要传\nfunction AnalyticsCharts({ poolInfo }: { poolInfo?: any }) {\n  const { isApp } = useWindowWidth()\n  const {\n    handleChartTabChange,\n    handleDateTabChange,\n    defaultDisplay,\n    chartsTabs,\n    dateTypes,\n    chartLoading,\n    analyticsData,\n    hoverData,\n    setHoverData,\n    currentChartTab,\n    currentDateType,\n    time\n  } = useAnalyticChart(poolInfo)\n  const { setBackUrl } = useGlobalStore()\n  const { goLiquidity } = useNavigateToLiquidity()\n  const isAnalyticsModal = useMemo(() => {\n    return isAvailableObject(poolInfo)\n  }, [poolInfo])\n  return (\n    <VStack\n      align=\"flex-start\"\n      flex=\"1\"\n      border=\"1px solid\"\n      borderColor=\"border\"\n      borderRadius=\"16px\"\n      p={{ base: '8px', lg: '20px' }}\n      bg=\"bg_secondary\"\n      gap=\"20px\"\n    >\n      {isAnalyticsModal && (\n        <Box m={{ base: '0 0 -12px 0', lg: '-12px 0' }}>\n          <CoinPairInfo poolInfo={poolInfo} symbolFontSize=\"16px\" />\n        </Box>\n      )}\n      <HStack w=\"100%\" justify={{ base: 'center', lg: 'space-between' }}>\n        <SelectTab<ChartsTabsType, ChartsTabsEnum>\n          type=\"outlineTab\"\n          tabList={chartsTabs}\n          currentTab={currentChartTab}\n          handleChangeTab={handleChartTabChange}\n          wrapStyle={{\n            h: '32px',\n            p: '3px',\n            borderRadius: '8px',\n            flex: { base: '1', lg: '0 0 308px' }\n          }}\n          itemStyle={{\n            fontSize: '12px',\n            flex: 1,\n            borderRadius: '6px'\n          }}\n        />\n        {!isApp && (\n          <SelectTab<DateTypes, DateTabsEnum>\n            type=\"outlineTab\"\n            tabList={dateTypes}\n            currentTab={currentDateType}\n            handleChangeTab={handleDateTabChange}\n            wrapStyle={{\n              h: '32px',\n              p: '3px',\n              borderRadius: '8px',\n              flex: '0 0 128px'\n            }}\n            itemStyle={{\n              fontSize: '12px',\n              flex: 1,\n              borderRadius: '6px'\n            }}\n          />\n        )}\n      </HStack>\n      <VStack w=\"100%\" align=\"flex-start\">\n        <Text color=\"text_caption\" fontWeight={isAnalyticsModal ? '500' : '400'} fontSize={isAnalyticsModal ? '20px' : '24px'}>\n          {hoverData?.num !== undefined && hoverData !== null\n            ? d(removeComma(hoverData.num)).gte('0.01') || d(removeComma(hoverData.num)).equals('0')\n              ? `$${formatPrice(hoverData?.num, 2)}`\n              : '<$0.01'\n            : defaultDisplay?.value}\n        </Text>\n        <Text>{hoverData?.date ? time : defaultDisplay?.title}</Text>\n        {isApp && (\n          <SelectTab<DateTypes, DateTabsEnum>\n            type=\"outlineTab\"\n            tabList={dateTypes}\n            currentTab={currentDateType}\n            handleChangeTab={handleDateTabChange}\n            wrapStyle={{\n              mt: '8px',\n              h: '32px',\n              p: '3px',\n              borderRadius: '8px',\n              w: '128px'\n            }}\n            itemStyle={{\n              fontSize: '12px',\n              flex: 1,\n              borderRadius: '6px'\n            }}\n          />\n        )}\n      </VStack>\n      <Box\n        w=\"100%\"\n        h={isAnalyticsModal ? '240px' : '340px'}\n        mt={isAnalyticsModal ? '0px' : '20px'}\n        p={isAnalyticsModal ? '8px' : '0px'}\n        bg={isAnalyticsModal ? 'rgba(255,255,255,0.05)' : 'none'}\n        borderRadius=\"8px\"\n      >\n        <Box w=\"100%\" h=\"100%\" position=\"relative\">\n          {chartLoading ? (\n            <Box position=\"absolute\" top={isAnalyticsModal ? '50%' : '30%'} left=\"50%\" transform=\"translate(-50%,-50%)\">\n              <Spinner />\n            </Box>\n          ) : currentChartTab === ChartsTabsEnum.tvl ? (\n            <TvlChart data={analyticsData} onChangeValue={data => setHoverData(data)} />\n          ) : (\n            <VolumeChart data={analyticsData} onChangeValue={data => setHoverData(data)} pageFrom=\"pools\" />\n          )}\n        </Box>\n      </Box>\n      {isAnalyticsModal && (\n        <Center cursor=\"pointer\" w=\"100%\" mb={{ base: '12px', lg: '0' }}>\n          <Text\n            display=\"flex\"\n            align=\"center\"\n            lineHeight=\"18px\"\n            sx={{ _hover: { color: 'text_caption', svg: { fill: 'text_caption !important' } } }}\n            fontWeight=\"500\"\n            borderRadius=\"8px\"\n            onClick={() => {\n              setBackUrl('/pools')\n              goLiquidity(`/clmm?tab=analytics&poolAddress=${poolInfo?.poolAddress}`, poolInfo)\n            }}\n          >\n            More details\n            <Icon xlinkHref=\"#icon-icon_ascending_nor\" transform=\"rotate(90deg)\" />\n          </Text>\n        </Center>\n      )}\n    </VStack>\n  )\n}\n\nexport default AnalyticsCharts\n"],"names":["ChartsTabsEnum","ChartsTypeEnum","DateTabsEnum","DateTypeEnum","LimitMap","useAnalyticChart","poolInfo","currentChartTab","setCurrentChartTab","useState","currentDateType","setCurrentDateType","analyticsData","setAnalyticsData","liquidityStorePoolInfo","useLiquidityStore","chartLoading","setChartLoading","hoverData","setHoverData","getHistogramData","useGetHistogramData","queryPoolAddress","useQueryParams","getHoverTime","time","useChartTime","poolAddress","useMemo","isAvailableObject","apiPoolInfo","useLayoutEffect","fetchAnalyticsData","result","error","useEffect","handleChartTabChange","item","handleDateTabChange","defaultDisplay","chartsTabs","value","dateTypes","AnalyticsCharts","isApp","useWindowWidth","setBackUrl","useGlobalStore","goLiquidity","useNavigateToLiquidity","isAnalyticsModal","jsxs","VStack","jsx","Box","CoinPairInfo","HStack","SelectTab","Text","d","removeComma","formatPrice","Spinner","TvlChart","data","VolumeChart","Center","Icon"],"mappings":"kYAQO,IAAKA,GAAAA,IACVA,EAAA,OAAS,SACTA,EAAA,IAAM,MACNA,EAAA,KAAO,OAHGA,IAAAA,GAAA,CAAA,CAAA,EAKAC,GAAAA,IACVA,EAAA,OAAS,MACTA,EAAA,IAAM,MACNA,EAAA,KAAO,MAHGA,IAAAA,GAAA,CAAA,CAAA,EAMAC,GAAAA,IACVA,EAAA,EAAI,IACJA,EAAA,EAAI,IACJA,EAAA,EAAI,IAHMA,IAAAA,GAAA,CAAA,CAAA,EAMAC,GAAAA,IACVA,EAAA,EAAI,MACJA,EAAA,EAAI,MACJA,EAAA,EAAI,MAHMA,IAAAA,GAAA,CAAA,CAAA,EAUZ,MAAMC,EAAyC,CAC5C,EAAiB,GACjB,EAAiB,GACjB,EAAiB,EACpB,EACA,SAASC,GAAiBC,EAAe,CACvC,KAAM,CAACC,EAAiBC,CAAkB,EAAIC,EAAAA,SAAyB,QAAA,EACjE,CAACC,EAAiBC,CAAkB,EAAIF,EAAAA,SAAuB,GAAA,EAC/D,CAACG,EAAeC,CAAgB,EAAIJ,EAAAA,SAAS,CAAA,CAAE,EAC/C,CAAE,YAAaK,CAAA,EAA2BC,EAAA,EAC1C,CAACC,EAAcC,CAAe,EAAIR,EAAAA,SAAS,EAAI,EAC/C,CAACS,EAAWC,CAAY,EAAIV,EAAAA,SAAc,IAAI,EAC9C,CAAE,iBAAAW,CAAA,EAAqBC,EAAA,EACvB,CAAE,YAAaC,CAAA,EAAqBC,EAAA,EACpC,CAAE,aAAAC,EAAc,KAAAC,CAAA,EAASC,EAAA,EAEzBC,EAAcC,EAAAA,QAAQ,IACnBC,EAAkBvB,CAAQ,EAAIA,GAAA,YAAAA,EAAU,YAAcgB,EAC5D,CAACA,EAAkBhB,CAAQ,CAAC,EAEzBwB,EAAcF,EAAAA,QAAQ,IACnBC,EAAkBvB,CAAQ,EAAIA,EAAWQ,EAC/C,CAACA,EAAwBR,CAAQ,CAAC,EAMrCyB,EAAAA,gBAAgB,IAAM,CACpBlB,EAAiB,CAAA,CAAE,EACnBL,EAAmB,QAAA,EACnBG,EAAmB,GAAA,EACnBQ,EAAa,IAAI,CACnB,EAAG,CAACQ,CAAW,CAAC,EAEhB,MAAMK,EAAqB,SAAY,CACrC,GAAKL,EACL,GAAI,CACFV,EAAgB,EAAI,EACpB,MAAMgB,EAAS,MAAMb,EAAiB,CACpC,UAAWjB,EAAaO,EAAgB,aAA0C,EAClF,KAAMT,EAAeM,EAAgB,aAA4C,EACjF,MAAOH,EAASM,CAAe,EAC/B,QAASiB,CAAA,CACV,EAEGM,GAAUA,EAAO,QACnBpB,EAAiBoB,CAAM,CAE3B,OAASC,EAAO,CACd,cAAQ,MAAMA,EAAO,wBAAwB,EACvCA,CACR,QAAA,CACEjB,EAAgB,EAAK,CACvB,CACF,EAMAkB,EAAAA,UAAU,IAAM,CACdH,EAAA,CACF,EAAG,CAACL,EAAapB,EAAiBG,CAAe,CAAC,EAMlDyB,EAAAA,UAAU,IAAM,CACVjB,GAAA,MAAAA,EAAW,MACbM,EAAaN,GAAA,YAAAA,EAAW,KAAMR,CAAe,CAEjD,EAAG,CAACQ,GAAA,YAAAA,EAAW,KAAMR,CAAe,CAAC,EAMrC,MAAM0B,EAAwBC,GAA8B,CAC1D7B,EAAmB6B,EAAK,KAAK,EACzBA,EAAK,QAAU9B,GACjBM,EAAiB,CAAA,CAAE,CAEvB,EAKMyB,EAAuBD,GAAyB,CACpD1B,EAAmB0B,EAAK,KAAK,EACzBA,EAAK,QAAU3B,GACjBG,EAAiB,CAAA,CAAE,CAEvB,EAKM0B,EAAiBX,EAAAA,QAAQ,IAAM,CACnC,GAAIrB,IAAoB,SACtB,MAAO,CAAE,MAAOuB,GAAA,YAAAA,EAAa,gBAAiB,MAAO,cAAA,EACvD,GAAWvB,IAAoB,MAC7B,MAAO,CAAE,MAAOuB,GAAA,YAAAA,EAAa,WAAY,MAAO,KAAA,EAClD,GAAWvB,IAAoB,OAC7B,MAAO,CAAE,MAAOuB,GAAA,YAAAA,EAAa,cAAe,MAAO,YAAA,CAEvD,EAAG,CAACvB,EAAiBuB,GAAA,YAAAA,EAAa,gBAAiBA,GAAA,YAAAA,EAAa,WAAYA,GAAA,YAAAA,EAAa,aAAa,CAAC,EAEjGU,EAAa,OAAO,OAAOxC,CAAc,EAAE,IAAIyC,IAAU,CAC7D,MAAOA,CAAA,EACP,EACIC,EAAY,OAAO,OAAOxC,CAAY,EAAE,IAAIuC,IAAU,CAC1D,MAAOA,CAAA,EACP,EAEF,MAAO,CACL,qBAAAL,EACA,oBAAAE,EACA,eAAAC,EACA,WAAAC,EACA,UAAAE,EACA,aAAA1B,EACA,cAAAJ,EACA,UAAAM,EACA,aAAAC,EACA,gBAAAZ,EACA,gBAAAG,EACA,KAAAe,CAAA,CAEJ,CCvJA,SAASkB,GAAgB,CAAE,SAAArC,GAAgC,CACzD,KAAM,CAAE,MAAAsC,CAAA,EAAUC,EAAA,EACZ,CACJ,qBAAAT,EACA,oBAAAE,EACA,eAAAC,EACA,WAAAC,EACA,UAAAE,EACA,aAAA1B,EACA,cAAAJ,EACA,UAAAM,EACA,aAAAC,EACA,gBAAAZ,EACA,gBAAAG,EACA,KAAAe,CAAA,EACEpB,GAAiBC,CAAQ,EACvB,CAAE,WAAAwC,CAAA,EAAeC,EAAA,EACjB,CAAE,YAAAC,CAAA,EAAgBC,EAAA,EAClBC,EAAmBtB,EAAAA,QAAQ,IACxBC,EAAkBvB,CAAQ,EAChC,CAACA,CAAQ,CAAC,EACb,OACE6C,EAAAA,KAACC,EAAA,CACC,MAAM,aACN,KAAK,IACL,OAAO,YACP,YAAY,SACZ,aAAa,OACb,EAAG,CAAE,KAAM,MAAO,GAAI,MAAA,EACtB,GAAG,eACH,IAAI,OAEH,SAAA,CAAAF,GACCG,EAAAA,IAACC,EAAA,CAAI,EAAG,CAAE,KAAM,cAAe,GAAI,SAAA,EACjC,SAAAD,EAAAA,IAACE,EAAA,CAAa,SAAAjD,EAAoB,eAAe,OAAO,EAC1D,EAEF6C,EAAAA,KAACK,EAAA,CAAO,EAAE,OAAO,QAAS,CAAE,KAAM,SAAU,GAAI,eAAA,EAC9C,SAAA,CAAAH,EAAAA,IAACI,EAAA,CACC,KAAK,aACL,QAASjB,EACT,WAAYjC,EACZ,gBAAiB6B,EACjB,UAAW,CACT,EAAG,OACH,EAAG,MACH,aAAc,MACd,KAAM,CAAE,KAAM,IAAK,GAAI,WAAA,CAAY,EAErC,UAAW,CACT,SAAU,OACV,KAAM,EACN,aAAc,KAAA,CAChB,CAAA,EAED,CAACQ,GACAS,EAAAA,IAACI,EAAA,CACC,KAAK,aACL,QAASf,EACT,WAAYhC,EACZ,gBAAiB4B,EACjB,UAAW,CACT,EAAG,OACH,EAAG,MACH,aAAc,MACd,KAAM,WAAA,EAER,UAAW,CACT,SAAU,OACV,KAAM,EACN,aAAc,KAAA,CAChB,CAAA,CACF,EAEJ,EACAa,EAAAA,KAACC,EAAA,CAAO,EAAE,OAAO,MAAM,aACrB,SAAA,CAAAC,MAACK,GAAK,MAAM,eAAe,WAAYR,EAAmB,MAAQ,MAAO,SAAUA,EAAmB,OAAS,OAC5G,UAAAhC,GAAA,YAAAA,EAAW,OAAQ,QAAaA,IAAc,KAC3CyC,EAAEC,EAAY1C,EAAU,GAAG,CAAC,EAAE,IAAI,MAAM,GAAKyC,EAAEC,EAAY1C,EAAU,GAAG,CAAC,EAAE,OAAO,GAAG,EACnF,IAAI2C,EAAY3C,GAAA,YAAAA,EAAW,IAAK,CAAC,CAAC,GAClC,SACFqB,GAAA,YAAAA,EAAgB,MACtB,QACCmB,EAAA,CAAM,SAAAxC,GAAA,MAAAA,EAAW,KAAOO,EAAOc,GAAA,YAAAA,EAAgB,MAAM,EACrDK,GACCS,EAAAA,IAACI,EAAA,CACC,KAAK,aACL,QAASf,EACT,WAAYhC,EACZ,gBAAiB4B,EACjB,UAAW,CACT,GAAI,MACJ,EAAG,OACH,EAAG,MACH,aAAc,MACd,EAAG,OAAA,EAEL,UAAW,CACT,SAAU,OACV,KAAM,EACN,aAAc,KAAA,CAChB,CAAA,CACF,EAEJ,EACAe,EAAAA,IAACC,EAAA,CACC,EAAE,OACF,EAAGJ,EAAmB,QAAU,QAChC,GAAIA,EAAmB,MAAQ,OAC/B,EAAGA,EAAmB,MAAQ,MAC9B,GAAIA,EAAmB,yBAA2B,OAClD,aAAa,MAEb,SAAAG,EAAAA,IAACC,GAAI,EAAE,OAAO,EAAE,OAAO,SAAS,WAC7B,SAAAtC,EACCqC,EAAAA,IAACC,EAAA,CAAI,SAAS,WAAW,IAAKJ,EAAmB,MAAQ,MAAO,KAAK,MAAM,UAAU,uBACnF,SAAAG,EAAAA,IAACS,EAAA,CAAA,CAAQ,CAAA,CACX,EACEvD,IAAoBP,EAAe,IACrCqD,EAAAA,IAACU,EAAA,CAAS,KAAMnD,EAAe,cAAeoD,GAAQ7C,EAAa6C,CAAI,EAAG,EAE1EX,EAAAA,IAACY,EAAA,CAAY,KAAMrD,EAAe,cAAeoD,GAAQ7C,EAAa6C,CAAI,EAAG,SAAS,OAAA,CAAQ,CAAA,CAElG,CAAA,CAAA,EAEDd,GACCG,EAAAA,IAACa,EAAA,CAAO,OAAO,UAAU,EAAE,OAAO,GAAI,CAAE,KAAM,OAAQ,GAAI,KACxD,SAAAf,EAAAA,KAACO,EAAA,CACC,QAAQ,OACR,MAAM,SACN,WAAW,OACX,GAAI,CAAE,OAAQ,CAAE,MAAO,eAAgB,IAAK,CAAE,KAAM,yBAAA,EAA4B,EAChF,WAAW,MACX,aAAa,MACb,QAAS,IAAM,CACbZ,EAAW,QAAQ,EACnBE,EAAY,mCAAmC1C,GAAA,YAAAA,EAAU,WAAW,GAAIA,CAAQ,CAClF,EACD,SAAA,CAAA,eAEC+C,EAAAA,IAACc,EAAA,CAAK,UAAU,2BAA2B,UAAU,eAAA,CAAgB,CAAA,CAAA,CAAA,CACvE,CACF,CAAA,CAAA,CAAA,CAIR"}