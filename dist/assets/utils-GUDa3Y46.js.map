{"version":3,"file":"utils-GUDa3Y46.js","sources":["../../src/utils/pool.ts","../../src/hooks/pool/utils.ts"],"sourcesContent":["import { SupportedTickSpacings } from '@/constant/pool'\nimport { suiPriorityConfigs } from '@/constant/sui-priority'\nimport { PoolPercent } from '@/types'\nimport { d, fixRounding, formatNumberWithDown } from '@cetus/utils'\nimport { fixCoinType, TickUtil } from '@cetusprotocol/common-sdk'\n\nexport function getPoolDirection(coinTypeA: string, coinTypeB: string): boolean {\n  const coinAWeight = suiPriorityConfigs[coinTypeA]\n  const coinBWeight = suiPriorityConfigs[coinTypeB]\n\n  if (coinAWeight === undefined && coinBWeight === undefined) {\n    return true\n  }\n\n  if (coinAWeight !== undefined && coinBWeight === undefined) {\n    return false\n  }\n\n  if (coinAWeight === undefined && coinBWeight !== undefined) {\n    return true\n  }\n\n  // 权重越小，越靠前\n  return coinAWeight < coinBWeight\n}\n\n// 计算coinA,coinB占比\nexport const calcCoinProportion = (amountA: string | number, amountB: string | number, currentPrice: string, isFullRange: boolean): PoolPercent => {\n  if (isFullRange) {\n    return {\n      percentA: '50',\n      percentB: '50'\n    }\n  }\n  if (d(amountA).eq(0) && d(amountB).eq(0)) {\n    return {\n      percentA: '0',\n      percentB: '0'\n    }\n  }\n  const totalAmount = d(amountB).plus(d(amountA).mul(currentPrice))\n  const originPercentB = d(amountB).div(totalAmount).mul(100)\n  const originPercentA = d(100).sub(originPercentB)\n  const percentA = originPercentA.lt(0.01) && originPercentA.gt(0) ? '<0.01' : fixRounding(originPercentA.toString(), 2)\n  const percentB = originPercentB.lt(0.01) && originPercentB.gt(0) ? '<0.01' : fixRounding(originPercentB.toString(), 2)\n\n  return {\n    percentA,\n    percentB\n  }\n}\n\n// 格式化请求池子列表时的cointype参数\nexport const formatCoinTypesParams = (coinTypes: string | undefined) => {\n  if (!coinTypes) return ''\n  const coinTypeArr = coinTypes?.split(',')\n  const result = coinTypeArr?.map((item: string) => fixCoinType(item, false))?.join(',')\n  return result\n}\n\n// 获取反向价格\nexport const getReversePrice = (price: string) => {\n  if (price === '∞') return ''\n  const reversePrice = price === '0' || !price ? '∞' : price === '∞' ? '0' : d(1).div(price).toString()\n  return reversePrice\n}\n\nexport const getDisplayPrice = (price: string) => {\n  return price === '∞' ? '∞' : formatNumberWithDown(price, 6)\n}\n\nexport const getDisplayReversePrice = (price: string) => {\n  return getDisplayPrice(getReversePrice(price))\n}\n\nexport const checkIsMinOrMaxIndex = (index: number, type: 'min' | 'max') => {\n  for (let i = 0; i < SupportedTickSpacings.length; i++) {\n    const item = SupportedTickSpacings[i]\n    if (type === 'min') {\n      if (index == TickUtil.getMinIndex(item)) {\n        return true\n      }\n    } else {\n      if (index == TickUtil.getMaxIndex(item)) {\n        return true\n      }\n    }\n  }\n  return false\n}\n\nexport const checkFullRange = (lowerTick: number, upperTick: number) => {\n  const isMinTick = checkIsMinOrMaxIndex(lowerTick, 'min')\n  const isMaxTick = checkIsMinOrMaxIndex(upperTick, 'max')\n  if (isMinTick && isMaxTick) return true\n  return false\n}\n","import { GetPoolListApiParamsV2, GetPoolListParams } from './type'\n\nexport const wrapGetPoolParams = (params: GetPoolListParams) => {\n  const wrapParams: GetPoolListApiParamsV2 = {\n    filter: 'verified',\n    sortBy: 'vol',\n    sortOrder: 'asc',\n    limit: 20,\n    offset: 0,\n    coinTypes: []\n  }\n  const { display_all_pools, has_mining, has_farming, no_incentives, order_by, limit, offset, coin_type, pools, pool } = params\n  if (has_farming) {\n    wrapParams.filter = 'farming'\n  }\n  if (display_all_pools) {\n    wrapParams.filter = 'all'\n  }\n  if (!display_all_pools && has_mining && has_farming && !no_incentives) {\n    wrapParams.filter = 'incentivized'\n  }\n  if (!display_all_pools && has_mining && has_farming && no_incentives) {\n    wrapParams.filter = 'verified'\n  }\n  if (display_all_pools && has_mining && has_farming && !no_incentives) {\n    wrapParams.filter = 'incentivized'\n  }\n  if (order_by) {\n    const orderBy = order_by.replace('-', '').toLowerCase()\n    wrapParams.sortBy = orderBy == 'fees' ? 'fee' : orderBy == 'totalapr' ? 'totalApr' : orderBy\n  }\n  if (order_by && order_by?.indexOf('-') > -1) {\n    wrapParams.sortOrder = 'desc'\n  }\n  if (limit) {\n    wrapParams.limit = limit\n  }\n  if (offset) {\n    wrapParams.offset = offset\n  }\n  if (coin_type) {\n    wrapParams.coinTypes = coin_type.split(',')\n  }\n  if (pools) {\n    wrapParams['pools'] = pools\n  }\n\n  if (pool) {\n    wrapParams['pools'] = [pool]\n  }\n\n  return wrapParams\n}\n\nexport const wrapGetDlmmPoolParams = (params: GetPoolListParams) => {\n  const wrapParams: GetPoolListApiParamsV2 = {\n    filter: 'verified',\n    sortBy: 'vol',\n    sortOrder: 'asc',\n    limit: 20,\n    offset: 0,\n    coinTypes: []\n  }\n  const { display_all_pools, has_mining, has_farming, no_incentives, order_by, limit, offset, coin_type, pools, pool } = params\n  if (has_farming) {\n    wrapParams.filter = 'farming'\n  }\n  if (display_all_pools) {\n    wrapParams.filter = 'all'\n  }\n  if (!display_all_pools && has_mining && has_farming && !no_incentives) {\n    wrapParams.filter = 'incentivized'\n  }\n  if (!display_all_pools && has_mining && has_farming && no_incentives) {\n    wrapParams.filter = 'verified'\n  }\n  if (display_all_pools && has_mining && has_farming && !no_incentives) {\n    wrapParams.filter = 'incentivized'\n  }\n  if (order_by) {\n    const orderBy = order_by.replace('-', '').toLowerCase()\n    wrapParams.sortBy = orderBy == 'fees' ? 'fee' : orderBy == 'totalapr' ? 'totalApr' : orderBy\n  }\n  if (order_by && order_by?.indexOf('-') > -1) {\n    wrapParams.sortOrder = 'desc'\n  }\n  if (limit) {\n    wrapParams.limit = limit\n  }\n  if (offset) {\n    wrapParams.offset = offset\n  }\n  if (coin_type) {\n    wrapParams.coinTypes = coin_type.split(',')\n    wrapParams.limit = undefined\n    wrapParams.offset = undefined\n    // wrapParams.filter = 'all'\n  }\n  if (pools) {\n    wrapParams['pools'] = pools\n  }\n\n  if (pool) {\n    wrapParams['pools'] = [pool]\n  }\n\n  return wrapParams\n}\n"],"names":["getPoolDirection","coinTypeA","coinTypeB","coinAWeight","suiPriorityConfigs","coinBWeight","calcCoinProportion","amountA","amountB","currentPrice","isFullRange","d","totalAmount","originPercentB","originPercentA","percentA","fixRounding","percentB","formatCoinTypesParams","coinTypes","coinTypeArr","_a","item","fixCoinType","getReversePrice","price","getDisplayPrice","formatNumberWithDown","getDisplayReversePrice","checkIsMinOrMaxIndex","index","type","i","SupportedTickSpacings","TickUtil","checkFullRange","lowerTick","upperTick","isMinTick","isMaxTick","wrapGetPoolParams","params","wrapParams","display_all_pools","has_mining","has_farming","no_incentives","order_by","limit","offset","coin_type","pools","pool","orderBy","wrapGetDlmmPoolParams"],"mappings":"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"}