{"version":3,"file":"DetailStatsInfo-B36lVRBE.js","sources":["../../src/hooks/position/useGetClmmPositionHistoricalProfit.ts","../../src/components/position/clmm/details/DetailStatsInfo.tsx"],"sourcesContent":["import { ClmmPositionHistoricalProfitPath } from '@/apis/path'\nimport { useFetch } from '@cetus/hooks'\n\nexport default function useGetClmmPositionHistoricalProfit() {\n  const { fetchByApi } = useFetch()\n  const getClmmPositionHistoricalProfit = async (position_id: string) => {\n    try {\n      const res = await fetchByApi(ClmmPositionHistoricalProfitPath, 'GET', {\n        position_id\n      })\n      if (res?.FeeA) {\n        return res\n      }\n    } catch (error) {\n      console.log('ðŸš€ðŸš€ðŸš€ ~ useGetClmmPositionHistoricalProfit.ts:15 ~ getClmmPositionHistoricalProfit ~ error:', error)\n    }\n  }\n  return { getClmmPositionHistoricalProfit }\n}\n","import useCalculatePendingYield from '@/hooks/position/useCalculatePendingYield'\nimport useClaimPosition from '@/hooks/position/useClaimPosition'\nimport useGetClmmPositionHistoricalProfit from '@/hooks/position/useGetClmmPositionHistoricalProfit'\nimport usePositionStore from '@/store/position'\nimport usePositionDetailStore from '@/store/position/detail'\nimport { showNewVersionApr } from '@/types'\nimport { SelectTab } from '@cetus/design'\nimport { Tab } from '@cetus/design/src/components/common/SelectTab'\nimport SingleTokenInfo from '@cetus/design/src/components/common/SingleTokenInfo'\nimport useExplorer from '@cetus/hooks/src/useExplorer'\nimport { useGetToken } from '@cetus/hooks/src/useToken'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { CoinType, Token } from '@cetus/types'\nimport { d, formatCurrency, formatNumberWithDown, isAvailableObject, removeComma, textEllipses } from '@cetus/utils'\nimport { Box, Button, HStack, Progress, Skeleton, Stack, Text, VStack } from '@chakra-ui/react'\nimport { useDeepCompareEffect } from 'ahooks'\nimport { uniq } from 'lodash-es'\nimport React, { useEffect, useMemo, useState } from 'react'\nimport LiquidityValueBlock from '../list/LiquidityValueBlock'\n\nexport function DetailStatsInfo({ dailyEarnUSDDisplay, originResult }: { dailyEarnUSDDisplay: any; originResult: any }) {\n  const { tokenAmountAfterA, tokenAmountAfterB, currentPosDetailTab, curPosContractPoolInfo, isPosDetailRefresh, isAutoClaim, currentPosPoolInfo } =\n    usePositionDetailStore()\n  const { currentPosBaseInfo, posFeeData, posRewardsData, posLiquidityData, currentPosBaseInfoLoading, posFeeDataLoading, posRewardsDataLoading } =\n    usePositionStore()\n\n  const currentPosLiquidityData = useMemo(() => {\n    return posLiquidityData[currentPosBaseInfo?.posId as string]\n  }, [posLiquidityData, currentPosBaseInfo?.posId])\n\n  const currentPosFeeData = useMemo(() => {\n    return posFeeData[currentPosBaseInfo?.posId as string]\n  }, [posFeeData, currentPosBaseInfo?.posId])\n\n  const currentPosRewardsData = useMemo(() => {\n    const result = posRewardsData[currentPosBaseInfo?.posId as string] ?? []\n\n    return result.filter((item: any, index: number) => {\n      const emissionsEveryDay = d(curPosContractPoolInfo?.rewarder_infos?.[index]?.emissionsEveryDay || 0)\n      return emissionsEveryDay.gt(0) || d(item?.display_amount_owed || 0).gt(0)\n    })\n  }, [posRewardsData, currentPosBaseInfo?.posId, curPosContractPoolInfo?.rewarder_infos])\n\n  const [totalYield, setTotalYield] = useState('--')\n  const { calculatePendingYield } = useCalculatePendingYield()\n\n  useEffect(() => {\n    if (!currentPosBaseInfoLoading && !posFeeDataLoading && !posRewardsDataLoading && currentPosBaseInfo) {\n      const { total } = calculatePendingYield([currentPosBaseInfo], posFeeData, posRewardsData)\n      setTotalYield(total)\n    }\n  }, [currentPosBaseInfoLoading, posFeeDataLoading, posRewardsDataLoading, posFeeData, posRewardsData])\n  const { toClaimPosition, isClaimLoading } = useClaimPosition()\n\n  const isInputValue = isAutoClaim ? tokenAmountAfterA !== '' || tokenAmountAfterB !== '' : false\n\n  const { isApp } = useWindowWidth()\n\n  const tabList = [\n    {\n      label: 'Unclaimed',\n      value: 'Unclaimed'\n    },\n    {\n      label: 'Claimed',\n      value: 'Claimed'\n    }\n  ]\n\n  const [currentTab, setCurrentTab] = useState<Tab>(tabList[0])\n\n  const handleChangeTab = (tab: Tab) => {\n    setCurrentTab(tab)\n  }\n\n  const { getClmmPositionHistoricalProfit } = useGetClmmPositionHistoricalProfit()\n\n  const [positionHistoricalProfit, setPositionHistoricalProfit] = useState<any>(null)\n  const handleGetClmmPositionHistoricalProfit = async () => {\n    const res = await getClmmPositionHistoricalProfit(currentPosBaseInfo?.posId as string)\n    console.log('ðŸš€ðŸš€ðŸš€ ~ DetailStatsInfo.tsx:93 ~ handleGetClmmPositionHistoricalProfit ~ res:', res)\n    if (positionHistoricalProfit === null) {\n      setPositionHistoricalProfit(res)\n    } else {\n      if (res?.FeeA?.Amount !== undefined && d(removeComma(res?.FeeA?.Amount)).gt(positionHistoricalProfit?.FeeA?.Amount)) {\n        setPositionHistoricalProfit(res)\n      }\n    }\n  }\n  useDeepCompareEffect(() => {\n    if (currentPosBaseInfo?.posId) {\n      handleGetClmmPositionHistoricalProfit()\n    }\n  }, [currentPosBaseInfo?.posId, currentPosFeeData, currentPosRewardsData, currentPosPoolInfo])\n\n  const toClaim = async () => {\n    await toClaimPosition(currentPosBaseInfo, curPosContractPoolInfo)\n    const historyFeeA = d(positionHistoricalProfit?.FeeA?.Amount || 0)\n      .add(currentPosFeeData?.displayFeeOwedA || 0)\n      .toString()\n    const historyFeeB = d(positionHistoricalProfit?.FeeB?.Amount || 0)\n      .add(currentPosFeeData?.displayFeeOwedB || 0)\n      .toString()\n    const historyMiningCoins = uniq([\n      ...currentPosRewardsData?.map(item => item?.coin_address),\n      ...positionHistoricalProfit?.Mining?.map(item => item?.CoinType)\n    ])\n    const historyMining = historyMiningCoins.map(coinType => {\n      const newReward = currentPosRewardsData?.find(item => item?.coin_address === coinType)?.display_amount_owed || '0'\n      const old = positionHistoricalProfit?.Mining?.find(item => item?.CoinType === coinType)?.Amount || '0'\n      const amount = d(removeComma(newReward)).add(removeComma(old)).toString()\n      return {\n        CoinType: coinType,\n        Amount: amount || 0\n      }\n    })\n    setPositionHistoricalProfit({\n      FeeA: {\n        Amount: historyFeeA,\n        CoinType: positionHistoricalProfit?.FeeA?.CoinType\n      },\n      FeeB: {\n        Amount: historyFeeB,\n        CoinType: positionHistoricalProfit?.FeeB?.CoinType\n      },\n      Mining: historyMining\n    })\n    await handleGetClmmPositionHistoricalProfit()\n  }\n  return (\n    <VStack w=\"100%\" gap={{ base: '12px', lg: '16px' }}>\n      <VStack bg=\"bg_secondary\" w=\"100%\" p={{ base: '16px 8px 8px', lg: '20px 20px 0' }} borderRadius=\"16px\">\n        <Stack flexDir={{ base: 'column', lg: 'row' }} w=\"100%\" justify={{ base: 'center', lg: 'space-between' }} gap={{ base: '16px', lg: '0' }}>\n          <Stack\n            flexDir={{ base: 'row', lg: 'column' }}\n            align={{ base: 'center', lg: 'flex-start' }}\n            justify={{ base: 'space-between', lg: 'center' }}\n            mt={{ base: '-12px', lg: '0' }}\n          >\n            <Text color=\"primary_gray\" mb={{ base: '0', lg: '-12px' }}>\n              Liquidity\n            </Text>\n            <LiquidityValueBlock positionInfo={currentPosBaseInfo} haveTooltip={false} />\n          </Stack>\n          <HStack w={{ base: '100%', lg: 'unset' }} gap=\"4px\" pb=\"12px\" justifyContent=\"center\">\n            <Skeleton isLoaded={!!currentPosBaseInfo && !!currentPosLiquidityData}>\n              <HStack gap=\"4px\">\n                <Text color=\"text_caption\">{textEllipses(currentPosBaseInfo?.displayTokenA?.symbol)}</Text>\n                <Text color=\"primary\">{currentPosLiquidityData?.displayPercentA}%</Text>\n              </HStack>\n            </Skeleton>\n            <Progress\n              w={{ base: '100px', lg: '200px' }}\n              h=\"4px\"\n              value={currentPosLiquidityData?.displayPercentA}\n              bg=\"quote_green\"\n              sx={{\n                'div[role=\"progressbar\"]': {\n                  bg: 'primary'\n                }\n              }}\n            />\n            <Skeleton isLoaded={!!currentPosBaseInfo && !!currentPosLiquidityData}>\n              <HStack gap=\"4px\">\n                <Text color=\"primary_green\">{currentPosLiquidityData?.displayPercentB}%</Text>\n                <Text color=\"text_caption\">{textEllipses(currentPosBaseInfo?.displayTokenB?.symbol)}</Text>\n              </HStack>\n            </Skeleton>\n          </HStack>\n        </Stack>\n        <HStack gap=\"0px\" p={{ base: '8px 0px', lg: '8px 40px 0px' }} w=\"100%\" justify=\"space-between\" flexDirection={{ base: 'column', lg: 'row' }}>\n          <TokenAmountAndAfter\n            label=\"Base\"\n            token={currentPosBaseInfo?.displayTokenA}\n            amount={currentPosLiquidityData?.displayCoinAmountA}\n            afterAmount={tokenAmountAfterA}\n            align={isApp ? 'flex-end' : 'flex-start'}\n          />\n          <TokenAmountAndAfter\n            label=\"Quote\"\n            token={currentPosBaseInfo?.displayTokenB}\n            amount={currentPosLiquidityData?.displayCoinAmountB}\n            afterAmount={tokenAmountAfterB}\n            align=\"flex-end\"\n          />\n        </HStack>\n      </VStack>\n      <VStack bg=\"bg_secondary\" w=\"100%\" p={{ base: '16px 8px', lg: '20px 20px 0' }} borderRadius=\"16px\">\n        <HStack w=\"100%\" justify=\"space-between\">\n          <Stack\n            flexDir={{ base: 'row', lg: 'column' }}\n            alignItems={{ base: 'center', lg: 'flex-start' }}\n            justify={{ base: 'space-between', lg: 'center' }}\n            w={{ base: '100%', lg: 'auto' }}\n          >\n            <HStack gap=\"28px\">\n              <VStack align=\"flex-start\">\n                <Text color=\"primary_gray\" whiteSpace=\"nowrap\">\n                  Claimable Yield\n                </Text>\n                <Skeleton isLoaded={!!totalYield && !!currentPosBaseInfo && !!posFeeData && !!posRewardsData}>\n                  <Text color=\"text_caption\" fontSize=\"16px\">\n                    {formatCurrency(totalYield, 2)}\n                  </Text>\n                </Skeleton>\n              </VStack>\n              {showNewVersionApr && dailyEarnUSDDisplay !== null && (\n                <Stack flexDir={{ base: 'column', lg: 'row' }} bg=\"card_bg\" borderRadius=\"8px\" p=\"8px\">\n                  <Text fontSize=\"12px\">Est. Daily Yield</Text>\n                  <Skeleton isLoaded={!!totalYield && !!currentPosBaseInfo && !!posFeeData && !!posRewardsData}>\n                    <Text fontSize=\"12px\" color=\"primary\">\n                      {dailyEarnUSDDisplay ? (dailyEarnUSDDisplay !== '$0' ? `+${dailyEarnUSDDisplay}` : dailyEarnUSDDisplay) : '$0'}\n                    </Text>\n                  </Skeleton>\n                </Stack>\n              )}\n            </HStack>\n          </Stack>\n          <Button\n            isLoading={isClaimLoading}\n            isDisabled={Number(totalYield) === 0 || totalYield === '--' || isClaimLoading || !currentPosFeeData}\n            onClick={toClaim}\n            w=\"112px\"\n            h=\"28px\"\n            borderRadius=\"8px\"\n            fontWeight=\"500\"\n            fontSize=\"14px\"\n          >\n            Claim\n          </Button>\n        </HStack>\n        <VStack p={{ base: '20px 0px 0', lg: '20px 40px 0px' }} w=\"100%\" gap=\"26px\">\n          {showNewVersionApr && (\n            <VStack align=\"flex-start\" w=\"100%\">\n              <SelectTab\n                type=\"outlineTab\"\n                tabList={tabList}\n                currentTab={currentTab?.label}\n                handleChangeTab={handleChangeTab}\n                wrapStyle={{\n                  w: '158px',\n                  h: '28px',\n                  p: '4px',\n                  borderRadius: '8px'\n                }}\n                itemStyle={{\n                  flex: {\n                    lg: '1',\n                    base: 'auto'\n                  },\n                  fontSize: '12px',\n                  margin: '0px',\n                  borderRadius: '4px'\n                }}\n              />\n            </VStack>\n          )}\n\n          {currentTab.value == 'Unclaimed' ? (\n            <HStack justify=\"space-between\" w=\"100%\" gap=\"0px\" flexWrap=\"wrap\" flexDirection={{ base: 'column', lg: 'row' }}>\n              <TokenAmountAndAfter\n                label=\"Fees\"\n                token={currentPosBaseInfo?.displayTokenA}\n                amount={currentPosFeeData?.displayFeeOwedA}\n                afterAmount={isInputValue && isAutoClaim ? '0' : ''}\n                align={isApp ? 'flex-end' : 'flex-start'}\n              />\n              <TokenAmountAndAfter\n                label={isApp ? '' : 'Fees'}\n                token={currentPosBaseInfo?.displayTokenB}\n                amount={currentPosFeeData?.displayFeeOwedB}\n                afterAmount={isInputValue && isAutoClaim ? '0' : ''}\n                align=\"flex-end\"\n              />\n              {currentPosRewardsData?.map((item: any, index: number) => {\n                return (\n                  <React.Fragment key={item?.coin_address}>\n                    <TokenAmountAndAfter\n                      label={isApp ? (index == 0 ? 'Mining Rewards' : '') : 'Mining Rewards'}\n                      token={item?.token}\n                      amount={item?.display_amount_owed}\n                      afterAmount={isInputValue && isAutoClaim ? '0' : ''}\n                      align={isApp ? 'flex-end' : index % 2 === 0 ? 'flex-start' : 'flex-end'}\n                    />\n                  </React.Fragment>\n                )\n              })}\n            </HStack>\n          ) : (\n            <HStack justify=\"space-between\" w=\"100%\" gap=\"0px\" flexWrap=\"wrap\" flexDirection={{ base: 'column', lg: 'row' }}>\n              <TokenAmountAndAfter\n                label=\"Fees\"\n                token={currentPosBaseInfo?.displayTokenA}\n                amount={positionHistoricalProfit?.FeeA?.Amount}\n                align={isApp ? 'flex-end' : 'flex-start'}\n                afterAmount={''}\n              />\n              <TokenAmountAndAfter\n                label={isApp ? '' : 'Fees'}\n                token={currentPosBaseInfo?.displayTokenB}\n                amount={positionHistoricalProfit?.FeeB?.Amount}\n                align=\"flex-end\"\n                afterAmount={''}\n              />\n              {positionHistoricalProfit?.Mining?.filter?.(item => item?.Amount && d(removeComma(item?.Amount))?.gt(0))?.map(\n                (item: any, index: number) => {\n                  return (\n                    <React.Fragment key={item?.CoinType}>\n                      <TokenAmountAndAfter\n                        label={isApp ? (index == 0 ? 'Mining Rewards' : '') : 'Mining Rewards'}\n                        coinType={item?.CoinType}\n                        amount={item?.Amount}\n                        align={isApp ? 'flex-end' : index % 2 === 0 ? 'flex-start' : 'flex-end'}\n                        afterAmount={''}\n                      />\n                    </React.Fragment>\n                  )\n                }\n              )}\n            </HStack>\n          )}\n        </VStack>\n      </VStack>\n    </VStack>\n  )\n}\n\nexport function TokenAmountAndAfter({\n  label,\n  token,\n  amount,\n  afterAmount,\n  isLoading,\n  align = 'flex-start',\n  coinType = ''\n}: {\n  label: string\n  token?: Token\n  amount: string\n  afterAmount: string\n  isLoading?: boolean\n  align: string\n  coinType?: string\n}) {\n  const { getTokenAmountValue } = useTokenPrice()\n  const { isApp } = useWindowWidth()\n  const { getExplorerUrl } = useExplorer()\n  const amountValue = getTokenAmountValue(token?.coin_type || coinType, amount, '--')\n  const [forceLoaded, setForceLoaded] = useState<boolean>(false)\n\n  useEffect(() => {\n    setTimeout(() => {\n      setForceLoaded(true)\n    }, 5000)\n  }, [])\n\n  const { getTokenInfo } = useGetToken()\n\n  const [currentToken, setCurrentToken] = useState<Token | null>(null)\n  const fetchToken = async (coinType: string) => {\n    if (!coinType) return\n    try {\n      const coinInfo = await getTokenInfo(coinType as CoinType)\n      console.log('ðŸš€ ~ fetchToken ~ coinInfo:', coinType, coinInfo)\n      if (coinInfo) {\n        setCurrentToken(coinInfo)\n      }\n    } catch (error) {\n      console.error('Error fetching token info:', error)\n    }\n  }\n\n  useEffect(() => {\n    if (token && isAvailableObject(token)) {\n      setCurrentToken(token)\n    } else {\n      if (coinType) {\n        fetchToken(coinType)\n      }\n    }\n  }, [coinType, token])\n\n  return (\n    <VStack align={align} gap={{ base: '4px', lg: '8px' }} w={{ base: '100%', lg: 'calc(50% - 4px)' }} mb={{ base: '16px', lg: '28px' }}>\n      <VStack w=\"100%\" align={{ base: 'center', lg: align }} justify={{ base: 'space-between' }} flexDirection={{ base: 'row', lg: 'column' }}>\n        <Text color=\"primary_gray\">{label}</Text>\n        <HStack h={{ base: 'unset', lg: '34px' }} flexDirection={align == 'flex-start' ? 'row' : 'row-reverse'}>\n          <Box onClick={isApp ? () => window.open(getExplorerUrl(token?.coin_type, 'coin')) : () => {}}>\n            <SingleTokenInfo\n              haveTooltip={!isApp}\n              coinType={token ? token?.coin_type : coinType}\n              haveName={false}\n              haveSymbol={false}\n              warningIcon={{ iconW: '14px', iconH: '14px' }}\n              imgBoxStyle={{ w: '28px', h: '28px' }}\n            />\n          </Box>\n          <Skeleton isLoaded={(!isLoading && !!amount) || forceLoaded}>\n            <VStack align={align} gap=\"4px\">\n              <Text color=\"text_caption\" fontSize={{ base: '14px', lg: '16px' }}>\n                {formatNumberWithDown(amount)} {textEllipses(currentToken?.symbol)}\n              </Text>\n              <Text color=\"primary_gray\" fontSize={{ base: '12px', lg: '14px' }}>\n                {amountValue == '--' ? '$--' : formatCurrency(amountValue, 2)}\n              </Text>\n            </VStack>\n          </Skeleton>\n        </HStack>\n      </VStack>\n      {afterAmount !== '' && afterAmount && (\n        <HStack bg=\"primary_opacity.10\" borderRadius=\"full\" p=\"4px 20px\" align=\"center\">\n          <Text color=\"primary\" lineHeight=\"20px\" textAlign={align === 'flex-end' ? 'right' : 'left'}>\n            {formatNumberWithDown(afterAmount)} {textEllipses(token?.symbol, 10)} after\n          </Text>\n        </HStack>\n      )}\n    </VStack>\n  )\n}\n"],"names":["useGetClmmPositionHistoricalProfit","fetchByApi","useFetch","position_id","res","ClmmPositionHistoricalProfitPath","error","DetailStatsInfo","dailyEarnUSDDisplay","originResult","tokenAmountAfterA","tokenAmountAfterB","currentPosDetailTab","curPosContractPoolInfo","isPosDetailRefresh","isAutoClaim","currentPosPoolInfo","usePositionDetailStore","currentPosBaseInfo","posFeeData","posRewardsData","posLiquidityData","currentPosBaseInfoLoading","posFeeDataLoading","posRewardsDataLoading","usePositionStore","currentPosLiquidityData","useMemo","currentPosFeeData","currentPosRewardsData","item","index","d","_b","_a","totalYield","setTotalYield","useState","calculatePendingYield","useCalculatePendingYield","useEffect","total","toClaimPosition","isClaimLoading","useClaimPosition","isInputValue","isApp","useWindowWidth","tabList","currentTab","setCurrentTab","handleChangeTab","tab","getClmmPositionHistoricalProfit","positionHistoricalProfit","setPositionHistoricalProfit","handleGetClmmPositionHistoricalProfit","removeComma","_c","useDeepCompareEffect","toClaim","historyFeeA","historyFeeB","historyMining","uniq","coinType","newReward","old","amount","_d","_e","jsxs","VStack","Stack","jsx","Text","LiquidityValueBlock","HStack","Skeleton","Progress","TokenAmountAndAfter","formatCurrency","Button","SelectTab","React","_g","_f","label","token","afterAmount","isLoading","align","getTokenAmountValue","useTokenPrice","getExplorerUrl","useExplorer","amountValue","forceLoaded","setForceLoaded","getTokenInfo","useGetToken","currentToken","setCurrentToken","fetchToken","coinInfo","isAvailableObject","Box","SingleTokenInfo","formatNumberWithDown","textEllipses"],"mappings":"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"}