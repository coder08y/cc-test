{"version":3,"file":"useInviteCodes-CuZXcy19.js","sources":["../../../hooks/src/useInviteCodes.ts"],"sourcesContent":["import { VITE_INVITE_CODES } from '@cetus/types/src/env'\nimport useGlobalStore from 'packages/web/src/store/common/global'\nimport { useEffect, useMemo, useState } from 'react'\n\nexport function useInviteCodes() {\n  const [inviteCodes, setInviteCodes] = useState<string[]>([])\n  const { verifyInviteCodes, setVerifyInviteCodes } = useGlobalStore()\n\n  useEffect(() => {\n    if (inviteCodes.length === 0 && VITE_INVITE_CODES) {\n      setInviteCodes(VITE_INVITE_CODES.split(','))\n    }\n  }, [])\n\n  const handleVerifyInviteCode = (code: string) => {\n    const isVerify = inviteCodes.includes(code.trim())\n    if (isVerify) {\n      setVerifyInviteCodes(code)\n    }\n    return isVerify\n  }\n\n  const hasAccessPermission = useMemo(() => {\n    if (inviteCodes.length === 0) {\n      return true\n    }\n    if (!verifyInviteCodes) {\n      return false\n    }\n    return inviteCodes.includes(verifyInviteCodes.trim())\n  }, [verifyInviteCodes, inviteCodes])\n\n  return {\n    handleVerifyInviteCode,\n    hasAccessPermission\n  }\n}\n"],"names":["useInviteCodes","inviteCodes","setInviteCodes","useState","verifyInviteCodes","setVerifyInviteCodes","useGlobalStore","useEffect","VITE_INVITE_CODES","handleVerifyInviteCode","code","isVerify","hasAccessPermission","useMemo"],"mappings":"yFAIO,SAASA,GAAiB,CAC/B,KAAM,CAACC,EAAaC,CAAc,EAAIC,EAAAA,SAAmB,CAAA,CAAE,EACrD,CAAE,kBAAAC,EAAmB,qBAAAC,CAAA,EAAyBC,EAAA,EAEpDC,EAAAA,UAAU,IAAM,CACVN,EAAY,SAAW,GAAKO,CAGlC,EAAG,CAAA,CAAE,EAEL,MAAMC,EAA0BC,GAAiB,CAC/C,MAAMC,EAAWV,EAAY,SAASS,EAAK,MAAM,EACjD,OAAIC,GACFN,EAAqBK,CAAI,EAEpBC,CACT,EAEMC,EAAsBC,EAAAA,QAAQ,IAC9BZ,EAAY,SAAW,EAClB,GAEJG,EAGEH,EAAY,SAASG,EAAkB,KAAA,CAAM,EAF3C,GAGR,CAACA,EAAmBH,CAAW,CAAC,EAEnC,MAAO,CACL,uBAAAQ,EACA,oBAAAG,CAAA,CAEJ"}