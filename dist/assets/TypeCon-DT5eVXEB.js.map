{"version":3,"file":"TypeCon-DT5eVXEB.js","sources":["../../src/components/common/proModeAndChart/ProModeTradeTab/TypeCon.tsx"],"sourcesContent":["import useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { CheckBox, Icon } from '@cetus/ui-kit'\nimport { Button, HStack, Menu, MenuButton, MenuList, Text, TextProps, VStack } from '@chakra-ui/react'\nimport { useEffect, useState } from 'react'\n\nfunction TypeCon({\n  type,\n  setType,\n  filterList,\n  labelText,\n  labelStyle = {}\n}: {\n  type: string\n  setType: (val: string) => void\n  filterList?: string[]\n  labelText?: string\n  labelStyle?: TextProps\n}) {\n  const { isApp } = useWindowWidth()\n  const list = filterList || ['Buy', 'Sell', 'Add', 'Remove']\n\n  const [tempTypes, setTempTypes] = useState<string[]>(type ? type.split(',') : [])\n\n  const toggleType = (item: string) => {\n    setTempTypes(prev => (prev.includes(item) ? prev.filter(i => i !== item) : [...prev, item]))\n  }\n\n  useEffect(() => {\n    setTempTypes(type ? type.split(',') : [])\n  }, [type])\n\n  const [isHover, setIsHover] = useState(false)\n\n  return (\n    <Menu\n      isLazy\n      onClose={() => {\n        setTempTypes(type ? type.split(',') : [])\n      }}\n    >\n      {({ onClose }) => (\n        <>\n          <MenuButton\n            as={Button}\n            variant=\"outline\"\n            h=\"36px\"\n            border=\"none\"\n            bg=\"none\"\n            p=\"0\"\n            height=\"16px\"\n            lineHeight=\"16px\"\n            w={{ base: '100%', lg: 'unset' }}\n            _hover={{ bg: 'none' }}\n            _active={{ bg: 'none' }}\n            onMouseEnter={() => setIsHover(true)}\n            onMouseLeave={() => setIsHover(false)}\n          >\n            <HStack gap=\"0\" justify=\"center\">\n              <Text color=\"primary_gray\" fontSize=\"13px\" {...labelStyle}>\n                {labelText || 'Type'}\n              </Text>\n              {/* {!isApp && ( */}\n              <Icon mt=\"1px\" xlinkHref=\"#icon-icon_filter\" svgW=\"16px\" svgH=\"16px\" svgFill={isHover ? 'text_caption' : 'text_paragraph'} />\n              {/* )} */}\n            </HStack>\n          </MenuButton>\n\n          <MenuList\n            zIndex={9999}\n            p=\"4px\"\n            sx={{\n              position: 'absolute',\n              left: 0,\n              top: '8px'\n            }}\n            w=\"156px\"\n            minW=\"156px\"\n          >\n            <VStack>\n              {list.map(item => (\n                <HStack key={item} h=\"30px\" justify=\"space-between\" w=\"100%\" p=\"0 12px\" onClick={() => toggleType(item)} cursor=\"pointer\">\n                  <Text>{item}</Text>\n                  <CheckBox checked={tempTypes.includes(item)} onClick={() => {}} />\n                </HStack>\n              ))}\n\n              <HStack w=\"100%\" justify=\"space-between\" mt=\"8px\" p=\"0\">\n                <Button\n                  fontSize=\"12px\"\n                  h=\"28px\"\n                  lineHeight=\"28px\"\n                  borderRadius=\"8px\"\n                  variant=\"outline\"\n                  w=\"50%\"\n                  onClick={() => {\n                    setTempTypes(type ? type.split(',') : [])\n                    onClose()\n                  }}\n                >\n                  Cancel\n                </Button>\n                <Button\n                  fontSize=\"12px\"\n                  w=\"50%\"\n                  h=\"28px\"\n                  lineHeight=\"28px\"\n                  borderRadius=\"8px\"\n                  onClick={() => {\n                    setType(tempTypes.join(','))\n                    onClose()\n                  }}\n                >\n                  Apply\n                </Button>\n              </HStack>\n            </VStack>\n          </MenuList>\n        </>\n      )}\n    </Menu>\n  )\n}\n\nexport default TypeCon\n"],"names":["TypeCon","type","setType","filterList","labelText","labelStyle","useWindowWidth","list","tempTypes","setTempTypes","useState","toggleType","item","prev","i","useEffect","isHover","setIsHover","jsx","Menu","onClose","jsxs","Fragment","MenuButton","Button","HStack","Text","Icon","MenuList","VStack","CheckBox"],"mappings":"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"}