{"version":3,"file":"StatusPosition-CmUwds3p.js","sources":["../../src/hooks/position/useClaimPosition.ts","../../src/components/position/common/StatusPosition.tsx"],"sourcesContent":["import usePositionStore from '@/store/position'\nimport { PosBaseInfo, PosReward } from '@/types'\nimport { useAccountBalance } from '@cetus/hooks'\nimport { useAccountStore } from '@cetus/stores'\nimport { TransactionStatusType } from '@cetus/types'\nimport { fixCoinType } from '@cetusprotocol/common-sdk'\nimport { useState } from 'react'\nimport useTransaction from '../common/useTransaction'\nimport useGetFarmsPosRewards from './useGetFarmsPosRewards'\nimport useGetPosfees from './useGetPosfees'\nimport useGetPosPools from './useGetPosPools'\nimport useGetPosRewards from './useGetPosRewards'\nimport usePosClaimFeeAndReward from './usePosClaimFeeAndReward'\n\nexport default function useClaimPosition() {\n  const { fetchAccountBalance } = useAccountBalance()\n  const { posRewardsData, farmsPosRewardsData } = usePositionStore()\n  const { getPosFeeData } = useGetPosfees()\n  const { getPosRewardsData } = useGetPosRewards()\n  const { getFarmsRewardsData } = useGetFarmsPosRewards()\n  const { signAndExecuteTransaction } = useTransaction()\n  const { getPosClaimFeeAndRewardAndFarmsTxPayload } = usePosClaimFeeAndReward()\n  const { currentAccount } = useAccountStore()\n  const [isClaimLoading, setIsClaimLoading] = useState(false)\n  const { getPosPoolsOriginalObj } = useGetPosPools()\n\n  // isClaimFarmsÊòØÂê¶Êî∂Ââ≤farmsÂ•ñÂä±\n  const toClaimPosition = async (positionInfo: any, curPosContractPoolInfo?: any, isClaimFarms?: boolean) => {\n    setIsClaimLoading(true)\n\n    try {\n      const posId = positionInfo?.posId\n      const id = positionInfo?.id\n\n      const farmsRewards = farmsPosRewardsData[id] || []\n      const miningRewards = posRewardsData[posId] || []\n\n      // Êî∂Ââ≤farmÂ•ñÂä±‰∏çÁî®‰º†coinType ÊâÄ‰ª•‰∏çÁî®Âå∫ÂàÜ  isClaimFarms ? [...rewarderFarmsCoinTypes,...rewarderMiningCoinTypes]\n      const rewarderFarmsCoinTypes = farmsRewards.map((r: PosReward) => fixCoinType(r.token.coin_type))\n      const rewarderMiningCoinTypes = miningRewards.map((r: PosReward) => fixCoinType(r.token.coin_type))\n\n      const combinedCoinTypes = rewarderMiningCoinTypes\n\n      const rewarderCoinTypes: string[] = Array.from(new Set(combinedCoinTypes))\n\n      const params: any = {\n        posType: positionInfo?.posType,\n        id,\n        clmmPool: positionInfo?.clmmPool,\n        coinTypeA: positionInfo?.coinTypeA,\n        coinTypeB: positionInfo?.coinTypeB,\n        rewarderCoinTypes,\n        account: currentAccount?.address,\n        dlmmPool: positionInfo?.dlmmPool\n      }\n      console.log('üöÄ ~ toClaimPosition ~ params:', params)\n\n      if (isClaimFarms) {\n        params['farmsPool'] = positionInfo?.farmsPool\n      }\n      console.log('üöÄ ~ toClaim ~ params:', rewarderCoinTypes, params)\n\n      const { tx, msafeParams } = await getPosClaimFeeAndRewardAndFarmsTxPayload(params)\n\n      const trackData = {\n        posType: positionInfo?.posType,\n        posId: positionInfo?.posType == 'farms' ? positionInfo?.id : positionInfo?.posId,\n        poolAddress: positionInfo?.clmmPool,\n        coinTypeA: positionInfo?.coinTypeA,\n        coinTypeB: positionInfo?.coinTypeB,\n        rewarderCoinType1: rewarderCoinTypes?.[0],\n        rewarderCoinType2: rewarderCoinTypes?.[1],\n        rewarderCoinType3: rewarderCoinTypes?.[2],\n        txAction: 'claimFeeAndReward'\n      }\n\n      const res = await signAndExecuteTransaction(\n        tx,\n        {\n          getShowInfo: (status: TransactionStatusType) => ({\n            modalDescriptionText: '',\n            toastTitleText: status === 'success' ? 'Claim Successful' : ''\n          })\n        },\n        { msafeParams, trackData }\n      )\n\n      if (res) {\n        const poolInfo = curPosContractPoolInfo || (await getPosPoolsOriginalObj([positionInfo as PosBaseInfo]))\n\n        console.log('üöÄ ~ toClaim ~ poolInfo:', poolInfo)\n\n        // Âª∂ËøüÂà∑Êñ∞Êï∞ÊçÆ\n        setTimeout(() => {\n          fetchAccountBalance()\n          if (isClaimFarms) getFarmsRewardsData([positionInfo as PosBaseInfo])\n          getPosFeeData([positionInfo as PosBaseInfo])\n          getPosRewardsData([positionInfo as PosBaseInfo], {\n            [poolInfo.poolAddress]: poolInfo\n          })\n          // getCurrentPosHistory(id, posId) // Â¶ÇÈúÄÂéÜÂè≤ËÆ∞ÂΩï\n        }, 2000)\n      }\n    } catch (error) {\n      console.error('üöÄ ~ toClaim ~ error:', error)\n    } finally {\n      setIsClaimLoading(false)\n    }\n  }\n\n  return {\n    toClaimPosition,\n    isClaimLoading\n  }\n}\n","import { CetusTooltip } from '@cetus/design'\nimport { cancelBubble } from '@cetus/utils'\nimport { Center, Flex, HStack, HTMLChakraProps, Image, Skeleton, Text } from '@chakra-ui/react'\nimport icon_active from '/images/icon_active_new@2x.png'\ninterface StatusPositionProps extends HTMLChakraProps<'div'> {\n  isActive: boolean\n  isLoading?: boolean\n  imgStyle?: {\n    imgW?: string\n    imgH?: string\n  }\n}\nfunction StatusPosition({ isActive, isLoading, imgStyle = {}, ...rest }: StatusPositionProps) {\n  const { imgW = '16px', imgH = '12px' } = imgStyle\n  return (\n    <>\n      {!isLoading && (\n        <CetusTooltip\n          placement=\"top\"\n          tooltip={\n            <Text fontSize=\"12px\" lineHeight=\"20px\" maxW=\"240px\" textAlign=\"left\">\n              {isActive\n                ? 'The price of this pool is currently within your position price range.'\n                : 'The price of this pool is currently out of your position price range.'}\n            </Text>\n          }\n        >\n          <Flex\n            minW={isActive ? '76px' : '62px'}\n            borderRadius=\"8px\"\n            align=\"center\"\n            justifyContent=\"center\"\n            bg={'bg_secondary'}\n            h=\"18px\"\n            p=\"0px 8px\"\n            {...rest}\n          >\n            <Center onClick={e => cancelBubble(e)}>\n              <Skeleton w=\"100%\" isLoaded={!isLoading}>\n                <HStack align=\"center\">\n                  {isActive && <Image w={imgW} h={imgH} src={icon_active} />}\n                  <Text fontSize=\"12px\" color={isActive ? 'primary' : 'primary_gray'} fontWeight=\"500\">\n                    {isActive ? 'Active' : 'Inactive'}\n                  </Text>\n                </HStack>\n              </Skeleton>\n            </Center>\n          </Flex>\n        </CetusTooltip>\n      )}\n    </>\n  )\n}\n\nexport default StatusPosition\n"],"names":["useClaimPosition","fetchAccountBalance","useAccountBalance","posRewardsData","farmsPosRewardsData","usePositionStore","getPosFeeData","useGetPosfees","getPosRewardsData","useGetPosRewards","getFarmsRewardsData","useGetFarmsPosRewards","signAndExecuteTransaction","useTransaction","getPosClaimFeeAndRewardAndFarmsTxPayload","usePosClaimFeeAndReward","currentAccount","useAccountStore","isClaimLoading","setIsClaimLoading","useState","getPosPoolsOriginalObj","useGetPosPools","positionInfo","curPosContractPoolInfo","isClaimFarms","posId","id","farmsRewards","miningRewards","rewarderFarmsCoinTypes","r","fixCoinType","combinedCoinTypes","rewarderCoinTypes","params","tx","msafeParams","trackData","status","poolInfo","error","StatusPosition","isActive","isLoading","imgStyle","rest","imgW","imgH","jsx","Fragment","CetusTooltip","Text","Flex","Center","e","cancelBubble","Skeleton","jsxs","HStack","Image","icon_active"],"mappings":"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"}