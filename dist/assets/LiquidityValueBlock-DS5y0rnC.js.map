{"version":3,"file":"LiquidityValueBlock-DS5y0rnC.js","sources":["../../src/hooks/farms/useFarms.ts","../../../../../../../../../images/burn-lock.png","../../src/components/common/BurnLockIcon.tsx","../../src/components/position/clmm/list/LiquidityValueBlock.tsx"],"sourcesContent":["import { MsafeTransactionSubType } from '@/types'\nimport { useSdk } from '@cetus/sdk-factory'\nimport { Transaction } from '@mysten/sui/transactions'\n\ntype HarvestParams = {\n  pool_id: string\n  position_nft_id: string\n}\n\nexport default function useFarms() {\n  const farmsSdk = useSdk('farms')\n\n  /**\n   * Farms Stake Transaction Payload\n   * @param clmmPosId\n   * @param poolId\n   * @returns\n   */\n  const getStakeTxPayload = async (clmmPosId: string, poolId: string, clmmPool: string, coinTypeA: string, coinTypeB: string) => {\n    const parameter = {\n      pool_id: poolId,\n      clmm_position_id: clmmPosId,\n      clmm_pool_id: clmmPool,\n      coin_type_a: coinTypeA,\n      coin_type_b: coinTypeB\n    }\n    console.log('ðŸš€ ~ getStakeTxPayload ~ parameter:', parameter)\n    const tx = await farmsSdk!.Farms.depositPayload(parameter)\n    const msafeParams = {\n      action: MsafeTransactionSubType.FarmingStake,\n      txbParams: parameter\n    }\n\n    return {\n      tx,\n      msafeParams\n    }\n  }\n\n  /**\n   * Farms Unstake Transaction Payload\n   * @param poolId\n   * @param positionNftId ä¼ posBaseInfoé‡Œçš„idå°±è¡Œ\n   * @returns\n   */\n  const getUnstakeTxPayload = async (poolId: string, positionNftId: string) => {\n    const parameter = {\n      pool_id: poolId,\n      position_nft_id: positionNftId\n    }\n\n    const tx = await farmsSdk!.Farms.withdrawPayload(parameter)\n\n    const msafeParams = {\n      action: MsafeTransactionSubType.FarmingUnstake,\n      txbParams: parameter\n    }\n    return {\n      tx,\n      msafeParams\n    }\n  }\n\n  /**\n   * Farms claim rewards\n   * @param poolId\n   * @param positionNftId\n   * @returns\n   */\n  const getHarvestFarmsTxPayload = async (poolId: string, positionNftId: string, txf?: Transaction) => {\n    const parameter = {\n      pool_id: poolId,\n      position_nft_id: positionNftId\n    }\n    const tx = await farmsSdk!.Farms.harvestPayload(parameter, txf)\n\n    const msafeParams = {\n      action: MsafeTransactionSubType.FarmingHarvest,\n      txbParams: parameter\n    }\n    return {\n      tx,\n      msafeParams\n    }\n  }\n\n  /**\n   * Batch Harvest Farms rewards\n   * @param params\n   * @returns\n   */\n  const getBatchHarvestFarmsTxPayload = async (params: HarvestParams[]) => {\n    const tx = await farmsSdk!.Farms.batchHarvestPayload(params)\n    const msafeParams = {\n      action: 'FarmingBatchHarvest',\n      txbParams: params\n    }\n    return {\n      tx,\n      msafeParams\n    }\n  }\n\n  return {\n    getStakeTxPayload,\n    getUnstakeTxPayload,\n    getHarvestFarmsTxPayload,\n    getBatchHarvestFarmsTxPayload\n  }\n}\n","export default \"__VITE_PUBLIC_ASSET__39369f0a__\"","import { CetusTooltip } from '@cetus/design'\nimport { cancelBubble } from '@cetus/utils'\nimport { Center, HStack, Image, Text } from '@chakra-ui/react'\nimport burn_lock from '/images/burn-lock.png'\n\nconst BurnLockIcon = () => {\n  return (\n    <HStack\n      w=\"20px\"\n      h=\"20px\"\n      onClick={e => {\n        cancelBubble(e)\n      }}\n    >\n      <CetusTooltip placement=\"top\" tooltip={<Text fontSize=\"12px\">Liquidity that is permanently locked</Text>}>\n        <Center>\n          <Image w=\"100%\" h=\"100%\" src={burn_lock} />\n        </Center>\n      </CetusTooltip>\n    </HStack>\n  )\n}\n\nexport default BurnLockIcon\n","import BurnLockIcon from '@/components/common/BurnLockIcon'\nimport usePositionStore from '@/store/position'\nimport { PosBaseInfo } from '@/types'\nimport SingleTokenInfo from '@cetus/design/src/components/common/SingleTokenInfo'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { cancelBubble, d, formatCurrency, formatNumberWithDown } from '@cetus/utils'\nimport {\n  Box,\n  Center,\n  HStack,\n  HTMLChakraProps,\n  Popover,\n  PopoverBody,\n  PopoverContent,\n  PopoverTrigger,\n  Portal,\n  Skeleton,\n  Text,\n  VStack\n} from '@chakra-ui/react'\nimport { useMemo } from 'react'\ninterface LiquidityValueBlockProps extends HTMLChakraProps<'div'> {\n  positionInfo: PosBaseInfo\n  haveTooltip?: boolean\n  isPosList?: boolean\n}\nconst LiquidityValueBlock = ({ positionInfo, haveTooltip = true, isPosList = false, ...rest }: LiquidityValueBlockProps) => {\n  const { getTokenAmountValue } = useTokenPrice()\n  const { posLiquidityData, posLiquidityDataLoading } = usePositionStore()\n\n  const currentPosData = posLiquidityData[positionInfo?.posId]\n\n  const amountValueA = getTokenAmountValue(positionInfo?.displayTokenA?.coin_type, currentPosData?.displayCoinAmountA, '--')\n\n  const amountValueB = getTokenAmountValue(positionInfo?.displayTokenB?.coin_type, currentPosData?.displayCoinAmountB, '--')\n\n  const amountValue = useMemo(() => {\n    if (amountValueA !== '--' && amountValueB !== '--') {\n      return formatCurrency(d(amountValueA).plus(amountValueB).toString(), 2)\n    }\n    return '$--'\n  }, [amountValueA, amountValueB])\n\n  const { isApp } = useWindowWidth()\n  return (\n    <HStack gap=\"4px\">\n      {positionInfo?.posType == 'burn' && <BurnLockIcon />}\n      <Box p=\"12px 0\" onClick={e => cancelBubble(e)}>\n        <Popover isLazy trigger={isApp ? 'click' : 'hover'} placement=\"top-start\">\n          <PopoverTrigger>\n            <Center as=\"button\" cursor={!haveTooltip ? 'text' : 'help'}>\n              <Skeleton isLoaded={!!amountValue && !!posLiquidityData}>\n                <Text\n                  color=\"text_caption\"\n                  fontSize=\"16px\"\n                  textDecoration={isPosList || !haveTooltip ? 'none' : 'underline dashed'}\n                  textUnderlineOffset=\"3px\"\n                  {...rest}\n                  textDecorationColor=\"primary_gray\"\n                  lineHeight=\"1\"\n                >\n                  {amountValue}\n                </Text>\n              </Skeleton>\n            </Center>\n          </PopoverTrigger>\n          {haveTooltip && (\n            <Portal>\n              <PopoverContent zIndex=\"2\" minW=\"unset\" w=\"unset\" p=\"4px \">\n                <PopoverBody borderRadius=\"12px\" p=\"8px\">\n                  <VStack align=\"flex-start\" minW=\"200px\">\n                    <HStack\n                      w=\"100%\"\n                      justify=\"space-between\"\n                      borderBottom=\"1px solid\"\n                      borderColor=\"border\"\n                      pb=\"8px\"\n                      sx={{\n                        _last: {\n                          borderBottom: 'none',\n                          pb: '0px'\n                        }\n                      }}\n                    >\n                      <SingleTokenInfo\n                        token={positionInfo?.displayTokenA}\n                        imgBoxStyle={{ w: '20px', h: '20px' }}\n                        haveName={false}\n                        symbolFontSize=\"12px\"\n                        warningIcon={{ iconW: '10px', iconH: '10px' }}\n                      />\n                      <VStack align=\"flex-end\" gap=\"4px\">\n                        <Text fontSize=\"12px\" color=\"text_caption\">\n                          {formatNumberWithDown(currentPosData?.displayCoinAmountA)}\n                        </Text>\n                        <Text fontSize=\"12px\">{formatCurrency(amountValueA, 2)}</Text>\n                      </VStack>\n                    </HStack>\n                    <HStack w=\"100%\" justify=\"space-between\">\n                      <SingleTokenInfo\n                        token={positionInfo?.displayTokenB}\n                        imgBoxStyle={{ w: '20px', h: '20px' }}\n                        haveName={false}\n                        symbolFontSize=\"12px\"\n                        warningIcon={{ iconW: '10px', iconH: '10px' }}\n                      />\n                      <VStack align=\"flex-end\" gap=\"4px\">\n                        <Text fontSize=\"12px\" color=\"text_caption\">\n                          {formatNumberWithDown(currentPosData?.displayCoinAmountB)}\n                        </Text>\n                        <Text fontSize=\"12px\">{formatCurrency(amountValueB, 2)}</Text>\n                      </VStack>\n                    </HStack>\n                  </VStack>\n                </PopoverBody>\n              </PopoverContent>\n            </Portal>\n          )}\n        </Popover>\n      </Box>\n    </HStack>\n  )\n}\n\nexport default LiquidityValueBlock\n"],"names":["useFarms","farmsSdk","useSdk","clmmPosId","poolId","clmmPool","coinTypeA","coinTypeB","parameter","tx","msafeParams","MsafeTransactionSubType","positionNftId","txf","params","burn_lock","BurnLockIcon","jsx","HStack","cancelBubble","CetusTooltip","Text","Center","Image","LiquidityValueBlock","positionInfo","haveTooltip","isPosList","rest","getTokenAmountValue","useTokenPrice","posLiquidityData","posLiquidityDataLoading","usePositionStore","currentPosData","amountValueA","_a","amountValueB","_b","amountValue","useMemo","formatCurrency","d","isApp","useWindowWidth","jsxs","Box","e","Popover","PopoverTrigger","Skeleton","Portal","PopoverContent","PopoverBody","VStack","SingleTokenInfo","formatNumberWithDown"],"mappings":"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"}