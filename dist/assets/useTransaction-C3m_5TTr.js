import{i as Re,M as ye,f as _e,d as Ee,a$ as Me,b0 as Ue,cb as We,b as qe,av as De,bl as Ye,cc as He,cd as me,ce as Le}from"./index-Lo8eQgA0.js";import{r as Xe,c as Ce}from"./vendor-CBmAETR3.js";import{t as Pe,u as Ve}from"./useTrack-T_4vPqTb.js";import{b as ze,p as Je,o as Ke,C as xe,I as Be,s as Qe,j as Ze,k as et,l as tt,T as st,m as pe}from"./cross-J9VCREIf.js";import{u as Ae}from"./useSigner-Dol5aKH6.js";import{u as nt}from"./useTransactionModal-Bz8Bofje.js";function ot(e){try{return e&&(e.includes("user")||e.includes("User"))&&e.includes("reject")}catch{return!1}}function rt(e){const t=String(e);return t.indexOf('Some("create_pool_internal")')>-1&&t.indexOf(" }, 1")>-1}function ct(e){const t=String(e);return t.indexOf("withdraw_with_proof")>-1||t.indexOf("check_coin_threshold")>-1||t.indexOf('Identifier("balance")')>-1||t.indexOf("validate_active_id_slippage")>-1||t.indexOf("err_amount_out_slippage_check_failed")>-1||t.indexOf("remove_liquidity")>-1&&(t.indexOf("in command 1")>-1||t.indexOf("in command 2")>-1||t.indexOf("in command 4")>-1||t.indexOf("in command 5")>-1)||t.indexOf("repay_add_liquidity")>-1&&(t.indexOf("in command 1")>-1||t.indexOf("in command 2")>-1||t.indexOf("in command 3")>-1||t.indexOf("in command 4")>-1||t.indexOf("in command 5")>-1)||t.indexOf("add_liquidity_by_strategy_slippage_exceed")>-1&&(t.indexOf("in command 1")>-1||t.indexOf("in command 2")>-1||t.indexOf("in command 3")>-1||t.indexOf("in command 4")>-1||t.indexOf("in command 5")>-1)}function it(e){return!!String(e).includes("Could not find the referenced transaction")}function at(e){return!!String(e).includes("TRPCClientError:")}function dt(e){const t=e.status,i=String(e);return!!([429,503,502,400].includes(t)||i.includes("Could not find the referenced object"))}function ut(e){return!!String(e).includes("Max cap reached.")}function lt(e){return!!String(e).includes("Gas fee exceeds")}function ft(e){return!!String(e).includes("Fast Mode service error")}function gt(e){return!!String(e).includes("The current operation does not support msafe wallet")}function bt(e){return String(e).indexOf("hard_cap_reached")>-1}function ht(e){return String(e).indexOf('Some("err_expired") }, 6')>-1}function mt(e){const t=String(e);return!!(t.includes("Balance of gas")&&t.includes("is lower than")||t.includes("InsufficientGas"))}const xt=[{matcher:ot,message:"User rejected the request"},{matcher:mt,message:"Insufficient gas for this transaction."},{matcher:it,message:"Oops. Failed to sync data from your txid. Please check your txn status from explorer or from your wallet."},{matcher:dt,message:"RPC loading failed. Try resubmission or check your network. You can also switch an RPC in settings to try again."},{matcher:ut,message:"Max cap reached. This is to prevent your txn from overpaying. You can choose to edit your gas max cap in settings if needed."},{matcher:lt,message:"Gas fee exceeds the maximum gas budget on Sui."},{matcher:ft,message:"Fast Mode service error, please switch to the Default Transaction Mode or try again later."},{matcher:gt,message:"The current operation does not support msafe wallet."},{matcher:e=>String(e).includes("Transaction validator signing failed"),message:"Oops. Failed to pull your txid. Please check your txn status from explorer or from your wallet."},{matcher:ct,message:"Exceeded price slippage"},{matcher:rt,message:"Pool already exists"},{matcher:bt,message:"Deposit Exceeds Cap"},{matcher:at,message:e=>String(e).split(":")[1]},{matcher:ht,message:"RFQ offer expired"}];function le(e){for(const{matcher:t,message:i}of xt)if(t(e))return typeof i=="function"?i(e):i;return"Transaction failed"}const pt=(e,t)=>({batchAuthOptions:void 0,setBatchAuthOptions:i=>{e(()=>({batchAuthOptions:i}))},showBatchAuthModal:!1,setShowBatchAuthModal:i=>{e(()=>({showBatchAuthModal:i}))}}),Tt=Re(pt),St="0x2::sui::SUI",wt="https://rpc.getshio.com/fast",It="0x1889977f0fb56ae730e7bda8e8e32859ce78874458c74910d36121a81a615123",Oe=[{objectId:"0xc32ce42eac951759666cbc993646b72387ec2708a2917c2c6fb7d21f00108c18",version:72869622},{objectId:"0x0289acae0edcdf1fe3aedc2e886bc23064d41c359e0179a18152a64d1c1c2b3e",version:327637282},{objectId:"0x03132160e8c2c45208abf3ccf165e82edcc42fee2e614afe54582f9740a808b8",version:327637282},{objectId:"0x072ae7307459e535379f422995a0d10132f12a3450298f8cf0cc07bd164f9999",version:327637282},{objectId:"0x1c1a96a2f4a34ea09ab15b8ff98f4b6b4338ce89f4158eb7d3eb2cd4dcbd6d86",version:327637282},{objectId:"0x20d76f37ad9f2421a9e6afaf3bb204250b1c2241c50e8a955e86a1a48767d06f",version:327637282},{objectId:"0x213ed368233cc7480fcb6336e70c5ae7ee106b2317ba02ccb5d0478e45bcc046",version:327637282},{objectId:"0x22ce1e80937354eba5549fed2937dc6e2b24026d03505bb51a3e4a64aa4142f6",version:327637282},{objectId:"0x26188cb7ce5ae633279f440f66081cb65cc585e428de18e194f8843e866f799f",version:327637282},{objectId:"0x38642f01422480128388d3e2948d3dc1b2680f9914077edb6bd3451ae1c5bcf0",version:327637282},{objectId:"0x3dd85b6424aea1cae9eff6e55456ca783e056226325f1362106eca8b3ed04ca0",version:327637282},{objectId:"0x42f8adc490542369d9c3b95e9f6eb70b2583102900feb7e103072ed49ba7fc3d",version:327637282},{objectId:"0x46b8158c82fa6bda7230d31a127d934c7295a0042083b4900f3096e9191f6f3f",version:327637282},{objectId:"0x6ebac88a8c3f7a4a9fb05ea49d188a1fe8520ae59ee736e0473004d3033512a4",version:327637282},{objectId:"0x6f55ad6cb40cfc124c11b11c19be0a80237b104acd955e7b52ccb7bf9046fe33",version:327637282},{objectId:"0x71aafb8bac986e82e5f78846bf3b36c2a82505585625207324140227a27ff279",version:327637282},{objectId:"0x7fe9b08680d4179de5672f213b863525b21f10604ca161538075e9338d1d2324",version:327637282},{objectId:"0x81538ef2909a3e0dd3d7f38bcbee191509bae4e8666272938ced295672e2ee8d",version:327637282},{objectId:"0x828eb6b3354ad68a23dd792313a16a0d888b7ea4fdb884bb22bd569f8e61319e",version:327637282},{objectId:"0x9705a332b8c1650dd7fe687ef9f9a9638afb51c30c0b34db150d60b920bc07eb",version:327637282},{objectId:"0x9918f73797a9390e9888b55454f2b31bc01de1a4634acab08f80641c4248e8a5",version:327637282},{objectId:"0x9cd4c08bdf2e132ec2cc77b0f03be60a94951e046d8e82ed5494f44e609edd2f",version:327637282},{objectId:"0xac8ce2033571140509788337c8a1f3aa8941a320ecd7047acda310d39cad9e03",version:327637282},{objectId:"0xbcd4527035265461a9a7b4f1e57c63ea7a6bdf0dc223c66033c218d880f928b1",version:327637282},{objectId:"0xbfdb691b8cc0b3c3a3b7a654f6682f3e53b164d9ee00b9582cdb4d0a353440a9",version:327637282},{objectId:"0xc2559d5c52ae04837ddf943a8c2cd53a5a0b512cee615d30d3abe25aa339465e",version:327637282},{objectId:"0xc56db634d02511e66d7ca1254312b71c60d64dc44bf67ea46b922c52d8aebba6",version:327637282},{objectId:"0xc84545cbff1b36b874ab2b69d11a3d108f23562e87550588c0bda335b27101e0",version:327637282},{objectId:"0xcc141659b5885043f9bfcfe470064819ab9ac667953bcedd1000e0652e90ee76",version:327637282},{objectId:"0xef6bf4952968d25d3e79f7e4db1dc38f2e9d99d61ad38f3829acb4100fe6383a",version:327637282},{objectId:"0xf2ed8d00ef829de5c4a3c5adf2d6b0f41f7fec005fb9c88e5616b98173b2fd66",version:327637282},{objectId:"0xfce73f3c32c3f56ddb924a04cabd44dd870b72954bbe7c3d7767c3b8c25c4326",version:327637282}];async function jt(e){const t=e.client,i=await e.transaction.build({client:t,onlyTransactionKind:!0});let c=e.sender??e.transaction.getData().sender;if(!c)throw new Error("Sender need to be either set in options or in transaction data");return await t.call("shio_estimateFastModeFee",[c,e.transaction.getData().gasData.price,ze.from(i).toString("base64")])}function vt(){return Oe[Math.floor(Math.random()*Oe.length)]}async function Et(e,t,i){return await e.executeTransactionBlock({transactionBlock:t.bytes,signature:t.signature,options:i})}async function Ct(e,t,i){let c=e.moveCall({package:"0x2",module:"coin",function:"into_balance",typeArguments:[St],arguments:[t]});return Bt(e,c,i)}async function Bt(e,t,i){let c=vt();e.moveCall({package:It,module:"auctioneer",function:"submit_bid",arguments:[e.sharedObjectRef({objectId:c.objectId,mutable:!0,initialSharedVersion:c.version}),e.pure.u64(i),t]})}const Te="CoinWithBalance",Ot=Ke({type:et(),balance:Ze()});async function yt(e,t,i){var Y,E;const c=new Set,a=new Map;if(!e.sender)throw new Error("Sender must be set to resolve CoinWithBalance");for(const l of e.commands)if(l.$kind==="$Intent"&&l.$Intent.name===Te){const{type:w,balance:b}=Je(Ot,l.$Intent.data);w!=="gas"&&b>0n&&c.add(w),a.set(w,(a.get(w)??0n)+b)}const g=new Set;for(const l of e.inputs)(Y=l.Object)!=null&&Y.ImmOrOwnedObject&&g.add(l.Object.ImmOrOwnedObject.objectId),(E=l.UnresolvedObject)!=null&&E.objectId&&g.add(l.UnresolvedObject.objectId);const _=new Map,k=t.client;await Promise.all([...c].map(async l=>{_.set(l,await _t({coinType:l,balance:a.get(l),client:k,owner:e.sender,usedIds:g}))}));const v=new Map;v.set("gas",{$kind:"GasCoin",GasCoin:!0});for(const[l,w]of e.commands.entries()){if(w.$kind!=="$Intent"||w.$Intent.name!==Te)continue;const{type:b,balance:O}=w.$Intent.data;if(O===0n&&b!=="gas"){e.replaceCommand(l,xe.MoveCall({target:"0x2::coin::zero",typeArguments:[b]}));continue}const $=[];if(!v.has(b)){const[M,...V]=_.get(b).map(z=>e.addInput("object",Be.ObjectRef({objectId:z.coinObjectId,digest:z.digest,version:z.version})));V.length>0&&$.push(xe.MergeCoins(M,V)),v.set(b,M)}$.push(xe.SplitCoins(v.get(b),[e.addInput("pure",Be.Pure(Qe.u64().serialize(O)))])),e.replaceCommand(l,$),e.mapArguments(M=>M.$kind==="Result"&&M.Result===l?{$kind:"NestedResult",NestedResult:[l+$.length-1,0]}:M)}return i()}async function _t({coinType:e,balance:t,client:i,owner:c,usedIds:a}){let g=t;const _=[];return k();async function k(v=null){const{data:Y,hasNextPage:E,nextCursor:l}=await i.getCoins({owner:c,coinType:e,cursor:v}),w=Y.sort((b,O)=>Number(BigInt(O.balance)-BigInt(b.balance)));for(const b of w){if(a.has(b.coinObjectId))continue;const O=BigInt(b.balance);if(_.push(b),g-=O,g<=0)return _}if(E)return k(l);throw new Error(`Not enough coins of type ${e} to satisfy requested balance`)}}function Mt(){const{signTransactionBlock:e}=Ae(),{currentAccount:t}=ye(),i=_e("clmm"),c=async(a,g,_)=>{console.log("🚀🚀🚀 ~ useFastModeTransaction.ts:12 ~ getFastModeTx ~ getFastModeTx:",c);let k,v,Y;try{const E=new tt({url:wt}),l=i.FullClient;a.setSender(t==null?void 0:t.address),a.setGasPrice(Number(_));const w=st.from(a);w.addIntentResolver(Te,yt);const b=!0;let O=0,$=0;if(b){const ae=await jt({transaction:w,client:E});O=ae.gasBudget,$=ae.tipAmount}const M=Ee(g).mul(Math.pow(10,9)).toString();if(Ee(O).gt(M))throw Error("Max cap reached. This is to prevent your txn from overpaying. You can choose to edit your gas max cap in settings if needed.");a.setGasBudget(O);const V=a.splitCoins(a.gas,[$]);console.log("🚀 ~ getFastModeTx ~ tx:",{tx:a,tipAmount:$,gasBudget:O}),Ct(a,V[0],$);const z=await a.build({client:l}),H=await e(z);console.log("🚀 ~ file: useTransaction.tsx:94 ~ useTransaction ~ signTx:",H);const{bytes:q,signature:ie}=H;Y=q,console.log("🚀 ~ getFastModeTx ~ signTx:",H),v=new Date().getTime(),k=await Et(E,H,{showEffects:!0,showEvents:!0}),console.log("🚀 ~ getFastModeTx ~ result:",k)}catch(E){throw console.log("🚀 ~ getFastModeTx ~ error:",E),console.log("🚀 ~ getFastModeTx ~ String(error).includes(Failed to fetch):",String(E).includes("Failed to fetch")),String(E).includes("Failed to fetch")?Error("Fast Mode service error"):E}return{result:k,startExecuteTime:v,transactionBlockBytes:Y}};return{getFastModeTx:c}}function At(){const e=Me(),t=Ue(),i=Xe.useMemo(()=>{if(!e.currentWallet)return null;const a=e.currentWallet.features["sui:signAndExecuteTransactionBlock"];return a?a.signAndExecuteTransactionBlock:null},[e]);return{getMsafeRes:async(a,g)=>{if(!t||!i)throw new Error("No account information");return a.setSender(t==null?void 0:t.address),await i({transactionBlock:a,account:t,chain:t==null?void 0:t.chains[0],action:g==null?void 0:g.action,txbParams:g==null?void 0:g.txbParams})}}}var Se={},Ft=Ce&&Ce.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(Se,"__esModule",{value:!0});var kt=Se.executeAuction=Fe;const $t=Ft(We),Nt="https://rpc.getshio.com",Gt=500,Rt=300;function Fe(e,t,i=Gt){const c={jsonrpc:"2.0",method:"shio_executeAuction",params:[e,t],id:1};return new Promise((a,g)=>{setTimeout(a,i),$t.default.post(Nt,c,{headers:{"Content-Type":"application/json"},timeout:i}).then(_=>{console.log("Shio executeAuction response:",_.data),setTimeout(a,Rt)}).catch(g)})}Se.default={executeAuction:Fe};function Xt(){const{signTransactionBlock:e,executeTransactionBlock:t,signAndExecuteTransactionBlock:i}=Ae(),{currentAccount:c}=ye(),a=_e("clmm"),{transactionConfirmation:g,transactionSubmitted:_,transactionSuccess:k,transactionRejected:v,closeTransactionModal:Y}=nt(),{submittedTsToast:E,failedTsToast:l,successTsToast:w,closeToast:b}=qe();De();const{getFastModeTx:O}=Mt(),{getMsafeRes:$}=At(),{toTrackSwap:M,toTrackTransactionError:V,toTrackDlmmTransaction:z}=Ve(),{setShowBatchAuthModal:H,setBatchAuthOptions:q}=Tt(),{currentWallet:ie}=Me(),ae=5,we=2e3;async function fe(d,o=1){console.log(`useTransaction: 🔍 getTransactionStatus - Attempt ${o}`);try{let m;try{m=await a.FullClient.getTransactionBlock({digest:d,options:{showEvents:!0,showEffects:!0,showBalanceChanges:!0,showInput:!0,showRawInput:!0,showObjectChanges:!0}})}catch{m=await a.FullClient.getTransactionBlock({digest:d,options:{showEvents:!0,showEffects:!0}})}if(console.log("useTransaction: ✅ Transaction status response:",m),m)return m;throw new Error("Empty response")}catch(m){if(console.error(`useTransaction: ❌ Attempt ${o} failed:`,m),o>=ae)throw console.error("useTransaction: 💥 Max retries reached, giving up"),new Error("Failed to fetch transaction status after maximum retries.");return console.log(`useTransaction: ⏳ Waiting ${we}ms before retry...`),await Ye(we),fe(d,o+1)}}const ke=async(d,o,m)=>{var P,I,y,R,de,r,Z,T,ee,oe,re;console.log(`useTransaction: ⚡ executeSingleTransaction - TX ${o}`,d);const{useDevInspect:h,useMev:A,txAction:N,useFastMode:G,maxCapForGas:L,customGasPrice:X,msafeParams:p}=m;console.log("useTransaction: Options:",{useDevInspect:h,useMev:A,txAction:N,useFastMode:G,maxCapForGas:L,customGasPrice:X,hasMsafeParams:!!p});try{let s,j,J;if(G&&L&&X){const C=await O(d,L,X);s=C.result,j=C.transactionBlockBytes,J=C.startExecuteTime;const F=((I=(P=s==null?void 0:s.effects)==null?void 0:P.status)==null?void 0:I.status)==="success";let U=s==null?void 0:s.digest;if(!U&&j){const Q=me(j);U=pe.getDigestFromBytes(Q),s.digest=U}return{success:F,response:s,index:o,digest:(s==null?void 0:s.digest)||"",transactionBlockBytes:j,startExecuteTime:J,error:null}}else if((y=Le)!=null&&y.inMSafeWallet())if(p){s=await $(d,p);const C=((de=(R=s==null?void 0:s.effects)==null?void 0:R.status)==null?void 0:de.status)==="success";let F=s==null?void 0:s.digest;if(!F&&j){const U=me(j);F=pe.getDigestFromBytes(U),s.digest=F}return{success:C,response:s,index:o,digest:F||"",transactionBlockBytes:j,startExecuteTime:null,error:C?null:((Z=(r=s==null?void 0:s.effects)==null?void 0:r.status)==null?void 0:Z.error)||"Transaction failed"}}else throw new Error("The current operation does not support msafe wallet");else if(N==="signTransactionBlock"){const C=await e(d);J=new Date().getTime();const{bytes:F,signature:U}=C;if(j=C.bytes,A){console.log("💰 MEV execution...");try{const Q=await kt(F,U,500)}catch(Q){console.log("⚠️ MEV execution failed:",Q)}}s=await t(F,U,h)}else s=await i(d,h);const te=((ee=(T=s==null?void 0:s.effects)==null?void 0:T.status)==null?void 0:ee.status)==="success";let K=s==null?void 0:s.digest;if(!K&&j){const C=me(j);K=pe.getDigestFromBytes(C),s.digest=K}const ce={success:te,response:s,index:o,digest:K,transactionBlockBytes:j,startExecuteTime:J,error:te?null:((re=(oe=s==null?void 0:s.effects)==null?void 0:oe.status)==null?void 0:re.error)||"Transaction failed"};return console.log(te?"useTransaction: ✅ Transaction successful":"useTransaction: ❌ Transaction failed",ce),ce}catch(s){return console.error(`useTransaction: Transaction ${o} execution failed:`,s),{success:!1,response:null,index:o,digest:null,transactionBlockBytes:null,startExecuteTime:null,error:(s==null?void 0:s.message)||String(s)}}},$e=async(d,o,{useDevInspect:m=!1,useMev:h=!1,txAction:A="signTransactionBlock",showSuccessModal:N=!0,useFastMode:G=!1,maxCapForGas:L="",customGasPrice:X="",msafeParams:p,otherParams:P,trackData:I}={})=>{const y=await Ie([d],o,{useDevInspect:m,useMev:h,txAction:A,showSuccessModal:N,useFastMode:G,maxCapForGas:L,customGasPrice:X,msafeParams:p,otherParams:P,trackData:I});if(console.log("useTransaction: 🚀 ~ batchSignAndExecuteTransaction ~ res:",y),y&&y.successResults&&y.successResults.length>0)return y.successResults[0].response},Ie=async(d,o,{useDevInspect:m=!1,useMev:h=!1,txAction:A="signTransactionBlock",showSuccessModal:N=!0,useFastMode:G=!1,maxCapForGas:L="",customGasPrice:X="",msafeParams:p,otherParams:P,trackData:I}={})=>{var oe,re,s,j,J,te,K,ce,C,F,U,Q,je;console.log("useTransaction: Options:",{useDevInspect:m,useMev:h,txAction:A,txsCount:d.length,useFastMode:G,maxCapForGas:L,customGasPrice:X,msafeParams:!!p});const y=o.transactionId||new Date().getTime().toString();o.transactionId=y;const R=d.length>1,de=o.requestId;let r;R?(H(!0),r={requestId:de,title:((re=(oe=o.getShowInfo)==null?void 0:oe.call(o,"confirmation"))==null?void 0:re.modalDescriptionText)||"",status:"pending",steps:d.map((D,x)=>({index:x+1,status:"confirmation",isActiveStep:x===0}))},q(r)):g(o);const Z=(p==null?void 0:p.action)==="AggregatorSwap";let T="",ee="";try{const D=[];for(const n of d)if(typeof n=="function"){const u=await n();D.push(u)}else D.push(n);D.forEach(n=>{n.setSender(c==null?void 0:c.address)});const x=[];let B=0;for(const n of D){const u=await ke(n,B,{useDevInspect:m,useMev:h,txAction:A,useFastMode:G,maxCapForGas:L,customGasPrice:X,msafeParams:p});console.log("useTransaction executeSingleTransaction: ",u),R&&r&&(r.steps[B].status=u.success?"success":u.digest?"submitted":"rejected",r.steps[B].tx=u.digest||"",r.steps[B].error=u.error?le(u.error):"",r.steps.forEach((f,se)=>{f.isActiveStep=se===B+1}),q(r)),B++,x.push(u)}console.log("useTransaction: Processing execution results...",x);let S=x.filter(n=>n.success);const be=x.filter(n=>!n.success&&n.response&&n.digest);let W=x.filter(n=>!n.success&&!n.response);if(console.log("useTransaction: Initial classification:",{total:x.length,successful:S.length,pending:be.length,failed:W.length}),o.tx=S.length>0&&S[0].digest||"",R&&r?(r.status=W.length===d.length?"failed":"success",q(r)):(_(o),o.isSwapWidget||E(o)),b(y),be.length>0)for(const n of be)try{let u=n.digest;const f=await fe(u,0);((j=(s=f==null?void 0:f.effects)==null?void 0:s.status)==null?void 0:j.status)==="success"?(S.push({...n,success:!0,response:f}),console.log(`useTransaction: TX ${n.index} confirmed successful`),R&&r&&(r.steps[n.index].status="success",r.steps[n.index].tx=f.digest||"",r.steps[n.index].error="",q(r))):(W.push({...n,error:((te=(J=f==null?void 0:f.effects)==null?void 0:J.status)==null?void 0:te.error)||"Transaction failed after status check"}),console.log(`useTransaction: TX ${n.index} confirmed failed:`,(ce=(K=f==null?void 0:f.effects)==null?void 0:K.status)==null?void 0:ce.error),R&&r&&(r.steps[n.index].status="rejected",r.steps[n.index].tx=f.digest||"",r.steps[n.index].error=le((F=(C=f==null?void 0:f.effects)==null?void 0:C.status)==null?void 0:F.error),q(r)))}catch(u){W.push({...n,error:(u==null?void 0:u.message)||String(u)||"Status check failed"}),console.error(`useTransaction: Status check failed for TX ${n.index}:`,u),R&&r&&(r.steps[n.index].status="rejected",r.steps[n.index].tx=n.digest||"",r.steps[n.index].error=le(u),q(r))}const ue=S.length,he=x.length;if(console.log("useTransaction: Final statistics:",{total:he,successful:S,failed:W}),ue===he||ue>0){const n=W.length>0;let u=S.length>0?S[0].startExecuteTime:0,f=S.length>0?(U=S[0].response)==null?void 0:U.timestampMs:0;if(u&&f){const ne=new Date().getTime(),ve=(f&&Number(f)>u?Math.min(ne,Number(f)):ne)-u;ve<1e3&&(o.executeTime=ve)}const se=S[0].response,Ne=He(se,c==null?void 0:c.address,!1);if(o.getShowInfo){const ne=o.getShowInfo(n?"rejected":"success",Ne,se,{successResults:S,failedResults:W});o.getShowInfo=Ge=>ne}if(N?R&&r?(r.status="success",q(r),H(!0)):n?v(o):k(o):Y(),o.isSwapWidget||(o.transactionId=void 0,w(o)),p)try{Pe(p.action,G||h,se.digest)}catch(ne){console.error("useTransaction: Shio tracking failed:",ne)}return Z&&M({...P,useMev:h,useFastMode:G},"",se.digest),console.log("useTransaction: Returning success results:",{successCount:S.length,failedCount:W.length}),ue===he&&ue===1&&(ee=((Q=S[0])==null?void 0:Q.digest)||((je=S[0].response)==null?void 0:je.digest)||""),{successResults:S,failedResults:W}}else{const n=W[0];console.log("useTransaction: All transactions failed, last error:",W);const u=ge(o,n.error,!r);T=u==="Transaction failed"?String(n.error):u,R&&r&&(r.status="failed",q(r),H(!0)),Z&&M({...P,useMev:h,useFastMode:G},u,n==null?void 0:n.digest)}}catch(D){console.error("useTransaction: Batch transaction execution trackData:",I),y&&b(y);const x=ge(o,D);if(T=x==="Transaction failed"?String(D):x,Z)M({...P,useMev:h,useFastMode:G},x,"");else if(I&&(I==null?void 0:I.actionType)!=="dlmm")V({params:{...I},account:c==null?void 0:c.address,error:String(D)});else if(p){const B=JSON.stringify(p.txbParams);V({paramsJson:B,account:c==null?void 0:c.address,txAction:p.action,error:x})}}finally{if((I==null?void 0:I.actionType)==="dlmm"&&!(T!=null&&T.includes("reject")&&(T!=null&&T.includes("user")||T!=null&&T.includes("User")))){const{actionType:D,...x}=I,B={...x,walletAddress:c==null?void 0:c.address,walletName:ie==null?void 0:ie.name};T?(B.error=T,B.isError=!0):B.isError=!1,ee&&(B.txHash=ee),z(B)}}},ge=(d,o,m=!0)=>{const h=le(o);if(console.error("useTransaction: ❌ Error details:",{error:o,errorString:h}),d.getShowInfo){const A=d.getShowInfo("rejected");d.getShowInfo=N=>(A.toastDescriptionContent=h,A.modalDescriptionText=h,A),m&&v(d),d.isSwapWidget||l(d)}else d.getShowInfo=A=>{const N={};return N.toastDescriptionContent=h,N.modalDescriptionText=h,N},m&&v(d),d.isSwapWidget||l(d);return console.log("useTransaction: Error handling completed"),h};return{signAndExecuteTransaction:$e,batchSignAndExecuteTransaction:Ie,transactionSuccess:k,getTransactionStatus:fe,transactionConfirmation:g,transactionRejected:v,handleError:ge}}export{Tt as a,Xt as u};
