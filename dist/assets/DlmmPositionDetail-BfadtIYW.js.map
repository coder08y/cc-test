{"version":3,"file":"DlmmPositionDetail-BfadtIYW.js","sources":["../../src/components/chart/dlmmChart/Legend.tsx","../../src/hooks/dlmm-position/useDlmmPosChart.ts","../../src/components/position/dlmm/chart/DlmmPosChart.tsx","../../src/components/position/dlmm/details/DlmmLiquidityDistribution.tsx","../../src/hooks/dlmm-position/useDlmmPosAdd.ts","../../src/hooks/dlmm-position/useDlmmPosHelper.ts","../../src/hooks/dlmm-position/useGetDlmmCurrentPos.ts","../../src/hooks/dlmm-position/useDlmmPosAddPage.ts","../../src/components/position/dlmm/details/DlmmPositionSelectRange.tsx","../../src/components/position/dlmm/details/DlmmPositionAdd.tsx","../../src/hooks/dlmm-position/useDlmmPosRemovePage.ts","../../src/components/position/dlmm/details/DlmmPositionRemove.tsx","../../src/components/position/dlmm/details/DlmmPositionAction.tsx","../../src/components/position/dlmm/details/DlmmPositionLiquidity.tsx","../../src/hooks/dlmm-position/useDlmmPosClaim.ts","../../src/hooks/position/useGetDlmmPositionHistoricalProfit.ts","../../src/components/position/dlmm/details/DlmmPositionPendingYield.tsx","../../src/pages/DlmmPositionDetail.tsx"],"sourcesContent":["import { Box, HStack, Text } from '@chakra-ui/react'\n\nconst LeftColor = '#00D8B6'\nconst RightColor = '#4A9AEF'\n\nexport default function DlmmLegend({ baseSymbol, quoteSymbol }: { baseSymbol: string; quoteSymbol: string }) {\n  return (\n    <HStack gap=\"12px\">\n      <LegendBlock symbol={baseSymbol} color={RightColor} />\n      <LegendBlock symbol={quoteSymbol} color={LeftColor} />\n    </HStack>\n  )\n}\n\nfunction LegendBlock({ symbol, color }: { symbol: string; color: string }) {\n  return (\n    <HStack gap=\"8px\">\n      <Box w=\"8px\" h=\"8px\" bg={color} borderRadius=\"2px\" />\n      <Text fontSize=\"12px\">{symbol}</Text>\n    </HStack>\n  )\n}\n","import useDlmmGetAllBinWithPool from '@/hooks/dlmm/useDlmmGetAllBinWithPool'\nimport useDlmmPositionStore from '@/store/dlmm-position'\nimport useDlmmPosDetailStore from '@/store/dlmm-position/detail'\nimport { ChartBinItem, CurrentBinChartData, MaxBinRangeChartData } from '@/types/dlmm'\nimport { formatPriceFromBin, getRelatedDisplayPrice } from '@/utils/dlmm'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport { useSdkStore } from '@cetus/sdk-factory'\nimport { Token } from '@cetus/types'\nimport { bnToAmount, d, isEmptyObj, removeComma } from '@cetus/utils'\nimport { BinAmount, BinUtils } from '@cetusprotocol/dlmm-sdk'\nimport { useDeepCompareEffect } from 'ahooks'\nimport { useEffect, useMemo, useState } from 'react'\n\nexport default function useDlmmPosChart(isReverse: boolean, direct = true, poolAllBinObjCallback: (binList: BinAmount[]) => void) {\n  const { dlmmCurrentPosBaseInfo, dlmmPosPoolsOriginalData, dlmmPosLiquidityData, posChartRefreshTrigger } = useDlmmPositionStore()\n  const [originPosBins, setOriginPosBins] = useState<ChartBinItem[]>([])\n  const { isInitialized } = useSdkStore()\n  const { binInfos, currentPosDetailTab, setMinPriceData, setMaxPriceData, setShowPositionSelectRange } = useDlmmPosDetailStore()\n\n  const [currentLiquidityBins, setCurrentLiquidityBins] = useState<CurrentBinChartData>()\n  const [maxBinRangeData, setMaxBinRangeData] = useState<MaxBinRangeChartData>()\n  const [maxBinLoading, setMaxBinLoading] = useState<boolean>(false)\n  const { getBinsInfoByPool } = useDlmmGetAllBinWithPool()\n  const [poolAllBinObj, setPoolAllBinObj] = useState<Record<string, ChartBinItem>>({})\n\n  const { getTokenPrice } = useTokenPrice()\n\n  const tokenAPriceInfo = getTokenPrice(dlmmCurrentPosBaseInfo?.tokenA?.coin_type)\n  const tokenBPriceInfo = getTokenPrice(dlmmCurrentPosBaseInfo?.tokenB?.coin_type)\n\n  const currentPosPool = useMemo(() => {\n    return dlmmPosPoolsOriginalData?.[dlmmCurrentPosBaseInfo?.dlmmPool]\n  }, [dlmmCurrentPosBaseInfo?.dlmmPool, dlmmPosPoolsOriginalData])\n\n  useDeepCompareEffect(() => {\n    if (dlmmCurrentPosBaseInfo?.id && dlmmPosLiquidityData?.[dlmmCurrentPosBaseInfo?.id]) {\n      const liquidityData = dlmmPosLiquidityData?.[dlmmCurrentPosBaseInfo?.id]?.binInfos\n      const list = liquidityData?.bins || []\n      setOriginPosBins(list)\n    }\n  }, [dlmmCurrentPosBaseInfo?.id, dlmmPosLiquidityData])\n\n  const getCombineBins = (originBins: BinAmount[], newBins: BinAmount[], baseToken: Token, quoteToken: Token, currentTab: string) => {\n    if (!originBins || originBins?.length === 0 || !currentPosPool || !baseToken || !quoteToken) return []\n\n    const isIncreaseTab = currentTab === 'increase'\n    const newBinsList = newBins || []\n    const baseDecimal = baseToken?.decimals\n    const quoteDecimal = quoteToken?.decimals\n\n    const newBinsObj = Object.fromEntries(\n      newBinsList?.map(item => [\n        String(item.bin_id),\n        {\n          ...item,\n          isIncrease: isIncreaseTab,\n          baseAmount: bnToAmount(item?.amount_a, baseDecimal),\n          quoteAmount: bnToAmount(item?.amount_b, quoteDecimal)\n        }\n      ])\n    )\n\n    const noRadius = originBins?.length > 150\n\n    let max = 0\n    const binStep = currentPosPool?.bin_step\n\n    const createBinData = (item: BinAmount, newBinInfo: BinAmount | undefined, isIncreaseTab: boolean) => {\n      const liquidity = d(item?.liquidity).div(Math.pow(10, 10)).toNumber()\n      const newBinLiquidity = newBinInfo?.liquidity ? d(newBinInfo.liquidity).div(Math.pow(10, 10)).toNumber() : 0\n      const totalLiquidity = isIncreaseTab ? d(liquidity).add(newBinLiquidity).toNumber() : liquidity\n\n      max = Math.max(max, totalLiquidity)\n\n      const price = removeComma(formatPriceFromBin(item?.bin_id, binStep, baseToken?.decimals, quoteToken?.decimals))\n      const reversePrice = d(1).div(price).toString()\n      const baseAmount = bnToAmount(item?.amount_a, baseDecimal)\n      const quoteAmount = bnToAmount(item?.amount_b, quoteDecimal)\n\n      let quantityA, quantityB, newBinQuantityA, newBinQuantityB\n      if (item?.bin_id === activeBin) {\n        const total = d(baseAmount).mul(price).add(quoteAmount)\n        quantityA = d(baseAmount).mul(price).div(total).toString()\n        quantityB = d(quoteAmount).div(total).toString()\n\n        const newBinBaseAmount = bnToAmount(newBinInfo?.amount_a, baseDecimal)\n        const newBinQuoteAmount = bnToAmount(newBinInfo?.amount_b, quoteDecimal)\n        const newBinTotal = d(newBinBaseAmount).mul(price).add(newBinQuoteAmount)\n\n        newBinQuantityA = d(newBinBaseAmount).mul(price).div(newBinTotal).toString()\n        newBinQuantityB = d(newBinQuoteAmount).div(newBinTotal).toString()\n      }\n\n      const priceDisplay = isReverse ? reversePrice : price\n\n      return {\n        ...item,\n        liquidity,\n        totalLiquidity,\n        totalAmountA: isIncreaseTab && newBinInfo?.amount_a ? d(item.amount_a).add(newBinInfo.amount_a).toString() : item.amount_a,\n        totalAmountB: isIncreaseTab && newBinInfo?.amount_b ? d(item.amount_b).add(newBinInfo.amount_b).toString() : item.amount_b,\n        newBins: {\n          ...newBinInfo,\n          liquidity: newBinLiquidity,\n          ...(item?.bin_id === activeBin && {\n            quantityA: newBinQuantityA,\n            quantityB: newBinQuantityB\n          })\n        },\n        price: direct ? priceDisplay : d(1).div(priceDisplay).toString(),\n        type: currentTab,\n        baseSymbol: baseToken?.symbol,\n        quoteSymbol: quoteToken?.symbol,\n        baseLogo: baseToken?.logo_url,\n        quoteLogo: quoteToken?.logo_url,\n        baseAmount,\n        quoteAmount,\n        quantityA,\n        quantityB,\n        noRadius\n      }\n    }\n\n    const newList = originBins.map(item => createBinData(item, newBinsObj?.[String(item?.bin_id)], isIncreaseTab))\n    // console.log('🚀 ~ getCombineBins ~ newList:', newList)\n\n    if (activeBin !== undefined && binStep !== undefined && newList?.[0]?.bin_id > activeBin) {\n      const price = removeComma(formatPriceFromBin(activeBin, binStep, baseDecimal, quoteDecimal))\n      const reversePrice = d(1).div(price).toString()\n      const priceDisplay = isReverse ? reversePrice : price\n      newList.unshift({\n        // ...sortList?.[0],\n        bin_id: activeBin,\n        price: direct || direct === undefined ? priceDisplay : d(1).div(priceDisplay).toString(),\n        liquidity: undefined\n      })\n    }\n\n    if (activeBin !== undefined && binStep !== undefined && newList?.[newList?.length - 1]?.bin_id < activeBin) {\n      const price = removeComma(formatPriceFromBin(activeBin, binStep, baseDecimal, quoteDecimal))\n      const reversePrice = d(1).div(price).toString()\n      const priceDisplay = isReverse ? reversePrice : price\n      newList.push({\n        // ...sortList?.[sortList?.length - 1],\n        bin_id: activeBin,\n        price: direct || direct === undefined ? priceDisplay : d(1).div(priceDisplay).toString(),\n        liquidity: undefined\n      })\n    }\n\n    const sortList = newList.sort((a, b) => Number(a?.price) - Number(b?.price)) as any\n\n    setCurrentLiquidityBins({\n      list: sortList,\n      max\n    })\n  }\n\n  useDeepCompareEffect(() => {\n    if (originPosBins?.length > 0 && dlmmCurrentPosBaseInfo?.id) {\n      getCombineBins(originPosBins, binInfos?.bins, dlmmCurrentPosBaseInfo?.tokenA, dlmmCurrentPosBaseInfo?.tokenB, currentPosDetailTab)\n    }\n  }, [originPosBins, binInfos?.bins, dlmmCurrentPosBaseInfo, currentPosDetailTab, direct, isReverse, currentPosPool?.active_id])\n\n  useEffect(() => {\n    if (isInitialized && currentPosPool?.bin_manager?.bin_manager_handle && currentPosPool?.id === dlmmCurrentPosBaseInfo?.dlmmPool) {\n      setMaxBinLoading(true)\n      getBinsInfoByPool(\n        {\n          pool_id: currentPosPool!.id,\n          coin_type_a: currentPosPool!.coin_type_a,\n          coin_type_b: currentPosPool!.coin_type_b\n        },\n        dlmmCurrentPosBaseInfo?.tokenA?.decimals,\n        dlmmCurrentPosBaseInfo?.tokenB?.decimals\n      )\n        .then(res => {\n          setPoolAllBinObj(res.allBinObj)\n          poolAllBinObjCallback(res.binList)\n        })\n        .finally(() => {\n          setMaxBinLoading(false)\n        })\n    }\n  }, [currentPosPool?.id, dlmmCurrentPosBaseInfo?.dlmmPool, isInitialized, posChartRefreshTrigger])\n\n  useDeepCompareEffect(() => {\n    if (\n      currentPosPool?.active_id !== undefined &&\n      currentPosPool?.id &&\n      currentPosPool?.id === dlmmCurrentPosBaseInfo?.dlmmPool &&\n      !isEmptyObj(poolAllBinObj)\n    ) {\n      const list: any = []\n      const lower = dlmmCurrentPosBaseInfo?.lowerBinId\n      console.log('0829 pos test###🚀 ~ useDlmmPosChart ~ lower:', lower)\n      const upper = dlmmCurrentPosBaseInfo?.upperBinId\n      console.log('0829 pos test###🚀 ~ useDlmmPosChart ~ upper:', upper)\n      const binStep = currentPosPool?.binStep\n      const baseToken = dlmmCurrentPosBaseInfo?.tokenA\n      const quoteToken = dlmmCurrentPosBaseInfo?.tokenB\n\n      let max = 0\n      for (let i = lower; i <= upper; i += 1) {\n        const item = poolAllBinObj?.[String(i)]\n        const price = removeComma(formatPriceFromBin(i, binStep, baseToken?.decimals, quoteToken?.decimals))\n        const priceDisplay = isReverse ? d(1).div(price).toString() : price\n        const liquidity = d(item?.liquidity || '0')\n          .div(Math.pow(10, 10))\n          .toNumber()\n        list.push({\n          amount_a: item?.amount_a || '0',\n          amount_b: item?.amount_b || '0',\n          bin_id: i,\n          liquidity,\n          price: direct ? priceDisplay : d(1).div(priceDisplay).toString(),\n          priceOrigin: direct ? Number(priceDisplay) : Number(d(1).div(priceDisplay).toString()),\n          price_per_lamport: item?.price_per_lamport || '',\n          baseSymbol: baseToken?.symbol,\n          quoteSymbol: quoteToken?.symbol,\n          baseAmount: bnToAmount(item?.amount_a, baseToken?.decimals),\n          quoteAmount: bnToAmount(item?.amount_b, quoteToken?.decimals),\n          baseLogo: baseToken?.logo_url,\n          quoteLogo: quoteToken?.logo_url\n        })\n        max = Math.max(max, liquidity)\n      }\n\n      // console.log('0711useDlmmPosChart###🚀 ~ useDeepCompareEffect ~ list:', list)\n      if (list && list?.length === 1) {\n        setShowPositionSelectRange(false)\n      }\n\n      const sortList = list.sort((a: any, b: any) => Number(a?.priceOrigin) - Number(b?.priceOrigin)) as any\n\n      setMaxBinRangeData({\n        list: sortList,\n        max\n      })\n    }\n  }, [currentPosPool?.active_id, dlmmCurrentPosBaseInfo?.dlmmPool, poolAllBinObj, direct, isReverse])\n\n  const handleRangeChange = (minBin: number, maxBin: number) => {\n    const binStep = currentPosPool?.bin_step\n    const baseDecimal = dlmmCurrentPosBaseInfo?.tokenA?.decimals\n    const quoteDecimal = dlmmCurrentPosBaseInfo?.tokenB?.decimals\n    if (binStep !== undefined && baseDecimal !== undefined && quoteDecimal !== undefined && minBin !== undefined && maxBin !== undefined) {\n      const minPrice = BinUtils.getPriceFromBinId(minBin, binStep, baseDecimal, quoteDecimal)\n      const [displayMinPrice, reverseMinPrice, displayReverseMinPrice] = getRelatedDisplayPrice(minPrice)\n      const maxPrice = BinUtils.getPriceFromBinId(maxBin, binStep, baseDecimal, quoteDecimal)\n      const [displayMaxPrice, reverseMaxPrice, displayReverseMaxPrice] = getRelatedDisplayPrice(maxPrice)\n\n      const minPriceData = {\n        binId: minBin,\n        price: minPrice,\n        displayPrice: displayMinPrice,\n        reversePrice: reverseMinPrice,\n        displayReversePrice: displayReverseMinPrice,\n        type: 'lower'\n      }\n\n      const maxPriceData = {\n        binId: maxBin,\n        price: maxPrice,\n        displayPrice: displayMaxPrice,\n        reversePrice: reverseMaxPrice,\n        displayReversePrice: displayReverseMaxPrice\n      }\n\n      setMinPriceData(minPriceData)\n      setMaxPriceData(maxPriceData)\n    }\n  }\n\n  const activeBin = useMemo(() => {\n    return currentPosPool?.active_id\n  }, [currentPosPool?.active_id])\n\n  return {\n    currentLiquidityBins,\n    activeBin,\n    maxBinRangeData,\n    handleRangeChange,\n    maxBinLoading,\n    tokenAPrice: tokenAPriceInfo?.price,\n    tokenBPrice: tokenBPriceInfo?.price\n  }\n}\n","import BinRangeSelectChart from '@/components/chart/dlmmChart/BinRangeSelectChart'\nimport CurrentLiquidityChart from '@/components/chart/dlmmChart/CurrentLiquidityChart'\nimport useDlmmPosChart from '@/hooks/dlmm-position/useDlmmPosChart'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { BinAmount } from '@cetusprotocol/dlmm-sdk'\nimport { VStack } from '@chakra-ui/react'\nimport { useMemo } from 'react'\n\nexport default function DlmmPosChart({\n  direct,\n  isReverse,\n  poolAllBinObjCallback\n}: {\n  direct: boolean\n  isReverse: boolean\n  poolAllBinObjCallback: (binList: BinAmount[]) => void\n}) {\n  const { currentLiquidityBins, activeBin, maxBinRangeData, handleRangeChange, maxBinLoading, tokenAPrice, tokenBPrice } = useDlmmPosChart(\n    isReverse,\n    direct,\n    poolAllBinObjCallback\n  )\n  const { windowWidth } = useWindowWidth()\n  const width = useMemo(() => {\n    if (windowWidth < 810) {\n      return windowWidth - 44\n    }\n    return 652\n  }, [windowWidth])\n\n  return (\n    // <VStack gap=\"10px\" pb={maxBinRangeData ? '0px' : '20px'}>\n    <VStack gap=\"8px\" h=\"260px\">\n      {/* {activeBin !== undefined ? ( */}\n      <CurrentLiquidityChart\n        width={width}\n        activeBin={Number(activeBin)}\n        data={currentLiquidityBins}\n        height={162}\n        fromPosition={true}\n        direct={direct}\n        isReverse={isReverse}\n        tokenAPrice={tokenAPrice}\n        tokenBPrice={tokenBPrice}\n      />\n      {/* ) : (\n        <Center h=\"160px\">\n          <Spinner size=\"sm\" color=\"text_caption\" />\n        </Center>\n      )} */}\n      {/* {maxBinRangeData && maxBinRangeData?.list?.length > 0 ? ( */}\n      <BinRangeSelectChart\n        activeBin={Number(activeBin)}\n        data={maxBinRangeData}\n        width={width}\n        height={60}\n        isSimple={true}\n        onChangeRange={handleRangeChange}\n        type=\"row\"\n        isReverse={isReverse}\n        currentLiquidityBins={currentLiquidityBins}\n        maxBinLoading={maxBinLoading}\n      />\n      {/* ) : (\n        <Center h=\"90px\">\n          <Spinner size=\"sm\" color=\"text_caption\" />\n        </Center>\n      )} */}\n    </VStack>\n  )\n}\n","import DlmmLegend from '@/components/chart/dlmmChart/Legend'\nimport FunnelPrice from '@/components/common/FunnelPrice'\nimport useDlmmLiquidityStore from '@/store/dlmm'\nimport useDlmmPositionStore from '@/store/dlmm-position'\nimport useDlmmPosDetailStore from '@/store/dlmm-position/detail'\nimport { CetusTooltip } from '@cetus/design'\nimport SelectTab from '@cetus/design/src/components/common/SelectTab'\nimport { Icon } from '@cetus/ui-kit'\nimport { formatSmallPrice, isAvailableObject, removeComma, textEllipses } from '@cetus/utils'\nimport { BinAmount } from '@cetusprotocol/dlmm-sdk'\nimport { HStack, Skeleton, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useMemo, useState } from 'react'\nimport DlmmPosChart from '../chart/DlmmPosChart'\n\nexport default function DlmmLiquidityDistribution({ positionApr, isAprLoading }: { positionApr: string; isAprLoading: boolean }) {\n  const { dlmmCurrentPosBaseInfo, dlmmPosPoolsRelatedData, dlmmPosLiquidityData } = useDlmmPositionStore()\n  const { setDlmmPosDetailDirect, dlmmPosDetailDirect } = useDlmmPosDetailStore()\n  const { dlmmApiPoolInfo } = useDlmmLiquidityStore()\n  const [poolBinList, setPoolBinList] = useState<BinAmount[]>([])\n  const [currentType, setCurrentType] = useState<'24H' | '7D' | '30D'>('30D')\n\n  const displayQuoteToken = useMemo(() => {\n    return dlmmPosDetailDirect ? dlmmCurrentPosBaseInfo?.displayTokenB : dlmmCurrentPosBaseInfo?.displayTokenA\n  }, [dlmmCurrentPosBaseInfo, dlmmPosDetailDirect])\n\n  const displayBaseToken = useMemo(() => {\n    return dlmmPosDetailDirect ? dlmmCurrentPosBaseInfo?.displayTokenA : dlmmCurrentPosBaseInfo?.displayTokenB\n  }, [dlmmCurrentPosBaseInfo, dlmmPosDetailDirect])\n\n  const currentPosRelatedData = useMemo(() => {\n    return dlmmPosPoolsRelatedData?.[dlmmCurrentPosBaseInfo?.id]\n  }, [dlmmCurrentPosBaseInfo?.id, dlmmPosPoolsRelatedData])\n\n  const currentPosLiquidityData = useMemo(() => {\n    return dlmmPosLiquidityData?.[dlmmCurrentPosBaseInfo?.id]\n  }, [dlmmCurrentPosBaseInfo?.id, dlmmPosLiquidityData])\n\n  const [currentRangeTab, setCurrentRangeTab] = useState<string>()\n\n  useEffect(() => {\n    if (displayBaseToken) {\n      const coinType = displayBaseToken?.coin_type\n      setCurrentRangeTab(coinType)\n    }\n  }, [displayBaseToken?.coin_type])\n\n  const rangeTabList = useMemo(() => {\n    if (isAvailableObject(dlmmCurrentPosBaseInfo?.displayTokenA) && isAvailableObject(dlmmCurrentPosBaseInfo?.displayTokenB)) {\n      return [dlmmCurrentPosBaseInfo.displayTokenA, dlmmCurrentPosBaseInfo.displayTokenB]?.filter(Boolean).map(item => ({\n        label: item?.symbol,\n        key: item?.coin_type,\n        isToken: true,\n        imgInfo: {\n          src: item?.logo_url,\n          w: '16px',\n          h: '16px',\n          coinType: item ? item?.coin_type : '',\n          showTagWidth: '8px',\n          showTagHeight: '8px'\n        }\n      }))\n    } else {\n      return []\n    }\n  }, [dlmmCurrentPosBaseInfo?.displayTokenA, dlmmCurrentPosBaseInfo?.displayTokenB])\n\n  const currentPrice = useMemo(() => {\n    return dlmmPosDetailDirect ? currentPosRelatedData?.currentPrice : currentPosRelatedData?.currentPriceReverse\n  }, [currentPosRelatedData, dlmmPosDetailDirect])\n\n  const minPrice = useMemo(() => {\n    return dlmmPosDetailDirect ? currentPosRelatedData?.minPrice : currentPosRelatedData?.minPriceResever\n  }, [currentPosRelatedData, dlmmPosDetailDirect])\n\n  const maxPrice = useMemo(() => {\n    return dlmmPosDetailDirect ? currentPosRelatedData?.maxPrice : currentPosRelatedData?.maxPriceResever\n  }, [currentPosRelatedData, dlmmPosDetailDirect])\n\n  const shouldLineBreak = useMemo(() => {\n    return [currentPrice, minPrice, maxPrice].some(item => item?.length > 10)\n  }, [currentPrice, minPrice, maxPrice])\n\n  // const { estimateApr, loading: aprLoading } = useDlmmApr(\n  //   poolBinList,\n  //   currentPosLiquidityData?.binInfos?.bins || [],\n  //   currentType,\n  //   currentPosRelatedData?.currentTickIndex,\n  //   dlmmApiPoolInfo\n  // )\n\n  const poolAllBinObjCallback = (binList: BinAmount[]) => {\n    setPoolBinList(binList)\n  }\n\n  return (\n    <VStack width=\"100%\" bg=\"bg_secondary\" borderRadius=\"16px\" p={{ base: '16px 8px ', lg: '16px' }} gap=\"16px\">\n      <HStack width=\"100%\" justifyContent=\"space-between\" align={{ base: 'fle-start', lg: 'center' }} flexDirection={{ base: 'column', lg: 'row' }}>\n        <Text color=\"text_caption\" fontSize=\"16px\" mb={{ base: '8px', lg: '0' }}>\n          Liquidity Distribution\n        </Text>\n        <HStack gap=\"20px\" flexDirection={{ base: 'column-reverse', lg: 'row' }} align={{ base: 'fle-start', lg: 'center' }}>\n          <DlmmLegend\n            baseSymbol={textEllipses(dlmmCurrentPosBaseInfo?.displayTokenA?.symbol, 8)}\n            quoteSymbol={textEllipses(dlmmCurrentPosBaseInfo?.displayTokenB?.symbol || '', 8)}\n          />\n          {!rangeTabList || !rangeTabList.length ? (\n            <Skeleton h=\"32px\" borderRadius=\"8px\" w=\"180px\" />\n          ) : (\n            <SelectTab<any, any>\n              type=\"outlineTab\"\n              tabList={rangeTabList}\n              currentTab={currentRangeTab}\n              isActive={(current, tab) => current === tab.key}\n              handleChangeTab={() => setDlmmPosDetailDirect(!dlmmPosDetailDirect)}\n              wrapStyle={{\n                h: '32px',\n                p: '3px',\n                border: '1px solid',\n                borderColor: 'border',\n                borderRadius: '8px',\n                gap: '4px',\n                zIndex: '99'\n              }}\n              itemStyle={{\n                flex: '1',\n                h: '24px',\n                p: '4px 12px',\n                borderRadius: '4px',\n                gap: '4px'\n              }}\n            />\n          )}\n        </HStack>\n      </HStack>\n      <HStack w=\"100%\" justify={{ base: 'flex-start', lg: 'center' }}>\n        <FunnelPrice\n          price={currentPrice}\n          perText={`${textEllipses(displayQuoteToken?.symbol, 8)} per ${textEllipses(displayBaseToken?.symbol, 8)} `}\n          showIcon={false}\n        />\n      </HStack>\n      <DlmmPosChart direct={dlmmPosDetailDirect} isReverse={dlmmCurrentPosBaseInfo?.isReverse} poolAllBinObjCallback={poolAllBinObjCallback} />\n      <HStack w=\"100%\" justify=\"space-between\" flexDirection={{ base: 'column', lg: 'row' }}>\n        <VStack\n          w={{ base: '100%', lg: '50%' }}\n          flexDirection={{ base: 'row', lg: 'column' }}\n          justify={{ base: 'space-between', lg: 'center' }}\n          alignItems={{ base: 'center', lg: 'flex-start' }}\n          flex=\"1\"\n          p=\"12px\"\n          bg=\"card_bg\"\n          borderRadius=\"8px\"\n        >\n          <Text fontSize=\"14px\" h=\"20px\" lineHeight=\"20px\" whiteSpace=\"nowrap\">\n            Price Range\n          </Text>\n          <Skeleton h=\"14px\" isLoaded={minPrice !== undefined && maxPrice !== undefined}>\n            <HStack flexDir={shouldLineBreak ? 'column' : 'row'} alignItems={shouldLineBreak ? 'flex-start' : 'center'}>\n              <Text fontSize=\"14px\" color=\"text_caption\">\n                {minPrice == maxPrice\n                  ? formatSmallPrice(removeComma(minPrice))\n                  : `${formatSmallPrice(removeComma(minPrice))} - ${formatSmallPrice(removeComma(maxPrice))}`}\n              </Text>\n              {/* <Text>\n              {displayQuoteToken?.symbol} per {displayBaseToken?.symbol}\n            </Text> */}\n            </HStack>\n          </Skeleton>\n        </VStack>\n        <VStack\n          w={{ base: '100%', lg: '50%' }}\n          flexDirection={{ base: 'row', lg: 'column' }}\n          justify={{ base: 'space-between', lg: 'center' }}\n          alignItems={{ base: 'center', lg: 'flex-start' }}\n          flex=\"1\"\n          p=\"12px\"\n          bg=\"card_bg\"\n          borderRadius=\"8px\"\n        >\n          <HStack w={{ base: 'unset', lg: '100%' }} justify=\"space-between\">\n            <CetusTooltip\n              tooltip={\n                <Text fontSize=\"12px\" lineHeight=\"20px\">\n                  APR based on the daily yield accrued by this position. Past performance is not indicative of future results. Calculations are an\n                  estimate and only for reference.\n                </Text>\n              }\n            >\n              <HStack gap=\"4px\">\n                <Text fontSize=\"14px\" h=\"20px\" lineHeight=\"20px\">\n                  APR\n                </Text>\n                <Icon xlinkHref=\"#icon-icon_tips\" fontSize=\"20px\" />\n              </HStack>\n            </CetusTooltip>\n            {/* <HStack pos=\"relative\" h=\"100%\" alignItems=\"start\">\n              <DlmmAprSelect currentType={currentType} setCurrentType={setCurrentType} />\n            </HStack> */}\n          </HStack>\n          {/* <EstimatedApr\n            loading={aprLoading}\n            estimateApr={estimateApr?.fee_apr}\n            haveMining={(estimateApr?.miningAprList?.length || 0) > 0}\n            miningAprList={estimateApr?.miningAprList}\n          /> */}\n          <Skeleton isLoaded={!!currentPosRelatedData} h=\"14px\">\n            <Text color=\"primary\">{positionApr ?? '--'}</Text>\n          </Skeleton>\n        </VStack>\n        {/* <HStack h=\"100%\" w=\"100%\" padding=\"8px 12px\" bg=\"card_bg\" borderRadius=\"8px\" justifyContent=\"space-between\">\n          <VStack align=\"flex-start\" gap=\"8px\" />\n\n          <HStack pos=\"relative\" h=\"100%\" pt=\"8px\" alignItems=\"start\" />\n        </HStack> */}\n      </HStack>\n    </VStack>\n  )\n}\n\n// const typeByList = [\n//   {\n//     label: '24H',\n//     value: '24H'\n//   },\n//   {\n//     label: '7D',\n//     value: '7D'\n//   },\n//   {\n//     label: '30D',\n//     value: '30D'\n//   }\n// ]\n\n// type DlmmAprSelectProps = {\n//   currentType: '24H' | '7D' | '30D'\n//   setCurrentType: (type: '24H' | '7D' | '30D') => void\n// }\n\n// function DlmmAprSelect({ currentType, setCurrentType }: DlmmAprSelectProps) {\n//   return (\n//     <Menu isLazy placement=\"bottom-end\">\n//       {({ isOpen, onClose }) => (\n//         <>\n//           <MenuButton cursor=\"pointer\" bg=\"none\">\n//             <HStack width=\"100%\" justifyContent=\"space-between\" gap=\"2px\">\n//               <Text color=\"text_caption\" fontSize=\"14px\">\n//                 {currentType}\n//               </Text>\n//               <Icon\n//                 transition=\"transform 0.5s\"\n//                 transform={isOpen ? 'rotate(180deg)' : 'rotate(0deg)'}\n//                 xlinkHref=\"#icon-icon_descending_nor\"\n//                 svgFill=\"text_caption\"\n//                 svgW=\"26px\"\n//                 svgH=\"26px\"\n//               />\n//             </HStack>\n//           </MenuButton>\n\n//           <MenuList bg=\"bg_secondary\" borderRadius=\"8px\" p=\"4px\" opacity=\"1\" overflow=\"hidden\" minW=\"56px\">\n//             <VStack w=\"100%\" gap=\"4px\">\n//               {typeByList.map(item => (\n//                 <MenuItem\n//                   key={item.value}\n//                   fontSize=\"12px\"\n//                   textAlign=\"center\"\n//                   borderRadius=\"4px\"\n//                   color={currentType === item.value ? 'primary' : '#909CA4'}\n//                   onClick={() => setCurrentType(item.value as '24H' | '7D' | '30D')}\n//                 >\n//                   {item.label}\n//                 </MenuItem>\n//               ))}\n//             </VStack>\n//           </MenuList>\n//         </>\n//       )}\n//     </Menu>\n//   )\n// }\n","import useGlobalStore from '@/store/common/global'\nimport { DlmmPosAddLiquidityParams, DlmmPreAddParams } from '@/types/dlmm'\nimport { getBatchBinInfo } from '@/utils/dlmm'\nimport { useSdk } from '@cetus/sdk-factory'\nimport { d } from '@cetusprotocol/common-sdk'\nimport { AddLiquidityOption, CalculateAddLiquidityAutoFillOption, CalculateAddLiquidityOption } from '@cetusprotocol/dlmm-sdk'\nimport { Transaction } from '@mysten/sui/transactions'\nimport useDlmmPosCollect from './useDlmmPosCollect'\nexport default function useDlmmPosAdd() {\n  const dlmmSdk = useSdk('dlmm')\n  const { liquiditySlippage } = useGlobalStore()\n  const { collectRewardAndFeePayload } = useDlmmPosCollect()\n  const dlmmPreAdd = async (params: DlmmPreAddParams) => {\n    const { activeId, binStep, lowerBinId, upperBinId, amount, fromToken, toToken, strategy, fixAmountA, isReverse, isAutoFill, otherAmount, pool } =\n      params\n    let amount_in_active_bin\n    if (pool) {\n      amount_in_active_bin = await dlmmSdk?.Position?.getActiveBinIfInRange(\n        pool?.bin_manager.bin_manager_handle,\n        lowerBinId,\n        upperBinId,\n        activeId,\n        binStep\n      )\n    }\n\n    //todo: 实际lock一边的时候不能按autofill预计算\n    const realAutoFill = isAutoFill && amount_in_active_bin\n    // console.log('🚀🚀🚀 ~ useDlmmPosAdd.ts:10 ~ dlmmPreAdd ~ params:', fixAmountA, params)\n    const calculateAddLiquidityInfoParams: CalculateAddLiquidityOption | CalculateAddLiquidityAutoFillOption = {\n      active_id: activeId,\n      bin_step: binStep,\n      lower_bin_id: lowerBinId,\n      upper_bin_id: upperBinId,\n      // amount_a_in_active_bin: amount_in_active_bin?.amount_a || '0',\n      // amount_b_in_active_bin: amount_in_active_bin?.amount_b || '0',\n      active_bin_of_pool: amount_in_active_bin,\n      pool_id: pool?.id,\n      strategy_type: strategy,\n      ...(realAutoFill\n        ? {\n            fix_amount_a: fixAmountA,\n            coin_amount: amount\n          }\n        : {\n            amount_a: fixAmountA ? amount : otherAmount,\n            amount_b: fixAmountA ? otherAmount : amount\n          })\n    }\n\n    console.log('🚀🚀🚀 ~ useDlmmPosAdd.ts:30 ~ dlmmPreAdd ~ calculateAddLiquidityInfoParams:', calculateAddLiquidityInfoParams)\n    const binInfos = await dlmmSdk?.Position.calculateAddLiquidityInfo(calculateAddLiquidityInfoParams)\n    console.log('🚀🚀🚀 ~ useDlmmPosAdd.ts:32 ~ dlmmPreAdd ~ binInfos:', binInfos, amount, otherAmount, fixAmountA, isReverse)\n\n    const coinAmountA = d(binInfos?.amount_a)\n      .div(10 ** (isReverse ? toToken?.decimals : fromToken?.decimals))\n      .toString()\n    const coinAmountB = d(binInfos?.amount_b)\n      .div(10 ** (isReverse ? fromToken?.decimals : toToken?.decimals))\n      .toString()\n\n    return {\n      displayCoinAmountA: isReverse ? coinAmountB : coinAmountA,\n      displayCoinAmountB: isReverse ? coinAmountA : coinAmountB,\n      coinAmountA,\n      coinAmountB,\n      binInfos\n    }\n  }\n  const getDlmmPosAddLiquidityPayload = (params: DlmmPosAddLiquidityParams, isAutoClaim: boolean) => {\n    const { dlmmPool, binInfos, coinTypeA, coinTypeB, positionId, activeId, collectFee, rewardCoins, strategy, binStep } = params\n    if (binInfos && binInfos.bins && binInfos.bins.length > 0) {\n      const validBinInfos = binInfos.bins.filter(bin => bin.amount_a !== '0' || bin.amount_b !== '0')\n      const payloads: Transaction[] = []\n      if (validBinInfos?.length > 1000) {\n        // 如果bins数量超过1000，分批处理\n        const batchSize = 1000\n        const totalBatches = Math.ceil(validBinInfos.length / batchSize)\n        for (let i = 0; i < totalBatches; i++) {\n          const batchBinInfo = getBatchBinInfo(validBinInfos, i, batchSize)\n\n          const dlmmPosAddLiquidityParams: AddLiquidityOption = {\n            position_id: positionId,\n            active_id: activeId,\n            reward_coins: [],\n            pool_id: dlmmPool,\n            bin_infos: batchBinInfo,\n            collect_fee: false,\n            coin_type_a: coinTypeA,\n            coin_type_b: coinTypeB,\n            strategy_type: strategy,\n            max_price_slippage: Number(liquiditySlippage),\n            use_bin_infos: false,\n            bin_step: binStep\n          }\n\n          const payload = dlmmSdk?.Position.addLiquidityPayload(dlmmPosAddLiquidityParams)\n          payloads.push(payload)\n          let claimTx = null\n          if (isAutoClaim && i === totalBatches - 1) {\n            dlmmPosAddLiquidityParams.collect_fee = false\n            dlmmPosAddLiquidityParams.reward_coins = rewardCoins\n            claimTx = collectRewardAndFeePayload(\n              [\n                {\n                  dlmmPool,\n                  positionId,\n                  rewardCoins,\n                  coinTypeA,\n                  coinTypeB\n                }\n              ],\n              payload\n            )\n          }\n        }\n      } else {\n        const dlmmPosAddLiquidityParams: AddLiquidityOption = {\n          position_id: positionId,\n          active_id: activeId,\n          reward_coins: isAutoClaim ? rewardCoins : [],\n          pool_id: dlmmPool,\n          bin_infos: binInfos,\n          collect_fee: isAutoClaim,\n          coin_type_a: coinTypeA,\n          coin_type_b: coinTypeB,\n          strategy_type: strategy,\n          max_price_slippage: Number(liquiditySlippage),\n          use_bin_infos: false,\n          bin_step: binStep\n        }\n        console.log('🚀🚀🚀 ~ useDlmmPosAdd.ts:66 ~ getDlmmPosAddLiquidityPayload ~ dlmmPosAddLiquidityParams:', dlmmPosAddLiquidityParams)\n        const payload = dlmmSdk?.Position.addLiquidityPayload(dlmmPosAddLiquidityParams)\n        console.log('🚀🚀🚀 ~ useDlmmPosAdd.ts:67 ~ getDlmmPosAddLiquidityPayload ~ payload:', payload)\n        payloads.push(payload)\n      }\n\n      return payloads\n    }\n  }\n\n  return { dlmmPreAdd, getDlmmPosAddLiquidityPayload }\n}\n","import { DlmmPoolData, DlmmPosBaseInfo } from '@/types/dlmm'\nimport { isAvailableObject } from '@cetus/utils'\n\nexport default function useDlmmPosHelper() {\n  // dlmm 区间与clmm不同\n  const getTokenALock = (currentPosBaseInfo: DlmmPosBaseInfo, curPosContractPoolInfo: DlmmPoolData) => {\n    if (isAvailableObject(currentPosBaseInfo) && isAvailableObject(curPosContractPoolInfo)) {\n      const { lowerBinId, upperBinId } = currentPosBaseInfo\n      console.log('🚀🚀🚀 ~ useDlmmPosHelper.ts:8 ~ getTokenALock ~ lowerBinId:', lowerBinId)\n      console.log('🚀🚀🚀 ~ useDlmmPosHelper.ts:9 ~ getTokenALock ~ upperBinId:', upperBinId)\n      const currentTickIndex = curPosContractPoolInfo?.active_id\n      console.log('🚀🚀🚀 ~ useDlmmPosHelper.ts:11 ~ getTokenALock ~ currentTickIndex:', lowerBinId, currentTickIndex, upperBinId)\n      if (currentTickIndex !== undefined && lowerBinId !== undefined && upperBinId !== undefined) {\n        if (currentTickIndex >= lowerBinId && currentTickIndex <= upperBinId) {\n          return false\n        } else if (currentTickIndex > upperBinId) {\n          return true\n        } else if (currentTickIndex < lowerBinId) {\n          return false\n        } else {\n          return true\n        }\n      }\n    }\n    return false\n  }\n\n  const getTokenBLock = (currentPosBaseInfo: DlmmPosBaseInfo, curPosContractPoolInfo: DlmmPoolData) => {\n    if (isAvailableObject(currentPosBaseInfo) && isAvailableObject(curPosContractPoolInfo)) {\n      const { lowerBinId, upperBinId } = currentPosBaseInfo\n      const currentTickIndex = curPosContractPoolInfo?.active_id\n      if (currentTickIndex !== undefined && lowerBinId !== undefined && upperBinId !== undefined) {\n        if (currentTickIndex >= lowerBinId && currentTickIndex <= upperBinId) {\n          return false\n        } else if (currentTickIndex > upperBinId) {\n          return false\n        } else if (currentTickIndex < lowerBinId) {\n          return true\n        } else {\n          return true\n        }\n      }\n    }\n    return false\n  }\n\n  return { getTokenALock, getTokenBLock }\n}\n","import useDlmmPositionStore from '@/store/dlmm-position'\nimport { DlmmPosBaseInfo } from '@/types/dlmm'\nimport { useSdk } from '@cetus/sdk-factory'\nimport usePositionList from '../position/usePositionList'\nimport useWrapPosData from '../position/useWrapPosData'\n\nexport default function useGetDlmmCurrentPos() {\n  const dlmmSdk = useSdk('dlmm')\n\n  const { dlmmPosBaseList, setCurrentPosBaseInfo, setDlmmCurrentPosBaseInfoLoading } = useDlmmPositionStore()\n  const { wrapDlmmPosBaseInfo } = useWrapPosData()\n  const { getPosDlmmRelatedData } = usePositionList()\n\n  const getDlmmCurrentPosBaseInfo = async (account: string, id: string, isForceRefresh: boolean = false) => {\n    console.log('🚀🚀🚀 ~ useGetDlmmCurrentPos.ts:15 ~ getDlmmCurrentPosBaseInfo ~ getDlmmCurrentPosBaseInfo:', getDlmmCurrentPosBaseInfo)\n    setDlmmCurrentPosBaseInfoLoading(true)\n\n    const posBaseInfoFrom = dlmmPosBaseList.find((item: DlmmPosBaseInfo) => item.id === id)\n    console.log('🚀🚀🚀 ~ useGetDlmmCurrentPos.ts:19 ~ getDlmmCurrentPosBaseInfo ~ posBaseInfoFrom:', posBaseInfoFrom)\n    let posInfo: DlmmPosBaseInfo | null = null\n    if (posBaseInfoFrom && !isForceRefresh) {\n      posInfo = posBaseInfoFrom\n    }\n\n    if (!posInfo || isForceRefresh) {\n      posInfo = await getDlmmCurrentPosByPosId(account, id)\n    }\n\n    console.log('getCurrentPosBaseInfo ~ posInfo:', dlmmPosBaseList, posInfo)\n\n    setCurrentPosBaseInfo(posInfo)\n\n    if (posInfo) {\n      getPosDlmmRelatedData([posInfo])\n    }\n    return posInfo\n  }\n\n  const getDlmmCurrentPosByPosId = async (account: string, id: string) => {\n    const ownerRes = await dlmmSdk!.FullClient.getOwnedObjectsByPage(account, {\n      options: { showType: true, showContent: true, showOwner: true },\n      filter: {\n        ObjectId: id\n      }\n    })\n\n    if (ownerRes && ownerRes.data.length > 0) {\n      console.log('🚀🚀🚀 ~ useGetDlmmCurrentPos.ts:45 ~ getDlmmCurrentPosByPosId ~ ownerRes:', ownerRes)\n      const posRes: DlmmPosBaseInfo = await wrapDlmmPosBaseInfo(ownerRes.data[0])\n      return posRes\n    }\n    return null\n  }\n\n  return {\n    getDlmmCurrentPosBaseInfo,\n    getDlmmCurrentPosByPosId\n  }\n}\n","import useGlobalStore from '@/store/common/global'\nimport useDlmmLiquidityStore from '@/store/dlmm'\nimport useDlmmPositionStore from '@/store/dlmm-position'\nimport useDlmmPosDetailStore from '@/store/dlmm-position/detail'\nimport { MsafeTransactionSubType } from '@/types'\nimport { formatDescription } from '@/utils'\nimport { useAccountBalance } from '@cetus/hooks'\nimport { useGetTokenBalance } from '@cetus/hooks/src/useTokenBalance'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport useTransactionModal from '@cetus/hooks/src/useTransactionModal'\nimport { useAccountStore } from '@cetus/stores'\nimport { BalanceChanges, CommonTypeInfo, TransactionStatusType } from '@cetus/types'\nimport { getBalanceChanges, isAvailableObject, textEllipses } from '@cetus/utils'\nimport { d, fromDecimalsAmount } from '@cetusprotocol/common-sdk'\nimport { BinLiquidityInfo } from '@cetusprotocol/dlmm-sdk'\nimport { useDebounceEffect, useDeepCompareEffect } from 'ahooks'\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport { v4 } from 'uuid'\nimport useTransaction from '../common/useTransaction'\nimport { PriceDataType } from '../create-pool/useCreateDLMMPool'\nimport useCreatePriceBin from '../dlmm/useCreatePriceBin'\nimport { useMinMaxPriceData } from '../dlmm/useDlmmHelper'\nimport useGetDlmmRelatedPools from '../dlmm/useGetDlmmRelatedPools'\nimport useDlmmPosAdd from './useDlmmPosAdd'\nimport useDlmmPosCollect from './useDlmmPosCollect'\nimport useDlmmPosHelper from './useDlmmPosHelper'\nimport useGetDlmmCurrentPos from './useGetDlmmCurrentPos'\n\nexport default function useDlmmPosAddPage() {\n  const { collectRewardAndFeePayload } = useDlmmPosCollect()\n  const { dlmmCurrentPosBaseInfo, dlmmPosLiquidityData, dlmmPosPoolsRelatedData, dlmmPosPoolsOriginalData } = useDlmmPositionStore()\n  const { setTokenAmountAfterA, setTokenAmountAfterB, minPriceData, maxPriceData, setMinPriceData, setMaxPriceData } = useDlmmPosDetailStore()\n  const { binInfos, setBinInfos, setPreCalcError, preCalcError } = useDlmmPosDetailStore()\n  const { getTokenAmountValue } = useTokenPrice()\n  const { dlmmPreAdd, getDlmmPosAddLiquidityPayload } = useDlmmPosAdd()\n  const { currentAccount } = useAccountStore()\n  const { getTokenALock, getTokenBLock } = useDlmmPosHelper()\n  const [disabledAutoFill, setDisabledAutoFill] = useState(false)\n  const [isSelectRange, setIsSelectRange] = useState(true)\n  const [isAddLoading, setIsAddLoading] = useState(false)\n  const { handleActionBinPrice, getNumBins } = useCreatePriceBin()\n  const { strategy, setStrategy, isAutoFill, setIsAutoFill } = useDlmmLiquidityStore()\n  const { dlmmPosDetailDirect, isAutoClaim } = useDlmmPosDetailStore()\n  const { transactionConfirmation } = useTransactionModal()\n\n  // 池子合约信息\n  const dlmmCurrentPosPoolsOriginalData = useMemo(() => {\n    return dlmmPosPoolsOriginalData[dlmmCurrentPosBaseInfo?.dlmmPool]\n  }, [dlmmCurrentPosBaseInfo?.id, dlmmPosPoolsOriginalData])\n\n  const [tokenAmountA, setTokenAmountA] = useState('')\n  const [tokenAmountB, setTokenAmountB] = useState('')\n  const [displayTokenALock, setDisplayTokenALock] = useState(false)\n  const [displayTokenBLock, setDisplayTokenBLock] = useState(false)\n\n  const [isFixedDisplayTokenA, setIsFixedDisplayTokenA] = useState(true)\n  const [dlmmPreAddLoading, setDlmmPreAddLoading] = useState(false)\n  const [uuid, setUuid] = useState<string>('')\n  const uuidRef = useRef<string>('')\n\n  useEffect(() => {\n    console.log('🚀 ~ usePosAddPage ~ uuid:', uuid)\n    uuidRef.current = uuid\n  }, [uuid])\n\n  // tokenA、B\n  const displayTokenA = useMemo(() => {\n    return dlmmCurrentPosBaseInfo?.displayTokenA\n  }, [dlmmCurrentPosBaseInfo])\n  const displayTokenB = useMemo(() => {\n    return dlmmCurrentPosBaseInfo?.displayTokenB\n  }, [dlmmCurrentPosBaseInfo])\n\n  const tokenA = useMemo(() => {\n    return dlmmCurrentPosBaseInfo?.tokenA\n  }, [dlmmCurrentPosBaseInfo])\n\n  const tokenB = useMemo(() => {\n    return dlmmCurrentPosBaseInfo?.tokenB\n  }, [dlmmCurrentPosBaseInfo])\n\n  const binStep = useMemo(() => {\n    return dlmmCurrentPosPoolsOriginalData?.binStep\n  }, [dlmmCurrentPosPoolsOriginalData])\n\n  const { buildPriceData } = useMinMaxPriceData(tokenA, tokenB, binStep)\n\n  // 余额\n  const { balanceInfo: tokenABalanceInfo } = useGetTokenBalance(displayTokenA)\n  const { balanceInfo: tokenBBalanceInfo } = useGetTokenBalance(displayTokenB)\n\n  // 价值\n  const tokenAmountValueA = getTokenAmountValue(displayTokenA?.coin_type, tokenAmountA)\n  const tokenAmountValueB = getTokenAmountValue(displayTokenB?.coin_type, tokenAmountB)\n\n  const resetInputAmount = () => {\n    setTokenAmountA('')\n    setTokenAmountB('')\n    setBinInfos({} as BinLiquidityInfo)\n    setPreCalcError(undefined)\n  }\n\n  useEffect(() => {\n    if ((!tokenAmountA || !+tokenAmountA) && (!tokenAmountB || !+tokenAmountB)) {\n      setBinInfos({} as BinLiquidityInfo)\n      setPreCalcError(undefined)\n    }\n  }, [tokenAmountA, tokenAmountB])\n\n  const handleAmountChange = (amount: string, isFixedDisplayTokenA: boolean) => {\n    if (!amount && isAutoFill) {\n      resetInputAmount()\n    }\n    setIsFixedDisplayTokenA(isFixedDisplayTokenA)\n    if (isFixedDisplayTokenA) {\n      setTokenAmountA(amount)\n    } else {\n      setTokenAmountB(amount)\n    }\n\n    if (+amount) {\n      const uuid = v4()\n      setUuid(uuid)\n\n      console.log('🚀 ~ handleAmountChange ~ params:', amount)\n    } else {\n      if (isAutoFill) {\n        if (isFixedDisplayTokenA) {\n          setTokenAmountB('')\n        } else {\n          setTokenAmountA('')\n        }\n      }\n    }\n  }\n\n  const debouncedDlmmPreAdd = async (\n    amount: string,\n    otherAmount: string,\n    isFixedDisplayTokenA: boolean,\n    isDisplayTokenALock: boolean = false,\n    isDisplayTokenBLock: boolean = false\n  ) => {\n    if (isAutoFill && !dlmmPreAddLoading) {\n      setDlmmPreAddLoading(true)\n    }\n    console.log('🚀🚀🚀 ~ useDlmmPosAddPage.ts:132 ~ debouncedDlmmPreAdd ~ amount:', amount, otherAmount, isFixedDisplayTokenA)\n    const binStep = dlmmCurrentPosPoolsOriginalData.binStep\n    const selectLowerBinId = isSelectRange ? minPriceData.binId : dlmmCurrentPosBaseInfo.lowerBinId\n    const selectUpperBinId = isSelectRange ? maxPriceData.binId : dlmmCurrentPosBaseInfo.upperBinId\n    console.log('🚀🚀🚀 ~ useDlmmPosAddPage.ts:140 ~ debouncedDlmmPreAdd ~ minPriceData.price:', {\n      dlmmCurrentPosBaseInfo,\n      selectLowerBinId,\n      selectUpperBinId,\n      minPriceData,\n      maxPriceData\n    })\n\n    let lowerBinId = d(selectLowerBinId).lt(dlmmCurrentPosBaseInfo.lowerBinId) ? dlmmCurrentPosBaseInfo.lowerBinId : selectLowerBinId\n    let upperBinId = d(selectUpperBinId).gt(dlmmCurrentPosBaseInfo.upperBinId) ? dlmmCurrentPosBaseInfo.upperBinId : selectUpperBinId\n\n    if (lowerBinId > upperBinId) {\n      lowerBinId = dlmmCurrentPosBaseInfo.lowerBinId\n      upperBinId = dlmmCurrentPosBaseInfo.upperBinId\n    }\n\n    let params = {\n      pool: dlmmCurrentPosPoolsOriginalData,\n      activeId: dlmmCurrentPosPoolsOriginalData.active_id,\n      binStep,\n      lowerBinId,\n      upperBinId,\n      strategy,\n      amount: d(amount || 0)\n        .mul(10 ** (isFixedDisplayTokenA ? displayTokenA?.decimals : displayTokenB?.decimals))\n        .toString(),\n      fixAmountA: dlmmCurrentPosBaseInfo?.isReverse ? !isFixedDisplayTokenA : isFixedDisplayTokenA,\n      fromToken: displayTokenA,\n      toToken: displayTokenB,\n      isReverse: dlmmCurrentPosBaseInfo?.isReverse,\n      isAutoFill,\n      otherAmount: d(otherAmount || 0)\n        .mul(10 ** (isFixedDisplayTokenA ? displayTokenB?.decimals : displayTokenA?.decimals))\n        .toString()\n    }\n    // -34390 -34380\n    // -34448  -34380\n    // -34448  -34380\n    console.log('🚀🚀🚀 ~ useDlmmPosAddPage.ts:108 ~ debouncedDlmmPreAdd ~ params:', params)\n    try {\n      const { displayCoinAmountA, displayCoinAmountB, binInfos } = await dlmmPreAdd(params)\n      setBinInfos(binInfos)\n      setPreCalcError(undefined)\n      console.log('🚀🚀🚀 ~ useDlmmPosAddPage.ts:166 ~ debouncedDlmmPreAdd ~ binInfos:', {\n        binInfos,\n        params\n      })\n      if (isAutoFill) {\n        if (isFixedDisplayTokenA) {\n          if (!isDisplayTokenBLock) {\n            setTokenAmountB(displayCoinAmountB)\n          }\n        } else {\n          if (!isDisplayTokenALock) {\n            setTokenAmountA(displayCoinAmountA)\n          }\n        }\n      } else {\n        // if (isFixedDisplayTokenA) {\n        //   setTokenAmountA(displayCoinAmountA)\n        // } else {\n        //   setTokenAmountB(displayCoinAmountB)\n        // }\n      }\n    } catch (error) {\n      if (String(error).includes('is less than 1')) {\n        setPreCalcError('amountTooSmall')\n        setBinInfos({} as BinLiquidityInfo)\n      } else {\n        setPreCalcError(undefined)\n      }\n    }\n  }\n\n  // 重新计算 (刷新按钮价格更新时 交易失败时)\n  const reCalculateResult = () => {\n    if ((tokenAmountA || tokenAmountB) && isAvailableObject(dlmmCurrentPosBaseInfo)) {\n      const amount = isFixedDisplayTokenA ? tokenAmountA : tokenAmountB\n      const otherAmount = isFixedDisplayTokenA ? tokenAmountB : tokenAmountA\n      if (+amount || +otherAmount) {\n        console.log('🚀🚀🚀 ~ useDlmmPosAddPage.ts:199 ~ reCalculateResult ~ debouncedDlmmPreAdd:', amount, 'test', otherAmount)\n        debouncedDlmmPreAdd(amount, otherAmount, isFixedDisplayTokenA, displayTokenALock, displayTokenBLock)\n      } else {\n        setBinInfos({} as BinLiquidityInfo)\n        setPreCalcError(undefined)\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (dlmmPreAddLoading) {\n      setTimeout(() => {\n        setDlmmPreAddLoading(false)\n      }, 500)\n    }\n  }, [dlmmPreAddLoading])\n\n  const totalAmount = useMemo(() => {\n    return d(tokenAmountValueA).add(tokenAmountValueB).toString()\n  }, [tokenAmountValueA, tokenAmountValueB])\n\n  const showTokenALock = useMemo(() => {\n    return getTokenALock(dlmmCurrentPosBaseInfo, dlmmCurrentPosPoolsOriginalData)\n  }, [dlmmCurrentPosPoolsOriginalData?.active_id, dlmmCurrentPosBaseInfo])\n\n  const showTokenBLock = useMemo(() => {\n    return getTokenBLock(dlmmCurrentPosBaseInfo, dlmmCurrentPosPoolsOriginalData)\n  }, [dlmmCurrentPosPoolsOriginalData?.active_id, dlmmCurrentPosBaseInfo])\n\n  const showDisplayTokenALock = !dlmmCurrentPosBaseInfo?.isReverse ? showTokenALock : showTokenBLock\n  const showDisplayTokenBLock = !dlmmCurrentPosBaseInfo?.isReverse ? showTokenBLock : showTokenALock\n\n  const { dlmmMevProtect, maxCapForGas, transactionMode, customGasPrice } = useGlobalStore()\n  const { signAndExecuteTransaction, batchSignAndExecuteTransaction } = useTransaction()\n  const { fetchAccountBalance } = useAccountBalance()\n  const { getDlmmCurrentPosBaseInfo } = useGetDlmmCurrentPos()\n  const { getList } = useGetDlmmRelatedPools()\n  const toAdd = async () => {\n    setIsAddLoading(true)\n    let TrackDataParams: any = {}\n    const parameter = {\n      dlmmPool: dlmmCurrentPosBaseInfo.dlmmPool,\n      coinTypeA: dlmmCurrentPosBaseInfo.coinTypeA,\n      coinTypeB: dlmmCurrentPosBaseInfo.coinTypeB,\n      positionId: dlmmCurrentPosBaseInfo?.id,\n      activeId: dlmmCurrentPosPoolsOriginalData.active_id,\n      collectFee: isAutoClaim,\n      rewardCoins: isAutoClaim ? dlmmCurrentPosPoolsOriginalData.reward_manager.rewards.map(ele => ele.reward_coin) : [],\n      binInfos,\n      strategy,\n      binStep\n    }\n    let txs: any[] = []\n\n    console.log('🚀🚀🚀 ~ useDlmmPosAddPage.ts:244 ~ toAdd ~ params:', parameter)\n\n    const { binInfos: p_binInfos, rewardCoins, ...trackData } = parameter\n\n    TrackDataParams = { ...trackData }\n\n    if (rewardCoins.length > 0) {\n      TrackDataParams['rewardCoins'] = JSON.stringify(rewardCoins)\n    }\n\n    const tx = getDlmmPosAddLiquidityPayload(parameter, isAutoClaim)\n    txs = txs.concat(tx)\n\n    console.log('🚀🚀🚀 ~ useDlmmPosAddPage.ts:262 ~ toAdd ~ tx:', tx)\n    const msafeParams = {\n      action: MsafeTransactionSubType.DlmmIncreaseLiquidity,\n      txbParams: parameter\n    }\n    const toastInfo = {\n      getShowInfo: (status: TransactionStatusType, balanceChanges?: Record<string, BalanceChanges>, _: any, otherParams?: any) => {\n        const description =\n          'Add ' +\n          [formatDescription(tokenAmountA, displayTokenA?.symbol), formatDescription(tokenAmountB, displayTokenB?.symbol)]\n            .filter(Boolean)\n            .join(' and ')\n\n        const info: CommonTypeInfo = {\n          modalDescriptionText: description,\n          toastTitleText: description\n        }\n        const isPartialSuccess = otherParams?.failedResults && otherParams.failedResults.length > 0 && otherParams.successResults.length > 0\n        if (status === 'rejected') {\n          if (isPartialSuccess) {\n            if (otherParams.failedResults.length > 0) {\n              info.toastDescriptionContent = `Failed transactions ${otherParams.failedResults.length} /${txs.length} `\n            }\n          }\n        }\n        if (status === 'success') {\n          let amountAF = tokenAmountA\n          let amountBF = tokenAmountB\n\n          if (balanceChanges) {\n            amountAF = getBalanceChanges(balanceChanges, displayTokenA) || tokenAmountA\n            amountBF = getBalanceChanges(balanceChanges, displayTokenB) || tokenAmountB\n          }\n          const description =\n            'Add ' +\n            [formatDescription(amountAF, displayTokenA?.symbol), formatDescription(amountBF, displayTokenB?.symbol)].filter(Boolean).join(' and ')\n          if (txs.length > 1) {\n            info.toastDescriptionContent = `Completed transactions ${txs.length} /${txs.length} `\n          } else {\n            info.toastDescriptionContent = description\n          }\n          info.modalDescriptionText = description\n          info.toastTitleText = 'Supplied Successful'\n        }\n\n        return info\n      }\n    }\n    if (txs.length === 1) {\n      transactionConfirmation(toastInfo)\n    }\n    console.log('🚀🚀🚀 ~ useDlmmPosAddPage.ts:299 ~ toAdd ~ tx:', tx)\n\n    const res = await batchSignAndExecuteTransaction(txs, toastInfo, {\n      useMev: dlmmMevProtect,\n      // useFastMode: transactionMode === 'Fast Mode',\n      maxCapForGas,\n      customGasPrice,\n      msafeParams,\n      trackData: {\n        params: TrackDataParams,\n        actionType: 'dlmm',\n        action: 'dlmmIncreaseLiquidity'\n      }\n    })\n\n    if (res?.successResults) {\n      // 重新拿数据\n      resetInputAmount()\n      fetchAccountBalance()\n      await getList({ poolId: dlmmCurrentPosBaseInfo?.dlmmPool })\n      getDlmmCurrentPosBaseInfo(currentAccount?.address, dlmmCurrentPosBaseInfo?.id as string, true)\n    } else {\n      if (dlmmCurrentPosBaseInfo) {\n        // 如果失败，大概率都是池子价格变化了，需要重新计算\n        getDlmmCurrentPosBaseInfo(currentAccount?.address, dlmmCurrentPosBaseInfo?.id, true).then(res => {\n          console.log('🚀 ~ toClaim ~ res:', res)\n          reCalculateResult()\n        })\n      }\n    }\n    setIsAddLoading(false)\n  }\n\n  const handleAdd = () => {\n    toAdd()\n  }\n\n  // const [minPriceData, setMinPriceData] = useState({})\n  // const [maxPriceData, setMaxPriceData] = useState({})\n  const [tokenBalanceA, setTokenBalanceA] = useState('')\n  const [tokenBalanceB, setTokenBalanceB] = useState('')\n\n  const isReverse = useMemo(() => {\n    return dlmmCurrentPosBaseInfo?.isReverse\n  }, [dlmmCurrentPosBaseInfo])\n\n  const currentPosPoolsRelatedData = useMemo(() => {\n    return dlmmPosPoolsRelatedData[dlmmCurrentPosBaseInfo?.id]\n  }, [dlmmPosPoolsRelatedData, dlmmCurrentPosBaseInfo?.id])\n\n  const currentPosLiquidityData = useMemo(() => {\n    return dlmmPosLiquidityData[dlmmCurrentPosBaseInfo?.id]\n  }, [dlmmCurrentPosBaseInfo?.id, dlmmPosLiquidityData])\n\n  const posMinPrice = useMemo(() => {\n    return dlmmPosDetailDirect ? currentPosPoolsRelatedData?.minPrice : currentPosPoolsRelatedData?.minPriceResever\n  }, [currentPosPoolsRelatedData, dlmmCurrentPosBaseInfo?.id, dlmmPosDetailDirect])\n\n  const posMinPriceBinId = useMemo(() => {\n    return currentPosPoolsRelatedData?.minPriceBinId\n  }, [currentPosPoolsRelatedData, dlmmCurrentPosBaseInfo?.id])\n\n  const posMaxPrice = useMemo(() => {\n    return dlmmPosDetailDirect ? currentPosPoolsRelatedData?.maxPrice : currentPosPoolsRelatedData?.maxPriceResever\n  }, [currentPosPoolsRelatedData, dlmmCurrentPosBaseInfo?.id, dlmmPosDetailDirect])\n\n  const posMaxPriceBinId = useMemo(() => {\n    return currentPosPoolsRelatedData?.maxPriceBinId\n  }, [currentPosPoolsRelatedData, dlmmCurrentPosBaseInfo?.id])\n\n  const initMinMaxPriceAndAmount = () => {\n    if (!dlmmCurrentPosBaseInfo || !tokenA || !tokenB || !binStep) return\n\n    handleSlider([dlmmCurrentPosBaseInfo.lowerBinId, dlmmCurrentPosBaseInfo.upperBinId])\n\n    setTokenBalanceA(currentPosLiquidityData?.displayCoinAmountA)\n    setTokenBalanceB(currentPosLiquidityData?.displayCoinAmountB)\n  }\n\n  const [isInitPrice, setIsInitPrice] = useState(false)\n  useDeepCompareEffect(() => {\n    if (currentPosLiquidityData && tokenA && tokenB && binStep && !isInitPrice) {\n      initMinMaxPriceAndAmount()\n      setIsInitPrice(true)\n    }\n    setTokenBalanceA(currentPosLiquidityData?.displayCoinAmountA)\n    setTokenBalanceB(currentPosLiquidityData?.displayCoinAmountB)\n  }, [isReverse, currentPosLiquidityData, tokenA, tokenB, binStep])\n\n  const handlePriceAction = useCallback(\n    (type: 'Add' | 'Sub', price: PriceDataType) => {\n      const isMinPrice = price.type === 'lower'\n      console.log('🚀 ~ handlePriceAction ~ price:', {\n        price,\n        isMinPrice,\n        dlmmPosDetailDirect,\n        type,\n        minPriceData,\n        maxPriceData,\n        dlmmCurrentPosBaseInfo\n      })\n\n      if (\n        binStep !== undefined &&\n        tokenA !== undefined &&\n        tokenB !== undefined &&\n        posMinPrice &&\n        posMaxPrice &&\n        posMinPriceBinId &&\n        posMaxPriceBinId\n      ) {\n        const { bin_id, price: _price } = handleActionBinPrice(price, binStep, tokenA?.decimals, tokenB?.decimals, type)\n\n        if (isMinPrice) {\n          if ((type === 'Sub' && bin_id < posMinPriceBinId) || (type === 'Add' && bin_id > posMaxPriceBinId)) {\n            const priceData = buildPriceData(posMinPriceBinId, isMinPrice)\n            if (priceData) {\n              setMinPriceData(priceData)\n            }\n          } else {\n            const priceData = buildPriceData(bin_id, isMinPrice)\n            if (priceData) {\n              setMinPriceData(priceData)\n            }\n          }\n        } else {\n          if ((type === 'Sub' && bin_id < posMinPriceBinId) || (type === 'Add' && bin_id > posMaxPriceBinId)) {\n            const priceData = buildPriceData(posMaxPriceBinId, isMinPrice)\n            if (priceData) {\n              setMaxPriceData(priceData)\n            }\n          } else {\n            const priceData = buildPriceData(bin_id, isMinPrice)\n            if (priceData) {\n              setMaxPriceData(priceData)\n            }\n          }\n        }\n        // getRemoveTokenBalance()\n      }\n    },\n    [binStep, tokenA, tokenB, posMinPrice, posMaxPrice, dlmmPosDetailDirect]\n  )\n\n  const handleSlider = (val: number[]) => {\n    if (!tokenA || !tokenB || !binStep) return\n    const lowerBinId = val[0]\n    const upperBinId = val[1]\n\n    const maxPriceData = buildPriceData(upperBinId, false)\n    if (maxPriceData) {\n      setMaxPriceData(maxPriceData)\n    }\n\n    const minPriceData = buildPriceData(lowerBinId, true)\n    if (minPriceData) {\n      setMinPriceData(minPriceData)\n    }\n  }\n\n  const [isDirect, setIsDirect] = useState(true)\n\n  const baseToken = useMemo(() => {\n    return isDirect ? displayTokenA : displayTokenB\n  }, [displayTokenA, displayTokenB, isDirect])\n\n  const quoteToken = useMemo(() => {\n    return isDirect ? displayTokenB : displayTokenA\n  }, [displayTokenA, displayTokenB, isDirect])\n  useDebounceEffect(\n    () => {\n      if ((binInfos?.amount_a || binInfos?.amount_b) && !dlmmPreAddLoading && dlmmCurrentPosBaseInfo) {\n        let addAmountA = binInfos.amount_a || '0'\n        let addAmountB = binInfos.amount_b || '0'\n        // const activeBin = dlmmCurrentPosPoolsOriginalData.active_bin\n        //  const bin = binInfos.bins.find(bin => bin.bin_id === activeBin.bin_id)\n\n        // 单独处理activeBin\n        // if (bin && activeBin?.liquidity && !isAutoFill && (d(bin.amount_a).eq(0) || d(bin.amount_b).eq(0))) {\n        //   // 先减去activeBin的amount_a和amount_b\n        //   addAmountA = d(addAmountA).minus(bin.amount_a).toString()\n        //   addAmountB = d(addAmountB).minus(bin.amount_b).toString()\n        //   const [activeAmountA, activeAmountB] = BinUtils.getAmountsFromLiquidity(\n        //     activeBin.amount_a,\n        //     activeBin.amount_b,\n        //     bin.liquidity || '0',\n        //     d(activeBin.liquidity)\n        //       .add(bin.liquidity || '0')\n        //       .floor()\n        //   )\n        //   // 加上activeBin的amount_a和amount_b\n        //   addAmountA = d(addAmountA).plus(activeAmountA).toString()\n        //   addAmountB = d(addAmountB).plus(activeAmountB).toString()\n        // }\n        const amountA = dlmmCurrentPosBaseInfo.isReverse ? addAmountB : addAmountA\n        const amountB = dlmmCurrentPosBaseInfo.isReverse ? addAmountA : addAmountB\n        const tokenADecimals = dlmmCurrentPosBaseInfo.isReverse ? dlmmCurrentPosBaseInfo?.tokenB?.decimals : dlmmCurrentPosBaseInfo?.tokenA?.decimals\n        const tokenBDecimals = dlmmCurrentPosBaseInfo.isReverse ? dlmmCurrentPosBaseInfo?.tokenA?.decimals : dlmmCurrentPosBaseInfo?.tokenB?.decimals\n        const amountAF = fromDecimalsAmount(amountA, tokenADecimals)\n        const amountBF = fromDecimalsAmount(amountB, tokenBDecimals)\n        setTokenAmountAfterA(d(amountAF).plus(tokenBalanceA).toString())\n        setTokenAmountAfterB(d(amountBF).plus(tokenBalanceB).toString())\n      } else {\n        setTokenAmountAfterA('')\n        setTokenAmountAfterB('')\n      }\n    },\n    [dlmmPreAddLoading, tokenBalanceA, tokenBalanceB, binInfos?.amount_a, binInfos?.amount_b],\n    { wait: 200 }\n  )\n\n  useEffect(() => {\n    return () => {\n      resetInputAmount()\n      setTokenAmountAfterA('')\n      setTokenAmountAfterB('')\n    }\n  }, [])\n\n  const isActive = useMemo(() => {\n    return currentPosPoolsRelatedData?.currentStatus === 'Active'\n  }, [currentPosPoolsRelatedData?.currentStatus])\n\n  useEffect(() => {\n    if (isActive) {\n      if (dlmmCurrentPosPoolsOriginalData?.active_id > maxPriceData?.binId && dlmmCurrentPosPoolsOriginalData?.active_id > minPriceData?.binId) {\n        setDisplayTokenALock(!isReverse)\n        setDisplayTokenBLock(isReverse)\n      }\n      if (dlmmCurrentPosPoolsOriginalData?.active_id < maxPriceData?.binId && dlmmCurrentPosPoolsOriginalData?.active_id < minPriceData?.binId) {\n        setDisplayTokenALock(isReverse)\n        setDisplayTokenBLock(!isReverse)\n      }\n      if (dlmmCurrentPosPoolsOriginalData?.active_id <= maxPriceData?.binId && dlmmCurrentPosPoolsOriginalData?.active_id >= minPriceData?.binId) {\n        setDisplayTokenALock(false)\n        setDisplayTokenBLock(false)\n      }\n    }\n  }, [dlmmCurrentPosPoolsOriginalData?.active_id, minPriceData?.binId, maxPriceData?.binId, isActive, isReverse])\n\n  useEffect(() => {\n    if (displayTokenALock) {\n      setTokenAmountA('')\n      setIsFixedDisplayTokenA(false)\n    }\n    if (displayTokenBLock) {\n      setTokenAmountB('')\n      setIsFixedDisplayTokenA(true)\n    }\n    if (!displayTokenALock && !displayTokenBLock) {\n      if (tokenAmountA && !tokenAmountB) {\n        setIsFixedDisplayTokenA(true)\n      }\n      if (tokenAmountB && !tokenAmountA) {\n        setIsFixedDisplayTokenA(false)\n      }\n    }\n  }, [displayTokenALock, displayTokenBLock])\n\n  useEffect(() => {\n    if (!isActive) {\n      setDisabledAutoFill(true)\n    } else {\n      setDisabledAutoFill(false)\n    }\n  }, [isActive])\n\n  const onAutoFillChange = useCallback(() => {\n    setIsAutoFill(!isAutoFill)\n    if (tokenAmountA !== '' && tokenAmountB === '') {\n      setIsFixedDisplayTokenA(true)\n    }\n    if (tokenAmountA === '' && tokenAmountB !== '') {\n      setIsFixedDisplayTokenA(false)\n    }\n  }, [isAutoFill, tokenAmountA, tokenAmountB])\n\n  const numBins = useMemo(() => {\n    if (minPriceData?.binId !== undefined && maxPriceData?.binId !== undefined) {\n      return getNumBins(minPriceData!.binId, maxPriceData!.binId)\n    } else {\n      return '--'\n    }\n  }, [minPriceData?.binId, maxPriceData?.binId])\n\n  const btnStatusText = useMemo(() => {\n    const btnInfo: {\n      text?: string\n      disabled: boolean\n    } = {\n      text: 'Add More Liquidity',\n      disabled: false\n    }\n    if (!currentAccount?.address) {\n      btnInfo.text = 'Connect Wallet'\n      btnInfo.disabled = false\n      return btnInfo\n    }\n    if (preCalcError === 'amountTooSmall') {\n      btnInfo.disabled = true\n      return btnInfo\n    }\n\n    // 判断输入\n    if (!+tokenAmountA && !+tokenAmountB) {\n      btnInfo.text = 'Enter an amount'\n      btnInfo.disabled = true\n      return btnInfo\n    }\n    //判断余额\n    if (!showDisplayTokenALock && tokenAmountA && d(tokenAmountA).gt(tokenABalanceInfo?.balanceFormat || 0)) {\n      btnInfo.disabled = true\n      btnInfo.text = `Insufficient ${textEllipses(displayTokenA?.symbol, 10)} Balance`\n      return btnInfo\n    }\n    //判断余额\n    if (!showDisplayTokenBLock && tokenAmountB && d(tokenAmountB).gt(tokenBBalanceInfo?.balanceFormat || 0)) {\n      btnInfo.disabled = true\n      btnInfo.text = `Insufficient ${textEllipses(displayTokenB?.symbol, 10)} Balance`\n      return btnInfo\n    }\n    if (!showTokenALock && !showTokenBLock && !+tokenAmountA && !+tokenAmountB && isAutoFill && !displayTokenALock && !displayTokenBLock) {\n      btnInfo.disabled = true\n      return btnInfo\n    }\n    if (displayTokenALock && !+tokenAmountB) {\n      btnInfo.text = 'Enter an amount'\n      btnInfo.disabled = true\n      return btnInfo\n    }\n    if (displayTokenBLock && !+tokenAmountA) {\n      btnInfo.text = 'Enter an amount'\n      btnInfo.disabled = true\n      return btnInfo\n    }\n\n    return btnInfo\n  }, [\n    tokenAmountA,\n    tokenAmountB,\n    tokenABalanceInfo,\n    tokenBBalanceInfo,\n    currentAccount?.address,\n    isAutoFill,\n    displayTokenALock,\n    displayTokenBLock,\n    displayTokenA,\n    displayTokenB,\n    numBins\n  ])\n\n  return {\n    displayTokenA,\n    displayTokenB,\n    tokenABalanceInfo,\n    tokenBBalanceInfo,\n    tokenAmountValueA,\n    tokenAmountValueB,\n    tokenAmountA,\n    tokenAmountB,\n    handleAmountChange,\n    strategy,\n    setStrategy,\n    dlmmPreAddLoading,\n    isFixedDisplayTokenA,\n    totalAmount,\n    btnStatusText,\n    showDisplayTokenALock,\n    showDisplayTokenBLock,\n    displayTokenALock,\n    displayTokenBLock,\n    isAutoFill,\n    isSelectRange,\n    setIsSelectRange,\n    handleAdd,\n    isAddLoading,\n    setIsAddLoading,\n    posMinPrice,\n    posMaxPrice,\n    posMinPriceBinId,\n    posMaxPriceBinId,\n    minPriceData,\n    maxPriceData,\n    handlePriceAction,\n    handleSlider,\n    baseToken,\n    quoteToken,\n    dlmmPosDetailDirect,\n    reCalculateResult,\n    setIsAutoFill,\n    setIsInitPrice,\n    disabledAutoFill,\n    onAutoFillChange,\n    numBins,\n    isReverse,\n    binStep: currentPosPoolsRelatedData?.binStep,\n    tokenA,\n    tokenB\n  }\n}\n","import PriceInput from '@/components/liquidity/dlmm/ControlPriceRange/PriceInput'\nimport { PriceDataType } from '@/hooks/create-pool/useCreateDLMMPool'\nimport { useMinMaxPriceData } from '@/hooks/dlmm/useDlmmHelper'\nimport useDlmmPosDetailStore from '@/store/dlmm-position/detail'\nimport { RangePriceType } from '@/store/dlmm/addDlmmLiquidity'\nimport { CetusTooltip, ErrorTips } from '@cetus/design'\nimport { Token } from '@cetus/types'\nimport { Icon } from '@cetus/ui-kit'\nimport { removeComma, textEllipses } from '@cetus/utils'\nimport { BinUtils } from '@cetusprotocol/dlmm-sdk'\nimport { Box, Center, HStack, RangeSlider, RangeSliderFilledTrack, RangeSliderThumb, RangeSliderTrack, Stack, Text, VStack } from '@chakra-ui/react'\nimport { useMemo, useState } from 'react'\n\ntype DlmmPositionSelectRangeProps = {\n  baseToken: Token\n  quoteToken: Token\n  tokenA: Token\n  tokenB: Token\n  minPriceData: Omit<RangePriceType, 'tokenA' | 'tokenB'>\n  maxPriceData: Omit<RangePriceType, 'tokenA' | 'tokenB'>\n  handlePriceAction: (type: 'Add' | 'Sub', price: PriceDataType, isMinPrice: boolean) => void\n  posMinPrice: string\n  posMaxPrice: string\n  posMinPriceBinId: number\n  posMaxPriceBinId: number\n  handleSlider: (binIds: number[]) => void\n  isShowError: boolean\n  isReverse: boolean\n  binStep: number\n}\nexport default function DlmmPositionSelectRange(props: DlmmPositionSelectRangeProps) {\n  const {\n    baseToken,\n    quoteToken,\n    minPriceData,\n    maxPriceData,\n    handlePriceAction,\n    posMinPrice,\n    posMaxPrice,\n    handleSlider,\n    isShowError,\n    posMinPriceBinId,\n    posMaxPriceBinId,\n    isReverse,\n    binStep,\n    tokenA,\n    tokenB\n  } = props\n  const { setMinPriceData, setMaxPriceData } = useDlmmPosDetailStore(state => ({\n    setMinPriceData: state.setMinPriceData,\n    setMaxPriceData: state.setMaxPriceData\n  }))\n  const { dlmmPosDetailDirect } = useDlmmPosDetailStore()\n  const [isSelectRange, setIsSelectRange] = useState(false)\n  const { buildPriceData } = useMinMaxPriceData(tokenA, tokenB, binStep)\n  const perText = useMemo(() => {\n    return `${textEllipses(dlmmPosDetailDirect ? quoteToken?.symbol : baseToken?.symbol)} per ${textEllipses(dlmmPosDetailDirect ? baseToken?.symbol : quoteToken?.symbol)}`\n  }, [baseToken?.symbol, quoteToken?.symbol, dlmmPosDetailDirect])\n\n  const rangeSliderValue = useMemo(() => {\n    if (minPriceData?.displayPrice && maxPriceData?.displayPrice) {\n      if (isReverse) {\n        if (dlmmPosDetailDirect) {\n          return [maxPriceData.binId * -1, minPriceData.binId * -1]\n        } else {\n          return [minPriceData.binId, maxPriceData.binId]\n        }\n      } else {\n        if (dlmmPosDetailDirect) {\n          return [minPriceData.binId, maxPriceData.binId]\n        } else {\n          return [maxPriceData.binId * -1, minPriceData.binId * -1]\n        }\n      }\n    }\n    return []\n  }, [minPriceData?.binId, maxPriceData?.binId, dlmmPosDetailDirect])\n\n  const displayMinBinId = useMemo(() => {\n    if (isReverse) {\n      if (dlmmPosDetailDirect) {\n        return posMaxPriceBinId * -1\n      } else {\n        return posMinPriceBinId\n      }\n    } else {\n      if (dlmmPosDetailDirect) {\n        return posMinPriceBinId\n      } else {\n        return posMaxPriceBinId * -1\n      }\n    }\n  }, [isReverse, dlmmPosDetailDirect, posMinPriceBinId, posMaxPriceBinId])\n\n  const displayMaxBinId = useMemo(() => {\n    if (isReverse) {\n      if (dlmmPosDetailDirect) {\n        return posMinPriceBinId * -1\n      } else {\n        return posMaxPriceBinId\n      }\n    } else {\n      if (dlmmPosDetailDirect) {\n        return posMaxPriceBinId\n      } else {\n        return posMinPriceBinId * -1\n      }\n    }\n  }, [isReverse, dlmmPosDetailDirect, posMinPriceBinId, posMaxPriceBinId])\n\n  // 检查最大值和最小值是否相等\n  const isMinMaxEqual = useMemo(() => {\n    return displayMinBinId === displayMaxBinId\n  }, [displayMinBinId, displayMaxBinId])\n\n  // 调整后的 min 和 max 值，确保滑块有足够的空间\n  const adjustedMinBinId = useMemo(() => {\n    if (isMinMaxEqual) {\n      return displayMinBinId - 10\n    }\n    return displayMinBinId\n  }, [isMinMaxEqual, displayMinBinId])\n\n  const adjustedMaxBinId = useMemo(() => {\n    if (isMinMaxEqual) {\n      return displayMaxBinId + 10\n    }\n    return displayMaxBinId\n  }, [isMinMaxEqual, displayMaxBinId])\n\n  // 当最大值和最小值相等时，给滑块设置偏移量\n  const adjustedRangeSliderValue = useMemo(() => {\n    if (isMinMaxEqual && rangeSliderValue.length === 2) {\n      // 使用调整后的范围值，确保滑块铺满整个布局\n      // 左边滑块显示在最左边，右边滑块显示在最右边\n      return [adjustedMinBinId, adjustedMaxBinId]\n    }\n    return rangeSliderValue\n  }, [isMinMaxEqual, rangeSliderValue, adjustedMinBinId, adjustedMaxBinId])\n\n  const displayMinData = useMemo(() => {\n    return isReverse !== dlmmPosDetailDirect ? minPriceData : maxPriceData\n  }, [minPriceData?.price, minPriceData?.reversePrice, maxPriceData?.price, maxPriceData?.reversePrice, isReverse, dlmmPosDetailDirect])\n\n  const displayMaxData = useMemo(() => {\n    return isReverse !== dlmmPosDetailDirect ? maxPriceData : minPriceData\n  }, [minPriceData?.price, minPriceData?.reversePrice, maxPriceData?.price, maxPriceData?.reversePrice, isReverse, dlmmPosDetailDirect])\n\n  // console.log('🚀 ~ DlmmPositionSelectRange ~ minPriceData:', {\n  //   minPriceData,\n  //   maxPriceData,\n  //   displayMinData,\n  //   displayMaxData,\n  //   isReverse,\n  //   dlmmPosDetailDirect,\n  //   posMinPrice,\n  //   posMaxPrice,\n  //   posMinPriceBinId,\n  //   posMaxPriceBinId,\n  //   displayMinBinId,\n  //   displayMaxBinId\n  // })\n  const onPriceChange = (data: RangePriceType, value: string) => {\n    if (!tokenA || !tokenB || !binStep) return\n    const targetPrice = removeComma(value)\n    let _binId = BinUtils.getBinIdFromPrice(targetPrice, binStep!, data?.type === 'lower', tokenA?.decimals, tokenB?.decimals)\n    console.log(\n      {\n        _binId,\n        data,\n        minPriceData,\n        maxPriceData,\n        targetPrice,\n        dlmmPosDetailDirect,\n        isReverse,\n        posMaxPriceBinId,\n        posMinPriceBinId,\n        value\n      },\n      'onPriceChange'\n    )\n\n    if (_binId < posMinPriceBinId || _binId > posMaxPriceBinId) {\n      _binId = data?.type === 'lower' ? posMinPriceBinId : posMaxPriceBinId\n    }\n\n    if (data?.type === 'lower') {\n      data.changeCount = data.changeCount ? data.changeCount + 1 : 1\n      const minPriceData = buildPriceData(_binId, true)\n      if (minPriceData) {\n        minPriceData.changeCount = data.changeCount ? data.changeCount + 1 : 1\n        setMinPriceData(minPriceData)\n      }\n    } else {\n      data.changeCount = data.changeCount ? data.changeCount + 1 : 1\n      const maxPriceData = buildPriceData(_binId, false)\n      if (maxPriceData) {\n        maxPriceData.changeCount = data.changeCount ? data.changeCount + 1 : 1\n        setMaxPriceData(maxPriceData)\n      }\n    }\n  }\n\n  return (\n    <VStack mt=\"8px\" w=\"100%\">\n      <VStack w=\"100%\">\n        <HStack w=\"100%\" justifyContent=\"space-between\">\n          <Text fontSize=\"14px\" color=\"primary_gray\" fontWeight=\"500\">\n            Select Range\n          </Text>\n          <HStack\n            gap=\"4px\"\n            onClick={() => {\n              setIsSelectRange(!isSelectRange)\n            }}\n            cursor=\"pointer\"\n            _hover={{\n              svg: {\n                fill: 'text_caption'\n              }\n            }}\n          >\n            <CetusTooltip\n              maxW=\"280px\"\n              tooltip={\n                <Text fontSize=\"12px\" lineHeight=\"20px\">\n                  Customize your price range within position to optimize liquidity efficiency.\n                </Text>\n              }\n            >\n              <Center bg=\"primary_opacity.10\" h=\"24px\" borderRadius=\"12px\" p=\"4px 6px\">\n                <Text fontSize=\"12px\" color=\"primary\">\n                  Advanced\n                </Text>\n              </Center>\n            </CetusTooltip>\n\n            <Icon\n              xlinkHref=\"#icon-icon_descending_nor\"\n              transform={isSelectRange ? 'rotate(180deg)' : 'rotate(0deg)'}\n              transition=\"transform 0.5s\"\n              fontSize=\"20px\"\n            />\n          </HStack>\n        </HStack>\n        {isSelectRange && rangeSliderValue.length > 0 && posMinPrice && posMaxPrice && (\n          <VStack w=\"100%\" gap=\"8px\" mt=\"12px\">\n            <RangeSlider\n              min={adjustedMinBinId}\n              max={adjustedMaxBinId}\n              step={1}\n              value={adjustedRangeSliderValue as number[]}\n              onChange={val => {\n                console.log(val, 'RangeSlider')\n                if (isMinMaxEqual) {\n                  return\n                } else {\n                  // 正常情况下的处理逻辑\n                  if (isReverse) {\n                    if (dlmmPosDetailDirect) {\n                      handleSlider([val[1] * -1, val[0] * -1])\n                    } else {\n                      handleSlider(val)\n                    }\n                  } else {\n                    if (dlmmPosDetailDirect) {\n                      handleSlider(val)\n                    } else {\n                      handleSlider([val[1] * -1, val[0] * -1])\n                    }\n                  }\n                }\n              }}\n              colorScheme=\"teal\"\n            >\n              <RangeSliderTrack bg=\"bg_secondary\">\n                <RangeSliderFilledTrack />\n              </RangeSliderTrack>\n              <RangeSliderThumb index={0} />\n              <RangeSliderThumb index={1} />\n            </RangeSlider>\n\n            <HStack w=\"100%\" justifyContent=\"space-between\">\n              <Text>{posMinPrice}</Text>\n              <Text>{posMaxPrice}</Text>\n            </HStack>\n          </VStack>\n        )}\n      </VStack>\n\n      {isSelectRange && displayMinData && displayMaxData && (\n        <Stack mt=\"4px\" position=\"relative\" flexDir={{ base: 'column', lg: 'row' }} w=\"100%\" gap={{ base: '8px', lg: '16px' }}>\n          <Box opacity={1} w={{ base: '100%', lg: '50%' }}>\n            <PriceInput\n              verifyAction={false}\n              title=\"Min Price\"\n              perText={perText}\n              data={displayMinData}\n              direct={dlmmPosDetailDirect !== isReverse}\n              loading={false}\n              minPrice={posMinPrice}\n              maxPrice={posMaxPrice}\n              subDisabled={displayMinData?.type === 'lower' ? displayMinData?.binId === posMinPriceBinId : displayMinData?.binId === posMaxPriceBinId}\n              addDisabled={displayMinData?.binId === displayMaxData?.binId}\n              onPriceChange={onPriceChange}\n              handleAddPrice={data => {\n                handlePriceAction?.(dlmmPosDetailDirect !== isReverse ? 'Add' : 'Sub', data, true)\n              }}\n              handleSubPrice={data => {\n                handlePriceAction?.(dlmmPosDetailDirect !== isReverse ? 'Sub' : 'Add', data, true)\n              }}\n            />\n          </Box>\n          <Box opacity={1} w={{ base: '100%', lg: '50%' }}>\n            <PriceInput\n              verifyAction={false}\n              title=\"Max Price\"\n              perText={perText}\n              data={displayMaxData}\n              direct={dlmmPosDetailDirect !== isReverse}\n              loading={false}\n              subDisabled={displayMinData.binId === displayMaxData.binId}\n              addDisabled={displayMaxData?.type === 'lower' ? displayMaxData?.binId === posMinPriceBinId : displayMaxData?.binId === posMaxPriceBinId}\n              minPrice={posMinPrice}\n              maxPrice={posMaxPrice}\n              onPriceChange={onPriceChange}\n              handleAddPrice={data => {\n                handlePriceAction?.(dlmmPosDetailDirect !== isReverse ? 'Add' : 'Sub', data, false)\n              }}\n              handleSubPrice={data => {\n                handlePriceAction?.(dlmmPosDetailDirect !== isReverse ? 'Sub' : 'Add', data, false)\n              }}\n            />\n          </Box>\n        </Stack>\n      )}\n\n      {isShowError && (\n        <ErrorTips\n          isShowIcon={false}\n          tipsFontSize=\"12px\"\n          justifyContent=\"center\"\n          tips=\"The max price should be higher than min price.\"\n          p=\"0 16px\"\n          h=\"28px\"\n          borderRadius=\"8px\"\n        />\n      )}\n    </VStack>\n  )\n}\n","import { Strategy } from '@/components/liquidity/dlmm/SelectStrategy'\nimport useDlmmPosAddPage from '@/hooks/dlmm-position/useDlmmPosAddPage'\nimport useDlmmPosDetailStore from '@/store/dlmm-position/detail'\nimport { CetusTooltip, ErrorTips, TradeInput } from '@cetus/design'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { HTextLabelBox, Icon } from '@cetus/ui-kit'\nimport { addComma, d, formatCurrency, isAvailableObject } from '@cetus/utils'\nimport { StrategyType } from '@cetusprotocol/dlmm-sdk'\nimport { Box, Button, Center, FormControl, FormLabel, HStack, Switch, Text, VStack } from '@chakra-ui/react'\nimport { useDebounceEffect } from 'ahooks'\nimport { useMemo } from 'react'\nimport { AutoClaimCheckBox } from '../../common/AutoClaimCheckBox'\nimport DlmmPositionSelectRange from './DlmmPositionSelectRange'\n\nexport default function DlmmPositionAdd() {\n  const {\n    displayTokenA,\n    displayTokenB,\n    tokenABalanceInfo,\n    tokenBBalanceInfo,\n    tokenAmountValueA,\n    tokenAmountValueB,\n    tokenAmountA,\n    tokenAmountB,\n    handleAmountChange,\n    strategy,\n    setStrategy,\n    dlmmPreAddLoading,\n    isFixedDisplayTokenA,\n    totalAmount,\n    btnStatusText,\n    showDisplayTokenALock,\n    showDisplayTokenBLock,\n    displayTokenALock,\n    displayTokenBLock,\n    isAutoFill,\n    handleAdd,\n    isAddLoading,\n    minPriceData,\n    maxPriceData,\n    posMinPrice,\n    posMaxPrice,\n    handlePriceAction,\n    handleSlider,\n    baseToken,\n    quoteToken,\n    dlmmPosDetailDirect,\n    reCalculateResult,\n    setIsAutoFill,\n    setIsInitPrice,\n    disabledAutoFill,\n    onAutoFillChange,\n    numBins,\n    posMinPriceBinId,\n    posMaxPriceBinId,\n    isReverse,\n    binStep,\n    tokenA,\n    tokenB\n  } = useDlmmPosAddPage()\n\n  const { showPositionSelectRange, isAutoClaim, setIsAutoClaim, preCalcError } = useDlmmPosDetailStore()\n  const { isApp } = useWindowWidth()\n\n  useDebounceEffect(\n    () => {\n      if (isAvailableObject(minPriceData) && isAvailableObject(maxPriceData)) {\n        reCalculateResult()\n      }\n    },\n    [minPriceData, maxPriceData, displayTokenALock, displayTokenBLock, isFixedDisplayTokenA, tokenAmountA, tokenAmountB, strategy, isAutoFill],\n    {\n      wait: 300\n    }\n  )\n\n  const isShowError = useMemo(() => {\n    if (!minPriceData?.binId || !maxPriceData?.binId) return false\n    return d(minPriceData.binId).gt(maxPriceData.binId)\n  }, [minPriceData?.binId, maxPriceData?.binId])\n\n  return (\n    <VStack gap=\"16px\" w=\"100%\">\n      <VStack mb=\"-6px\" w=\"100%\" justify=\"space-between\" mt=\"4px\" justifyContent=\"flex-start\" alignItems=\"flex-start\" gap=\"18px\">\n        <Text fontSize=\"14px\" color=\"primary_gray\" fontWeight=\"500\">\n          Select Strategy\n        </Text>\n        <HStack w=\"100%\" justify=\"space-between\" gap=\"0px\">\n          <Strategy type={StrategyType.Spot} isActive={strategy === StrategyType.Spot} onClick={() => setStrategy(StrategyType.Spot)} size=\"m\" />\n          <Strategy type={StrategyType.Curve} isActive={strategy === StrategyType.Curve} onClick={() => setStrategy(StrategyType.Curve)} size=\"m\" />\n          <Strategy\n            type={StrategyType.BidAsk}\n            isActive={strategy === StrategyType.BidAsk}\n            onClick={() => setStrategy(StrategyType.BidAsk)}\n            size=\"m\"\n          />\n        </HStack>\n      </VStack>\n      {showPositionSelectRange && (\n        <DlmmPositionSelectRange\n          isReverse={isReverse}\n          posMinPriceBinId={posMinPriceBinId}\n          posMaxPriceBinId={posMaxPriceBinId}\n          minPriceData={minPriceData}\n          maxPriceData={maxPriceData}\n          isShowError={isShowError}\n          posMinPrice={posMinPrice}\n          posMaxPrice={posMaxPrice}\n          handlePriceAction={handlePriceAction}\n          handleSlider={handleSlider}\n          baseToken={baseToken}\n          quoteToken={quoteToken}\n          binStep={binStep}\n          tokenA={tokenA}\n          tokenB={tokenB}\n        />\n      )}\n\n      <HStack w=\"100%\" justifyContent=\"space-between\">\n        <Text whiteSpace=\"nowrap\" fontSize=\"14px\" color=\"primary_gray\" fontWeight=\"500\">\n          Deposit Amounts\n        </Text>\n\n        {isApp && !showDisplayTokenALock && !showDisplayTokenBLock && !displayTokenALock && !displayTokenBLock && (\n          <FormControl display=\"flex\" justifyContent=\"end\" alignItems=\"center\">\n            <FormLabel\n              htmlFor=\"auto-fill\"\n              mb=\"0\"\n              fontSize={{ base: '12px', lg: '14px' }}\n              fontWeight=\"500\"\n              color={isAutoFill ? 'text_highlight' : 'text_caption'}\n            >\n              <CetusTooltip\n                maxW=\"320px\"\n                tooltip={\n                  <Text fontSize=\"12px\" lineHeight=\"20px\">\n                    <Text fontSize=\"12px\" as=\"span\" color=\"text_caption\">\n                      ON:\n                    </Text>{' '}\n                    Enter one token amount, the other is calculated automatically.\n                    <br />\n                    <Text fontSize=\"12px\" as=\"span\" color=\"text_caption\">\n                      OFF:\n                    </Text>{' '}\n                    Enter custom amounts for both tokens manually.\n                    <Box h=\"8px\" />\n                    <Box\n                      as=\"div\"\n                      lineHeight=\"20px\"\n                      cursor=\"pointer\"\n                      _hover={{ svg: { fill: 'text_caption' } }}\n                      onClick={() => window.open('https://cetus-1.gitbook.io/cetus-docs/dlmm/dynamic-fee/fee-structure#composition-fee')}\n                    >\n                      A composition fee may be applied during DLMM liquidity provision if the deposited token ratio into a bin differs from the bin’s\n                      current ratio. <Icon xlinkHref=\"#icon-icon_link1\" display=\"inline-block\" fontSize=\"16px\" verticalAlign=\"middle\" />\n                    </Box>\n                  </Text>\n                }\n              >\n                Auto Fill\n              </CetusTooltip>\n            </FormLabel>\n            <Switch id=\"auto-fill\" isChecked={isAutoFill} onChange={onAutoFillChange} />\n          </FormControl>\n        )}\n\n        {!isApp && !showDisplayTokenALock && !showDisplayTokenBLock && !displayTokenALock && !displayTokenBLock && (\n          <CetusTooltip\n            maxW=\"400px\"\n            tooltip={\n              <Text fontSize=\"12px\" lineHeight=\"20px\">\n                <Text fontSize=\"12px\" as=\"span\" color=\"text_caption\">\n                  ON:\n                </Text>{' '}\n                Enter one token amount, the other is calculated automatically.\n                <br />\n                <Text fontSize=\"12px\" as=\"span\" color=\"text_caption\">\n                  OFF:\n                </Text>{' '}\n                Enter custom amounts for both tokens manually.\n                <Box h=\"8px\" />\n                <Box\n                  as=\"div\"\n                  lineHeight=\"20px\"\n                  cursor=\"pointer\"\n                  _hover={{ svg: { fill: 'text_caption' } }}\n                  onClick={() => window.open('https://cetus-1.gitbook.io/cetus-docs/dlmm/dynamic-fee/fee-structure#composition-fee')}\n                >\n                  A composition fee may be applied during DLMM liquidity provision if the deposited token ratio into a bin differs from the bin’s\n                  current ratio. <Icon xlinkHref=\"#icon-icon_link1\" display=\"inline-block\" fontSize=\"16px\" verticalAlign=\"middle\" />\n                </Box>\n              </Text>\n            }\n          >\n            <FormControl display=\"flex\" alignItems=\"center\">\n              <FormLabel\n                htmlFor=\"auto-fill\"\n                mb=\"0\"\n                fontSize={{ base: '12px', lg: '14px' }}\n                fontWeight=\"500\"\n                color={isAutoFill ? 'text_highlight' : 'text_caption'}\n              >\n                Auto Fill\n              </FormLabel>\n\n              <Switch id=\"auto-fill\" isChecked={isAutoFill} onChange={onAutoFillChange} />\n            </FormControl>\n          </CetusTooltip>\n        )}\n      </HStack>\n      <VStack w=\"100%\" mt=\"4px\" flexDir={dlmmPosDetailDirect ? 'column' : 'column-reverse'}>\n        <TradeInput\n          token={displayTokenA}\n          value={tokenAmountA}\n          balance={tokenABalanceInfo?.balanceFormat || ''}\n          amountValue={tokenAmountValueA}\n          placeholder=\"0.0\"\n          remainBalanceAmount={0.5}\n          loading={!isFixedDisplayTokenA && dlmmPreAddLoading && isAutoFill}\n          lock={{\n            isLock: displayTokenALock || showDisplayTokenALock || isShowError,\n            style: {\n              height: 'calc(100% + 2px)'\n            }\n          }}\n          onChange={value => {\n            handleAmountChange(value, true)\n          }}\n          wrapStyle={{\n            height: '110px'\n          }}\n          rightJustify=\"space-around\"\n        />\n\n        <TradeInput\n          token={displayTokenB}\n          value={tokenAmountB}\n          remainBalanceAmount={0.5}\n          balance={tokenBBalanceInfo?.balanceFormat || ''}\n          amountValue={tokenAmountValueB}\n          placeholder=\"0.0\"\n          loading={isFixedDisplayTokenA && dlmmPreAddLoading && isAutoFill}\n          lock={{\n            isLock: displayTokenBLock || showDisplayTokenBLock || isShowError,\n            style: {\n              height: 'calc(100% + 2px)'\n            }\n          }}\n          onChange={value => {\n            handleAmountChange(value, false)\n          }}\n          wrapStyle={{\n            height: '110px'\n          }}\n          rightJustify=\"space-around\"\n        />\n      </VStack>\n\n      {preCalcError && <ErrorTips tips={'Amount too small to allocate across bins. Please increase the amount.'} type=\"warning\" />}\n\n      <AutoClaimCheckBox\n        checked={isAutoClaim}\n        onChange={() => {\n          setIsAutoClaim(!isAutoClaim)\n        }}\n      />\n\n      <Button\n        width=\"100%\"\n        height=\"52px\"\n        fontSize=\"18px\"\n        fontWeight=\"500\"\n        isDisabled={btnStatusText?.disabled || preCalcError !== undefined}\n        isLoading={isAddLoading || dlmmPreAddLoading}\n        onClick={() => handleAdd()}\n      >\n        {btnStatusText?.text}\n      </Button>\n      <HTextLabelBox\n        label=\"Deposit Amount\"\n        value={formatCurrency(totalAmount, 2)}\n        isLoading={dlmmPreAddLoading}\n        labelStyle={{\n          fontSize: '14px',\n          height: '16px'\n        }}\n        valueStyle={{\n          fontSize: '14px'\n        }}\n      />\n      <HTextLabelBox\n        label={\n          <HStack gap=\"4px\">\n            <Text>Num Bins</Text>\n            <CetusTooltip tooltip=\"Total bins in this position or actions.\">\n              <Center cursor=\"pointer\">\n                <Icon xlinkHref=\"#icon-icon_tips\" svgW=\"20px\" svgH=\"20px\" />\n              </Center>\n            </CetusTooltip>\n          </HStack>\n        }\n        value={addComma(numBins)}\n        labelStyle={{\n          fontSize: '14px'\n        }}\n        valueStyle={{\n          fontSize: '14px'\n        }}\n      />\n    </VStack>\n  )\n}\n","import useGlobalStore from '@/store/common/global'\nimport useDlmmPositionStore from '@/store/dlmm-position'\nimport useDlmmPosDetailStore from '@/store/dlmm-position/detail'\nimport { MsafeTransactionSubType } from '@/types'\nimport { DlmmPosBaseInfo, DlmmPosClosePositionParams, DlmmPosRemoveLiquidityParams } from '@/types/dlmm'\nimport { formatDescription } from '@/utils'\nimport { useAccountBalance } from '@cetus/hooks'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport useTransactionModal from '@cetus/hooks/src/useTransactionModal'\nimport { useAccountStore } from '@cetus/stores'\nimport { BalanceChanges, CommonTypeInfo, TransactionStatusType } from '@cetus/types'\nimport { bnToAmount, Decimal, formatNumber, getBalanceChanges, isAvailableObject } from '@cetus/utils'\nimport { d, fromDecimalsAmount } from '@cetusprotocol/common-sdk'\nimport { BinAmount, BinLiquidityInfo, parseLiquidityShares } from '@cetusprotocol/dlmm-sdk'\nimport { useDebounceEffect, useDeepCompareEffect } from 'ahooks'\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { v4 } from 'uuid'\nimport useTransaction from '../common/useTransaction'\nimport { PriceDataType } from '../create-pool/useCreateDLMMPool'\nimport useCreatePriceBin from '../dlmm/useCreatePriceBin'\nimport { useMinMaxPriceData } from '../dlmm/useDlmmHelper'\nimport useGetDlmmRelatedPools from '../dlmm/useGetDlmmRelatedPools'\nimport useDlmmPosHelper from './useDlmmPosHelper'\nimport useDlmmPosRemove from './useDlmmPosRemove'\nimport useGetDlmmCurrentPos from './useGetDlmmCurrentPos'\n\nexport default function useDlmmPosRemovePage() {\n  const { dlmmCurrentPosBaseInfo, dlmmPosLiquidityData, dlmmPosPoolsOriginalData, dlmmPosPoolsRelatedData } = useDlmmPositionStore()\n  const { minPriceData, maxPriceData, setMinPriceData, setMaxPriceData, setTokenAmountAfterA, setTokenAmountAfterB } = useDlmmPosDetailStore()\n  console.log('🚀🚀🚀 ~ useDlmmPosremovePage.ts:23 ~ useDlmmPosRemovePage ~ dlmmPosLiquidityData:', dlmmPosLiquidityData)\n  console.log('🚀🚀🚀 ~ useDlmmPosremovePage.ts:24 ~ useDlmmPosRemovePage ~ dlmmCurrentPosBaseInfo:', dlmmCurrentPosBaseInfo)\n  const { handleActionBinPrice, getNumBins } = useCreatePriceBin()\n  const { binInfos, setBinInfos, dlmmPosDetailDirect, isAutoClaim, setIsAutoClaim, setPreCalcError } = useDlmmPosDetailStore()\n  const { getDlmmCurrentPosBaseInfo } = useGetDlmmCurrentPos()\n  const { getTokenAmountValue } = useTokenPrice()\n  const { getTokenALock, getTokenBLock } = useDlmmPosHelper()\n  const { transactionConfirmation } = useTransactionModal()\n\n  const { dlmmPreRemove, getDlmmPosRemoveLiquidityPayload, getDlmmPosClosePositionPayload } = useDlmmPosRemove()\n  const [removeSide, setRemoveSide] = useState('both')\n  const [isFixedDisplayTokenA, setIsFixedDisplayTokenA] = useState(false)\n  const [dlmmPreRemoveLoading, setDlmmPreRemoveLoading] = useState(false)\n\n  const [displayTokenALock, setDisplayTokenALock] = useState(false)\n  const [displayTokenBLock, setDisplayTokenBLock] = useState(false)\n\n  const { slippage } = useGlobalStore()\n  const [slideValue, setSlideValue] = useState('0')\n  const navigate = useNavigate()\n\n  const [uuid, setUuid] = useState<string>('')\n  const uuidRef = useRef<string>('')\n  const { currentAccount } = useAccountStore()\n\n  useEffect(() => {\n    console.log('🚀 ~ usePosAddPage ~ uuid:', uuid)\n    uuidRef.current = uuid\n  }, [uuid])\n\n  const currentPosLiquidityData = useMemo(() => {\n    return dlmmPosLiquidityData[dlmmCurrentPosBaseInfo?.id]\n  }, [dlmmCurrentPosBaseInfo?.id, dlmmPosLiquidityData])\n\n  const dlmmCurrentPosPoolsOriginalData = useMemo(() => {\n    return dlmmPosPoolsOriginalData[dlmmCurrentPosBaseInfo?.dlmmPool]\n  }, [dlmmCurrentPosBaseInfo?.id, dlmmPosPoolsOriginalData])\n\n  const currentPosPoolsRelatedData = useMemo(() => {\n    return dlmmPosPoolsRelatedData[dlmmCurrentPosBaseInfo?.id]\n  }, [dlmmPosPoolsRelatedData])\n  console.log('🚀🚀🚀 ~ useDlmmPosRemovePage.ts:55 ~ currentPosPoolsRelatedData ~ currentPosPoolsRelatedData:', currentPosPoolsRelatedData)\n\n  const [tokenBalanceA, setTokenBalanceA] = useState('')\n  const [tokenBalanceB, setTokenBalanceB] = useState('')\n  const [totalTokenBalanceA, setTotalTokenBalanceA] = useState('')\n  const [totalTokenBalanceB, setTotalTokenBalanceB] = useState('')\n  const isReverse = useMemo(() => {\n    return dlmmCurrentPosBaseInfo?.isReverse\n  }, [dlmmCurrentPosBaseInfo])\n  console.log('🚀🚀🚀 ~ useDlmmPosRemovePage.ts:74 ~ isReverse ~ isReverse:', isReverse)\n\n  const [posMinPrice, setPosMinPrice] = useState<string | undefined>()\n  const [posMaxPrice, setPosMaxPrice] = useState<string | undefined>()\n  const [posMinPriceBinId, setPosMinPriceBinId] = useState<number | undefined>()\n  const [posMaxPriceBinId, setPosMaxPriceBinId] = useState<number | undefined>()\n  const [amountInfo, setAmountInfo] = useState<BinLiquidityInfo>()\n\n  /**\n   * 切换removeSide时，更新minPriceData和maxPriceData 和 minBinIdLimit、maxBinIdLimit\n   */\n  useEffect(() => {\n    if (currentPosPoolsRelatedData && amountInfo && dlmmCurrentPosPoolsOriginalData && tokenA && tokenB && binStep) {\n      const activeBin = dlmmCurrentPosPoolsOriginalData.active_bin\n      const maxBin = amountInfo.bins[amountInfo.bins.length - 1]\n      const minBin = amountInfo.bins[0]\n      if (removeSide === 'both') {\n        setPosMinPrice(dlmmPosDetailDirect ? currentPosPoolsRelatedData.minPrice : currentPosPoolsRelatedData.minPriceResever)\n        setPosMaxPrice(dlmmPosDetailDirect ? currentPosPoolsRelatedData.maxPrice : currentPosPoolsRelatedData.maxPriceResever)\n        setPosMinPriceBinId(currentPosPoolsRelatedData.minPriceBinId)\n        setPosMaxPriceBinId(currentPosPoolsRelatedData.maxPriceBinId)\n        initMinMaxPriceAndAmount()\n      } else if (removeSide === 'onlyA') {\n        let tempMinBinId = activeBin.bin_id + 1\n        // [active_id+1,max]\n        if (tempMinBinId <= maxBin.bin_id) {\n          const maxPriceData = buildPriceData(maxBin.bin_id, false)!\n          const minPriceData = buildPriceData(tempMinBinId, true)!\n\n          if (isReverse !== dlmmPosDetailDirect) {\n            setPosMinPrice(minPriceData.displayPrice.toString())\n            setPosMaxPrice(maxPriceData.displayPrice.toString())\n          } else {\n            setPosMinPrice(maxPriceData.displayReversePrice.toString())\n            setPosMaxPrice(minPriceData.displayReversePrice.toString())\n          }\n\n          setPosMaxPriceBinId(maxBin.bin_id)\n          setPosMinPriceBinId(tempMinBinId)\n          setMaxPriceData(maxPriceData)\n          setMinPriceData(minPriceData)\n        } else {\n          // 全是b的情况 就暂时不做限制\n          setPosMinPrice(dlmmPosDetailDirect ? currentPosPoolsRelatedData.minPrice : currentPosPoolsRelatedData.minPriceResever)\n          setPosMaxPrice(dlmmPosDetailDirect ? currentPosPoolsRelatedData.maxPrice : currentPosPoolsRelatedData.maxPriceResever)\n          setPosMaxPriceBinId(currentPosPoolsRelatedData.maxPriceBinId)\n          setPosMinPriceBinId(currentPosPoolsRelatedData.minPriceBinId)\n          initMinMaxPriceAndAmount()\n        }\n      } else if (removeSide === 'onlyB') {\n        const isReverse = dlmmCurrentPosBaseInfo.isReverse\n        let tempMaxBinId = activeBin.bin_id - 1\n        // [min,active_id-1]\n        if (tempMaxBinId >= minBin.bin_id) {\n          const maxPriceData = buildPriceData(tempMaxBinId, false)!\n          const minPriceData = buildPriceData(minBin.bin_id, true)!\n\n          if (isReverse !== dlmmPosDetailDirect) {\n            setPosMinPrice(minPriceData.displayPrice.toString())\n            setPosMaxPrice(maxPriceData.displayPrice.toString())\n          } else {\n            setPosMinPrice(maxPriceData.displayReversePrice.toString())\n            setPosMaxPrice(minPriceData.displayReversePrice.toString())\n          }\n\n          setPosMaxPriceBinId(tempMaxBinId)\n          setPosMinPriceBinId(minBin.bin_id)\n          setMaxPriceData(maxPriceData)\n          setMinPriceData(minPriceData)\n        } else {\n          // 全是a的情况\n          setPosMinPrice(dlmmPosDetailDirect ? currentPosPoolsRelatedData.minPrice : currentPosPoolsRelatedData.minPriceResever)\n          setPosMaxPrice(dlmmPosDetailDirect ? currentPosPoolsRelatedData.maxPrice : currentPosPoolsRelatedData.maxPriceResever)\n          setPosMinPriceBinId(dlmmCurrentPosBaseInfo.lowerBinId)\n          setPosMaxPriceBinId(dlmmCurrentPosBaseInfo.upperBinId)\n          initMinMaxPriceAndAmount()\n        }\n      }\n    }\n  }, [removeSide, JSON.stringify(amountInfo), dlmmPosDetailDirect])\n\n  const initMinMaxPriceAndAmount = () => {\n    if (!tokenA || !tokenB) return\n\n    handleSlider([dlmmCurrentPosBaseInfo.lowerBinId, dlmmCurrentPosBaseInfo.upperBinId])\n\n    setTokenBalanceA(currentPosLiquidityData?.displayCoinAmountA)\n    setTokenBalanceB(currentPosLiquidityData?.displayCoinAmountB)\n    setTotalTokenBalanceA(currentPosLiquidityData?.displayCoinAmountA)\n    setTotalTokenBalanceB(currentPosLiquidityData?.displayCoinAmountB)\n  }\n\n  const [tokenAmountA, setTokenAmountA] = useState('')\n  const [tokenAmountB, setTokenAmountB] = useState('')\n\n  // tokenA、B\n  const displayTokenA = useMemo(() => {\n    return dlmmCurrentPosBaseInfo?.displayTokenA\n  }, [dlmmCurrentPosBaseInfo?.displayTokenA])\n  const displayTokenB = useMemo(() => {\n    return dlmmCurrentPosBaseInfo?.displayTokenB\n  }, [dlmmCurrentPosBaseInfo?.displayTokenB])\n\n  const tokenA = useMemo(() => {\n    return dlmmCurrentPosBaseInfo?.tokenA\n  }, [dlmmCurrentPosBaseInfo?.tokenA])\n\n  const tokenB = useMemo(() => {\n    return dlmmCurrentPosBaseInfo?.tokenB\n  }, [dlmmCurrentPosBaseInfo?.tokenB])\n\n  const binStep = useMemo(() => {\n    return dlmmCurrentPosPoolsOriginalData?.binStep\n  }, [dlmmCurrentPosPoolsOriginalData])\n\n  const [isInitPrice, setIsInitPrice] = useState(false)\n  useDeepCompareEffect(() => {\n    if (currentPosLiquidityData && tokenA && tokenB && binStep && !isInitPrice) {\n      initMinMaxPriceAndAmount()\n      setIsInitPrice(true)\n    }\n    setTokenBalanceA(currentPosLiquidityData?.displayCoinAmountA)\n    setTokenBalanceB(currentPosLiquidityData?.displayCoinAmountB)\n    setTotalTokenBalanceA(currentPosLiquidityData?.displayCoinAmountA)\n    setTotalTokenBalanceB(currentPosLiquidityData?.displayCoinAmountB)\n  }, [isReverse, currentPosLiquidityData, tokenA, tokenB, binStep])\n\n  const { buildPriceData } = useMinMaxPriceData(tokenA, tokenB, binStep)\n\n  const [isDirect, setIsDirect] = useState(true)\n\n  const baseToken = useMemo(() => {\n    return isDirect ? displayTokenA : displayTokenB\n  }, [displayTokenA, displayTokenB, isDirect])\n\n  const quoteToken = useMemo(() => {\n    return isDirect ? displayTokenB : displayTokenA\n  }, [displayTokenA, displayTokenB, isDirect])\n\n  const handlePriceAction = useCallback(\n    (type: 'Add' | 'Sub', price: PriceDataType) => {\n      const isMinPrice = price.type === 'lower'\n      console.log('🚀 ~ handlePriceAction ~ price:', {\n        price,\n        isMinPrice,\n        dlmmPosDetailDirect,\n        type,\n        minPriceData,\n        maxPriceData,\n        dlmmCurrentPosBaseInfo\n      })\n\n      if (\n        binStep !== undefined &&\n        tokenA !== undefined &&\n        tokenB !== undefined &&\n        posMinPrice &&\n        posMaxPrice &&\n        posMinPriceBinId &&\n        posMaxPriceBinId\n      ) {\n        const { bin_id, price: _price } = handleActionBinPrice(price, binStep, tokenA?.decimals, tokenB?.decimals, type)\n\n        if (isMinPrice) {\n          if ((type === 'Sub' && bin_id < posMinPriceBinId) || (type === 'Add' && bin_id > posMaxPriceBinId)) {\n            const priceData = buildPriceData(posMinPriceBinId, isMinPrice)\n            if (priceData) {\n              setMinPriceData(priceData)\n            }\n          } else {\n            const priceData = buildPriceData(bin_id, isMinPrice)\n            if (priceData) {\n              setMinPriceData(priceData)\n            }\n          }\n        } else {\n          if ((type === 'Sub' && bin_id < posMinPriceBinId) || (type === 'Add' && bin_id > posMaxPriceBinId)) {\n            const priceData = buildPriceData(posMaxPriceBinId, isMinPrice)\n            if (priceData) {\n              setMaxPriceData(priceData)\n            }\n          } else {\n            const priceData = buildPriceData(bin_id, isMinPrice)\n            if (priceData) {\n              setMaxPriceData(priceData)\n            }\n          }\n        }\n        // getRemoveTokenBalance()\n      }\n    },\n    [binStep, tokenA, tokenB, posMinPrice, posMaxPrice, dlmmPosDetailDirect]\n  )\n\n  // 余额\n  // const tokenBalanceA = useMemo(() => {\n  //   return currentPosLiquidityData?.displayCoinAmountA\n  // }, [currentPosLiquidityData])\n\n  // const tokenBalanceB = useMemo(() => {\n  //   return currentPosLiquidityData?.displayCoinAmountB\n  // }, [currentPosLiquidityData])\n\n  // 价值\n  const tokenAmountValueA = getTokenAmountValue(displayTokenA?.coin_type, tokenAmountA)\n  const tokenAmountValueB = getTokenAmountValue(displayTokenB?.coin_type, tokenAmountB)\n\n  const showTokenALock = useMemo(() => {\n    return getTokenALock(dlmmCurrentPosBaseInfo, dlmmCurrentPosPoolsOriginalData)\n  }, [dlmmCurrentPosPoolsOriginalData?.active_id, dlmmCurrentPosBaseInfo])\n\n  const showTokenBLock = useMemo(() => {\n    return getTokenBLock(dlmmCurrentPosBaseInfo, dlmmCurrentPosPoolsOriginalData)\n  }, [dlmmCurrentPosPoolsOriginalData?.active_id, dlmmCurrentPosBaseInfo])\n\n  const showDisplayTokenALock = (!dlmmCurrentPosBaseInfo?.isReverse ? showTokenALock : showTokenBLock) || displayTokenALock\n  const showDisplayTokenBLock = (!dlmmCurrentPosBaseInfo?.isReverse ? showTokenBLock : showTokenALock) || displayTokenBLock\n\n  const resetInputAmount = () => {\n    setTokenAmountA('')\n    setTokenAmountB('')\n    setSlideValue('0')\n    setBinInfos({} as BinLiquidityInfo)\n    setPreCalcError(undefined)\n  }\n\n  useEffect(() => {\n    if ((!tokenAmountA || !+tokenAmountA) && (!tokenAmountB || !+tokenAmountB)) {\n      setBinInfos({} as BinLiquidityInfo)\n      setPreCalcError(undefined)\n    }\n  }, [tokenAmountA, tokenAmountB])\n\n  const handleAmountChange = (amount: string, isFixedDisplayTokenA: boolean) => {\n    console.log('🚀🚀🚀 ~ useDlmmPosremovePage.ts:91 ~ handleAmountChange ~ isFixedDisplayTokenA:', isFixedDisplayTokenA)\n    console.log('🚀🚀🚀 ~ useDlmmPosremovePage.ts:91 ~ handleAmountChange ~ amount:', amount)\n    if (!amount) {\n      resetInputAmount()\n    }\n    setIsFixedDisplayTokenA(isFixedDisplayTokenA)\n    if (isFixedDisplayTokenA) {\n      setTokenAmountA(amount)\n    } else {\n      setTokenAmountB(amount)\n    }\n\n    if (+amount) {\n      const uuid = v4()\n      setUuid(uuid)\n\n      console.log('🚀 ~ handleAmountChange ~ params:', amount)\n      // debouncedDlmmPreRemove(amount, isFixedDisplayTokenA, uuid)\n    } else {\n      if (isFixedDisplayTokenA) {\n        setTokenAmountB('')\n      } else {\n        setTokenAmountA('')\n      }\n      setSlideValue('0')\n    }\n  }\n\n  const debouncedDlmmPreRemove = async (\n    amount: string,\n    isFixedDisplayTokenA: boolean,\n    isDisplayTokenALock: boolean = false,\n    isDisplayTokenBLock: boolean = false\n  ) => {\n    if (!dlmmPreRemoveLoading) {\n      setDlmmPreRemoveLoading(true)\n    }\n    const { liquidityShares } = dlmmCurrentPosBaseInfo\n    console.log('🚀🚀🚀 ~ useDlmmPosRemovePage.ts:230 ~ debouncedDlmmPreRemove ~ dlmmCurrentPosBaseInfo:', dlmmCurrentPosBaseInfo)\n    console.log('🚀🚀🚀 ~ useDlmmPosRemovePage.ts:231 ~ debouncedDlmmPreRemove ~ minPriceData.displayPrice:', minPriceData)\n    const lowerBinId = minPriceData?.binId\n    const upperBinId = maxPriceData?.binId\n    const bins = amountInfo?.bins.filter(\n      bin =>\n        bin.bin_id >= lowerBinId &&\n        bin.bin_id <= upperBinId &&\n        (removeSide !== 'both' ? bin.bin_id !== dlmmCurrentPosPoolsOriginalData.active_bin.bin_id : true)\n    )\n    console.log('🚀🚀🚀 ~ useDlmmPosRemovePage.ts:240 ~ debouncedDlmmPreRemove ~ bins:', bins)\n    console.log('🚀🚀🚀 ~ useDlmmPosRemovePage.ts:230 ~ debouncedDlmmPreRemove ~ liquidityShares:', liquidityShares)\n    console.log(\n      '🚀🚀🚀 ~ useDlmmPosRemovePage.ts:230 ~ debouncedDlmmPreRemove ~ lowerBinId:',\n      dlmmCurrentPosPoolsOriginalData,\n      lowerBinId,\n      removeSide,\n      dlmmCurrentPosBaseInfo.lowerBinId\n    )\n    const { bin_step, bin_manager, active_id } = dlmmCurrentPosPoolsOriginalData\n    // const active_bin = await dlmmSdk?.Pool.getBinInfo(bin_manager.bin_manager_handle, active_id, bin_step)\n    // console.log('🚀🚀🚀 ~ useDlmmPosRemovePage.ts:233 ~ debouncedDlmmPreRemove ~ active_bin:', active_bin)\n    // const binsInfo = parseLiquidityShares(liquidityShares, bin_step, lowerBinId, active_bin)\n    // console.log('🚀🚀🚀 ~ useDlmmPosRemovePage.ts:235 ~ debouncedDlmmPreRemove ~ binsInfo:', binsInfo)\n\n    if (isFixedDisplayTokenA) {\n      if (d(amount).gt(tokenBalanceA)) {\n        setTokenAmountA(tokenBalanceA)\n        return\n      }\n    } else {\n      if (d(amount).gt(tokenBalanceB)) {\n        setTokenAmountB(tokenBalanceB)\n        return\n      }\n    }\n\n    const params = {\n      bins,\n      activeId: active_id,\n      fixAmountA: isReverse ? !isFixedDisplayTokenA : isFixedDisplayTokenA,\n      coinAmount: d(amount)\n        .mul(10 ** (isFixedDisplayTokenA ? displayTokenA?.decimals : displayTokenB?.decimals))\n        .toString(),\n      isOnlyA: removeSide === 'both' ? undefined : removeSide == 'onlyA',\n      tokenA,\n      tokenB,\n      isReverse\n    }\n    console.log('🚀🚀🚀 ~ useDlmmPosremovePage.ts:91 ~ preRemove ~ params:', params, displayTokenA, displayTokenB)\n    const { displayCoinAmountA, displayCoinAmountB, binInfos } = await dlmmPreRemove(params)\n    console.log(\n      '🚀🚀🚀 ~ useDlmmPosRemovePage.ts:253 ~ debouncedDlmmPreRemove ~ binInfos:',\n      binInfos,\n      displayCoinAmountA,\n      displayCoinAmountB,\n      tokenBalanceA,\n      tokenBalanceB\n    )\n    console.log('binInfos-binInfos', binInfos, tokenBalanceA, tokenBalanceB)\n\n    try {\n      setBinInfos(binInfos as BinLiquidityInfo)\n      setPreCalcError(undefined)\n      let slide\n      let isSelectMax = false\n      if (removeSide === 'both') {\n        if (isFixedDisplayTokenA) {\n          if (amount && d(amount).gte(tokenBalanceA)) {\n            slide = '100'\n            isSelectMax = true\n          } else {\n            slide = formatNumber(d(displayCoinAmountA).div(tokenBalanceA).mul(100).toNumber(), 2, true, Decimal.ROUND_DOWN)\n          }\n        } else {\n          if (amount && d(amount).gte(tokenBalanceB)) {\n            slide = '100'\n            isSelectMax = true\n          } else {\n            slide = formatNumber(d(displayCoinAmountB).div(tokenBalanceB).mul(100).toNumber(), 2, true, Decimal.ROUND_DOWN)\n          }\n        }\n      }\n      if (isReverse ? removeSide === 'onlyB' : removeSide === 'onlyA') {\n        if (amount && d(amount).gte(tokenBalanceA)) {\n          slide = '100'\n          isSelectMax = true\n        } else {\n          slide = formatNumber(d(displayCoinAmountA).div(tokenBalanceA).mul(100).toNumber(), 2, true, Decimal.ROUND_DOWN)\n        }\n      }\n      if (isReverse ? removeSide === 'onlyA' : removeSide === 'onlyB') {\n        if (amount && d(amount).gte(tokenBalanceB)) {\n          slide = '100'\n          isSelectMax = true\n        } else {\n          slide = formatNumber(d(displayCoinAmountB).div(tokenBalanceB).mul(100).toNumber(), 2, true, Decimal.ROUND_DOWN)\n        }\n      }\n\n      console.log('🚀🚀🚀 ~ useDlmmPosRemovePage.ts:267 ~ debouncedDlmmPreRemove ~ slide:', slide)\n      if (isSelectMax) {\n        setSlideValue('100')\n        if (removeSide === 'both') {\n          if (!showDisplayTokenALock) setTokenAmountA(tokenBalanceA as string)\n          setTokenAmountB(tokenBalanceB as string)\n        }\n        if (isReverse ? removeSide === 'onlyB' : removeSide === 'onlyA') {\n          setTokenAmountA(tokenBalanceA as string)\n          setTokenAmountB('')\n        }\n        if (isReverse ? removeSide === 'onlyA' : removeSide === 'onlyB') {\n          setTokenAmountB(tokenBalanceB as string)\n          setTokenAmountA('')\n        }\n      } else {\n        setSlideValue(String(slide))\n        if (removeSide === 'both') {\n          if (isFixedDisplayTokenA) {\n            if (!isDisplayTokenBLock) {\n              setTokenAmountB(displayCoinAmountB || '')\n            }\n          } else {\n            if (!isDisplayTokenALock) {\n              setTokenAmountA(displayCoinAmountA || '')\n            }\n          }\n        }\n      }\n      console.log('🚀🚀🚀 ~ useDlmmPosremovePage.ts:141 ~ debouncedDlmmPreRemove ~ displayCoinAmountA:', displayCoinAmountA)\n      console.log('🚀🚀🚀 ~ useDlmmPosremovePage.ts:142 ~ debouncedDlmmPreRemove ~ displayCoinAmountB:', displayCoinAmountB)\n    } catch (error) {\n      console.log('🚀🚀🚀 ~ useDlmmPosremovePage.ts:566 ~ debouncedDlmmPreRemove ~ error:', error)\n      if (String(error).includes('is less than 1')) {\n        setPreCalcError('amountTooSmall')\n        setBinInfos({} as BinLiquidityInfo)\n      } else {\n        setPreCalcError(undefined)\n      }\n    }\n  }\n\n  const [isRemoveLoading, setIsRemoveLoading] = useState(false)\n  const { batchSignAndExecuteTransaction } = useTransaction()\n  const { dlmmMevProtect, maxCapForGas, transactionMode, customGasPrice } = useGlobalStore()\n  const { fetchAccountBalance } = useAccountBalance()\n  const changeSlideFun = async (num: string) => {\n    console.log('🚀🚀🚀 ~ useDlmmPosremovePage.ts:173 ~ changeSlideFun ~ num:', num)\n    setSlideValue(num)\n\n    const handleChangeAmount = (amountA: string, amountB: string) => {\n      if (removeSide === 'both') {\n        if (!showDisplayTokenALock) {\n          setTokenAmountA(amountA)\n        } else {\n          setTokenAmountA('')\n        }\n        if (!showDisplayTokenBLock) {\n          setTokenAmountB(amountB)\n        } else {\n          setTokenAmountB('')\n        }\n      }\n      if (removeSide === 'onlyA') {\n        if (isReverse) {\n          if (!showDisplayTokenBLock) {\n            setTokenAmountB(amountB)\n          } else {\n            setTokenAmountB('')\n          }\n          setTokenAmountA('')\n        } else {\n          if (!showDisplayTokenALock) {\n            setTokenAmountA(amountA)\n          } else {\n            setTokenAmountA('')\n          }\n          setTokenAmountB('')\n        }\n      }\n      if (removeSide === 'onlyB') {\n        if (isReverse) {\n          if (!showDisplayTokenALock) {\n            setTokenAmountA(amountA)\n          } else {\n            setTokenAmountA('')\n          }\n          setTokenAmountB('')\n        } else {\n          if (!showDisplayTokenBLock) {\n            setTokenAmountB(amountB)\n          } else {\n            setTokenAmountB('')\n          }\n          setTokenAmountA('')\n        }\n      }\n    }\n\n    if (Number(num) == 100) {\n      handleChangeAmount(tokenBalanceA, tokenBalanceB)\n    } else if (Number(num) == 0) {\n      resetInputAmount()\n    } else {\n      try {\n        // const lowerBinId = BinUtils.getBinIdFromPrice(removeComma(minPriceData?.displayPrice), binStep, false, tokenA?.decimals, tokenB?.decimals)\n        // const upperBinId = BinUtils.getBinIdFromPrice(removeComma(maxPriceData?.displayPrice), binStep, false, tokenA?.decimals, tokenB?.decimals)\n        // console.log('🚀🚀🚀 ~ useDlmmPosRemovePage.ts:299 ~ changeSlideFun ~ lowerBinId:', lowerBinId)\n        // console.log('🚀🚀🚀 ~ useDlmmPosRemovePage.ts:299 ~ changeSlideFun ~ upperBinId:', upperBinId)\n        // console.log('🚀🚀🚀 ~ useDlmmPosRemovePage.ts:299 ~ changeSlideFun ~ amountInfo:', amountInfo)\n        // console.log(tokenBalanceA, tokenBalanceB, isFixedDisplayTokenA, num, minPriceData, maxPriceData, 'tokenBalanceA test')\n        // const bins = amountInfo?.bins.filter(\n        //   bin =>\n        //     bin.bin_id >= lowerBinId &&\n        //     bin.bin_id <= upperBinId &&\n        //     (removeSide !== 'both' ? bin.bin_id !== dlmmCurrentPosPoolsOriginalData.active_bin.bin_id : true)\n        // )\n\n        const _tokenAmountA = d(tokenBalanceA).mul(d(num).div(100)).toString()\n        const _tokenAmountB = d(tokenBalanceB).mul(d(num).div(100)).toString()\n        handleChangeAmount(_tokenAmountA, _tokenAmountB)\n\n        // console.log('🚀🚀🚀 ~ useDlmmPosremovePage.ts:203 ~ changeSlideFun ~ calculateOption:', calculateOption)\n      } catch (error) {\n        console.log('🚀🚀🚀 ~ useDlmmPosremovePage.ts:188 ~ changeSlideFun ~ error:', error)\n      }\n    }\n  }\n\n  // 重新计算 (刷新按钮价格更新时 交易失败时)\n  const reCalculateResult = () => {\n    console.log(tokenAmountB, tokenAmountA, isFixedDisplayTokenA, 'reCalculateResult')\n    if ((tokenAmountA || tokenAmountB) && isAvailableObject(dlmmCurrentPosBaseInfo)) {\n      console.log('🚀 ~ reCalculateResult ~ isFixedDisplayTokenA:', {\n        slideValue,\n        isFixedDisplayTokenA,\n        tokenAmountA,\n        tokenAmountB\n      })\n      if (slideValue === '--') return\n      let amount\n      let fixedDisplayTokenA = isFixedDisplayTokenA\n      switch (removeSide) {\n        case 'both':\n          if (fixedDisplayTokenA) {\n            amount = tokenAmountA\n            if (!+amount) {\n              fixedDisplayTokenA = !fixedDisplayTokenA\n              amount = tokenAmountB\n            }\n          } else {\n            amount = tokenAmountB\n            if (!+amount) {\n              fixedDisplayTokenA = !fixedDisplayTokenA\n              amount = tokenAmountA\n            }\n          }\n          break\n        case 'onlyA':\n          amount = isReverse ? tokenAmountB : tokenAmountA\n          break\n        case 'onlyB':\n          amount = isReverse ? tokenAmountA : tokenAmountB\n          break\n      }\n\n      if (amount && +amount) {\n        debouncedDlmmPreRemove(amount, fixedDisplayTokenA, displayTokenALock, displayTokenBLock)\n      }\n    } else {\n      setTokenAmountA('')\n      setTokenAmountB('')\n    }\n  }\n\n  const { getList } = useGetDlmmRelatedPools()\n\n  const isAllRemove = useMemo(() => {\n    if (d(slideValue).eq(100) && binInfos?.bins && dlmmCurrentPosBaseInfo.totalShareLiquidity) {\n      const removeLiquidityAmount = binInfos.bins.reduce(\n        (acc: string, curr: BinAmount) =>\n          d(acc)\n            .add(curr.liquidity || '0')\n            .toString(),\n        '0'\n      )\n      return d(removeLiquidityAmount).eq(dlmmCurrentPosBaseInfo.totalShareLiquidity)\n    }\n    return false\n  }, [slideValue, binInfos?.bins, dlmmCurrentPosBaseInfo?.totalShareLiquidity])\n\n  useEffect(() => {\n    if (isAllRemove) {\n      setIsAutoClaim(true)\n    }\n  }, [isAllRemove])\n\n  const toRemove = async () => {\n    let TrackDataParams: any = {}\n\n    try {\n      setIsRemoveLoading(true)\n\n      const parameter: DlmmPosRemoveLiquidityParams | DlmmPosClosePositionParams = {\n        dlmmPool: dlmmCurrentPosBaseInfo.dlmmPool,\n        coinTypeA: dlmmCurrentPosBaseInfo.coinTypeA,\n        coinTypeB: dlmmCurrentPosBaseInfo.coinTypeB,\n        positionId: dlmmCurrentPosBaseInfo?.id,\n        rewardCoins: dlmmCurrentPosPoolsOriginalData.reward_manager.rewards.map(ele => ele.reward_coin),\n        binInfos,\n        slippage: slippage as number,\n        activeId: dlmmCurrentPosPoolsOriginalData?.active_id,\n        binStep: dlmmCurrentPosPoolsOriginalData?.binStep,\n        slideValue: Number(slideValue) / 100\n      }\n\n      console.log('🚀🚀🚀 ~ useDlmmPosAddPage.ts:244 ~ toAdd ~ params:', {\n        dlmmCurrentPosPoolsOriginalData,\n        dlmmCurrentPosBaseInfo,\n        parameter,\n        isAllRemove,\n        slideValue,\n        removeSide,\n        binInfos\n      })\n\n      const { binInfos: cBinsInfo, rewardCoins, ...trackData } = parameter\n      TrackDataParams = {\n        ...trackData\n      }\n      if (rewardCoins?.length > 0) {\n        TrackDataParams['rewardCoins'] = JSON.stringify(rewardCoins)\n      }\n\n      const txs = isAllRemove ? [getDlmmPosClosePositionPayload(parameter)] : getDlmmPosRemoveLiquidityPayload(parameter, isAutoClaim)\n\n      const msafeParams = {\n        action: MsafeTransactionSubType.DlmmRemoveLiquidity,\n        txbParams: parameter\n      }\n      // tx?.setGasBudget(Number(toDecimalsAmount(5, 9)))\n      const toastInfo = {\n        getShowInfo: (status: TransactionStatusType, balanceChanges?: Record<string, BalanceChanges>, _: any, otherParams?: any) => {\n          const description =\n            'Remove ' +\n            [formatDescription(tokenAmountA, displayTokenA?.symbol), formatDescription(tokenAmountB, displayTokenB?.symbol)]\n              .filter(Boolean)\n              .join(' and ')\n\n          const info: CommonTypeInfo = {\n            modalDescriptionText: description,\n            toastTitleText: description\n          }\n          const isPartialSuccess = otherParams?.failedResults && otherParams.failedResults.length > 0 && otherParams.successResults.length > 0\n          if (status === 'rejected') {\n            if (isPartialSuccess) {\n              if (otherParams.failedResults.length > 0) {\n                info.toastDescriptionContent = `Failed transactions ${otherParams.failedResults.length} /${txs.length} `\n              }\n            }\n          }\n          if (status === 'success') {\n            let amountAF = tokenAmountA\n            let amountBF = tokenAmountB\n\n            if (balanceChanges) {\n              amountAF = getBalanceChanges(balanceChanges, displayTokenA) || tokenAmountA\n              amountBF = getBalanceChanges(balanceChanges, displayTokenB) || tokenAmountB\n            }\n            if (txs.length > 1) {\n              info.toastDescriptionContent = `Completed transactions ${txs.length} /${txs.length} `\n            } else {\n              info.toastDescriptionContent = ''\n            }\n            info.modalDescriptionText = ''\n            info.toastTitleText = 'Remove Liquidity Successful'\n          }\n\n          return info\n        }\n      }\n\n      if (txs.length === 1) {\n        transactionConfirmation(toastInfo)\n      }\n      console.log('🚀🚀🚀 ~ useDlmmPosAddPage.ts:299 ~ toAdd ~ tx:', toastInfo, txs)\n      const res = await batchSignAndExecuteTransaction(txs, toastInfo, {\n        useMev: dlmmMevProtect,\n        // useFastMode: transactionMode === 'Fast Mode',\n        maxCapForGas,\n        customGasPrice,\n        msafeParams,\n        trackData: {\n          params: TrackDataParams,\n          actionType: 'dlmm',\n          action: isAllRemove ? 'dlmmRemoveAllLiquidity' : 'dlmmDecreaseLiquidity'\n        }\n      })\n\n      if (res && res.successResults.length > 0) {\n        // 重新拿数据\n        fetchAccountBalance()\n        resetInputAmount()\n        await getList({ poolId: dlmmCurrentPosBaseInfo?.dlmmPool })\n        getDlmmCurrentPosBaseInfo(currentAccount?.address, dlmmCurrentPosBaseInfo?.id as string, true)\n        if (isAllRemove) {\n          navigate('/pools?tab=positions')\n        } else {\n          const dlmmPosBaseInfo: DlmmPosBaseInfo = await getDlmmCurrentPosBaseInfo(currentAccount?.address, dlmmCurrentPosBaseInfo?.id, true)\n          getRemoveTokenBalance(true, dlmmPosBaseInfo)\n          // getCurrentPosHistory(currentPosBaseInfo?.id as string, currentPosBaseInfo?.posId as string)\n        }\n      } else {\n        if (dlmmCurrentPosBaseInfo) {\n          // 如果失败，大概率都是池子价格变化了，需要重新计算\n          getDlmmCurrentPosBaseInfo(currentAccount?.address, dlmmCurrentPosBaseInfo?.id, true).then(res => {\n            console.log('🚀 ~ toClaim ~ res:', res)\n            reCalculateResult()\n          })\n        }\n      }\n      setIsRemoveLoading(false)\n    } catch (error) {\n      console.log('🚀🚀🚀 ~ useDlmmPosRemovePage.ts:448 ~ toRemove ~ error:', error)\n    } finally {\n      setIsRemoveLoading(false)\n    }\n  }\n\n  const handleRemove = () => {\n    toRemove()\n  }\n\n  // const amountInfo: BinLiquidityInfo = useMemo(() => {\n  //   if (dlmmCurrentPosBaseInfo && dlmmCurrentPosPoolsOriginalData) {\n  //     const { liquidityShares } = dlmmCurrentPosBaseInfo\n  //     const { active_bin } = dlmmCurrentPosPoolsOriginalData\n  //     return parseLiquidityShares(liquidityShares, binStep, dlmmCurrentPosBaseInfo.lowerBinId, active_bin)\n  //   }\n  //   return []\n  // }, [dlmmCurrentPosBaseInfo.liquidityShares, dlmmCurrentPosPoolsOriginalData, binStep])\n\n  useEffect(() => {\n    const minBinId = minPriceData?.binId\n    const maxBinId = maxPriceData?.binId\n    let rangeAmountInfo\n    if (amountInfo?.bins?.[0]?.bin_id === minBinId && amountInfo?.bins?.at(-1)?.bin_id === maxBinId) {\n      rangeAmountInfo = amountInfo\n    } else {\n      const minIndex = amountInfo?.bins?.findIndex(item => item?.bin_id >= minBinId)\n      const maxIndex = amountInfo?.bins?.findIndex(item => item?.bin_id >= maxBinId)\n\n      const rangeBins = amountInfo?.bins?.slice(minIndex, maxIndex! + 1)\n      rangeAmountInfo = {\n        amount_a: rangeBins?.reduce((sum, current) => d(sum).plus(current?.amount_a).toString(), '0'),\n        amount_b: rangeBins?.reduce((sum, current) => d(sum).plus(current?.amount_b).toString(), '0'),\n        bins: rangeBins\n      }\n    }\n    if (removeSide === 'both') {\n      setTokenBalanceA(\n        d(isReverse ? rangeAmountInfo?.amount_b : rangeAmountInfo?.amount_a)\n          .div(10 ** displayTokenA?.decimals)\n          .toString()\n      )\n      setTokenBalanceB(\n        d(isReverse ? rangeAmountInfo?.amount_a : rangeAmountInfo?.amount_b)\n          .div(10 ** displayTokenB?.decimals)\n          .toString()\n      )\n    } else {\n      const totalAmountA = rangeAmountInfo?.bins\n        ?.filter(item => item?.amount_a !== '0' && item?.amount_b === '0')\n        ?.reduce((sum, current) => d(sum).plus(current?.amount_a).toString(), '0')\n      const totalAmountB = rangeAmountInfo?.bins\n        ?.filter(item => item?.amount_a === '0' && item?.amount_b !== '0')\n        ?.reduce((sum, current) => d(sum).plus(current?.amount_b).toString(), '0')\n      setTokenBalanceA(\n        d(isReverse ? totalAmountB : totalAmountA)\n          .div(10 ** displayTokenA?.decimals)\n          .toString()\n      )\n      setTokenBalanceB(\n        d(isReverse ? totalAmountA : totalAmountB)\n          .div(10 ** displayTokenB?.decimals)\n          .toString()\n      )\n    }\n  }, [amountInfo, removeSide, displayTokenA, displayTokenB, minPriceData, maxPriceData, isReverse])\n\n  // 价格变动 重新计算余额\n  useDebounceEffect(() => {\n    if (dlmmCurrentPosPoolsOriginalData && dlmmCurrentPosBaseInfo) {\n      getRemoveTokenBalance(true, dlmmCurrentPosBaseInfo, dlmmCurrentPosPoolsOriginalData)\n    }\n  }, [dlmmCurrentPosPoolsOriginalData, dlmmCurrentPosBaseInfo])\n\n  const getRemoveTokenBalance = async (\n    isInitBalance = false,\n    posBaseInfo = dlmmCurrentPosBaseInfo,\n    posPoolsOriginalData = dlmmCurrentPosPoolsOriginalData\n  ) => {\n    let posLiquidityInfo\n    if (posBaseInfo && posPoolsOriginalData) {\n      const { liquidityShares } = posBaseInfo\n      const { active_bin } = posPoolsOriginalData\n      posLiquidityInfo = parseLiquidityShares(liquidityShares, binStep, posBaseInfo.lowerBinId, active_bin)\n      console.log('🚀🚀🚀 ~ useDlmmPosRemovePage.ts:476 ~ useDlmmPosRemovePage ~ posLiquidityInfo:', posLiquidityInfo)\n      setAmountInfo(posLiquidityInfo)\n    }\n    if (!posLiquidityInfo) return\n    const decimalsA = tokenA.decimals || 0\n    const decimalsB = tokenB.decimals || 0\n\n    const formatAmount = (amount: string, decimals: number) => bnToAmount(amount.toString(), decimals)\n\n    const setBalances = (rawAmountA: string, rawAmountB: string) => {\n      const amountA = formatAmount(rawAmountA, decimalsA)\n      const amountB = formatAmount(rawAmountB, decimalsB)\n      console.log('🚀🚀🚀 ~ useDlmmPosRemovePage.ts:855 ~ setBalances ~ amountA:', amountA)\n      console.log('🚀🚀🚀 ~ useDlmmPosRemovePage.ts:855 ~ setBalances ~ amountB:', amountB)\n      setTokenBalanceA(isReverse ? amountB : amountA)\n      setTokenBalanceB(isReverse ? amountA : amountB)\n    }\n\n    if (isInitBalance) {\n      setBalances(posLiquidityInfo.amount_a.toString(), posLiquidityInfo.amount_b.toString())\n    }\n  }\n\n  const handleSlider = (val: number[]) => {\n    if (!tokenA || !tokenB || !binStep) return\n    const lowerBinId = val[0]\n    const upperBinId = val[1]\n\n    const maxPriceData = buildPriceData(upperBinId, false)\n    if (maxPriceData) {\n      setMaxPriceData(maxPriceData)\n    }\n\n    const minPriceData = buildPriceData(lowerBinId, true)\n    if (minPriceData) {\n      setMinPriceData(minPriceData)\n    }\n  }\n\n  useDebounceEffect(\n    () => {\n      if (isAvailableObject(minPriceData) && isAvailableObject(maxPriceData)) {\n        reCalculateResult()\n      }\n    },\n    [maxPriceData, minPriceData, displayTokenALock, displayTokenBLock, isFixedDisplayTokenA, tokenAmountA, tokenAmountB],\n    { wait: 300 }\n  )\n\n  const changeSlideValue = (value: string | number) => {\n    console.log('🚀 ~ changeSlideValue ~ value:', value)\n    if (value == 'MAX' || value == 100) {\n      changeSlideFun('100')\n    } else {\n      changeSlideFun(String((value + '').split('%')[0]))\n    }\n  }\n\n  const btnStatusText = useMemo(() => {\n    const btnInfo: {\n      text?: string\n      disabled: boolean\n    } = {\n      text: 'Remove',\n      disabled: false\n    }\n    console.log(showDisplayTokenALock, showDisplayTokenBLock, tokenAmountA, tokenAmountB, tokenBalanceA, tokenBalanceB, 'btnStatusText')\n    if (!currentAccount?.address) {\n      btnInfo.text = 'Connect Wallet'\n      btnInfo.disabled = false\n      return btnInfo\n    }\n\n    // 判断输入\n    if (!+tokenAmountA && !+tokenAmountB) {\n      btnInfo.text = 'Enter an amount'\n      btnInfo.disabled = true\n      return btnInfo\n    }\n    //判断余额\n    if (!showDisplayTokenALock && tokenAmountA && d(tokenAmountA).gt(tokenBalanceA || 0)) {\n      btnInfo.disabled = true\n      btnInfo.text = `Invalid Amount`\n      return btnInfo\n    }\n    //判断余额\n    if (!showDisplayTokenBLock && tokenAmountB && d(tokenAmountB).gt(tokenBalanceB || 0)) {\n      btnInfo.disabled = true\n      btnInfo.text = `Invalid Amount`\n      return btnInfo\n    }\n\n    if (showDisplayTokenALock && !+tokenAmountB) {\n      btnInfo.text = 'Enter an amount'\n      btnInfo.disabled = true\n      return btnInfo\n    }\n    if (showDisplayTokenBLock && !+tokenAmountA) {\n      btnInfo.text = 'Enter an amount'\n      btnInfo.disabled = true\n      return btnInfo\n    }\n\n    return btnInfo\n  }, [tokenAmountA, tokenAmountB, tokenBalanceA, tokenBalanceB, currentAccount?.address, showDisplayTokenALock, showDisplayTokenBLock])\n\n  const isActive = useMemo(() => {\n    return currentPosPoolsRelatedData?.currentStatus === 'Active'\n  }, [currentPosPoolsRelatedData?.currentStatus])\n\n  useEffect(() => {\n    if (isActive) {\n      if (dlmmCurrentPosPoolsOriginalData?.active_id > maxPriceData?.binId && dlmmCurrentPosPoolsOriginalData?.active_id > minPriceData?.binId) {\n        setDisplayTokenALock(!isReverse)\n        setDisplayTokenBLock(isReverse)\n      }\n      if (dlmmCurrentPosPoolsOriginalData?.active_id < maxPriceData?.binId && dlmmCurrentPosPoolsOriginalData?.active_id < minPriceData?.binId) {\n        setDisplayTokenALock(isReverse)\n        setDisplayTokenBLock(!isReverse)\n      }\n      if (dlmmCurrentPosPoolsOriginalData?.active_id <= maxPriceData?.binId && dlmmCurrentPosPoolsOriginalData?.active_id >= minPriceData?.binId) {\n        setDisplayTokenALock(false)\n        setDisplayTokenBLock(false)\n      }\n    }\n  }, [dlmmCurrentPosPoolsOriginalData?.active_id, minPriceData?.binId, maxPriceData?.binId, isActive, isReverse])\n\n  useEffect(() => {\n    if (showDisplayTokenALock) {\n      setTokenAmountA('')\n      setIsFixedDisplayTokenA(false)\n    }\n    if (showDisplayTokenBLock) {\n      setTokenAmountB('')\n      setIsFixedDisplayTokenA(true)\n    }\n    if (!showDisplayTokenALock && !showDisplayTokenBLock) {\n      if (tokenAmountA && !tokenAmountB) {\n        setIsFixedDisplayTokenA(true)\n      }\n      if (tokenAmountB && !tokenAmountA) {\n        setIsFixedDisplayTokenA(false)\n      }\n    }\n  }, [showDisplayTokenALock, showDisplayTokenBLock])\n\n  useEffect(() => {\n    if (dlmmPreRemoveLoading) {\n      setTimeout(() => {\n        setDlmmPreRemoveLoading(false)\n      }, 500)\n    }\n  }, [dlmmPreRemoveLoading])\n\n  useDebounceEffect(\n    () => {\n      if ((binInfos?.amount_a || binInfos?.amount_b) && !dlmmPreRemoveLoading && dlmmCurrentPosBaseInfo) {\n        const removeAmountA = +binInfos?.amount_a\n        const removeAmountB = +binInfos?.amount_b\n        const amountA = dlmmCurrentPosBaseInfo.isReverse ? removeAmountB : removeAmountA\n        const amountB = dlmmCurrentPosBaseInfo.isReverse ? removeAmountA : removeAmountB\n        const tokenADecimals = dlmmCurrentPosBaseInfo.isReverse ? dlmmCurrentPosBaseInfo?.tokenB?.decimals : dlmmCurrentPosBaseInfo?.tokenA?.decimals\n        const tokenBDecimals = dlmmCurrentPosBaseInfo.isReverse ? dlmmCurrentPosBaseInfo?.tokenA?.decimals : dlmmCurrentPosBaseInfo?.tokenB?.decimals\n        const amountAF = fromDecimalsAmount(amountA, tokenADecimals)\n        const amountBF = fromDecimalsAmount(amountB, tokenBDecimals)\n        setTokenAmountAfterA(d(totalTokenBalanceA).sub(amountAF).toString())\n        setTokenAmountAfterB(d(totalTokenBalanceB).sub(amountBF).toString())\n      } else {\n        setTokenAmountAfterA('')\n        setTokenAmountAfterB('')\n      }\n    },\n    [binInfos?.amount_a, binInfos?.amount_b, dlmmPreRemoveLoading, totalTokenBalanceA, totalTokenBalanceB],\n    { wait: 200 }\n  )\n\n  useEffect(() => {\n    return () => {\n      resetInputAmount()\n      setTokenAmountAfterA('')\n      setTokenAmountAfterB('')\n    }\n  }, [])\n\n  const numBins = useMemo(() => {\n    if (minPriceData?.binId !== undefined && maxPriceData?.binId !== undefined) {\n      return getNumBins(minPriceData!.binId, maxPriceData!.binId)\n    } else {\n      return '--'\n    }\n  }, [minPriceData?.binId, maxPriceData?.binId])\n\n  return {\n    displayTokenA,\n    displayTokenB,\n    tokenBalanceA,\n    tokenBalanceB,\n    posMinPriceBinId,\n    posMaxPriceBinId,\n    tokenAmountValueA,\n    tokenAmountValueB,\n    showDisplayTokenALock,\n    showDisplayTokenBLock,\n    handleAmountChange,\n    tokenAmountA,\n    tokenAmountB,\n    removeSide,\n    setRemoveSide,\n    dlmmPreRemoveLoading,\n    isFixedDisplayTokenA,\n    handleRemove,\n    isRemoveLoading,\n    changeSlideFun,\n    slideValue,\n    minPriceData,\n    maxPriceData,\n    handlePriceAction,\n    posMinPrice,\n    posMaxPrice,\n    handleSlider,\n    baseToken,\n    quoteToken,\n    isDirect,\n    getRemoveTokenBalance,\n    amountInfo,\n    changeSlideValue,\n    btnStatusText,\n    isActive,\n    displayTokenALock,\n    displayTokenBLock,\n    setTokenAmountA,\n    setTokenAmountB,\n    setSlideValue,\n    isReverse,\n    dlmmCurrentPosPoolsOriginalData,\n    currentPosPoolsRelatedData,\n    isAllRemove,\n    tokenA,\n    tokenB,\n    numBins\n  }\n}\n","import useDlmmPosRemovePage from '@/hooks/dlmm-position/useDlmmPosRemovePage'\nimport useDlmmPosDetailStore from '@/store/dlmm-position/detail'\nimport { CetusMenu, CetusTooltip, SelectTab, TradeInput } from '@cetus/design'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { HTextLabelBox, Icon } from '@cetus/ui-kit'\nimport { addComma, d, formatCurrency, isAvailableObject, removeComma, textEllipses } from '@cetus/utils'\nimport { Button, Center, HStack, MenuButton, MenuItem, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useMemo, useState } from 'react'\nimport { AutoClaimCheckBox } from '../../common/AutoClaimCheckBox'\nimport { PositionSlider } from '../../details/RemoveBlock'\nimport DlmmPositionSelectRange from './DlmmPositionSelectRange'\n\nexport default function DlmmPositionRemove() {\n  const {\n    displayTokenA,\n    displayTokenB,\n    tokenBalanceA,\n    tokenBalanceB,\n    showDisplayTokenALock,\n    showDisplayTokenBLock,\n    handleAmountChange,\n    tokenAmountA,\n    tokenAmountB,\n    dlmmPreRemoveLoading,\n    isFixedDisplayTokenA,\n    removeSide,\n    setRemoveSide,\n    isRemoveLoading,\n    handleRemove,\n    changeSlideFun,\n    slideValue,\n    minPriceData,\n    maxPriceData,\n    handlePriceAction,\n    posMinPrice,\n    posMaxPrice,\n    handleSlider,\n    baseToken,\n    quoteToken,\n    isDirect,\n    getRemoveTokenBalance,\n    changeSlideValue,\n    btnStatusText,\n    isActive,\n    displayTokenALock,\n    isAllRemove,\n    setTokenAmountA,\n    setTokenAmountB,\n    setSlideValue,\n    isReverse,\n    currentPosPoolsRelatedData,\n    dlmmCurrentPosPoolsOriginalData,\n    posMinPriceBinId,\n    posMaxPriceBinId,\n    tokenA,\n    tokenB,\n    numBins\n  } = useDlmmPosRemovePage()\n  const { isApp } = useWindowWidth()\n  const { showPositionSelectRange, dlmmPosDetailDirect, isAutoClaim, setIsAutoClaim } = useDlmmPosDetailStore()\n  const { getTokenAmountValue } = useTokenPrice()\n  const [open, setOpen] = useState(false)\n  const tabList = useMemo(\n    () => [\n      {\n        label: 'Remove Both',\n        value: 'both'\n      },\n      {\n        label: `Only ${isApp ? textEllipses(displayTokenA?.symbol, 8) : displayTokenA?.symbol.slice(0, 8)}`,\n        value: isReverse ? 'onlyB' : 'onlyA',\n        afterIcon: {\n          xlinkHref: '#icon-icon_tips'\n        },\n        tooltip: `You will remove ${textEllipses(displayTokenA?.symbol, 8)} from bins with prices out of the current price bin.Tokens in the current price bin will remain in the pool`\n      },\n      {\n        label: `Only ${isApp ? textEllipses(displayTokenB?.symbol, 8) : displayTokenB?.symbol.slice(0, 8)}`,\n        value: isReverse ? 'onlyA' : 'onlyB',\n        afterIcon: {\n          xlinkHref: '#icon-icon_tips'\n        },\n        tooltip: `You will remove ${textEllipses(displayTokenB?.symbol, 8)} from bins with prices out of the current price bin.Tokens in the current price bin will remain in the pool`\n      }\n    ],\n    [displayTokenA, displayTokenB, isReverse, isApp]\n  )\n\n  const [isInitBalance, setIsInitBalance] = useState(true)\n  useEffect(() => {\n    if (isAvailableObject(minPriceData) && isAvailableObject(maxPriceData) && isInitBalance) {\n      setIsInitBalance(false)\n      getRemoveTokenBalance(true)\n    }\n  }, [minPriceData, maxPriceData, removeSide])\n\n  const showSwitchTab = useMemo(() => {\n    if (isActive && currentPosPoolsRelatedData && dlmmCurrentPosPoolsOriginalData) {\n      const activeBin = dlmmCurrentPosPoolsOriginalData.active_bin\n      if (currentPosPoolsRelatedData.maxPriceBinId === activeBin.bin_id && currentPosPoolsRelatedData.minPriceBinId === activeBin.bin_id) {\n        return false\n      }\n      return true\n    }\n    return false\n  }, [isActive, currentPosPoolsRelatedData, dlmmCurrentPosPoolsOriginalData])\n\n  const isShowError = useMemo(() => {\n    if (!minPriceData?.price || !maxPriceData?.price) return false\n\n    return d(removeComma(minPriceData.price)).gt(removeComma(maxPriceData.price))\n  }, [minPriceData?.price, maxPriceData?.price])\n\n  const amountAValue = useMemo(() => {\n    return getTokenAmountValue(displayTokenA?.coin_type, tokenAmountA)\n  }, [displayTokenA?.coin_type, tokenAmountA])\n\n  const amountBValue = useMemo(() => {\n    return getTokenAmountValue(displayTokenB?.coin_type, tokenAmountB)\n  }, [displayTokenB?.coin_type, tokenAmountB])\n\n  const totalAmountValue = useMemo(() => {\n    return d(amountAValue).add(amountBValue).toString()\n  }, [amountAValue, amountBValue])\n\n  return (\n    <VStack w=\"100%\" alignItems=\"flex-start\" justifyContent=\"flex-start\" gap=\"24px\">\n      {showSwitchTab &&\n        (!isApp ? (\n          <SelectTab\n            type=\"outlineTab\"\n            isActive={(current, tab) => current === tab.value}\n            wrapStyle={{\n              w: '100%',\n              border: 'none',\n              bg: 'bg_secondary',\n              h: '42px',\n              justifyContent: 'flex-end',\n              p: '4px'\n            }}\n            itemStyle={{\n              w: { base: '33.33%', lg: '33.33%' },\n              fontSize: '14px',\n              padding: '8px',\n              borderRadius: '8px',\n              gap: '2px'\n            }}\n            tabList={tabList}\n            currentTab={removeSide}\n            handleChangeTab={(item: any) => {\n              setRemoveSide(item?.value)\n              if (item?.value !== removeSide) {\n                setTokenAmountA('')\n                setTokenAmountB('')\n                setSlideValue('0')\n              }\n            }}\n          />\n        ) : (\n          <RemoveMenus\n            isOpen={open}\n            value={removeSide}\n            onClose={() => setOpen(false)}\n            onClick={() => setOpen(!open)}\n            tabList={tabList}\n            onChange={value => {\n              setRemoveSide(value)\n              if (value !== removeSide) {\n                setTokenAmountA('')\n                setTokenAmountB('')\n                setSlideValue('0')\n              }\n            }}\n          />\n        ))}\n      <VStack w=\"100%\" gap=\"16px\" align=\"flex-start\">\n        {showPositionSelectRange && (\n          <DlmmPositionSelectRange\n            isShowError={isShowError}\n            isReverse={isReverse}\n            posMinPriceBinId={posMinPriceBinId}\n            posMaxPriceBinId={posMaxPriceBinId}\n            minPriceData={minPriceData}\n            maxPriceData={maxPriceData}\n            posMinPrice={posMinPrice}\n            posMaxPrice={posMaxPrice}\n            handlePriceAction={handlePriceAction}\n            handleSlider={handleSlider}\n            baseToken={baseToken}\n            quoteToken={quoteToken}\n            tokenA={tokenA}\n            tokenB={tokenB}\n            binStep={currentPosPoolsRelatedData?.binStep}\n          />\n        )}\n        <Text fontSize=\"14px\" color=\"primary_gray\" fontWeight=\"500\" mb=\"-8px\">\n          Remove Amounts\n        </Text>\n      </VStack>\n\n      <VStack w=\"100%\" mt=\"4px\" flexDir={dlmmPosDetailDirect ? 'column' : 'column-reverse'}>\n        {(removeSide == 'both' || (isReverse ? removeSide == 'onlyB' : removeSide == 'onlyA')) && (\n          <TradeInput\n            token={displayTokenA}\n            balance={tokenBalanceA}\n            value={tokenAmountA}\n            amountValue={amountAValue}\n            placeholder=\"0.0\"\n            balanceLabel=\"Available\"\n            loading={!isFixedDisplayTokenA && dlmmPreRemoveLoading}\n            lock={{\n              isLock: showDisplayTokenALock,\n              style: {\n                height: 'calc(100% + 2px)'\n              }\n            }}\n            needRemainBalance={false}\n            onChange={value => {\n              handleAmountChange(value, true)\n            }}\n            wrapStyle={{\n              h: '110px'\n            }}\n            rightJustify=\"space-around\"\n          />\n        )}\n        {(removeSide == 'both' || (isReverse ? removeSide == 'onlyA' : removeSide == 'onlyB')) && (\n          <TradeInput\n            token={displayTokenB}\n            balance={tokenBalanceB}\n            value={tokenAmountB}\n            amountValue={amountBValue}\n            balanceLabel=\"Available\"\n            placeholder=\"0.0\"\n            loading={isFixedDisplayTokenA && dlmmPreRemoveLoading}\n            lock={{\n              isLock: showDisplayTokenBLock,\n              style: {\n                height: 'calc(100% + 2px)'\n              }\n            }}\n            needRemainBalance={false}\n            onChange={value => {\n              handleAmountChange(value, false)\n            }}\n            wrapStyle={{\n              h: '110px'\n            }}\n            rightJustify=\"space-around\"\n          />\n        )}\n      </VStack>\n\n      <PositionSlider\n        sliderBg=\"bg_secondary\"\n        percentage={slideValue}\n        onChange={(value: string | number) => changeSlideValue(value)}\n        textFontSize=\"20px\"\n        sliderTrackHeight=\"8px\"\n      />\n\n      <HStack w=\"100%\" mt=\"-8px\" mb=\"-8px\">\n        <AutoClaimCheckBox\n          isDisabled={isAllRemove}\n          checked={isAutoClaim}\n          onChange={() => {\n            setIsAutoClaim(!isAutoClaim)\n          }}\n        />\n      </HStack>\n\n      <Button\n        w=\"100%\"\n        height=\"52px\"\n        fontWeight=\"500\"\n        fontSize=\"18px\"\n        isLoading={isRemoveLoading || dlmmPreRemoveLoading}\n        onClick={handleRemove}\n        isDisabled={btnStatusText.disabled}\n      >\n        {btnStatusText.text}\n      </Button>\n      <VStack w=\"100%\" gap=\"16px\" mt=\"-8px\">\n        <HTextLabelBox\n          label=\"Remove Amount\"\n          isLoading={dlmmPreRemoveLoading}\n          value={formatCurrency(totalAmountValue, 2)}\n          labelStyle={{\n            fontSize: '14px',\n            height: '16px'\n          }}\n          valueStyle={{\n            fontSize: '14px'\n          }}\n        />\n        <HTextLabelBox\n          label={\n            <HStack gap=\"4px\">\n              <Text>Num Bins</Text>\n              <CetusTooltip tooltip=\"Total bins in this position or actions.\">\n                <Center cursor=\"pointer\">\n                  <Icon xlinkHref=\"#icon-icon_tips\" svgW=\"20px\" svgH=\"20px\" />\n                </Center>\n              </CetusTooltip>\n            </HStack>\n          }\n          value={addComma(numBins)}\n          labelStyle={{\n            fontSize: '14px'\n          }}\n          valueStyle={{\n            fontSize: '14px'\n          }}\n        />\n      </VStack>\n    </VStack>\n  )\n}\n\nconst RemoveMenus = ({\n  isOpen,\n  onClose,\n  onChange,\n  onClick,\n  tabList,\n  value\n}: {\n  isOpen: boolean\n  onClose: () => void\n  onClick: () => void\n  tabList: any[]\n  value: string\n  onChange: (value: string) => void\n}) => {\n  const currentTab = useMemo(() => tabList.find((tab: any) => tab.value === value), [tabList, value])\n  return (\n    <CetusMenu\n      isLazy\n      isOpen={isOpen}\n      onClose={onClose}\n      defaultMaxH=\"315px\"\n      listProps={{\n        p: '8px',\n        borderRadius: '12px',\n        w: 'calc(100vw - 40px)',\n        overflowY: 'auto'\n      }}\n    >\n      <MenuButton\n        as={Button}\n        variant=\"unstyled\"\n        bg=\"bg_secondary\"\n        cursor=\"pointer\"\n        p=\"3px 8px 3px 8px\"\n        borderRadius=\"8px\"\n        border=\"1px solid\"\n        borderColor=\"border\"\n        mb=\"-12px\"\n        h=\"40px\"\n        w=\"100%\"\n        onClick={onClick}\n      >\n        <HStack width=\"100%\" justifyContent=\"space-between\" gap=\"2px\">\n          <HStack>\n            <Text color=\"text_caption\" fontSize=\"14px\">\n              {currentTab?.label}\n            </Text>\n            {currentTab?.tooltip && (\n              <CetusTooltip\n                tooltip={\n                  <Text fontSize=\"12px\" lineHeight=\"20px\">\n                    {currentTab?.tooltip}\n                  </Text>\n                }\n              >\n                <Center>\n                  <Icon xlinkHref=\"#icon-icon_tips\" />\n                </Center>\n              </CetusTooltip>\n            )}\n          </HStack>\n\n          <Icon\n            transition=\"transform 0.5s\"\n            transform={isOpen ? 'rotate(180deg)' : 'rotate(0deg)'}\n            xlinkHref=\"#icon-icon_arrow\"\n            svgFill={isOpen ? 'text_caption' : 'text_paragraph'}\n            fontSize=\"12px\"\n          />\n        </HStack>\n      </MenuButton>\n      <VStack w=\"100%\" gap=\"8px\" p=\"0\">\n        {tabList.map(item => (\n          <MenuItem\n            key={item.value}\n            w=\"100%\"\n            p=\"0 12px\"\n            h=\"40px\"\n            borderRadius=\"8px\"\n            border=\"1px solid\"\n            bg=\"bg_six\"\n            fontSize=\"14px\"\n            textAlign=\"center\"\n            borderColor={value === item?.value ? 'primary' : 'border'}\n            color={value === item.value ? 'primary' : 'text_caption4'}\n            fontWeight=\"500\"\n            onClick={() => {\n              onChange(item?.value)\n            }}\n          >\n            {item.label}\n          </MenuItem>\n        ))}\n      </VStack>\n    </CetusMenu>\n  )\n}\n","import Slippage from '@/components/common/Slippage'\nimport useDlmmPosDetailStore from '@/store/dlmm-position/detail'\nimport { SelectTab } from '@cetus/design'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { HStack, VStack } from '@chakra-ui/react'\nimport DlmmPositionAdd from './DlmmPositionAdd'\nimport DlmmPositionRemove from './DlmmPositionRemove'\n\nexport default function DlmmPositionAction() {\n  const { isApp } = useWindowWidth()\n  const tabList = [\n    {\n      label: 'Increase',\n      value: 'increase'\n    },\n    {\n      label: 'Remove',\n      value: 'remove'\n    }\n  ]\n  const { currentPosDetailTab, setCurrentPosDetailTab } = useDlmmPosDetailStore()\n\n  return (\n    <VStack w=\"100%\" p={{ base: '0 8px 16px', lg: '0px 16px 16px' }} borderRadius=\"16px\" bg=\"card_bg\" gap=\"16px\">\n      <HStack w=\"100%\" justifyContent=\"space-between\">\n        <SelectTab\n          type=\"borderTab\"\n          bg=\"none\"\n          wrapStyle={{\n            w: { base: 'auto', lg: '100%' },\n            h: '60px',\n            border: 'none',\n            bg: 'none'\n          }}\n          itemStyle={{\n            w: { base: '50%', lg: 'unset' },\n            fontSize: '16px',\n            mr: '28px'\n          }}\n          tabList={tabList}\n          currentTab={currentPosDetailTab == 'increase' ? 'Increase' : 'Remove'}\n          handleChangeTab={(item: any) => {\n            setCurrentPosDetailTab(item?.value)\n          }}\n        />\n        {<Slippage slippageType=\"liquidity\" poolType=\"dlmm\" />}\n      </HStack>\n      {currentPosDetailTab == 'increase' ? <DlmmPositionAdd /> : <DlmmPositionRemove />}\n    </VStack>\n  )\n}\n","import useDlmmPositionStore from '@/store/dlmm-position'\nimport useDlmmPosDetailStore from '@/store/dlmm-position/detail'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { d, formatCurrency, isAvailableObject, textEllipses } from '@cetus/utils'\nimport { HStack, Progress, Skeleton, Stack, Text, VStack } from '@chakra-ui/react'\nimport { useMemo } from 'react'\nimport { TokenAmountAndAfter } from '../../clmm/details/DetailStatsInfo'\n\nexport default function DlmmPositionLiquidity() {\n  const { isApp } = useWindowWidth()\n  const { getTokenAmountValue } = useTokenPrice()\n  const { dlmmCurrentPosBaseInfo, dlmmPosLiquidityData } = useDlmmPositionStore()\n  const currentDlmmPosLiquidity = useMemo(() => {\n    return dlmmPosLiquidityData?.[dlmmCurrentPosBaseInfo?.id]\n  }, [dlmmCurrentPosBaseInfo?.id, dlmmPosLiquidityData])\n\n  const { tokenAmountAfterA, tokenAmountAfterB } = useDlmmPosDetailStore()\n\n  const isLoaded = useMemo(() => {\n    return isAvailableObject(dlmmCurrentPosBaseInfo) && isAvailableObject(currentDlmmPosLiquidity)\n  }, [dlmmCurrentPosBaseInfo, currentDlmmPosLiquidity])\n\n  const amountValue = useMemo(() => {\n    if (\n      currentDlmmPosLiquidity &&\n      currentDlmmPosLiquidity?.displayCoinAmountA !== '--' &&\n      currentDlmmPosLiquidity?.displayCoinAmountB !== '--' &&\n      dlmmCurrentPosBaseInfo\n    ) {\n      console.log('🚀 ~ file: DlmmPositionLiquidity.tsx:24 ~ amountValue ~ currentDlmmPosLiquidity:', currentDlmmPosLiquidity)\n      return formatCurrency(\n        d(getTokenAmountValue(dlmmCurrentPosBaseInfo?.displayTokenA?.coin_type, currentDlmmPosLiquidity?.displayCoinAmountA))\n          .plus(getTokenAmountValue(dlmmCurrentPosBaseInfo?.displayTokenB?.coin_type, currentDlmmPosLiquidity?.displayCoinAmountB))\n          .toString(),\n        2\n      )\n    }\n    return '$--'\n  }, [currentDlmmPosLiquidity?.displayCoinAmountA, currentDlmmPosLiquidity?.displayCoinAmountB])\n\n  return (\n    <VStack gap={{ base: '8px', lg: '20px' }} bg=\"bg_secondary\" w=\"100%\" p={{ base: '16px 8px 8px', lg: '20px 20px 0' }} borderRadius=\"16px\">\n      <Stack flexDir={{ base: 'column', lg: 'row' }} w=\"100%\" justify={{ base: 'center', lg: 'space-between' }} gap={{ base: '24px', lg: '0' }}>\n        <Stack\n          flexDir={{ base: 'row', lg: 'column' }}\n          align={{ base: 'center', lg: 'flex-start' }}\n          justify={{ base: 'space-between', lg: 'center' }}\n          gap=\"4px\"\n        >\n          <Text color=\"primary_gray\">Liquidity</Text>\n\n          <Skeleton isLoaded={isLoaded}>\n            <Text color=\"text_caption\" fontSize=\"16px\" textDecorationColor=\"primary_gray\" lineHeight=\"16px\">\n              {amountValue}\n            </Text>\n          </Skeleton>\n        </Stack>\n        <HStack gap=\"4px\" pb=\"12px\" justifyContent=\"center\">\n          <Skeleton isLoaded={isLoaded}>\n            <HStack gap=\"4px\">\n              <Text color=\"text_caption\">{textEllipses(dlmmCurrentPosBaseInfo?.displayTokenA?.symbol)}</Text>\n              <Text color=\"primary\">{currentDlmmPosLiquidity?.displayPercentA}%</Text>\n            </HStack>\n          </Skeleton>\n          <Progress\n            w={{ base: '100px', lg: '200px' }}\n            h=\"4px\"\n            value={currentDlmmPosLiquidity?.displayPercentA}\n            bg=\"quote_green\"\n            sx={{\n              'div[role=\"progressbar\"]': {\n                bg: 'primary'\n              }\n            }}\n          />\n          <Skeleton isLoaded={isLoaded}>\n            <HStack gap=\"4px\">\n              <Text color=\"primary_green\">{currentDlmmPosLiquidity?.displayPercentB}%</Text>\n              <Text color=\"text_caption\">{textEllipses(dlmmCurrentPosBaseInfo?.displayTokenB?.symbol)}</Text>\n            </HStack>\n          </Skeleton>\n        </HStack>\n      </Stack>\n      <HStack\n        gap={{ base: '8px', lg: '0px' }}\n        p={{ base: '8px 0px', lg: '8px 40px 0px' }}\n        w=\"100%\"\n        justify=\"space-between\"\n        flexDirection={{ base: 'column', lg: 'row' }}\n      >\n        <TokenAmountAndAfter\n          label=\"Base\"\n          token={dlmmCurrentPosBaseInfo?.displayTokenA}\n          amount={currentDlmmPosLiquidity?.displayCoinAmountA}\n          afterAmount={tokenAmountAfterA}\n          align={isApp ? 'flex-end' : 'flex-start'}\n        />\n        <TokenAmountAndAfter\n          label=\"Quote\"\n          token={dlmmCurrentPosBaseInfo?.displayTokenB}\n          amount={currentDlmmPosLiquidity?.displayCoinAmountB}\n          afterAmount={tokenAmountAfterB}\n          align=\"flex-end\"\n        />\n      </HStack>\n    </VStack>\n  )\n}\n","import useDlmmPositionStore from '@/store/dlmm-position'\nimport { PosReward } from '@/types'\nimport { DlmmPosBaseInfo } from '@/types/dlmm'\nimport { useAccountBalance } from '@cetus/hooks'\nimport { CommonTypeInfo } from '@cetus/types'\nimport { useMemo, useState } from 'react'\nimport useTransaction from '../common/useTransaction'\nimport useDlmmPosCollect from './useDlmmPosCollect'\nimport useGetDlmmPosFeeAndReward from './useGetDlmmPosFeeAndReward'\nimport useGetDlmmPosPool from './useGetDlmmPosPool'\n\nexport default function useDlmmPosClaim() {\n  const { collectRewardAndFeePayload } = useDlmmPosCollect()\n  const { dlmmCurrentPosBaseInfo, dlmmPosRewardsData, dlmmPosFeeData, dlmmPosPoolsOriginalData } = useDlmmPositionStore()\n  const [isClaimLoading, setIsClaimLoading] = useState(false)\n  const { signAndExecuteTransaction } = useTransaction()\n  const { fetchAccountBalance } = useAccountBalance()\n  const { getDlmmPosPoolsOriginalObj } = useGetDlmmPosPool()\n  const { getDlmmPosFeeAndReward } = useGetDlmmPosFeeAndReward()\n\n  const dlmmCurrentPosRewardData = useMemo(() => {\n    return dlmmPosRewardsData?.[dlmmCurrentPosBaseInfo?.id]\n  }, [dlmmCurrentPosBaseInfo?.id, dlmmPosRewardsData])\n\n  const dlmmCurPosContractPoolInfo = useMemo(() => {\n    return dlmmPosPoolsOriginalData?.[dlmmCurrentPosBaseInfo?.dlmmPool]\n  }, [dlmmPosPoolsOriginalData, dlmmCurrentPosBaseInfo?.dlmmPool])\n\n  const toClaimDlmmPosition = async (positionInfo: any) => {\n    console.log(positionInfo, 'toClaimDlmmPosition')\n    let TrackDataParams: any = {}\n    try {\n      setIsClaimLoading(true)\n      const { dlmmPool, id, coinTypeA, coinTypeB } = positionInfo\n      const currentPosRewardData = dlmmPosRewardsData?.[id]\n      const params = {\n        dlmmPool,\n        positionId: id,\n        rewardCoins: (currentPosRewardData || [])?.map((reward: PosReward) => reward.coin_address),\n        coinTypeA,\n        coinTypeB\n      }\n\n      // 埋点params\n      const { rewardCoins, ...trackData } = params\n      TrackDataParams = {\n        ...trackData,\n        rewardCoins: JSON.stringify(rewardCoins)\n      }\n\n      const tx = collectRewardAndFeePayload([params])\n      const res = await signAndExecuteTransaction(\n        tx,\n        {\n          getShowInfo: () => {\n            const info: CommonTypeInfo = {\n              modalDescriptionText: 'Claim Yield',\n              toastTitleText: 'Claim'\n            }\n            return info\n          }\n        },\n        {\n          trackData: {\n            params: TrackDataParams,\n            actionType: 'dlmm',\n            action: 'dlmmPosClaim'\n          }\n        }\n      )\n      console.log('🚀 ~ toClaimYield ~ res:', res)\n      if (res) {\n        // 重新拿列表数据\n        const poolInfo = dlmmCurPosContractPoolInfo || (await getDlmmPosPoolsOriginalObj([dlmmCurrentPosBaseInfo as DlmmPosBaseInfo]))\n\n        console.log('🚀 ~ toClaim ~ poolInfo:', poolInfo)\n\n        // 延迟刷新数据\n        setTimeout(() => {\n          fetchAccountBalance()\n          getDlmmPosFeeAndReward([positionInfo], {\n            [poolInfo?.poolAddress]: poolInfo\n          })\n          // getCurrentPosHistory(id, posId) // 如需历史记录\n        }, 2000)\n      }\n      setIsClaimLoading(false)\n    } catch (error) {\n      setIsClaimLoading(false)\n      console.log('🚀🚀🚀 ~ useDlmmPosClaim.ts:29 ~ toClaimDlmmPosition ~ error:', error)\n    }\n  }\n\n  return {\n    toClaimDlmmPosition,\n    isClaimLoading\n  }\n}\n","import { DlmmPositionHistoricalProfitPath } from '@/apis/path'\nimport { useFetch } from '@cetus/hooks'\n\nexport default function useGetDlmmPositionHistoricalProfit() {\n  const { fetchByApi } = useFetch()\n  const getDlmmPositionHistoricalProfit = async (position_id: string) => {\n    try {\n      const res = await fetchByApi(DlmmPositionHistoricalProfitPath, 'GET', {\n        position_id\n      })\n      if (res?.FeeA) {\n        return res\n      }\n    } catch (error) {\n      console.log('🚀🚀🚀 ~ useGetClmmPositionHistoricalProfit.ts:15 ~ getClmmPositionHistoricalProfit ~ error:', error)\n    }\n  }\n  return { getDlmmPositionHistoricalProfit }\n}\n","import useDlmmPosClaim from '@/hooks/dlmm-position/useDlmmPosClaim'\nimport useCalculatePendingYield from '@/hooks/position/useCalculatePendingYield'\nimport useGetDlmmPositionHistoricalProfit from '@/hooks/position/useGetDlmmPositionHistoricalProfit'\nimport useDlmmPositionStore from '@/store/dlmm-position'\nimport useDlmmPosDetailStore from '@/store/dlmm-position/detail'\nimport { showNewVersionApr } from '@/types'\nimport { SelectTab } from '@cetus/design'\nimport { Tab } from '@cetus/design/src/components/common/SelectTab'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { formatCurrency, removeComma } from '@cetus/utils'\nimport { d } from '@cetusprotocol/common-sdk'\nimport { Button, HStack, Skeleton, Stack, Text, VStack } from '@chakra-ui/react'\nimport { useDeepCompareEffect } from 'ahooks'\nimport { uniq } from 'lodash-es'\nimport React, { useEffect, useMemo, useState } from 'react'\nimport { TokenAmountAndAfter } from '../../clmm/details/DetailStatsInfo'\n\nexport default function DlmmPositionPendingYield({ dailyEarnUSDDisplay, originResult }: { dailyEarnUSDDisplay: string; originResult: any }) {\n  const {\n    dlmmCurrentPosBaseInfo,\n    dlmmPosFeeData,\n    dlmmPosRewardsData,\n    dlmmPosFeeDataLoading,\n    dlmmPosFeeAndRewardsLoading,\n    dlmmPosRewardsDataLoading,\n    dlmmCurrentPosBaseInfoLoading,\n    dlmmPosLiquidityData,\n    dlmmPosPoolsOriginalData\n  } = useDlmmPositionStore()\n  const dlmmCurrentPosFeeData = useMemo(() => {\n    return dlmmPosFeeData?.[dlmmCurrentPosBaseInfo?.id]\n  }, [dlmmPosFeeData, dlmmCurrentPosBaseInfo])\n  const dlmmCurrentPosRewardData = useMemo(() => {\n    const result = dlmmPosRewardsData?.[dlmmCurrentPosBaseInfo?.id]\n    return result?.filter((item: any, index: number) => {\n      const emissionsEveryDay = d(\n        dlmmPosPoolsOriginalData?.[dlmmCurrentPosBaseInfo?.dlmmPool]?.reward_manager?.rewards?.[index]?.emissions_per_day || 0\n      )\n      return emissionsEveryDay.gt(0) || d(item?.display_amount_owed || 0).gt(0)\n    })\n  }, [dlmmPosRewardsData, dlmmCurrentPosBaseInfo, dlmmPosPoolsOriginalData])\n\n  const { toClaimDlmmPosition, isClaimLoading } = useDlmmPosClaim()\n  const { tokenAmountAfterA, tokenAmountAfterB, isAutoClaim } = useDlmmPosDetailStore()\n\n  const [totalYield, setTotalYield] = useState('0')\n  const { calculatePendingYield } = useCalculatePendingYield()\n\n  useEffect(() => {\n    if (dlmmCurrentPosBaseInfo && dlmmPosFeeData && dlmmPosRewardsData) {\n      const { total } = calculatePendingYield([dlmmCurrentPosBaseInfo], {}, {}, {}, dlmmPosFeeData, dlmmPosRewardsData)\n\n      setTotalYield(total)\n    }\n  }, [dlmmCurrentPosBaseInfo, dlmmPosFeeData, dlmmPosRewardsData])\n\n  const isInputValue = useMemo(() => {\n    if (isAutoClaim) {\n      return tokenAmountAfterA !== '' || tokenAmountAfterB !== ''\n    }\n    return false\n  }, [tokenAmountAfterA, tokenAmountAfterB, isAutoClaim])\n\n  const { isApp } = useWindowWidth()\n\n  const claimBtnDisabled = useMemo(() => {\n    // 可提取奖励为0 并且 没有reward奖励 并且没有fee奖励\n    return (\n      (Number(totalYield) === 0 &&\n        (!dlmmCurrentPosRewardData || dlmmCurrentPosRewardData?.every(item => d(item?.display_amount_owed).eq(0))) &&\n        (!dlmmCurrentPosFeeData || (dlmmCurrentPosFeeData?.displayFeeOwedA == '0' && dlmmCurrentPosFeeData?.displayFeeOwedB == '0'))) ||\n      isClaimLoading\n    )\n  }, [dlmmPosFeeAndRewardsLoading, isClaimLoading, dlmmCurrentPosFeeData, totalYield, dlmmCurrentPosRewardData])\n\n  const tabList = [\n    {\n      label: 'Unclaimed',\n      value: 'Unclaimed'\n    },\n    {\n      label: 'Claimed',\n      value: 'Claimed'\n    }\n  ]\n\n  const [currentTab, setCurrentTab] = useState<Tab>(tabList[0])\n\n  const handleChangeTab = (tab: Tab) => {\n    setCurrentTab(tab)\n  }\n\n  const { getDlmmPositionHistoricalProfit } = useGetDlmmPositionHistoricalProfit()\n  const [positionHistoricalProfit, setPositionHistoricalProfit] = useState<any>(null)\n  const handleGetDlmmPositionHistoricalProfit = async () => {\n    const res = await getDlmmPositionHistoricalProfit(dlmmCurrentPosBaseInfo?.id as string)\n    console.log('🚀🚀🚀 ~ DetailStatsInfo.tsx:93 ~ handleGetClmmPositionHistoricalProfit ~ res:', res)\n    if (positionHistoricalProfit === null) {\n      setPositionHistoricalProfit(res)\n    } else {\n      if (res?.FeeA?.Amount !== undefined && d(removeComma(res?.FeeA?.Amount)).gt(positionHistoricalProfit?.FeeA?.Amount)) {\n        setPositionHistoricalProfit(res)\n      }\n    }\n  }\n\n  useDeepCompareEffect(() => {\n    if (dlmmCurrentPosBaseInfo?.id) {\n      handleGetDlmmPositionHistoricalProfit()\n    }\n  }, [dlmmCurrentPosBaseInfo?.id, dlmmCurrentPosFeeData, dlmmCurrentPosRewardData, dlmmPosLiquidityData])\n\n  const toClaim = async () => {\n    await toClaimDlmmPosition(dlmmCurrentPosBaseInfo)\n    const historyFeeA = d(positionHistoricalProfit?.FeeA?.Amount || 0)\n      .add(dlmmCurrentPosFeeData?.displayFeeOwedA || 0)\n      .toString()\n    const historyFeeB = d(positionHistoricalProfit?.FeeB?.Amount || 0)\n      .add(dlmmCurrentPosFeeData?.displayFeeOwedB || 0)\n      .toString()\n    const historyMiningCoins = uniq([\n      ...dlmmCurrentPosRewardData?.map(item => item?.coin_address),\n      ...positionHistoricalProfit?.Mining?.map(item => item?.CoinType)\n    ])\n    const historyMining = historyMiningCoins.map(coinType => {\n      const newReward = dlmmCurrentPosRewardData?.find(item => item?.coin_address === coinType)?.display_amount_owed || '0'\n      const old = positionHistoricalProfit?.Mining?.find(item => item?.CoinType === coinType)?.Amount || '0'\n      const amount = d(removeComma(newReward)).add(removeComma(old)).toString()\n      return {\n        CoinType: coinType,\n        Amount: amount || 0\n      }\n    })\n    setPositionHistoricalProfit({\n      FeeA: {\n        Amount: historyFeeA,\n        CoinType: positionHistoricalProfit?.FeeA?.CoinType\n      },\n      FeeB: {\n        Amount: historyFeeB,\n        CoinType: positionHistoricalProfit?.FeeB?.CoinType\n      },\n      Mining: historyMining\n    })\n    await handleGetDlmmPositionHistoricalProfit()\n  }\n\n  return (\n    <VStack bg=\"bg_secondary\" w=\"100%\" p={{ base: '16px 8px', lg: '20px 20px 0' }} borderRadius=\"16px\">\n      <HStack w=\"100%\" justify=\"space-between\">\n        <Stack\n          flexDir={{ base: 'row', lg: 'column' }}\n          alignItems={{ base: 'center', lg: 'flex-start' }}\n          justify={{ base: 'space-between', lg: 'center' }}\n          w={{ base: '100%', lg: 'auto' }}\n        >\n          <HStack gap=\"28px\">\n            <VStack align=\"flex-start\">\n              <Text color=\"primary_gray\">Claimable Yield</Text>\n              <Skeleton isLoaded={!!totalYield && !!dlmmCurrentPosBaseInfo && !!dlmmPosFeeData && !!dlmmPosRewardsData}>\n                <Text color=\"text_caption\" fontSize=\"16px\">\n                  {formatCurrency(totalYield, 2)}\n                </Text>\n              </Skeleton>\n            </VStack>\n\n            {showNewVersionApr && dailyEarnUSDDisplay !== null && (\n              <Stack flexDir={{ base: 'column', lg: 'row' }} bg=\"card_bg\" borderRadius=\"8px\" p=\"8px\">\n                <Text fontSize=\"12px\">Est. Daily Yield</Text>\n                <Skeleton isLoaded={!!totalYield && !!dlmmCurrentPosBaseInfo && !!dlmmPosFeeData && !!dlmmPosRewardsData}>\n                  <Text fontSize=\"12px\" color=\"primary\">\n                    {dailyEarnUSDDisplay ? (dailyEarnUSDDisplay !== '$0' ? `+${dailyEarnUSDDisplay}` : dailyEarnUSDDisplay) : '$0'}\n                  </Text>\n                </Skeleton>\n              </Stack>\n            )}\n          </HStack>\n        </Stack>\n        <Button\n          isLoading={isClaimLoading}\n          isDisabled={(claimBtnDisabled && !+totalYield) || totalYield === '--'}\n          onClick={() => toClaim()}\n          w=\"112px\"\n          h=\"28px\"\n          borderRadius=\"8px\"\n          fontWeight=\"500\"\n          fontSize=\"14px\"\n        >\n          Claim\n        </Button>\n      </HStack>\n      <VStack p={{ base: '20px 0px 0', lg: '20px 40px 0px' }} w=\"100%\" gap=\"26px\">\n        {showNewVersionApr && (\n          <VStack align=\"flex-start\" w=\"100%\">\n            <SelectTab\n              type=\"outlineTab\"\n              tabList={tabList}\n              currentTab={currentTab?.label}\n              handleChangeTab={handleChangeTab}\n              wrapStyle={{\n                w: '158px',\n                h: '28px',\n                p: '4px',\n                borderRadius: '8px'\n              }}\n              itemStyle={{\n                flex: {\n                  lg: '1',\n                  base: 'auto'\n                },\n                fontSize: '12px',\n                margin: '0px',\n                borderRadius: '4px'\n              }}\n            />\n          </VStack>\n        )}\n\n        {currentTab.value == 'Unclaimed' ? (\n          <HStack justify=\"space-between\" w=\"100%\" gap=\"0px\" flexWrap=\"wrap\" flexDirection={{ base: 'column', lg: 'row' }}>\n            <TokenAmountAndAfter\n              label=\"Fees\"\n              token={dlmmCurrentPosBaseInfo?.displayTokenA}\n              amount={dlmmCurrentPosFeeData?.displayFeeOwedA}\n              afterAmount={isInputValue && isAutoClaim ? '0' : ''}\n              align={isApp ? 'flex-end' : 'flex-start'}\n            />\n            <TokenAmountAndAfter\n              label={isApp ? '' : 'Fees'}\n              token={dlmmCurrentPosBaseInfo?.displayTokenB}\n              amount={dlmmCurrentPosFeeData?.displayFeeOwedB}\n              afterAmount={isInputValue && isAutoClaim ? '0' : ''}\n              align=\"flex-end\"\n            />\n            {dlmmCurrentPosRewardData?.map((item: any, index: number) => {\n              return (\n                <React.Fragment key={item?.coin_address}>\n                  <TokenAmountAndAfter\n                    label={isApp ? (index == 0 ? 'Mining Rewards' : '') : 'Mining Rewards'}\n                    token={item?.token}\n                    amount={item?.display_amount_owed}\n                    afterAmount={isInputValue && isAutoClaim ? '0' : ''}\n                    align={isApp ? 'flex-end' : index % 2 === 0 ? 'flex-start' : 'flex-end'}\n                  />\n                </React.Fragment>\n              )\n            })}\n          </HStack>\n        ) : (\n          <HStack justify=\"space-between\" w=\"100%\" gap=\"0px\" flexWrap=\"wrap\" flexDirection={{ base: 'column', lg: 'row' }}>\n            <TokenAmountAndAfter\n              label=\"Fees\"\n              token={dlmmCurrentPosBaseInfo?.displayTokenA}\n              amount={positionHistoricalProfit?.FeeA?.Amount}\n              align={isApp ? 'flex-end' : 'flex-start'}\n              afterAmount={''}\n            />\n            <TokenAmountAndAfter\n              label={isApp ? '' : 'Fees'}\n              token={dlmmCurrentPosBaseInfo?.displayTokenB}\n              amount={positionHistoricalProfit?.FeeB?.Amount}\n              align=\"flex-end\"\n              afterAmount={''}\n            />\n            {positionHistoricalProfit?.Mining?.filter?.(item => item?.Amount && d(removeComma(item?.Amount))?.gt(0))?.map(\n              (item: any, index: number) => {\n                return (\n                  <React.Fragment key={item?.CoinType}>\n                    <TokenAmountAndAfter\n                      label={isApp ? (index == 0 ? 'Mining Rewards' : '') : 'Mining Rewards'}\n                      coinType={item?.CoinType}\n                      amount={item?.Amount}\n                      align={isApp ? 'flex-end' : index % 2 === 0 ? 'flex-start' : 'flex-end'}\n                      afterAmount={''}\n                    />\n                  </React.Fragment>\n                )\n              }\n            )}\n          </HStack>\n        )}\n      </VStack>\n    </VStack>\n  )\n}\n","import AprTooltip from '@/components/common/aprTooltip'\nimport CoinPairInfo from '@/components/common/CoinPairInfo'\nimport StatsInfo from '@/components/liquidity/dlmm/StatsInfo'\nimport StatusPosition from '@/components/position/common/StatusPosition'\nimport DlmmLiquidityDistribution from '@/components/position/dlmm/details/DlmmLiquidityDistribution'\nimport DlmmPositionAction from '@/components/position/dlmm/details/DlmmPositionAction'\nimport DlmmPositionLiquidity from '@/components/position/dlmm/details/DlmmPositionLiquidity'\nimport DlmmPositionPendingYield from '@/components/position/dlmm/details/DlmmPositionPendingYield'\nimport useGetDlmmCurrentPos from '@/hooks/dlmm-position/useGetDlmmCurrentPos'\nimport useGetDlmmRelatedPools from '@/hooks/dlmm/useGetDlmmRelatedPools'\nimport useGetDlmmPositionDailyEarning from '@/hooks/position/useGetDlmmPositionDailyEarning'\nimport usePositionList from '@/hooks/position/usePositionList'\nimport useGlobalStore from '@/store/common/global'\nimport useDlmmLiquidityStore from '@/store/dlmm'\nimport useDlmmPositionStore from '@/store/dlmm-position'\nimport useDlmmPosDetailStore from '@/store/dlmm-position/detail'\nimport useSwapWidgetStore from '@/store/swap-widget/swapWidget'\nimport { AddressCopyLink } from '@cetus/design'\nimport { useAccountBalance, useInterval, useRpcListener } from '@cetus/hooks'\nimport useExplorer from '@cetus/hooks/src/useExplorer'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { useAccountStore } from '@cetus/stores'\nimport envConfigs from '@cetus/types/src/config/envConfigs'\nimport { BackButton, RefreshButton } from '@cetus/ui-kit'\nimport { d, isAvailableObject } from '@cetus/utils'\nimport { Button, HStack, Skeleton, Text, VStack } from '@chakra-ui/react'\nimport { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\n\nexport default function DlmmPositionDetail() {\n  const navigate = useNavigate()\n  const { position_nft_id } = useParams()\n  const { fetchAccountBalance } = useAccountBalance()\n  const {\n    dlmmCurrentPosBaseInfo,\n    dlmmPosLiquidityData,\n    dlmmPosPoolsRelatedData,\n    dlmmPosRewardsData,\n    dlmmPosRewardsDataLoading,\n    resetDlmmPositionState,\n    setPosChartRefreshTrigger\n  } = useDlmmPositionStore()\n  const { resetDlmmPosDetail } = useDlmmPosDetailStore()\n  const { fetchTokenPrices, getTokenAmountValue } = useTokenPrice()\n  const { dlmmApiPoolInfo, dlmmApiPoolInfoLoading } = useDlmmLiquidityStore()\n  const { getDlmmCurrentPosBaseInfo } = useGetDlmmCurrentPos()\n  const { getPosDlmmRelatedData } = usePositionList()\n\n  const { getList } = useGetDlmmRelatedPools()\n\n  const currentPosLiquidityData = useMemo(() => {\n    return dlmmPosLiquidityData[dlmmCurrentPosBaseInfo?.id]\n  }, [dlmmCurrentPosBaseInfo?.id, dlmmPosLiquidityData])\n\n  /**\n   * 每5秒获取一次合约数据\n   */\n  useInterval({\n    interval: 5 * 1000,\n    callback: () => {\n      if (currentAccount && dlmmCurrentPosBaseInfo) {\n        // toDo: 后续需要优化，active bin变化时候才需要重新获取数据\n        getPosDlmmRelatedData([dlmmCurrentPosBaseInfo], true)\n      }\n    }\n  })\n\n  const feeDisplay = dlmmPosPoolsRelatedData?.[dlmmCurrentPosBaseInfo?.id]?.displayFee\n    ? `${dlmmPosPoolsRelatedData?.[dlmmCurrentPosBaseInfo?.id]?.displayFee}%`\n    : undefined\n  const binStep = dlmmPosPoolsRelatedData?.[dlmmCurrentPosBaseInfo?.id]?.binStep || '--'\n\n  const { currentAccount } = useAccountStore()\n\n  useEffect(() => {\n    if (currentAccount?.address && position_nft_id) {\n      getDlmmCurrentPosBaseInfo(currentAccount?.address, position_nft_id)\n    }\n  }, [currentAccount?.address, position_nft_id])\n\n  const currentPosPoolsRelatedData = useMemo(() => {\n    return dlmmPosPoolsRelatedData[dlmmCurrentPosBaseInfo?.id]\n  }, [dlmmPosPoolsRelatedData])\n\n  const { setCurrentPosDetailTab } = useDlmmPosDetailStore()\n\n  const { setFromCoin, setToCoin, fromCoin, toCoin } = useSwapWidgetStore()\n\n  useEffect(() => {\n    if (dlmmCurrentPosBaseInfo?.dlmmPool) {\n      getList({ poolId: dlmmCurrentPosBaseInfo?.dlmmPool })\n\n      fetchTokenPrices([dlmmCurrentPosBaseInfo?.coinTypeA, dlmmCurrentPosBaseInfo?.coinTypeB])\n      if (dlmmCurrentPosBaseInfo?.displayTokenA && dlmmCurrentPosBaseInfo?.displayTokenB) {\n        setFromCoin(dlmmCurrentPosBaseInfo?.displayTokenA)\n        setToCoin(dlmmCurrentPosBaseInfo?.displayTokenB)\n      }\n    }\n    return () => {\n      setFromCoin(envConfigs.clmm_swap.from_coin)\n      setToCoin(envConfigs.clmm_swap.to_coin)\n    }\n  }, [dlmmCurrentPosBaseInfo?.dlmmPool])\n\n  useEffect(() => {\n    if (dlmmCurrentPosBaseInfo?.dlmmPool && dlmmPosRewardsData) {\n      getList({ poolId: dlmmCurrentPosBaseInfo?.dlmmPool })\n\n      const coinTypeA = dlmmCurrentPosBaseInfo?.coinTypeA\n      const coinTypeB = dlmmCurrentPosBaseInfo?.coinTypeB\n\n      const rewardCoinSet = new Set<string>()\n\n      for (const [positionId, rewards] of Object.entries(dlmmPosRewardsData)) {\n        if (positionId === dlmmCurrentPosBaseInfo?.id) {\n          rewards.forEach(reward => {\n            if (reward.coin_address !== coinTypeA && reward.coin_address !== coinTypeB) {\n              rewardCoinSet.add(reward.coin_address)\n            }\n          })\n        }\n      }\n\n      const rewardCoinList = Array.from(rewardCoinSet)\n      if (rewardCoinList.length > 0) {\n        fetchTokenPrices(rewardCoinList)\n      }\n    }\n  }, [dlmmPosRewardsData])\n\n  useRpcListener({\n    onRpcChange: () => {\n      handleRefresh()\n      if (currentAccount?.address) {\n        fetchAccountBalance()\n      }\n    }\n  })\n  const { getExplorerUrl } = useExplorer()\n  useEffect(() => {\n    return () => {\n      resetDlmmPosDetail()\n      resetDlmmPositionState()\n    }\n  }, [])\n\n  const handleBack = () => {\n    if (window.history.length > 1) {\n      navigate(-1)\n    } else {\n      navigate('/pools?tab=positions')\n    }\n  }\n\n  const { setBackUrl } = useGlobalStore()\n\n  const cursorStyle = useMemo(() => {\n    if (dlmmApiPoolInfo?.miningAprList?.length > 0) {\n      return 'help'\n    }\n    return undefined\n  }, [dlmmApiPoolInfo])\n\n  const currentPosLiquidity = dlmmPosLiquidityData[dlmmCurrentPosBaseInfo?.id as string]\n  const amountValueA = getTokenAmountValue(dlmmCurrentPosBaseInfo?.displayTokenA?.coin_type, currentPosLiquidity?.displayCoinAmountA)\n  const amountValueB = getTokenAmountValue(dlmmCurrentPosBaseInfo?.displayTokenB?.coin_type, currentPosLiquidity?.displayCoinAmountB)\n  const currentPosTvl = useMemo(() => {\n    return d(amountValueA).plus(amountValueB).toString()\n  }, [amountValueA, amountValueB])\n\n  const [positionApr, setPositionApr] = useState<any>(null)\n  const [dailyEarnUSDDisplay, setDailyEarnUSDDisplay] = useState<any>(null)\n  const [originResult, setOriginResult] = useState<any>(null)\n  const { getDlmmPositionDailyEarning } = useGetDlmmPositionDailyEarning()\n  const [getDailyEarning, setGetDailyEarning] = useState(true)\n  const handleGetPositionApr = async () => {\n    setGetDailyEarning(true)\n    try {\n      const res = await getDlmmPositionDailyEarning(dlmmCurrentPosBaseInfo?.id, currentPosTvl)\n      if (res) {\n        const { aprDisplay, dailyEarnUSDDisplay, originResult } = res\n        console.log('🚀🚀🚀 ~ PositionChartInfo.tsx:155 ~ handleGetPositionApr ~ originResult:', originResult)\n        setPositionApr(aprDisplay)\n        setDailyEarnUSDDisplay(dailyEarnUSDDisplay)\n        setOriginResult(originResult)\n      }\n      setGetDailyEarning(false)\n    } catch (error) {\n      setGetDailyEarning(false)\n    }\n  }\n\n  useEffect(() => {\n    if (dlmmCurrentPosBaseInfo?.id) {\n      if (d(currentPosTvl).gt(0)) {\n        handleGetPositionApr()\n      } else {\n        setGetDailyEarning(false)\n      }\n    }\n  }, [dlmmCurrentPosBaseInfo?.id, currentPosTvl])\n\n  useInterval({\n    interval: 60 * 1000,\n    callback: () => {\n      handleGetPositionApr()\n    }\n  })\n  const isActive = useMemo(() => currentPosPoolsRelatedData?.currentStatus === 'Active', [currentPosPoolsRelatedData?.currentStatus])\n  const isInActive = useMemo(() => currentPosPoolsRelatedData?.currentStatus === 'Inactive', [currentPosPoolsRelatedData?.currentStatus])\n  const hasStatus = useMemo(() => {\n    return currentPosPoolsRelatedData?.currentStatus !== undefined\n  }, [currentPosPoolsRelatedData?.currentStatus])\n  const { isApp } = useWindowWidth()\n\n  const handleRefresh = useCallback(\n    async (isManual?: boolean) => {\n      setPosChartRefreshTrigger()\n      if (dlmmCurrentPosBaseInfo?.dlmmPool) {\n        await getList({ poolId: dlmmCurrentPosBaseInfo?.dlmmPool })\n      }\n      if (isManual) {\n        getDlmmCurrentPosBaseInfo(currentAccount?.address, position_nft_id, true)\n      }\n      fetchAccountBalance()\n      handleGetPositionApr()\n    },\n    [dlmmCurrentPosBaseInfo, dlmmCurrentPosBaseInfo?.id, currentPosTvl]\n  )\n\n  /**\n   * 每5秒获取一次合约数据\n   */\n  useInterval({\n    interval: 5 * 1000,\n    callback: () => {\n      if (currentAccount && dlmmCurrentPosBaseInfo) {\n        getPosDlmmRelatedData([dlmmCurrentPosBaseInfo], false)\n      }\n    }\n  })\n\n  return (\n    <VStack gap=\"12px\" w=\"100%\" pt=\"20px\" align=\"flex-start\">\n      <HStack w=\"100%\" justifyContent=\"space-between\" flexDirection={{ base: 'column-reverse', lg: 'row' }}>\n        <HStack w={{ base: '100%', lg: 'unset' }} justifyContent=\"space-between\">\n          <BackButton\n            text=\"Back\"\n            onClick={() => {\n              handleBack()\n            }}\n          />\n        </HStack>\n        <HStack w={{ base: '100%', lg: 'unset' }}>\n          <Button\n            w={{ base: '100%', lg: 'unset' }}\n            bg=\"bg_secondary\"\n            fontSize=\"14px\"\n            p=\"0 16px\"\n            h=\"32px\"\n            borderRadius=\"8px\"\n            fontWeight=\"500\"\n            variant=\"outline\"\n            onClick={e => {\n              setBackUrl(`/dlmm-position-detail/${dlmmCurrentPosBaseInfo?.id}`)\n              navigate(`/dlmm?poolId=${dlmmCurrentPosBaseInfo?.dlmmPool}`)\n            }}\n          >\n            Create a new position\n          </Button>\n          <RefreshButton handleRefresh={handleRefresh} isAutoRefresh refreshInterval={5} w=\"28px\" h=\"28px\" innerStyle={{ bg: 'none' }} />\n        </HStack>\n      </HStack>\n      <HStack w=\"100%\" justifyContent=\"space-between\" flexDirection={{ base: 'column', lg: 'row' }}>\n        <Skeleton w={{ base: '100%', lg: 'unset' }} isLoaded={!!dlmmCurrentPosBaseInfo?.dlmmPool}>\n          <CoinPairInfo\n            type=\"column\"\n            poolType=\"dlmm\"\n            symbolFontWeight=\"500\"\n            symbolFontSize=\"20px\"\n            symbolEllipsesDecimals={10}\n            nameEllipsesDecimals={20}\n            poolInfo={{ feeDisplay, binStep, ...dlmmCurrentPosBaseInfo, poolAddress: dlmmCurrentPosBaseInfo?.dlmmPool }}\n            haveFarming={currentPosLiquidityData?.haveFarming}\n            showPoolTypeTag\n            versionBlockPosition=\"right\"\n            padding=\"8px 0\"\n            moreDetails\n          />\n          <HStack>\n            <HStack p=\"2px 8px\" borderRadius=\"8px\" bg=\"bg_secondary\">\n              <Text fontSize=\"12px\" color=\"primary_gray\">\n                ID {dlmmCurrentPosBaseInfo?.tokenName}\n              </Text>\n              <Text>|</Text>\n              {dlmmCurrentPosBaseInfo?.id && (\n                <AddressCopyLink\n                  fontWeight=\"500\"\n                  showCopy={false}\n                  color=\"primary_gray\"\n                  address={dlmmCurrentPosBaseInfo?.id as string}\n                  showLink={false}\n                  onClickLink={() => {\n                    window.open(getExplorerUrl(dlmmCurrentPosBaseInfo?.id, 'nftAddress'), '_blank')\n                  }}\n                />\n              )}\n            </HStack>\n            {hasStatus && (\n              <StatusPosition isActive={isActive} isLoading={!currentPosPoolsRelatedData && !isAvailableObject(currentPosPoolsRelatedData)} />\n            )}\n          </HStack>\n        </Skeleton>\n        <HStack w={{ base: '100%', lg: 'unset' }} gap={{ base: '12px', lg: '28px' }} flexDirection={{ base: 'column', lg: 'row' }}>\n          <StatsInfo\n            label=\"Pool APR\"\n            value={\n              <AprTooltip poolInfo={dlmmApiPoolInfo} placement={isApp ? 'bottom-end' : 'bottom'}>\n                <HStack justify=\"flex-end\" align=\"flex-end\" gap=\"4px\" lineHeight=\"14px\" h=\"14px\">\n                  <Text\n                    as=\"span\"\n                    fontSize=\"14px\"\n                    color={cursorStyle ? 'primary' : 'text_caption'}\n                    fontWeight=\"500\"\n                    cursor={cursorStyle ? 'help' : 'text'}\n                    textUnderlineOffset=\"2px\"\n                    textDecoration={cursorStyle ? 'underline dotted' : 'none'}\n                  >\n                    {dlmmApiPoolInfo?.feeAndMiningAprDisplay !== '' ? dlmmApiPoolInfo?.feeAndMiningAprDisplay : '--'}\n                  </Text>\n                  {dlmmApiPoolInfo?.haveFarming && (\n                    <Text fontSize=\"12px\" lineHeight=\"12px\" h=\"12px\" color=\"primary\" fontWeight=\"500\">\n                      +{dlmmApiPoolInfo?.farmingAprDisplay}\n                    </Text>\n                  )}\n                </HStack>\n              </AprTooltip>\n            }\n            loading={!dlmmApiPoolInfo?.poolAddress}\n          />\n          <StatsInfo label=\"TVL\" value={(dlmmApiPoolInfo?.tvlDisplay as string) || ''} loading={!dlmmApiPoolInfo?.poolAddress} />\n          <StatsInfo label=\"Volume (24H)\" value={(dlmmApiPoolInfo?.volume24Display as string) || ''} loading={!dlmmApiPoolInfo?.volume24Display} />\n          <StatsInfo label=\"Fees (24H)\" value={(dlmmApiPoolInfo?.fees24Display as string) || ''} loading={!dlmmApiPoolInfo?.poolAddress} />\n        </HStack>\n      </HStack>\n      <HStack flexDirection={{ base: 'column-reverse', lg: 'row' }} width=\"100%\" justifyContent=\"space-between\" align=\"flex-start\" mt=\"8px\">\n        <VStack width={{ base: '100%', lg: '684px' }} position=\"relative\" gap=\"16px\">\n          <DlmmLiquidityDistribution positionApr={isInActive ? '0%' : hasStatus ? positionApr : null} isAprLoading={getDailyEarning} />\n          <DlmmPositionLiquidity />\n          <DlmmPositionPendingYield dailyEarnUSDDisplay={isInActive ? '$0' : hasStatus ? dailyEarnUSDDisplay : null} originResult={originResult} />\n        </VStack>\n        <VStack width={{ base: '100%', lg: '460px' }}>\n          <DlmmPositionAction />\n        </VStack>\n      </HStack>\n    </VStack>\n  )\n}\n"],"names":["LeftColor","RightColor","DlmmLegend","baseSymbol","quoteSymbol","jsxs","HStack","jsx","LegendBlock","symbol","color","Box","Text","useDlmmPosChart","isReverse","direct","poolAllBinObjCallback","dlmmCurrentPosBaseInfo","dlmmPosPoolsOriginalData","dlmmPosLiquidityData","posChartRefreshTrigger","useDlmmPositionStore","originPosBins","setOriginPosBins","useState","isInitialized","useSdkStore","binInfos","currentPosDetailTab","setMinPriceData","setMaxPriceData","setShowPositionSelectRange","useDlmmPosDetailStore","currentLiquidityBins","setCurrentLiquidityBins","maxBinRangeData","setMaxBinRangeData","maxBinLoading","setMaxBinLoading","getBinsInfoByPool","useDlmmGetAllBinWithPool","poolAllBinObj","setPoolAllBinObj","getTokenPrice","useTokenPrice","tokenAPriceInfo","_a","tokenBPriceInfo","_b","currentPosPool","useMemo","useDeepCompareEffect","liquidityData","list","getCombineBins","originBins","newBins","baseToken","quoteToken","currentTab","isIncreaseTab","newBinsList","baseDecimal","quoteDecimal","newBinsObj","item","bnToAmount","noRadius","max","binStep","createBinData","newBinInfo","liquidity","d","newBinLiquidity","totalLiquidity","price","removeComma","formatPriceFromBin","reversePrice","baseAmount","quoteAmount","quantityA","quantityB","newBinQuantityA","newBinQuantityB","activeBin","total","newBinBaseAmount","newBinQuoteAmount","newBinTotal","priceDisplay","newList","sortList","a","b","useEffect","_c","res","isEmptyObj","lower","upper","i","handleRangeChange","minBin","maxBin","minPrice","BinUtils","displayMinPrice","reverseMinPrice","displayReverseMinPrice","getRelatedDisplayPrice","maxPrice","displayMaxPrice","reverseMaxPrice","displayReverseMaxPrice","minPriceData","maxPriceData","DlmmPosChart","tokenAPrice","tokenBPrice","windowWidth","useWindowWidth","width","VStack","CurrentLiquidityChart","BinRangeSelectChart","DlmmLiquidityDistribution","positionApr","isAprLoading","dlmmPosPoolsRelatedData","setDlmmPosDetailDirect","dlmmPosDetailDirect","dlmmApiPoolInfo","useDlmmLiquidityStore","poolBinList","setPoolBinList","currentType","setCurrentType","displayQuoteToken","displayBaseToken","currentPosRelatedData","currentRangeTab","setCurrentRangeTab","coinType","rangeTabList","isAvailableObject","currentPrice","shouldLineBreak","binList","textEllipses","Skeleton","SelectTab","current","tab","FunnelPrice","formatSmallPrice","CetusTooltip","Icon","useDlmmPosAdd","dlmmSdk","useSdk","liquiditySlippage","useGlobalStore","collectRewardAndFeePayload","useDlmmPosCollect","params","activeId","lowerBinId","upperBinId","amount","fromToken","toToken","strategy","fixAmountA","isAutoFill","otherAmount","pool","amount_in_active_bin","realAutoFill","calculateAddLiquidityInfoParams","coinAmountA","coinAmountB","isAutoClaim","dlmmPool","coinTypeA","coinTypeB","positionId","collectFee","rewardCoins","validBinInfos","bin","payloads","totalBatches","batchBinInfo","getBatchBinInfo","dlmmPosAddLiquidityParams","payload","useDlmmPosHelper","currentPosBaseInfo","curPosContractPoolInfo","currentTickIndex","useGetDlmmCurrentPos","dlmmPosBaseList","setCurrentPosBaseInfo","setDlmmCurrentPosBaseInfoLoading","wrapDlmmPosBaseInfo","useWrapPosData","getPosDlmmRelatedData","usePositionList","getDlmmCurrentPosBaseInfo","account","id","isForceRefresh","posBaseInfoFrom","posInfo","getDlmmCurrentPosByPosId","ownerRes","useDlmmPosAddPage","setTokenAmountAfterA","setTokenAmountAfterB","setBinInfos","setPreCalcError","preCalcError","getTokenAmountValue","dlmmPreAdd","getDlmmPosAddLiquidityPayload","currentAccount","useAccountStore","getTokenALock","getTokenBLock","disabledAutoFill","setDisabledAutoFill","isSelectRange","setIsSelectRange","isAddLoading","setIsAddLoading","handleActionBinPrice","getNumBins","useCreatePriceBin","setStrategy","setIsAutoFill","transactionConfirmation","useTransactionModal","dlmmCurrentPosPoolsOriginalData","tokenAmountA","setTokenAmountA","tokenAmountB","setTokenAmountB","displayTokenALock","setDisplayTokenALock","displayTokenBLock","setDisplayTokenBLock","isFixedDisplayTokenA","setIsFixedDisplayTokenA","dlmmPreAddLoading","setDlmmPreAddLoading","uuid","setUuid","uuidRef","useRef","displayTokenA","displayTokenB","tokenA","tokenB","buildPriceData","useMinMaxPriceData","tokenABalanceInfo","useGetTokenBalance","tokenBBalanceInfo","tokenAmountValueA","tokenAmountValueB","resetInputAmount","handleAmountChange","v4","debouncedDlmmPreAdd","isDisplayTokenALock","isDisplayTokenBLock","selectLowerBinId","selectUpperBinId","displayCoinAmountA","displayCoinAmountB","error","reCalculateResult","totalAmount","showTokenALock","showTokenBLock","showDisplayTokenALock","showDisplayTokenBLock","dlmmMevProtect","maxCapForGas","transactionMode","customGasPrice","batchSignAndExecuteTransaction","useTransaction","fetchAccountBalance","useAccountBalance","getList","useGetDlmmRelatedPools","toAdd","TrackDataParams","parameter","ele","txs","p_binInfos","trackData","tx","msafeParams","MsafeTransactionSubType","toastInfo","status","balanceChanges","_","otherParams","description","formatDescription","info","isPartialSuccess","amountAF","amountBF","getBalanceChanges","handleAdd","tokenBalanceA","setTokenBalanceA","tokenBalanceB","setTokenBalanceB","currentPosPoolsRelatedData","currentPosLiquidityData","posMinPrice","posMinPriceBinId","posMaxPrice","posMaxPriceBinId","initMinMaxPriceAndAmount","handleSlider","isInitPrice","setIsInitPrice","handlePriceAction","useCallback","type","isMinPrice","bin_id","_price","priceData","val","isDirect","setIsDirect","useDebounceEffect","addAmountA","addAmountB","amountA","amountB","tokenADecimals","tokenBDecimals","_d","fromDecimalsAmount","isActive","onAutoFillChange","numBins","btnStatusText","btnInfo","DlmmPositionSelectRange","props","isShowError","state","perText","rangeSliderValue","displayMinBinId","displayMaxBinId","isMinMaxEqual","adjustedMinBinId","adjustedMaxBinId","adjustedRangeSliderValue","displayMinData","displayMaxData","onPriceChange","data","value","targetPrice","_binId","Center","RangeSlider","RangeSliderTrack","RangeSliderFilledTrack","RangeSliderThumb","Stack","PriceInput","ErrorTips","DlmmPositionAdd","showPositionSelectRange","setIsAutoClaim","isApp","Strategy","StrategyType","FormControl","FormLabel","Switch","TradeInput","AutoClaimCheckBox","Button","HTextLabelBox","formatCurrency","addComma","useDlmmPosRemovePage","dlmmPreRemove","getDlmmPosRemoveLiquidityPayload","getDlmmPosClosePositionPayload","useDlmmPosRemove","removeSide","setRemoveSide","dlmmPreRemoveLoading","setDlmmPreRemoveLoading","slippage","slideValue","setSlideValue","navigate","useNavigate","totalTokenBalanceA","setTotalTokenBalanceA","totalTokenBalanceB","setTotalTokenBalanceB","setPosMinPrice","setPosMaxPrice","setPosMinPriceBinId","setPosMaxPriceBinId","amountInfo","setAmountInfo","tempMinBinId","tempMaxBinId","debouncedDlmmPreRemove","liquidityShares","bins","bin_step","bin_manager","active_id","slide","isSelectMax","formatNumber","Decimal","isRemoveLoading","setIsRemoveLoading","changeSlideFun","num","handleChangeAmount","_tokenAmountA","_tokenAmountB","fixedDisplayTokenA","isAllRemove","removeLiquidityAmount","acc","curr","toRemove","cBinsInfo","dlmmPosBaseInfo","getRemoveTokenBalance","handleRemove","minBinId","maxBinId","rangeAmountInfo","minIndex","_e","maxIndex","_f","rangeBins","_g","sum","totalAmountA","_i","_h","totalAmountB","_k","_j","isInitBalance","posBaseInfo","posPoolsOriginalData","posLiquidityInfo","active_bin","parseLiquidityShares","decimalsA","decimalsB","formatAmount","decimals","rawAmountA","rawAmountB","changeSlideValue","removeAmountA","removeAmountB","DlmmPositionRemove","open","setOpen","tabList","setIsInitBalance","showSwitchTab","amountAValue","amountBValue","totalAmountValue","RemoveMenus","PositionSlider","isOpen","onClose","onChange","onClick","CetusMenu","MenuButton","MenuItem","DlmmPositionAction","setCurrentPosDetailTab","Slippage","DlmmPositionLiquidity","currentDlmmPosLiquidity","tokenAmountAfterA","tokenAmountAfterB","isLoaded","amountValue","Progress","TokenAmountAndAfter","useDlmmPosClaim","dlmmPosRewardsData","dlmmPosFeeData","isClaimLoading","setIsClaimLoading","signAndExecuteTransaction","getDlmmPosPoolsOriginalObj","useGetDlmmPosPool","getDlmmPosFeeAndReward","useGetDlmmPosFeeAndReward","dlmmCurPosContractPoolInfo","positionInfo","currentPosRewardData","reward","poolInfo","useGetDlmmPositionHistoricalProfit","fetchByApi","useFetch","position_id","DlmmPositionHistoricalProfitPath","DlmmPositionPendingYield","dailyEarnUSDDisplay","originResult","dlmmPosFeeDataLoading","dlmmPosFeeAndRewardsLoading","dlmmPosRewardsDataLoading","dlmmCurrentPosBaseInfoLoading","dlmmCurrentPosFeeData","dlmmCurrentPosRewardData","result","index","toClaimDlmmPosition","totalYield","setTotalYield","calculatePendingYield","useCalculatePendingYield","isInputValue","claimBtnDisabled","setCurrentTab","handleChangeTab","getDlmmPositionHistoricalProfit","positionHistoricalProfit","setPositionHistoricalProfit","handleGetDlmmPositionHistoricalProfit","toClaim","historyFeeA","historyFeeB","historyMining","uniq","newReward","old","React","DlmmPositionDetail","position_nft_id","useParams","resetDlmmPositionState","setPosChartRefreshTrigger","resetDlmmPosDetail","fetchTokenPrices","dlmmApiPoolInfoLoading","useInterval","feeDisplay","setFromCoin","setToCoin","fromCoin","toCoin","useSwapWidgetStore","envConfigs","rewardCoinSet","rewards","rewardCoinList","useRpcListener","handleRefresh","getExplorerUrl","useExplorer","handleBack","setBackUrl","cursorStyle","currentPosLiquidity","amountValueA","amountValueB","currentPosTvl","setPositionApr","setDailyEarnUSDDisplay","setOriginResult","getDlmmPositionDailyEarning","useGetDlmmPositionDailyEarning","getDailyEarning","setGetDailyEarning","handleGetPositionApr","aprDisplay","isInActive","hasStatus","isManual","BackButton","e","RefreshButton","CoinPairInfo","AddressCopyLink","StatusPosition","StatsInfo","AprTooltip"],"mappings":"8vGAEA,MAAMA,GAAY,UACZC,GAAa,UAEnB,SAAwBC,GAAW,CAAE,WAAAC,EAAY,YAAAC,GAA4D,CAC3G,OACEC,EAAAA,KAACC,GAAA,CAAO,IAAI,OACV,SAAA,CAAAC,EAAAA,IAACC,GAAA,CAAY,OAAQL,EAAY,MAAOF,GAAY,EACpDM,EAAAA,IAACC,GAAA,CAAY,OAAQJ,EAAa,MAAOJ,EAAA,CAAW,CAAA,EACtD,CAEJ,CAEA,SAASQ,GAAY,CAAE,OAAAC,EAAQ,MAAAC,GAA4C,CACzE,OACEL,EAAAA,KAACC,GAAA,CAAO,IAAI,MACV,SAAA,CAAAC,EAAAA,IAACI,GAAA,CAAI,EAAE,MAAM,EAAE,MAAM,GAAID,EAAO,aAAa,KAAA,CAAM,EACnDH,EAAAA,IAACK,EAAA,CAAK,SAAS,OAAQ,SAAAH,CAAA,CAAO,CAAA,EAChC,CAEJ,CCRA,SAAwBI,GAAgBC,EAAoBC,EAAS,GAAMC,EAAuD,WAChI,KAAM,CAAE,uBAAAC,EAAwB,yBAAAC,EAA0B,qBAAAC,EAAsB,uBAAAC,CAAA,EAA2BC,GAAA,EACrG,CAACC,EAAeC,CAAgB,EAAIC,EAAAA,SAAyB,CAAA,CAAE,EAC/D,CAAE,cAAAC,CAAA,EAAkBC,GAAA,EACpB,CAAE,SAAAC,EAAU,oBAAAC,EAAqB,gBAAAC,EAAiB,gBAAAC,EAAiB,2BAAAC,CAAA,EAA+BC,GAAA,EAElG,CAACC,GAAsBC,CAAuB,EAAIV,WAAA,EAClD,CAACW,EAAiBC,CAAkB,EAAIZ,WAAA,EACxC,CAACa,EAAeC,EAAgB,EAAId,EAAAA,SAAkB,EAAK,EAC3D,CAAE,kBAAAe,CAAA,EAAsBC,GAAA,EACxB,CAACC,EAAeC,CAAgB,EAAIlB,EAAAA,SAAuC,CAAA,CAAE,EAE7E,CAAE,cAAAmB,EAAA,EAAkBC,GAAA,EAEpBC,EAAkBF,IAAcG,GAAA7B,GAAA,YAAAA,EAAwB,SAAxB,YAAA6B,GAAgC,SAAS,EACzEC,EAAkBJ,IAAcK,GAAA/B,GAAA,YAAAA,EAAwB,SAAxB,YAAA+B,GAAgC,SAAS,EAEzEC,EAAiBC,EAAAA,QAAQ,IACtBhC,GAAA,YAAAA,EAA2BD,GAAA,YAAAA,EAAwB,UACzD,CAACA,GAAA,YAAAA,EAAwB,SAAUC,CAAwB,CAAC,EAE/DiC,GAAqB,IAAM,OACzB,GAAIlC,GAAA,MAAAA,EAAwB,KAAME,GAAA,MAAAA,EAAuBF,GAAA,YAAAA,EAAwB,KAAK,CACpF,MAAMmC,IAAgBN,EAAA3B,GAAA,YAAAA,EAAuBF,GAAA,YAAAA,EAAwB,MAA/C,YAAA6B,EAAoD,SACpEO,GAAOD,IAAA,YAAAA,GAAe,OAAQ,CAAA,EACpC7B,EAAiB8B,CAAI,CACvB,CACF,EAAG,CAACpC,GAAA,YAAAA,EAAwB,GAAIE,CAAoB,CAAC,EAErD,MAAMmC,GAAiB,CAACC,EAAyBC,GAAsBC,EAAkBC,EAAmBC,IAAuB,WACjI,GAAI,CAACJ,IAAcA,GAAA,YAAAA,EAAY,UAAW,GAAK,CAACN,GAAkB,CAACQ,GAAa,CAACC,EAAY,MAAO,CAAA,EAEpG,MAAME,EAAgBD,IAAe,WAC/BE,EAAcL,IAAW,CAAA,EACzBM,EAAcL,GAAA,YAAAA,EAAW,SACzBM,GAAeL,GAAA,YAAAA,EAAY,SAE3BM,EAAa,OAAO,YACxBH,GAAA,YAAAA,EAAa,IAAII,GAAQ,CACvB,OAAOA,EAAK,MAAM,EAClB,CACE,GAAGA,EACH,WAAYL,EACZ,WAAYM,GAAWD,GAAA,YAAAA,EAAM,SAAUH,CAAW,EAClD,YAAaI,GAAWD,GAAA,YAAAA,EAAM,SAAUF,EAAY,CAAA,CACtD,EACD,EAGGI,GAAWZ,GAAA,YAAAA,EAAY,QAAS,IAEtC,IAAIa,EAAM,EACV,MAAMC,EAAUpB,GAAA,YAAAA,EAAgB,SAE1BqB,EAAgB,CAACL,EAAiBM,EAAmCX,KAA2B,CACpG,MAAMY,GAAYC,GAAER,GAAA,YAAAA,EAAM,SAAS,EAAE,IAAI,KAAK,IAAI,GAAI,EAAE,CAAC,EAAE,SAAA,EACrDS,EAAkBH,GAAA,MAAAA,EAAY,UAAYE,GAAEF,EAAW,SAAS,EAAE,IAAI,KAAK,IAAI,GAAI,EAAE,CAAC,EAAE,WAAa,EACrGI,EAAiBf,GAAgBa,GAAED,EAAS,EAAE,IAAIE,CAAe,EAAE,SAAA,EAAaF,GAEtFJ,EAAM,KAAK,IAAIA,EAAKO,CAAc,EAElC,MAAMC,GAAQC,GAAYC,GAAmBb,GAAA,YAAAA,EAAM,OAAQI,EAASZ,GAAA,YAAAA,EAAW,SAAUC,GAAA,YAAAA,EAAY,QAAQ,CAAC,EACxGqB,GAAeN,GAAE,CAAC,EAAE,IAAIG,EAAK,EAAE,SAAA,EAC/BI,GAAad,GAAWD,GAAA,YAAAA,EAAM,SAAUH,CAAW,EACnDmB,GAAcf,GAAWD,GAAA,YAAAA,EAAM,SAAUF,EAAY,EAE3D,IAAImB,GAAWC,GAAWC,GAAiBC,GAC3C,IAAIpB,GAAA,YAAAA,EAAM,UAAWqB,EAAW,CAC9B,MAAMC,GAAQd,GAAEO,EAAU,EAAE,IAAIJ,EAAK,EAAE,IAAIK,EAAW,EACtDC,GAAYT,GAAEO,EAAU,EAAE,IAAIJ,EAAK,EAAE,IAAIW,EAAK,EAAE,SAAA,EAChDJ,GAAYV,GAAEQ,EAAW,EAAE,IAAIM,EAAK,EAAE,SAAA,EAEtC,MAAMC,GAAmBtB,GAAWK,GAAA,YAAAA,EAAY,SAAUT,CAAW,EAC/D2B,GAAoBvB,GAAWK,GAAA,YAAAA,EAAY,SAAUR,EAAY,EACjE2B,GAAcjB,GAAEe,EAAgB,EAAE,IAAIZ,EAAK,EAAE,IAAIa,EAAiB,EAExEL,GAAkBX,GAAEe,EAAgB,EAAE,IAAIZ,EAAK,EAAE,IAAIc,EAAW,EAAE,SAAA,EAClEL,GAAkBZ,GAAEgB,EAAiB,EAAE,IAAIC,EAAW,EAAE,SAAA,CAC1D,CAEA,MAAMC,GAAe7E,EAAYiE,GAAeH,GAEhD,MAAO,CACL,GAAGX,EACH,UAAAO,GACA,eAAAG,EACA,aAAcf,KAAiBW,GAAA,MAAAA,EAAY,UAAWE,GAAER,EAAK,QAAQ,EAAE,IAAIM,EAAW,QAAQ,EAAE,SAAA,EAAaN,EAAK,SAClH,aAAcL,KAAiBW,GAAA,MAAAA,EAAY,UAAWE,GAAER,EAAK,QAAQ,EAAE,IAAIM,EAAW,QAAQ,EAAE,SAAA,EAAaN,EAAK,SAClH,QAAS,CACP,GAAGM,EACH,UAAWG,EACX,IAAIT,GAAA,YAAAA,EAAM,UAAWqB,GAAa,CAChC,UAAWF,GACX,UAAWC,EAAA,CACb,EAEF,MAAOtE,EAAS4E,GAAelB,GAAE,CAAC,EAAE,IAAIkB,EAAY,EAAE,SAAA,EACtD,KAAMhC,EACN,WAAYF,GAAA,YAAAA,EAAW,OACvB,YAAaC,GAAA,YAAAA,EAAY,OACzB,SAAUD,GAAA,YAAAA,EAAW,SACrB,UAAWC,GAAA,YAAAA,EAAY,SACvB,WAAAsB,GACA,YAAAC,GACA,UAAAC,GACA,UAAAC,GACA,SAAAhB,CAAA,CAEJ,EAEMyB,EAAUrC,EAAW,IAAIU,GAAQK,EAAcL,EAAMD,GAAA,YAAAA,EAAa,OAAOC,GAAA,YAAAA,EAAM,MAAM,GAAIL,CAAa,CAAC,EAG7G,GAAI0B,IAAc,QAAajB,IAAY,UAAavB,GAAA8C,GAAA,YAAAA,EAAU,KAAV,YAAA9C,GAAc,QAASwC,EAAW,CACxF,MAAMV,EAAQC,GAAYC,GAAmBQ,EAAWjB,EAASP,EAAaC,EAAY,CAAC,EACrFgB,EAAeN,GAAE,CAAC,EAAE,IAAIG,CAAK,EAAE,SAAA,EAC/Be,GAAe7E,EAAYiE,EAAeH,EAChDgB,EAAQ,QAAQ,CAEd,OAAQN,EACR,MAAOvE,GAAUA,IAAW,OAAY4E,GAAelB,GAAE,CAAC,EAAE,IAAIkB,EAAY,EAAE,SAAA,EAC9E,UAAW,MAAA,CACZ,CACH,CAEA,GAAIL,IAAc,QAAajB,IAAY,UAAarB,GAAA4C,GAAA,YAAAA,GAAUA,GAAA,YAAAA,EAAS,QAAS,KAA5B,YAAA5C,GAAgC,QAASsC,EAAW,CAC1G,MAAMV,EAAQC,GAAYC,GAAmBQ,EAAWjB,EAASP,EAAaC,EAAY,CAAC,EACrFgB,EAAeN,GAAE,CAAC,EAAE,IAAIG,CAAK,EAAE,SAAA,EAC/Be,GAAe7E,EAAYiE,EAAeH,EAChDgB,EAAQ,KAAK,CAEX,OAAQN,EACR,MAAOvE,GAAUA,IAAW,OAAY4E,GAAelB,GAAE,CAAC,EAAE,IAAIkB,EAAY,EAAE,SAAA,EAC9E,UAAW,MAAA,CACZ,CACH,CAEA,MAAME,GAAWD,EAAQ,KAAK,CAACE,EAAGC,IAAM,OAAOD,GAAA,YAAAA,EAAG,KAAK,EAAI,OAAOC,GAAA,YAAAA,EAAG,KAAK,CAAC,EAE3E7D,EAAwB,CACtB,KAAM2D,GACN,IAAAzB,CAAA,CACD,CACH,EAEAjB,GAAqB,IAAM,EACrB7B,GAAA,YAAAA,EAAe,QAAS,IAAKL,GAAA,MAAAA,EAAwB,KACvDqC,GAAehC,EAAeK,GAAA,YAAAA,EAAU,KAAMV,GAAA,YAAAA,EAAwB,OAAQA,GAAA,YAAAA,EAAwB,OAAQW,CAAmB,CAErI,EAAG,CAACN,EAAeK,GAAA,YAAAA,EAAU,KAAMV,EAAwBW,EAAqBb,EAAQD,EAAWmC,GAAA,YAAAA,EAAgB,SAAS,CAAC,EAE7H+C,EAAAA,UAAU,IAAM,YACVvE,KAAiBqB,EAAAG,GAAA,YAAAA,EAAgB,cAAhB,MAAAH,EAA6B,sBAAsBG,GAAA,YAAAA,EAAgB,OAAOhC,GAAA,YAAAA,EAAwB,YACrHqB,GAAiB,EAAI,EACrBC,EACE,CACE,QAASU,EAAgB,GACzB,YAAaA,EAAgB,YAC7B,YAAaA,EAAgB,WAAA,GAE/BD,GAAA/B,GAAA,YAAAA,EAAwB,SAAxB,YAAA+B,GAAgC,UAChCiD,EAAAhF,GAAA,YAAAA,EAAwB,SAAxB,YAAAgF,EAAgC,QAAA,EAE/B,KAAKC,GAAO,CACXxD,EAAiBwD,EAAI,SAAS,EAC9BlF,EAAsBkF,EAAI,OAAO,CACnC,CAAC,EACA,QAAQ,IAAM,CACb5D,GAAiB,EAAK,CACxB,CAAC,EAEP,EAAG,CAACW,GAAA,YAAAA,EAAgB,GAAIhC,GAAA,YAAAA,EAAwB,SAAUQ,EAAeL,CAAsB,CAAC,EAEhG+B,GAAqB,IAAM,CACzB,IACEF,GAAA,YAAAA,EAAgB,aAAc,SAC9BA,GAAA,MAAAA,EAAgB,MAChBA,GAAA,YAAAA,EAAgB,OAAOhC,GAAA,YAAAA,EAAwB,WAC/C,CAACkF,GAAW1D,CAAa,EACzB,CACA,MAAMY,EAAY,CAAA,EACZ+C,GAAQnF,GAAA,YAAAA,EAAwB,WACtC,QAAQ,IAAI,gDAAiDmF,EAAK,EAClE,MAAMC,EAAQpF,GAAA,YAAAA,EAAwB,WACtC,QAAQ,IAAI,gDAAiDoF,CAAK,EAClE,MAAMhC,EAAUpB,GAAA,YAAAA,EAAgB,QAC1BQ,EAAYxC,GAAA,YAAAA,EAAwB,OACpCyC,EAAazC,GAAA,YAAAA,EAAwB,OAE3C,IAAImD,EAAM,EACV,QAASkC,GAAIF,GAAOE,IAAKD,EAAOC,IAAK,EAAG,CACtC,MAAMrC,EAAOxB,GAAA,YAAAA,EAAgB,OAAO6D,EAAC,GAC/B1B,EAAQC,GAAYC,GAAmBwB,GAAGjC,EAASZ,GAAA,YAAAA,EAAW,SAAUC,GAAA,YAAAA,EAAY,QAAQ,CAAC,EAC7FiC,EAAe7E,EAAY2D,GAAE,CAAC,EAAE,IAAIG,CAAK,EAAE,SAAA,EAAaA,EACxDJ,EAAYC,IAAER,GAAA,YAAAA,EAAM,YAAa,GAAG,EACvC,IAAI,KAAK,IAAI,GAAI,EAAE,CAAC,EACpB,SAAA,EACHZ,EAAK,KAAK,CACR,UAAUY,GAAA,YAAAA,EAAM,WAAY,IAC5B,UAAUA,GAAA,YAAAA,EAAM,WAAY,IAC5B,OAAQqC,GACR,UAAA9B,EACA,MAAOzD,EAAS4E,EAAelB,GAAE,CAAC,EAAE,IAAIkB,CAAY,EAAE,SAAA,EACtD,YAAsB,OAAT5E,EAAgB4E,EAAuBlB,GAAE,CAAC,EAAE,IAAIkB,CAAY,EAAE,UAAlC,EACzC,mBAAmB1B,GAAA,YAAAA,EAAM,oBAAqB,GAC9C,WAAYR,GAAA,YAAAA,EAAW,OACvB,YAAaC,GAAA,YAAAA,EAAY,OACzB,WAAYQ,GAAWD,GAAA,YAAAA,EAAM,SAAUR,GAAA,YAAAA,EAAW,QAAQ,EAC1D,YAAaS,GAAWD,GAAA,YAAAA,EAAM,SAAUP,GAAA,YAAAA,EAAY,QAAQ,EAC5D,SAAUD,GAAA,YAAAA,EAAW,SACrB,UAAWC,GAAA,YAAAA,EAAY,QAAA,CACxB,EACDU,EAAM,KAAK,IAAIA,EAAKI,CAAS,CAC/B,CAGInB,IAAQA,GAAA,YAAAA,EAAM,UAAW,GAC3BtB,EAA2B,EAAK,EAGlC,MAAM8D,EAAWxC,EAAK,KAAK,CAACyC,GAAQC,IAAW,OAAOD,IAAA,YAAAA,GAAG,WAAW,EAAI,OAAOC,GAAA,YAAAA,EAAG,WAAW,CAAC,EAE9F3D,EAAmB,CACjB,KAAMyD,EACN,IAAAzB,CAAA,CACD,CACH,CACF,EAAG,CAACnB,GAAA,YAAAA,EAAgB,UAAWhC,GAAA,YAAAA,EAAwB,SAAUwB,EAAe1B,EAAQD,CAAS,CAAC,EAElG,MAAMyF,EAAoB,CAACC,EAAgBC,KAAmB,SAC5D,MAAMpC,EAAUpB,GAAA,YAAAA,EAAgB,SAC1Ba,GAAchB,EAAA7B,GAAA,YAAAA,EAAwB,SAAxB,YAAA6B,EAAgC,SAC9CiB,GAAef,EAAA/B,GAAA,YAAAA,EAAwB,SAAxB,YAAA+B,EAAgC,SACrD,GAAIqB,IAAY,QAAaP,IAAgB,QAAaC,IAAiB,QAAayC,IAAW,QAAaC,KAAW,OAAW,CACpI,MAAMC,EAAWC,GAAS,kBAAkBH,EAAQnC,EAASP,EAAaC,CAAY,EAChF,CAAC6C,GAAiBC,EAAiBC,CAAsB,EAAIC,GAAuBL,CAAQ,EAC5FM,EAAWL,GAAS,kBAAkBF,GAAQpC,EAASP,EAAaC,CAAY,EAChF,CAACkD,EAAiBC,EAAiBC,CAAsB,EAAIJ,GAAuBC,CAAQ,EAE5FI,GAAe,CACnB,MAAOZ,EACP,MAAOE,EACP,aAAcE,GACd,aAAcC,EACd,oBAAqBC,EACrB,KAAM,OAAA,EAGFO,GAAe,CACnB,MAAOZ,GACP,MAAOO,EACP,aAAcC,EACd,aAAcC,EACd,oBAAqBC,CAAA,EAGvBtF,EAAgBuF,EAAY,EAC5BtF,EAAgBuF,EAAY,CAC9B,CACF,EAEM/B,EAAYpC,EAAAA,QAAQ,IACjBD,GAAA,YAAAA,EAAgB,UACtB,CAACA,GAAA,YAAAA,EAAgB,SAAS,CAAC,EAE9B,MAAO,CACL,qBAAAhB,GACA,UAAAqD,EACA,gBAAAnD,EACA,kBAAAoE,EACA,cAAAlE,EACA,YAAaQ,GAAA,YAAAA,EAAiB,MAC9B,YAAaE,GAAA,YAAAA,EAAiB,KAAA,CAElC,CCvRA,SAAwBuE,GAAa,CACnC,OAAAvG,EACA,UAAAD,EACA,sBAAAE,CACF,EAIG,CACD,KAAM,CAAE,qBAAAiB,EAAsB,UAAAqD,EAAW,gBAAAnD,EAAiB,kBAAAoE,EAAmB,cAAAlE,EAAe,YAAAkF,EAAa,YAAAC,GAAgB3G,GACvHC,EACAC,EACAC,CAAA,EAEI,CAAE,YAAAyG,CAAA,EAAgBC,GAAA,EAClBC,EAAQzE,EAAAA,QAAQ,IAChBuE,EAAc,IACTA,EAAc,GAEhB,IACN,CAACA,CAAW,CAAC,EAEhB,OAEEpH,EAAAA,KAACuH,GAAA,CAAO,IAAI,MAAM,EAAE,QAElB,SAAA,CAAArH,EAAAA,IAACsH,GAAA,CACC,MAAAF,EACA,UAAW,OAAOrC,CAAS,EAC3B,KAAMrD,EACN,OAAQ,IACR,aAAc,GACd,OAAAlB,EACA,UAAAD,EACA,YAAAyG,EACA,YAAAC,CAAA,CAAA,EAQFjH,EAAAA,IAACuH,GAAA,CACC,UAAW,OAAOxC,CAAS,EAC3B,KAAMnD,EACN,MAAAwF,EACA,OAAQ,GACR,SAAU,GACV,cAAepB,EACf,KAAK,MACL,UAAAzF,EACA,qBAAAmB,EACA,cAAAI,CAAA,CAAA,CACF,CAAA,CAMF,CAEJ,CCxDA,SAAwB0F,GAA0B,CAAE,YAAAC,EAAa,aAAAC,GAAgE,UAC/H,KAAM,CAAE,uBAAAhH,EAAwB,wBAAAiH,EAAyB,qBAAA/G,CAAA,EAAyBE,GAAA,EAC5E,CAAE,uBAAA8G,EAAwB,oBAAAC,CAAA,EAAwBpG,GAAA,EAClD,CAAE,gBAAAqG,CAAA,EAAoBC,GAAA,EACtB,CAACC,EAAaC,CAAc,EAAIhH,EAAAA,SAAsB,CAAA,CAAE,EACxD,CAACiH,EAAaC,CAAc,EAAIlH,EAAAA,SAA+B,KAAK,EAEpEmH,EAAoBzF,EAAAA,QAAQ,IACzBkF,EAAsBnH,GAAA,YAAAA,EAAwB,cAAgBA,GAAA,YAAAA,EAAwB,cAC5F,CAACA,EAAwBmH,CAAmB,CAAC,EAE1CQ,EAAmB1F,EAAAA,QAAQ,IACxBkF,EAAsBnH,GAAA,YAAAA,EAAwB,cAAgBA,GAAA,YAAAA,EAAwB,cAC5F,CAACA,EAAwBmH,CAAmB,CAAC,EAE1CS,EAAwB3F,EAAAA,QAAQ,IAC7BgF,GAAA,YAAAA,EAA0BjH,GAAA,YAAAA,EAAwB,IACxD,CAACA,GAAA,YAAAA,EAAwB,GAAIiH,CAAuB,CAAC,EAExBhF,EAAAA,QAAQ,IAC/B/B,GAAA,YAAAA,EAAuBF,GAAA,YAAAA,EAAwB,IACrD,CAACA,GAAA,YAAAA,EAAwB,GAAIE,CAAoB,CAAC,EAErD,KAAM,CAAC2H,GAAiBC,CAAkB,EAAIvH,WAAA,EAE9CwE,EAAAA,UAAU,IAAM,CACd,GAAI4C,EAAkB,CACpB,MAAMI,EAAWJ,GAAA,YAAAA,EAAkB,UACnCG,EAAmBC,CAAQ,CAC7B,CACF,EAAG,CAACJ,GAAA,YAAAA,EAAkB,SAAS,CAAC,EAEhC,MAAMK,EAAe/F,EAAAA,QAAQ,IACvBgG,GAAkBjI,GAAA,YAAAA,EAAwB,aAAa,GAAKiI,GAAkBjI,GAAA,YAAAA,EAAwB,aAAa,EAC9G,CAACA,EAAuB,cAAeA,EAAuB,aAAa,EAAG,OAAO,OAAO,EAAE,IAAIgD,IAAS,CAChH,MAAOA,GAAA,YAAAA,EAAM,OACb,IAAKA,GAAA,YAAAA,EAAM,UACX,QAAS,GACT,QAAS,CACP,IAAKA,GAAA,YAAAA,EAAM,SACX,EAAG,OACH,EAAG,OACH,SAAUA,EAAOA,GAAA,YAAAA,EAAM,UAAY,GACnC,aAAc,MACd,cAAe,KAAA,CACjB,EACA,EAEK,CAAA,EAER,CAAChD,GAAA,YAAAA,EAAwB,cAAeA,GAAA,YAAAA,EAAwB,aAAa,CAAC,EAE3EkI,EAAejG,EAAAA,QAAQ,IACpBkF,EAAsBS,GAAA,YAAAA,EAAuB,aAAeA,GAAA,YAAAA,EAAuB,oBACzF,CAACA,EAAuBT,CAAmB,CAAC,EAEzC1B,EAAWxD,EAAAA,QAAQ,IAChBkF,EAAsBS,GAAA,YAAAA,EAAuB,SAAWA,GAAA,YAAAA,EAAuB,gBACrF,CAACA,EAAuBT,CAAmB,CAAC,EAEzCpB,GAAW9D,EAAAA,QAAQ,IAChBkF,EAAsBS,GAAA,YAAAA,EAAuB,SAAWA,GAAA,YAAAA,EAAuB,gBACrF,CAACA,EAAuBT,CAAmB,CAAC,EAEzCgB,EAAkBlG,EAAAA,QAAQ,IACvB,CAACiG,EAAczC,EAAUM,EAAQ,EAAE,KAAK/C,IAAQA,GAAA,YAAAA,EAAM,QAAS,EAAE,EACvE,CAACkF,EAAczC,EAAUM,EAAQ,CAAC,EAU/BhG,EAAyBqI,GAAyB,CACtDb,EAAea,CAAO,CACxB,EAEA,cACGzB,GAAA,CAAO,MAAM,OAAO,GAAG,eAAe,aAAa,OAAO,EAAG,CAAE,KAAM,YAAa,GAAI,MAAA,EAAU,IAAI,OACnG,SAAA,CAAAvH,OAACC,IAAO,MAAM,OAAO,eAAe,gBAAgB,MAAO,CAAE,KAAM,YAAa,GAAI,QAAA,EAAY,cAAe,CAAE,KAAM,SAAU,GAAI,OACnI,SAAA,CAAAC,EAAAA,IAACK,EAAA,CAAK,MAAM,eAAe,SAAS,OAAO,GAAI,CAAE,KAAM,MAAO,GAAI,GAAA,EAAO,SAAA,yBAEzE,SACCN,GAAA,CAAO,IAAI,OAAO,cAAe,CAAE,KAAM,iBAAkB,GAAI,KAAA,EAAS,MAAO,CAAE,KAAM,YAAa,GAAI,UACvG,SAAA,CAAAC,EAAAA,IAACL,GAAA,CACC,WAAYoJ,IAAaxG,EAAA7B,GAAA,YAAAA,EAAwB,gBAAxB,YAAA6B,EAAuC,OAAQ,CAAC,EACzE,YAAawG,KAAatG,GAAA/B,GAAA,YAAAA,EAAwB,gBAAxB,YAAA+B,GAAuC,SAAU,GAAI,CAAC,CAAA,CAAA,EAEjF,CAACiG,GAAgB,CAACA,EAAa,OAC9B1I,EAAAA,IAACgJ,GAAA,CAAS,EAAE,OAAO,aAAa,MAAM,EAAE,QAAQ,EAEhDhJ,EAAAA,IAACiJ,GAAA,CACC,KAAK,aACL,QAASP,EACT,WAAYH,GACZ,SAAU,CAACW,EAASC,IAAQD,IAAYC,EAAI,IAC5C,gBAAiB,IAAMvB,EAAuB,CAACC,CAAmB,EAClE,UAAW,CACT,EAAG,OACH,EAAG,MACH,OAAQ,YACR,YAAa,SACb,aAAc,MACd,IAAK,MACL,OAAQ,IAAA,EAEV,UAAW,CACT,KAAM,IACN,EAAG,OACH,EAAG,WACH,aAAc,MACd,IAAK,KAAA,CACP,CAAA,CACF,CAAA,CAEJ,CAAA,EACF,EACA7H,EAAAA,IAACD,GAAA,CAAO,EAAE,OAAO,QAAS,CAAE,KAAM,aAAc,GAAI,QAAA,EAClD,SAAAC,EAAAA,IAACoJ,GAAA,CACC,MAAOR,EACP,QAAS,GAAGG,GAAaX,GAAA,YAAAA,EAAmB,OAAQ,CAAC,CAAC,QAAQW,GAAaV,GAAA,YAAAA,EAAkB,OAAQ,CAAC,CAAC,IACvG,SAAU,EAAA,CAAA,EAEd,QACCtB,GAAA,CAAa,OAAQc,EAAqB,UAAWnH,GAAA,YAAAA,EAAwB,UAAW,sBAAAD,EAA8C,EACvIX,EAAAA,KAACC,GAAA,CAAO,EAAE,OAAO,QAAQ,gBAAgB,cAAe,CAAE,KAAM,SAAU,GAAI,KAAA,EAC5E,SAAA,CAAAD,EAAAA,KAACuH,GAAA,CACC,EAAG,CAAE,KAAM,OAAQ,GAAI,KAAA,EACvB,cAAe,CAAE,KAAM,MAAO,GAAI,QAAA,EAClC,QAAS,CAAE,KAAM,gBAAiB,GAAI,QAAA,EACtC,WAAY,CAAE,KAAM,SAAU,GAAI,YAAA,EAClC,KAAK,IACL,EAAE,OACF,GAAG,UACH,aAAa,MAEb,SAAA,CAAArH,EAAAA,IAACK,EAAA,CAAK,SAAS,OAAO,EAAE,OAAO,WAAW,OAAO,WAAW,SAAS,SAAA,aAAA,CAErE,EACAL,EAAAA,IAACgJ,IAAS,EAAE,OAAO,SAAU7C,IAAa,QAAaM,KAAa,OAClE,SAAAzG,EAAAA,IAACD,IAAO,QAAS8I,EAAkB,SAAW,MAAO,WAAYA,EAAkB,aAAe,SAChG,SAAA7I,EAAAA,IAACK,EAAA,CAAK,SAAS,OAAO,MAAM,eACzB,SAAA8F,GAAYM,GACT4C,GAAiB/E,GAAY6B,CAAQ,CAAC,EACtC,GAAGkD,GAAiB/E,GAAY6B,CAAQ,CAAC,CAAC,MAAMkD,GAAiB/E,GAAYmC,EAAQ,CAAC,CAAC,EAAA,CAC7F,CAAA,CAIF,CAAA,CACF,CAAA,CAAA,CAAA,EAEF3G,EAAAA,KAACuH,GAAA,CACC,EAAG,CAAE,KAAM,OAAQ,GAAI,KAAA,EACvB,cAAe,CAAE,KAAM,MAAO,GAAI,QAAA,EAClC,QAAS,CAAE,KAAM,gBAAiB,GAAI,QAAA,EACtC,WAAY,CAAE,KAAM,SAAU,GAAI,YAAA,EAClC,KAAK,IACL,EAAE,OACF,GAAG,UACH,aAAa,MAEb,SAAA,CAAArH,EAAAA,IAACD,GAAA,CAAO,EAAG,CAAE,KAAM,QAAS,GAAI,MAAA,EAAU,QAAQ,gBAChD,SAAAC,EAAAA,IAACsJ,GAAA,CACC,QACEtJ,EAAAA,IAACK,EAAA,CAAK,SAAS,OAAO,WAAW,OAAO,SAAA,oKAGxC,EAGF,SAAAP,EAAAA,KAACC,GAAA,CAAO,IAAI,MACV,SAAA,CAAAC,EAAAA,IAACK,GAAK,SAAS,OAAO,EAAE,OAAO,WAAW,OAAO,SAAA,KAAA,CAEjD,EACAL,EAAAA,IAACuJ,GAAA,CAAK,UAAU,kBAAkB,SAAS,MAAA,CAAO,CAAA,CAAA,CACpD,CAAA,CAAA,EAKJ,EAOAvJ,EAAAA,IAACgJ,GAAA,CAAS,SAAU,CAAC,CAACV,EAAuB,EAAE,OAC7C,SAAAtI,EAAAA,IAACK,EAAA,CAAK,MAAM,UAAW,SAAAoH,GAAe,KAAK,CAAA,CAC7C,CAAA,CAAA,CAAA,CACF,CAAA,CAMF,CAAA,EACF,CAEJ,CCjNA,SAAwB+B,IAAgB,CACtC,MAAMC,EAAUC,GAAO,MAAM,EACvB,CAAE,kBAAAC,CAAA,EAAsBC,GAAA,EACxB,CAAE,2BAAAC,CAAA,EAA+BC,GAAA,EAkIvC,MAAO,CAAE,WAjIU,MAAOC,GAA6B,OACrD,KAAM,CAAE,SAAAC,EAAU,QAAAlG,EAAS,WAAAmG,EAAY,WAAAC,EAAY,OAAAC,EAAQ,UAAAC,EAAW,QAAAC,EAAS,SAAAC,EAAU,WAAAC,EAAY,UAAAhK,GAAW,WAAAiK,EAAY,YAAAC,EAAa,KAAAC,GACvIX,EACF,IAAIY,EACAD,IACFC,EAAuB,OAAMpI,EAAAkH,GAAA,YAAAA,EAAS,WAAT,YAAAlH,EAAmB,sBAC9CmI,GAAA,YAAAA,EAAM,YAAY,mBAClBT,EACAC,EACAF,EACAlG,KAKJ,MAAM8G,GAAeJ,GAAcG,EAE7BE,EAAqG,CACzG,UAAWb,EACX,SAAUlG,EACV,aAAcmG,EACd,aAAcC,EAGd,mBAAoBS,EACpB,QAASD,GAAA,YAAAA,EAAM,GACf,cAAeJ,EACf,GAAIM,GACA,CACE,aAAcL,EACd,YAAaJ,CAAA,EAEf,CACE,SAAUI,EAAaJ,EAASM,EAChC,SAAUF,EAAaE,EAAcN,CAAA,CACvC,EAGN,QAAQ,IAAI,+EAAgFU,CAA+B,EAC3H,MAAMzJ,EAAW,MAAMqI,GAAA,YAAAA,EAAS,SAAS,0BAA0BoB,IACnE,QAAQ,IAAI,wDAAyDzJ,EAAU+I,EAAQM,EAAaF,EAAYhK,EAAS,EAEzH,MAAMuK,EAAc5G,EAAE9C,GAAA,YAAAA,EAAU,QAAQ,EACrC,IAAI,KAAOb,GAAY8J,GAAA,YAAAA,EAAS,SAAWD,GAAA,YAAAA,EAAW,SAAS,EAC/D,SAAA,EACGW,GAAc7G,EAAE9C,GAAA,YAAAA,EAAU,QAAQ,EACrC,IAAI,KAAOb,GAAY6J,GAAA,YAAAA,EAAW,SAAWC,GAAA,YAAAA,EAAS,SAAS,EAC/D,SAAA,EAEH,MAAO,CACL,mBAAoB9J,GAAYwK,GAAcD,EAC9C,mBAAoBvK,GAAYuK,EAAcC,GAC9C,YAAAD,EACA,YAAAC,GACA,SAAA3J,CAAA,CAEJ,EAyEqB,8BAxEiB,CAAC2I,EAAmCiB,IAAyB,CACjG,KAAM,CAAE,SAAAC,EAAU,SAAA7J,EAAU,UAAA8J,EAAW,UAAAC,EAAW,WAAAC,EAAY,SAAApB,EAAU,WAAAqB,EAAY,YAAAC,EAAa,SAAAhB,GAAU,QAAAxG,CAAA,EAAYiG,EACvH,GAAI3I,GAAYA,EAAS,MAAQA,EAAS,KAAK,OAAS,EAAG,CACzD,MAAMmK,EAAgBnK,EAAS,KAAK,OAAOoK,GAAOA,EAAI,WAAa,KAAOA,EAAI,WAAa,GAAG,EACxFC,EAA0B,CAAA,EAChC,IAAIF,GAAA,YAAAA,EAAe,QAAS,IAAM,CAGhC,MAAMG,GAAe,KAAK,KAAKH,EAAc,OAAS,GAAS,EAC/D,QAASxF,EAAI,EAAGA,EAAI2F,GAAc3F,IAAK,CACrC,MAAM4F,EAAeC,GAAgBL,EAAexF,EAAG,GAAS,EAE1D8F,EAAgD,CACpD,YAAaT,EACb,UAAWpB,EACX,aAAc,CAAA,EACd,QAASiB,EACT,UAAWU,EACX,YAAa,GACb,YAAaT,EACb,YAAaC,EACb,cAAeb,GACf,mBAAoB,OAAOX,CAAiB,EAC5C,cAAe,GACf,SAAU7F,CAAA,EAGNgI,GAAUrC,GAAA,YAAAA,EAAS,SAAS,oBAAoBoC,GACtDJ,EAAS,KAAKK,EAAO,EAEjBd,GAAejF,IAAM2F,GAAe,IACtCG,EAA0B,YAAc,GACxCA,EAA0B,aAAeP,EAC/BzB,EACR,CACE,CACE,SAAAoB,EACA,WAAAG,EACA,YAAAE,EACA,UAAAJ,EACA,UAAAC,CAAA,CACF,EAEFW,EAAA,EAGN,CACF,KAAO,CACL,MAAMD,EAAgD,CACpD,YAAaT,EACb,UAAWpB,EACX,aAAcgB,EAAcM,EAAc,CAAA,EAC1C,QAASL,EACT,UAAW7J,EACX,YAAa4J,EACb,YAAaE,EACb,YAAaC,EACb,cAAeb,GACf,mBAAoB,OAAOX,CAAiB,EAC5C,cAAe,GACf,SAAU7F,CAAA,EAEZ,QAAQ,IAAI,4FAA6F+H,CAAyB,EAClI,MAAMC,GAAUrC,GAAA,YAAAA,EAAS,SAAS,oBAAoBoC,GACtD,QAAQ,IAAI,0EAA2EC,EAAO,EAC9FL,EAAS,KAAKK,EAAO,CACvB,CAEA,OAAOL,CACT,CACF,CAEqB,CACvB,CC3IA,SAAwBM,IAAmB,CA2CzC,MAAO,CAAE,cAzCa,CAACC,EAAqCC,IAAyC,CACnG,GAAItD,GAAkBqD,CAAkB,GAAKrD,GAAkBsD,CAAsB,EAAG,CACtF,KAAM,CAAE,WAAAhC,EAAY,WAAAC,CAAA,EAAe8B,EACnC,QAAQ,IAAI,+DAAgE/B,CAAU,EACtF,QAAQ,IAAI,+DAAgEC,CAAU,EACtF,MAAMgC,EAAmBD,GAAA,YAAAA,EAAwB,UAEjD,GADA,QAAQ,IAAI,sEAAuEhC,EAAYiC,EAAkBhC,CAAU,EACvHgC,IAAqB,QAAajC,IAAe,QAAaC,IAAe,OAC/E,OAAIgC,GAAoBjC,GAAciC,GAAoBhC,EACjD,GACEgC,EAAmBhC,EACrB,GACE,EAAAgC,EAAmBjC,EAMlC,CACA,MAAO,EACT,EAqBwB,cAnBF,CAAC+B,EAAqCC,IAAyC,CACnG,GAAItD,GAAkBqD,CAAkB,GAAKrD,GAAkBsD,CAAsB,EAAG,CACtF,KAAM,CAAE,WAAAhC,EAAY,WAAAC,CAAA,EAAe8B,EAC7BE,EAAmBD,GAAA,YAAAA,EAAwB,UACjD,GAAIC,IAAqB,QAAajC,IAAe,QAAaC,IAAe,OAC/E,OAAIgC,GAAoBjC,GAAciC,GAAoBhC,GAE/CgC,EAAmBhC,EADrB,IAGEgC,EAAmBjC,EACrB,GAKb,CACA,MAAO,EACT,CAEwB,CAC1B,CCzCA,SAAwBkC,IAAuB,CAC7C,MAAM1C,EAAUC,GAAO,MAAM,EAEvB,CAAE,gBAAA0C,EAAiB,sBAAAC,EAAuB,iCAAAC,CAAA,EAAqCxL,GAAA,EAC/E,CAAE,oBAAAyL,CAAA,EAAwBC,GAAA,EAC1B,CAAE,sBAAAC,CAAA,EAA0BC,GAAA,EAE5BC,EAA4B,MAAOC,EAAiBC,EAAYC,EAA0B,KAAU,CACxG,QAAQ,IAAI,+FAAgGH,CAAyB,EACrIL,EAAiC,EAAI,EAErC,MAAMS,EAAkBX,EAAgB,KAAM1I,GAA0BA,EAAK,KAAOmJ,CAAE,EACtF,QAAQ,IAAI,qFAAsFE,CAAe,EACjH,IAAIC,EAAkC,KACtC,OAAID,GAAmB,CAACD,IACtBE,EAAUD,IAGR,CAACC,GAAWF,KACdE,EAAU,MAAMC,EAAyBL,EAASC,CAAE,GAGtD,QAAQ,IAAI,mCAAoCT,EAAiBY,CAAO,EAExEX,EAAsBW,CAAO,EAEzBA,GACFP,EAAsB,CAACO,CAAO,CAAC,EAE1BA,CACT,EAEMC,EAA2B,MAAOL,EAAiBC,IAAe,CACtE,MAAMK,EAAW,MAAMzD,EAAS,WAAW,sBAAsBmD,EAAS,CACxE,QAAS,CAAE,SAAU,GAAM,YAAa,GAAM,UAAW,EAAA,EACzD,OAAQ,CACN,SAAUC,CAAA,CACZ,CACD,EAED,OAAIK,GAAYA,EAAS,KAAK,OAAS,GACrC,QAAQ,IAAI,6EAA8EA,CAAQ,EAClE,MAAMX,EAAoBW,EAAS,KAAK,CAAC,CAAC,GAGrE,IACT,EAEA,MAAO,CACL,0BAAAP,EACA,yBAAAM,CAAA,CAEJ,CC9BA,SAAwBE,IAAoB,CACHrD,GAAA,EACvC,KAAM,CAAE,uBAAApJ,EAAwB,qBAAAE,EAAsB,wBAAA+G,EAAyB,yBAAAhH,CAAA,EAA6BG,GAAA,EACtG,CAAE,qBAAAsM,EAAsB,qBAAAC,EAAsB,aAAAxG,EAAc,aAAAC,EAAc,gBAAAxF,EAAiB,gBAAAC,CAAA,EAAoBE,GAAA,EAC/G,CAAE,SAAAL,EAAU,YAAAkM,EAAa,gBAAAC,EAAiB,aAAAC,CAAA,EAAiB/L,GAAA,EAC3D,CAAE,oBAAAgM,CAAA,EAAwBpL,GAAA,EAC1B,CAAE,WAAAqL,GAAY,8BAAAC,CAAA,EAAkCnE,GAAA,EAChD,CAAE,eAAAoE,CAAA,EAAmBC,GAAA,EACrB,CAAE,cAAAC,EAAe,cAAAC,CAAA,EAAkBhC,GAAA,EACnC,CAACiC,GAAkBC,CAAmB,EAAIhN,EAAAA,SAAS,EAAK,EACxD,CAACiN,EAAeC,CAAgB,EAAIlN,EAAAA,SAAS,EAAI,EACjD,CAACmN,GAAcC,CAAe,EAAIpN,EAAAA,SAAS,EAAK,EAChD,CAAE,qBAAAqN,EAAsB,WAAAC,CAAA,EAAeC,GAAA,EACvC,CAAE,SAAAlE,GAAU,YAAAmE,EAAa,WAAAjE,EAAY,cAAAkE,EAAA,EAAkB3G,GAAA,EACvD,CAAE,oBAAAF,GAAqB,YAAAmD,CAAA,EAAgBvJ,GAAA,EACvC,CAAE,wBAAAkN,EAAA,EAA4BC,GAAA,EAG9BC,EAAkClM,EAAAA,QAAQ,IACvChC,EAAyBD,GAAA,YAAAA,EAAwB,QAAQ,EAC/D,CAACA,GAAA,YAAAA,EAAwB,GAAIC,CAAwB,CAAC,EAEnD,CAACmO,EAAcC,CAAe,EAAI9N,EAAAA,SAAS,EAAE,EAC7C,CAAC+N,EAAcC,CAAe,EAAIhO,EAAAA,SAAS,EAAE,EAC7C,CAACiO,EAAmBC,EAAoB,EAAIlO,EAAAA,SAAS,EAAK,EAC1D,CAACmO,EAAmBC,CAAoB,EAAIpO,EAAAA,SAAS,EAAK,EAE1D,CAACqO,EAAsBC,CAAuB,EAAItO,EAAAA,SAAS,EAAI,EAC/D,CAACuO,EAAmBC,CAAoB,EAAIxO,EAAAA,SAAS,EAAK,EAC1D,CAACyO,GAAMC,EAAO,EAAI1O,EAAAA,SAAiB,EAAE,EACrC2O,GAAUC,EAAAA,OAAe,EAAE,EAEjCpK,EAAAA,UAAU,IAAM,CACd,QAAQ,IAAI,6BAA8BiK,EAAI,EAC9CE,GAAQ,QAAUF,EACpB,EAAG,CAACA,EAAI,CAAC,EAGT,MAAMI,EAAgBnN,EAAAA,QAAQ,IACrBjC,GAAA,YAAAA,EAAwB,cAC9B,CAACA,CAAsB,CAAC,EACrBqP,EAAgBpN,EAAAA,QAAQ,IACrBjC,GAAA,YAAAA,EAAwB,cAC9B,CAACA,CAAsB,CAAC,EAErBsP,GAASrN,EAAAA,QAAQ,IACdjC,GAAA,YAAAA,EAAwB,OAC9B,CAACA,CAAsB,CAAC,EAErBuP,GAAStN,EAAAA,QAAQ,IACdjC,GAAA,YAAAA,EAAwB,OAC9B,CAACA,CAAsB,CAAC,EAErBoD,EAAUnB,EAAAA,QAAQ,IACfkM,GAAA,YAAAA,EAAiC,QACvC,CAACA,CAA+B,CAAC,EAE9B,CAAE,eAAAqB,CAAA,EAAmBC,GAAmBH,GAAQC,GAAQnM,CAAO,EAG/D,CAAE,YAAasM,IAAsBC,GAAmBP,CAAa,EACrE,CAAE,YAAaQ,IAAsBD,GAAmBN,CAAa,EAGrEQ,GAAoB9C,EAAoBqC,GAAA,YAAAA,EAAe,UAAWhB,CAAY,EAC9E0B,GAAoB/C,EAAoBsC,GAAA,YAAAA,EAAe,UAAWf,CAAY,EAE9EyB,GAAmB,IAAM,CAC7B1B,EAAgB,EAAE,EAClBE,EAAgB,EAAE,EAClB3B,EAAY,CAAA,CAAsB,EAClCC,EAAgB,MAAS,CAC3B,EAEA9H,EAAAA,UAAU,IAAM,EACT,CAACqJ,GAAgB,CAAC,CAACA,KAAkB,CAACE,GAAgB,CAAC,CAACA,KAC3D1B,EAAY,CAAA,CAAsB,EAClCC,EAAgB,MAAS,EAE7B,EAAG,CAACuB,EAAcE,CAAY,CAAC,EAE/B,MAAM0B,GAAqB,CAACvG,EAAgBmF,KAAkC,CAW5E,GAVI,CAACnF,GAAUK,GACbiG,GAAA,EAEFlB,EAAwBD,EAAoB,EACxCA,GACFP,EAAgB5E,CAAM,EAEtB8E,EAAgB9E,CAAM,EAGpB,CAACA,EAAQ,CACX,MAAMuF,GAAOiB,GAAA,EACbhB,GAAQD,EAAI,EAEZ,QAAQ,IAAI,oCAAqCvF,CAAM,CACzD,MACMK,IACE8E,GACFL,EAAgB,EAAE,EAElBF,EAAgB,EAAE,EAI1B,EAEM6B,GAAsB,MAC1BzG,EACAM,GACA6E,GACAuB,GAA+B,GAC/BC,GAA+B,KAC5B,CACCtG,GAAc,CAACgF,GACjBC,EAAqB,EAAI,EAE3B,QAAQ,IAAI,oEAAqEtF,EAAQM,GAAa6E,EAAoB,EAC1H,MAAMxL,GAAU+K,EAAgC,QAC1CkC,GAAmB7C,EAAgBrH,EAAa,MAAQnG,EAAuB,WAC/EsQ,GAAmB9C,EAAgBpH,EAAa,MAAQpG,EAAuB,WACrF,QAAQ,IAAI,gFAAiF,CAC3F,uBAAAA,EACA,iBAAAqQ,GACA,iBAAAC,GACA,aAAAnK,EACA,aAAAC,CAAA,CACD,EAED,IAAImD,GAAa/F,EAAE6M,EAAgB,EAAE,GAAGrQ,EAAuB,UAAU,EAAIA,EAAuB,WAAaqQ,GAC7G7G,EAAahG,EAAE8M,EAAgB,EAAE,GAAGtQ,EAAuB,UAAU,EAAIA,EAAuB,WAAasQ,GAE7G/G,GAAaC,IACfD,GAAavJ,EAAuB,WACpCwJ,EAAaxJ,EAAuB,YAGtC,IAAIqJ,EAAS,CACX,KAAM8E,EACN,SAAUA,EAAgC,UAC1C,QAAA/K,GACA,WAAAmG,GACA,WAAAC,EACA,SAAAI,GACA,OAAQpG,EAAEiG,GAAU,CAAC,EAClB,IAAI,KAAOmF,GAAuBQ,GAAA,YAAAA,EAAe,SAAWC,GAAA,YAAAA,EAAe,SAAS,EACpF,SAAA,EACH,WAAYrP,GAAA,MAAAA,EAAwB,UAAY,CAAC4O,GAAuBA,GACxE,UAAWQ,EACX,QAASC,EACT,UAAWrP,GAAA,YAAAA,EAAwB,UACnC,WAAA8J,EACA,YAAatG,EAAEuG,IAAe,CAAC,EAC5B,IAAI,KAAO6E,GAAuBS,GAAA,YAAAA,EAAe,SAAWD,GAAA,YAAAA,EAAe,SAAS,EACpF,SAAA,CAAS,EAKd,QAAQ,IAAI,oEAAqE/F,CAAM,EACvF,GAAI,CACF,KAAM,CAAE,mBAAAkH,EAAoB,mBAAAC,EAAoB,SAAA9P,IAAa,MAAMsM,GAAW3D,CAAM,EACpFuD,EAAYlM,EAAQ,EACpBmM,EAAgB,MAAS,EACzB,QAAQ,IAAI,sEAAuE,CACjF,SAAAnM,GACA,OAAA2I,CAAA,CACD,EACGS,IACE8E,GACGwB,IACH7B,EAAgBiC,CAAkB,EAG/BL,IACH9B,EAAgBkC,CAAkB,EAU1C,OAASE,EAAO,CACV,OAAOA,CAAK,EAAE,SAAS,gBAAgB,GACzC5D,EAAgB,gBAAgB,EAChCD,EAAY,CAAA,CAAsB,GAElCC,EAAgB,MAAS,CAE7B,CACF,EAGM6D,GAAoB,IAAM,CAC9B,IAAKtC,GAAgBE,IAAiBrG,GAAkBjI,CAAsB,EAAG,CAC/E,MAAMyJ,EAASmF,EAAuBR,EAAeE,EAC/CvE,GAAc6E,EAAuBN,EAAeF,EACtD,CAAC3E,GAAU,CAACM,IACd,QAAQ,IAAI,+EAAgFN,EAAQ,OAAQM,EAAW,EACvHmG,GAAoBzG,EAAQM,GAAa6E,EAAsBJ,EAAmBE,CAAiB,IAEnG9B,EAAY,CAAA,CAAsB,EAClCC,EAAgB,MAAS,EAE7B,CACF,EAEA9H,EAAAA,UAAU,IAAM,CACV+J,GACF,WAAW,IAAM,CACfC,EAAqB,EAAK,CAC5B,EAAG,GAAG,CAEV,EAAG,CAACD,CAAiB,CAAC,EAEtB,MAAM6B,GAAc1O,EAAAA,QAAQ,IACnBuB,EAAEqM,EAAiB,EAAE,IAAIC,EAAiB,EAAE,SAAA,EAClD,CAACD,GAAmBC,EAAiB,CAAC,EAEnCc,GAAiB3O,EAAAA,QAAQ,IACtBmL,EAAcpN,EAAwBmO,CAA+B,EAC3E,CAACA,GAAA,YAAAA,EAAiC,UAAWnO,CAAsB,CAAC,EAEjE6Q,GAAiB5O,EAAAA,QAAQ,IACtBoL,EAAcrN,EAAwBmO,CAA+B,EAC3E,CAACA,GAAA,YAAAA,EAAiC,UAAWnO,CAAsB,CAAC,EAEjE8Q,GAAyB9Q,GAAA,MAAAA,EAAwB,UAA6B6Q,GAAjBD,GAC7DG,GAAyB/Q,GAAA,MAAAA,EAAwB,UAA6B4Q,GAAjBC,GAE7D,CAAE,eAAAG,GAAgB,aAAAC,GAAc,gBAAAC,GAAiB,eAAAC,EAAA,EAAmBjI,GAAA,EACpE,CAA6B,+BAAAkI,EAAA,EAAmCC,GAAA,EAChE,CAAE,oBAAAC,EAAA,EAAwBC,GAAA,EAC1B,CAAE,0BAAAtF,EAAA,EAA8BR,GAAA,EAChC,CAAE,QAAA+F,EAAA,EAAYC,GAAA,EACdC,GAAQ,SAAY,CACxB/D,EAAgB,EAAI,EACpB,IAAIgE,EAAuB,CAAA,EAC3B,MAAMC,GAAY,CAChB,SAAU5R,EAAuB,SACjC,UAAWA,EAAuB,UAClC,UAAWA,EAAuB,UAClC,WAAYA,GAAA,YAAAA,EAAwB,GACpC,SAAUmO,EAAgC,UAC1C,WAAY7D,EACZ,YAAaA,EAAc6D,EAAgC,eAAe,QAAQ,IAAI0D,GAAOA,EAAI,WAAW,EAAI,CAAA,EAChH,SAAAnR,EACA,SAAAkJ,GACA,QAAAxG,CAAA,EAEF,IAAI0O,GAAa,CAAA,EAEjB,QAAQ,IAAI,sDAAuDF,EAAS,EAE5E,KAAM,CAAE,SAAUG,GAAY,YAAAnH,GAAa,GAAGoH,IAAcJ,GAE5DD,EAAkB,CAAE,GAAGK,EAAA,EAEnBpH,GAAY,OAAS,IACvB+G,EAAgB,YAAiB,KAAK,UAAU/G,EAAW,GAG7D,MAAMqH,GAAKhF,EAA8B2E,GAAWtH,CAAW,EAC/DwH,GAAMA,GAAI,OAAOG,EAAE,EAEnB,QAAQ,IAAI,kDAAmDA,EAAE,EACjE,MAAMC,GAAc,CAClB,OAAQC,GAAwB,sBAChC,UAAWP,EAAA,EAEPQ,GAAY,CAChB,YAAa,CAACC,EAA+BC,EAAiDC,EAAQC,KAAsB,CAC1H,MAAMC,EACJ,OACA,CAACC,GAAkBtE,EAAcgB,GAAA,YAAAA,EAAe,MAAM,EAAGsD,GAAkBpE,EAAce,GAAA,YAAAA,EAAe,MAAM,CAAC,EAC5G,OAAO,OAAO,EACd,KAAK,OAAO,EAEXsD,GAAuB,CAC3B,qBAAsBF,EACtB,eAAgBA,CAAA,EAEZG,IAAmBJ,IAAA,YAAAA,GAAa,gBAAiBA,GAAY,cAAc,OAAS,GAAKA,GAAY,eAAe,OAAS,EAQnI,GAPIH,IAAW,YACTO,IACEJ,GAAY,cAAc,OAAS,IACrCG,GAAK,wBAA0B,uBAAuBH,GAAY,cAAc,MAAM,KAAKV,GAAI,MAAM,KAIvGO,IAAW,UAAW,CACxB,IAAIQ,GAAWzE,EACX0E,GAAWxE,EAEXgE,IACFO,GAAWE,GAAkBT,EAAgBlD,CAAa,GAAKhB,EAC/D0E,GAAWC,GAAkBT,EAAgBjD,CAAa,GAAKf,GAEjE,MAAMmE,GACJ,OACA,CAACC,GAAkBG,GAAUzD,GAAA,YAAAA,EAAe,MAAM,EAAGsD,GAAkBI,GAAUzD,GAAA,YAAAA,EAAe,MAAM,CAAC,EAAE,OAAO,OAAO,EAAE,KAAK,OAAO,EACnIyC,GAAI,OAAS,EACfa,GAAK,wBAA0B,0BAA0Bb,GAAI,MAAM,KAAKA,GAAI,MAAM,IAElFa,GAAK,wBAA0BF,GAEjCE,GAAK,qBAAuBF,GAC5BE,GAAK,eAAiB,qBACxB,CAEA,OAAOA,EACT,CAAA,EAEEb,GAAI,SAAW,GACjB7D,GAAwBmE,EAAS,EAEnC,QAAQ,IAAI,kDAAmDH,EAAE,EAEjE,MAAMhN,EAAM,MAAMmM,GAA+BU,GAAKM,GAAW,CAC/D,OAAQpB,GAER,aAAAC,GACA,eAAAE,GACA,YAAAe,GACA,UAAW,CACT,OAAQP,EACR,WAAY,OACZ,OAAQ,uBAAA,CACV,CACD,EAEG1M,GAAA,MAAAA,EAAK,gBAEP8K,GAAA,EACAuB,GAAA,EACA,MAAME,GAAQ,CAAE,OAAQxR,GAAA,YAAAA,EAAwB,SAAU,EAC1DiM,GAA0BiB,GAAA,YAAAA,EAAgB,QAASlN,GAAA,YAAAA,EAAwB,GAAc,EAAI,GAEzFA,GAEFiM,GAA0BiB,GAAA,YAAAA,EAAgB,QAASlN,GAAA,YAAAA,EAAwB,GAAI,EAAI,EAAE,KAAKiF,GAAO,CAC/F,QAAQ,IAAI,sBAAuBA,CAAG,EACtCyL,GAAA,CACF,CAAC,EAGL/C,EAAgB,EAAK,CACvB,EAEMqF,GAAY,IAAM,CACtBtB,GAAA,CACF,EAIM,CAACuB,GAAeC,EAAgB,EAAI3S,EAAAA,SAAS,EAAE,EAC/C,CAAC4S,GAAeC,EAAgB,EAAI7S,EAAAA,SAAS,EAAE,EAE/CV,GAAYoC,EAAAA,QAAQ,IACjBjC,GAAA,YAAAA,EAAwB,UAC9B,CAACA,CAAsB,CAAC,EAErBqT,GAA6BpR,EAAAA,QAAQ,IAClCgF,EAAwBjH,GAAA,YAAAA,EAAwB,EAAE,EACxD,CAACiH,EAAyBjH,GAAA,YAAAA,EAAwB,EAAE,CAAC,EAElDsT,GAA0BrR,EAAAA,QAAQ,IAC/B/B,EAAqBF,GAAA,YAAAA,EAAwB,EAAE,EACrD,CAACA,GAAA,YAAAA,EAAwB,GAAIE,CAAoB,CAAC,EAE/CqT,GAActR,EAAAA,QAAQ,IACnBkF,GAAsBkM,IAAA,YAAAA,GAA4B,SAAWA,IAAA,YAAAA,GAA4B,gBAC/F,CAACA,GAA4BrT,GAAA,YAAAA,EAAwB,GAAImH,EAAmB,CAAC,EAE1EqM,GAAmBvR,EAAAA,QAAQ,IACxBoR,IAAA,YAAAA,GAA4B,cAClC,CAACA,GAA4BrT,GAAA,YAAAA,EAAwB,EAAE,CAAC,EAErDyT,GAAcxR,EAAAA,QAAQ,IACnBkF,GAAsBkM,IAAA,YAAAA,GAA4B,SAAWA,IAAA,YAAAA,GAA4B,gBAC/F,CAACA,GAA4BrT,GAAA,YAAAA,EAAwB,GAAImH,EAAmB,CAAC,EAE1EuM,GAAmBzR,EAAAA,QAAQ,IACxBoR,IAAA,YAAAA,GAA4B,cAClC,CAACA,GAA4BrT,GAAA,YAAAA,EAAwB,EAAE,CAAC,EAErD2T,GAA2B,IAAM,CACjC,CAAC3T,GAA0B,CAACsP,IAAU,CAACC,IAAU,CAACnM,IAEtDwQ,GAAa,CAAC5T,EAAuB,WAAYA,EAAuB,UAAU,CAAC,EAEnFkT,GAAiBI,IAAA,YAAAA,GAAyB,kBAAkB,EAC5DF,GAAiBE,IAAA,YAAAA,GAAyB,kBAAkB,EAC9D,EAEM,CAACO,GAAaC,EAAc,EAAIvT,EAAAA,SAAS,EAAK,EACpD2B,GAAqB,IAAM,CACrBoR,IAA2BhE,IAAUC,IAAUnM,GAAW,CAACyQ,KAC7DF,GAAA,EACAG,GAAe,EAAI,GAErBZ,GAAiBI,IAAA,YAAAA,GAAyB,kBAAkB,EAC5DF,GAAiBE,IAAA,YAAAA,GAAyB,kBAAkB,CAC9D,EAAG,CAACzT,GAAWyT,GAAyBhE,GAAQC,GAAQnM,CAAO,CAAC,EAEhE,MAAM2Q,GAAoBC,EAAAA,YACxB,CAACC,EAAqBtQ,KAAyB,CAC7C,MAAMuQ,GAAavQ,GAAM,OAAS,QAWlC,GAVA,QAAQ,IAAI,kCAAmC,CAC7C,MAAAA,GACA,WAAAuQ,GACA,oBAAA/M,GACA,KAAA8M,EACA,aAAA9N,EACA,aAAAC,EACA,uBAAApG,CAAA,CACD,EAGCoD,IAAY,QACZkM,KAAW,QACXC,KAAW,QACXgE,IACAE,IACAD,IACAE,GACA,CACA,KAAM,CAAE,OAAAS,GAAQ,MAAOC,EAAA,EAAWxG,EAAqBjK,GAAOP,EAASkM,IAAA,YAAAA,GAAQ,SAAUC,IAAA,YAAAA,GAAQ,SAAU0E,CAAI,EAE/G,GAAIC,GACF,GAAKD,IAAS,OAASE,GAASX,IAAsBS,IAAS,OAASE,GAAST,GAAmB,CAClG,MAAMW,GAAY7E,EAAegE,GAAkBU,EAAU,EACzDG,IACFzT,EAAgByT,EAAS,CAE7B,KAAO,CACL,MAAMA,GAAY7E,EAAe2E,GAAQD,EAAU,EAC/CG,IACFzT,EAAgByT,EAAS,CAE7B,SAEKJ,IAAS,OAASE,GAASX,IAAsBS,IAAS,OAASE,GAAST,GAAmB,CAClG,MAAMW,GAAY7E,EAAekE,GAAkBQ,EAAU,EACzDG,IACFxT,EAAgBwT,EAAS,CAE7B,KAAO,CACL,MAAMA,GAAY7E,EAAe2E,GAAQD,EAAU,EAC/CG,IACFxT,EAAgBwT,EAAS,CAE7B,CAGJ,CACF,EACA,CAACjR,EAASkM,GAAQC,GAAQgE,GAAaE,GAAatM,EAAmB,CAAA,EAGnEyM,GAAgBU,GAAkB,CACtC,GAAI,CAAChF,IAAU,CAACC,IAAU,CAACnM,EAAS,OACpC,MAAMmG,GAAa+K,EAAI,CAAC,EAClB9K,GAAa8K,EAAI,CAAC,EAElBlO,GAAeoJ,EAAehG,GAAY,EAAK,EACjDpD,IACFvF,EAAgBuF,EAAY,EAG9B,MAAMD,GAAeqJ,EAAejG,GAAY,EAAI,EAChDpD,IACFvF,EAAgBuF,EAAY,CAEhC,EAEM,CAACoO,GAAUC,EAAW,EAAIjU,EAAAA,SAAS,EAAI,EAEvCiC,GAAYP,EAAAA,QAAQ,IACjBsS,GAAWnF,EAAgBC,EACjC,CAACD,EAAeC,EAAekF,EAAQ,CAAC,EAErC9R,GAAaR,EAAAA,QAAQ,IAClBsS,GAAWlF,EAAgBD,EACjC,CAACA,EAAeC,EAAekF,EAAQ,CAAC,EAC3CE,GACE,IAAM,gBACJ,IAAK/T,GAAA,MAAAA,EAAU,UAAYA,GAAA,MAAAA,EAAU,WAAa,CAACoO,GAAqB9O,EAAwB,CAC9F,IAAI0U,GAAahU,EAAS,UAAY,IAClCiU,GAAajU,EAAS,UAAY,IAqBtC,MAAMkU,GAAU5U,EAAuB,UAAY2U,GAAaD,GAC1DG,GAAU7U,EAAuB,UAAY0U,GAAaC,GAC1DG,GAAiB9U,EAAuB,WAAY6B,EAAA7B,GAAA,YAAAA,EAAwB,SAAxB,YAAA6B,EAAgC,UAAWE,GAAA/B,GAAA,YAAAA,EAAwB,SAAxB,YAAA+B,GAAgC,SAC/HgT,EAAiB/U,EAAuB,WAAYgF,GAAAhF,GAAA,YAAAA,EAAwB,SAAxB,YAAAgF,GAAgC,UAAWgQ,GAAAhV,GAAA,YAAAA,EAAwB,SAAxB,YAAAgV,GAAgC,SAC/HnC,EAAWoC,GAAmBL,GAASE,EAAc,EACrDhC,EAAWmC,GAAmBJ,GAASE,CAAc,EAC3DrI,EAAqBlJ,EAAEqP,CAAQ,EAAE,KAAKI,EAAa,EAAE,UAAU,EAC/DtG,EAAqBnJ,EAAEsP,CAAQ,EAAE,KAAKK,EAAa,EAAE,UAAU,CACjE,MACEzG,EAAqB,EAAE,EACvBC,EAAqB,EAAE,CAE3B,EACA,CAACmC,EAAmBmE,GAAeE,GAAezS,GAAA,YAAAA,EAAU,SAAUA,GAAA,YAAAA,EAAU,QAAQ,EACxF,CAAE,KAAM,GAAA,CAAI,EAGdqE,EAAAA,UAAU,IACD,IAAM,CACXgL,GAAA,EACArD,EAAqB,EAAE,EACvBC,EAAqB,EAAE,CACzB,EACC,CAAA,CAAE,EAEL,MAAMuI,GAAWjT,EAAAA,QAAQ,KAChBoR,IAAA,YAAAA,GAA4B,iBAAkB,SACpD,CAACA,IAAA,YAAAA,GAA4B,aAAa,CAAC,EAE9CtO,EAAAA,UAAU,IAAM,CACVmQ,MACE/G,GAAA,YAAAA,EAAiC,YAAY/H,GAAA,YAAAA,EAAc,SAAS+H,GAAA,YAAAA,EAAiC,YAAYhI,GAAA,YAAAA,EAAc,SACjIsI,GAAqB,CAAC5O,EAAS,EAC/B8O,EAAqB9O,EAAS,IAE5BsO,GAAA,YAAAA,EAAiC,YAAY/H,GAAA,YAAAA,EAAc,SAAS+H,GAAA,YAAAA,EAAiC,YAAYhI,GAAA,YAAAA,EAAc,SACjIsI,GAAqB5O,EAAS,EAC9B8O,EAAqB,CAAC9O,EAAS,IAE7BsO,GAAA,YAAAA,EAAiC,aAAa/H,GAAA,YAAAA,EAAc,SAAS+H,GAAA,YAAAA,EAAiC,aAAahI,GAAA,YAAAA,EAAc,SACnIsI,GAAqB,EAAK,EAC1BE,EAAqB,EAAK,GAGhC,EAAG,CAACR,GAAA,YAAAA,EAAiC,UAAWhI,GAAA,YAAAA,EAAc,MAAOC,GAAA,YAAAA,EAAc,MAAO8O,GAAUrV,EAAS,CAAC,EAE9GkF,EAAAA,UAAU,IAAM,CACVyJ,IACFH,EAAgB,EAAE,EAClBQ,EAAwB,EAAK,GAE3BH,IACFH,EAAgB,EAAE,EAClBM,EAAwB,EAAI,GAE1B,CAACL,GAAqB,CAACE,IACrBN,GAAgB,CAACE,GACnBO,EAAwB,EAAI,EAE1BP,GAAgB,CAACF,GACnBS,EAAwB,EAAK,EAGnC,EAAG,CAACL,EAAmBE,CAAiB,CAAC,EAEzC3J,EAAAA,UAAU,IAAM,CAIZwI,EAHG,CAAA2H,EAGsB,CAE7B,EAAG,CAACA,EAAQ,CAAC,EAEb,MAAMC,GAAmBnB,EAAAA,YAAY,IAAM,CACzChG,GAAc,CAAClE,CAAU,EACrBsE,IAAiB,IAAME,IAAiB,IAC1CO,EAAwB,EAAI,EAE1BT,IAAiB,IAAME,IAAiB,IAC1CO,EAAwB,EAAK,CAEjC,EAAG,CAAC/E,EAAYsE,EAAcE,CAAY,CAAC,EAErC8G,GAAUnT,EAAAA,QAAQ,KAClBkE,GAAA,YAAAA,EAAc,SAAU,SAAaC,GAAA,YAAAA,EAAc,SAAU,OACxDyH,EAAW1H,EAAc,MAAOC,EAAc,KAAK,EAEnD,KAER,CAACD,GAAA,YAAAA,EAAc,MAAOC,GAAA,YAAAA,EAAc,KAAK,CAAC,EAEvCiP,GAAgBpT,EAAAA,QAAQ,IAAM,CAClC,MAAMqT,EAGF,CACF,KAAM,qBACN,SAAU,EAAA,EAEZ,OAAKpI,GAAA,MAAAA,EAAgB,QAKjBJ,IAAiB,kBACnBwI,EAAQ,SAAW,GACZA,GAIL,CAAC,CAAClH,GAAgB,CAAC,CAACE,GACtBgH,EAAQ,KAAO,kBACfA,EAAQ,SAAW,GACZA,GAGL,CAACxE,IAAyB1C,GAAgB5K,EAAE4K,CAAY,EAAE,IAAGsB,IAAA,YAAAA,GAAmB,gBAAiB,CAAC,GACpG4F,EAAQ,SAAW,GACnBA,EAAQ,KAAO,gBAAgBjN,GAAa+G,GAAA,YAAAA,EAAe,OAAQ,EAAE,CAAC,WAC/DkG,GAGL,CAACvE,IAAyBzC,GAAgB9K,EAAE8K,CAAY,EAAE,IAAGsB,IAAA,YAAAA,GAAmB,gBAAiB,CAAC,GACpG0F,EAAQ,SAAW,GACnBA,EAAQ,KAAO,gBAAgBjN,GAAagH,GAAA,YAAAA,EAAe,OAAQ,EAAE,CAAC,WAC/DiG,GAEL,CAAC1E,IAAkB,CAACC,IAAkB,CAAC,CAACzC,GAAgB,CAAC,CAACE,GAAgBxE,GAAc,CAAC0E,GAAqB,CAACE,GACjH4G,EAAQ,SAAW,GACZA,KAEL9G,GAAqB,CAAC,CAACF,GAKvBI,GAAqB,CAAC,CAACN,KACzBkH,EAAQ,KAAO,kBACfA,EAAQ,SAAW,IACZA,IAvCPA,EAAQ,KAAO,iBACfA,EAAQ,SAAW,GACZA,EAyCX,EAAG,CACDlH,EACAE,EACAoB,GACAE,GACA1C,GAAA,YAAAA,EAAgB,QAChBpD,EACA0E,EACAE,EACAU,EACAC,EACA+F,EAAA,CACD,EAED,MAAO,CACL,cAAAhG,EACA,cAAAC,EACA,kBAAAK,GACA,kBAAAE,GACA,kBAAAC,GACA,kBAAAC,GACA,aAAA1B,EACA,aAAAE,EACA,mBAAA0B,GACA,SAAApG,GACA,YAAAmE,EACA,kBAAAe,EACA,qBAAAF,EACA,YAAA+B,GACA,cAAA0E,GACA,sBAAAvE,GACA,sBAAAC,GACA,kBAAAvC,EACA,kBAAAE,EACA,WAAA5E,EACA,cAAA0D,EACA,iBAAAC,EACA,UAAAuF,GACA,aAAAtF,GACA,gBAAAC,EACA,YAAA4F,GACA,YAAAE,GACA,iBAAAD,GACA,iBAAAE,GACA,aAAAvN,EACA,aAAAC,EACA,kBAAA2N,GACA,aAAAH,GACA,UAAApR,GACA,WAAAC,GACA,oBAAA0E,GACA,kBAAAuJ,GACA,cAAA1C,GACA,eAAA8F,GACA,iBAAAxG,GACA,iBAAA6H,GACA,QAAAC,GACA,UAAAvV,GACA,QAASwT,IAAA,YAAAA,GAA4B,QACrC,OAAA/D,GACA,OAAAC,EAAA,CAEJ,CC7sBA,SAAwBgG,GAAwBC,EAAqC,CACnF,KAAM,CACJ,UAAAhT,EACA,WAAAC,EACA,aAAA0D,EACA,aAAAC,EACA,kBAAA2N,EACA,YAAAR,EACA,YAAAE,EACA,aAAAG,EACA,YAAA6B,EACA,iBAAAjC,EACA,iBAAAE,EACA,UAAA7T,EACA,QAAAuD,EACA,OAAAkM,EACA,OAAAC,EAAA,EACEiG,EACE,CAAE,gBAAA5U,EAAiB,gBAAAC,CAAA,EAAoBE,GAAsB2U,IAAU,CAC3E,gBAAiBA,EAAM,gBACvB,gBAAiBA,EAAM,eAAA,EACvB,EACI,CAAE,oBAAAvO,CAAA,EAAwBpG,GAAA,EAC1B,CAACyM,EAAeC,EAAgB,EAAIlN,EAAAA,SAAS,EAAK,EAClD,CAAE,eAAAiP,CAAA,EAAmBC,GAAmBH,EAAQC,GAAQnM,CAAO,EAC/DuS,EAAU1T,EAAAA,QAAQ,IACf,GAAGoG,GAAalB,EAAsB1E,GAAA,YAAAA,EAAY,OAASD,GAAA,YAAAA,EAAW,MAAM,CAAC,QAAQ6F,GAAalB,EAAsB3E,GAAA,YAAAA,EAAW,OAASC,GAAA,YAAAA,EAAY,MAAM,CAAC,GACrK,CAACD,GAAA,YAAAA,EAAW,OAAQC,GAAA,YAAAA,EAAY,OAAQ0E,CAAmB,CAAC,EAEzDyO,EAAmB3T,EAAAA,QAAQ,IAC3BkE,GAAA,MAAAA,EAAc,eAAgBC,GAAA,MAAAA,EAAc,cAC1CvG,EACEsH,EACK,CAACf,EAAa,MAAQ,GAAID,EAAa,MAAQ,EAAE,EAEjD,CAACA,EAAa,MAAOC,EAAa,KAAK,EAG5Ce,EACK,CAAChB,EAAa,MAAOC,EAAa,KAAK,EAEvC,CAACA,EAAa,MAAQ,GAAID,EAAa,MAAQ,EAAE,EAIvD,CAAA,EACN,CAACA,GAAA,YAAAA,EAAc,MAAOC,GAAA,YAAAA,EAAc,MAAOe,CAAmB,CAAC,EAE5D0O,GAAkB5T,EAAAA,QAAQ,IAC1BpC,EACEsH,EACKuM,EAAmB,GAEnBF,EAGLrM,EACKqM,EAEAE,EAAmB,GAG7B,CAAC7T,EAAWsH,EAAqBqM,EAAkBE,CAAgB,CAAC,EAEjEoC,EAAkB7T,EAAAA,QAAQ,IAC1BpC,EACEsH,EACKqM,EAAmB,GAEnBE,EAGLvM,EACKuM,EAEAF,EAAmB,GAG7B,CAAC3T,EAAWsH,EAAqBqM,EAAkBE,CAAgB,CAAC,EAGjEqC,EAAgB9T,EAAAA,QAAQ,IACrB4T,KAAoBC,EAC1B,CAACD,GAAiBC,CAAe,CAAC,EAG/BE,EAAmB/T,EAAAA,QAAQ,IAC3B8T,EACKF,GAAkB,GAEpBA,GACN,CAACE,EAAeF,EAAe,CAAC,EAE7BI,GAAmBhU,EAAAA,QAAQ,IAC3B8T,EACKD,EAAkB,GAEpBA,EACN,CAACC,EAAeD,CAAe,CAAC,EAG7BI,EAA2BjU,EAAAA,QAAQ,IACnC8T,GAAiBH,EAAiB,SAAW,EAGxC,CAACI,EAAkBC,EAAgB,EAErCL,EACN,CAACG,EAAeH,EAAkBI,EAAkBC,EAAgB,CAAC,EAElEE,EAAiBlU,EAAAA,QAAQ,IACtBpC,IAAcsH,EAAsBhB,EAAeC,EACzD,CAACD,GAAA,YAAAA,EAAc,MAAOA,GAAA,YAAAA,EAAc,aAAcC,GAAA,YAAAA,EAAc,MAAOA,GAAA,YAAAA,EAAc,aAAcvG,EAAWsH,CAAmB,CAAC,EAE/HiP,GAAiBnU,EAAAA,QAAQ,IACtBpC,IAAcsH,EAAsBf,EAAeD,EACzD,CAACA,GAAA,YAAAA,EAAc,MAAOA,GAAA,YAAAA,EAAc,aAAcC,GAAA,YAAAA,EAAc,MAAOA,GAAA,YAAAA,EAAc,aAAcvG,EAAWsH,CAAmB,CAAC,EAgB/HkP,GAAgB,CAACC,EAAsBC,KAAkB,CAC7D,GAAI,CAACjH,GAAU,CAACC,IAAU,CAACnM,EAAS,OACpC,MAAMoT,EAAc5S,GAAY2S,EAAK,EACrC,IAAIE,EAAS/Q,GAAS,kBAAkB8Q,EAAapT,GAAUkT,GAAA,YAAAA,EAAM,QAAS,QAAShH,GAAA,YAAAA,EAAQ,SAAUC,IAAA,YAAAA,GAAQ,QAAQ,EAqBzH,GApBA,QAAQ,IACN,CACE,OAAAkH,EACA,KAAAH,EACA,aAAAnQ,EACA,aAAAC,EACA,YAAAoQ,EACA,oBAAArP,EACA,UAAAtH,EACA,iBAAA6T,EACA,iBAAAF,EACA,MAAA+C,EAAA,EAEF,eAAA,GAGEE,EAASjD,GAAoBiD,EAAS/C,KACxC+C,GAASH,GAAA,YAAAA,EAAM,QAAS,QAAU9C,EAAmBE,IAGnD4C,GAAA,YAAAA,EAAM,QAAS,QAAS,CAC1BA,EAAK,YAAcA,EAAK,YAAcA,EAAK,YAAc,EAAI,EAC7D,MAAMnQ,EAAeqJ,EAAeiH,EAAQ,EAAI,EAC5CtQ,IACFA,EAAa,YAAcmQ,EAAK,YAAcA,EAAK,YAAc,EAAI,EACrE1V,EAAgBuF,CAAY,EAEhC,KAAO,CACLmQ,EAAK,YAAcA,EAAK,YAAcA,EAAK,YAAc,EAAI,EAC7D,MAAMlQ,EAAeoJ,EAAeiH,EAAQ,EAAK,EAC7CrQ,IACFA,EAAa,YAAckQ,EAAK,YAAcA,EAAK,YAAc,EAAI,EACrEzV,EAAgBuF,CAAY,EAEhC,CACF,EAEA,OACEhH,EAAAA,KAACuH,GAAA,CAAO,GAAG,MAAM,EAAE,OACjB,SAAA,CAAAvH,EAAAA,KAACuH,GAAA,CAAO,EAAE,OACR,SAAA,CAAAvH,EAAAA,KAACC,GAAA,CAAO,EAAE,OAAO,eAAe,gBAC9B,SAAA,CAAAC,EAAAA,IAACK,GAAK,SAAS,OAAO,MAAM,eAAe,WAAW,MAAM,SAAA,cAAA,CAE5D,EACAP,EAAAA,KAACC,GAAA,CACC,IAAI,MACJ,QAAS,IAAM,CACboO,GAAiB,CAACD,CAAa,CACjC,EACA,OAAO,UACP,OAAQ,CACN,IAAK,CACH,KAAM,cAAA,CACR,EAGF,SAAA,CAAAlO,EAAAA,IAACsJ,GAAA,CACC,KAAK,QACL,QACEtJ,EAAAA,IAACK,EAAA,CAAK,SAAS,OAAO,WAAW,OAAO,SAAA,+EAExC,EAGF,eAAC+W,GAAA,CAAO,GAAG,qBAAqB,EAAE,OAAO,aAAa,OAAO,EAAE,UAC7D,eAAC/W,EAAA,CAAK,SAAS,OAAO,MAAM,UAAU,oBAEtC,CAAA,CACF,CAAA,CAAA,EAGFL,EAAAA,IAACuJ,GAAA,CACC,UAAU,4BACV,UAAW2E,EAAgB,iBAAmB,eAC9C,WAAW,iBACX,SAAS,MAAA,CAAA,CACX,CAAA,CAAA,CACF,EACF,EACCA,GAAiBoI,EAAiB,OAAS,GAAKrC,GAAeE,GAC9DrU,OAACuH,GAAA,CAAO,EAAE,OAAO,IAAI,MAAM,GAAG,OAC5B,SAAA,CAAAvH,EAAAA,KAACuX,GAAA,CACC,IAAKX,EACL,IAAKC,GACL,KAAM,EACN,MAAOC,EACP,SAAU5B,GAAO,CACf,QAAQ,IAAIA,EAAK,aAAa,EAC1B,CAAAyB,GAMEnC,EAFA/T,EACEsH,EACW,CAACmN,EAAI,CAAC,EAAI,GAAIA,EAAI,CAAC,EAAI,EAAE,EAEzBA,EAGXnN,EACWmN,EAEA,CAACA,EAAI,CAAC,EAAI,GAAIA,EAAI,CAAC,EAAI,EAAE,CARC,CAY/C,EACA,YAAY,OAEZ,SAAA,CAAAhV,MAACsX,GAAA,CAAiB,GAAG,eACnB,SAAAtX,MAACuX,KAAuB,EAC1B,EACAvX,EAAAA,IAACwX,GAAA,CAAiB,MAAO,CAAA,CAAG,EAC5BxX,EAAAA,IAACwX,GAAA,CAAiB,MAAO,CAAA,CAAG,CAAA,CAAA,CAAA,EAG9B1X,EAAAA,KAACC,GAAA,CAAO,EAAE,OAAO,eAAe,gBAC9B,SAAA,CAAAC,EAAAA,IAACK,GAAM,SAAA4T,CAAA,CAAY,EACnBjU,EAAAA,IAACK,GAAM,SAAA8T,CAAA,CAAY,CAAA,CAAA,CACrB,CAAA,CAAA,CACF,CAAA,EAEJ,EAECjG,GAAiB2I,GAAkBC,IAClChX,EAAAA,KAAC2X,GAAA,CAAM,GAAG,MAAM,SAAS,WAAW,QAAS,CAAE,KAAM,SAAU,GAAI,KAAA,EAAS,EAAE,OAAO,IAAK,CAAE,KAAM,MAAO,GAAI,MAAA,EAC3G,SAAA,CAAAzX,EAAAA,IAACI,GAAA,CAAI,QAAS,EAAG,EAAG,CAAE,KAAM,OAAQ,GAAI,KAAA,EACtC,SAAAJ,EAAAA,IAAC0X,GAAA,CACC,aAAc,GACd,MAAM,YACN,QAAArB,EACA,KAAMQ,EACN,OAAQhP,IAAwBtH,EAChC,QAAS,GACT,SAAU0T,EACV,SAAUE,EACV,aAAa0C,GAAA,YAAAA,EAAgB,QAAS,SAAUA,GAAA,YAAAA,EAAgB,SAAU3C,GAAmB2C,GAAA,YAAAA,EAAgB,SAAUzC,EACvH,aAAayC,GAAA,YAAAA,EAAgB,UAAUC,IAAA,YAAAA,GAAgB,OACvD,cAAAC,GACA,eAAgBC,GAAQ,CACtBvC,GAAA,MAAAA,EAAoB5M,IAAwBtH,EAAY,MAAQ,MAAOyW,EAAM,GAC/E,EACA,eAAgBA,GAAQ,CACtBvC,GAAA,MAAAA,EAAoB5M,IAAwBtH,EAAY,MAAQ,MAAOyW,EAAM,GAC/E,CAAA,CAAA,EAEJ,EACAhX,EAAAA,IAACI,GAAA,CAAI,QAAS,EAAG,EAAG,CAAE,KAAM,OAAQ,GAAI,KAAA,EACtC,SAAAJ,EAAAA,IAAC0X,GAAA,CACC,aAAc,GACd,MAAM,YACN,QAAArB,EACA,KAAMS,GACN,OAAQjP,IAAwBtH,EAChC,QAAS,GACT,YAAasW,EAAe,QAAUC,GAAe,MACrD,aAAaA,IAAA,YAAAA,GAAgB,QAAS,SAAUA,IAAA,YAAAA,GAAgB,SAAU5C,GAAmB4C,IAAA,YAAAA,GAAgB,SAAU1C,EACvH,SAAUH,EACV,SAAUE,EACV,cAAA4C,GACA,eAAgBC,GAAQ,CACtBvC,GAAA,MAAAA,EAAoB5M,IAAwBtH,EAAY,MAAQ,MAAOyW,EAAM,GAC/E,EACA,eAAgBA,GAAQ,CACtBvC,GAAA,MAAAA,EAAoB5M,IAAwBtH,EAAY,MAAQ,MAAOyW,EAAM,GAC/E,CAAA,CAAA,CACF,CACF,CAAA,EACF,EAGDb,GACCnW,EAAAA,IAAC2X,GAAA,CACC,WAAY,GACZ,aAAa,OACb,eAAe,SACf,KAAK,iDACL,EAAE,SACF,EAAE,OACF,aAAa,KAAA,CAAA,CACf,EAEJ,CAEJ,CChVA,SAAwBC,IAAkB,CACxC,KAAM,CACJ,cAAA9H,EACA,cAAAC,EACA,kBAAAK,EACA,kBAAAE,EACA,kBAAAC,EACA,kBAAAC,EACA,aAAA1B,EACA,aAAAE,EACA,mBAAA0B,EACA,SAAApG,EACA,YAAAmE,EACA,kBAAAe,EACA,qBAAAF,EACA,YAAA+B,EACA,cAAA0E,EACA,sBAAAvE,GACA,sBAAAC,EACA,kBAAAvC,EACA,kBAAAE,EACA,WAAA5E,EACA,UAAAkJ,GACA,aAAAtF,EACA,aAAAvH,EACA,aAAAC,EACA,YAAAmN,GACA,YAAAE,EACA,kBAAAM,EACA,aAAAH,EACA,UAAApR,GACA,WAAAC,EACA,oBAAA0E,EACA,kBAAAuJ,GAIA,iBAAAyE,GACA,QAAAC,EACA,iBAAA5B,GACA,iBAAAE,EACA,UAAA7T,EACA,QAAAuD,EACA,OAAAkM,EACA,OAAAC,CAAA,EACE9C,GAAA,EAEE,CAAE,wBAAA0K,EAAyB,YAAA7M,GAAa,eAAA8M,EAAgB,aAAAtK,CAAA,EAAiB/L,GAAA,EACzE,CAAE,MAAAsW,CAAA,EAAU5Q,GAAA,EAElBgO,GACE,IAAM,CACAxM,GAAkB9B,CAAY,GAAK8B,GAAkB7B,CAAY,GACnEsK,GAAA,CAEJ,EACA,CAACvK,EAAcC,EAAcoI,EAAmBE,EAAmBE,EAAsBR,EAAcE,EAAc1E,EAAUE,CAAU,EACzI,CACE,KAAM,GAAA,CACR,EAGF,MAAM2L,EAAcxT,EAAAA,QAAQ,IACtB,EAACkE,GAAA,MAAAA,EAAc,QAAS,EAACC,GAAA,MAAAA,EAAc,OAAc,GAClD5C,GAAE2C,EAAa,KAAK,EAAE,GAAGC,EAAa,KAAK,EACjD,CAACD,GAAA,YAAAA,EAAc,MAAOC,GAAA,YAAAA,EAAc,KAAK,CAAC,EAE7C,OACEhH,EAAAA,KAACuH,GAAA,CAAO,IAAI,OAAO,EAAE,OACnB,SAAA,CAAAvH,EAAAA,KAACuH,GAAA,CAAO,GAAG,OAAO,EAAE,OAAO,QAAQ,gBAAgB,GAAG,MAAM,eAAe,aAAa,WAAW,aAAa,IAAI,OAClH,SAAA,CAAArH,EAAAA,IAACK,GAAK,SAAS,OAAO,MAAM,eAAe,WAAW,MAAM,SAAA,iBAAA,CAE5D,SACCN,GAAA,CAAO,EAAE,OAAO,QAAQ,gBAAgB,IAAI,MAC3C,SAAA,CAAAC,EAAAA,IAACgY,GAAA,CAAS,KAAMC,GAAa,KAAM,SAAU3N,IAAa2N,GAAa,KAAM,QAAS,IAAMxJ,EAAYwJ,GAAa,IAAI,EAAG,KAAK,IAAI,QACpID,GAAA,CAAS,KAAMC,GAAa,MAAO,SAAU3N,IAAa2N,GAAa,MAAO,QAAS,IAAMxJ,EAAYwJ,GAAa,KAAK,EAAG,KAAK,IAAI,EACxIjY,EAAAA,IAACgY,GAAA,CACC,KAAMC,GAAa,OACnB,SAAU3N,IAAa2N,GAAa,OACpC,QAAS,IAAMxJ,EAAYwJ,GAAa,MAAM,EAC9C,KAAK,GAAA,CAAA,CACP,CAAA,CACF,CAAA,EACF,EACCJ,GACC7X,EAAAA,IAACiW,GAAA,CACC,UAAA1V,EACA,iBAAA2T,GACA,iBAAAE,EACA,aAAAvN,EACA,aAAAC,EACA,YAAAqP,EACA,YAAAlC,GACA,YAAAE,EACA,kBAAAM,EACA,aAAAH,EACA,UAAApR,GACA,WAAAC,EACA,QAAAW,EACA,OAAAkM,EACA,OAAAC,CAAA,CAAA,EAIJnQ,EAAAA,KAACC,GAAA,CAAO,EAAE,OAAO,eAAe,gBAC9B,SAAA,CAAAC,EAAAA,IAACK,EAAA,CAAK,WAAW,SAAS,SAAS,OAAO,MAAM,eAAe,WAAW,MAAM,SAAA,iBAAA,CAEhF,EAEC0X,GAAS,CAACvG,IAAyB,CAACC,GAAyB,CAACvC,GAAqB,CAACE,GACnFtP,EAAAA,KAACoY,IAAY,QAAQ,OAAO,eAAe,MAAM,WAAW,SAC1D,SAAA,CAAAlY,EAAAA,IAACmY,GAAA,CACC,QAAQ,YACR,GAAG,IACH,SAAU,CAAE,KAAM,OAAQ,GAAI,MAAA,EAC9B,WAAW,MACX,MAAO3N,EAAa,iBAAmB,eAEvC,SAAAxK,EAAAA,IAACsJ,GAAA,CACC,KAAK,QACL,QACExJ,EAAAA,KAACO,EAAA,CAAK,SAAS,OAAO,WAAW,OAC/B,SAAA,CAAAL,EAAAA,IAACK,GAAK,SAAS,OAAO,GAAG,OAAO,MAAM,eAAe,SAAA,KAAA,CAErD,EAAQ,IAAI,uEAEX,KAAA,EAAG,EACJL,EAAAA,IAACK,GAAK,SAAS,OAAO,GAAG,OAAO,MAAM,eAAe,SAAA,MAAA,CAErD,EAAQ,IAAI,iDAEZL,EAAAA,IAACI,GAAA,CAAI,EAAE,KAAA,CAAM,EACbN,EAAAA,KAACM,GAAA,CACC,GAAG,MACH,WAAW,OACX,OAAO,UACP,OAAQ,CAAE,IAAK,CAAE,KAAM,eAAe,EACtC,QAAS,IAAM,OAAO,KAAK,sFAAsF,EAClH,SAAA,CAAA,kJAEgBJ,EAAAA,IAACuJ,IAAK,UAAU,mBAAmB,QAAQ,eAAe,SAAS,OAAO,cAAc,QAAA,CAAS,CAAA,CAAA,CAAA,CAClH,EACF,EAEH,SAAA,WAAA,CAAA,CAED,CAAA,QAED6O,GAAA,CAAO,GAAG,YAAY,UAAW5N,EAAY,SAAUqL,EAAA,CAAkB,CAAA,EAC5E,EAGD,CAACkC,GAAS,CAACvG,IAAyB,CAACC,GAAyB,CAACvC,GAAqB,CAACE,GACpFpP,EAAAA,IAACsJ,GAAA,CACC,KAAK,QACL,QACExJ,EAAAA,KAACO,EAAA,CAAK,SAAS,OAAO,WAAW,OAC/B,SAAA,CAAAL,EAAAA,IAACK,GAAK,SAAS,OAAO,GAAG,OAAO,MAAM,eAAe,SAAA,KAAA,CAErD,EAAQ,IAAI,uEAEX,KAAA,EAAG,EACJL,EAAAA,IAACK,GAAK,SAAS,OAAO,GAAG,OAAO,MAAM,eAAe,SAAA,MAAA,CAErD,EAAQ,IAAI,iDAEZL,EAAAA,IAACI,GAAA,CAAI,EAAE,KAAA,CAAM,EACbN,EAAAA,KAACM,GAAA,CACC,GAAG,MACH,WAAW,OACX,OAAO,UACP,OAAQ,CAAE,IAAK,CAAE,KAAM,eAAe,EACtC,QAAS,IAAM,OAAO,KAAK,sFAAsF,EAClH,SAAA,CAAA,kJAEgBJ,EAAAA,IAACuJ,IAAK,UAAU,mBAAmB,QAAQ,eAAe,SAAS,OAAO,cAAc,QAAA,CAAS,CAAA,CAAA,CAAA,CAClH,EACF,EAGF,SAAAzJ,EAAAA,KAACoY,GAAA,CAAY,QAAQ,OAAO,WAAW,SACrC,SAAA,CAAAlY,EAAAA,IAACmY,GAAA,CACC,QAAQ,YACR,GAAG,IACH,SAAU,CAAE,KAAM,OAAQ,GAAI,MAAA,EAC9B,WAAW,MACX,MAAO3N,EAAa,iBAAmB,eACxC,SAAA,WAAA,CAAA,QAIA4N,GAAA,CAAO,GAAG,YAAY,UAAW5N,EAAY,SAAUqL,EAAA,CAAkB,CAAA,CAAA,CAC5E,CAAA,CAAA,CACF,EAEJ,EACA/V,EAAAA,KAACuH,IAAO,EAAE,OAAO,GAAG,MAAM,QAASQ,EAAsB,SAAW,iBAClE,SAAA,CAAA7H,EAAAA,IAACqY,GAAA,CACC,MAAOvI,EACP,MAAOhB,EACP,SAASsB,GAAA,YAAAA,EAAmB,gBAAiB,GAC7C,YAAaG,EACb,YAAY,MACZ,oBAAqB,GACrB,QAAS,CAACjB,GAAwBE,GAAqBhF,EACvD,KAAM,CACJ,OAAQ0E,GAAqBsC,IAAyB2E,EACtD,MAAO,CACL,OAAQ,kBAAA,CACV,EAEF,SAAUc,GAAS,CACjBvG,EAAmBuG,EAAO,EAAI,CAChC,EACA,UAAW,CACT,OAAQ,OAAA,EAEV,aAAa,cAAA,CAAA,EAGfjX,EAAAA,IAACqY,GAAA,CACC,MAAOtI,EACP,MAAOf,EACP,oBAAqB,GACrB,SAASsB,GAAA,YAAAA,EAAmB,gBAAiB,GAC7C,YAAaE,EACb,YAAY,MACZ,QAASlB,GAAwBE,GAAqBhF,EACtD,KAAM,CACJ,OAAQ4E,GAAqBqC,GAAyB0E,EACtD,MAAO,CACL,OAAQ,kBAAA,CACV,EAEF,SAAUc,GAAS,CACjBvG,EAAmBuG,EAAO,EAAK,CACjC,EACA,UAAW,CACT,OAAQ,OAAA,EAEV,aAAa,cAAA,CAAA,CACf,EACF,EAECzJ,GAAgBxN,EAAAA,IAAC2X,GAAA,CAAU,KAAM,wEAAyE,KAAK,UAAU,EAE1H3X,EAAAA,IAACsY,GAAA,CACC,QAAStN,GACT,SAAU,IAAM,CACd8M,EAAe,CAAC9M,EAAW,CAC7B,CAAA,CAAA,EAGFhL,EAAAA,IAACuY,GAAA,CACC,MAAM,OACN,OAAO,OACP,SAAS,OACT,WAAW,MACX,YAAYxC,GAAA,YAAAA,EAAe,WAAYvI,IAAiB,OACxD,UAAWY,GAAgBoB,EAC3B,QAAS,IAAMkE,GAAA,EAEd,SAAAqC,GAAA,YAAAA,EAAe,IAAA,CAAA,EAElB/V,EAAAA,IAACwY,GAAA,CACC,MAAM,iBACN,MAAOC,GAAepH,EAAa,CAAC,EACpC,UAAW7B,EACX,WAAY,CACV,SAAU,OACV,OAAQ,MAAA,EAEV,WAAY,CACV,SAAU,MAAA,CACZ,CAAA,EAEFxP,EAAAA,IAACwY,GAAA,CACC,MACE1Y,EAAAA,KAACC,GAAA,CAAO,IAAI,MACV,SAAA,CAAAC,EAAAA,IAACK,GAAK,SAAA,UAAA,CAAQ,QACbiJ,GAAA,CAAa,QAAQ,0CACpB,SAAAtJ,EAAAA,IAACoX,IAAO,OAAO,UACb,SAAApX,EAAAA,IAACuJ,GAAA,CAAK,UAAU,kBAAkB,KAAK,OAAO,KAAK,OAAO,EAC5D,CAAA,CACF,CAAA,EACF,EAEF,MAAOmP,GAAS5C,CAAO,EACvB,WAAY,CACV,SAAU,MAAA,EAEZ,WAAY,CACV,SAAU,MAAA,CACZ,CAAA,CACF,EACF,CAEJ,CC5RA,SAAwB6C,IAAuB,CAC7C,KAAM,CAAE,uBAAAjY,EAAwB,qBAAAE,EAAsB,yBAAAD,EAA0B,wBAAAgH,CAAA,EAA4B7G,GAAA,EACtG,CAAE,aAAA+F,EAAc,aAAAC,EAAc,gBAAAxF,EAAiB,gBAAAC,EAAiB,qBAAA6L,EAAsB,qBAAAC,CAAA,EAAyB5L,GAAA,EACrH,QAAQ,IAAI,qFAAsFb,CAAoB,EACtH,QAAQ,IAAI,uFAAwFF,CAAsB,EAC1H,KAAM,CAAE,qBAAA4N,EAAsB,WAAAC,CAAA,EAAeC,GAAA,EACvC,CAAE,SAAApN,EAAU,YAAAkM,EAAa,oBAAAzF,EAAqB,YAAAmD,GAAa,eAAA8M,EAAgB,gBAAAvK,CAAA,EAAoB9L,GAAA,EAC/F,CAAE,0BAAAkL,CAAA,EAA8BR,GAAA,EAChC,CAAE,oBAAAsB,CAAA,EAAwBpL,GAAA,EAC1B,CAAE,cAAAyL,GAAe,cAAAC,CAAA,EAAkBhC,GAAA,EACnC,CAAE,wBAAA4C,CAAA,EAA4BC,GAAA,EAE9B,CAAE,cAAAgK,EAAe,iCAAAC,GAAkC,+BAAAC,CAAA,EAAmCC,GAAA,EACtF,CAACC,EAAYC,CAAa,EAAIhY,EAAAA,SAAS,MAAM,EAC7C,CAACqO,GAAsBC,CAAuB,EAAItO,EAAAA,SAAS,EAAK,EAChE,CAACiY,EAAsBC,EAAuB,EAAIlY,EAAAA,SAAS,EAAK,EAEhE,CAACiO,GAAmBC,CAAoB,EAAIlO,EAAAA,SAAS,EAAK,EAC1D,CAACmO,GAAmBC,CAAoB,EAAIpO,EAAAA,SAAS,EAAK,EAE1D,CAAE,SAAAmY,CAAA,EAAaxP,GAAA,EACf,CAACyP,EAAYC,CAAa,EAAIrY,EAAAA,SAAS,GAAG,EAC1CsY,EAAWC,GAAA,EAEX,CAAC9J,EAAMC,EAAO,EAAI1O,EAAAA,SAAiB,EAAE,EACrC2O,EAAUC,EAAAA,OAAe,EAAE,EAC3B,CAAE,eAAAjC,CAAA,EAAmBC,GAAA,EAE3BpI,EAAAA,UAAU,IAAM,CACd,QAAQ,IAAI,6BAA8BiK,CAAI,EAC9CE,EAAQ,QAAUF,CACpB,EAAG,CAACA,CAAI,CAAC,EAET,MAAMsE,EAA0BrR,EAAAA,QAAQ,IAC/B/B,EAAqBF,GAAA,YAAAA,EAAwB,EAAE,EACrD,CAACA,GAAA,YAAAA,EAAwB,GAAIE,CAAoB,CAAC,EAE/CiO,EAAkClM,EAAAA,QAAQ,IACvChC,EAAyBD,GAAA,YAAAA,EAAwB,QAAQ,EAC/D,CAACA,GAAA,YAAAA,EAAwB,GAAIC,CAAwB,CAAC,EAEnDoT,EAA6BpR,EAAAA,QAAQ,IAClCgF,EAAwBjH,GAAA,YAAAA,EAAwB,EAAE,EACxD,CAACiH,CAAuB,CAAC,EAC5B,QAAQ,IAAI,iGAAkGoM,CAA0B,EAExI,KAAM,CAACJ,EAAeC,EAAgB,EAAI3S,EAAAA,SAAS,EAAE,EAC/C,CAAC4S,GAAeC,EAAgB,EAAI7S,EAAAA,SAAS,EAAE,EAC/C,CAACwY,EAAoBC,CAAqB,EAAIzY,EAAAA,SAAS,EAAE,EACzD,CAAC0Y,GAAoBC,EAAqB,EAAI3Y,EAAAA,SAAS,EAAE,EACzDV,EAAYoC,EAAAA,QAAQ,IACjBjC,GAAA,YAAAA,EAAwB,UAC9B,CAACA,CAAsB,CAAC,EAC3B,QAAQ,IAAI,+DAAgEH,CAAS,EAErF,KAAM,CAAC0T,EAAa4F,EAAc,EAAI5Y,WAAA,EAChC,CAACkT,GAAa2F,EAAc,EAAI7Y,WAAA,EAChC,CAACiT,GAAkB6F,EAAmB,EAAI9Y,WAAA,EAC1C,CAACmT,GAAkB4F,EAAmB,EAAI/Y,WAAA,EAC1C,CAACgZ,GAAYC,EAAa,EAAIjZ,WAAA,EAKpCwE,EAAAA,UAAU,IAAM,CACd,GAAIsO,GAA8BkG,IAAcpL,GAAmCmB,IAAUC,IAAUnM,GAAS,CAC9G,MAAMiB,EAAY8J,EAAgC,WAC5C3I,EAAS+T,GAAW,KAAKA,GAAW,KAAK,OAAS,CAAC,EACnDhU,EAASgU,GAAW,KAAK,CAAC,EAChC,GAAIjB,IAAe,OACjBa,GAAehS,EAAsBkM,EAA2B,SAAWA,EAA2B,eAAe,EACrH+F,GAAejS,EAAsBkM,EAA2B,SAAWA,EAA2B,eAAe,EACrHgG,GAAoBhG,EAA2B,aAAa,EAC5DiG,GAAoBjG,EAA2B,aAAa,EAC5DM,GAAA,UACS2E,IAAe,QAAS,CACjC,IAAImB,EAAepV,EAAU,OAAS,EAEtC,GAAIoV,GAAgBjU,EAAO,OAAQ,CACjC,MAAMY,GAAeoJ,GAAehK,EAAO,OAAQ,EAAK,EAClDW,EAAeqJ,GAAeiK,EAAc,EAAI,EAElD5Z,IAAcsH,GAChBgS,GAAehT,EAAa,aAAa,UAAU,EACnDiT,GAAehT,GAAa,aAAa,UAAU,IAEnD+S,GAAe/S,GAAa,oBAAoB,UAAU,EAC1DgT,GAAejT,EAAa,oBAAoB,UAAU,GAG5DmT,GAAoB9T,EAAO,MAAM,EACjC6T,GAAoBI,CAAY,EAChC5Y,EAAgBuF,EAAY,EAC5BxF,EAAgBuF,CAAY,CAC9B,MAEEgT,GAAehS,EAAsBkM,EAA2B,SAAWA,EAA2B,eAAe,EACrH+F,GAAejS,EAAsBkM,EAA2B,SAAWA,EAA2B,eAAe,EACrHiG,GAAoBjG,EAA2B,aAAa,EAC5DgG,GAAoBhG,EAA2B,aAAa,EAC5DM,GAAA,CAEJ,SAAW2E,IAAe,QAAS,CACjC,MAAMzY,EAAYG,EAAuB,UACzC,IAAI0Z,GAAerV,EAAU,OAAS,EAEtC,GAAIqV,IAAgBnU,EAAO,OAAQ,CACjC,MAAMa,EAAeoJ,GAAekK,GAAc,EAAK,EACjDvT,GAAeqJ,GAAejK,EAAO,OAAQ,EAAI,EAEnD1F,IAAcsH,GAChBgS,GAAehT,GAAa,aAAa,UAAU,EACnDiT,GAAehT,EAAa,aAAa,UAAU,IAEnD+S,GAAe/S,EAAa,oBAAoB,UAAU,EAC1DgT,GAAejT,GAAa,oBAAoB,UAAU,GAG5DmT,GAAoBI,EAAY,EAChCL,GAAoB9T,EAAO,MAAM,EACjC1E,EAAgBuF,CAAY,EAC5BxF,EAAgBuF,EAAY,CAC9B,MAEEgT,GAAehS,EAAsBkM,EAA2B,SAAWA,EAA2B,eAAe,EACrH+F,GAAejS,EAAsBkM,EAA2B,SAAWA,EAA2B,eAAe,EACrHgG,GAAoBrZ,EAAuB,UAAU,EACrDsZ,GAAoBtZ,EAAuB,UAAU,EACrD2T,GAAA,CAEJ,CACF,CACF,EAAG,CAAC2E,EAAY,KAAK,UAAUiB,EAAU,EAAGpS,CAAmB,CAAC,EAEhE,MAAMwM,GAA2B,IAAM,CACjC,CAACrE,IAAU,CAACC,KAEhBqE,GAAa,CAAC5T,EAAuB,WAAYA,EAAuB,UAAU,CAAC,EAEnFkT,GAAiBI,GAAA,YAAAA,EAAyB,kBAAkB,EAC5DF,GAAiBE,GAAA,YAAAA,EAAyB,kBAAkB,EAC5D0F,EAAsB1F,GAAA,YAAAA,EAAyB,kBAAkB,EACjE4F,GAAsB5F,GAAA,YAAAA,EAAyB,kBAAkB,EACnE,EAEM,CAAClF,GAAcC,EAAe,EAAI9N,EAAAA,SAAS,EAAE,EAC7C,CAAC+N,GAAcC,EAAe,EAAIhO,EAAAA,SAAS,EAAE,EAG7C6O,GAAgBnN,EAAAA,QAAQ,IACrBjC,GAAA,YAAAA,EAAwB,cAC9B,CAACA,GAAA,YAAAA,EAAwB,aAAa,CAAC,EACpCqP,GAAgBpN,EAAAA,QAAQ,IACrBjC,GAAA,YAAAA,EAAwB,cAC9B,CAACA,GAAA,YAAAA,EAAwB,aAAa,CAAC,EAEpCsP,GAASrN,EAAAA,QAAQ,IACdjC,GAAA,YAAAA,EAAwB,OAC9B,CAACA,GAAA,YAAAA,EAAwB,MAAM,CAAC,EAE7BuP,GAAStN,EAAAA,QAAQ,IACdjC,GAAA,YAAAA,EAAwB,OAC9B,CAACA,GAAA,YAAAA,EAAwB,MAAM,CAAC,EAE7BoD,GAAUnB,EAAAA,QAAQ,IACfkM,GAAA,YAAAA,EAAiC,QACvC,CAACA,CAA+B,CAAC,EAE9B,CAAC0F,GAAaC,EAAc,EAAIvT,EAAAA,SAAS,EAAK,EACpD2B,GAAqB,IAAM,CACrBoR,GAA2BhE,IAAUC,IAAUnM,IAAW,CAACyQ,KAC7DF,GAAA,EACAG,GAAe,EAAI,GAErBZ,GAAiBI,GAAA,YAAAA,EAAyB,kBAAkB,EAC5DF,GAAiBE,GAAA,YAAAA,EAAyB,kBAAkB,EAC5D0F,EAAsB1F,GAAA,YAAAA,EAAyB,kBAAkB,EACjE4F,GAAsB5F,GAAA,YAAAA,EAAyB,kBAAkB,CACnE,EAAG,CAACzT,EAAWyT,EAAyBhE,GAAQC,GAAQnM,EAAO,CAAC,EAEhE,KAAM,CAAE,eAAAoM,EAAA,EAAmBC,GAAmBH,GAAQC,GAAQnM,EAAO,EAE/D,CAACmR,GAAUC,EAAW,EAAIjU,EAAAA,SAAS,EAAI,EAEvCiC,GAAYP,EAAAA,QAAQ,IACjBsS,GAAWnF,GAAgBC,GACjC,CAACD,GAAeC,GAAekF,EAAQ,CAAC,EAErC9R,GAAaR,EAAAA,QAAQ,IAClBsS,GAAWlF,GAAgBD,GACjC,CAACA,GAAeC,GAAekF,EAAQ,CAAC,EAErCR,GAAoBC,EAAAA,YACxB,CAACC,EAAqBtQ,IAAyB,CAC7C,MAAMuQ,EAAavQ,EAAM,OAAS,QAWlC,GAVA,QAAQ,IAAI,kCAAmC,CAC7C,MAAAA,EACA,WAAAuQ,EACA,oBAAA/M,EACA,KAAA8M,EACA,aAAA9N,EACA,aAAAC,EACA,uBAAApG,CAAA,CACD,EAGCoD,KAAY,QACZkM,KAAW,QACXC,KAAW,QACXgE,GACAE,IACAD,IACAE,GACA,CACA,KAAM,CAAE,OAAAS,EAAQ,MAAOC,EAAA,EAAWxG,EAAqBjK,EAAOP,GAASkM,IAAA,YAAAA,GAAQ,SAAUC,IAAA,YAAAA,GAAQ,SAAU0E,CAAI,EAE/G,GAAIC,EACF,GAAKD,IAAS,OAASE,EAASX,IAAsBS,IAAS,OAASE,EAAST,GAAmB,CAClG,MAAMW,EAAY7E,GAAegE,GAAkBU,CAAU,EACzDG,GACFzT,EAAgByT,CAAS,CAE7B,KAAO,CACL,MAAMA,EAAY7E,GAAe2E,EAAQD,CAAU,EAC/CG,GACFzT,EAAgByT,CAAS,CAE7B,SAEKJ,IAAS,OAASE,EAASX,IAAsBS,IAAS,OAASE,EAAST,GAAmB,CAClG,MAAMW,EAAY7E,GAAekE,GAAkBQ,CAAU,EACzDG,GACFxT,EAAgBwT,CAAS,CAE7B,KAAO,CACL,MAAMA,EAAY7E,GAAe2E,EAAQD,CAAU,EAC/CG,GACFxT,EAAgBwT,CAAS,CAE7B,CAGJ,CACF,EACA,CAACjR,GAASkM,GAAQC,GAAQgE,EAAaE,GAAatM,CAAmB,CAAA,EAanE0I,GAAoB9C,EAAoBqC,IAAA,YAAAA,GAAe,UAAWhB,EAAY,EAC9E0B,GAAoB/C,EAAoBsC,IAAA,YAAAA,GAAe,UAAWf,EAAY,EAE9EsC,GAAiB3O,EAAAA,QAAQ,IACtBmL,GAAcpN,EAAwBmO,CAA+B,EAC3E,CAACA,GAAA,YAAAA,EAAiC,UAAWnO,CAAsB,CAAC,EAEjE6Q,GAAiB5O,EAAAA,QAAQ,IACtBoL,EAAcrN,EAAwBmO,CAA+B,EAC3E,CAACA,GAAA,YAAAA,EAAiC,UAAWnO,CAAsB,CAAC,EAEjE8Q,IAA0B9Q,GAAA,MAAAA,EAAwB,UAA6B6Q,GAAjBD,KAAoCpC,GAClGuC,IAA0B/Q,GAAA,MAAAA,EAAwB,UAA6B4Q,GAAjBC,KAAoCnC,GAElGqB,GAAmB,IAAM,CAC7B1B,GAAgB,EAAE,EAClBE,GAAgB,EAAE,EAClBqK,EAAc,GAAG,EACjBhM,EAAY,CAAA,CAAsB,EAClCC,EAAgB,MAAS,CAC3B,EAEA9H,EAAAA,UAAU,IAAM,EACT,CAACqJ,IAAgB,CAAC,CAACA,MAAkB,CAACE,IAAgB,CAAC,CAACA,MAC3D1B,EAAY,CAAA,CAAsB,EAClCC,EAAgB,MAAS,EAE7B,EAAG,CAACuB,GAAcE,EAAY,CAAC,EAE/B,MAAM0B,GAAqB,CAACvG,EAAgBmF,IAAkC,CAa5E,GAZA,QAAQ,IAAI,mFAAoFA,CAAoB,EACpH,QAAQ,IAAI,qEAAsEnF,CAAM,EACnFA,GACHsG,GAAA,EAEFlB,EAAwBD,CAAoB,EACxCA,EACFP,GAAgB5E,CAAM,EAEtB8E,GAAgB9E,CAAM,EAGpB,CAACA,EAAQ,CACX,MAAMuF,EAAOiB,GAAA,EACbhB,GAAQD,CAAI,EAEZ,QAAQ,IAAI,oCAAqCvF,CAAM,CAEzD,MACMmF,EACFL,GAAgB,EAAE,EAElBF,GAAgB,EAAE,EAEpBuK,EAAc,GAAG,CAErB,EAEMe,GAAyB,MAC7BlQ,EACAmF,EACAuB,EAA+B,GAC/BC,EAA+B,KAC5B,CACEoI,GACHC,GAAwB,EAAI,EAE9B,KAAM,CAAE,gBAAAmB,IAAoB5Z,EAC5B,QAAQ,IAAI,0FAA2FA,CAAsB,EAC7H,QAAQ,IAAI,6FAA8FmG,CAAY,EACtH,MAAMoD,EAAapD,GAAA,YAAAA,EAAc,MAC3BqD,GAAapD,GAAA,YAAAA,EAAc,MAC3ByT,GAAON,IAAA,YAAAA,GAAY,KAAK,OAC5BzO,IACEA,GAAI,QAAUvB,GACduB,GAAI,QAAUtB,KACb8O,IAAe,OAASxN,GAAI,SAAWqD,EAAgC,WAAW,OAAS,KAEhG,QAAQ,IAAI,wEAAyE0L,EAAI,EACzF,QAAQ,IAAI,mFAAoFD,EAAe,EAC/G,QAAQ,IACN,8EACAzL,EACA5E,EACA+O,EACAtY,EAAuB,UAAA,EAEzB,KAAM,CAAE,SAAA8Z,GAAU,YAAAC,GAAa,UAAAC,EAAA,EAAc7L,EAM7C,GAAIS,GACF,GAAIpL,EAAEiG,CAAM,EAAE,GAAGwJ,CAAa,EAAG,CAC/B5E,GAAgB4E,CAAa,EAC7B,MACF,UAEIzP,EAAEiG,CAAM,EAAE,GAAG0J,EAAa,EAAG,CAC/B5E,GAAgB4E,EAAa,EAC7B,MACF,CAGF,MAAM9J,GAAS,CACb,KAAAwQ,GACA,SAAUG,GACV,WAAYna,EAAY,CAAC+O,EAAuBA,EAChD,WAAYpL,EAAEiG,CAAM,EACjB,IAAI,KAAOmF,EAAuBQ,IAAA,YAAAA,GAAe,SAAWC,IAAA,YAAAA,GAAe,SAAS,EACpF,SAAA,EACH,QAASiJ,IAAe,OAAS,OAAYA,GAAc,QAC3D,OAAAhJ,GACA,OAAAC,GACA,UAAA1P,CAAA,EAEF,QAAQ,IAAI,4DAA6DwJ,GAAQ+F,GAAeC,EAAa,EAC7G,KAAM,CAAE,mBAAAkB,GAAoB,mBAAAC,GAAoB,SAAA9P,IAAa,MAAMwX,EAAc7O,EAAM,EACvF,QAAQ,IACN,4EACA3I,GACA6P,GACAC,GACAyC,EACAE,EAAA,EAEF,QAAQ,IAAI,oBAAqBzS,GAAUuS,EAAeE,EAAa,EAEvE,GAAI,CACFvG,EAAYlM,EAA4B,EACxCmM,EAAgB,MAAS,EACzB,IAAIoN,GACAC,GAAc,GACd5B,IAAe,SACb1J,EACEnF,GAAUjG,EAAEiG,CAAM,EAAE,IAAIwJ,CAAa,GACvCgH,GAAQ,MACRC,GAAc,IAEdD,GAAQE,GAAa3W,EAAE+M,EAAkB,EAAE,IAAI0C,CAAa,EAAE,IAAI,GAAG,EAAE,SAAA,EAAY,EAAG,GAAMmH,GAAQ,UAAU,EAG5G3Q,GAAUjG,EAAEiG,CAAM,EAAE,IAAI0J,EAAa,GACvC8G,GAAQ,MACRC,GAAc,IAEdD,GAAQE,GAAa3W,EAAEgN,EAAkB,EAAE,IAAI2C,EAAa,EAAE,IAAI,GAAG,EAAE,SAAA,EAAY,EAAG,GAAMiH,GAAQ,UAAU,IAIhHva,EAAYyY,IAAe,QAAUA,IAAe,WAClD7O,GAAUjG,EAAEiG,CAAM,EAAE,IAAIwJ,CAAa,GACvCgH,GAAQ,MACRC,GAAc,IAEdD,GAAQE,GAAa3W,EAAE+M,EAAkB,EAAE,IAAI0C,CAAa,EAAE,IAAI,GAAG,EAAE,SAAA,EAAY,EAAG,GAAMmH,GAAQ,UAAU,IAG9Gva,EAAYyY,IAAe,QAAUA,IAAe,WAClD7O,GAAUjG,EAAEiG,CAAM,EAAE,IAAI0J,EAAa,GACvC8G,GAAQ,MACRC,GAAc,IAEdD,GAAQE,GAAa3W,EAAEgN,EAAkB,EAAE,IAAI2C,EAAa,EAAE,IAAI,GAAG,EAAE,SAAA,EAAY,EAAG,GAAMiH,GAAQ,UAAU,GAIlH,QAAQ,IAAI,yEAA0EH,EAAK,EACvFC,IACFtB,EAAc,KAAK,EACfN,IAAe,SACZxH,IAAuBzC,GAAgB4E,CAAuB,EACnE1E,GAAgB4E,EAAuB,IAErCtT,EAAYyY,IAAe,QAAUA,IAAe,WACtDjK,GAAgB4E,CAAuB,EACvC1E,GAAgB,EAAE,IAEhB1O,EAAYyY,IAAe,QAAUA,IAAe,WACtD/J,GAAgB4E,EAAuB,EACvC9E,GAAgB,EAAE,KAGpBuK,EAAc,OAAOqB,EAAK,CAAC,EACvB3B,IAAe,SACb1J,EACGwB,GACH7B,GAAgBiC,IAAsB,EAAE,EAGrCL,GACH9B,GAAgBkC,IAAsB,EAAE,IAKhD,QAAQ,IAAI,sFAAuFA,EAAkB,EACrH,QAAQ,IAAI,sFAAuFC,EAAkB,CACvH,OAASC,GAAO,CACd,QAAQ,IAAI,yEAA0EA,EAAK,EACvF,OAAOA,EAAK,EAAE,SAAS,gBAAgB,GACzC5D,EAAgB,gBAAgB,EAChCD,EAAY,CAAA,CAAsB,GAElCC,EAAgB,MAAS,CAE7B,CACF,EAEM,CAACwN,GAAiBC,EAAkB,EAAI/Z,EAAAA,SAAS,EAAK,EACtD,CAAE,+BAAA6Q,EAAA,EAAmCC,GAAA,EACrC,CAAE,eAAAL,GAAgB,aAAAC,GAAc,gBAAAC,GAAiB,eAAAC,EAAA,EAAmBjI,GAAA,EACpE,CAAE,oBAAAoI,EAAA,EAAwBC,GAAA,EAC1BgJ,GAAiB,MAAOC,GAAgB,CAC5C,QAAQ,IAAI,+DAAgEA,CAAG,EAC/E5B,EAAc4B,CAAG,EAEjB,MAAMC,EAAqB,CAAC7F,EAAiBC,IAAoB,CAC3DyD,IAAe,SAIfjK,GAHGyC,GAGa,GAFA8D,CAEE,EAKlBrG,GAHGwC,GAGa,GAFA8D,CAEE,GAGlByD,IAAe,UACbzY,GAIA0O,GAHGwC,GAGa,GAFA8D,CAEE,EAEpBxG,GAAgB,EAAE,IAKhBA,GAHGyC,GAGa,GAFA8D,CAEE,EAEpBrG,GAAgB,EAAE,IAGlB+J,IAAe,UACbzY,GAIAwO,GAHGyC,GAGa,GAFA8D,CAEE,EAEpBrG,GAAgB,EAAE,IAKhBA,GAHGwC,GAGa,GAFA8D,CAEE,EAEpBxG,GAAgB,EAAE,GAGxB,EAEA,GAAI,OAAOmM,CAAG,GAAK,IACjBC,EAAmBxH,EAAeE,EAAa,UACtC,OAAOqH,CAAG,GAAK,EACxBzK,GAAA,MAEA,IAAI,CAcF,MAAM2K,EAAgBlX,EAAEyP,CAAa,EAAE,IAAIzP,EAAEgX,CAAG,EAAE,IAAI,GAAG,CAAC,EAAE,SAAA,EACtDG,EAAgBnX,EAAE2P,EAAa,EAAE,IAAI3P,EAAEgX,CAAG,EAAE,IAAI,GAAG,CAAC,EAAE,SAAA,EAC5DC,EAAmBC,EAAeC,CAAa,CAGjD,OAASlK,EAAO,CACd,QAAQ,IAAI,iEAAkEA,CAAK,CACrF,CAEJ,EAGMC,GAAoB,IAAM,CAE9B,GADA,QAAQ,IAAIpC,GAAcF,GAAcQ,GAAsB,mBAAmB,GAC5ER,IAAgBE,KAAiBrG,GAAkBjI,CAAsB,EAAG,CAO/E,GANA,QAAQ,IAAI,iDAAkD,CAC5D,WAAA2Y,EACA,qBAAA/J,GACA,aAAAR,GACA,aAAAE,EAAA,CACD,EACGqK,IAAe,KAAM,OACzB,IAAIlP,EACAmR,EAAqBhM,GACzB,OAAQ0J,EAAA,CACN,IAAK,OACCsC,GACFnR,EAAS2E,GACJ,CAAC3E,IACJmR,EAAqB,CAACA,EACtBnR,EAAS6E,MAGX7E,EAAS6E,GACJ,CAAC7E,IACJmR,EAAqB,CAACA,EACtBnR,EAAS2E,KAGb,MACF,IAAK,QACH3E,EAAS5J,EAAYyO,GAAeF,GACpC,MACF,IAAK,QACH3E,EAAS5J,EAAYuO,GAAeE,GACpC,KAAA,CAGA7E,GAAU,CAACA,GACbkQ,GAAuBlQ,EAAQmR,EAAoBpM,GAAmBE,EAAiB,CAE3F,MACEL,GAAgB,EAAE,EAClBE,GAAgB,EAAE,CAEtB,EAEM,CAAE,QAAAiD,EAAA,EAAYC,GAAA,EAEdoJ,EAAc5Y,EAAAA,QAAQ,IAAM,CAChC,GAAIuB,EAAEmV,CAAU,EAAE,GAAG,GAAG,IAAKjY,GAAA,MAAAA,EAAU,OAAQV,EAAuB,oBAAqB,CACzF,MAAM8a,EAAwBpa,EAAS,KAAK,OAC1C,CAACqa,EAAaC,IACZxX,EAAEuX,CAAG,EACF,IAAIC,EAAK,WAAa,GAAG,EACzB,SAAA,EACL,GAAA,EAEF,OAAOxX,EAAEsX,CAAqB,EAAE,GAAG9a,EAAuB,mBAAmB,CAC/E,CACA,MAAO,EACT,EAAG,CAAC2Y,EAAYjY,GAAA,YAAAA,EAAU,KAAMV,GAAA,YAAAA,EAAwB,mBAAmB,CAAC,EAE5E+E,EAAAA,UAAU,IAAM,CACV8V,GACFzD,EAAe,EAAI,CAEvB,EAAG,CAACyD,CAAW,CAAC,EAEhB,MAAMI,GAAW,SAAY,CAC3B,IAAItJ,EAAuB,CAAA,EAE3B,GAAI,CACF2I,GAAmB,EAAI,EAEvB,MAAM1I,EAAuE,CAC3E,SAAU5R,EAAuB,SACjC,UAAWA,EAAuB,UAClC,UAAWA,EAAuB,UAClC,WAAYA,GAAA,YAAAA,EAAwB,GACpC,YAAamO,EAAgC,eAAe,QAAQ,IAAI0D,IAAOA,GAAI,WAAW,EAC9F,SAAAnR,EACA,SAAAgY,EACA,SAAUvK,GAAA,YAAAA,EAAiC,UAC3C,QAASA,GAAA,YAAAA,EAAiC,QAC1C,WAAY,OAAOwK,CAAU,EAAI,GAAA,EAGnC,QAAQ,IAAI,sDAAuD,CACjE,gCAAAxK,EACA,uBAAAnO,EACA,UAAA4R,EACA,YAAAiJ,EACA,WAAAlC,EACA,WAAAL,EACA,SAAA5X,CAAA,CACD,EAED,KAAM,CAAE,SAAUwa,EAAW,YAAAtQ,EAAa,GAAGoH,IAAcJ,EAC3DD,EAAkB,CAChB,GAAGK,EAAA,GAEDpH,GAAA,YAAAA,EAAa,QAAS,IACxB+G,EAAgB,YAAiB,KAAK,UAAU/G,CAAW,GAG7D,MAAMkH,EAAM+I,EAAc,CAACzC,EAA+BxG,CAAS,CAAC,EAAIuG,GAAiCvG,EAAWtH,EAAW,EAEzH4H,GAAc,CAClB,OAAQC,GAAwB,oBAChC,UAAWP,CAAA,EAGPQ,GAAY,CAChB,YAAa,CAACC,GAA+BC,GAAiDC,GAAQC,KAAsB,CAC1H,MAAMC,GACJ,UACA,CAACC,GAAkBtE,GAAcgB,IAAA,YAAAA,GAAe,MAAM,EAAGsD,GAAkBpE,GAAce,IAAA,YAAAA,GAAe,MAAM,CAAC,EAC5G,OAAO,OAAO,EACd,KAAK,OAAO,EAEXsD,GAAuB,CAC3B,qBAAsBF,GACtB,eAAgBA,EAAA,EAEZG,IAAmBJ,IAAA,YAAAA,GAAa,gBAAiBA,GAAY,cAAc,OAAS,GAAKA,GAAY,eAAe,OAAS,EAQnI,GAPIH,KAAW,YACTO,IACEJ,GAAY,cAAc,OAAS,IACrCG,GAAK,wBAA0B,uBAAuBH,GAAY,cAAc,MAAM,KAAKV,EAAI,MAAM,KAIvGO,KAAW,UAAW,CACxB,IAAIQ,GAAWzE,GACX0E,GAAWxE,GAEXgE,KACFO,GAAWE,GAAkBT,GAAgBlD,EAAa,GAAKhB,GAC/D0E,GAAWC,GAAkBT,GAAgBjD,EAAa,GAAKf,IAE7DwD,EAAI,OAAS,EACfa,GAAK,wBAA0B,0BAA0Bb,EAAI,MAAM,KAAKA,EAAI,MAAM,IAElFa,GAAK,wBAA0B,GAEjCA,GAAK,qBAAuB,GAC5BA,GAAK,eAAiB,6BACxB,CAEA,OAAOA,EACT,CAAA,EAGEb,EAAI,SAAW,GACjB7D,EAAwBmE,EAAS,EAEnC,QAAQ,IAAI,kDAAmDA,GAAWN,CAAG,EAC7E,MAAM7M,GAAM,MAAMmM,GAA+BU,EAAKM,GAAW,CAC/D,OAAQpB,GAER,aAAAC,GACA,eAAAE,GACA,YAAAe,GACA,UAAW,CACT,OAAQP,EACR,WAAY,OACZ,OAAQkJ,EAAc,yBAA2B,uBAAA,CACnD,CACD,EAED,GAAI5V,IAAOA,GAAI,eAAe,OAAS,EAMrC,GAJAqM,GAAA,EACAvB,GAAA,EACA,MAAMyB,GAAQ,CAAE,OAAQxR,GAAA,YAAAA,EAAwB,SAAU,EAC1DiM,EAA0BiB,GAAA,YAAAA,EAAgB,QAASlN,GAAA,YAAAA,EAAwB,GAAc,EAAI,EACzF6a,EACFhC,EAAS,sBAAsB,MAC1B,CACL,MAAMsC,GAAmC,MAAMlP,EAA0BiB,GAAA,YAAAA,EAAgB,QAASlN,GAAA,YAAAA,EAAwB,GAAI,EAAI,EAClIob,GAAsB,GAAMD,EAAe,CAE7C,MAEInb,GAEFiM,EAA0BiB,GAAA,YAAAA,EAAgB,QAASlN,GAAA,YAAAA,EAAwB,GAAI,EAAI,EAAE,KAAKiF,IAAO,CAC/F,QAAQ,IAAI,sBAAuBA,EAAG,EACtCyL,GAAA,CACF,CAAC,EAGL4J,GAAmB,EAAK,CAC1B,OAAS7J,EAAO,CACd,QAAQ,IAAI,2DAA4DA,CAAK,CAC/E,QAAA,CACE6J,GAAmB,EAAK,CAC1B,CACF,EAEMe,GAAe,IAAM,CACzBJ,GAAA,CACF,EAWAlW,EAAAA,UAAU,IAAM,oCACd,MAAMuW,EAAWnV,GAAA,YAAAA,EAAc,MACzBoV,EAAWnV,GAAA,YAAAA,EAAc,MAC/B,IAAIoV,EACJ,KAAIzZ,IAAAF,EAAA0X,IAAA,YAAAA,GAAY,OAAZ,YAAA1X,EAAmB,KAAnB,YAAAE,GAAuB,UAAWuZ,KAAYtG,IAAAhQ,EAAAuU,IAAA,YAAAA,GAAY,OAAZ,YAAAvU,EAAkB,GAAG,MAArB,YAAAgQ,GAA0B,UAAWuG,EACrFC,EAAkBjC,OACb,CACL,MAAMkC,IAAWC,GAAAnC,IAAA,YAAAA,GAAY,OAAZ,YAAAmC,GAAkB,UAAU1Y,KAAQA,IAAA,YAAAA,GAAM,SAAUsY,GAC/DK,IAAWC,GAAArC,IAAA,YAAAA,GAAY,OAAZ,YAAAqC,GAAkB,UAAU5Y,KAAQA,IAAA,YAAAA,GAAM,SAAUuY,GAE/DM,IAAYC,GAAAvC,IAAA,YAAAA,GAAY,OAAZ,YAAAuC,GAAkB,MAAML,GAAUE,GAAY,GAChEH,EAAkB,CAChB,SAAUK,IAAA,YAAAA,GAAW,OAAO,CAACE,GAAKvT,KAAYhF,EAAEuY,EAAG,EAAE,KAAKvT,IAAA,YAAAA,GAAS,QAAQ,EAAE,SAAA,EAAY,KACzF,SAAUqT,IAAA,YAAAA,GAAW,OAAO,CAACE,GAAKvT,KAAYhF,EAAEuY,EAAG,EAAE,KAAKvT,IAAA,YAAAA,GAAS,QAAQ,EAAE,SAAA,EAAY,KACzF,KAAMqT,EAAA,CAEV,CACA,GAAIvD,IAAe,OACjBpF,GACE1P,EAAE3D,EAAY2b,GAAA,YAAAA,EAAiB,SAAWA,GAAA,YAAAA,EAAiB,QAAQ,EAChE,IAAI,KAAMpM,IAAA,YAAAA,GAAe,SAAQ,EACjC,SAAA,CAAS,EAEdgE,GACE5P,EAAE3D,EAAY2b,GAAA,YAAAA,EAAiB,SAAWA,GAAA,YAAAA,EAAiB,QAAQ,EAChE,IAAI,KAAMnM,IAAA,YAAAA,GAAe,SAAQ,EACjC,SAAA,CAAS,MAET,CACL,MAAM2M,IAAeC,IAAAC,GAAAV,GAAA,YAAAA,EAAiB,OAAjB,YAAAU,GACjB,OAAOlZ,KAAQA,IAAA,YAAAA,GAAM,YAAa,MAAOA,IAAA,YAAAA,GAAM,YAAa,OAD3C,YAAAiZ,GAEjB,OAAO,CAACF,GAAKvT,KAAYhF,EAAEuY,EAAG,EAAE,KAAKvT,IAAA,YAAAA,GAAS,QAAQ,EAAE,SAAA,EAAY,KAClE2T,IAAeC,IAAAC,GAAAb,GAAA,YAAAA,EAAiB,OAAjB,YAAAa,GACjB,OAAOrZ,KAAQA,IAAA,YAAAA,GAAM,YAAa,MAAOA,IAAA,YAAAA,GAAM,YAAa,OAD3C,YAAAoZ,GAEjB,OAAO,CAACL,GAAKvT,KAAYhF,EAAEuY,EAAG,EAAE,KAAKvT,IAAA,YAAAA,GAAS,QAAQ,EAAE,SAAA,EAAY,KACxE0K,GACE1P,EAAE3D,EAAYsc,GAAeH,EAAY,EACtC,IAAI,KAAM5M,IAAA,YAAAA,GAAe,SAAQ,EACjC,SAAA,CAAS,EAEdgE,GACE5P,EAAE3D,EAAYmc,GAAeG,EAAY,EACtC,IAAI,KAAM9M,IAAA,YAAAA,GAAe,SAAQ,EACjC,SAAA,CAAS,CAEhB,CACF,EAAG,CAACkK,GAAYjB,EAAYlJ,GAAeC,GAAelJ,EAAcC,EAAcvG,CAAS,CAAC,EAGhG4U,GAAkB,IAAM,CAClBtG,GAAmCnO,GACrCob,GAAsB,GAAMpb,EAAwBmO,CAA+B,CAEvF,EAAG,CAACA,EAAiCnO,CAAsB,CAAC,EAE5D,MAAMob,GAAwB,MAC5BkB,EAAgB,GAChBC,EAAcvc,EACdwc,EAAuBrO,IACpB,CACH,IAAIsO,EACJ,GAAIF,GAAeC,EAAsB,CACvC,KAAM,CAAE,gBAAA5C,IAAoB2C,EACtB,CAAE,WAAAG,IAAeF,EACvBC,EAAmBE,GAAqB/C,GAAiBxW,GAASmZ,EAAY,WAAYG,EAAU,EACpG,QAAQ,IAAI,kFAAmFD,CAAgB,EAC/GjD,GAAciD,CAAgB,CAChC,CACA,GAAI,CAACA,EAAkB,OACvB,MAAMG,GAAYtN,GAAO,UAAY,EAC/BuN,EAAYtN,GAAO,UAAY,EAE/BuN,GAAe,CAACrT,GAAgBsT,KAAqB9Z,GAAWwG,GAAO,SAAA,EAAYsT,EAAQ,EAW7FT,IATgB,CAACU,GAAoBC,KAAuB,CAC9D,MAAMrI,GAAUkI,GAAaE,GAAYJ,EAAS,EAC5C/H,GAAUiI,GAAaG,GAAYJ,CAAS,EAClD,QAAQ,IAAI,gEAAiEjI,EAAO,EACpF,QAAQ,IAAI,gEAAiEC,EAAO,EACpF3B,GAAiBrT,EAAYgV,GAAUD,EAAO,EAC9CxB,GAAiBvT,EAAY+U,GAAUC,EAAO,CAChD,GAGc4H,EAAiB,SAAS,SAAA,EAAYA,EAAiB,SAAS,UAAU,CAE1F,EAEM7I,GAAgBU,GAAkB,CACtC,GAAI,CAAChF,IAAU,CAACC,IAAU,CAACnM,GAAS,OACpC,MAAMmG,EAAa+K,EAAI,CAAC,EAClB9K,EAAa8K,EAAI,CAAC,EAElBlO,EAAeoJ,GAAehG,EAAY,EAAK,EACjDpD,GACFvF,EAAgBuF,CAAY,EAG9B,MAAMD,GAAeqJ,GAAejG,EAAY,EAAI,EAChDpD,IACFvF,EAAgBuF,EAAY,CAEhC,EAEAsO,GACE,IAAM,CACAxM,GAAkB9B,CAAY,GAAK8B,GAAkB7B,CAAY,GACnEsK,GAAA,CAEJ,EACA,CAACtK,EAAcD,EAAcqI,GAAmBE,GAAmBE,GAAsBR,GAAcE,EAAY,EACnH,CAAE,KAAM,GAAA,CAAI,EAGd,MAAM4O,GAAoB3G,GAA2B,CACnD,QAAQ,IAAI,iCAAkCA,CAAK,EAC/CA,GAAS,OAASA,GAAS,IAC7BgE,GAAe,KAAK,EAEpBA,GAAe,QAAQhE,EAAQ,IAAI,MAAM,GAAG,EAAE,CAAC,CAAC,CAAC,CAErD,EAEMlB,GAAgBpT,EAAAA,QAAQ,IAAM,CAClC,MAAMqT,EAGF,CACF,KAAM,SACN,SAAU,EAAA,EAGZ,OADA,QAAQ,IAAIxE,GAAuBC,GAAuB3C,GAAcE,GAAc2E,EAAeE,GAAe,eAAe,EAC9HjG,GAAA,MAAAA,EAAgB,QAOjB,CAAC,CAACkB,IAAgB,CAAC,CAACE,IACtBgH,EAAQ,KAAO,kBACfA,EAAQ,SAAW,GACZA,GAGL,CAACxE,IAAyB1C,IAAgB5K,EAAE4K,EAAY,EAAE,GAAG6E,GAAiB,CAAC,GAM/E,CAAClC,IAAyBzC,IAAgB9K,EAAE8K,EAAY,EAAE,GAAG6E,IAAiB,CAAC,GACjFmC,EAAQ,SAAW,GACnBA,EAAQ,KAAO,iBACRA,KAGLxE,IAAyB,CAAC,CAACxC,IAK3ByC,IAAyB,CAAC,CAAC3C,MAC7BkH,EAAQ,KAAO,kBACfA,EAAQ,SAAW,IACZA,IAhCPA,EAAQ,KAAO,iBACfA,EAAQ,SAAW,GACZA,EAkCX,EAAG,CAAClH,GAAcE,GAAc2E,EAAeE,GAAejG,GAAA,YAAAA,EAAgB,QAAS4D,GAAuBC,EAAqB,CAAC,EAE9HmE,GAAWjT,EAAAA,QAAQ,KAChBoR,GAAA,YAAAA,EAA4B,iBAAkB,SACpD,CAACA,GAAA,YAAAA,EAA4B,aAAa,CAAC,EAE9CtO,EAAAA,UAAU,IAAM,CACVmQ,MACE/G,GAAA,YAAAA,EAAiC,YAAY/H,GAAA,YAAAA,EAAc,SAAS+H,GAAA,YAAAA,EAAiC,YAAYhI,GAAA,YAAAA,EAAc,SACjIsI,EAAqB,CAAC5O,CAAS,EAC/B8O,EAAqB9O,CAAS,IAE5BsO,GAAA,YAAAA,EAAiC,YAAY/H,GAAA,YAAAA,EAAc,SAAS+H,GAAA,YAAAA,EAAiC,YAAYhI,GAAA,YAAAA,EAAc,SACjIsI,EAAqB5O,CAAS,EAC9B8O,EAAqB,CAAC9O,CAAS,IAE7BsO,GAAA,YAAAA,EAAiC,aAAa/H,GAAA,YAAAA,EAAc,SAAS+H,GAAA,YAAAA,EAAiC,aAAahI,GAAA,YAAAA,EAAc,SACnIsI,EAAqB,EAAK,EAC1BE,EAAqB,EAAK,GAGhC,EAAG,CAACR,GAAA,YAAAA,EAAiC,UAAWhI,GAAA,YAAAA,EAAc,MAAOC,GAAA,YAAAA,EAAc,MAAO8O,GAAUrV,CAAS,CAAC,EAE9GkF,EAAAA,UAAU,IAAM,CACV+L,KACFzC,GAAgB,EAAE,EAClBQ,EAAwB,EAAK,GAE3BkC,KACFxC,GAAgB,EAAE,EAClBM,EAAwB,EAAI,GAE1B,CAACiC,IAAyB,CAACC,KACzB3C,IAAgB,CAACE,IACnBO,EAAwB,EAAI,EAE1BP,IAAgB,CAACF,IACnBS,EAAwB,EAAK,EAGnC,EAAG,CAACiC,GAAuBC,EAAqB,CAAC,EAEjDhM,EAAAA,UAAU,IAAM,CACVyT,GACF,WAAW,IAAM,CACfC,GAAwB,EAAK,CAC/B,EAAG,GAAG,CAEV,EAAG,CAACD,CAAoB,CAAC,EAEzB/D,GACE,IAAM,aACJ,IAAK/T,GAAA,MAAAA,EAAU,UAAYA,GAAA,MAAAA,EAAU,WAAa,CAAC8X,GAAwBxY,EAAwB,CACjG,MAAMmd,GAAgB,EAACzc,GAAA,YAAAA,EAAU,UAC3B0c,EAAgB,EAAC1c,GAAA,YAAAA,EAAU,UAC3BkU,GAAU5U,EAAuB,UAAYod,EAAgBD,GAC7DtI,GAAU7U,EAAuB,UAAYmd,GAAgBC,EAC7DtI,GAAiB9U,EAAuB,WAAY6B,EAAA7B,GAAA,YAAAA,EAAwB,SAAxB,YAAA6B,EAAgC,UAAWE,EAAA/B,GAAA,YAAAA,EAAwB,SAAxB,YAAA+B,EAAgC,SAC/HgT,GAAiB/U,EAAuB,WAAYgF,EAAAhF,GAAA,YAAAA,EAAwB,SAAxB,YAAAgF,EAAgC,UAAWgQ,EAAAhV,GAAA,YAAAA,EAAwB,SAAxB,YAAAgV,EAAgC,SAC/HnC,GAAWoC,GAAmBL,GAASE,EAAc,EACrDhC,GAAWmC,GAAmBJ,GAASE,EAAc,EAC3DrI,EAAqBlJ,EAAEuV,CAAkB,EAAE,IAAIlG,EAAQ,EAAE,UAAU,EACnElG,EAAqBnJ,EAAEyV,EAAkB,EAAE,IAAInG,EAAQ,EAAE,UAAU,CACrE,MACEpG,EAAqB,EAAE,EACvBC,EAAqB,EAAE,CAE3B,EACA,CAACjM,GAAA,YAAAA,EAAU,SAAUA,GAAA,YAAAA,EAAU,SAAU8X,EAAsBO,EAAoBE,EAAkB,EACrG,CAAE,KAAM,GAAA,CAAI,EAGdlU,EAAAA,UAAU,IACD,IAAM,CACXgL,GAAA,EACArD,EAAqB,EAAE,EACvBC,EAAqB,EAAE,CACzB,EACC,CAAA,CAAE,EAEL,MAAMyI,GAAUnT,EAAAA,QAAQ,KAClBkE,GAAA,YAAAA,EAAc,SAAU,SAAaC,GAAA,YAAAA,EAAc,SAAU,OACxDyH,EAAW1H,EAAc,MAAOC,EAAc,KAAK,EAEnD,KAER,CAACD,GAAA,YAAAA,EAAc,MAAOC,GAAA,YAAAA,EAAc,KAAK,CAAC,EAE7C,MAAO,CACL,cAAAgJ,GACA,cAAAC,GACA,cAAA4D,EACA,cAAAE,GACA,iBAAAK,GACA,iBAAAE,GACA,kBAAA7D,GACA,kBAAAC,GACA,sBAAAgB,GACA,sBAAAC,GACA,mBAAAf,GACA,aAAA5B,GACA,aAAAE,GACA,WAAAgK,EACA,cAAAC,EACA,qBAAAC,EACA,qBAAA5J,GACA,aAAAyM,GACA,gBAAAhB,GACA,eAAAE,GACA,WAAA5B,EACA,aAAAxS,EACA,aAAAC,EACA,kBAAA2N,GACA,YAAAR,EACA,YAAAE,GACA,aAAAG,GACA,UAAApR,GACA,WAAAC,GACA,SAAA8R,GACA,sBAAA6G,GACA,WAAA7B,GACA,iBAAA2D,GACA,cAAA7H,GACA,SAAAH,GACA,kBAAA1G,GACA,kBAAAE,GACA,gBAAAL,GACA,gBAAAE,GACA,cAAAqK,EACA,UAAA/Y,EACA,gCAAAsO,EACA,2BAAAkF,EACA,YAAAwH,EACA,OAAAvL,GACA,OAAAC,GACA,QAAA6F,EAAA,CAEJ,CC/jCA,SAAwBiI,IAAqB,CAC3C,KAAM,CACJ,cAAAjO,EACA,cAAAC,EACA,cAAA4D,EACA,cAAAE,EACA,sBAAArC,EACA,sBAAAC,EACA,mBAAAf,EACA,aAAA5B,EACA,aAAAE,EACA,qBAAAkK,EACA,qBAAA5J,EACA,WAAA0J,EACA,cAAAC,EACA,gBAAA8B,EACA,aAAAgB,EAEA,WAAA1C,GACA,aAAAxS,EACA,aAAAC,EACA,kBAAA2N,EACA,YAAAR,EACA,YAAAE,GACA,aAAAG,EACA,UAAApR,EACA,WAAAC,EAEA,sBAAA2Y,GACA,iBAAA8B,EACA,cAAA7H,EACA,SAAAH,EAEA,YAAA2F,GACA,gBAAAxM,EACA,gBAAAE,EACA,cAAAqK,GACA,UAAA/Y,GACA,2BAAAwT,EACA,gCAAAlF,GACA,iBAAAqF,EACA,iBAAAE,EACA,OAAApE,EACA,OAAAC,EACA,QAAA6F,CAAA,EACE6C,GAAA,EACE,CAAE,MAAAZ,CAAA,EAAU5Q,GAAA,EACZ,CAAE,wBAAA0Q,GAAyB,oBAAAhQ,EAAqB,YAAAmD,EAAa,eAAA8M,CAAA,EAAmBrW,GAAA,EAChF,CAAE,oBAAAgM,CAAA,EAAwBpL,GAAA,EAC1B,CAAC2b,EAAMC,CAAO,EAAIhd,EAAAA,SAAS,EAAK,EAChCid,GAAUvb,EAAAA,QACd,IAAM,CACJ,CACE,MAAO,cACP,MAAO,MAAA,EAET,CACE,MAAO,QAAQoV,EAAQhP,GAAa+G,GAAA,YAAAA,EAAe,OAAQ,CAAC,EAAIA,GAAA,YAAAA,EAAe,OAAO,MAAM,EAAG,EAAE,GACjG,MAAOvP,GAAY,QAAU,QAC7B,UAAW,CACT,UAAW,iBAAA,EAEb,QAAS,mBAAmBwI,GAAa+G,GAAA,YAAAA,EAAe,OAAQ,CAAC,CAAC,6GAAA,EAEpE,CACE,MAAO,QAAQiI,EAAQhP,GAAagH,GAAA,YAAAA,EAAe,OAAQ,CAAC,EAAIA,GAAA,YAAAA,EAAe,OAAO,MAAM,EAAG,EAAE,GACjG,MAAOxP,GAAY,QAAU,QAC7B,UAAW,CACT,UAAW,iBAAA,EAEb,QAAS,mBAAmBwI,GAAagH,GAAA,YAAAA,EAAe,OAAQ,CAAC,CAAC,6GAAA,CACpE,EAEF,CAACD,EAAeC,EAAexP,GAAWwX,CAAK,CAAA,EAG3C,CAACiF,GAAemB,EAAgB,EAAIld,EAAAA,SAAS,EAAI,EACvDwE,EAAAA,UAAU,IAAM,CACVkD,GAAkB9B,CAAY,GAAK8B,GAAkB7B,CAAY,GAAKkW,KACxEmB,GAAiB,EAAK,EACtBrC,GAAsB,EAAI,EAE9B,EAAG,CAACjV,EAAcC,EAAckS,CAAU,CAAC,EAE3C,MAAMoF,EAAgBzb,EAAAA,QAAQ,IAAM,CAClC,GAAIiT,GAAY7B,GAA8BlF,GAAiC,CAC7E,MAAM9J,EAAY8J,GAAgC,WAClD,MAAI,EAAAkF,EAA2B,gBAAkBhP,EAAU,QAAUgP,EAA2B,gBAAkBhP,EAAU,OAI9H,CACA,MAAO,EACT,EAAG,CAAC6Q,EAAU7B,EAA4BlF,EAA+B,CAAC,EAEpEsH,EAAcxT,EAAAA,QAAQ,IACtB,EAACkE,GAAA,MAAAA,EAAc,QAAS,EAACC,GAAA,MAAAA,EAAc,OAAc,GAElD5C,GAAEI,GAAYuC,EAAa,KAAK,CAAC,EAAE,GAAGvC,GAAYwC,EAAa,KAAK,CAAC,EAC3E,CAACD,GAAA,YAAAA,EAAc,MAAOC,GAAA,YAAAA,EAAc,KAAK,CAAC,EAEvCuX,GAAe1b,EAAAA,QAAQ,IACpB8K,EAAoBqC,GAAA,YAAAA,EAAe,UAAWhB,CAAY,EAChE,CAACgB,GAAA,YAAAA,EAAe,UAAWhB,CAAY,CAAC,EAErCwP,GAAe3b,EAAAA,QAAQ,IACpB8K,EAAoBsC,GAAA,YAAAA,EAAe,UAAWf,CAAY,EAChE,CAACe,GAAA,YAAAA,EAAe,UAAWf,CAAY,CAAC,EAErCuP,EAAmB5b,EAAAA,QAAQ,IACxBuB,GAAEma,EAAY,EAAE,IAAIC,EAAY,EAAE,SAAA,EACxC,CAACD,GAAcC,EAAY,CAAC,EAE/B,OACExe,OAACuH,IAAO,EAAE,OAAO,WAAW,aAAa,eAAe,aAAa,IAAI,OACtE,SAAA,CAAA+W,IACGrG,EA+BA/X,EAAAA,IAACwe,GAAA,CACC,OAAQR,EACR,MAAOhF,EACP,QAAS,IAAMiF,EAAQ,EAAK,EAC5B,QAAS,IAAMA,EAAQ,CAACD,CAAI,EAC5B,QAAAE,GACA,SAAUjH,GAAS,CACjBgC,EAAchC,CAAK,EACfA,IAAU+B,IACZjK,EAAgB,EAAE,EAClBE,EAAgB,EAAE,EAClBqK,GAAc,GAAG,EAErB,CAAA,CAAA,EA3CFtZ,EAAAA,IAACiJ,GAAA,CACC,KAAK,aACL,SAAU,CAACC,EAASC,KAAQD,IAAYC,GAAI,MAC5C,UAAW,CACT,EAAG,OACH,OAAQ,OACR,GAAI,eACJ,EAAG,OACH,eAAgB,WAChB,EAAG,KAAA,EAEL,UAAW,CACT,EAAG,CAAE,KAAM,SAAU,GAAI,QAAA,EACzB,SAAU,OACV,QAAS,MACT,aAAc,MACd,IAAK,KAAA,EAEP,QAAA+U,GACA,WAAYlF,EACZ,gBAAkBtV,GAAc,CAC9BuV,EAAcvV,GAAA,YAAAA,EAAM,KAAK,GACrBA,GAAA,YAAAA,EAAM,SAAUsV,IAClBjK,EAAgB,EAAE,EAClBE,EAAgB,EAAE,EAClBqK,GAAc,GAAG,EAErB,CAAA,CAAA,UAmBLjS,GAAA,CAAO,EAAE,OAAO,IAAI,OAAO,MAAM,aAC/B,SAAA,CAAAwQ,IACC7X,EAAAA,IAACiW,GAAA,CACC,YAAAE,EACA,UAAA5V,GACA,iBAAA2T,EACA,iBAAAE,EACA,aAAAvN,EACA,aAAAC,EACA,YAAAmN,EACA,YAAAE,GACA,kBAAAM,EACA,aAAAH,EACA,UAAApR,EACA,WAAAC,EACA,OAAA6M,EACA,OAAAC,EACA,QAAS8D,GAAA,YAAAA,EAA4B,OAAA,CAAA,EAGzC/T,EAAAA,IAACK,EAAA,CAAK,SAAS,OAAO,MAAM,eAAe,WAAW,MAAM,GAAG,OAAO,SAAA,gBAAA,CAEtE,CAAA,EACF,EAEAP,EAAAA,KAACuH,IAAO,EAAE,OAAO,GAAG,MAAM,QAASQ,EAAsB,SAAW,iBAChE,SAAA,EAAAmR,GAAc,SAAWzY,GAAYyY,GAAc,QAAUA,GAAc,WAC3EhZ,EAAAA,IAACqY,GAAA,CACC,MAAOvI,EACP,QAAS6D,EACT,MAAO7E,EACP,YAAauP,GACb,YAAY,MACZ,aAAa,YACb,QAAS,CAAC/O,GAAwB4J,EAClC,KAAM,CACJ,OAAQ1H,EACR,MAAO,CACL,OAAQ,kBAAA,CACV,EAEF,kBAAmB,GACnB,SAAUyF,GAAS,CACjBvG,EAAmBuG,EAAO,EAAI,CAChC,EACA,UAAW,CACT,EAAG,OAAA,EAEL,aAAa,cAAA,CAAA,GAGf+B,GAAc,SAAWzY,GAAYyY,GAAc,QAAUA,GAAc,WAC3EhZ,EAAAA,IAACqY,GAAA,CACC,MAAOtI,EACP,QAAS8D,EACT,MAAO7E,EACP,YAAasP,GACb,aAAa,YACb,YAAY,MACZ,QAAShP,GAAwB4J,EACjC,KAAM,CACJ,OAAQzH,EACR,MAAO,CACL,OAAQ,kBAAA,CACV,EAEF,kBAAmB,GACnB,SAAUwF,GAAS,CACjBvG,EAAmBuG,EAAO,EAAK,CACjC,EACA,UAAW,CACT,EAAG,OAAA,EAEL,aAAa,cAAA,CAAA,CACf,EAEJ,EAEAjX,EAAAA,IAACye,GAAA,CACC,SAAS,eACT,WAAYpF,GACZ,SAAWpC,GAA2B2G,EAAiB3G,CAAK,EAC5D,aAAa,OACb,kBAAkB,KAAA,CAAA,QAGnBlX,GAAA,CAAO,EAAE,OAAO,GAAG,OAAO,GAAG,OAC5B,SAAAC,EAAAA,IAACsY,GAAA,CACC,WAAYiD,GACZ,QAASvQ,EACT,SAAU,IAAM,CACd8M,EAAe,CAAC9M,CAAW,CAC7B,CAAA,CAAA,EAEJ,EAEAhL,EAAAA,IAACuY,GAAA,CACC,EAAE,OACF,OAAO,OACP,WAAW,MACX,SAAS,OACT,UAAWwC,GAAmB7B,EAC9B,QAAS6C,EACT,WAAYhG,EAAc,SAEzB,SAAAA,EAAc,IAAA,CAAA,SAEhB1O,GAAA,CAAO,EAAE,OAAO,IAAI,OAAO,GAAG,OAC7B,SAAA,CAAArH,EAAAA,IAACwY,GAAA,CACC,MAAM,gBACN,UAAWU,EACX,MAAOT,GAAe8F,EAAkB,CAAC,EACzC,WAAY,CACV,SAAU,OACV,OAAQ,MAAA,EAEV,WAAY,CACV,SAAU,MAAA,CACZ,CAAA,EAEFve,EAAAA,IAACwY,GAAA,CACC,MACE1Y,EAAAA,KAACC,GAAA,CAAO,IAAI,MACV,SAAA,CAAAC,EAAAA,IAACK,GAAK,SAAA,UAAA,CAAQ,QACbiJ,GAAA,CAAa,QAAQ,0CACpB,SAAAtJ,EAAAA,IAACoX,IAAO,OAAO,UACb,SAAApX,EAAAA,IAACuJ,GAAA,CAAK,UAAU,kBAAkB,KAAK,OAAO,KAAK,OAAO,EAC5D,CAAA,CACF,CAAA,EACF,EAEF,MAAOmP,GAAS5C,CAAO,EACvB,WAAY,CACV,SAAU,MAAA,EAEZ,WAAY,CACV,SAAU,MAAA,CACZ,CAAA,CACF,CAAA,CACF,CAAA,EACF,CAEJ,CAEA,MAAM0I,GAAc,CAAC,CACnB,OAAAE,EACA,QAAAC,EACA,SAAAC,EACA,QAAAC,EACA,QAAAX,EACA,MAAAjH,CACF,IAOM,CACJ,MAAM7T,EAAaT,EAAAA,QAAQ,IAAMub,EAAQ,KAAM/U,GAAaA,EAAI,QAAU8N,CAAK,EAAG,CAACiH,EAASjH,CAAK,CAAC,EAClG,OACEnX,EAAAA,KAACgf,GAAA,CACC,OAAM,GACN,OAAAJ,EACA,QAAAC,EACA,YAAY,QACZ,UAAW,CACT,EAAG,MACH,aAAc,OACd,EAAG,qBACH,UAAW,MAAA,EAGb,SAAA,CAAA3e,EAAAA,IAAC+e,GAAA,CACC,GAAIxG,GACJ,QAAQ,WACR,GAAG,eACH,OAAO,UACP,EAAE,kBACF,aAAa,MACb,OAAO,YACP,YAAY,SACZ,GAAG,QACH,EAAE,OACF,EAAE,OACF,QAAAsG,EAEA,gBAAC9e,GAAA,CAAO,MAAM,OAAO,eAAe,gBAAgB,IAAI,MACtD,SAAA,CAAAD,OAACC,GAAA,CACC,SAAA,CAAAC,MAACK,GAAK,MAAM,eAAe,SAAS,OACjC,0BAAY,MACf,GACC+C,GAAA,YAAAA,EAAY,UACXpD,EAAAA,IAACsJ,GAAA,CACC,cACGjJ,EAAA,CAAK,SAAS,OAAO,WAAW,OAC9B,0BAAY,OAAA,CACf,EAGF,eAAC+W,GAAA,CACC,SAAApX,MAACuJ,GAAA,CAAK,UAAU,kBAAkB,CAAA,CACpC,CAAA,CAAA,CACF,EAEJ,EAEAvJ,EAAAA,IAACuJ,GAAA,CACC,WAAW,iBACX,UAAWmV,EAAS,iBAAmB,eACvC,UAAU,mBACV,QAASA,EAAS,eAAiB,iBACnC,SAAS,MAAA,CAAA,CACX,CAAA,CACF,CAAA,CAAA,EAEF1e,EAAAA,IAACqH,GAAA,CAAO,EAAE,OAAO,IAAI,MAAM,EAAE,IAC1B,SAAA6W,EAAQ,IAAIxa,GACX1D,EAAAA,IAACgf,GAAA,CAEC,EAAE,OACF,EAAE,SACF,EAAE,OACF,aAAa,MACb,OAAO,YACP,GAAG,SACH,SAAS,OACT,UAAU,SACV,YAAa/H,KAAUvT,GAAA,YAAAA,EAAM,OAAQ,UAAY,SACjD,MAAOuT,IAAUvT,EAAK,MAAQ,UAAY,gBAC1C,WAAW,MACX,QAAS,IAAM,CACbkb,EAASlb,GAAA,YAAAA,EAAM,KAAK,CACtB,EAEC,SAAAA,EAAK,KAAA,EAhBDA,EAAK,KAAA,CAkBb,CAAA,CACH,CAAA,CAAA,CAAA,CAGN,ECzZA,SAAwBub,IAAqB,CACzB9X,GAAA,EAClB,MAAM+W,EAAU,CACd,CACE,MAAO,WACP,MAAO,UAAA,EAET,CACE,MAAO,SACP,MAAO,QAAA,CACT,EAEI,CAAE,oBAAA7c,EAAqB,uBAAA6d,CAAA,EAA2Bzd,GAAA,EAExD,cACG4F,GAAA,CAAO,EAAE,OAAO,EAAG,CAAE,KAAM,aAAc,GAAI,eAAA,EAAmB,aAAa,OAAO,GAAG,UAAU,IAAI,OACpG,SAAA,CAAAvH,EAAAA,KAACC,GAAA,CAAO,EAAE,OAAO,eAAe,gBAC9B,SAAA,CAAAC,EAAAA,IAACiJ,GAAA,CACC,KAAK,YACL,GAAG,OACH,UAAW,CACT,EAAG,CAAE,KAAM,OAAQ,GAAI,MAAA,EACvB,EAAG,OACH,OAAQ,OACR,GAAI,MAAA,EAEN,UAAW,CACT,EAAG,CAAE,KAAM,MAAO,GAAI,OAAA,EACtB,SAAU,OACV,GAAI,MAAA,EAEN,QAAAiV,EACA,WAAY7c,GAAuB,WAAa,WAAa,SAC7D,gBAAkBqC,GAAc,CAC9Bwb,EAAuBxb,GAAA,YAAAA,EAAM,KAAK,CACpC,CAAA,CAAA,EAED1D,EAAAA,IAACmf,GAAA,CAAS,aAAa,YAAY,SAAS,MAAA,CAAO,CAAA,EACtD,EACC9d,GAAuB,WAAarB,MAAC4X,GAAA,CAAA,CAAgB,QAAMmG,GAAA,CAAA,CAAmB,CAAA,EACjF,CAEJ,CCzCA,SAAwBqB,IAAwB,SAC9C,KAAM,CAAE,MAAArH,CAAA,EAAU5Q,GAAA,EACZ,CAAE,oBAAAsG,CAAA,EAAwBpL,GAAA,EAC1B,CAAE,uBAAA3B,EAAwB,qBAAAE,CAAA,EAAyBE,GAAA,EACnDue,EAA0B1c,EAAAA,QAAQ,IAC/B/B,GAAA,YAAAA,EAAuBF,GAAA,YAAAA,EAAwB,IACrD,CAACA,GAAA,YAAAA,EAAwB,GAAIE,CAAoB,CAAC,EAE/C,CAAE,kBAAA0e,EAAmB,kBAAAC,CAAA,EAAsB9d,GAAA,EAE3C+d,EAAW7c,EAAAA,QAAQ,IAChBgG,GAAkBjI,CAAsB,GAAKiI,GAAkB0W,CAAuB,EAC5F,CAAC3e,EAAwB2e,CAAuB,CAAC,EAE9CI,EAAc9c,EAAAA,QAAQ,IAAM,SAChC,OACE0c,IACAA,GAAA,YAAAA,EAAyB,sBAAuB,OAChDA,GAAA,YAAAA,EAAyB,sBAAuB,MAChD3e,GAEA,QAAQ,IAAI,mFAAoF2e,CAAuB,EAChH5G,GACLvU,GAAEuJ,GAAoBlL,EAAA7B,GAAA,YAAAA,EAAwB,gBAAxB,YAAA6B,EAAuC,UAAW8c,GAAA,YAAAA,EAAyB,kBAAkB,CAAC,EACjH,KAAK5R,GAAoBhL,EAAA/B,GAAA,YAAAA,EAAwB,gBAAxB,YAAA+B,EAAuC,UAAW4c,GAAA,YAAAA,EAAyB,kBAAkB,CAAC,EACvH,SAAA,EACH,CAAA,GAGG,KACT,EAAG,CAACA,GAAA,YAAAA,EAAyB,mBAAoBA,GAAA,YAAAA,EAAyB,kBAAkB,CAAC,EAE7F,OACEvf,EAAAA,KAACuH,IAAO,IAAK,CAAE,KAAM,MAAO,GAAI,QAAU,GAAG,eAAe,EAAE,OAAO,EAAG,CAAE,KAAM,eAAgB,GAAI,eAAiB,aAAa,OAChI,SAAA,CAAAvH,EAAAA,KAAC2X,GAAA,CAAM,QAAS,CAAE,KAAM,SAAU,GAAI,KAAA,EAAS,EAAE,OAAO,QAAS,CAAE,KAAM,SAAU,GAAI,eAAA,EAAmB,IAAK,CAAE,KAAM,OAAQ,GAAI,GAAA,EACjI,SAAA,CAAA3X,EAAAA,KAAC2X,GAAA,CACC,QAAS,CAAE,KAAM,MAAO,GAAI,QAAA,EAC5B,MAAO,CAAE,KAAM,SAAU,GAAI,YAAA,EAC7B,QAAS,CAAE,KAAM,gBAAiB,GAAI,QAAA,EACtC,IAAI,MAEJ,SAAA,CAAAzX,EAAAA,IAACK,EAAA,CAAK,MAAM,eAAe,SAAA,YAAS,EAEpCL,EAAAA,IAACgJ,GAAA,CAAS,SAAAwW,EACR,SAAAxf,MAACK,GAAK,MAAM,eAAe,SAAS,OAAO,oBAAoB,eAAe,WAAW,OACtF,WACH,CAAA,CACF,CAAA,CAAA,CAAA,SAEDN,GAAA,CAAO,IAAI,MAAM,GAAG,OAAO,eAAe,SACzC,SAAA,CAAAC,MAACgJ,GAAA,CAAS,SAAAwW,EACR,SAAA1f,OAACC,GAAA,CAAO,IAAI,MACV,SAAA,CAAAC,EAAAA,IAACK,GAAK,MAAM,eAAgB,aAAakC,EAAA7B,GAAA,YAAAA,EAAwB,gBAAxB,YAAA6B,EAAuC,MAAM,EAAE,EACxFzC,EAAAA,KAACO,EAAA,CAAK,MAAM,UAAW,SAAA,CAAAgf,GAAA,YAAAA,EAAyB,gBAAgB,GAAA,CAAA,CAAC,CAAA,CAAA,CACnE,CAAA,CACF,EACArf,EAAAA,IAAC0f,GAAA,CACC,EAAG,CAAE,KAAM,QAAS,GAAI,OAAA,EACxB,EAAE,MACF,MAAOL,GAAA,YAAAA,EAAyB,gBAChC,GAAG,cACH,GAAI,CACF,0BAA2B,CACzB,GAAI,SAAA,CACN,CACF,CAAA,QAEDrW,GAAA,CAAS,SAAAwW,EACR,SAAA1f,OAACC,GAAA,CAAO,IAAI,MACV,SAAA,CAAAD,EAAAA,KAACO,EAAA,CAAK,MAAM,gBAAiB,SAAA,CAAAgf,GAAA,YAAAA,EAAyB,gBAAgB,GAAA,EAAC,EACvErf,MAACK,GAAK,MAAM,eAAgB,aAAaoC,EAAA/B,GAAA,YAAAA,EAAwB,gBAAxB,YAAA+B,EAAuC,MAAM,CAAA,CAAE,CAAA,CAAA,CAC1F,CAAA,CACF,CAAA,CAAA,CACF,CAAA,EACF,EACA3C,EAAAA,KAACC,GAAA,CACC,IAAK,CAAE,KAAM,MAAO,GAAI,KAAA,EACxB,EAAG,CAAE,KAAM,UAAW,GAAI,cAAA,EAC1B,EAAE,OACF,QAAQ,gBACR,cAAe,CAAE,KAAM,SAAU,GAAI,KAAA,EAErC,SAAA,CAAAC,EAAAA,IAAC2f,GAAA,CACC,MAAM,OACN,MAAOjf,GAAA,YAAAA,EAAwB,cAC/B,OAAQ2e,GAAA,YAAAA,EAAyB,mBACjC,YAAaC,EACb,MAAOvH,EAAQ,WAAa,YAAA,CAAA,EAE9B/X,EAAAA,IAAC2f,GAAA,CACC,MAAM,QACN,MAAOjf,GAAA,YAAAA,EAAwB,cAC/B,OAAQ2e,GAAA,YAAAA,EAAyB,mBACjC,YAAaE,EACb,MAAM,UAAA,CAAA,CACR,CAAA,CAAA,CACF,EACF,CAEJ,CCjGA,SAAwBK,IAAkB,CACxC,KAAM,CAAE,2BAAA/V,CAAA,EAA+BC,GAAA,EACjC,CAAE,uBAAApJ,EAAwB,mBAAAmf,EAAoB,eAAAC,EAAgB,yBAAAnf,CAAA,EAA6BG,GAAA,EAC3F,CAACif,EAAgBC,CAAiB,EAAI/e,EAAAA,SAAS,EAAK,EACpD,CAAE,0BAAAgf,CAAA,EAA8BlO,GAAA,EAChC,CAAE,oBAAAC,CAAA,EAAwBC,GAAA,EAC1B,CAAE,2BAAAiO,CAAA,EAA+BC,GAAA,EACjC,CAAE,uBAAAC,CAAA,EAA2BC,GAAA,EAEF1d,EAAAA,QAAQ,IAChCkd,GAAA,YAAAA,EAAqBnf,GAAA,YAAAA,EAAwB,IACnD,CAACA,GAAA,YAAAA,EAAwB,GAAImf,CAAkB,CAAC,EAEnD,MAAMS,EAA6B3d,EAAAA,QAAQ,IAClChC,GAAA,YAAAA,EAA2BD,GAAA,YAAAA,EAAwB,UACzD,CAACC,EAA0BD,GAAA,YAAAA,EAAwB,QAAQ,CAAC,EAmE/D,MAAO,CACL,oBAlE0B,MAAO6f,GAAsB,QACvD,QAAQ,IAAIA,EAAc,qBAAqB,EAC/C,IAAIlO,EAAuB,CAAA,EAC3B,GAAI,CACF2N,EAAkB,EAAI,EACtB,KAAM,CAAE,SAAA/U,EAAU,GAAA4B,EAAI,UAAA3B,EAAW,UAAAC,GAAcoV,EACzCC,GAAuBX,GAAA,YAAAA,EAAqBhT,GAC5C9C,EAAS,CACb,SAAAkB,EACA,WAAY4B,EACZ,aAActK,GAAAie,IAAwB,CAAA,IAAxB,YAAAje,GAA6B,IAAKke,GAAsBA,EAAO,cAC7E,UAAAvV,EACA,UAAAC,CAAA,EAII,CAAE,YAAAG,EAAa,GAAGoH,CAAA,EAAc3I,EACtCsI,EAAkB,CAChB,GAAGK,EACH,YAAa,KAAK,UAAUpH,CAAW,CAAA,EAGzC,MAAMqH,GAAK9I,EAA2B,CAACE,CAAM,CAAC,EACxCpE,EAAM,MAAMsa,EAChBtN,GACA,CACE,YAAa,KACkB,CAC3B,qBAAsB,cACtB,eAAgB,OAAA,EAGpB,EAEF,CACE,UAAW,CACT,OAAQN,EACR,WAAY,OACZ,OAAQ,cAAA,CACV,CACF,EAGF,GADA,QAAQ,IAAI,2BAA4B1M,CAAG,EACvCA,EAAK,CAEP,MAAM+a,EAAWJ,GAA+B,MAAMJ,EAA2B,CAACxf,CAAyC,CAAC,EAE5H,QAAQ,IAAI,2BAA4BggB,CAAQ,EAGhD,WAAW,IAAM,CACf1O,EAAA,EACAoO,EAAuB,CAACG,CAAY,EAAG,CACrC,CAACG,GAAA,YAAAA,EAAU,WAAW,EAAGA,CAAA,CAC1B,CAEH,EAAG,GAAI,CACT,CACAV,EAAkB,EAAK,CACzB,OAAS7O,EAAO,CACd6O,EAAkB,EAAK,EACvB,QAAQ,IAAI,gEAAiE7O,CAAK,CACpF,CACF,EAIE,eAAA4O,CAAA,CAEJ,CC9FA,SAAwBY,IAAqC,CAC3D,KAAM,CAAE,WAAAC,CAAA,EAAeC,GAAA,EAavB,MAAO,CAAE,gCAZ+B,MAAOC,GAAwB,CACrE,GAAI,CACF,MAAMnb,EAAM,MAAMib,EAAWG,GAAkC,MAAO,CACpE,YAAAD,CAAA,CACD,EACD,GAAInb,GAAA,MAAAA,EAAK,KACP,OAAOA,CAEX,OAASwL,EAAO,CACd,QAAQ,IAAI,+FAAgGA,CAAK,CACnH,CACF,CACS,CACX,CCDA,SAAwB6P,GAAyB,CAAE,oBAAAC,EAAqB,aAAAC,GAAoE,gBAC1I,KAAM,CACJ,uBAAAxgB,EACA,eAAAof,EACA,mBAAAD,EACA,sBAAAsB,EACA,4BAAAC,EACA,0BAAAC,EACA,8BAAAC,EACA,qBAAA1gB,EACA,yBAAAD,CAAA,EACEG,GAAA,EACEygB,EAAwB5e,EAAAA,QAAQ,IAC7Bmd,GAAA,YAAAA,EAAiBpf,GAAA,YAAAA,EAAwB,IAC/C,CAACof,EAAgBpf,CAAsB,CAAC,EACrC8gB,EAA2B7e,EAAAA,QAAQ,IAAM,CAC7C,MAAM8e,EAAS5B,GAAA,YAAAA,EAAqBnf,GAAA,YAAAA,EAAwB,IAC5D,OAAO+gB,GAAA,YAAAA,EAAQ,OAAO,CAAC/d,EAAWge,IAAkB,aAIlD,OAH0Bxd,IACxBwR,GAAAhQ,GAAAjD,GAAAF,EAAA5B,GAAA,YAAAA,EAA2BD,GAAA,YAAAA,EAAwB,YAAnD,YAAA6B,EAA8D,iBAA9D,YAAAE,EAA8E,UAA9E,YAAAiD,EAAwFgc,KAAxF,YAAAhM,EAAgG,oBAAqB,CAAA,EAE9F,GAAG,CAAC,GAAKxR,GAAER,GAAA,YAAAA,EAAM,sBAAuB,CAAC,EAAE,GAAG,CAAC,CAC1E,EACF,EAAG,CAACmc,EAAoBnf,EAAwBC,CAAwB,CAAC,EAEnE,CAAE,oBAAAghB,EAAqB,eAAA5B,CAAA,EAAmBH,GAAA,EAC1C,CAAE,kBAAAN,GAAmB,kBAAAC,EAAmB,YAAAvU,CAAA,EAAgBvJ,GAAA,EAExD,CAACmgB,EAAYC,CAAa,EAAI5gB,EAAAA,SAAS,GAAG,EAC1C,CAAE,sBAAA6gB,EAAA,EAA0BC,GAAA,EAElCtc,EAAAA,UAAU,IAAM,CACd,GAAI/E,GAA0Bof,GAAkBD,EAAoB,CAClE,KAAM,CAAE,MAAA7a,CAAA,EAAU8c,GAAsB,CAACphB,CAAsB,EAAG,CAAA,EAAI,GAAI,CAAA,EAAIof,EAAgBD,CAAkB,EAEhHgC,EAAc7c,CAAK,CACrB,CACF,EAAG,CAACtE,EAAwBof,EAAgBD,CAAkB,CAAC,EAE/D,MAAMmC,EAAerf,EAAAA,QAAQ,IACvBqI,EACKsU,KAAsB,IAAMC,IAAsB,GAEpD,GACN,CAACD,GAAmBC,EAAmBvU,CAAW,CAAC,EAEhD,CAAE,MAAA+M,CAAA,EAAU5Q,GAAA,EAEZ8a,EAAmBtf,EAAAA,QAAQ,IAG5B,OAAOif,CAAU,IAAM,IACrB,CAACJ,IAA4BA,GAAA,YAAAA,EAA0B,MAAM9d,GAAQQ,EAAER,GAAA,YAAAA,EAAM,mBAAmB,EAAE,GAAG,CAAC,OACtG,CAAC6d,IAA0BA,GAAA,YAAAA,EAAuB,kBAAmB,MAAOA,GAAA,YAAAA,EAAuB,kBAAmB,MACzHxB,EAED,CAACqB,EAA6BrB,EAAgBwB,EAAuBK,EAAYJ,CAAwB,CAAC,EAEvGtD,GAAU,CACd,CACE,MAAO,YACP,MAAO,WAAA,EAET,CACE,MAAO,UACP,MAAO,SAAA,CACT,EAGI,CAAC9a,EAAY8e,CAAa,EAAIjhB,EAAAA,SAAcid,GAAQ,CAAC,CAAC,EAEtDiE,EAAmBhZ,GAAa,CACpC+Y,EAAc/Y,CAAG,CACnB,EAEM,CAAE,gCAAAiZ,EAAA,EAAoCzB,GAAA,EACtC,CAAC0B,EAA0BC,CAA2B,EAAIrhB,EAAAA,SAAc,IAAI,EAC5EshB,GAAwC,SAAY,YACxD,MAAM5c,EAAM,MAAMyc,GAAgC1hB,GAAA,YAAAA,EAAwB,EAAY,EACtF,QAAQ,IAAI,iFAAkFiF,CAAG,GAC7F0c,IAA6B,QAG3B9f,EAAAoD,GAAA,YAAAA,EAAK,OAAL,YAAApD,EAAW,UAAW,QAAa2B,EAAEI,IAAY7B,EAAAkD,GAAA,YAAAA,EAAK,OAAL,YAAAlD,EAAW,MAAM,CAAC,EAAE,IAAGiD,GAAA2c,GAAA,YAAAA,EAA0B,OAA1B,YAAA3c,GAAgC,MAAM,IAChH4c,EAA4B3c,CAAG,CAGrC,EAEA/C,GAAqB,IAAM,CACrBlC,GAAA,MAAAA,EAAwB,IAC1B6hB,GAAA,CAEJ,EAAG,CAAC7hB,GAAA,YAAAA,EAAwB,GAAI6gB,EAAuBC,EAA0B5gB,CAAoB,CAAC,EAEtG,MAAM4hB,GAAU,SAAY,eAC1B,MAAMb,EAAoBjhB,CAAsB,EAChD,MAAM+hB,EAAcve,IAAE3B,EAAA8f,GAAA,YAAAA,EAA0B,OAA1B,YAAA9f,EAAgC,SAAU,CAAC,EAC9D,KAAIgf,GAAA,YAAAA,EAAuB,kBAAmB,CAAC,EAC/C,SAAA,EACGmB,EAAcxe,IAAEzB,EAAA4f,GAAA,YAAAA,EAA0B,OAA1B,YAAA5f,EAAgC,SAAU,CAAC,EAC9D,KAAI8e,GAAA,YAAAA,EAAuB,kBAAmB,CAAC,EAC/C,SAAA,EAKGoB,GAJqBC,GAAK,CAC9B,GAAGpB,GAAA,YAAAA,EAA0B,IAAI9d,GAAQA,GAAA,YAAAA,EAAM,cAC/C,IAAGgC,EAAA2c,GAAA,YAAAA,EAA0B,SAA1B,YAAA3c,EAAkC,IAAIhC,GAAQA,GAAA,YAAAA,EAAM,SAAQ,CAChE,EACwC,IAAI+E,GAAY,YACvD,MAAMoa,KAAYtgB,EAAAif,GAAA,YAAAA,EAA0B,KAAK9d,KAAQA,IAAA,YAAAA,GAAM,gBAAiB+E,KAA9D,YAAAlG,EAAyE,sBAAuB,IAC5GugB,KAAMpd,IAAAjD,EAAA4f,GAAA,YAAAA,EAA0B,SAA1B,YAAA5f,EAAkC,UAAaiB,IAAA,YAAAA,GAAM,YAAa+E,KAAlE,YAAA/C,GAA6E,SAAU,IAC7FyE,GAASjG,EAAEI,GAAYue,EAAS,CAAC,EAAE,IAAIve,GAAYwe,EAAG,CAAC,EAAE,SAAA,EAC/D,MAAO,CACL,SAAUra,EACV,OAAQ0B,IAAU,CAAA,CAEtB,CAAC,EACDmY,EAA4B,CAC1B,KAAM,CACJ,OAAQG,EACR,UAAU/M,EAAA2M,GAAA,YAAAA,EAA0B,OAA1B,YAAA3M,EAAgC,QAAA,EAE5C,KAAM,CACJ,OAAQgN,EACR,UAAUtG,EAAAiG,GAAA,YAAAA,EAA0B,OAA1B,YAAAjG,EAAgC,QAAA,EAE5C,OAAQuG,EAAA,CACT,EACD,MAAMJ,GAAA,CACR,EAEA,OACEziB,EAAAA,KAACuH,GAAA,CAAO,GAAG,eAAe,EAAE,OAAO,EAAG,CAAE,KAAM,WAAY,GAAI,aAAA,EAAiB,aAAa,OAC1F,SAAA,CAAAvH,EAAAA,KAACC,GAAA,CAAO,EAAE,OAAO,QAAQ,gBACvB,SAAA,CAAAC,EAAAA,IAACyX,GAAA,CACC,QAAS,CAAE,KAAM,MAAO,GAAI,QAAA,EAC5B,WAAY,CAAE,KAAM,SAAU,GAAI,YAAA,EAClC,QAAS,CAAE,KAAM,gBAAiB,GAAI,QAAA,EACtC,EAAG,CAAE,KAAM,OAAQ,GAAI,MAAA,EAEvB,SAAA3X,EAAAA,KAACC,GAAA,CAAO,IAAI,OACV,SAAA,CAAAD,EAAAA,KAACuH,GAAA,CAAO,MAAM,aACZ,SAAA,CAAArH,EAAAA,IAACK,EAAA,CAAK,MAAM,eAAe,SAAA,kBAAe,EAC1CL,EAAAA,IAACgJ,GAAA,CAAS,SAAU,CAAC,CAAC4Y,GAAc,CAAC,CAAClhB,GAA0B,CAAC,CAACof,GAAkB,CAAC,CAACD,EACpF,SAAA7f,EAAAA,IAACK,EAAA,CAAK,MAAM,eAAe,SAAS,OACjC,SAAAoY,GAAemJ,EAAY,CAAC,CAAA,CAC/B,CAAA,CACF,CAAA,EACF,EAEsBX,IAAwB,MAC5CnhB,OAAC2X,GAAA,CAAM,QAAS,CAAE,KAAM,SAAU,GAAI,OAAS,GAAG,UAAU,aAAa,MAAM,EAAE,MAC/E,SAAA,CAAAzX,EAAAA,IAACK,EAAA,CAAK,SAAS,OAAO,SAAA,mBAAgB,EACtCL,EAAAA,IAACgJ,GAAA,CAAS,SAAU,CAAC,CAAC4Y,GAAc,CAAC,CAAClhB,GAA0B,CAAC,CAACof,GAAkB,CAAC,CAACD,EACpF,SAAA7f,EAAAA,IAACK,EAAA,CAAK,SAAS,OAAO,MAAM,UACzB,SAAA4gB,EAAuBA,IAAwB,KAAO,IAAIA,CAAmB,GAAKA,EAAuB,KAC5G,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,CAAA,EAEFjhB,EAAAA,IAACuY,GAAA,CACC,UAAWwH,EACX,WAAakC,GAAoB,CAAC,CAACL,GAAeA,IAAe,KACjE,QAAS,IAAMY,GAAA,EACf,EAAE,QACF,EAAE,OACF,aAAa,MACb,WAAW,MACX,SAAS,OACV,SAAA,OAAA,CAAA,CAED,EACF,EACA1iB,EAAAA,KAACuH,GAAA,CAAO,EAAG,CAAE,KAAM,aAAc,GAAI,eAAA,EAAmB,EAAE,OAAO,IAAI,OAClE,SAAA,CACCrH,EAAAA,IAACqH,GAAA,CAAO,MAAM,aAAa,EAAE,OAC3B,SAAArH,EAAAA,IAACiJ,GAAA,CACC,KAAK,aACL,QAAAiV,GACA,WAAY9a,GAAA,YAAAA,EAAY,MACxB,gBAAA+e,EACA,UAAW,CACT,EAAG,QACH,EAAG,OACH,EAAG,MACH,aAAc,KAAA,EAEhB,UAAW,CACT,KAAM,CACJ,GAAI,IACJ,KAAM,MAAA,EAER,SAAU,OACV,OAAQ,MACR,aAAc,KAAA,CAChB,CAAA,EAEJ,EAGD/e,EAAW,OAAS,mBAClBrD,GAAA,CAAO,QAAQ,gBAAgB,EAAE,OAAO,IAAI,MAAM,SAAS,OAAO,cAAe,CAAE,KAAM,SAAU,GAAI,OACtG,SAAA,CAAAC,EAAAA,IAAC2f,GAAA,CACC,MAAM,OACN,MAAOjf,GAAA,YAAAA,EAAwB,cAC/B,OAAQ6gB,GAAA,YAAAA,EAAuB,gBAC/B,YAAaS,GAAgBhX,EAAc,IAAM,GACjD,MAAO+M,EAAQ,WAAa,YAAA,CAAA,EAE9B/X,EAAAA,IAAC2f,GAAA,CACC,MAAO5H,EAAQ,GAAK,OACpB,MAAOrX,GAAA,YAAAA,EAAwB,cAC/B,OAAQ6gB,GAAA,YAAAA,EAAuB,gBAC/B,YAAaS,GAAgBhX,EAAc,IAAM,GACjD,MAAM,UAAA,CAAA,EAEPwW,GAAA,YAAAA,EAA0B,IAAI,CAAC9d,EAAWge,IAEvC1hB,EAAAA,IAAC+iB,GAAM,SAAN,CACC,SAAA/iB,EAAAA,IAAC2f,GAAA,CACC,MAAO5H,EAAS2J,GAAS,EAAI,iBAAmB,GAAM,iBACtD,MAAOhe,GAAA,YAAAA,EAAM,MACb,OAAQA,GAAA,YAAAA,EAAM,oBACd,YAAase,GAAgBhX,EAAc,IAAM,GACjD,MAAO+M,EAAQ,WAAa2J,EAAQ,IAAM,EAAI,aAAe,UAAA,CAAA,CAC/D,EAPmBhe,GAAA,YAAAA,EAAM,YAQ3B,EAEH,EACH,EAEA5D,EAAAA,KAACC,GAAA,CAAO,QAAQ,gBAAgB,EAAE,OAAO,IAAI,MAAM,SAAS,OAAO,cAAe,CAAE,KAAM,SAAU,GAAI,OACtG,SAAA,CAAAC,EAAAA,IAAC2f,GAAA,CACC,MAAM,OACN,MAAOjf,GAAA,YAAAA,EAAwB,cAC/B,QAAQ6B,EAAA8f,GAAA,YAAAA,EAA0B,OAA1B,YAAA9f,EAAgC,OACxC,MAAOwV,EAAQ,WAAa,aAC5B,YAAa,EAAA,CAAA,EAEf/X,EAAAA,IAAC2f,GAAA,CACC,MAAO5H,EAAQ,GAAK,OACpB,MAAOrX,GAAA,YAAAA,EAAwB,cAC/B,QAAQ+B,GAAA4f,GAAA,YAAAA,EAA0B,OAA1B,YAAA5f,GAAgC,OACxC,MAAM,WACN,YAAa,EAAA,CAAA,GAEd2Z,GAAA1G,GAAAhQ,EAAA2c,GAAA,YAAAA,EAA0B,SAA1B,YAAA3c,EAAkC,SAAlC,YAAAgQ,EAAA,KAAAhQ,EAA2ChC,GAAA,OAAQ,OAAAA,GAAA,YAAAA,EAAM,WAAUQ,EAAAA,EAAEI,GAAYZ,GAAA,YAAAA,EAAM,MAAM,CAAC,IAA3BQ,YAAAA,EAA8B,GAAG,QAApG,YAAAkY,EAAyG,IACxG,CAAC1Y,EAAWge,IAER1hB,EAAAA,IAAC+iB,GAAM,SAAN,CACC,SAAA/iB,EAAAA,IAAC2f,GAAA,CACC,MAAO5H,EAAS2J,GAAS,EAAI,iBAAmB,GAAM,iBACtD,SAAUhe,GAAA,YAAAA,EAAM,SAChB,OAAQA,GAAA,YAAAA,EAAM,OACd,MAAOqU,EAAQ,WAAa2J,EAAQ,IAAM,EAAI,aAAe,WAC7D,YAAa,EAAA,CAAA,CACf,EAPmBhe,GAAA,YAAAA,EAAM,QAQ3B,EAGN,CAAA,CACF,CAAA,CAAA,CAEJ,CAAA,EACF,CAEJ,CC9PA,SAAwBsf,IAAqB,iBAC3C,MAAMzJ,EAAWC,GAAA,EACX,CAAE,gBAAAyJ,CAAA,EAAoBC,GAAA,EACtB,CAAE,oBAAAlR,CAAA,EAAwBC,GAAA,EAC1B,CACJ,uBAAAvR,EACA,qBAAAE,EACA,wBAAA+G,EACA,mBAAAkY,EACA,0BAAAwB,EACA,uBAAA8B,EACA,0BAAAC,CAAA,EACEtiB,GAAA,EACE,CAAE,mBAAAuiB,CAAA,EAAuB5hB,GAAA,EACzB,CAAE,iBAAA6hB,EAAkB,oBAAA7V,CAAA,EAAwBpL,GAAA,EAC5C,CAAE,gBAAAyF,EAAiB,uBAAAyb,CAAA,EAA2Bxb,GAAA,EAC9C,CAAE,0BAAA4E,EAAA,EAA8BR,GAAA,EAChC,CAAE,sBAAAM,CAAA,EAA0BC,GAAA,EAE5B,CAAE,QAAAwF,CAAA,EAAYC,GAAA,EAEd6B,EAA0BrR,EAAAA,QAAQ,IAC/B/B,EAAqBF,GAAA,YAAAA,EAAwB,EAAE,EACrD,CAACA,GAAA,YAAAA,EAAwB,GAAIE,CAAoB,CAAC,EAKrD4iB,GAAY,CACV,SAAU,EAAI,IACd,SAAU,IAAM,CACV5V,GAAkBlN,GAEpB+L,EAAsB,CAAC/L,CAAsB,EAAG,EAAI,CAExD,CAAA,CACD,EAED,MAAM+iB,GAAalhB,EAAAoF,GAAA,YAAAA,EAA0BjH,GAAA,YAAAA,EAAwB,MAAlD,MAAA6B,EAAuD,WACtE,IAAGE,EAAAkF,GAAA,YAAAA,EAA0BjH,GAAA,YAAAA,EAAwB,MAAlD,YAAA+B,EAAuD,UAAU,IACpE,OACEqB,KAAU4B,GAAAiC,GAAA,YAAAA,EAA0BjH,GAAA,YAAAA,EAAwB,MAAlD,YAAAgF,GAAuD,UAAW,KAE5E,CAAE,eAAAkI,CAAA,EAAmBC,GAAA,EAE3BpI,EAAAA,UAAU,IAAM,CACVmI,GAAA,MAAAA,EAAgB,SAAWqV,GAC7BtW,GAA0BiB,GAAA,YAAAA,EAAgB,QAASqV,CAAe,CAEtE,EAAG,CAACrV,GAAA,YAAAA,EAAgB,QAASqV,CAAe,CAAC,EAE7C,MAAMlP,EAA6BpR,EAAAA,QAAQ,IAClCgF,EAAwBjH,GAAA,YAAAA,EAAwB,EAAE,EACxD,CAACiH,CAAuB,CAAC,EAEtB,CAAE,uBAAAuX,CAAA,EAA2Bzd,GAAA,EAE7B,CAAE,YAAAiiB,GAAa,UAAAC,EAAW,SAAAC,EAAU,OAAAC,CAAA,EAAWC,GAAA,EAErDre,EAAAA,UAAU,KACJ/E,GAAA,MAAAA,EAAwB,WAC1BwR,EAAQ,CAAE,OAAQxR,GAAA,YAAAA,EAAwB,QAAA,CAAU,EAEpD4iB,EAAiB,CAAC5iB,GAAA,YAAAA,EAAwB,UAAWA,GAAA,YAAAA,EAAwB,SAAS,CAAC,EACnFA,GAAA,MAAAA,EAAwB,gBAAiBA,GAAA,MAAAA,EAAwB,iBACnEgjB,GAAYhjB,GAAA,YAAAA,EAAwB,aAAa,EACjDijB,EAAUjjB,GAAA,YAAAA,EAAwB,aAAa,IAG5C,IAAM,CACXgjB,GAAYK,GAAW,UAAU,SAAS,EAC1CJ,EAAUI,GAAW,UAAU,OAAO,CACxC,GACC,CAACrjB,GAAA,YAAAA,EAAwB,QAAQ,CAAC,EAErC+E,EAAAA,UAAU,IAAM,CACd,GAAI/E,GAAA,MAAAA,EAAwB,UAAYmf,EAAoB,CAC1D3N,EAAQ,CAAE,OAAQxR,GAAA,YAAAA,EAAwB,QAAA,CAAU,EAEpD,MAAMwK,EAAYxK,GAAA,YAAAA,EAAwB,UACpCyK,GAAYzK,GAAA,YAAAA,EAAwB,UAEpCsjB,OAAoB,IAE1B,SAAW,CAAC5Y,GAAY6Y,EAAO,IAAK,OAAO,QAAQpE,CAAkB,EAC/DzU,MAAe1K,GAAA,YAAAA,EAAwB,KACzCujB,GAAQ,QAAQxD,IAAU,CACpBA,GAAO,eAAiBvV,GAAauV,GAAO,eAAiBtV,IAC/D6Y,GAAc,IAAIvD,GAAO,YAAY,CAEzC,CAAC,EAIL,MAAMyD,GAAiB,MAAM,KAAKF,EAAa,EAC3CE,GAAe,OAAS,GAC1BZ,EAAiBY,EAAc,CAEnC,CACF,EAAG,CAACrE,CAAkB,CAAC,EAEvBsE,GAAe,CACb,YAAa,IAAM,CACjBC,GAAA,EACIxW,GAAA,MAAAA,EAAgB,SAClBoE,EAAA,CAEJ,CAAA,CACD,EACD,KAAM,CAAE,eAAAqS,EAAA,EAAmBC,GAAA,EAC3B7e,EAAAA,UAAU,IACD,IAAM,CACX4d,EAAA,EACAF,EAAA,CACF,EACC,CAAA,CAAE,EAEL,MAAMoB,EAAa,IAAM,CACnB,OAAO,QAAQ,OAAS,EAC1BhL,EAAS,EAAE,EAEXA,EAAS,sBAAsB,CAEnC,EAEM,CAAE,WAAAiL,CAAA,EAAe5a,GAAA,EAEjB6a,GAAc9hB,EAAAA,QAAQ,IAAM,OAChC,KAAIJ,EAAAuF,GAAA,YAAAA,EAAiB,gBAAjB,YAAAvF,EAAgC,QAAS,EAC3C,MAAO,MAGX,EAAG,CAACuF,CAAe,CAAC,EAEd4c,GAAsB9jB,EAAqBF,GAAA,YAAAA,EAAwB,EAAY,EAC/EikB,EAAelX,GAAoBiI,GAAAhV,GAAA,YAAAA,EAAwB,gBAAxB,YAAAgV,GAAuC,UAAWgP,IAAA,YAAAA,GAAqB,kBAAkB,EAC5HE,GAAenX,GAAoB2O,EAAA1b,GAAA,YAAAA,EAAwB,gBAAxB,YAAA0b,EAAuC,UAAWsI,IAAA,YAAAA,GAAqB,kBAAkB,EAC5HG,EAAgBliB,EAAAA,QAAQ,IACrBuB,GAAEygB,CAAY,EAAE,KAAKC,EAAY,EAAE,SAAA,EACzC,CAACD,EAAcC,EAAY,CAAC,EAEzB,CAACnd,EAAaqd,CAAc,EAAI7jB,EAAAA,SAAc,IAAI,EAClD,CAACggB,EAAqB8D,CAAsB,EAAI9jB,EAAAA,SAAc,IAAI,EAClE,CAACigB,EAAc8D,EAAe,EAAI/jB,EAAAA,SAAc,IAAI,EACpD,CAAE,4BAAAgkB,CAAA,EAAgCC,GAAA,EAClC,CAACC,EAAiBC,CAAkB,EAAInkB,EAAAA,SAAS,EAAI,EACrDokB,EAAuB,SAAY,CACvCD,EAAmB,EAAI,EACvB,GAAI,CACF,MAAMzf,EAAM,MAAMsf,EAA4BvkB,GAAA,YAAAA,EAAwB,GAAImkB,CAAa,EACvF,GAAIlf,EAAK,CACP,KAAM,CAAE,WAAA2f,GAAY,oBAAArE,GAAqB,aAAAC,IAAiBvb,EAC1D,QAAQ,IAAI,4EAA6Eub,EAAY,EACrG4D,EAAeQ,EAAU,EACzBP,EAAuB9D,EAAmB,EAC1C+D,GAAgB9D,EAAY,CAC9B,CACAkE,EAAmB,EAAK,CAC1B,MAAgB,CACdA,EAAmB,EAAK,CAC1B,CACF,EAEA3f,EAAAA,UAAU,IAAM,CACV/E,GAAA,MAAAA,EAAwB,KACtBwD,GAAE2gB,CAAa,EAAE,GAAG,CAAC,EACvBQ,EAAA,EAEAD,EAAmB,EAAK,EAG9B,EAAG,CAAC1kB,GAAA,YAAAA,EAAwB,GAAImkB,CAAa,CAAC,EAE9CrB,GAAY,CACV,SAAU,GAAK,IACf,SAAU,IAAM,CACd6B,EAAA,CACF,CAAA,CACD,EACD,MAAMzP,EAAWjT,EAAAA,QAAQ,KAAMoR,GAAA,YAAAA,EAA4B,iBAAkB,SAAU,CAACA,GAAA,YAAAA,EAA4B,aAAa,CAAC,EAC5HwR,EAAa5iB,EAAAA,QAAQ,KAAMoR,GAAA,YAAAA,EAA4B,iBAAkB,WAAY,CAACA,GAAA,YAAAA,EAA4B,aAAa,CAAC,EAChIyR,GAAY7iB,EAAAA,QAAQ,KACjBoR,GAAA,YAAAA,EAA4B,iBAAkB,OACpD,CAACA,GAAA,YAAAA,EAA4B,aAAa,CAAC,EACxC,CAAE,MAAAgE,EAAA,EAAU5Q,GAAA,EAEZid,GAAgB1P,EAAAA,YACpB,MAAO+Q,GAAuB,CAC5BrC,EAAA,EACI1iB,GAAA,MAAAA,EAAwB,UAC1B,MAAMwR,EAAQ,CAAE,OAAQxR,GAAA,YAAAA,EAAwB,SAAU,EAExD+kB,GACF9Y,GAA0BiB,GAAA,YAAAA,EAAgB,QAASqV,EAAiB,EAAI,EAE1EjR,EAAA,EACAqT,EAAA,CACF,EACA,CAAC3kB,EAAwBA,GAAA,YAAAA,EAAwB,GAAImkB,CAAa,CAAA,EAMpE,OAAArB,GAAY,CACV,SAAU,EAAI,IACd,SAAU,IAAM,CACV5V,GAAkBlN,GACpB+L,EAAsB,CAAC/L,CAAsB,EAAG,EAAK,CAEzD,CAAA,CACD,EAGCZ,OAACuH,IAAO,IAAI,OAAO,EAAE,OAAO,GAAG,OAAO,MAAM,aAC1C,SAAA,CAAAvH,EAAAA,KAACC,GAAA,CAAO,EAAE,OAAO,eAAe,gBAAgB,cAAe,CAAE,KAAM,iBAAkB,GAAI,KAAA,EAC3F,SAAA,CAAAC,EAAAA,IAACD,GAAA,CAAO,EAAG,CAAE,KAAM,OAAQ,GAAI,OAAA,EAAW,eAAe,gBACvD,SAAAC,EAAAA,IAAC0lB,GAAA,CACC,KAAK,OACL,QAAS,IAAM,CACbnB,EAAA,CACF,CAAA,CAAA,EAEJ,EACAzkB,OAACC,IAAO,EAAG,CAAE,KAAM,OAAQ,GAAI,SAC7B,SAAA,CAAAC,EAAAA,IAACuY,GAAA,CACC,EAAG,CAAE,KAAM,OAAQ,GAAI,OAAA,EACvB,GAAG,eACH,SAAS,OACT,EAAE,SACF,EAAE,OACF,aAAa,MACb,WAAW,MACX,QAAQ,UACR,QAASoN,GAAK,CACZnB,EAAW,yBAAyB9jB,GAAA,YAAAA,EAAwB,EAAE,EAAE,EAChE6Y,EAAS,gBAAgB7Y,GAAA,YAAAA,EAAwB,QAAQ,EAAE,CAC7D,EACD,SAAA,uBAAA,CAAA,EAGDV,EAAAA,IAAC4lB,GAAA,CAAc,cAAAxB,GAA8B,cAAa,GAAC,gBAAiB,EAAG,EAAE,OAAO,EAAE,OAAO,WAAY,CAAE,GAAI,OAAO,CAAG,CAAA,CAAA,CAC/H,CAAA,EACF,EACAtkB,EAAAA,KAACC,GAAA,CAAO,EAAE,OAAO,eAAe,gBAAgB,cAAe,CAAE,KAAM,SAAU,GAAI,KAAA,EACnF,SAAA,CAAAD,EAAAA,KAACkJ,GAAA,CAAS,EAAG,CAAE,KAAM,OAAQ,GAAI,OAAA,EAAW,SAAU,CAAC,EAACtI,GAAA,MAAAA,EAAwB,UAC9E,SAAA,CAAAV,EAAAA,IAAC6lB,GAAA,CACC,KAAK,SACL,SAAS,OACT,iBAAiB,MACjB,eAAe,OACf,uBAAwB,GACxB,qBAAsB,GACtB,SAAU,CAAE,WAAApC,EAAY,QAAA3f,GAAS,GAAGpD,EAAwB,YAAaA,GAAA,YAAAA,EAAwB,QAAA,EACjG,YAAasT,GAAA,YAAAA,EAAyB,YACtC,gBAAe,GACf,qBAAqB,QACrB,QAAQ,QACR,YAAW,EAAA,CAAA,SAEZjU,GAAA,CACC,SAAA,CAAAD,OAACC,IAAO,EAAE,UAAU,aAAa,MAAM,GAAG,eACxC,SAAA,CAAAD,EAAAA,KAACO,EAAA,CAAK,SAAS,OAAO,MAAM,eAAe,SAAA,CAAA,MACrCK,GAAA,YAAAA,EAAwB,SAAA,EAC9B,EACAV,EAAAA,IAACK,GAAK,SAAA,GAAA,CAAC,GACNK,GAAA,YAAAA,EAAwB,KACvBV,EAAAA,IAAC8lB,GAAA,CACC,WAAW,MACX,SAAU,GACV,MAAM,eACN,QAASplB,GAAA,YAAAA,EAAwB,GACjC,SAAU,GACV,YAAa,IAAM,CACjB,OAAO,KAAK2jB,GAAe3jB,GAAA,YAAAA,EAAwB,GAAI,YAAY,EAAG,QAAQ,CAChF,CAAA,CAAA,CACF,EAEJ,EACC8kB,IACCxlB,EAAAA,IAAC+lB,GAAA,CAAe,SAAAnQ,EAAoB,UAAW,CAAC7B,GAA8B,CAACpL,GAAkBoL,CAA0B,CAAA,CAAG,CAAA,CAAA,CAElI,CAAA,EACF,EACAjU,OAACC,IAAO,EAAG,CAAE,KAAM,OAAQ,GAAI,SAAW,IAAK,CAAE,KAAM,OAAQ,GAAI,QAAU,cAAe,CAAE,KAAM,SAAU,GAAI,KAAA,EAChH,SAAA,CAAAC,EAAAA,IAACgmB,GAAA,CACC,MAAM,WACN,YACGC,GAAA,CAAW,SAAUne,EAAiB,UAAWiQ,GAAQ,aAAe,SACvE,SAAAjY,EAAAA,KAACC,IAAO,QAAQ,WAAW,MAAM,WAAW,IAAI,MAAM,WAAW,OAAO,EAAE,OACxE,SAAA,CAAAC,EAAAA,IAACK,EAAA,CACC,GAAG,OACH,SAAS,OACT,MAAOokB,GAAc,UAAY,eACjC,WAAW,MACX,OAAQA,GAAc,OAAS,OAC/B,oBAAoB,MACpB,eAAgBA,GAAc,mBAAqB,OAElD,UAAA3c,GAAA,YAAAA,EAAiB,0BAA2B,GAAKA,GAAA,YAAAA,EAAiB,uBAAyB,IAAA,CAAA,GAE7FA,GAAA,YAAAA,EAAiB,cAChBhI,EAAAA,KAACO,EAAA,CAAK,SAAS,OAAO,WAAW,OAAO,EAAE,OAAO,MAAM,UAAU,WAAW,MAAM,SAAA,CAAA,IAC9EyH,GAAA,YAAAA,EAAiB,iBAAA,CAAA,CACrB,CAAA,CAAA,CAEJ,CAAA,CACF,EAEF,QAAS,EAACA,GAAA,MAAAA,EAAiB,YAAA,CAAA,EAE7B9H,EAAAA,IAACgmB,GAAA,CAAU,MAAM,MAAM,OAAQle,GAAA,YAAAA,EAAiB,aAAyB,GAAI,QAAS,EAACA,GAAA,MAAAA,EAAiB,YAAA,CAAa,EACrH9H,EAAAA,IAACgmB,GAAA,CAAU,MAAM,eAAe,OAAQle,GAAA,YAAAA,EAAiB,kBAA8B,GAAI,QAAS,EAACA,GAAA,MAAAA,EAAiB,gBAAA,CAAiB,EACvI9H,EAAAA,IAACgmB,GAAA,CAAU,MAAM,aAAa,OAAQle,GAAA,YAAAA,EAAiB,gBAA4B,GAAI,QAAS,EAACA,GAAA,MAAAA,EAAiB,YAAA,CAAa,CAAA,CAAA,CACjI,CAAA,EACF,SACC/H,GAAA,CAAO,cAAe,CAAE,KAAM,iBAAkB,GAAI,KAAA,EAAS,MAAM,OAAO,eAAe,gBAAgB,MAAM,aAAa,GAAG,MAC9H,SAAA,CAAAD,EAAAA,KAACuH,GAAA,CAAO,MAAO,CAAE,KAAM,OAAQ,GAAI,OAAA,EAAW,SAAS,WAAW,IAAI,OACpE,SAAA,CAAArH,EAAAA,IAACwH,GAAA,CAA0B,YAAa+d,EAAa,KAAOC,GAAY/d,EAAc,KAAM,aAAc0d,CAAA,CAAiB,QAC1H/F,GAAA,EAAsB,EACvBpf,MAACghB,IAAyB,oBAAqBuE,EAAa,KAAOC,GAAYvE,EAAsB,KAAM,aAAAC,CAAA,CAA4B,CAAA,EACzI,EACAlhB,EAAAA,IAACqH,GAAA,CAAO,MAAO,CAAE,KAAM,OAAQ,GAAI,OAAA,EACjC,SAAArH,EAAAA,IAACif,GAAA,CAAA,CAAmB,CAAA,CACtB,CAAA,CAAA,CACF,CAAA,EACF,CAEJ"}