{"version":3,"file":"useLiquidityInteraction-BRuGSXCL.js","sources":["../../src/hooks/position/usePositionApr.ts","../../src/components/liquidity/clmm/recentTransactions/type.ts","../../src/hooks/common/usePoolInfo.ts","../../src/components/liquidity/common/InfoItem.tsx","../../src/components/liquidity/common/TokenCard.tsx","../../src/hooks/dlmm/useFetchBinsTradeData.ts","../../src/hooks/dlmm/useDlmmApr.ts","../../src/store/dlmm/dlmmDeposit.ts","../../src/components/liquidity/dlmm/EstimatedApr.tsx","../../src/components/liquidity/dlmm/PriceRangeForDate.tsx","../../src/components/position/clmm/list/PositionAprBlock.tsx","../../src/components/common/EstimatedApr.tsx","../../src/components/liquidity/common/DivisionBlock.tsx","../../src/hooks/clmm/useLiquidityInteraction.ts"],"sourcesContent":["import { PoolApiInfo, PosPoolsRelated } from '@/types'\nimport { aprProcessing } from '@/utils/api-data-utils'\nimport { formatNumberWithDown, formatPercentage, isAvailableObject, symbolDataDisplayProcessing } from '@cetus/utils'\nimport { d, TickMath } from '@cetusprotocol/common-sdk'\n\nexport default function usePositionApr() {\n  const estPositionAPRWithMultiMethod = (lowerUserPrice: number, upperUserPrice: number, lowerHistPrice: number, upperHistPrice: number) => {\n    // 交集部分最小价格\n    const retroLower = Math.max(lowerUserPrice, lowerHistPrice) // 0.00499241\n    // 交集部分最大价格\n    const retroUpper = Math.min(upperUserPrice, upperHistPrice) // 0.00630856\n    // 交集\n    const retroRange = retroUpper - retroLower\n    // 用户交集\n    const userRange = upperUserPrice - lowerUserPrice\n    // 历史交集\n    const histRange = upperHistPrice - lowerHistPrice\n\n    const retroRangeD = d(retroRange.toString())\n    console.log('🚀🚀🚀 ~ usePositionApr.ts:27 ~ estPositionAPRWithMultiMethod ~ retroRange.toString():', retroRange.toString())\n    const userRangeD = d(userRange.toString())\n    const histRangeD = d(histRange.toString())\n    console.log('🚀🚀🚀 ~ usePositionApr.ts:30 ~ estPositionAPRWithMultiMethod ~ histRange.toString():', histRange.toString())\n    console.log('🚀🚀🚀 ~ usePositionApr.ts:8 ~ estPositionAPRWithMultiMethod ~ lowerUserPrice:', {\n      lowerUserPrice,\n      upperUserPrice,\n      lowerHistPrice,\n      upperHistPrice,\n      retroRange,\n      userRange,\n      histRange\n    })\n    if (retroRange <= 0) return d(0)\n    // 若用户区间在交集区间内或者等于交集区间 , 则m=历史交易区间/交集区间\n    if (userRange <= retroRange) return histRangeD.div(retroRangeD)\n    // 若有效区间=交集区间, 则m=交集部分/用户选择部分\n    if (retroRange === histRange) return retroRangeD.div(userRangeD)\n    //若用户选择区间一部分存在交集，另一部分在历史交易区间外，则 m=（交集部分/历史交易区间）*（交集部分/用户选择部分）\n    return retroRangeD.div(histRangeD).mul(retroRangeD.div(userRangeD))\n  }\n\n  const getPositionApr = (\n    posPoolInfo: PoolApiInfo,\n    posRangeInfo: PosPoolsRelated,\n    dateType: 'day' | 'week' | 'month',\n    range: any,\n    isFarmsPos?: boolean,\n    positionTvl?: string\n  ) => {\n    console.log('🚀 ~ usePositionApr ~ posRangeInfo?.currentStatus:', posRangeInfo?.currentStatus)\n    if (!isAvailableObject(posPoolInfo) || !isAvailableObject(posRangeInfo) || !isAvailableObject(range)) return\n    console.log('🚀🚀🚀 ~ usePositionApr.ts:52 ~ usePositionApr ~ posRangeInfo:', posRangeInfo)\n    if (posRangeInfo?.currentStatus == 'Closed' || posRangeInfo?.currentStatus == 'Inactive') {\n      return {\n        aprPercentageTotal: 0,\n        displayAprPercentageTotal: '0%',\n        aprByFee: 0,\n        aprByFeeDisplay: '0%',\n        farmingAprDisplay: '0%',\n        posMiningReward: []\n      }\n    }\n    console.log('🚀🚀🚀 ~ usePositionApr.ts:42 ~ getPositionApr ~ posPoolInfo:', posPoolInfo)\n    console.log('🚀🚀🚀 ~ usePositionApr.ts:91 ~ usePositionApr ~ posRangeInfo:', posRangeInfo)\n    const { minPriceRaw, maxPriceRaw } = posRangeInfo\n    console.log('🚀 ~ usePositionApr ~  minPriceRaw, maxPriceRaw:', minPriceRaw, maxPriceRaw)\n    const {\n      tokenA,\n      tokenB,\n      miningAprList,\n      feeApr,\n      feeApr7d,\n      feeApr30d,\n      isReverse,\n      farmsEffectiveTickLower,\n      farmsEffectiveTickUpper,\n      farmsStatedTvl,\n      farmsApr\n    } = posPoolInfo\n    const decimalA = tokenA?.decimals\n    const decimalB = tokenB?.decimals\n    const isFullRange = minPriceRaw == '0' && maxPriceRaw == '∞'\n    const lowerUserPrice = minPriceRaw\n    const upperUserPrice = isFullRange ? 2 ** 50 : maxPriceRaw\n\n    const { lower, upper } = range\n    const beforeContractPriceLowest = TickMath.tickIndexToPrice(lower, decimalA, decimalB).toNumber()\n    const beforeContractPriceHighest = TickMath.tickIndexToPrice(upper, decimalA, decimalB).toNumber()\n\n    const hisLowerPrice = isReverse\n      ? formatNumberWithDown(d(1).div(beforeContractPriceHighest).toString(), undefined, true)\n      : formatNumberWithDown(beforeContractPriceLowest, undefined, true)\n    const hisUpperPrice = isReverse\n      ? formatNumberWithDown(d(1).div(beforeContractPriceLowest).toString(), undefined, true)\n      : formatNumberWithDown(beforeContractPriceHighest, undefined, true)\n\n    const positionMulti = estPositionAPRWithMultiMethod(lowerUserPrice, upperUserPrice, hisLowerPrice, hisUpperPrice)\n    console.log('🚀🚀🚀 ~ usePositionApr.ts:71 ~ getPositionApr ~ ', {\n      positionMulti系数: positionMulti.toString(),\n      feeApr,\n      feeApr7d,\n      feeApr30d,\n      dateType\n    })\n\n    const aprByFee = d(dateType === 'day' ? (feeApr ?? '0') : dateType === 'month' ? (feeApr30d ?? '0') : (feeApr7d ?? '0'))\n      .mul(positionMulti)\n      .toString()\n\n    const posMiningReward: any = []\n    let aprPercentageTotal = d(aprByFee)\n    miningAprList?.forEach(reward => {\n      const posMiningRewardApr = d(positionMulti).mul(reward.apr).toString()\n      const posMiningRewardAprDisplay = aprProcessing(posMiningRewardApr, true)\n      posMiningReward.push({ ...reward, posMiningRewardApr, posMiningRewardAprDisplay })\n      aprPercentageTotal = aprPercentageTotal.add(posMiningRewardApr)\n    })\n\n    let farmingApr = '0'\n    if (isFarmsPos) {\n      const farmsLower = TickMath.tickIndexToPrice(farmsEffectiveTickLower, decimalA, decimalB).toNumber()\n      const farmsUpper = TickMath.tickIndexToPrice(farmsEffectiveTickUpper, decimalA, decimalB).toNumber()\n      const farmsPositionMulti = estPositionAPRWithMultiMethod(lowerUserPrice, upperUserPrice, farmsLower, farmsUpper)\n      // farmingApr = farmsPositionMulti.gt(0) ? d(positionTvl).div(farmsStatedTvl).mul(farmsApr).mul(100).toString() : '0'\n      console.log('🚀🚀🚀 ~ usePositionApr.ts:123 ~ usePositionApr ~ farmsApr:', farmsApr)\n      farmingApr = farmsPositionMulti.gt(0) ? d(farmsApr).toString() : '0'\n      // aprPercentageTotal = aprPercentageTotal.add(farmingApr)\n    }\n\n    return {\n      aprPercentageTotal: aprPercentageTotal.toString(),\n      displayAprPercentageTotal: formatPercentage(aprPercentageTotal.mul(100).toNumber()),\n      aprByFee,\n      aprByFeeDisplay: aprProcessing(aprByFee, true),\n      posMiningReward,\n      farmingAprDisplay: symbolDataDisplayProcessing(d(farmingApr).mul(100).toString(), '%', 2, true)\n    }\n  }\n\n  const getPositionAprV2 = (posPoolInfo: PoolApiInfo, posRangeInfo: PosPoolsRelated, dateType: 'day' | 'week' | 'month', range: any) => {\n    console.log('🚀🚀🚀 ~ usePositionApr.ts:136 ~ getPositionAprV2 ~ posPoolInfo:', posPoolInfo)\n    // 用户选择价格区间\n    const { minPriceRaw, maxPriceRaw } = posRangeInfo\n    console.log('🚀 ~ usePositionApr ~  minPriceRaw, maxPriceRaw:', minPriceRaw, maxPriceRaw)\n    const {\n      tokenA,\n      tokenB,\n      miningAprList,\n      feeApr,\n      feeApr7d,\n      feeApr30d,\n      isReverse,\n      farmsEffectiveTickLower,\n      farmsEffectiveTickUpper,\n      farmsStatedTvl,\n      farmsApr\n    } = posPoolInfo\n    const decimalA = tokenA?.decimals\n    const decimalB = tokenB?.decimals\n    const isFullRange = minPriceRaw == '0' && maxPriceRaw == '∞'\n    const lowerUserPrice = minPriceRaw\n    const upperUserPrice = isFullRange ? 2 ** 50 : maxPriceRaw\n    // 历史价格区间\n    const { lower, upper } = range\n    const beforeContractPriceLowest = TickMath.tickIndexToPrice(lower, decimalA, decimalB).toNumber()\n    const beforeContractPriceHighest = TickMath.tickIndexToPrice(upper, decimalA, decimalB).toNumber()\n\n    const hisLowerPrice = isReverse\n      ? formatNumberWithDown(d(1).div(beforeContractPriceHighest).toString(), undefined, true)\n      : formatNumberWithDown(beforeContractPriceLowest, undefined, true)\n    const hisUpperPrice = isReverse\n      ? formatNumberWithDown(d(1).div(beforeContractPriceLowest).toString(), undefined, true)\n      : formatNumberWithDown(beforeContractPriceHighest, undefined, true)\n    // 计算系数\n    const positionMulti = estPositionAPRWithMultiMethod(lowerUserPrice, upperUserPrice, hisLowerPrice, hisUpperPrice)\n  }\n\n  return { getPositionApr }\n}\n","export enum EventEnums {\n  add = 'add_liquidity_event',\n  remove = 'remove_liquidity_event',\n  swap = 'swap_event'\n}\nexport type IconProps = {\n  icon: string\n  color: string\n  title: string\n}\n\nexport type Item = {\n  address: string\n  amount: string\n  symbol: string\n  url: string\n}\n\nexport type DataItem = {\n  block_time: string\n  pool: string\n  sender: string\n  tx: string\n  type: EventEnums\n  items: Item[]\n}\n","import { d, fixRounding } from '@cetus/utils'\nimport { useMemo } from 'react'\n\nfunction usePoolInfo(tokenAAmountUSD: string, totalAmountUSD: string) {\n  /**\n   * tokenA amount 占比\n   * tokenA amount ratio\n   */\n  const tokenARatio = useMemo(() => {\n    if (tokenAAmountUSD && totalAmountUSD && tokenAAmountUSD !== '--' && totalAmountUSD !== '--') {\n      const ratio = fixRounding(d(tokenAAmountUSD).div(totalAmountUSD).mul(100).toString(), 2)\n      return ratio === 'NaN' ? '--' : ratio\n    }\n    return '--'\n  }, [tokenAAmountUSD, totalAmountUSD])\n  /**\n   * tokenB amount 占比\n   * tokenB amount ratio\n   */\n  const tokenBRatio = useMemo(() => {\n    if (tokenARatio && tokenARatio !== '--') {\n      return d(100).minus(tokenARatio).toString()\n    }\n    return '--'\n  }, [tokenARatio])\n  return {\n    tokenARatio,\n    tokenBRatio\n  }\n}\n\nexport default usePoolInfo\n","import { HTextLabelBox } from '@cetus/ui-kit';\nimport { StackProps } from '@chakra-ui/react';\n\nconst InfoItem = ({ label, value, wrapStyle = {} }: { label: string | JSX.Element; value: string | JSX.Element; wrapStyle?: StackProps }) => {\n  return (\n    <HTextLabelBox\n      wrapStyle={{\n        p: '10px',\n        bg: 'background',\n        borderRadius: '8px',\n        ...wrapStyle\n      }}\n      label={label}\n      labelStyle={{\n        fontSize: '14px',\n        whiteSpace: 'nowrap'\n      }}\n      value={value}\n      valueStyle={{\n        fontSize: '14px'\n      }}\n    />\n  )\n}\n\nexport default InfoItem\n","import { AddressCopyLink } from '@cetus/design'\nimport useExplorer from '@cetus/hooks/src/useExplorer'\nimport { Token } from '@cetus/types'\nimport { HTextLabelBox, SingleCoinImage } from '@cetus/ui-kit'\nimport { addComma, formatPrice, fromDecimalsAmountFix, textEllipses } from '@cetus/utils'\nimport { HStack, Text, VStack } from '@chakra-ui/react'\n\ninterface TokenCardProps {\n  token?: Token\n  amount?: string\n  amountUSD: string\n  loading: boolean\n}\n\nconst TokenCard = ({ token, amount, amountUSD, loading }: TokenCardProps) => {\n  const { getExplorerUrl } = useExplorer()\n  return token ? (\n    <VStack w=\"100%\" p={{ base: '16px 8px', lg: '12px' }} borderRadius=\"8px\" bg=\"background\" gap=\"16px\">\n      <HStack w=\"100%\" justify=\"space-between\">\n        <HStack gap=\"12px\">\n          <SingleCoinImage imageUrl={token?.logo_url} w=\"28px\" h=\"28px\" coinType={token ? token?.coin_type : ''} />\n          <VStack align=\"flex-start\" gap=\"4px\">\n            <Text color=\"text_caption\" fontSize=\"16px\">\n              {textEllipses(token?.symbol, 10)}\n            </Text>\n            <Text fontSize=\"12px\">{token?.name}</Text>\n          </VStack>\n        </HStack>\n        <AddressCopyLink\n          address={token?.coin_type || ''}\n          fontSize=\"14px\"\n          color=\"text_caption\"\n          onClickLink={() => window.open(getExplorerUrl(token?.coin_type, 'coin'))}\n          wrapStyle={{ gap: '6px' }}\n          iconGap=\"6px\"\n        />\n      </HStack>\n      <HTextLabelBox\n        label=\"Amount\"\n        labelStyle={{\n          fontSize: '14px'\n        }}\n        value={addComma(fromDecimalsAmountFix(amount || '0', token.decimals)) as string}\n        valueStyle={{\n          fontSize: '14px'\n        }}\n        isLoading={loading}\n        wrapStyle={{ h: '14px' }}\n        skeletonStyle={{ valueW: '120px' }}\n      />\n      <HTextLabelBox\n        label=\"Amount (USD)\"\n        labelStyle={{\n          fontSize: '14px'\n        }}\n        value={amountUSD && amountUSD !== '--' ? `$${formatPrice(amountUSD)}` : '--'}\n        valueStyle={{\n          fontSize: '14px'\n        }}\n        isLoading={loading}\n        wrapStyle={{ h: '14px' }}\n        skeletonStyle={{ valueW: '120px' }}\n      />\n    </VStack>\n  ) : null\n}\n\nexport default TokenCard\n","import { DLMMBinsTradedPath } from '@/apis/path'\nimport { useFetch } from '@cetus/hooks'\nimport { asIntN } from '@cetusprotocol/common-sdk'\n\nfunction useFetchBinsTradeData() {\n  const { fetchByApi } = useFetch()\n\n  const fetchBinsTradeData = async ({ poolId, dataType, period }: { poolId: string; dataType: 'vol' | 'fee'; period: '24H' | '7D' | '30D' }) => {\n    if (!poolId) return []\n    try {\n      const result = await fetchByApi(DLMMBinsTradedPath, 'GET', {\n        dataType,\n        period,\n        pool: poolId\n      })\n\n      console.log(result, asIntN(BigInt(4294965899)), 'res-fetchBinsTradeData')\n      if (result && result.bins && result.bins.length) {\n        return result.bins as any[]\n      } else {\n        return []\n      }\n    } catch (error) {\n      console.error(error, 'res-fetchAnalyticsData')\n      return []\n    }\n  }\n  return {\n    fetchBinsTradeData\n  }\n}\n\nexport default useFetchBinsTradeData\n","import { PoolApiInfo } from '@/types/pool'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport { d, fromDecimalsAmount } from '@cetusprotocol/common-sdk'\nimport { BinAmount } from '@cetusprotocol/dlmm-sdk'\nimport { useCallback, useEffect, useMemo, useState } from 'react'\nimport useFetchBinsTradeData from './useFetchBinsTradeData'\n\ntype WarpBinItem = {\n  bin_id: number\n  user_amount_a: string\n  user_amount_b: string\n  total_amount_a: string\n  total_amount_b: string\n  total_fee_value: string\n}\n\n/**\n * 计算用户在指定周期内的apr\n * https://m8bj5905cd.sg.larksuite.com/docx/NQOkdPWIBoi86vx0Cdru6yT0sCe\n * @param allBinList 所有仓位\n * @param user_bins 用户仓位\n * @param period 周期\n * @param dlmmApiPoolInfo 池子信息\n * @returns 用户在指定周期内的apr\n */\nexport function useDlmmApr(\n  allBinList: BinAmount[],\n  user_bins: BinAmount[],\n  period: '24H' | '7D' | '30D',\n  active_id?: number,\n  dlmmApiPoolInfo?: PoolApiInfo\n) {\n  const [loading, setIsLoading] = useState<boolean>(false)\n  const [feeDataObj, setFeeDataObj] = useState<Record<string, string>>({})\n  const { fetchBinsTradeData } = useFetchBinsTradeData()\n\n  const { getTokenAmountValue } = useTokenPrice()\n\n  const getPeriodDays = useCallback((period: '24H' | '7D' | '30D') => {\n    if (period === '24H') return 1\n    if (period === '7D') return 7\n    if (period === '30D') return 30\n    return 1\n  }, [])\n\n  /**\n   * 获取指定周期的费用数据\n   */\n  useEffect(() => {\n    if (dlmmApiPoolInfo?.poolAddress) {\n      setIsLoading(true)\n      fetchBinsTradeData({\n        dataType: 'fee',\n        period,\n        poolId: dlmmApiPoolInfo.poolAddress\n      })\n        .then(res => {\n          const _feeDataObj: Record<string, string> = {}\n          res.forEach(item => {\n            _feeDataObj[`${item.binId}-${period}`] = item.value\n          })\n          setFeeDataObj({ ...feeDataObj, ..._feeDataObj })\n        })\n        .finally(() => {\n          setIsLoading(false)\n        })\n    }\n  }, [dlmmApiPoolInfo?.poolAddress, period])\n\n  /**\n   * 将用户仓位转换为warpBinList\n   */\n  const parseWarpUserBinList = useCallback(\n    (user_bins: BinAmount[]) => {\n      const warpBinList: WarpBinItem[] = []\n      let total_user_amount_a = d(0)\n      let total_user_amount_b = d(0)\n      if (!dlmmApiPoolInfo)\n        return {\n          validBinList: warpBinList,\n          total_user_amount_a: total_user_amount_a.toString(),\n          total_user_amount_b: total_user_amount_b.toString()\n        }\n\n      for (const bin of user_bins) {\n        const binId = bin.bin_id\n        const binInfo = allBinList.find(item => item.bin_id === binId)\n        const total_fee_value = feeDataObj[`${bin.bin_id}-${period}`]\n        const user_amount_a = fromDecimalsAmount(bin.amount_a, dlmmApiPoolInfo.tokenA.decimals)\n        const user_amount_b = fromDecimalsAmount(bin.amount_b, dlmmApiPoolInfo.tokenB.decimals)\n        total_user_amount_a = total_user_amount_a.add(user_amount_a)\n        total_user_amount_b = total_user_amount_b.add(user_amount_b)\n        if (binInfo && total_fee_value) {\n          warpBinList.push({\n            bin_id: binId,\n            user_amount_a: fromDecimalsAmount(bin.amount_a, dlmmApiPoolInfo.tokenA.decimals),\n            user_amount_b: fromDecimalsAmount(bin.amount_b, dlmmApiPoolInfo.tokenB.decimals),\n            total_amount_a: fromDecimalsAmount(binInfo.amount_a, dlmmApiPoolInfo.tokenA.decimals),\n            total_amount_b: fromDecimalsAmount(binInfo.amount_b, dlmmApiPoolInfo.tokenB.decimals),\n            total_fee_value: total_fee_value || '0'\n          })\n        }\n      }\n      return {\n        validBinList: warpBinList,\n        total_user_amount_a: total_user_amount_a.toString(),\n        total_user_amount_b: total_user_amount_b.toString()\n      }\n    },\n    [allBinList, period, feeDataObj]\n  )\n\n  /**\n   * 计算用户在指定周期内的费用\n   * @param periodFee 费用\n   * @param user_bins 用户仓位\n   * @returns 用户在指定周期内的费用\n   */\n  const estimatedFee = useCallback(\n    (user_bins: BinAmount[]) => {\n      const { validBinList, total_user_amount_a, total_user_amount_b } = parseWarpUserBinList(user_bins)\n      const total_user_amount_a_value = getTokenAmountValue(dlmmApiPoolInfo?.tokenA?.coin_type, total_user_amount_a)\n      const total_user_amount_b_value = getTokenAmountValue(dlmmApiPoolInfo?.tokenB?.coin_type, total_user_amount_b)\n      const total_user_value = d(total_user_amount_a_value).add(d(total_user_amount_b_value))\n      let total_fee = d(0)\n\n      for (const bin of validBinList) {\n        const amount_value_a = getTokenAmountValue(dlmmApiPoolInfo?.tokenA?.coin_type, bin.total_amount_a)\n        const amount_value_b = getTokenAmountValue(dlmmApiPoolInfo?.tokenB?.coin_type, bin.total_amount_b)\n        const total_amount_value = d(amount_value_a).add(d(amount_value_b))\n\n        const user_amount_value_a = getTokenAmountValue(dlmmApiPoolInfo?.tokenA?.coin_type, bin.user_amount_a)\n        const user_amount_value_b = getTokenAmountValue(dlmmApiPoolInfo?.tokenB?.coin_type, bin.user_amount_b)\n        const user_amount_value = d(user_amount_value_a).add(d(user_amount_value_b))\n\n        const fee_rate = user_amount_value.gt(0) ? d(user_amount_value).div(total_amount_value.add(user_amount_value)) : d(0)\n        const fee = fee_rate.mul(bin.total_fee_value)\n        total_fee = d(total_fee).add(fee)\n\n        console.log('🚀 ~ file: useDlmmApr.ts:123 ~ estimatedFee ~ info1:', {\n          bin_id: bin.bin_id,\n          total_amount_value: total_amount_value.toString(),\n          user_amount_value: user_amount_value.toString(),\n          total_fee_value: bin.total_fee_value,\n          fee: fee.toString(),\n          fee_rate: fee_rate.toString()\n        })\n      }\n\n      const info = {\n        total_fee: total_fee.toString(),\n        total_user_value: total_user_value.toString(),\n        show_fee_apr: validBinList.length > 0\n      }\n\n      return info\n    },\n    [allBinList, feeDataObj, period]\n  )\n\n  /**\n   * 计算用户在指定周期内的apr\n   */\n  const estimateApr = useMemo(() => {\n    const active_bin = user_bins.find(item => item.liquidity && item.bin_id === active_id)\n\n    if (!dlmmApiPoolInfo?.tokenA) {\n      return {\n        fee_apr: undefined,\n        miningAprList: []\n      }\n    }\n    // 如果是单边仓位，则不显示\n    if (!active_bin) {\n      return {\n        fee_apr: 0,\n        miningAprList: []\n      }\n    }\n\n    const { total_fee, total_user_value, show_fee_apr } = estimatedFee(user_bins)\n    let preTotalFee = total_fee\n\n    console.log('🚀 ~ file: useDlmmApr.ts:123 ~ estimatedFee ~ info2:', {\n      total_fee,\n      total_user_value,\n      show_fee_apr,\n      user_bins,\n      active_bin,\n      allBinList\n    })\n\n    let effectivePeriodDays = getPeriodDays(period)\n\n    if (dlmmApiPoolInfo?.createTimestamp) {\n      const now = Date.now() / 1000\n      const poolAgeMs = now - Number(dlmmApiPoolInfo.createTimestamp)\n      const poolAgeDays = poolAgeMs / (60 * 60 * 24) // 转换为天数\n      console.log('🚀 ~ file: useDlmmApr.ts:198 ~ poolAgeDays:', poolAgeDays)\n      if (poolAgeDays < 1) {\n        preTotalFee = d(preTotalFee).div(poolAgeDays).mul(effectivePeriodDays).toString()\n        // 不足24H: 7d/30d值计算一致，都使用24H数据\n        if (period === '7D' || period === '30D') {\n          effectivePeriodDays = 1\n        }\n      } else if (poolAgeDays < 7) {\n        preTotalFee = d(preTotalFee).div(poolAgeDays).mul(effectivePeriodDays).toString()\n        // 不足7day: 30d值计算一致，使用7D数据\n        if (period === '30D') {\n          effectivePeriodDays = 7\n        }\n      } else if (poolAgeDays < 30) {\n        if (period === '30D') {\n          preTotalFee = d(preTotalFee).div(poolAgeDays).mul(effectivePeriodDays).toString()\n        }\n      }\n      // 大于30day: 24h/7d/30d分别计算，保持原有逻辑\n    }\n\n    const day_rate = d(365).div(effectivePeriodDays)\n    const fee_apr = d(preTotalFee).div(total_user_value).mul(day_rate).toString()\n\n    console.log('🚀 ~ file: useDlmmApr.ts:123 ~ estimatedFee ~ info2:', {\n      total_fee,\n      preTotalFee,\n      total_user_value,\n      show_fee_apr,\n      user_bins,\n      active_bin,\n      allBinList,\n      fee_apr,\n      period,\n      feeDataObj,\n      miningAprList: dlmmApiPoolInfo?.miningAprList\n    })\n    return {\n      fee_apr,\n      miningAprList: dlmmApiPoolInfo?.miningAprList\n    }\n  }, [period, user_bins, allBinList, feeDataObj, active_id, dlmmApiPoolInfo])\n\n  return {\n    estimateApr,\n    loading\n  }\n}\n","import { create, StateCreator } from 'zustand'\n\ninterface DlmmDepositState {\n  priceRangeMap: Record<string, object> | null\n  setPriceRangeMap: (value: Record<string, object> | null) => void\n  resetDeposit: () => void\n}\n\nconst store: StateCreator<DlmmDepositState> = (set, get) => ({\n  priceRangeMap: null,\n  setPriceRangeMap: (value: Record<string, object> | null) => {\n    set(() => ({\n      priceRangeMap: value\n    }))\n  },\n  resetDeposit: () => {\n    set(() => ({\n      priceRangeMap: null\n    }))\n  }\n})\n\nconst useDlmmDepositStore = create(store)\nexport default useDlmmDepositStore\n","import ExamplePieChart from '@/components/common/aprTooltip/ExamplePieChart'\nimport { aprProcessing } from '@/utils/api-data-utils'\nimport { CetusTooltip } from '@cetus/design'\nimport { useGetToken } from '@cetus/hooks/src/useToken'\nimport envConfigs from '@cetus/types/src/config/envConfigs'\nimport { d, formatPercentage, textEllipses } from '@cetus/utils'\nimport { fixCoinType } from '@cetusprotocol/common-sdk'\nimport { HStack, PlacementWithLogical, Skeleton, SkeletonCircle, Text, VStack } from '@chakra-ui/react'\nimport { useDeepCompareEffect } from 'ahooks'\nimport { Suspense, useState } from 'react'\ntype EstimatedAprProps = {\n  estimateApr?: string\n  placement?: PlacementWithLogical | undefined\n  miningAprList?: any[] | null\n  haveMining?: boolean\n  loading: boolean\n}\nfunction EstimatedApr({ estimateApr, placement = 'top', miningAprList, haveMining, loading }: EstimatedAprProps) {\n  const [tokenMap, setTokenMap] = useState<Map<string, any>>(new Map())\n  const isEstimateApNaN = isNaN(estimateApr as any)\n  const { getTokenListInfo } = useGetToken()\n\n  useDeepCompareEffect(() => {\n    const coinTypeList = miningAprList?.map((item: any) => item?.coinType)\n    getTokenListInfo(coinTypeList).then((res: any) => {\n      if (res && res?.size > 0) {\n        setTokenMap(res)\n      }\n    })\n  }, [miningAprList])\n\n  const feesData = isEstimateApNaN\n    ? []\n    : [\n        {\n          name: 'Fees',\n          value: Number(estimateApr),\n          displayValue: formatPercentage(d(estimateApr).mul(100).toString()) ?? '--',\n          color: '#68FFD8'\n        }\n      ]\n\n  const COLORS = ['#6868FF', '#FFCA68', '#C8FF00', '#FF562B', '#0A05FF', '#FF65F8', '#FF3232', '#842CFF', '#31D829']\n  // 确保除去sui以外的奖励颜色按照COLORS的顺序展示\n  let colorIndex = -1\n\n  const miningData = miningAprList\n    ?.map((item: any) => {\n      const { symbol, coinType, apr, aprDisplay } = item || {}\n      const isSuiToken = fixCoinType(coinType || '') == fixCoinType(envConfigs?.sui_coin?.coin_type || '')\n      colorIndex = isSuiToken ? colorIndex : colorIndex + 1\n      return {\n        name: `${textEllipses(`${symbol || tokenMap?.get(coinType)?.symbol || ''}`, 8)} Reward`,\n        value: Number(apr),\n        displayValue: aprDisplay,\n        color: isSuiToken ? '#65C8FF' : COLORS[colorIndex],\n        coinType\n      }\n    })\n    .sort((a: any, b: any) => b.value - a.value)\n\n  const originData = feesData.concat(miningData ?? [])\n\n  const totalAprDisplay = isEstimateApNaN\n    ? estimateApr\n    : aprProcessing(d(originData?.reduce((acc, cur) => d(acc).plus(cur?.value).toNumber(), 0)).toString(), true, false, true)\n\n  return loading ? (\n    <Skeleton w=\"50px\" h=\"14px\" />\n  ) : haveMining ? (\n    <CetusTooltip\n      placement={placement}\n      maxW=\"350px\"\n      tooltip={\n        <Suspense\n          fallback={\n            <VStack w=\"320px\" h=\"279px\" align=\"flex-start\" gap=\"16px\">\n              <HStack justify=\"space-between\" w=\"100%\">\n                <Skeleton w=\"30%\" h=\"20px\" />\n                <Skeleton w=\"30%\" h=\"20px\" />\n              </HStack>\n              <HStack justify=\"space-between\" gap=\"20px\" w=\"100%\">\n                <SkeletonCircle w=\"64px\" h=\"64px\" />\n                <VStack w=\"calc(100% - 84px)\">\n                  <HStack justify=\"space-between\" w=\"100%\">\n                    <Skeleton w=\"40%\" h=\"16px\" />\n                    <Skeleton w=\"30%\" h=\"16px\" />\n                  </HStack>\n                  <HStack justify=\"space-between\" w=\"100%\">\n                    <Skeleton w=\"40%\" h=\"16px\" />\n                    <Skeleton w=\"30%\" h=\"16px\" />\n                  </HStack>\n                  <HStack justify=\"space-between\" w=\"100%\">\n                    <Skeleton w=\"40%\" h=\"16px\" />\n                    <Skeleton w=\"30%\" h=\"16px\" />\n                  </HStack>\n                </VStack>\n              </HStack>\n            </VStack>\n          }\n        >\n          <VStack gap=\"16px\" w=\"320px\" overflow=\"hidden\" align=\"flex-start\" pb=\"2px\">\n            <HStack w=\"100%\" justify=\"space-between\">\n              <Text color=\"text_caption\">Total APR</Text>\n              <Text color=\"text_caption\" fontSize=\"16px\">\n                {totalAprDisplay ?? '--'}\n              </Text>\n            </HStack>\n\n            <Suspense\n              fallback={\n                <HStack justify=\"space-between\" gap=\"20px\" w=\"100%\">\n                  <SkeletonCircle w=\"64px\" h=\"64px\" />\n                  <VStack w=\"calc(100% - 84px)\">\n                    <HStack justify=\"space-between\" w=\"100%\">\n                      <Skeleton w=\"40%\" h=\"16px\" />\n                      <Skeleton w=\"30%\" h=\"16px\" />\n                    </HStack>\n                    <HStack justify=\"space-between\" w=\"100%\">\n                      <Skeleton w=\"40%\" h=\"16px\" />\n                      <Skeleton w=\"30%\" h=\"16px\" />\n                    </HStack>\n                    <HStack justify=\"space-between\" w=\"100%\">\n                      <Skeleton w=\"40%\" h=\"16px\" />\n                      <Skeleton w=\"30%\" h=\"16px\" />\n                    </HStack>\n                  </VStack>\n                </HStack>\n              }\n            >\n              <ExamplePieChart originData={originData} />\n            </Suspense>\n          </VStack>\n        </Suspense>\n      }\n    >\n      <Text color=\"primary\" textDecoration=\"underline dotted\" textDecorationColor=\"primary\" cursor=\"pointer\">\n        {totalAprDisplay ?? '--'}\n      </Text>\n    </CetusTooltip>\n  ) : (\n    <Text color={isEstimateApNaN ? 'text_caption' : 'primary'} textDecorationColor=\"primary\">\n      {totalAprDisplay ?? '--'}\n    </Text>\n  )\n}\n\nexport default EstimatedApr\n","import { EstimatedAprDateTypeList } from '@/components/common/EstimatedApr'\nimport { useDlmmApr } from '@/hooks/dlmm/useDlmmApr'\nimport useDlmmLiquidityStore from '@/store/dlmm'\nimport useDlmmDepositStore from '@/store/dlmm/dlmmDeposit'\nimport { CurrentBinChartData, MaxBinRangeChartData } from '@/types/dlmm'\nimport { Block, CetusTooltip, SelectTab } from '@cetus/design'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { Icon } from '@cetus/ui-kit'\nimport { d, formatPrice, formatSmallPrice, isAvailableObject, removeComma } from '@cetus/utils'\nimport { HStack, Menu, MenuButton, MenuItem, MenuList, Skeleton, Stack, StackProps, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useState } from 'react'\nimport EstimatedApr from './EstimatedApr'\n\nconst dateTypeList = [\n  {\n    label: '24H',\n    key: 'day'\n  },\n  {\n    label: '7D',\n    key: 'week'\n  },\n  {\n    label: '30D',\n    key: 'month'\n  }\n]\n\nfunction PriceRangeForDate({\n  direct,\n  wrapStyle = {},\n  currentLiquidityBins,\n  maxBinRangeData,\n  activeId\n}: {\n  direct: boolean\n  wrapStyle?: StackProps\n  currentLiquidityBins?: CurrentBinChartData\n  maxBinRangeData?: MaxBinRangeChartData\n  activeId?: number\n}) {\n  const { priceRangeMap } = useDlmmDepositStore()\n  const [tab, setTab] = useState({ type: '30D', key: 'month' })\n  const { minPriceForDate, maxPriceForDate, setMinPriceForDate, setMaxPriceForDate, dlmmApiPoolInfo } = useDlmmLiquidityStore()\n  useEffect(() => {\n    let _min = ''\n    let _max = ''\n    if (isAvailableObject(priceRangeMap) && isAvailableObject(tab)) {\n      const key = `${tab?.type}-${dlmmApiPoolInfo?.poolId}`\n      const value = (priceRangeMap as any)[key]\n      if (value) {\n        const lowest = value[0]\n        const lowValue = direct ? lowest : d(1).div(lowest).toString()\n        const highest = value[1]\n        const highValue = direct ? highest : d(1).div(highest).toString()\n        _min = formatPrice(lowValue, 6)\n        _max = formatPrice(highValue, 6)\n      } else {\n        _min = '-'\n        _max = '-'\n      }\n    } else {\n      _min = '-'\n      _max = '-'\n    }\n    setMinPriceForDate(_min)\n    setMaxPriceForDate(_max)\n  }, [direct, tab?.key, priceRangeMap, dlmmApiPoolInfo?.poolId])\n\n  const { isApp } = useWindowWidth()\n\n  const { estimateApr, loading: aprLoading } = useDlmmApr(\n    maxBinRangeData?.list || [],\n    currentLiquidityBins?.list || [],\n    tab?.type,\n    activeId,\n    dlmmApiPoolInfo\n  )\n  return isApp ? (\n    <HStack w=\"100%\" justify=\"space-between\" flexDirection={{ base: 'column', lg: 'row' }}>\n      <VStack\n        w={{ base: '100%', lg: '50%' }}\n        flexDirection={{ base: 'row', lg: 'column' }}\n        justify={{ base: 'space-between', lg: 'center' }}\n        alignItems={{ base: 'center', lg: 'flex-start' }}\n        flex=\"1\"\n        bg=\"card_bg\"\n        borderRadius=\"8px\"\n      >\n        <Text fontSize=\"14px\" whiteSpace=\"nowrap\">\n          {tab?.type}&nbsp;Price Range\n        </Text>\n        <Skeleton minH=\"14px\" isLoaded={minPriceForDate !== undefined && maxPriceForDate !== undefined}>\n          <HStack flexDir={'row'} alignItems={'center'}>\n            <Text fontSize=\"14px\" color=\"text_caption\">\n              {direct\n                ? minPriceForDate === '-'\n                  ? minPriceForDate\n                  : formatSmallPrice(removeComma(minPriceForDate))\n                : maxPriceForDate === '-'\n                  ? maxPriceForDate\n                  : formatSmallPrice(removeComma(maxPriceForDate))}\n              &nbsp;-&nbsp;\n              {direct\n                ? maxPriceForDate === '-'\n                  ? maxPriceForDate\n                  : formatSmallPrice(removeComma(maxPriceForDate))\n                : minPriceForDate === '-'\n                  ? minPriceForDate\n                  : formatSmallPrice(removeComma(minPriceForDate))}\n            </Text>\n          </HStack>\n        </Skeleton>\n      </VStack>\n      <VStack\n        w={{ base: '100%', lg: '50%' }}\n        flexDirection={{ base: 'row', lg: 'column' }}\n        justify={{ base: 'space-between', lg: 'center' }}\n        alignItems={{ base: 'center', lg: 'flex-start' }}\n        flex=\"1\"\n        bg=\"card_bg\"\n        borderRadius=\"8px\"\n      >\n        <HStack w={{ base: 'unset', lg: '100%' }} justify=\"space-between\">\n          <CetusTooltip\n            tooltip={\n              <Text fontSize=\"12px\" lineHeight=\"20px\">\n                APR based on the past {tab?.type} historical trade fees and emissions. Only positions in range earn yield. Past performance is not\n                indicative of future results. Calculations are an estimate and only for reference.\n              </Text>\n            }\n          >\n            <HStack gap=\"4px\">\n              <Text fontSize=\"14px\" h=\"20px\" lineHeight=\"20px\">\n                Estimated APR\n              </Text>\n              <Icon xlinkHref=\"#icon-icon_tips\" fontSize=\"20px\" />\n            </HStack>\n          </CetusTooltip>\n          <HStack pos=\"relative\" h=\"100%\" alignItems=\"start\">\n            <DateSelect\n              type={tab}\n              onTypeChange={tab => {\n                setTab({ type: tab.label, key: tab.key })\n              }}\n              list={EstimatedAprDateTypeList}\n            />\n          </HStack>\n        </HStack>\n        <EstimatedApr\n          loading={aprLoading}\n          estimateApr={currentLiquidityBins === undefined ? '--' : (estimateApr?.fee_apr ?? '0')}\n          miningAprList={estimateApr?.miningAprList}\n          haveMining={(estimateApr?.miningAprList?.length || 0) > 0}\n        />\n      </VStack>\n      {/* <HStack h=\"100%\" w=\"100%\" padding=\"8px 12px\" bg=\"card_bg\" borderRadius=\"8px\" justifyContent=\"space-between\">\n              <VStack align=\"flex-start\" gap=\"8px\" />\n    \n              <HStack pos=\"relative\" h=\"100%\" pt=\"8px\" alignItems=\"start\" />\n            </HStack> */}\n    </HStack>\n  ) : (\n    <HStack w=\"100%\" gap=\"16px\" justify=\"space-between\" {...wrapStyle}>\n      <Stack\n        flexDir={{ base: 'row', lg: 'column' }}\n        align={{ base: 'center', lg: 'flex-start' }}\n        justify={{ base: 'space-between', lg: 'center' }}\n        w={{ base: '100%', lg: 'auto' }}\n        gap=\"4px\"\n      >\n        <HStack>\n          <Text lineHeight=\"20px\" fontSize=\"14px\" whiteSpace=\"nowrap\">\n            {tab?.type}&nbsp;Price Range\n          </Text>\n        </HStack>\n\n        <Text color=\"text_caption\" fontSize=\"14px\" lineHeight=\"14px\" h=\"14px\">\n          {direct\n            ? minPriceForDate === '-'\n              ? minPriceForDate\n              : formatSmallPrice(removeComma(minPriceForDate))\n            : maxPriceForDate === '-'\n              ? maxPriceForDate\n              : formatSmallPrice(removeComma(maxPriceForDate))}\n          &nbsp;-&nbsp;\n          {direct\n            ? maxPriceForDate === '-'\n              ? maxPriceForDate\n              : formatSmallPrice(removeComma(maxPriceForDate))\n            : minPriceForDate === '-'\n              ? minPriceForDate\n              : formatSmallPrice(removeComma(minPriceForDate))}\n        </Text>\n      </Stack>\n\n      <Stack\n        flexDir={{ base: 'row', lg: 'column' }}\n        align={{ base: 'center', lg: 'flex-start' }}\n        justify={{ base: 'space-between', lg: 'center' }}\n        w={{ base: '100%', lg: 'auto' }}\n        gap=\"4px\"\n      >\n        <HStack>\n          <CetusTooltip\n            tooltip={\n              <Text fontSize=\"12px\" lineHeight=\"20px\">\n                APR based on the past {tab?.type} historical trade fees and emissions. Only positions in range earn yield. Past performance is not\n                indicative of future results. Calculations are an estimate and only for reference.\n              </Text>\n            }\n          >\n            <HStack gap=\"4px\">\n              <Text>Estimated APR</Text>\n              <Icon xlinkHref=\"#icon-icon_tips\" />\n            </HStack>\n          </CetusTooltip>\n        </HStack>\n\n        <EstimatedApr\n          loading={aprLoading}\n          estimateApr={currentLiquidityBins === undefined ? '--' : (estimateApr?.fee_apr ?? '0')}\n          miningAprList={estimateApr?.miningAprList}\n          haveMining={(estimateApr?.miningAprList?.length || 0) > 0}\n        />\n      </Stack>\n      <SelectTab<any, any>\n        type=\"outlineTab\"\n        tabList={EstimatedAprDateTypeList}\n        currentTab={tab}\n        handleChangeTab={tab => {\n          setTab({ type: tab.label, key: tab.key })\n        }}\n        isActive={(currentTab, tab) => currentTab.key === tab.key}\n        wrapStyle={{\n          h: isApp ? '28px' : '32px',\n          p: '3px',\n          border: '1px solid',\n          borderColor: 'border',\n          borderRadius: '8px',\n          gap: '4px',\n          w: 'auto'\n        }}\n        itemStyle={{\n          h: isApp ? '20px' : '24px',\n          p: isApp ? '4px 6px' : '4px 8px',\n          fontSize: '12px',\n          borderRadius: '4px',\n          flex: 1\n        }}\n      />\n    </HStack>\n  )\n}\n\nexport default PriceRangeForDate\n\ntype DateSelectProps = {\n  type: {\n    type: string\n    key: string\n  }\n  onTypeChange: (item: { label: string; key: string }) => void\n  list: {\n    label: string\n    key: string\n  }[]\n}\nexport function DateSelect({ type, onTypeChange, list }: DateSelectProps) {\n  return (\n    <Menu isLazy placement=\"bottom-end\">\n      {({ isOpen, onClose }) => (\n        <>\n          <MenuButton cursor=\"pointer\" bg=\"none\">\n            <Block p=\"5px 8px\" borderRadius=\"8px\">\n              <HStack width=\"100%\" justifyContent=\"space-between\" gap=\"2px\">\n                <Text color=\"text_caption\" fontSize={{ base: '12px', lg: '14px' }}>\n                  {type?.type}\n                </Text>\n                <Icon\n                  transition=\"transform 0.5s\"\n                  transform={isOpen ? 'rotate(180deg)' : 'rotate(0deg)'}\n                  xlinkHref=\"#icon-icon_descending_nor\"\n                  svgFill=\"text_caption\"\n                  svgW=\"26px\"\n                  svgH=\"26px\"\n                />\n              </HStack>\n            </Block>\n          </MenuButton>\n\n          <MenuList bg=\"bg_secondary\" borderRadius=\"8px\" p=\"4px\" opacity=\"1\" overflow=\"hidden\" minW=\"56px\">\n            <VStack w=\"58px\" gap=\"8px\">\n              {list.map(item => (\n                <MenuItem\n                  key={item.key}\n                  fontSize=\"14px\"\n                  textAlign=\"center\"\n                  borderRadius=\"8px\"\n                  color={type?.key === item.key ? 'primary' : '#909CA4'}\n                  onClick={() => onTypeChange(item)}\n                  bg=\"menu_item_bg\"\n                  justifyContent=\"center\"\n                >\n                  {item.label}\n                </MenuItem>\n              ))}\n            </VStack>\n          </MenuList>\n        </>\n      )}\n    </Menu>\n  )\n}\n","import ExamplePieChart from '@/components/common/aprTooltip/ExamplePieChart'\nimport { CetusTooltip } from '@cetus/design'\nimport { useGetToken } from '@cetus/hooks/src/useToken'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport envConfigs from '@cetus/types/src/config/envConfigs'\nimport { cancelBubble, isAvailableObject, textEllipses } from '@cetus/utils'\nimport { d, fixCoinType } from '@cetusprotocol/common-sdk'\nimport { Center, HStack, PlacementWithLogical, Skeleton, SkeletonCircle, Text, VStack } from '@chakra-ui/react'\nimport { useDeepCompareEffect } from 'ahooks'\nimport { Suspense, useState } from 'react'\nconst PositionAprBlock = ({\n  totalAprDisplay,\n  farmingAprDisplay,\n  placement = 'top',\n  poolInfo,\n  positionApr,\n  showFarmingApr = false,\n  haveUnderline = false,\n  flexDirection = 'column',\n  isActive = true\n}: {\n  totalAprDisplay?: string\n  farmingAprDisplay?: string\n  flexDirection?: string\n  poolInfo: any\n  positionApr: any\n  showFarmingApr?: boolean\n  haveUnderline?: boolean\n  placement?: PlacementWithLogical | undefined\n  isActive?: boolean\n}) => {\n  const { getTokenListInfo } = useGetToken()\n  const [tokenMap, setTokenMap] = useState<Map<string, any>>(new Map())\n  useDeepCompareEffect(() => {\n    if (positionApr?.posMiningReward?.length == 0) return\n    const coinTypeList = positionApr?.posMiningReward?.map((item: any) => item?.coinType)\n    getTokenListInfo(coinTypeList).then((res: any) => {\n      if (res && res?.size > 0) {\n        setTokenMap(res)\n      }\n    })\n  }, [positionApr?.posMiningReward])\n\n  const { isApp } = useWindowWidth()\n\n  const feesData =\n    poolInfo?.feeApr && d(poolInfo?.feeApr).gt(0)\n      ? [\n          {\n            name: 'Fees',\n            value: Number(positionApr?.aprByFee),\n            displayValue: positionApr?.aprByFeeDisplay,\n            color: '#68FFD8'\n          }\n        ]\n      : []\n\n  const COLORS = ['#6868FF', '#FFCA68', '#C8FF00', '#FF562B', '#0A05FF', '#FF65F8', '#FF3232', '#842CFF', '#31D829']\n  // 确保除去sui以外的奖励颜色按照COLORS的顺序展示\n  let colorIndex = -1\n\n  const miningData = positionApr?.posMiningReward\n    ?.map((item: any) => {\n      const { symbol, coinType, posMiningRewardApr, posMiningRewardAprDisplay } = item || {}\n      const isSuiToken = fixCoinType(coinType || '') == fixCoinType(envConfigs?.sui_coin?.coin_type || '')\n      colorIndex = isSuiToken ? colorIndex : colorIndex + 1\n      return {\n        name: `${textEllipses(`${symbol || tokenMap?.get(coinType)?.symbol || ''}`, 8)} Reward`,\n        value: Number(posMiningRewardApr),\n        displayValue: posMiningRewardAprDisplay,\n        color: isSuiToken ? '#65C8FF' : COLORS[colorIndex]\n      }\n    })\n    .sort((a: any, b: any) => b.value - a.value)\n\n  const originData = feesData.concat(miningData)\n\n  return isActive ? (\n    <HStack\n      justify=\"flex-end\"\n      onClick={e => {\n        isApp ? cancelBubble(e) : ''\n      }}\n    >\n      {isAvailableObject(positionApr) && positionApr?.aprPercentageTotal > 0 ? (\n        <CetusTooltip\n          maxW=\"350px\"\n          placement={placement}\n          showTooltip={poolInfo?.haveMining && totalAprDisplay !== '--'}\n          tooltip={\n            <VStack w=\"100%\" p=\"4px\">\n              <HStack w=\"100%\" justify=\"space-between\">\n                <Text color=\"text_caption\">Total APR</Text>\n                <Text color=\"text_caption\" fontSize=\"16px\">\n                  {totalAprDisplay}\n                </Text>\n              </HStack>\n              <TooltipInfo originData={originData} />\n            </VStack>\n          }\n        >\n          <Center>\n            <AprInfo\n              flexDirection={flexDirection}\n              showFarmingApr={showFarmingApr}\n              haveUnderline={haveUnderline}\n              poolInfo={poolInfo}\n              totalAprDisplay={totalAprDisplay}\n              farmingAprDisplay={farmingAprDisplay}\n            />\n          </Center>\n        </CetusTooltip>\n      ) : (\n        <Text color=\"text_caption\">--</Text>\n      )}\n    </HStack>\n  ) : (\n    <Text color=\"text_caption\">0%</Text>\n  )\n}\nexport default PositionAprBlock\n\nconst AprInfo = ({\n  poolInfo,\n  totalAprDisplay,\n  farmingAprDisplay,\n  haveUnderline,\n  showFarmingApr = false,\n  flexDirection = 'column'\n}: {\n  showFarmingApr?: boolean\n  haveUnderline?: boolean\n  poolInfo?: any\n  totalAprDisplay?: string\n  flexDirection?: 'column' | 'row'\n  farmingAprDisplay?: string\n}) => {\n  return (\n    <VStack align={flexDirection == 'column' ? 'flex-end' : 'center'} gap=\"4px\" flexDirection={flexDirection}>\n      <Text\n        as=\"span\"\n        color=\"primary\"\n        cursor={poolInfo?.haveMining && totalAprDisplay !== '0%' ? 'help' : 'text'}\n        textDecoration={haveUnderline && poolInfo?.haveMining && totalAprDisplay !== '0%' ? 'underline dotted' : 'none'}\n        textUnderlineOffset=\"3px\"\n      >\n        {totalAprDisplay}\n      </Text>\n      {poolInfo?.haveFarming && showFarmingApr && (\n        <CetusTooltip tooltip=\"Your Farming APR\">\n          <Text\n            fontWeight=\"500\"\n            p=\"2px 4px\"\n            fontSize=\"12px\"\n            color=\"primary_yellow\"\n            bg=\"primary_yellow_opacity.10\"\n            borderRadius=\"4px\"\n            whiteSpace=\"nowrap\"\n          >\n            {farmingAprDisplay == '--' ? '--' : '+' + farmingAprDisplay}\n          </Text>\n        </CetusTooltip>\n      )}\n    </VStack>\n  )\n}\n\nconst TooltipInfo = ({ originData }: { originData?: any }) => {\n  return (\n    <Suspense\n      fallback={\n        <HStack justify=\"space-between\" gap=\"20px\" w=\"100%\">\n          <SkeletonCircle w=\"64px\" h=\"64px\" />\n          <VStack w=\"calc(100% - 84px)\">\n            <HStack justify=\"space-between\" w=\"100%\">\n              <Skeleton w=\"40%\" h=\"16px\" />\n              <Skeleton w=\"30%\" h=\"16px\" />\n            </HStack>\n            <HStack justify=\"space-between\" w=\"100%\">\n              <Skeleton w=\"40%\" h=\"16px\" />\n              <Skeleton w=\"30%\" h=\"16px\" />\n            </HStack>\n            <HStack justify=\"space-between\" w=\"100%\">\n              <Skeleton w=\"40%\" h=\"16px\" />\n              <Skeleton w=\"30%\" h=\"16px\" />\n            </HStack>\n          </VStack>\n        </HStack>\n      }\n    >\n      <ExamplePieChart originData={originData} />\n    </Suspense>\n  )\n}\n","import usePositionApr from '@/hooks/position/usePositionApr'\nimport { SelectTab, TooltipIcon } from '@cetus/design'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { isAvailableObject } from '@cetus/utils'\nimport { HStack, Text, VStack } from '@chakra-ui/react'\nimport { useMemo } from 'react'\nimport { DateSelect } from '../liquidity/dlmm/PriceRangeForDate'\nimport PositionAprBlock from '../position/clmm/list/PositionAprBlock'\n\nexport const EstimatedAprDateTypeList = [\n  {\n    label: '24H',\n    key: 'day'\n  },\n  {\n    label: '7D',\n    key: 'week'\n  },\n  {\n    label: '30D',\n    key: 'month'\n  }\n]\n\nfunction EstimatedApr({\n  ranges,\n  currentPosPoolsRelatedData,\n  posPoolInfo,\n  isActive,\n  tab,\n  setTab,\n  wrapStyle,\n  showFarmingApr = false,\n  flexDirection = 'column',\n  isFarms = false,\n  currentPosTvl,\n  isPosition = false,\n  children\n}: {\n  ranges: any\n  currentPosPoolsRelatedData: any\n  posPoolInfo: any\n  isActive: boolean\n  tab: any\n  setTab: (item: any) => void\n  showFarmingApr?: boolean\n  flexDirection?: string\n  wrapStyle?: any\n  isFarms?: boolean\n  currentPosTvl?: string\n  isPosition?: boolean\n  children?: React.ReactNode\n}) {\n  const { isApp } = useWindowWidth()\n  const { getPositionApr } = usePositionApr()\n  const positionApr = useMemo(() => {\n    console.log('🚀🚀🚀 ~ EstimatedApr.tsx:54 ~ EstimatedApr ~ currentPosPoolsRelatedData:', { currentPosPoolsRelatedData, posPoolInfo, ranges, tab })\n    if (\n      isAvailableObject(currentPosPoolsRelatedData) &&\n      isAvailableObject(posPoolInfo) &&\n      isAvailableObject(ranges) &&\n      (Number(currentPosPoolsRelatedData?.minPriceRaw) !== 0 || Number(currentPosPoolsRelatedData?.maxPriceRaw) !== 0) &&\n      isAvailableObject(tab)\n    ) {\n      return getPositionApr(posPoolInfo, currentPosPoolsRelatedData, tab?.key, ranges[tab?.key], isFarms && !isPosition, currentPosTvl)\n    }\n  }, [JSON.stringify(currentPosPoolsRelatedData), JSON.stringify(posPoolInfo), JSON.stringify(tab?.key), JSON.stringify(ranges), isPosition])\n\n  return (\n    <HStack w=\"100%\" justify=\"space-between\">\n      {children}\n      <VStack\n        w={{ base: '100%', lg: 'unset' }}\n        gap=\"4px\"\n        align={{ base: 'space-between', lg: 'flex-start' }}\n        flexDirection={{ base: 'row', lg: 'column' }}\n        {...wrapStyle}\n      >\n        <HStack w={{ base: 'calc(100% - 60px)', lg: 'unset' }} gap=\"4px\" flexWrap={{ base: 'wrap', lg: 'nowrap' }}>\n          <Text color=\"primary_gray\" mr=\"-2px\" whiteSpace=\"nowrap\">\n            Estimated APR\n          </Text>\n          <TooltipIcon\n            tooltipCon={`APR based on the past ${tab.type} historical trade fees and emissions. Only positions in range earn yield. Past performance is not indicative of future results.\nCalculations are an estimate and only for reference.`}\n          />\n          {isApp && (\n            <DateSelect\n              type={tab}\n              onTypeChange={tab => {\n                setTab({ type: tab.label, key: tab.key })\n              }}\n              list={EstimatedAprDateTypeList}\n            />\n          )}\n        </HStack>\n        <HStack w=\"60px\" align=\"center\" justify={{ base: 'flex-end', lg: 'flex-start' }}>\n          {/* <Skeleton isLoaded={!!positionApr}> */}\n          <PositionAprBlock\n            isActive={isActive}\n            haveUnderline={true}\n            showFarmingApr={showFarmingApr}\n            poolInfo={posPoolInfo}\n            positionApr={positionApr}\n            flexDirection={flexDirection}\n            farmingAprDisplay={positionApr?.farmingAprDisplay}\n            totalAprDisplay={positionApr?.displayAprPercentageTotal}\n          />\n          {/* </Skeleton> */}\n        </HStack>\n      </VStack>\n      {!isApp && (\n        <SelectTab<any, any>\n          type=\"outlineTab\"\n          tabList={EstimatedAprDateTypeList}\n          currentTab={tab}\n          handleChangeTab={item => {\n            setTab({ type: item.label, key: item.key })\n          }}\n          isActive={(currentTab, tab) => currentTab.key === tab.key}\n          wrapStyle={{\n            h: isApp ? '28px' : '32px',\n            p: '3px',\n            border: '1px solid',\n            borderColor: 'border',\n            borderRadius: '8px',\n            gap: '4px',\n            w: 'auto'\n          }}\n          itemStyle={{\n            h: isApp ? '20px' : '24px',\n            p: isApp ? '4px 6px' : '4px 8px',\n            fontSize: '12px',\n            borderRadius: '4px',\n            flex: 1\n          }}\n        />\n      )}\n    </HStack>\n  )\n}\nexport default EstimatedApr\n","import { HStack, StackProps, Text, VStack } from '@chakra-ui/react'\nimport React from 'react'\n\ninterface DivisionBlockProps {\n  children: React.ReactNode | React.ReactNode[]\n  title: string | React.ReactNode\n  wrapStyle?: StackProps\n  divider?: boolean\n  titleStyle?: StackProps\n}\n\nfunction DivisionBlock({ children, title, wrapStyle = {}, divider = false, titleStyle = {} }: DivisionBlockProps) {\n  const isMultiChild = Array.isArray(children)\n  return (\n    <VStack gap=\"8px\" p={divider ? '0 16px 16px' : '10px 16px 16px'} borderRadius=\"16px\" bg=\"card_bg\" {...wrapStyle}>\n      <HStack\n        w=\"100%\"\n        justify=\"space-between\"\n        h={divider ? '52px' : '32px'}\n        borderBottom={divider ? '1px solid' : 'none'}\n        borderColor=\"border\"\n        p={divider ? '10px 0' : '0'}\n        {...titleStyle}\n      >\n        {typeof title === 'string' ? (\n          <Text fontSize=\"16px\" fontWeight=\"500\" color=\"text_caption\">\n            {title}\n          </Text>\n        ) : (\n          title\n        )}\n\n        {isMultiChild ? children?.[0] : children}\n      </HStack>\n      {isMultiChild && children?.[1]}\n    </VStack>\n  )\n}\n\nexport default DivisionBlock\n","/**\n * 流动性交互Hook\n * Liquidity Interaction Hook\n */\nimport { FeeTier } from '@/components/selectPool/type'\nimport useLiquidityStore from '@/store/clmm'\nimport useAddLiquidityStore from '@/store/clmm/addLiquidity'\nimport usePoolsStore from '@/store/pool'\nimport useCreatePoolStore from '@/store/pool/useCreatePool'\nimport usePositionStore from '@/store/position'\nimport useSwapWidgetStore from '@/store/swap-widget/swapWidget'\nimport useSwapWidgetConfigStore from '@/store/swap-widget/swapWidgetConfig'\nimport { PoolApiInfo } from '@/types'\nimport { Tab } from '@cetus/design/src/components/common/SelectTab'\nimport useQueryParams from '@cetus/hooks/src/useQueryParams'\nimport { useGetToken } from '@cetus/hooks/src/useToken'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport { useAccountStore } from '@cetus/stores'\nimport useWebConfigStore from '@cetus/stores/src/useWebConfigStore'\nimport { CoinType, Token } from '@cetus/types'\nimport envConfigs from '@cetus/types/src/config/envConfigs'\nimport { cancelBubble } from '@cetus/utils'\nimport { extractStructTagFromType } from '@cetusprotocol/common-sdk'\nimport { useCallback, useEffect, useLayoutEffect, useMemo, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport useFavoritePool from '../pool/useFavoritePool'\nimport useGetTvlInfo from './useGetTvlInfo'\n\n/**\n * 流动性交互接口定义\n * Interface definition for liquidity interaction\n */\ntype LiquidityInteraction = {\n  apiPoolInfo: PoolApiInfo | null\n}\n\n/**\n * 标签页枚举\n * Tab enumeration\n */\nexport enum TabsEnum {\n  deposit = 'Provide Liquidity',\n  positions = 'My Positions',\n  analytics = 'Analytics'\n}\n\n/**\n * 默认标签页列表\n * Default tab list\n */\nconst defaultTabList: { label: TabsEnum; key: keyof typeof TabsEnum }[] = [\n  {\n    label: TabsEnum.deposit,\n    key: 'deposit'\n  },\n  {\n    label: TabsEnum.positions,\n    key: 'positions'\n  },\n  {\n    label: TabsEnum.analytics,\n    key: 'analytics'\n  }\n]\n\n/**\n * 流动性交互Hook\n * @param apiPoolInfo - 池子API信息 / Pool API information\n */\nfunction useLiquidityInteraction({ apiPoolInfo }: LiquidityInteraction) {\n  const { currentAccount } = useAccountStore()\n  // 获取URL参数和导航函数\n  // Get URL parameters and navigation function\n  const { tab, poolAddress } = useQueryParams()\n  const navigate = useNavigate()\n\n  // 状态管理\n  // State management\n  const [feeTier, setFeeTier] = useState<FeeTier>()\n  const [tabList, setTabList] = useState<Tab[]>(defaultTabList)\n  const [currentTab, setCurrentTab] = useState<keyof typeof TabsEnum>(defaultTabList?.find(item => item.key === tab)?.key || defaultTabList[0].key)\n  const [selectedTokenA, setSelectedTokenA] = useState<Token>()\n  const [selectedTokenB, setSelectedTokenB] = useState<Token>()\n\n  // Store hooks\n  const { posBaseListGroupByPool, posBaseListLoading } = usePositionStore()\n  const { addFavorites, removeFavorites } = useFavoritePool()\n  const { poolFavoriteIds } = usePoolsStore()\n  const { fromToken, toToken } = useAddLiquidityStore()\n\n  // Token price hook\n  const { fetchTokenPrices } = useTokenPrice()\n\n  const { setFromCoin, setToCoin } = useSwapWidgetStore()\n  const { setIsOpen } = useSwapWidgetConfigStore()\n  const { setPoolType, setCurrentStep } = useCreatePoolStore()\n  const { isSwapWidgetDisplay } = useWebConfigStore()\n  /**\n   * 跳转到swap token页面，PC打开小组件，H5跳转页面\n   * Jump to swap token page, PC opens widget, H5 jumps page\n   */\n  const onJump2Swap = () => {\n    if (isSwapWidgetDisplay) {\n      setIsOpen(true)\n    } else {\n      navigate(`/swap/${apiPoolInfo?.displayTokenA?.coin_type}/${apiPoolInfo?.displayTokenB?.coin_type}`)\n    }\n  }\n\n  /**\n   * 切换小组件token与当前池子相同\n   */\n  useEffect(() => {\n    if (fromToken && toToken) {\n      setFromCoin(fromToken)\n      setToCoin(toToken)\n    }\n    return () => {\n      setFromCoin(envConfigs.clmm_swap.from_coin)\n      setToCoin(envConfigs.clmm_swap.to_coin)\n    }\n  }, [fromToken, toToken])\n\n  /**\n   * 计算当前池子的仓位数量\n   * Calculate the number of positions for current pool\n   */\n  const positionNum = useMemo(() => {\n    if (poolAddress && poolAddress !== 'undefined') {\n      const res = posBaseListGroupByPool[poolAddress.toLowerCase() || '']\n      if (res && res?.list) {\n        return res?.list.length > 0 ? res?.list.length : undefined\n      }\n      return undefined\n    }\n    return undefined\n  }, [JSON.stringify(posBaseListGroupByPool), poolAddress])\n\n  /**\n   * 更新标签页列表中的仓位数量\n   * Update position numbers in tab list\n   */\n  useEffect(() => {\n    setTabList(\n      defaultTabList?.map(tab => ({\n        ...tab,\n        num: tab.label === TabsEnum.positions && currentAccount?.address ? positionNum : undefined\n        // num: tab.label === TabsEnum.positions && currentTab === 'positions' && !posBaseListLoading ? positionNum : undefined\n      }))\n    )\n    // }, [positionNum, currentTab, posBaseListLoading])\n  }, [positionNum, currentAccount?.address])\n\n  /**\n   * 同步URL参数中的标签页\n   * Synchronize tab from URL parameters\n   */\n  useLayoutEffect(() => {\n    if (tab && tab !== currentTab) {\n      setCurrentTab(tab as keyof typeof TabsEnum)\n    }\n  }, [tab])\n\n  /**\n   * 判断当前池子是否被收藏\n   * Check if current pool is favorited\n   */\n  const isFavoritePool = useMemo(() => {\n    return poolFavoriteIds?.includes(poolAddress || '')\n  }, [JSON.stringify(poolFavoriteIds), poolAddress])\n\n  /**\n   * 处理收藏/取消收藏\n   * Handle favorite/unfavorite\n   */\n  const onChangeFavorites = (e: any) => {\n    cancelBubble(e)\n    if (poolAddress) {\n      // 如果当前池子已经被收藏，则移除收藏\n      isFavoritePool ? removeFavorites(poolAddress) : addFavorites(poolAddress)\n    }\n  }\n\n  const favoriteStyle = useMemo(() => {\n    return isFavoritePool\n      ? {\n          tooltip: 'Remove from Watchlist',\n          xlinkHref: '#icon-icon_star_sel',\n          svgFill: 'primary_blue',\n          svgHover: 'primary'\n        }\n      : {\n          tooltip: 'Add to Watchlist',\n          xlinkHref: '#icon-icon_star',\n          svgFill: 'text_paragraph',\n          svgHover: 'text_caption'\n        }\n  }, [isFavoritePool])\n\n  /**\n   * 同步选中的代币\n   * Synchronize selected tokens\n   */\n  useEffect(() => {\n    setSelectedTokenA(apiPoolInfo?.displayTokenA)\n    setSelectedTokenB(apiPoolInfo?.displayTokenB)\n  }, [apiPoolInfo?.displayTokenA?.coin_type, apiPoolInfo?.displayTokenB?.coin_type])\n\n  /**\n   * 确认创建池子\n   * Confirm pool creation\n   */\n  const onConfirm = () => {\n    setCurrentStep(2)\n    setPoolType('clmm')\n    navigate(`/create-pool/${apiPoolInfo?.displayTokenA?.coin_type}/${apiPoolInfo?.displayTokenB?.coin_type}/${feeTier?.feeRate}`)\n  }\n\n  // 刷新市场价格\n  const refreshMarketPrice = () => {\n    const list = []\n    if (fromToken) {\n      list.push(fromToken.coin_type)\n    }\n\n    if (toToken) {\n      list.push(toToken.coin_type)\n    }\n\n    if (apiPoolInfo?.miningRewardList) {\n      apiPoolInfo?.miningRewardList?.forEach((item: any) => {\n        list.push(extractStructTagFromType(item?.coinType).full_address)\n      })\n    }\n\n    if (list.length > 0) {\n      fetchTokenPrices(Array.from(new Set(list.filter(item => item && item !== 'undefined'))))\n    }\n  }\n  /**\n   * 当fromToken或toToken变化时，刷新市场价格\n   * When fromToken or toToken changes, refresh market price\n   */\n  useEffect(() => {\n    refreshMarketPrice()\n  }, [fromToken?.coin_type, toToken?.coin_type])\n\n  const { fetchTokenInfo } = useGetToken()\n  const { setApiPoolInfo, apiPoolInfoLoading, netError } = useLiquidityStore()\n  const { setTotalAmountUSD } = useGetTvlInfo()\n\n  /**\n   * 切换代币\n   * Switch tokens\n   */\n  const handleSelectToken = useCallback(\n    async (token: Token, self_selected?: Token, other_selected?: Token, self_address?: string, other_address?: string, isDisplayA?: boolean) => {\n      const key = Object.keys(TabsEnum).find(tab => tab === currentTab)\n      const coinTypeList = [self_address, other_address].filter(Boolean)\n\n      const tokenMap = await fetchTokenInfo<string[]>(coinTypeList as string[])\n      if (other_selected?.coin_type || tokenMap?.get((other_address || '') as CoinType)?.coin_type) {\n        if (\n          extractStructTagFromType(token?.coin_type).full_address ===\n          extractStructTagFromType(other_selected?.coin_type || tokenMap?.get(other_address || '')?.coin_type || '').full_address\n        ) {\n          setSelectedTokenA(selectedTokenB)\n          setSelectedTokenB(selectedTokenA)\n        } else if (\n          extractStructTagFromType(token?.coin_type).full_address ===\n          extractStructTagFromType(self_selected?.coin_type || tokenMap?.get(self_address || '')?.coin_type || '').full_address\n        ) {\n          return\n        } else {\n          if (isDisplayA) {\n            navigate(`/clmm?tab=${key}&from=${token?.coin_type}&to=${other_selected?.coin_type || tokenMap?.get(other_address || '')?.coin_type}`)\n          } else {\n            navigate(`/clmm?tab=${key}&from=${other_selected?.coin_type || tokenMap?.get(other_address || '')?.coin_type}&to=${token?.coin_type}`)\n          }\n          setApiPoolInfo(null)\n          setTotalAmountUSD('')\n        }\n      } else {\n        if (isDisplayA) {\n          navigate(`/clmm?tab=${key}&from=${token?.coin_type}`)\n        } else {\n          navigate(`/clmm?tab=${key}&to=${token?.coin_type}`)\n        }\n        setApiPoolInfo(null)\n        setTotalAmountUSD('')\n      }\n    },\n    [selectedTokenA, selectedTokenB, currentTab]\n  )\n\n  /**\n   * 获取SelectToken组件的props\n   * Get props for SelectToken component\n   * @param address\n   * @param token\n   * @returns SelectTokenProps\n   */\n  const getSelectTokenProps = useCallback(\n    async (address?: string, token?: Token) => {\n      const tokenInfo = await fetchTokenInfo<CoinType>((address || '') as CoinType)\n      return {\n        value: token ? token : address ? tokenInfo : undefined,\n        isWhiteSelect: false,\n        whiteTokenList: undefined,\n        disabled: netError,\n        tokenStyle: { p: 0, border: 'none' },\n        tokenSize: '32px',\n        symbolStyle: { fontSize: '20px', fontWeight: '500' },\n        wrapStyle: { h: '32px', border: 'none', p: '0', bg: 'background' },\n        loading: !token && apiPoolInfoLoading\n      }\n    },\n    [netError, apiPoolInfoLoading]\n  )\n\n  return {\n    currentTab,\n    setCurrentTab,\n    tabList,\n    favoriteStyle,\n    onChangeFavorites,\n    selectedTokenA,\n    selectedTokenB,\n    setSelectedTokenA,\n    setSelectedTokenB,\n    onConfirm,\n    feeTier,\n    setFeeTier,\n    refreshMarketPrice,\n    onJump2Swap,\n    handleSelectToken,\n    getSelectTokenProps\n  }\n}\n\nexport default useLiquidityInteraction\n"],"names":["usePositionApr","estPositionAPRWithMultiMethod","lowerUserPrice","upperUserPrice","lowerHistPrice","upperHistPrice","retroLower","retroRange","userRange","histRange","retroRangeD","d","userRangeD","histRangeD","posPoolInfo","posRangeInfo","dateType","range","isFarmsPos","positionTvl","isAvailableObject","minPriceRaw","maxPriceRaw","tokenA","tokenB","miningAprList","feeApr","feeApr7d","feeApr30d","isReverse","farmsEffectiveTickLower","farmsEffectiveTickUpper","farmsStatedTvl","farmsApr","decimalA","decimalB","isFullRange","lower","upper","beforeContractPriceLowest","TickMath","beforeContractPriceHighest","hisLowerPrice","formatNumberWithDown","hisUpperPrice","positionMulti","aprByFee","posMiningReward","aprPercentageTotal","reward","posMiningRewardApr","posMiningRewardAprDisplay","aprProcessing","farmingApr","farmsLower","farmsUpper","farmsPositionMulti","formatPercentage","symbolDataDisplayProcessing","EventEnums","usePoolInfo","tokenAAmountUSD","totalAmountUSD","tokenARatio","useMemo","ratio","fixRounding","tokenBRatio","InfoItem","label","value","wrapStyle","jsx","HTextLabelBox","TokenCard","token","amount","amountUSD","loading","getExplorerUrl","useExplorer","jsxs","VStack","HStack","SingleCoinImage","Text","textEllipses","AddressCopyLink","addComma","fromDecimalsAmountFix","formatPrice","useFetchBinsTradeData","fetchByApi","useFetch","poolId","dataType","period","result","DLMMBinsTradedPath","asIntN","error","useDlmmApr","allBinList","user_bins","active_id","dlmmApiPoolInfo","setIsLoading","useState","feeDataObj","setFeeDataObj","fetchBinsTradeData","getTokenAmountValue","useTokenPrice","getPeriodDays","useCallback","useEffect","res","_feeDataObj","item","parseWarpUserBinList","warpBinList","total_user_amount_a","total_user_amount_b","bin","binId","binInfo","total_fee_value","user_amount_a","fromDecimalsAmount","user_amount_b","estimatedFee","validBinList","total_user_amount_a_value","_a","total_user_amount_b_value","_b","total_user_value","total_fee","amount_value_a","_c","amount_value_b","_d","total_amount_value","user_amount_value_a","_e","user_amount_value_b","_f","user_amount_value","fee_rate","fee","active_bin","show_fee_apr","preTotalFee","effectivePeriodDays","poolAgeDays","day_rate","fee_apr","store","set","get","useDlmmDepositStore","create","EstimatedApr","estimateApr","placement","haveMining","tokenMap","setTokenMap","isEstimateApNaN","getTokenListInfo","useGetToken","useDeepCompareEffect","coinTypeList","feesData","COLORS","colorIndex","miningData","symbol","coinType","apr","aprDisplay","isSuiToken","fixCoinType","envConfigs","a","b","originData","totalAprDisplay","acc","cur","Skeleton","CetusTooltip","Suspense","SkeletonCircle","ExamplePieChart","PriceRangeForDate","direct","currentLiquidityBins","maxBinRangeData","activeId","priceRangeMap","tab","setTab","minPriceForDate","maxPriceForDate","setMinPriceForDate","setMaxPriceForDate","useDlmmLiquidityStore","_min","_max","key","lowest","lowValue","highest","highValue","isApp","useWindowWidth","aprLoading","formatSmallPrice","removeComma","Icon","DateSelect","EstimatedAprDateTypeList","Stack","SelectTab","currentTab","type","onTypeChange","list","Menu","isOpen","onClose","Fragment","MenuButton","Block","MenuList","MenuItem","PositionAprBlock","farmingAprDisplay","poolInfo","positionApr","showFarmingApr","haveUnderline","flexDirection","isActive","e","cancelBubble","TooltipInfo","Center","AprInfo","ranges","currentPosPoolsRelatedData","isFarms","currentPosTvl","isPosition","children","getPositionApr","TooltipIcon","DivisionBlock","title","divider","titleStyle","isMultiChild","TabsEnum","defaultTabList","useLiquidityInteraction","apiPoolInfo","currentAccount","useAccountStore","poolAddress","useQueryParams","navigate","useNavigate","feeTier","setFeeTier","tabList","setTabList","setCurrentTab","selectedTokenA","setSelectedTokenA","selectedTokenB","setSelectedTokenB","posBaseListGroupByPool","posBaseListLoading","usePositionStore","addFavorites","removeFavorites","useFavoritePool","poolFavoriteIds","usePoolsStore","fromToken","toToken","useAddLiquidityStore","fetchTokenPrices","setFromCoin","setToCoin","useSwapWidgetStore","setIsOpen","useSwapWidgetConfigStore","setPoolType","setCurrentStep","useCreatePoolStore","isSwapWidgetDisplay","useWebConfigStore","onJump2Swap","positionNum","useLayoutEffect","isFavoritePool","onChangeFavorites","favoriteStyle","onConfirm","refreshMarketPrice","extractStructTagFromType","fetchTokenInfo","setApiPoolInfo","apiPoolInfoLoading","netError","useLiquidityStore","setTotalAmountUSD","useGetTvlInfo","handleSelectToken","self_selected","other_selected","self_address","other_address","isDisplayA","getSelectTokenProps","address","tokenInfo"],"mappings":"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"}