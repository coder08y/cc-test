{"version":3,"file":"Dlmm-Do0v7VT5.js","sources":["../../src/hooks/dlmm/useDlmmTransactionHIstory.ts","../../src/hooks/dlmm/useDlmmRecentTransactions.ts","../../src/components/liquidity/dlmm/recentTransactions/type.ts","../../src/components/liquidity/dlmm/recentTransactions/components.tsx","../../src/components/liquidity/dlmm/recentTransactions/index.tsx","../../src/hooks/dlmm/useBinsTrade.ts","../../src/components/liquidity/dlmm/analytics/BinsTradeVolumeChart.tsx","../../src/components/liquidity/dlmm/analytics/BinsTradingVolume.tsx","../../src/store/dlmm/dlmmTvl.ts","../../src/components/liquidity/dlmm/analytics/PoolInfo.tsx","../../src/hooks/dlmm/useDlmmPoolLiquidityDistribution.ts","../../src/hooks/dlmm/useGetDlmmPoolRelatedData.ts","../../src/components/liquidity/dlmm/analytics/PoolLiquidityDistribution.tsx","../../src/components/liquidity/dlmm/analytics/PoolsAnalytics.tsx","../../src/components/liquidity/dlmm/AddLiquidityConfirmModal.tsx","../../src/constant/dlmm.ts","../../src/hooks/dlmm/useInitDlmmPoolPriceRange.ts","../../src/hooks/dlmm/useAddDlmmLiquidity.ts","../../src/hooks/dlmm/useAddDlmmLiquidityButton.ts","../../src/hooks/dlmm/useDlmmDeposit.ts","../../src/components/liquidity/dlmm/NFTModal.tsx","../../src/components/liquidity/dlmm/AutoFillSwitch.tsx","../../src/hooks/dlmm/useDlmmAddLiquidityChart.ts","../../src/hooks/dlmm/useDlmmPriceRange.ts","../../src/components/liquidity/dlmm/ControlPriceRange/index.tsx","../../src/components/liquidity/dlmm/NumBins.tsx","../../src/hooks/dlmm/useQuickPriceRangeChange.ts","../../src/components/liquidity/dlmm/QuickPriceRange.tsx","../../src/components/liquidity/dlmm/RangeChart.tsx","../../src/components/liquidity/dlmm/SetPriceRange.tsx","../../src/components/liquidity/dlmm/deposit/H5.tsx","../../src/components/liquidity/dlmm/deposit/PC.tsx","../../src/components/liquidity/dlmm/deposit/index.tsx","../../src/hooks/dlmm/useMyDlmmPositions.ts","../../src/components/liquidity/dlmm/MyPositions.tsx","../../src/components/liquidity/dlmm/PoolsStats.tsx","../../src/components/liquidity/dlmm/SelectTokenAndFeeConfirm.tsx","../../src/hooks/dlmm/useLiquidityInteraction.ts","../../src/hooks/dlmm/useDlmmLiquidity.ts","../../src/hooks/dlmm/useGetDlmmTvlInfo.ts","../../src/pages/Dlmm.tsx"],"sourcesContent":["import { TransactionsHistory } from '@/apis/path'\nimport { useFetch } from '@cetus/hooks'\nimport { useSdk } from '@cetus/sdk-factory'\nimport { APP_ENV } from '@cetus/types'\nimport { PageQuery } from '@cetusprotocol/common-sdk'\n\nexport type getTransactionsHistoryParams = {\n  limit?: number\n  offset?: number\n  timestamp_ms?: string | number\n  address?: string\n}\n\nfunction useDlmmTransactionHistory() {\n  const dlmmSdk = useSdk('dlmm')\n  const { fetchByApi } = useFetch()\n\n  const getTransactionsHistory = async (params: getTransactionsHistoryParams) => {\n    try {\n      const res = await fetchByApi(TransactionsHistory, 'GET', params)\n      console.log(res, 'getTransactionsHistory')\n      if (res) {\n        return res\n      } else {\n        throw new Error('no data')\n      }\n    } catch (error) {\n      console.error(error, 'getTransactionsHistory ~ error')\n    }\n  }\n\n  const getTransactionsHistoryBySDK = async (poolId: string, paginationArgs: PageQuery) => {\n    try {\n      const res = await dlmmSdk?.Pool?.getPoolTransactionList({\n        pool_id: poolId,\n        pagination_args: paginationArgs,\n        full_rpc_url: APP_ENV === 'testnet' ? 'https://rpc-testnet.suiscan.xyz:443' : 'https://rpc-mainnet.suiscan.xyz:443'\n      })\n      console.log(res, 'getTransactionsHistoryBySDK')\n      if (res) {\n        return res\n      } else {\n        throw new Error('no data')\n      }\n    } catch (error) {\n      console.error(error, 'getTransactionsHistoryBySDK ~ error')\n    }\n\n    return undefined\n  }\n\n  return { getTransactionsHistory, getTransactionsHistoryBySDK }\n}\n\nexport default useDlmmTransactionHistory\n","import { DataItem, EventEnums } from '@/components/liquidity/clmm/recentTransactions/type'\nimport useDlmmLiquidityStore from '@/store/dlmm'\nimport useQueryParams from '@cetus/hooks/src/useQueryParams'\nimport { bnToAmount } from '@cetus/utils'\nimport { fixCoinType, PageQuery } from '@cetusprotocol/common-sdk'\nimport { useDebounceEffect } from 'ahooks'\nimport { useEffect, useState } from 'react'\nimport useDlmmTransactionHistory from './useDlmmTransactionHIstory'\n\nfunction useDlmmRecentTransactions() {\n  const pageSize = 10\n\n  const { getTransactionsHistoryBySDK } = useDlmmTransactionHistory()\n  const [isLoading, setIsLoading] = useState(true)\n  const [list, setList] = useState<DataItem[]>([])\n  const [currentPage, setCurrentPage] = useState(1)\n  const [nextCursor, setNextCursor] = useState<string | undefined>()\n  const [hasNextPage, setHasNextPage] = useState(true)\n  const { dlmmApiPoolInfo, manualRefresh, setManualRefresh } = useDlmmLiquidityStore()\n  const { poolId } = useQueryParams()\n  /**\n   * 根据池子地址初始化第一页数据\n   * Initialize the first page data based on the pool address\n   */\n  useEffect(() => {\n    setList([])\n    setCurrentPage(1)\n    setNextCursor(undefined)\n    setHasNextPage(true)\n  }, [poolId])\n\n  /**\n   * 手动刷新，回到第一页，重新请求第一页数据\n   * Manually refresh and request the first page data\n   */\n  useEffect(() => {\n    if (manualRefresh) {\n      setList([])\n      setCurrentPage(1)\n      setNextCursor(undefined)\n      setHasNextPage(false)\n      fetchData({\n        cursor: undefined,\n        limit: pageSize\n      })\n    }\n  }, [poolId, manualRefresh])\n\n  const fetchData = async (params: PageQuery) => {\n    try {\n      if (!hasNextPage) return\n      if (poolId) {\n        setIsLoading(true)\n        const result: any = await getTransactionsHistoryBySDK(poolId, { ...params })\n        if (result) {\n          const _data = result?.data?.map((item: any) => {\n            const _parsedJson = item?.parsed_json\n            const _firstToken = _parsedJson?.from\n              ? fixCoinType(_parsedJson?.from?.name, false) === dlmmApiPoolInfo?.tokenA?.coinType\n                ? dlmmApiPoolInfo?.tokenA\n                : dlmmApiPoolInfo?.tokenB\n              : dlmmApiPoolInfo?.tokenA\n\n            const _secondToken = _parsedJson?.target\n              ? fixCoinType(_parsedJson?.target?.name, false) === dlmmApiPoolInfo?.tokenB?.coinType\n                ? dlmmApiPoolInfo?.tokenB\n                : dlmmApiPoolInfo?.tokenA\n              : dlmmApiPoolInfo?.tokenB\n            return {\n              ...item,\n              type: ['Add', 'Open'].some(p => item.type?.includes(p))\n                ? EventEnums.add\n                : item.type?.includes('Remove') || item.type?.includes('Close')\n                  ? EventEnums.remove\n                  : EventEnums.swap,\n              items: [\n                {\n                  amount: bnToAmount(\n                    _parsedJson?.total_amount_a ? _parsedJson?.total_amount_a : _parsedJson?.amount_in,\n                    _firstToken?.decimals\n                  ).toString(),\n                  address: _firstToken?.coin_type,\n                  url: _firstToken?.logo_url,\n                  symbol: _firstToken?.symbol\n                },\n                {\n                  amount: bnToAmount(\n                    _parsedJson?.total_amount_b ? _parsedJson?.total_amount_b : _parsedJson?.amount_out,\n                    _secondToken?.decimals\n                  ).toString(),\n                  address: _secondToken?.coin_type,\n                  url: _secondToken?.logo_url,\n                  symbol: _secondToken?.symbol\n                }\n              ]\n            }\n          })\n\n          if (params?.cursor) {\n            setList(pre => [...pre, ...(_data || [])])\n          } else {\n            setList(_data || [])\n          }\n\n          setNextCursor(result?.next_cursor)\n          setHasNextPage(result?.has_next_page)\n          setIsLoading(false)\n        }\n      }\n    } catch (error) {\n      console.log(error, 'getTransactionsHistoryBySDK-error')\n      setIsLoading(false)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n  /**\n   * 监听页码和池子地址变化，重新请求数据\n   * Listen for changes in page number and pool address, and request data again\n   */\n  useDebounceEffect(\n    () => {\n      const params: PageQuery = {\n        cursor: nextCursor,\n        limit: pageSize\n      }\n      fetchData(params)\n    },\n    [currentPage, poolId],\n    {\n      wait: 500,\n      leading: true,\n      trailing: false\n    }\n  )\n\n  /**\n   * 切换下一页\n   * Switch to the next page\n   */\n  const onCurrentPageChange = () => {\n    setCurrentPage(pre => pre + 1)\n  }\n\n  return {\n    isLoading,\n    list,\n    dlmmApiPoolInfo,\n    currentPage,\n    onCurrentPageChange,\n    hasNextPage\n  }\n}\n\nexport default useDlmmRecentTransactions\n","export enum EventEnums {\n  add = 'add_liquidity_event',\n  remove = 'remove_liquidity_event',\n  swap = 'swap_event'\n}\nexport type IconProps = {\n  icon: string\n  color: string\n  title: string\n}\n\nexport type Item = {\n  address: string\n  amount: string\n  symbol: string\n  url: string\n}\n\nexport type DataItem = {\n  block_time: string\n  pool: string\n  sender: string\n  tx: string\n  type: EventEnums\n  items: Item[]\n}\n","import { AddressUnderline } from '@cetus/design'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { Icon, SingleCoinImage } from '@cetus/ui-kit'\nimport { ColumnsType } from '@cetus/ui-kit/src/components/Table'\nimport { addComma, getTimeDifferenceString, textEllipses } from '@cetus/utils'\nimport { HStack, Text, VStack } from '@chakra-ui/react'\nimport { DataItem, EventEnums, IconProps, Item } from './type'\n\nconst iconMap: Record<EventEnums, IconProps> = {\n  [EventEnums.add]: {\n    icon: '#icon-a-icon_add1',\n    color: 'primary_green',\n    title: 'Add Liquidity'\n  },\n  [EventEnums.remove]: {\n    icon: '#icon-tx_remove',\n    color: 'light_coral',\n    title: 'Remove Liquidity'\n  },\n  [EventEnums.swap]: {\n    icon: '#icon-icon_swap',\n    color: 'primary',\n    title: 'Swap'\n  }\n}\n\nconst Event = ({ type }: { type: EventEnums }) => {\n  return (\n    <HStack>\n      <Icon xlinkHref={iconMap[type]?.icon} svgFill={iconMap[type]?.color} svgHover={iconMap[type]?.color} />\n      <Text color=\"text_caption\">{iconMap[type]?.title}</Text>\n    </HStack>\n  )\n}\n\nconst Amounts = ({ items, type, isReverse }: Pick<DataItem, 'items' | 'type'> & { isReverse: boolean }) => {\n  const { isApp } = useWindowWidth()\n  return items ? (\n    type === EventEnums.swap ? (\n      isApp ? (\n        <VStack align=\"flex-end\" gap=\"8px\">\n          <AmountItem item={items?.[0]} />\n          <HStack justify=\"flex-end\">\n            <Icon xlinkHref=\"#icon-icon_right\" svgFill=\"text_caption\" svgHover=\"text_caption\" />\n            <AmountItem item={items?.[1]} />\n          </HStack>\n        </VStack>\n      ) : (\n        <HStack justify=\"flex-end\" gap=\"8px\">\n          <AmountItem item={items?.[0]} />\n          <Icon xlinkHref=\"#icon-icon_right\" svgFill=\"text_caption\" svgHover=\"text_caption\" />\n          <AmountItem item={items?.[1]} />\n        </HStack>\n      )\n    ) : isApp ? (\n      <VStack align=\"flex-end\" gap=\"8px 16px\" flexDir={isReverse ? 'column-reverse' : 'column'}>\n        {items\n          ?.filter(item => !!+item.amount)\n          ?.map(item => (\n            <AmountItem item={item} key={item?.address} />\n          ))}\n      </VStack>\n    ) : (\n      <HStack justify={isReverse ? 'flex-start' : 'flex-end'} gap=\"8px 16px\" flexDir={isReverse ? 'row-reverse' : 'row'}>\n        {items\n          ?.filter(item => !!+item.amount)\n          ?.map(item => (\n            <AmountItem item={item} key={item?.address} />\n          ))}\n      </HStack>\n    )\n  ) : null\n}\n\nconst AmountItem = ({ item }: { item: Item }) => {\n  return (\n    <HStack gap=\"4px\">\n      <SingleCoinImage imageUrl={item?.url} w=\"20px\" h=\"20px\" />\n      <Text color=\"text_caption\">{addComma(item?.amount)}</Text>\n      <Text>{textEllipses(item?.symbol, 10)}</Text>\n    </HStack>\n  )\n}\n\nconst getColumns = (getExplorerUrl: any, isReverse: boolean = false): ColumnsType<DataItem>[] => {\n  return [\n    {\n      title: <Text>Event</Text>,\n      key: 'type',\n      render: ({ type }) => {\n        return <Event type={type} />\n      },\n      thConfig: { h: '52px', p: '0 !important' },\n      tdConfig: { p: '0 !important' }\n    },\n    {\n      title: <Text textAlign=\"right\">Amounts</Text>,\n      key: 'amounts',\n      render: ({ items, type }) => {\n        return <Amounts items={items} type={type} isReverse={isReverse} />\n      },\n      thConfig: { h: '52px', p: '0 !important' },\n      tdConfig: { p: '0 !important' }\n    },\n    {\n      title: <Text textAlign=\"right\">Transactions</Text>,\n      key: 'tx',\n      render: ({ tx }) => {\n        return (\n          <AddressUnderline\n            address={tx}\n            color=\"primary\"\n            fontSize=\"14px\"\n            onClickLink={() => {\n              window.open(getExplorerUrl(tx, 'tx'), '_blank')\n            }}\n          />\n        )\n      },\n      thConfig: { h: '52px', p: '0 !important' },\n      tdConfig: { p: '0 !important' }\n    },\n    {\n      title: <Text textAlign=\"right\">Time</Text>,\n      key: 'block_time',\n      render: ({ block_time }) => {\n        return <Text color=\"text_caption\">{getTimeDifferenceString(block_time)}</Text>\n      },\n      thConfig: { h: '52px', p: '0 !important' },\n      tdConfig: { p: '0 !important' }\n    }\n  ]\n}\n\nexport { AmountItem, Amounts, Event, getColumns }\n","import useDlmmRecentTransactions from '@/hooks/dlmm/useDlmmRecentTransactions'\nimport useExplorer from '@cetus/hooks/src/useExplorer'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { H5MapTable, NoData, Table } from '@cetus/ui-kit'\nimport { Button, Center, HStack, Spinner, Text, VStack } from '@chakra-ui/react'\nimport { getColumns } from './components'\nimport { DataItem } from './type'\n\nfunction RecentTransactions() {\n  const { getExplorerUrl } = useExplorer()\n\n  const { isLoading, list, dlmmApiPoolInfo, currentPage, onCurrentPageChange, hasNextPage } = useDlmmRecentTransactions()\n  const { isApp } = useWindowWidth()\n\n  return (\n    <VStack w=\"100%\" position=\"relative\" mt={{ base: '12px', lg: '24px' }} gap=\"0px\">\n      <HStack w=\"100%\" justify=\"space-between\">\n        <Text fontSize=\"24px\" color=\"text_caption\" fontWeight=\"500\">\n          Transactions\n        </Text>\n      </HStack>\n      {!isLoading && list?.length == 0 ? (\n        <NoData type=\"nodata\" mt=\"16px\" text=\"No Recent Transactions\" borderRadius=\"16px\" />\n      ) : isApp ? (\n        <H5MapTable<DataItem>\n          columns={getColumns(getExplorerUrl, dlmmApiPoolInfo?.isReverse)}\n          dataSource={list}\n          loading={isLoading && currentPage === 1}\n          itemSkeletonLength={5}\n          itemHeight=\"30px\"\n          wrapStyle={{ gap: 0 }}\n          rowStyle={(_, index) => ({\n            w: '100%',\n            p: '0px',\n            mt: '20px'\n          })}\n          onRowClick={(item: any) => {\n            window.open(getExplorerUrl(item?.tx, 'tx'), '_blank')\n          }}\n        />\n      ) : (\n        <Table<DataItem>\n          columns={getColumns(getExplorerUrl, dlmmApiPoolInfo?.isReverse)}\n          dataSource={list}\n          skeletonLength={10}\n          loading={isLoading && currentPage === 1}\n          onRowClick={(item: any) => {\n            window.open(getExplorerUrl(item?.tx, 'tx'), '_blank')\n          }}\n          rowStyle={{ h: '52px', cursor: 'pointer' }}\n        />\n      )}\n      {hasNextPage && (\n        <Center mt={{ base: '40px', lg: '20px' }}>\n          <Button\n            w=\"120px\"\n            h=\"32px\"\n            fontSize=\"12px\"\n            borderRadius=\"8px\"\n            bg=\"button_ghost_bg\"\n            color=\"primary\"\n            borderColor=\"border\"\n            variant=\"outline\"\n            onClick={onCurrentPageChange}\n          >\n            {isLoading ? <Spinner size=\"sm\" color=\"text_caption\" /> : 'Load More'}\n          </Button>\n        </Center>\n      )}\n    </VStack>\n  )\n}\n\nexport default RecentTransactions\n","import useDlmmLiquidityStore from '@/store/dlmm'\nimport { Tab } from '@cetus/design/src/components/common/SelectTab'\nimport useQueryParams from '@cetus/hooks/src/useQueryParams'\nimport { d, formatPriceUseInDlmmAxis } from '@cetus/utils'\nimport { BinUtils } from '@cetusprotocol/dlmm-sdk'\nimport { useEffect, useLayoutEffect, useState } from 'react'\nimport { useChartTime } from '../common/useChartTime'\nimport useFetchBinsTradeData from './useFetchBinsTradeData'\n\nexport enum DateTabsEnum {\n  d = 'D',\n  w = 'W',\n  m = 'M'\n}\n\nexport enum DateTypeEnum {\n  d = '24H',\n  w = '7D',\n  m = '30D'\n}\n\nexport type DateTypes = { label: DateTabsEnum }\n\nfunction useBinsTrade(direct: boolean) {\n  const [currentDateType, setCurrentDateType] = useState<DateTabsEnum>(DateTabsEnum.d)\n  const [binsTradeData, setBinsTradeData] = useState<any[]>([])\n  const { dlmmApiPoolInfo, dlmmContractPoolInfo } = useDlmmLiquidityStore()\n  const [chartLoading, setChartLoading] = useState(true)\n  const [hoverData, setHoverData] = useState<any>(null)\n  const { poolId } = useQueryParams()\n  const { getHoverTime, time } = useChartTime()\n  const { fetchBinsTradeData } = useFetchBinsTradeData()\n  /**\n   * 根据池子地址初始化数据\n   * Initialize data based on pool address\n   */\n  useLayoutEffect(() => {\n    setBinsTradeData([])\n    setCurrentDateType(DateTabsEnum.d)\n    setHoverData(null)\n  }, [poolId])\n\n  const getBinsTradeData = async () => {\n    if (!poolId || dlmmContractPoolInfo?.binStep === undefined) return\n    try {\n      if (binsTradeData?.length === 0) {\n        setChartLoading(true)\n      }\n      const result = await fetchBinsTradeData({\n        dataType: 'vol',\n        period: DateTypeEnum[currentDateType.toLowerCase() as keyof typeof DateTypeEnum],\n        poolId\n      })\n\n      if (result && result.length) {\n        const tradeData = result\n          ?.map(item => {\n            const price = BinUtils?.getPriceFromBinId(\n              item?.binId,\n              dlmmContractPoolInfo!.binStep,\n              dlmmApiPoolInfo?.tokenA?.decimals,\n              dlmmApiPoolInfo?.tokenB?.decimals\n            )\n            const displayPrice = direct === dlmmApiPoolInfo?.isReverse ? d(1).div(price).toString() : price\n            return {\n              price: formatPriceUseInDlmmAxis(displayPrice),\n              originPrice: displayPrice,\n              binId: item?.binId,\n              value: Number(item?.value)\n            }\n          })\n          .sort((a: any, b: any) => Number(a.originPrice) - Number(b.originPrice))\n        setBinsTradeData(tradeData)\n      }\n    } catch (error) {\n      console.error(error, 'res-fetchAnalyticsData')\n      throw error\n    } finally {\n      setChartLoading(false)\n    }\n  }\n\n  /**\n   * 切换图表类型或日期类型时，重新获取数据\n   * Re-get data when switching chart type or date type\n   */\n  useEffect(() => {\n    getBinsTradeData()\n  }, [poolId, currentDateType, dlmmContractPoolInfo?.id, dlmmApiPoolInfo?.id, direct])\n\n  /**\n   * 鼠标移动到图表上时，获取时间\n   * Get time when mouse moves over chart\n   */\n  useEffect(() => {\n    if (hoverData?.date) {\n      getHoverTime(hoverData?.date, currentDateType)\n    }\n  }, [hoverData?.date, currentDateType])\n\n  /**\n   * 切换日期类型\n   * Switch date type\n   */\n  const handleDateTabChange = (item: Tab<DateTypes>) => {\n    setCurrentDateType(item.label)\n    if (item.label !== currentDateType) {\n      setBinsTradeData([])\n    }\n  }\n\n  const dateTypes = Object.values(DateTabsEnum).map(value => ({\n    label: value\n  }))\n\n  return {\n    handleDateTabChange,\n    dateTypes,\n    chartLoading,\n    binsTradeData,\n    hoverData,\n    setHoverData,\n    currentDateType,\n    currentDateTypeLabel: DateTypeEnum[currentDateType.toLowerCase() as keyof typeof DateTypeEnum],\n    time\n  }\n}\n\nexport default useBinsTrade\n","import { CustomizedXAxisTick } from '@/components/chart/CustomizedAxisTick'\nimport CustomBar from '@/components/chart/dlmmChart/CustomBar'\nimport EmptyTooltip from '@/components/chart/EmptyTooltip'\nimport useDlmmLiquidityStore from '@/store/dlmm'\nimport { formatNumber, formatNumberWithLtMinPrecision, removeComma } from '@cetus/utils'\nimport { HStack, Text, VStack } from '@chakra-ui/react'\nimport { useMemo, useState } from 'react'\nimport { Bar, BarChart, Cell, ResponsiveContainer, Tooltip, XAxis, YAxis } from 'recharts'\n\nfunction BinsTradingVolumeChart({\n  data,\n  onChangeValue,\n  noXAxis,\n  maxBinsLength = 251\n}: {\n  data: any\n  onChangeValue: (data: any) => void\n  noXAxis?: boolean\n  maxBinsLength: number\n}) {\n  const [hoverValue, setHoverValue] = useState('')\n  const [hoverPrice, setHoverPrice] = useState('')\n  const [currentPriceBin, setCurrentPriceBin] = useState<number | undefined>()\n  const { dlmmContractPoolInfo, dlmmApiPoolInfo } = useDlmmLiquidityStore()\n  const handleMouseMove = (e: any) => {\n    if (e && e.activePayload && e.activePayload.length) {\n      const { value, price, binId } = e.activePayload[0].payload\n      onChangeValue(e.activePayload[0].payload)\n      setHoverValue(formatNumber(value, 2))\n      setHoverPrice(price)\n      if (binId === dlmmContractPoolInfo?.activeId) {\n        setCurrentPriceBin(binId)\n      } else {\n        setCurrentPriceBin(undefined)\n      }\n    }\n  }\n\n  const handleMouseLeave = () => {\n    onChangeValue(null)\n  }\n\n  const showData = useMemo(() => {\n    if (data?.length <= 19) {\n      return data\n    } else {\n      const currentPriceIndex = data.findIndex(item => item.binId === dlmmContractPoolInfo?.activeId)\n      const half = Math.floor(maxBinsLength / 2)\n      let startIndex = Math.max(currentPriceIndex - half, 0)\n      let endIndex = Math.min(currentPriceIndex + half + 1, data.length)\n      const leftGap = currentPriceIndex - startIndex\n      const rightGap = endIndex - currentPriceIndex\n      if (leftGap < rightGap) {\n        endIndex = endIndex + rightGap - leftGap\n      }\n      if (rightGap < leftGap) {\n        startIndex = Math.max(0, startIndex - leftGap + rightGap)\n      }\n\n      return data.slice(startIndex, endIndex)\n    }\n  }, [data, dlmmContractPoolInfo?.activeId, maxBinsLength])\n\n  const minValue = useMemo(() => {\n    return showData?.length > 0 ? Math.floor(Math.min(...showData.map((item: any) => item.value))) : 0\n  }, [showData])\n  const maxValue = useMemo(() => {\n    return Math.ceil(Math.max(...showData.map((item: any) => item.value)))\n  }, [showData])\n\n  return (\n    <ResponsiveContainer width=\"100%\" height=\"100%\">\n      <BarChart barCategoryGap=\"25%\" data={showData} onMouseMove={handleMouseMove} onMouseLeave={handleMouseLeave} maxBarSize={24}>\n        {!noXAxis && <XAxis type=\"category\" dataKey=\"price\" minTickGap={18} tickLine={false} axisLine={false} tick={<CustomizedXAxisTick />} />}\n        {maxValue && <YAxis domain={[0, maxValue * 1.05]} hide={true} axisLine={false} tickLine={false} />}\n        {/* <Tooltip content={<EmptyTooltip value={pageFrom !== 'stats' ? hoverTime : ''} />} cursor={{ fill: 'rgba(118,200,255,0.5)' }} /> */}\n        <Tooltip\n          content={\n            <EmptyTooltip\n              value={\n                <VStack align=\"flex-start\" gap=\"4px\">\n                  {currentPriceBin !== undefined && (\n                    <Text fontSize=\"12px\" lineHeight=\"16px\">\n                      Current Price Bin\n                    </Text>\n                  )}\n                  <HStack>\n                    <Text fontSize=\"12px\" lineHeight=\"16px\">\n                      Bin Price\n                    </Text>\n                    <Text fontSize=\"12px\" color=\"text_caption\" lineHeight=\"16px\">\n                      {hoverPrice}\n                    </Text>\n                  </HStack>\n                  <HStack>\n                    <Text fontSize=\"12px\" lineHeight=\"16px\">\n                      Volume\n                    </Text>\n                    <Text fontSize=\"12px\" color=\"text_caption\" lineHeight=\"16px\">\n                      ${formatNumberWithLtMinPrecision(removeComma(hoverValue), 2)}\n                    </Text>\n                  </HStack>\n                </VStack>\n              }\n            />\n          }\n          cursor={<CustomizedCursor />}\n        />\n        {/* <Bar dataKey=\"num\" fill=\"#75C8FF\" activeBar={<Rectangle stroke=\"rgba(0,0,0,0)\" />} isAnimationActive={false} /> */}\n        <Bar dataKey=\"value\" isAnimationActive={false} shape={<CustomBar />}>\n          {showData?.map((entry, index) => (\n            <Cell key={entry?.binId} fill={entry?.binId === dlmmContractPoolInfo?.activeId ? '#76C8FF' : 'rgba(117,200,255,0.5)'} />\n          ))}\n        </Bar>\n      </BarChart>\n    </ResponsiveContainer>\n  )\n}\nexport default BinsTradingVolumeChart\n\nfunction CustomizedCursor(params: any) {\n  const { x, y, width, height, payload } = params\n\n  if (!payload || !payload?.[0] || !payload?.[0]?.payload?.num) return\n\n  const v = width > 192 ? width / 1.2 : width > 96 ? width / 1.5 : width > 48 ? width / 2 : width > 24 ? width / 4 : width / 8\n\n  return (\n    <g>\n      <rect width={width - v} height={height} x={x + v / 2} fill=\"rgba(118,200,255,0.5)\" y={y + 1} />\n    </g>\n  )\n}\n","import ActionButton from '@/components/liquidity/common/ActionButton'\nimport { DateTabsEnum, DateTypes } from '@/hooks/clmm/useAnalyticChart'\nimport useBinsTrade from '@/hooks/dlmm/useBinsTrade'\nimport { SelectTab } from '@cetus/design'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { NoData } from '@cetus/ui-kit'\nimport { Box, Center, Heading, HStack, Spinner, VStack } from '@chakra-ui/react'\nimport { useEffect, useState } from 'react'\nimport BinsTradingVolumeChart from './BinsTradeVolumeChart'\n\nfunction BinsTradingVolume({ priceDirect }: { priceDirect: boolean }) {\n  const { handleDateTabChange, dateTypes, chartLoading, binsTradeData, hoverData, setHoverData, currentDateType, currentDateTypeLabel } =\n    useBinsTrade(priceDirect)\n  const { isApp } = useWindowWidth()\n\n  const [maxBinsLength, setMaxBinsLength] = useState(251)\n\n  useEffect(() => {\n    setMaxBinsLength(isApp ? 61 : 251)\n  }, [isApp])\n\n  const handleAdd = () => {\n    if (maxBinsLength <= 19) return\n    const newLength = Math.max(Math.min(binsTradeData?.length, maxBinsLength) - 8, 19)\n    setMaxBinsLength(newLength)\n  }\n\n  const handleSub = () => {\n    if (maxBinsLength >= binsTradeData?.length) return\n    const newLength = Math.min(maxBinsLength + 8, binsTradeData?.length)\n    setMaxBinsLength(newLength)\n  }\n\n  return (\n    <VStack\n      w=\"100%\"\n      gap={{ base: '20px', lg: '40px' }}\n      p={{ base: '8px', lg: '20px' }}\n      borderRadius=\"16px\"\n      border=\"1px solid\"\n      borderColor=\"border\"\n      bg=\"bg_secondary\"\n    >\n      <HStack w=\"100%\" justify=\"space-between\">\n        <Heading fontSize=\"16px\" fontWeight=\"400\">\n          Bins Trading Volume({currentDateTypeLabel})\n        </Heading>\n        <HStack flex=\"1\" justify=\"flex-end\">\n          {binsTradeData && (\n            <HStack>\n              <ActionButton\n                type=\"Sub\"\n                onClick={handleSub}\n                disabled={maxBinsLength >= binsTradeData?.length}\n                wrapStyle={{ minW: '24px', w: '24px', h: '24px' }}\n              />\n              <ActionButton type=\"Add\" onClick={handleAdd} disabled={maxBinsLength <= 19} wrapStyle={{ minW: '24px', w: '24px', h: '24px' }} />\n            </HStack>\n          )}\n          <SelectTab<DateTypes, DateTabsEnum>\n            type=\"outlineTab\"\n            tabList={dateTypes}\n            currentTab={currentDateType}\n            handleChangeTab={handleDateTabChange}\n            wrapStyle={{\n              h: '24px',\n              p: '1px',\n              borderRadius: '8px',\n              flex: '0 0 101px'\n            }}\n            itemStyle={{\n              fontSize: '12px',\n              flex: 1,\n              borderRadius: '6px'\n            }}\n          />\n        </HStack>\n      </HStack>\n      {chartLoading && binsTradeData?.length === 0 && (\n        <Center h=\"140px\">\n          <Spinner />\n        </Center>\n      )}\n      {!chartLoading && binsTradeData && binsTradeData?.length === 0 && <NoData type=\"nodata\" border=\"none\" p=\"20px\" />}\n      {!chartLoading && binsTradeData?.length > 0 && (\n        <Box w=\"100%\" h=\"140px\">\n          <BinsTradingVolumeChart data={binsTradeData} onChangeValue={data => setHoverData(data)} maxBinsLength={maxBinsLength} />\n        </Box>\n      )}\n    </VStack>\n  )\n}\n\nexport default BinsTradingVolume\n","import { CoinPrice } from '@cetus/types'\nimport { d } from '@cetus/utils'\nimport { create, StateCreator } from 'zustand'\n\ninterface TvlInfoState {\n  tokenAPrice: CoinPrice | undefined\n  setTokenAPrice: (price: CoinPrice | undefined) => void\n  tokenBPrice: CoinPrice | undefined\n  setTokenBPrice: (price: CoinPrice | undefined) => void\n  tokenAAmount: string\n  setTokenAAmount: (value: string) => void\n  tokenBAmount: string\n  setTokenBAmount: (value: string) => void\n  tokenAAmountUSD: string\n  setTokenAAmountUSD: (value: string) => void\n  tokenBAmountUSD: string\n  setTokenBAmountUSD: (value: string) => void\n  totalAmountUSD: string\n  setTotalAmountUSD: (value: string) => void\n  tvlLoading: boolean\n  setTvlLoading: (value: boolean) => void\n  resetTvlInfo: () => void\n}\n\nconst store: StateCreator<TvlInfoState> = (set, get) => ({\n  tokenAPrice: undefined,\n  setTokenAPrice: (value: CoinPrice | undefined) => {\n    set(() => ({\n      tokenAPrice: value\n    }))\n  },\n  tokenBPrice: undefined,\n  setTokenBPrice: (value: CoinPrice | undefined) => {\n    set(() => ({\n      tokenBPrice: value\n    }))\n  },\n  tokenAAmount: '',\n  setTokenAAmount: (value: string) => {\n    set(() => ({\n      tokenAAmount: d(value).lt(0) ? '0' : value\n    }))\n  },\n  tokenBAmount: '',\n  setTokenBAmount: (value: string) => {\n    set(() => ({\n      tokenBAmount: d(value).lt(0) ? '0' : value\n    }))\n  },\n  tokenAAmountUSD: '',\n  setTokenAAmountUSD: (value: string) => {\n    set(() => ({\n      tokenAAmountUSD: value\n    }))\n  },\n  tokenBAmountUSD: '',\n  setTokenBAmountUSD: (value: string) => {\n    set(() => ({\n      tokenBAmountUSD: value\n    }))\n  },\n  totalAmountUSD: '',\n  setTotalAmountUSD: (value: string) => {\n    set(() => ({\n      totalAmountUSD: value\n    }))\n  },\n  tvlLoading: true,\n  setTvlLoading: (value: boolean) => {\n    set(() => ({\n      tvlLoading: value\n    }))\n  },\n  resetTvlInfo: () => {\n    set(() => ({\n      tokenAPrice: undefined,\n      tokenBPrice: undefined,\n      tokenAAmount: '',\n      tokenBAmount: '',\n      tokenAAmountUSD: '',\n      tokenBAmountUSD: '',\n      totalAmountUSD: ''\n    }))\n  }\n})\n\nconst useTvlInfoStore = create(store)\nexport default useTvlInfoStore\n","import usePoolInfo from '@/hooks/common/usePoolInfo'\nimport useDlmmLiquidityStore from '@/store/dlmm'\nimport useAddDlmmLiquidityStore from '@/store/dlmm/addDlmmLiquidity'\nimport useTvlInfoStore from '@/store/dlmm/dlmmTvl'\nimport { AddressCopyLink, CetusTooltip } from '@cetus/design'\nimport useExplorer from '@cetus/hooks/src/useExplorer'\nimport useQueryParams from '@cetus/hooks/src/useQueryParams'\nimport { Icon, SingleCoinImage } from '@cetus/ui-kit'\nimport { d, formatNumber, textEllipses } from '@cetus/utils'\nimport { FEE_PRECISION, FeeUtils, MAX_FEE_RATE } from '@cetusprotocol/dlmm-sdk'\nimport { Box, Grid, Heading, HStack, Progress, Skeleton, Text, VStack } from '@chakra-ui/react'\nimport { useMemo } from 'react'\nimport InfoItem from '../../common/InfoItem'\nimport TokenCard from '../../common/TokenCard'\n\nconst getRatio = (value: string) => {\n  if (value === '--') return '--'\n  return `${value}%`\n}\n\nfunction PoolInfo() {\n  const { dlmmApiPoolInfo, dlmmContractPoolInfo } = useDlmmLiquidityStore()\n  const { fromToken, toToken } = useAddDlmmLiquidityStore()\n  const { getExplorerUrl } = useExplorer()\n  const { poolId } = useQueryParams()\n  const { tokenAAmount, tokenBAmount, tokenAAmountUSD, tokenBAmountUSD, totalAmountUSD, tvlLoading } = useTvlInfoStore()\n  const { tokenARatio, tokenBRatio } = usePoolInfo(tokenAAmountUSD, totalAmountUSD)\n  const maxFee = `${d(MAX_FEE_RATE).div(FEE_PRECISION).mul(100)}%`\n\n  const variableFee = useMemo(() => {\n    if (!dlmmContractPoolInfo?.variable_parameters) return undefined\n    const _variableFee = FeeUtils.getVariableFee(dlmmContractPoolInfo?.variable_parameters)\n    if (d(_variableFee).gt(MAX_FEE_RATE)) {\n      return d(MAX_FEE_RATE).div(FEE_PRECISION).toString()\n    }\n    return d(_variableFee).div(FEE_PRECISION).toString()\n  }, [dlmmContractPoolInfo?.variable_parameters])\n\n  const dynamicFee = useMemo(() => {\n    if (!variableFee) return undefined\n    const _dynamicFee = d(dlmmApiPoolInfo?.fee ?? d(dlmmApiPoolInfo?.feeDisplay?.replace('%', '')).div(100).toNumber())\n      .plus(d(variableFee))\n      .toString()\n\n    const maxFeeRate = d(MAX_FEE_RATE).div(FEE_PRECISION).toString()\n\n    if (d(_dynamicFee).gt(maxFeeRate)) {\n      return maxFeeRate\n    }\n    return _dynamicFee\n  }, [dlmmApiPoolInfo?.fee, variableFee])\n\n  const protocolFee = useMemo(() => {\n    if (!variableFee || !dlmmApiPoolInfo?.protocolFeeRate) return '--'\n\n    return (\n      d(dlmmApiPoolInfo.protocolFeeRate as any)\n        .mul(100)\n        .toString() + '%'\n    )\n  }, [dynamicFee, dlmmApiPoolInfo?.protocolFeeRate])\n\n  return (\n    <VStack\n      w={{ base: '100%', lg: '482px' }}\n      gap=\"20px\"\n      p={{ base: '20px 8px 8px', lg: '20px 16px' }}\n      borderRadius=\"16px\"\n      border=\"1px solid\"\n      borderColor=\"border\"\n      bg=\"bg_secondary\"\n      minW={{ base: '100%', lg: '482px' }}\n      maxW={{ base: '100%', lg: '482px' }}\n    >\n      <VStack gap=\"20px\" w=\"100%\">\n        <HStack w=\"100%\" justify=\"space-between\">\n          <Heading fontSize=\"16px\" fontWeight=\"400\">\n            Pool Info\n          </Heading>\n        </HStack>\n        <Grid templateColumns={{ base: 'repeat(1, 1fr)', lg: 'repeat(2, 1fr)' }} w=\"100%\" gap={{ base: '12px', lg: '12px' }}>\n          <InfoItem\n            label=\"Address\"\n            value={\n              <AddressCopyLink\n                address={poolId || ''}\n                fontSize=\"14px\"\n                color=\"text_caption\"\n                onClickLink={() => window.open(getExplorerUrl(poolId, 'poolAddress'))}\n                wrapStyle={{ gap: '6px' }}\n                iconGap=\"6px\"\n              />\n            }\n            wrapStyle={{ gridColumn: { base: '1', lg: 'span 2' } }}\n          />\n          <InfoItem label=\"Pool ID\" value={dlmmContractPoolInfo?.index !== undefined ? `#${dlmmContractPoolInfo?.index + 1}` : '--'} />\n          <InfoItem label=\"Bin Step\" value={dlmmContractPoolInfo?.binStep || '--'} />\n\n          <InfoItem label=\"Base Fee\" value={dlmmApiPoolInfo?.feeDisplay ? dlmmApiPoolInfo?.feeDisplay : '--'} />\n          <InfoItem\n            label={\n              <CetusTooltip tooltip={<Text fontSize=\"12px\">The hard cap of the total dynamic fee of this pool</Text>}>\n                <HStack gap=\"2px\" _hover={{ svg: { fill: 'text_caption' } }}>\n                  <Text>Max Fee</Text>\n                  <Icon xlinkHref=\"#icon-icon_tips\" fontSize=\"18px\" />\n                </HStack>\n              </CetusTooltip>\n            }\n            value={maxFee}\n          />\n\n          <InfoItem\n            label={\n              <CetusTooltip tooltip={<Text fontSize=\"12px\">Base fee + real-time variable fee</Text>}>\n                <HStack gap=\"2px\" _hover={{ svg: { fill: 'text_caption' } }}>\n                  <Text>Total Dynamic Fee</Text>\n                  <Icon xlinkHref=\"#icon-icon_tips\" fontSize=\"18px\" />\n                </HStack>\n              </CetusTooltip>\n            }\n            value={dynamicFee ? formatNumber(d(dynamicFee).mul(100).toString(), 7) + '%' : '--'}\n            wrapStyle={{ gridColumn: { base: '1', lg: 'span 2' } }}\n          />\n        </Grid>\n      </VStack>\n      <VStack gap=\"20px\" w=\"100%\">\n        <HStack justify=\"flex-start\" w=\"100%\">\n          <Heading fontSize=\"16px\" fontWeight=\"400\">\n            Pool Composition\n          </Heading>\n        </HStack>\n        <VStack gap=\"16px\" w=\"100%\">\n          <HStack w=\"100%\" justify=\"space-between\">\n            <HStack gap=\"12px\">\n              <SingleCoinImage imageUrl={fromToken?.logo_url} w=\"28px\" h=\"28px\" coinType={fromToken ? fromToken?.coin_type : ''} />\n              <VStack align=\"flex-start\" gap=\"4px\">\n                <Text fontSize=\"16px\" fontWeight=\"500\" color=\"text_caption\">\n                  {textEllipses(fromToken?.symbol, 10)}\n                </Text>\n                {tvlLoading ? (\n                  <Skeleton h=\"12px\" w=\"46px\" />\n                ) : (\n                  <Text fontSize=\"12px\" fontWeight=\"500\">\n                    {dlmmApiPoolInfo?.isReverse ? getRatio(tokenBRatio) : getRatio(tokenARatio)}\n                  </Text>\n                )}\n              </VStack>\n            </HStack>\n            <Box w=\"200px\">\n              <Progress\n                value={Number(dlmmApiPoolInfo?.isReverse ? tokenBRatio : tokenARatio)}\n                size=\"xs\"\n                h=\"4px\"\n                borderRadius=\"4px\"\n                bg={[tokenARatio, tokenBRatio].includes('--') ? 'border' : 'quote_green'}\n                sx={{\n                  'div[role=\"progressbar\"]': {\n                    bg: [tokenARatio, tokenBRatio].includes('--') ? 'background' : 'primary'\n                  }\n                }}\n              />\n            </Box>\n            <HStack gap=\"12px\">\n              <VStack align=\"flex-end\" gap=\"4px\">\n                <Text fontSize=\"16px\" fontWeight=\"500\" color=\"text_caption\">\n                  {textEllipses(toToken?.symbol, 10)}\n                </Text>\n                {tvlLoading ? (\n                  <Skeleton h=\"12px\" w=\"46px\" />\n                ) : (\n                  <Text fontSize=\"12px\" fontWeight=\"500\">\n                    {dlmmApiPoolInfo?.isReverse ? getRatio(tokenARatio) : getRatio(tokenBRatio)}\n                  </Text>\n                )}\n              </VStack>\n              <SingleCoinImage imageUrl={toToken?.logo_url} w=\"28px\" h=\"28px\" coinType={toToken ? toToken?.coin_type : ''} />\n            </HStack>\n          </HStack>\n          <VStack w=\"100%\" flexDir={dlmmApiPoolInfo?.isReverse ? 'column-reverse' : 'column'} gap=\"16px\">\n            <TokenCard loading={tvlLoading} token={dlmmApiPoolInfo?.tokenA} amount={tokenAAmount} amountUSD={tokenAAmountUSD} />\n            <TokenCard loading={tvlLoading} token={dlmmApiPoolInfo?.tokenB} amount={tokenBAmount} amountUSD={tokenBAmountUSD} />\n          </VStack>\n        </VStack>\n      </VStack>\n    </VStack>\n  )\n}\n\nexport default PoolInfo\n","import useDlmmGetAllBinWithPool from '@/hooks/dlmm/useDlmmGetAllBinWithPool'\nimport useDlmmLiquidityStore from '@/store/dlmm'\nimport { ChartBinItem, MaxBinRangeChartData } from '@/types/dlmm'\nimport { getMaxBinRangeData } from '@/utils/dlmm'\nimport useQueryParams from '@cetus/hooks/src/useQueryParams'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport { useSdk, useSdkStore } from '@cetus/sdk-factory'\nimport { isEmptyObj } from '@cetus/utils'\nimport { useDeepCompareEffect } from 'ahooks'\nimport { useEffect, useMemo, useState } from 'react'\n\nexport default function useDlmmPoolLiquidityDistribution(maxBinsLength?: number, direct?: boolean) {\n  const dlmmSdk = useSdk('dlmm')\n  const { dlmmApiPoolInfo, currentBinStep, currentPrice, dlmmContractPoolInfo } = useDlmmLiquidityStore()\n  const { isInitialized } = useSdkStore()\n  const [maxBinRangeData, setMaxBinRangeData] = useState<MaxBinRangeChartData>()\n  const { getBinsInfoByPool } = useDlmmGetAllBinWithPool()\n  const [poolAllBinObj, setPoolAllBinObj] = useState<Record<string, ChartBinItem>>({})\n  const { poolId } = useQueryParams()\n  const [isLoading, setIsLoading] = useState(true)\n\n  const { getTokenPrice } = useTokenPrice()\n\n  const tokenAPriceInfo = getTokenPrice(dlmmApiPoolInfo?.tokenA?.coin_type)\n  const tokenBPriceInfo = getTokenPrice(dlmmApiPoolInfo?.tokenB?.coin_type)\n\n  useEffect(() => {\n    if (isInitialized && dlmmContractPoolInfo?.bin_manager?.bin_manager_handle && dlmmApiPoolInfo?.id === dlmmContractPoolInfo?.id) {\n      setIsLoading(true)\n      getBinsInfoByPool(\n        {\n          pool_id: dlmmContractPoolInfo!.id,\n          coin_type_a: dlmmContractPoolInfo!.coin_type_a,\n          coin_type_b: dlmmContractPoolInfo!.coin_type_b\n        },\n        dlmmApiPoolInfo?.tokenA?.decimals,\n        dlmmApiPoolInfo?.tokenB?.decimals\n      )\n        .then(res => {\n          setPoolAllBinObj(res.allBinObj)\n        })\n        .finally(() => {\n          setIsLoading(false)\n        })\n    }\n  }, [dlmmApiPoolInfo?.id, isInitialized, dlmmContractPoolInfo?.id])\n\n  useDeepCompareEffect(() => {\n    if (\n      dlmmContractPoolInfo?.activeId !== undefined &&\n      dlmmContractPoolInfo?.id &&\n      dlmmApiPoolInfo?.poolId === dlmmContractPoolInfo?.poolAddress &&\n      !isEmptyObj(poolAllBinObj)\n    ) {\n      const list = getMaxBinRangeData({\n        activeBin: dlmmContractPoolInfo?.activeId,\n        allBins: poolAllBinObj,\n        binStep: dlmmContractPoolInfo?.binStep,\n        baseToken: dlmmApiPoolInfo?.tokenA,\n        quoteToken: dlmmApiPoolInfo?.tokenB,\n        maxBinsLength,\n        direct: dlmmApiPoolInfo?.isReverse !== direct\n      })\n      console.log('0829###🚀 ~ useDlmmPoolLiquidityDistribution ~ list:', list)\n      setMaxBinRangeData(list)\n    }\n  }, [dlmmContractPoolInfo?.activeId, dlmmApiPoolInfo, poolAllBinObj, maxBinsLength, direct])\n\n  const activeBin = useMemo(() => {\n    return dlmmContractPoolInfo?.activeId\n  }, [dlmmContractPoolInfo?.activeId])\n\n  const allBinsLength = useMemo(() => {\n    return Object.keys(poolAllBinObj).length\n  }, [poolAllBinObj])\n\n  return {\n    activeBin,\n    maxBinRangeData,\n    allBinsLength,\n    isLoading,\n    tokenAPrice: tokenAPriceInfo?.price,\n    tokenBPrice: tokenBPriceInfo?.price\n  }\n}\n","import { DLMMPoolsIdRangePath } from '@/apis/path'\nimport useDlmmLiquidityStore from '@/store/dlmm'\nimport useDlmmDepositStore from '@/store/dlmm/dlmmDeposit'\nimport { isTrustedToken } from '@/utils'\nimport { getBaseFeeList } from '@/utils/dlmm'\nimport { dlmmDefaultFeeOptions } from '@cetus/design/src/components/common/feeSelect/config'\nimport { useFetch } from '@cetus/hooks'\nimport useQueryParams from '@cetus/hooks/src/useQueryParams'\nimport { useGetToken } from '@cetus/hooks/src/useToken'\nimport { Token } from '@cetus/types'\nimport { textEllipses } from '@cetus/utils'\nimport { BinUtils } from '@cetusprotocol/dlmm-sdk'\nimport { useCallback, useMemo } from 'react'\nimport useQuoteWhiteTokenList from '../create-pool/useQuoteWhiteTokenList'\nimport useGetDlmmRelatedPools from './useGetDlmmRelatedPools'\n\nfunction useGetDlmmPoolRelatedData() {\n  const { setCurrentPrice, dlmmApiPoolInfo } = useDlmmLiquidityStore()\n  const { quoteWhiteTokenList } = useQuoteWhiteTokenList()\n\n  const { getList, relatedPoolList } = useGetDlmmRelatedPools()\n  const { poolId } = useQueryParams()\n  const { getTokenInfo } = useGetToken()\n  const { fetchByApi } = useFetch()\n  const { setPriceRangeMap } = useDlmmDepositStore()\n  const fetchPriceRange = async (poolId: string, binStep: number, tokenA: Token, tokenB: Token) => {\n    try {\n      const res = await fetchByApi(DLMMPoolsIdRangePath, 'POST', { pools: [poolId] })\n      if (res && res?.data && res?.data?.list && res?.data?.list.length > 0) {\n        const rangesWithDateTypeMap = Object.fromEntries(\n          res?.data?.list[0]?.ranges?.map((item: any) => {\n            const min = BinUtils?.getPriceFromBinId(item?.min ?? 0, binStep, tokenA?.decimals, tokenB?.decimals)\n            const max = BinUtils?.getPriceFromBinId(item?.max ?? 0, binStep, tokenA?.decimals, tokenB?.decimals)\n            return [`${item?.type}-${poolId}`, [min, max]]\n          })\n        )\n        setPriceRangeMap(rangesWithDateTypeMap)\n        return {\n          rangesWithDateTypeMap\n        }\n      }\n      return {\n        rangesWithDateTypeMap: {}\n      }\n    } catch (error) {\n      console.error('Error in fetchPriceRange:', error)\n      setPriceRangeMap({})\n      return {\n        rangesWithDateTypeMap: {}\n      }\n    }\n  }\n\n  const getCurrentPrice = async (poolInfo: any) => {\n    if (poolInfo?.activeId !== undefined) {\n      let decimalsA, decimalsB\n      if (poolInfo?.tokenA) {\n        decimalsA = poolInfo?.tokenA?.decimals\n      } else {\n        const tokenAInfo = await getTokenInfo(poolInfo?.coinTypeA)\n        decimalsA = tokenAInfo?.decimals\n      }\n      if (poolInfo?.tokenB) {\n        decimalsB = poolInfo?.tokenB?.decimals\n      } else {\n        const tokenBInfo = await getTokenInfo(poolInfo?.coinTypeB)\n        decimalsB = tokenBInfo?.decimals\n      }\n\n      const _price = BinUtils?.getPriceFromBinId(poolInfo?.activeId, poolInfo?.binStep, decimalsA, decimalsB)\n      setCurrentPrice(_price)\n    }\n  }\n\n  const getPerText = useCallback(\n    (direct?: boolean) => {\n      return direct\n        ? `${textEllipses(dlmmApiPoolInfo?.displayTokenB?.symbol, 8)} per ${textEllipses(dlmmApiPoolInfo?.displayTokenA?.symbol, 8)}`\n        : `${textEllipses(dlmmApiPoolInfo?.displayTokenA?.symbol, 8)} per ${textEllipses(dlmmApiPoolInfo?.displayTokenB?.symbol, 8)}`\n    },\n    [dlmmApiPoolInfo]\n  )\n\n  const baseFeeList = useMemo(() => {\n    const list = getBaseFeeList(relatedPoolList)\n    console.log(list, relatedPoolList, 'baseFeeList')\n    if (list) {\n      if (dlmmApiPoolInfo?.tokenA && dlmmApiPoolInfo?.tokenB) {\n        return dlmmDefaultFeeOptions?.map(item => {\n          const title = list.find(l => l.feeRate + '' === item.fee)?.title || item.title\n          return {\n            ...item,\n            title,\n            poolAddress: list.find(l => l.feeRate + '' === item.fee)?.poolAddress,\n            disabled:\n              title === 'Not Created' &&\n              !isTrustedToken(dlmmApiPoolInfo?.tokenA, quoteWhiteTokenList) &&\n              !isTrustedToken(dlmmApiPoolInfo?.tokenB, quoteWhiteTokenList)\n                ? true\n                : false\n          }\n        })\n      } else {\n        return dlmmDefaultFeeOptions?.map(item => {\n          const title = list.find(l => l.feeRate + '' === item.fee)?.title || item.title\n          return {\n            ...item,\n            title,\n            poolAddress: list.find(l => l.feeRate + '' === item.fee)?.poolAddress,\n            disabled:\n              !isTrustedToken(dlmmApiPoolInfo?.displayTokenA, quoteWhiteTokenList) &&\n              !isTrustedToken(dlmmApiPoolInfo?.displayTokenB, quoteWhiteTokenList)\n                ? true\n                : false\n          }\n        })\n      }\n    }\n  }, [\n    JSON.stringify(relatedPoolList),\n    JSON.stringify(quoteWhiteTokenList),\n    dlmmApiPoolInfo?.displayTokenA?.coin_type,\n    dlmmApiPoolInfo?.displayTokenB?.coin_type\n  ])\n  /**\n   * 获取当前池子的费率信息\n   * Get the current pool fee rate information\n   */\n\n  const currentBaseFee = useMemo(() => {\n    const _currentFeeTier = baseFeeList?.find(item => item.poolAddress === poolId)\n\n    if (_currentFeeTier) {\n      return _currentFeeTier\n    } else {\n      return dlmmApiPoolInfo\n    }\n  }, [JSON.stringify(baseFeeList), poolId, JSON.stringify(dlmmApiPoolInfo)])\n\n  return { getPerText, getCurrentPrice, getList, relatedPoolList, baseFeeList, currentBaseFee, fetchPriceRange }\n}\n\nexport default useGetDlmmPoolRelatedData\n","import CurrentLiquidityChart from '@/components/chart/dlmmChart/CurrentLiquidityChart'\nimport FunnelPrice from '@/components/common/FunnelPrice'\nimport ActionButton from '@/components/liquidity/common/ActionButton'\nimport { Legend } from '@/components/pools/createPool/depositAmount/DLMMDepositAmount'\nimport useDlmmPoolLiquidityDistribution from '@/hooks/dlmm/useDlmmPoolLiquidityDistribution'\nimport useGetDlmmPoolRelatedData from '@/hooks/dlmm/useGetDlmmPoolRelatedData'\nimport useDlmmLiquidityStore from '@/store/dlmm'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { d, formatPrice, removeComma, textEllipses } from '@cetus/utils'\nimport { Center, Heading, HStack, Spinner, VStack } from '@chakra-ui/react'\nimport { useEffect, useMemo, useState } from 'react'\nfunction PoolLiquidityDistribution({ priceDirect }: { priceDirect: boolean }) {\n  const { currentPrice, reverseCurrentPrice, dlmmApiPoolInfo } = useDlmmLiquidityStore()\n  const { getPerText } = useGetDlmmPoolRelatedData()\n  const [maxBinsLength, setMaxBinsLength] = useState(251)\n  const { activeBin, maxBinRangeData, isLoading, tokenAPrice, tokenBPrice, allBinsLength } = useDlmmPoolLiquidityDistribution(\n    maxBinsLength,\n    priceDirect\n  )\n\n  const { windowWidth, isApp } = useWindowWidth()\n\n  useEffect(() => {\n    setMaxBinsLength(isApp ? 61 : 251)\n  }, [isApp])\n\n  const width = useMemo(() => {\n    if (windowWidth < 810) {\n      return windowWidth - 60\n    }\n    return 1118\n  }, [windowWidth])\n\n  const handleAdd = () => {\n    if (maxBinsLength <= 19) return\n    const newLength = Math.max(Math.min(maxBinsLength, allBinsLength) - 8, 19)\n    setMaxBinsLength(newLength)\n  }\n\n  const handleSub = () => {\n    if (maxBinsLength >= allBinsLength) return\n    const newLength = Math.min(maxBinsLength + 8, allBinsLength)\n    setMaxBinsLength(newLength)\n    setMaxBinsLength(pre => pre + 8)\n  }\n\n  const isReverse = dlmmApiPoolInfo?.isReverse || false\n\n  const displayPrice = useMemo(() => {\n    const fromValue = 1\n    const toValue = removeComma((dlmmApiPoolInfo?.isReverse ? reverseCurrentPrice : currentPrice).toString())\n    if (priceDirect && toValue && fromValue) {\n      return formatPrice(d(toValue).div(fromValue).toString())\n    }\n    if (!priceDirect && toValue && fromValue) {\n      return formatPrice(d(fromValue).div(toValue).toString())\n    }\n    return ''\n  }, [priceDirect, dlmmApiPoolInfo?.id, currentPrice])\n\n  return (\n    <VStack\n      w=\"100%\"\n      gap={{ base: '20px', lg: '40px' }}\n      p={{ base: '8px', lg: '20px' }}\n      borderRadius=\"16px\"\n      border=\"1px solid\"\n      borderColor=\"border\"\n      bg=\"bg_secondary\"\n    >\n      <VStack gap=\"20px\" w=\"100%\">\n        {isApp ? (\n          <>\n            <HStack w=\"100%\" justify=\"space-between\">\n              <Heading fontSize=\"16px\" fontWeight=\"400\">\n                Pool Liquidity Distribution\n              </Heading>\n              <HStack>\n                <ActionButton\n                  type=\"Sub\"\n                  onClick={handleSub}\n                  disabled={maxBinsLength >= allBinsLength}\n                  wrapStyle={{ minW: '24px', w: '24px', h: '24px' }}\n                />\n                <ActionButton type=\"Add\" onClick={handleAdd} disabled={maxBinsLength <= 19} wrapStyle={{ minW: '24px', w: '24px', h: '24px' }} />\n              </HStack>\n            </HStack>\n            <HStack gap=\"16px\">\n              <Legend symbol={textEllipses(dlmmApiPoolInfo?.displayTokenA?.symbol || '', 8)} color=\"dlmm_blue\" />\n              <Legend symbol={textEllipses(dlmmApiPoolInfo?.displayTokenB?.symbol || '', 8)} color=\"dlmm_green\" />\n            </HStack>\n            <FunnelPrice price={displayPrice} perText={getPerText(priceDirect)} />\n          </>\n        ) : (\n          <HStack w=\"100%\" justify=\"space-between\">\n            <Heading fontSize=\"16px\" fontWeight=\"400\">\n              Pool Liquidity Distribution\n            </Heading>\n            <HStack gap=\"40px\">\n              <HStack gap=\"16px\">\n                <FunnelPrice price={displayPrice} perText={getPerText(priceDirect)} />\n                <Legend symbol={textEllipses(dlmmApiPoolInfo?.displayTokenA?.symbol || '', 8)} color=\"dlmm_blue\" />\n                <Legend symbol={textEllipses(dlmmApiPoolInfo?.displayTokenB?.symbol || '', 8)} color=\"dlmm_green\" />\n              </HStack>\n              <HStack>\n                <ActionButton type=\"Sub\" onClick={handleSub} disabled={maxBinsLength >= allBinsLength} />\n                <ActionButton type=\"Add\" onClick={handleAdd} disabled={maxBinsLength <= 19} />\n              </HStack>\n            </HStack>\n          </HStack>\n        )}\n\n        {activeBin !== undefined &&\n          (isLoading && maxBinRangeData === undefined ? (\n            <Center h=\"160px\">\n              <Spinner />\n            </Center>\n          ) : (\n            <CurrentLiquidityChart\n              type=\"simulation\"\n              data={maxBinRangeData}\n              activeBin={Number(activeBin)}\n              width={width}\n              height={160}\n              noDataText=\"No Liquidity Data\"\n              isReverse={isReverse || false}\n              tokenAPrice={tokenAPrice}\n              tokenBPrice={tokenBPrice}\n            />\n          ))}\n      </VStack>\n    </VStack>\n  )\n}\n\nexport default PoolLiquidityDistribution\n","import { Stack, VStack } from '@chakra-ui/react'\nimport RecentTransaction from '../recentTransactions'\nimport AnalyticsCharts from './AnalyticsCharts'\nimport BinsTradingVolume from './BinsTradingVolume'\nimport PoolInfo from './PoolInfo'\nimport PoolLiquidityDistribution from './PoolLiquidityDistribution'\n\nfunction PoolsAnalytics({ priceDirect }: { priceDirect: boolean }) {\n  return (\n    <VStack w=\"100%\" gap=\"16px\" minW={{ base: '100%', lg: '1024px' }}>\n      <Stack flexDir={{ base: 'column', lg: 'row' }} w=\"100%\" gap=\"16px\">\n        <AnalyticsCharts />\n        <PoolInfo />\n      </Stack>\n      <PoolLiquidityDistribution priceDirect={priceDirect} />\n      <BinsTradingVolume priceDirect={priceDirect} />\n      <RecentTransaction />\n    </VStack>\n  )\n}\n\nexport default PoolsAnalytics\n","import PoolTag from '@/components/common/PoolTag'\nimport TotalAmount from '@/components/common/TotalAmount'\nimport PositionStatus from '@/components/position/common/PositionStatus'\nimport useDlmmLiquidityStore from '@/store/dlmm'\nimport useAddDlmmLiquidityStore from '@/store/dlmm/addDlmmLiquidity'\nimport { TradeConfirmAmountInfo } from '@cetus/design'\nimport useNotifiStore from '@cetus/stores/src/notifi'\nimport { Token } from '@cetus/types'\nimport { CoinPairImage, Icon } from '@cetus/ui-kit'\nimport { d, formatPrice, textEllipses } from '@cetus/utils'\nimport {\n  Box,\n  Button,\n  Divider,\n  Heading,\n  HStack,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n  Text,\n  VStack\n} from '@chakra-ui/react'\nimport { debounce } from 'lodash-es'\nimport { useMemo, useState } from 'react'\n\ntype DLMMAddLiquidityConfirmModalProps = {\n  onClose: () => void\n  onSubmit: () => void\n  data: {\n    baseFeeDisplay?: string\n  }\n  isReverse?: boolean\n  isDirect: boolean\n}\n\nexport default function DLMMAddLiquidityConfirmModal(props: DLMMAddLiquidityConfirmModalProps) {\n  const {\n    onClose,\n    onSubmit,\n    data: { baseFeeDisplay },\n    isReverse = false,\n    isDirect\n  } = props\n  const { fromToken, toToken, fromAmount, toAmount, byAmountIn, totalAmount, fromTokenLock, toTokenLock, minPriceData, maxPriceData, positionCount } =\n    useAddDlmmLiquidityStore()\n  const { dlmmApiPoolInfo, currentPrice, dlmmContractPoolInfo } = useDlmmLiquidityStore()\n\n  const { setIsChecked } = useNotifiStore()\n  const [direct, setDirect] = useState(isDirect)\n\n  const perText = useMemo(() => {\n    return direct\n      ? `${textEllipses(dlmmApiPoolInfo?.displayTokenB?.symbol, 10)} per ${textEllipses(dlmmApiPoolInfo?.displayTokenA?.symbol, 10)}`\n      : `${textEllipses(dlmmApiPoolInfo?.displayTokenA?.symbol, 10)} per ${textEllipses(dlmmApiPoolInfo?.displayTokenB?.symbol)}`\n  }, [direct, dlmmApiPoolInfo?.displayTokenA?.symbol, dlmmApiPoolInfo?.displayTokenB?.symbol])\n\n  const onOk = debounce(\n    () => {\n      onSubmit()\n      onClose()\n    },\n    1000,\n    {\n      leading: true,\n      trailing: false\n    }\n  )\n\n  const { notifiStatus } = useNotifiStore()\n\n  const isActive = useMemo(() => {\n    if (minPriceData?.binId !== undefined && maxPriceData?.binId !== undefined && dlmmContractPoolInfo?.active_id !== undefined) {\n      if (minPriceData?.binId <= dlmmContractPoolInfo?.active_id && maxPriceData?.binId >= dlmmContractPoolInfo?.active_id) {\n        return true\n      }\n    }\n    return false\n  }, [minPriceData?.binId, maxPriceData?.binId, dlmmContractPoolInfo?.active_id])\n\n  return (\n    <Modal\n      isOpen={true}\n      onClose={() => {\n        onClose()\n        setIsChecked(false)\n      }}\n      isCentered\n    >\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>\n          <Heading fontWeight=\"500\" fontSize=\"16px\">\n            Add Liquidity\n          </Heading>\n        </ModalHeader>\n        <ModalCloseButton />\n        <ModalBody textAlign=\"center\" p=\"0px\">\n          <VStack w=\"100%\" gap=\"20px\" p=\"8px 16px\" pb=\"0px\">\n            <HStack w=\"100%\" justifyContent=\"space-between\" h=\"40px\">\n              <HStack>\n                <CoinPairImage\n                  coinACoinType={dlmmApiPoolInfo?.displayTokenA?.coin_type}\n                  coinBCoinType={dlmmApiPoolInfo?.displayTokenB?.coin_type}\n                  coinAIconUrl={dlmmApiPoolInfo?.displayTokenA?.logo_url}\n                  coinBIconUrl={dlmmApiPoolInfo?.displayTokenB?.logo_url}\n                  imageStyle={{\n                    w: '40px',\n                    h: '40px'\n                  }}\n                  imgBoxStyle={{\n                    w: '40px',\n                    h: '40px'\n                  }}\n                />\n                <Text fontSize=\"16px\" color=\"text_caption\" textAlign=\"left\">\n                  {`${textEllipses(dlmmApiPoolInfo?.displayTokenA?.symbol, 10)} - ${textEllipses(dlmmApiPoolInfo?.displayTokenB?.symbol, 10)}`}\n                </Text>\n              </HStack>\n              <PoolTag poolType=\"dlmm\" displayFee={baseFeeDisplay} binStep={dlmmContractPoolInfo?.binStep} />\n            </HStack>\n\n            {/* 交易数量展示 */}\n            <TradeConfirmAmountInfo\n              coinA={{\n                amount: fromAmount as string,\n                ...(fromToken as Token)\n              }}\n              coinB={{\n                amount: toAmount as string,\n                ...(toToken as Token)\n              }}\n            />\n            <Box w=\"100%\">\n              <HStack w=\"100%\" justify=\"space-between\" h=\"32px\">\n                <Text fontSize=\"16px\" fontWeight=\"500\" color=\"text_caption\">\n                  Selected Range\n                </Text>\n                <PositionStatus isActive={isActive} isRow imgStyle={{ imgW: '29px', imgH: '16px' }} w=\"105px\" h=\"32px\" />\n              </HStack>\n              <VStack gap=\"0\" border=\"1px solid\" bg=\"bg_secondary\" borderColor=\"border\" borderRadius=\"12px\" mt=\"8px\">\n                <HStack justify=\"center\" h=\"48px\" w=\"100%\" gap=\"4px\">\n                  <Text>Current Price</Text>\n                  <Text as=\"span\" color=\"text_caption\">\n                    {formatPrice(direct === isReverse ? d(1).div(currentPrice).toString() : currentPrice)}\n                  </Text>\n                  <Text>{perText}</Text>\n                  <Button variant=\"unstyled\" onClick={() => setDirect(!direct)}>\n                    <Icon xlinkHref=\"#icon-icon_swap1\" />\n                  </Button>\n                </HStack>\n                <Box h=\"1px\" w=\"calc(100% - 32px)\" p=\"0 12px\" bg=\"border\" />\n                <HStack w=\"100%\" h=\"100px\">\n                  <PriceItem\n                    title=\"Min Price\"\n                    price={formatPrice(direct === isReverse ? maxPriceData?.reversePrice : minPriceData?.price)}\n                    perText={perText}\n                  />\n                  <Divider orientation=\"vertical\" h=\"40px\" />\n                  <PriceItem\n                    title=\"Max Price\"\n                    price={formatPrice(direct === isReverse ? minPriceData?.reversePrice : maxPriceData?.price)}\n                    perText={perText}\n                  />\n                </HStack>\n              </VStack>\n            </Box>\n\n            {/* <HTextLabelBox label=\"Position\" value={positionCount} labelStyle={{ fontSize: '14px' }} valueStyle={{ fontSize: '14px' }} /> */}\n            <TotalAmount loading={false} totalAmount={totalAmount} />\n            {/* \n            {!fromTokenLock && !toTokenLock && !(minPriceData?.price === '0' && maxPriceData?.price === '∞') && notifiStatus == 'authenticated' && (\n              <RangeAlerts\n                subscriptionSource=\"AddLiquidity\"\n                title=\"Range alerts for this position\"\n                description=\"Subscribe to receive alerts on email, SMS, or Telegram when the price for this pool moves out of your selected range.\"\n                wrapStyle={{\n                  bg: 'bg_secondary',\n                  borderRadius: '12px'\n                }}\n              />\n            )} */}\n            <Button w=\"calc(100% + 32px)\" bottom=\"0px\" mt=\"4px\" h=\"52px\" borderRadius=\"12px\" fontSize=\"16px\" fontWeight=\"500\" onClick={onOk}>\n              Add Liquidity\n            </Button>\n          </VStack>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  )\n}\n\nconst PriceItem = ({ title, price, perText }: { title: string; price: string; perText: string }) => {\n  return (\n    <VStack flex=\"1\">\n      <Text>{title}</Text>\n      <Text color=\"text_caption\">{price}</Text>\n      <Text>{perText}</Text>\n    </VStack>\n  )\n}\n","export const DLMM_MAX_BIN_NUMBER = 1000\n","import useDlmmLiquidityStore from '@/store/dlmm'\nimport useAddDlmmLiquidityStore from '@/store/dlmm/addDlmmLiquidity'\nimport { DLMMPoolApiInfo } from '@/types'\nimport { getRelatedDisplayChartPrice } from '@/utils/dlmm'\nimport { Token } from '@cetus/types'\nimport { d } from '@cetus/utils'\nimport { BinUtils } from '@cetusprotocol/dlmm-sdk'\nimport { useCallback } from 'react'\nimport useCreatePriceBin from './useCreatePriceBin'\n\nfunction useInitDlmmPoolPriceRange() {\n  const { getDefaultBinPriceAndId } = useCreatePriceBin()\n  const { currentBinStep, currentPrice, dlmmApiPoolInfo, dlmmContractPoolInfo } = useDlmmLiquidityStore()\n  const { setMaxPriceData, setMinPriceData, maxPriceData, minPriceData } = useAddDlmmLiquidityStore()\n\n  const initPriceRange = useCallback(\n    (lower_bin_id: number, upper_bin_id: number, binStep: number, tokenA: Token, tokenB: Token, isUserChange = false) => {\n      if (!tokenA || !tokenB || !binStep || lower_bin_id === undefined || upper_bin_id === undefined) return\n      const lower_price = BinUtils.getPriceFromBinId(lower_bin_id, binStep, tokenA?.decimals, tokenB?.decimals)\n      const upper_price = BinUtils.getPriceFromBinId(upper_bin_id, binStep, tokenA?.decimals, tokenB?.decimals)\n      const [displayUpperPrice, reverseUpperPrice, displayReverseUpperPrice] = getRelatedDisplayChartPrice(upper_price)\n\n      setMaxPriceData({\n        tokenA: tokenA!,\n        tokenB: tokenB!,\n        binId: upper_bin_id,\n        price: upper_price,\n        displayPrice: displayUpperPrice,\n        reversePrice: reverseUpperPrice,\n        displayReversePrice: displayReverseUpperPrice,\n        type: 'upper',\n        triggerFrom: 'init',\n        actionSource: isUserChange ? 'user' : 'system'\n      })\n\n      const [displayLowerPrice, reverseLowerPrice, displayReverseLowerPrice] = getRelatedDisplayChartPrice(lower_price)\n\n      setMinPriceData({\n        tokenA: tokenA!,\n        tokenB: tokenB!,\n        binId: lower_bin_id,\n        price: lower_price,\n        displayPrice: displayLowerPrice,\n        reversePrice: reverseLowerPrice,\n        displayReversePrice: displayReverseLowerPrice,\n        type: 'lower',\n        triggerFrom: 'init',\n        actionSource: isUserChange ? 'user' : 'system'\n      })\n    },\n    []\n  )\n\n  const handleInitPriceRange = useCallback(\n    (poolInfo?: DLMMPoolApiInfo, price?: string, forceRefresh = false) => {\n      if (minPriceData !== null && maxPriceData !== null && !forceRefresh) {\n        return\n      }\n\n      const _binStep = poolInfo?.binStep ?? currentBinStep\n      const _price = price ?? currentPrice\n      const decimalA = poolInfo?.tokenA?.decimals ?? dlmmApiPoolInfo?.tokenA?.decimals\n      const decimalB = poolInfo?.tokenB?.decimals ?? dlmmApiPoolInfo?.tokenB?.decimals\n      const activeId = poolInfo?.activeId ?? dlmmContractPoolInfo?.activeId\n      const tokenA = poolInfo?.tokenA || dlmmApiPoolInfo?.tokenA\n      const tokenB = poolInfo?.tokenB || dlmmApiPoolInfo?.tokenB\n      if (_binStep && d(_price).gt(0) && tokenA && tokenB && activeId !== undefined) {\n        const { lower_bin_id, upper_bin_id, lower_price, upper_price } = getDefaultBinPriceAndId(_binStep as number, activeId, decimalA, decimalB)\n\n        initPriceRange(lower_bin_id, upper_bin_id, _binStep as number, tokenA!, tokenB!, true)\n      }\n    },\n    [currentBinStep, dlmmApiPoolInfo?.tokenA?.coinType, dlmmApiPoolInfo?.tokenB?.coinType, currentPrice, dlmmContractPoolInfo?.activeId]\n  )\n  return { handleInitPriceRange, initPriceRange }\n}\n\nexport default useInitDlmmPoolPriceRange\n","import { DLMM_MAX_BIN_NUMBER } from '@/constant/dlmm'\nimport useTransaction from '@/hooks/common/useTransaction'\nimport useGlobalStore from '@/store/common/global'\nimport useDlmmLiquidityStore from '@/store/dlmm'\nimport useDlmmPosDetailStore from '@/store/dlmm-position/detail'\nimport useAddDlmmLiquidityStore from '@/store/dlmm/addDlmmLiquidity'\nimport { formatDescription } from '@/utils'\nimport { defaultBinsNum, getBatchBinInfo } from '@/utils/dlmm'\nimport { useAccountBalance } from '@cetus/hooks'\nimport { useGetTokenBalance } from '@cetus/hooks/src/useTokenBalance'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport useTransactionModal from '@cetus/hooks/src/useTransactionModal'\nimport { useSdk } from '@cetus/sdk-factory'\nimport { useAccountStore } from '@cetus/stores'\nimport useNotifiStore from '@cetus/stores/src/notifi'\nimport { BalanceChanges, CommonTypeInfo, ToastType, TransactionStatusType } from '@cetus/types'\nimport { amountToBN, d, getBalanceChanges, isAvailableObject, parsePositionIdFromEvent } from '@cetus/utils'\nimport { BinLiquidityInfo, BinUtils, OpenAndAddLiquidityOption } from '@cetusprotocol/dlmm-sdk'\nimport { useDebounceEffect, useDeepCompareEffect } from 'ahooks'\nimport { debounce } from 'lodash-es'\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport { v4 } from 'uuid'\nimport useNotifiSubscription from '../notifi/useNotifiSubscription'\nimport useCreatePriceBin from './useCreatePriceBin'\nimport useDlmmPreCalc from './useDlmmPreCalc'\nimport useInitDlmmPoolPriceRange from './useInitDlmmPoolPriceRange'\ninterface DebouncedPreAddProps {\n  amount?: string | number\n  isTokenA: boolean\n  isFullRange: boolean\n}\n\nfunction useAddDlmmLiquidity(getList: () => Promise<void>, direct?: boolean) {\n  const [submitLoading, setSubmitLoading] = useState<boolean>(false)\n  const [preCalcLoading, setPreCalcLoading] = useState<boolean>(false)\n  const { getDefaultBinPriceAndId } = useCreatePriceBin()\n  const { dlmmApiPoolInfo, currentBinStep, isAutoFill, setIsAutoFill, setCurrentBinStep, strategy, currentPrice, dlmmContractPoolInfo } =\n    useDlmmLiquidityStore()\n  const { signAndExecuteTransaction, batchSignAndExecuteTransaction, getTransactionStatus, transactionSuccess, handleError } = useTransaction()\n  const { dlmmMevProtect, maxCapForGas, transactionMode, customGasPrice, liquiditySlippage } = useGlobalStore()\n  const { transactionConfirmation } = useTransactionModal()\n  const { setBinInfos } = useDlmmPosDetailStore()\n\n  const preCalcUuidRef = useRef<string>('')\n\n  const {\n    fromAmount,\n    setFromAmount,\n    fromAmountValue,\n    setFromAmountValue,\n    toAmount,\n    setToAmount,\n    toAmountValue,\n    setToAmountValue,\n    byAmountIn,\n    setByAmountIn,\n    isTokenA,\n    setIsTokenA,\n    fromToken,\n    setFromToken,\n    toToken,\n    setToToken,\n    totalAmount,\n    setTotalAmount,\n    fromTokenLock,\n    setFromTokenLock,\n    toTokenLock,\n    setToTokenLock,\n    setTokenMaxA,\n    setTokenMaxB,\n    tokenMaxA,\n    tokenMaxB,\n    liquidityAmount,\n    setLiquidityAmount,\n    confirmModalOpen,\n    setConfirmModalOpen,\n    nftOpen,\n    setNftOpen,\n    relatedPosId,\n    setRelatedPosId,\n    minPriceData,\n    maxPriceData,\n    setMaxPriceData,\n    setMinPriceData,\n    addLiquidityInfo,\n    setAddLiquidityInfo,\n    setPreCalcError,\n    positionCount,\n    setPositionCount,\n    setNumBins,\n    numBins,\n    setBinIdRange,\n    resetAddLiquidity\n  } = useAddDlmmLiquidityStore()\n  const dlmmSdk = useSdk('dlmm')\n  const { getTokenAmountValue } = useTokenPrice()\n  const { getBinInfosByAutoFill, getNumBins } = useCreatePriceBin()\n  const { handleInitPriceRange, initPriceRange } = useInitDlmmPoolPriceRange()\n\n  useEffect(() => {\n    // 价格变动，不需要重新初始化区间\n    handleInitPriceRange(undefined, undefined, false)\n  }, [handleInitPriceRange])\n\n  // 获取最小最大binId\n  useEffect(() => {\n    if (dlmmApiPoolInfo?.binStep) {\n      const { minBinId, maxBinId } = BinUtils.findMinMaxBinId(Number(dlmmApiPoolInfo.binStep))\n      setBinIdRange({ minBinId, maxBinId })\n    }\n  }, [dlmmApiPoolInfo?.binStep])\n\n  useEffect(() => {\n    if (isAutoFill) {\n      handleInitPriceRange(undefined, undefined, true)\n    }\n  }, [isAutoFill])\n\n  useDeepCompareEffect(() => {\n    if (dlmmApiPoolInfo) {\n      setIsTokenA(dlmmApiPoolInfo?.displayTokenA?.coin_type === dlmmApiPoolInfo?.tokenA?.coin_type)\n    }\n  }, [dlmmApiPoolInfo])\n\n  const defaultBinIds = useMemo(() => {\n    if (currentBinStep && dlmmContractPoolInfo?.activeId !== undefined && dlmmApiPoolInfo?.tokenA && dlmmApiPoolInfo?.tokenB) {\n      return getDefaultBinPriceAndId(\n        currentBinStep!,\n        dlmmContractPoolInfo?.activeId,\n        dlmmApiPoolInfo?.tokenA?.decimals,\n        dlmmApiPoolInfo?.tokenB?.decimals\n      )\n    }\n    return undefined\n  }, [dlmmContractPoolInfo?.activeId, dlmmApiPoolInfo?.tokenA?.decimals, dlmmApiPoolInfo?.tokenB?.decimals, currentBinStep])\n\n  // notifi\n  const { notifiSubscription } = useNotifiSubscription()\n  const { isChecked } = useNotifiStore()\n\n  const handleAmountChange = useCallback(\n    async (value: string, _byAmountIn: boolean, _isTokenA?: boolean) => {\n      setByAmountIn(_byAmountIn)\n      if (!value && isAutoFill) {\n        if (_byAmountIn) {\n          setFromAmount(value)\n          setToAmount('')\n        } else {\n          setToAmount(value)\n          setFromAmount('')\n        }\n      } else {\n        if (_byAmountIn) {\n          setFromAmount(value)\n        } else {\n          setToAmount(value)\n        }\n      }\n\n      if (_isTokenA !== undefined) {\n        setIsTokenA(_isTokenA)\n      } else {\n        setIsTokenA(false)\n      }\n    },\n\n    [isAutoFill]\n  )\n\n  const { handleAutoFillPreAdd, handleNotAutoFillPreAdd } = useDlmmPreCalc()\n\n  const onDlmmNotAutoFillPreCalc = useCallback(async () => {\n    try {\n      if (!isAutoFill || (fromTokenLock && !toTokenLock) || (!fromTokenLock && toTokenLock)) {\n        setPreCalcLoading(true)\n        const coinAmountA =\n          (fromToken?.coin_type === dlmmApiPoolInfo?.tokenA?.coin_type\n            ? amountToBN(fromAmount, fromToken?.decimals).toString()\n            : amountToBN(toAmount, toToken?.decimals).toString()) || '0'\n        const coinAmountB =\n          (fromToken?.coin_type === dlmmApiPoolInfo?.tokenA?.coin_type\n            ? amountToBN(toAmount, toToken?.decimals).toString()\n            : amountToBN(fromAmount, fromToken?.decimals).toString()) || '0'\n\n        const isInputAmountA = d(coinAmountA).gt(0)\n        const isInputAmountB = d(coinAmountB).gt(0)\n\n        let lowerBinId = minPriceData!.binId\n        let upperBinId = maxPriceData!.binId\n        const activeId = dlmmContractPoolInfo?.activeId as number\n\n        // const isDefaultBinIds = maxPriceData?.actionSource === 'system' || minPriceData!.actionSource === 'system'\n        const isDefaultBinIds = maxPriceData?.actionSource === 'system' && minPriceData!.actionSource === 'system'\n\n        // console.log('onDlmmNotAutoFillPreCalc 1', {\n        //   minPriceData,\n        //   maxPriceData,\n        //   activeId,\n        //   lowerBinId,\n        //   upperBinId,\n        //   isInputAmountA,\n        //   isInputAmountB,\n        //   defaultBinIds,\n        //   isDefaultBinIds\n        // })\n\n        // 如果输入的是A，但是没有输入B，\n        if (isInputAmountA && !isInputAmountB) {\n          if (isDefaultBinIds && minPriceData!.binId < activeId) {\n            lowerBinId = activeId\n            upperBinId = activeId + defaultBinsNum - 2\n          }\n          // 如果输入的是B，但是没有输入A，\n        } else if (!isInputAmountA && isInputAmountB) {\n          if (isDefaultBinIds && maxPriceData!.binId > activeId) {\n            upperBinId = activeId\n            lowerBinId = upperBinId - defaultBinsNum + 2\n          }\n        } else {\n          // 如果输入的是A和B，\n          if (isDefaultBinIds) {\n            lowerBinId = defaultBinIds!.lower_bin_id\n            upperBinId = defaultBinIds!.upper_bin_id\n          }\n        }\n\n        if (lowerBinId !== minPriceData!.binId || upperBinId !== maxPriceData!.binId) {\n          initPriceRange(lowerBinId, upperBinId, dlmmContractPoolInfo?.binStep!, dlmmApiPoolInfo?.tokenA!, dlmmApiPoolInfo?.tokenB!, false)\n          return\n        }\n\n        if (Number(numBins) > DLMM_MAX_BIN_NUMBER || Number(numBins) < 1) {\n          setAddLiquidityInfo([])\n          return\n        }\n\n        const uuid = v4()\n        preCalcUuidRef.current = uuid\n\n        const res = await handleNotAutoFillPreAdd({\n          coinAmountA,\n          coinAmountB,\n          currentBinStep: dlmmContractPoolInfo?.binStep,\n          tokenA: dlmmApiPoolInfo?.tokenA,\n          tokenB: dlmmApiPoolInfo?.tokenB,\n          lowerBinId,\n          upperBinId,\n          strategyType: strategy,\n          activeId,\n          isReverse: dlmmApiPoolInfo?.isReverse,\n          pool: dlmmContractPoolInfo,\n          uuid\n        })\n        if (res?.uuid === preCalcUuidRef.current) {\n          const { totalAmount: totalValue, binInfos, coinAmountA, coinAmountB } = res\n          console.log(res, 'onDlmmNotAutoFillPreCalc 2')\n          if (binInfos) {\n            setAddLiquidityInfo(binInfos)\n            setPreCalcError(undefined)\n          }\n          setTotalAmount(totalValue)\n        }\n      }\n    } catch (error) {\n      console.log('onDlmmNotAutoFillPreCalc ~ error', error)\n      if (String(error).includes('is less than 1')) {\n        setPreCalcError('amountTooSmall')\n        setAddLiquidityInfo(null)\n      }\n    } finally {\n      setPreCalcLoading(false)\n    }\n  }, [\n    fromAmount,\n    toAmount,\n    byAmountIn,\n    dlmmApiPoolInfo,\n    isAutoFill,\n    strategy,\n    minPriceData?.binId,\n    maxPriceData?.binId,\n    fromToken,\n    toToken,\n    dlmmContractPoolInfo,\n    fromTokenLock,\n    toTokenLock\n  ])\n\n  useDebounceEffect(\n    () => {\n      if (defaultBinIds && (d(fromAmount).gt(0) || d(toAmount).gt(0)) && dlmmContractPoolInfo && dlmmApiPoolInfo) {\n        onDlmmNotAutoFillPreCalc()\n      } else {\n        setAddLiquidityInfo(null)\n        setPreCalcError(undefined)\n        setPreCalcLoading(false)\n        //  清空双边数量时，需要恢复默认\n        if (!isAutoFill) {\n          if (minPriceData) {\n            setMinPriceData({ ...minPriceData, actionSource: 'system' })\n          }\n          if (maxPriceData) {\n            setMaxPriceData({ ...maxPriceData, actionSource: 'system' })\n          }\n        }\n      }\n    },\n    [onDlmmNotAutoFillPreCalc],\n    { wait: 300 }\n  )\n\n  const onDlmmAutoFillPreCalc = useCallback(\n    async (amount: string) => {\n      if (isAutoFill && !fromTokenLock && !toTokenLock && dlmmContractPoolInfo && dlmmApiPoolInfo) {\n        setPreCalcLoading(true)\n        console.log('onDlmmAutoFillPreCalc ~ numBins', numBins, amount)\n        const fixAmountA =\n          byAmountIn && fromToken?.coin_type === dlmmApiPoolInfo?.tokenA?.coin_type\n            ? true\n            : !byAmountIn && toToken?.coin_type === dlmmApiPoolInfo?.tokenA?.coin_type\n              ? true\n              : false\n        if (d(amount).gt(0)) {\n          try {\n            if (Number(numBins) > DLMM_MAX_BIN_NUMBER || Number(numBins) < 1) {\n              setAddLiquidityInfo([])\n              return\n            }\n            const uuid = v4()\n            preCalcUuidRef.current = uuid\n            const res = await handleAutoFillPreAdd({\n              amount: fixAmountA\n                ? amountToBN(amount, dlmmApiPoolInfo?.tokenA?.decimals).toString()\n                : amountToBN(amount, dlmmApiPoolInfo?.tokenB?.decimals).toString(),\n              tokenA: dlmmApiPoolInfo?.tokenA,\n              tokenB: dlmmApiPoolInfo?.tokenB,\n              strategy,\n              isReverse: dlmmApiPoolInfo?.isReverse,\n              fixAmountA,\n              lowerBinId: minPriceData!.binId,\n              upperBinId: maxPriceData!.binId,\n              activeId: dlmmContractPoolInfo?.activeId,\n              currentBinStep: dlmmContractPoolInfo?.binStep,\n              pool: dlmmContractPoolInfo,\n              uuid\n            })\n            console.log('onDlmmAutoFillPreCalc ~ res', res)\n            if (res && res?.uuid === preCalcUuidRef.current) {\n              const { displayCoinAmountA, displayCoinAmountB, totalAmount: totalValue, binInfos, coinAmountA, coinAmountB } = res\n              if (binInfos) {\n                setAddLiquidityInfo(binInfos)\n                setPreCalcError(undefined)\n              }\n              if (byAmountIn) {\n                if (toToken?.coin_type === dlmmApiPoolInfo?.tokenB?.coin_type) {\n                  setToAmount(coinAmountB)\n                } else {\n                  setToAmount(coinAmountA)\n                }\n              } else {\n                if (fromToken?.coin_type === dlmmApiPoolInfo?.tokenA?.coin_type) {\n                  setFromAmount(coinAmountA)\n                } else {\n                  setFromAmount(coinAmountB)\n                }\n              }\n              setTotalAmount(totalValue)\n            }\n          } catch (error) {\n            console.log('onDlmmAutoFillPreCalc ~ error', error)\n            if (String(error).includes('is less than 1')) {\n              setPreCalcError('amountTooSmall')\n              setAddLiquidityInfo(null)\n              if (byAmountIn) {\n                setToAmount('')\n              } else {\n                setFromAmount('')\n              }\n              setTotalAmount('')\n            }\n            setPreCalcLoading(false)\n          }\n        } else {\n          setPreCalcLoading(false)\n          setPreCalcError(undefined)\n          if (byAmountIn) {\n            setToAmount('')\n          } else {\n            setFromAmount('')\n          }\n          setTotalAmount('')\n        }\n      }\n    },\n    [\n      isAutoFill,\n      fromToken,\n      toToken,\n      minPriceData,\n      maxPriceData,\n      strategy,\n      byAmountIn,\n      fromAmount,\n      toAmount,\n      dlmmApiPoolInfo,\n      fromTokenLock,\n      toTokenLock,\n      numBins,\n      dlmmContractPoolInfo?.activeId\n    ]\n  )\n\n  useEffect(() => {\n    if (d(fromAmount || '0').eq('0') && d(toAmount || '0').eq('0')) {\n      setAddLiquidityInfo(null)\n      setPreCalcLoading(false)\n    }\n  }, [fromAmount, toAmount])\n\n  useDebounceEffect(\n    () => {\n      if (byAmountIn) {\n        onDlmmAutoFillPreCalc(fromAmount)\n      }\n      if (!byAmountIn) {\n        onDlmmAutoFillPreCalc(toAmount)\n      }\n    },\n    [onDlmmAutoFillPreCalc],\n    { wait: 250 }\n  )\n\n  useEffect(() => {\n    if (isAvailableObject(minPriceData) && isAvailableObject(maxPriceData) && currentBinStep !== undefined) {\n      if (Number.isFinite(minPriceData?.binId) && Number.isFinite(maxPriceData?.binId) && d(maxPriceData!.binId).gte(minPriceData!.binId)) {\n        const count = BinUtils.getPositionCount(minPriceData!.binId, maxPriceData!.binId)\n        setPositionCount(count)\n        const num = getNumBins(minPriceData!.binId, maxPriceData!.binId)\n        setNumBins(num)\n      } else {\n        setPositionCount(0)\n        setNumBins(0)\n      }\n    }\n  }, [minPriceData?.binId, maxPriceData?.binId, currentBinStep])\n\n  const { balanceInfo: fromBalanceInfo } = useGetTokenBalance(fromToken)\n  const { balanceInfo: toBalanceInfo } = useGetTokenBalance(toToken)\n  const isReverse = useMemo(() => dlmmApiPoolInfo?.isReverse, [dlmmApiPoolInfo?.isReverse])\n\n  useDeepCompareEffect(() => {\n    if (byAmountIn) {\n      setIsTokenA(fromToken?.coin_type === dlmmApiPoolInfo?.tokenA?.coin_type)\n    } else {\n      setIsTokenA(toToken?.coin_type === dlmmApiPoolInfo?.tokenA?.coin_type)\n    }\n  }, [dlmmApiPoolInfo?.poolAddress, byAmountIn, fromToken, toToken])\n\n  const { currentAccount, onWalletModal } = useAccountStore()\n\n  const handleAdd = debounce(\n    () => {\n      if (!currentAccount) {\n        onWalletModal(true)\n      } else {\n        setConfirmModalOpen(true)\n      }\n    },\n    300,\n    { leading: true, trailing: false }\n  )\n\n  const resetInputAmount = () => {\n    setFromAmount('')\n    setToAmount('')\n    setFromAmountValue('')\n    setToAmountValue('')\n    setTotalAmount('')\n    setAddLiquidityInfo(null)\n  }\n\n  useEffect(() => {\n    if ((!fromAmount || !+fromAmount) && (!toAmount || !+toAmount)) {\n      setBinInfos({} as BinLiquidityInfo)\n    }\n  }, [fromAmount, toAmount])\n\n  const { fetchAccountBalance } = useAccountBalance()\n\n  const handleSubmit = async () => {\n    let TrackDataParams = []\n    try {\n      let toastInfo: ToastType\n      setSubmitLoading(true)\n      // const inputAmount = byAmountIn ? fromAmount : toAmount\n      // const tokenDecimals = byAmountIn ? fromToken!.decimals : toToken!.decimals\n      // const amount = d(inputAmount).mul(Decimal.pow(10, tokenDecimals)).toString()\n\n      // const fixAmountA =\n      //   byAmountIn && fromToken?.coin_type === dlmmApiPoolInfo?.tokenA?.coinType\n      //     ? true\n      //     : toToken?.coin_type === dlmmApiPoolInfo?.tokenA?.coinType && !byAmountIn\n      //       ? true\n      //       : false\n      // const amount_a = d(fromAmount).mul(Decimal.pow(10, tokenDecimals)).toString()\n      // const amount_b = d(toAmount).mul(Decimal.pow(10, tokenDecimals)).toString()\n\n      const lower_bin_id = minPriceData!.binId\n      const upper_bin_id = maxPriceData!.binId\n\n      const txs: any[] = []\n      const bins = addLiquidityInfo?.bins\n\n      if (bins && bins?.length > 1000) {\n        // 如果bins数量超过1000，分批处理\n        const batchSize = 1000\n        const totalBatches = Math.ceil(bins?.length / batchSize)\n        for (let i = 0; i < totalBatches; i++) {\n          const batchBinInfo = getBatchBinInfo(bins, i, batchSize)\n          const addOption: OpenAndAddLiquidityOption = {\n            pool_id: dlmmApiPoolInfo?.poolId,\n            bin_infos: batchBinInfo!,\n            coin_type_a: dlmmApiPoolInfo?.tokenA?.coinType,\n            coin_type_b: dlmmApiPoolInfo?.tokenB?.coinType,\n            lower_bin_id,\n            upper_bin_id,\n            active_id: dlmmContractPoolInfo?.activeId,\n            strategy_type: strategy,\n            max_price_slippage: liquiditySlippage,\n            bin_step: dlmmContractPoolInfo?.binStep,\n            use_bin_infos: false\n          }\n\n          const tx = dlmmSdk?.Position.addLiquidityPayload(addOption)\n          txs.push(tx)\n          const { bin_infos, ...trackData } = addOption\n          TrackDataParams.push(trackData)\n        }\n      } else {\n        const addOption: OpenAndAddLiquidityOption = {\n          pool_id: dlmmApiPoolInfo?.poolId,\n          bin_infos: addLiquidityInfo!,\n          coin_type_a: dlmmApiPoolInfo?.tokenA?.coinType,\n          coin_type_b: dlmmApiPoolInfo?.tokenB?.coinType,\n          lower_bin_id,\n          upper_bin_id,\n          active_id: dlmmContractPoolInfo?.activeId,\n          strategy_type: strategy,\n          max_price_slippage: liquiditySlippage,\n          bin_step: dlmmContractPoolInfo?.binStep,\n          use_bin_infos: false\n        }\n\n        const tx = dlmmSdk?.Position.addLiquidityPayload(addOption)\n        txs.push(tx)\n        const { bin_infos, ...trackData } = addOption\n        TrackDataParams.push(trackData)\n      }\n\n      toastInfo = {\n        actionType: 'dlmmAddLiquidityBatch',\n        getShowInfo: (status: TransactionStatusType, balanceChanges?: Record<string, BalanceChanges>, _: any, otherParams?: any) => {\n          const description =\n            'Add ' + [formatDescription(fromAmount, fromToken?.symbol), formatDescription(toAmount, toToken?.symbol)].filter(Boolean).join(' and ')\n\n          const info: CommonTypeInfo = {\n            modalDescriptionText: description,\n            toastTitleText: description\n          }\n\n          const isPartialSuccess = otherParams?.failedResults && otherParams.failedResults.length > 0 && otherParams.successResults.length > 0\n          if (status === 'rejected') {\n            if (isPartialSuccess) {\n              if (otherParams.failedResults.length > 0) {\n                info.toastDescriptionContent = `Failed transactions ${otherParams.failedResults.length} /${txs.length} `\n              }\n            }\n          }\n\n          if (status === 'success') {\n            let amountAF = fromAmount\n            let amountBF = toAmount\n\n            if (balanceChanges) {\n              amountAF = getBalanceChanges(balanceChanges, fromToken) || fromAmount\n              amountBF = getBalanceChanges(balanceChanges, toToken) || toAmount\n            }\n            const description =\n              'Add ' + [formatDescription(amountAF, fromToken?.symbol), formatDescription(amountBF, toToken?.symbol)].filter(Boolean).join(' and ')\n\n            if (txs.length > 1) {\n              info.toastDescriptionContent = `Completed transactions ${txs.length} /${txs.length} `\n            } else {\n              info.toastDescriptionContent = description\n            }\n            info.modalDescriptionText = description\n            info.toastTitleText = 'Supplied Successful'\n          }\n\n          return info\n        }\n      }\n\n      if (txs.length === 1) {\n        transactionConfirmation(toastInfo)\n      }\n\n      let res = await batchSignAndExecuteTransaction(txs, toastInfo, {\n        useDevInspect: true,\n        useMev: dlmmMevProtect,\n        showSuccessModal: false,\n        //  useFastMode: transactionMode === 'Fast Mode',\n        maxCapForGas,\n        customGasPrice,\n        trackData: {\n          params: TrackDataParams,\n          actionType: 'dlmm',\n          action: 'dlmmAddLiquidity'\n        }\n      })\n      console.log('0923### dlmm add 🚀 ~ handleSubmit ~ res:', res)\n      console.log('0923### dlmm add 🚀 ~ handleSubmit ~ TrackDataParams:', TrackDataParams)\n      console.log(res, 'signAndExecuteTransaction')\n      if (res && res?.successResults?.length > 0) {\n        if (txs.length === 1) {\n          let response = res.successResults[0]!.response!\n          if (response?.events?.length === 0) {\n            response = await getTransactionStatus(response.digest)\n          }\n          const { posId, farmsPosId } = parsePositionIdFromEvent(response)\n          console.log(res, posId, farmsPosId, 'signAndExecuteTransaction')\n          if (posId) {\n            setNftOpen(true)\n            if (farmsPosId) {\n              setRelatedPosId(farmsPosId)\n            } else {\n              setRelatedPosId(posId)\n            }\n          } else {\n            if (txs.length === 1) {\n              transactionSuccess(toastInfo)\n            }\n          }\n        }\n\n        if (isChecked) {\n          // const params = { subscriptionSource: 'AddLiquidity', events: res.events }\n          // notifiSubscription(params)\n        }\n        // 重新拿数据\n        fetchAccountBalance()\n        resetInputAmount()\n        getList()\n        setSubmitLoading(false)\n      }\n    } catch (error) {\n      console.error(error, 'handleSubmit ~ error')\n      const errorLowerString = String(error).toLocaleLowerCase()\n      setSubmitLoading(false)\n      throw error\n    } finally {\n      setSubmitLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    if (isAvailableObject(dlmmContractPoolInfo) && isAvailableObject(minPriceData) && isAvailableObject(maxPriceData)) {\n      const minId = minPriceData!.binId\n      const maxId = maxPriceData!.binId\n      const activeId = dlmmContractPoolInfo?.activeId\n      if (d(minId).gt(maxId)) {\n        setFromTokenLock(true)\n        setToTokenLock(true)\n      } else {\n        if (d(minId).gt(activeId)) {\n          if (isReverse) {\n            setFromTokenLock(!!direct)\n            setToTokenLock(!direct)\n          } else {\n            setFromTokenLock(!direct)\n            setToTokenLock(!!direct)\n          }\n        } else if (d(maxId).lt(activeId)) {\n          // todo 最大id可以等于activeId时\n          if (isReverse) {\n            setFromTokenLock(!direct)\n            setToTokenLock(!!direct)\n          } else {\n            setFromTokenLock(!!direct)\n            setToTokenLock(!direct)\n          }\n        } else {\n          setFromTokenLock(false)\n          setToTokenLock(false)\n        }\n      }\n    }\n  }, [minPriceData?.binId, maxPriceData?.binId, currentPrice, dlmmContractPoolInfo?.activeId, direct, isReverse])\n\n  return {\n    handleAmountChange,\n    fromToken,\n    setFromToken,\n    toToken,\n    setToToken,\n    byAmountIn,\n    setByAmountIn,\n    fromAmount,\n    fromAmountValue,\n    setFromAmount,\n    toAmount,\n    toAmountValue,\n    setToAmount,\n    liquidityAmount,\n    fromBalanceInfo,\n    toBalanceInfo,\n    totalAmount,\n    fromTokenLock,\n    toTokenLock,\n    handleAdd,\n    confirmModalOpen,\n    setConfirmModalOpen,\n    nftOpen,\n    setNftOpen,\n    relatedPosId,\n    handleSubmit,\n    submitLoading,\n    positionCount,\n    isReverse,\n    preCalcLoading\n  }\n}\n\nexport default useAddDlmmLiquidity\n","import { DLMM_MAX_BIN_NUMBER } from '@/constant/dlmm'\nimport useDlmmLiquidityStore from '@/store/dlmm'\nimport useAddDlmmLiquidityStore from '@/store/dlmm/addDlmmLiquidity'\nimport { useGetTokenBalance } from '@cetus/hooks/src/useTokenBalance'\nimport { useAccountStore } from '@cetus/stores'\nimport { d, textEllipses } from '@cetus/utils'\nimport { useMemo } from 'react'\n\nfunction useAddDlmmLiquidityButton() {\n  const { fromAmount, toAmount, fromToken, toToken, fromTokenLock, toTokenLock, liquidityAmount, numBins, addLiquidityInfo, preCalcError } =\n    useAddDlmmLiquidityStore()\n  const { currentAccount } = useAccountStore()\n  const { isAutoFill } = useDlmmLiquidityStore()\n  const { balanceInfo: fromBalanceInfo } = useGetTokenBalance(fromToken)\n  const { balanceInfo: toBalanceInfo } = useGetTokenBalance(toToken)\n\n  const submitBtnInfo = useMemo(() => {\n    const btnInfo: {\n      text?: string\n      disabled: boolean\n    } = {\n      text: 'Add Liquidity',\n      disabled: false\n    }\n\n    // 判断钱包\n    if (!currentAccount?.address) {\n      btnInfo.text = 'Connect Wallet'\n      btnInfo.disabled = false\n      return btnInfo\n    }\n\n    // 判断numBins\n    if (!numBins || +numBins > DLMM_MAX_BIN_NUMBER) {\n      btnInfo.disabled = true\n      return btnInfo\n    }\n\n    if (!addLiquidityInfo?.bins || addLiquidityInfo.bins.length === 0) {\n      btnInfo.disabled = true\n      btnInfo.text = 'Enter an amount'\n      return btnInfo\n    }\n\n    if (preCalcError === 'amountTooSmall') {\n      btnInfo.disabled = true\n      return btnInfo\n    }\n    // 上面判断了addLiquidityInfo  则不用在判断fromAmount toAmount了\n    // if (isAutoFill) {\n    //   // 判断输入\n    //   if (!fromTokenLock && !toTokenLock && (!fromAmount || !toAmount || (fromAmount && !+fromAmount) || (toAmount && !+toAmount))) {\n    //     btnInfo.text = 'Enter an amount'\n    //     btnInfo.disabled = true\n    //     return btnInfo\n    //   }\n\n    //   if (!fromTokenLock && !toTokenLock && (!fromAmount || !toAmount)) {\n    //     btnInfo.disabled = true\n    //     return btnInfo\n    //   }\n    // } else {\n    //   if (!fromTokenLock && !toTokenLock && (!fromAmount || !+fromAmount) && (!toAmount || !+toAmount)) {\n    //     btnInfo.text = 'Enter an amount'\n    //     btnInfo.disabled = true\n    //     return btnInfo\n    //   }\n    // }\n    // if (fromTokenLock && !toTokenLock && (!toAmount || (toAmount && !+toAmount))) {\n    //   btnInfo.text = 'Enter an amount'\n    //   btnInfo.disabled = true\n    //   return btnInfo\n    // }\n\n    // if (toTokenLock && !fromTokenLock && (!fromAmount || (fromAmount && !+fromAmount))) {\n    //   btnInfo.text = 'Enter an amount'\n    //   btnInfo.disabled = true\n    //   return btnInfo\n    // }\n\n    //判断余额\n    if (fromAmount && +fromAmount && d(fromAmount).gt(fromBalanceInfo?.balanceFormat || 0)) {\n      btnInfo.disabled = true\n      btnInfo.text = `Insufficient ${textEllipses(fromToken?.symbol, 10)} Balance`\n      return btnInfo\n    }\n    //判断余额\n    if (toAmount && +toAmount && d(toAmount).gt(toBalanceInfo?.balanceFormat || 0)) {\n      btnInfo.disabled = true\n      btnInfo.text = `Insufficient ${textEllipses(toToken?.symbol, 10)} Balance`\n      return btnInfo\n    }\n    // if (d(liquidityAmount).lte('0')) {\n    //   btnInfo.disabled = true\n    //   return btnInfo\n    // }\n\n    return btnInfo\n  }, [\n    currentAccount?.address,\n    fromAmount,\n    toAmount,\n    fromBalanceInfo?.balanceFormat,\n    toBalanceInfo?.balanceFormat,\n    fromToken,\n    toToken,\n    fromTokenLock,\n    toTokenLock,\n    liquidityAmount,\n    isAutoFill,\n    numBins,\n    addLiquidityInfo,\n    preCalcError\n  ])\n\n  return {\n    btnText: submitBtnInfo.text,\n    btnDisabled: submitBtnInfo.disabled\n  }\n}\n\nexport default useAddDlmmLiquidityButton\n","import useDlmmLiquidityStore from '@/store/dlmm'\nimport useAddDlmmLiquidityStore from '@/store/dlmm/addDlmmLiquidity'\nimport { Tab } from '@cetus/design/src/components/common/SelectTab'\nimport { useDebounceFunction } from '@cetus/hooks/src/useDebounce'\nimport { textEllipses } from '@cetus/utils'\nimport { fixCoinType } from '@cetusprotocol/common-sdk'\nimport { useEffect, useMemo, useState } from 'react'\nimport useGetLeverage from '../common/useGetLeverage'\n\ntype DLMMDepositProps<T> = {\n  rangeTabList: T[]\n}\n\nfunction useDLMMDeposit<T>({ rangeTabList }: DLMMDepositProps<T>) {\n  // 获取dlmm流动性池信息 Get liquidity pool information\n  const { dlmmApiPoolInfo, isAutoFill } = useDlmmLiquidityStore()\n\n  // 获取添加流动性相关状态和方法 Get add liquidity related states and methods\n  const {\n    fromToken,\n    toToken,\n    setFromToken,\n    setToToken,\n    byAmountIn,\n    setByAmountIn,\n    fromTokenLock,\n    toTokenLock,\n    fromAmount,\n    toAmount,\n    setFromAmount,\n    setToAmount,\n    setFromLoading,\n    setToLoading\n  } = useAddDlmmLiquidityStore()\n\n  // 获取价格范围数据 Get price range data\n  const [currentRangeTab, setCurrentRangeTab] = useState<string>(dlmmApiPoolInfo?.displayTokenA?.coinType || '')\n  const { getLeverage } = useGetLeverage()\n\n  // 初始化当前选中coin标签 Initialize current coin tab\n  useEffect(() => {\n    if (dlmmApiPoolInfo?.displayTokenA?.coinType) {\n      const coinType = dlmmApiPoolInfo?.displayTokenA?.coinType\n      console.log('0925##🚀 trigger setCurrentRangeTab111:', coinType)\n      setCurrentRangeTab(coinType)\n    }\n  }, [dlmmApiPoolInfo?.poolId])\n\n  // 计算方向 Calculate direction\n  const direct = useMemo(() => {\n    return currentRangeTab === dlmmApiPoolInfo?.displayTokenA?.coinType\n  }, [currentRangeTab, dlmmApiPoolInfo?.displayTokenA?.coinType])\n\n  // 计算价格显示文本 Calculate price display text\n  const perText = useMemo(() => {\n    if (!dlmmApiPoolInfo) return ''\n\n    return `${textEllipses(direct ? dlmmApiPoolInfo.displayTokenB?.symbol : dlmmApiPoolInfo.displayTokenA?.symbol, 8)} per ${textEllipses(\n      direct ? dlmmApiPoolInfo.displayTokenA?.symbol : dlmmApiPoolInfo.displayTokenB?.symbol,\n      8\n    )}`\n  }, [direct, dlmmApiPoolInfo])\n\n  // 处理tab反转点击 Handle tab reverse click\n  const onReverseClick = (item?: Tab) => {\n    const coinType = item?.coinType || item?.key\n    if (fixCoinType(coinType) === fixCoinType(currentRangeTab)) {\n      return\n    }\n    if (item && (item?.coinType || item?.key)) {\n      setCurrentRangeTab(item?.coinType || item?.key)\n    }\n    // else {\n    //   setCurrentRangeTab(rangeTabList?.find(tab => tab.key !== currentRangeTab)?.key)\n    // }\n    setFromToken(toToken)\n    setToToken(fromToken)\n    setByAmountIn(!byAmountIn)\n\n    if (isAutoFill) {\n      if (byAmountIn) {\n        setToAmount(fromAmount)\n        setFromAmount('')\n      } else {\n        setFromAmount(toAmount)\n        setToAmount('')\n      }\n    } else {\n      setFromAmount(toAmount)\n      setToAmount(fromAmount)\n    }\n  }\n\n  const debouncedOnReverseClick = useDebounceFunction(onReverseClick, 500)\n\n  // 处理输入框锁定状态 Handle input lock status\n  useEffect(() => {\n    if (byAmountIn && fromTokenLock && !toTokenLock) {\n      setFromAmount('')\n      setToAmount('')\n    }\n    if (!byAmountIn && !fromTokenLock && toTokenLock) {\n      setFromAmount('')\n      setToAmount('')\n    }\n    if (byAmountIn && !fromTokenLock && toTokenLock) {\n      setToAmount('')\n    }\n    if (!byAmountIn && fromTokenLock && !toTokenLock) {\n      setFromAmount('')\n    }\n    if (fromTokenLock && toTokenLock) {\n      setFromAmount('')\n      setToAmount('')\n    }\n  }, [fromTokenLock, toTokenLock])\n\n  return {\n    direct,\n    perText,\n    debouncedOnReverseClick,\n    currentRangeTab\n  }\n}\n\nexport default useDLMMDeposit\n","import { PoolType } from '@/components/pools/createPool/SelectPoolType'\nimport useAddDlmmLiquidityStore from '@/store/dlmm/addDlmmLiquidity'\nimport { Block } from '@cetus/design'\nimport { Token } from '@cetus/types'\nimport { CoinPairImage, Icon } from '@cetus/ui-kit'\nimport { cancelBubble, formatPrice, textEllipses } from '@cetus/utils'\nimport { d } from '@cetusprotocol/common-sdk'\nimport { Button, Divider, HStack, Modal, ModalBody, ModalContent, ModalFooter, ModalHeader, ModalOverlay, Text, VStack } from '@chakra-ui/react'\nimport { useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nconst poolConfigMap: Record<PoolType, { title: string; color: string }> = {\n  clmm: {\n    title: 'Fee tier',\n    color: 'text_highlight'\n  },\n  dlmm: {\n    title: 'Base Fee',\n    color: 'primary_green'\n  }\n}\n\ninterface NFTModalProps {\n  onClose: () => void\n  poolId: string\n  posId: string\n  tokenA: Token\n  tokenB: Token\n  fee: string\n  isReverse?: boolean\n  poolType?: PoolType\n  direct?: boolean\n  binStep?: number\n  positionCount: number\n}\nfunction NFTModal({ onClose, poolId, posId, tokenA, tokenB, fee, isReverse, poolType = 'dlmm', binStep, positionCount, direct }: NFTModalProps) {\n  const navigate = useNavigate()\n\n  const [isDirect, setIsDirect] = useState(direct)\n  const { minPriceData, maxPriceData } = useAddDlmmLiquidityStore()\n\n  const onViewDetail = () => {\n    if (d(positionCount).eq(1)) {\n      navigate(`/dlmm-position-detail/${posId}`)\n    } else {\n      navigate(`/dlmm?tab=positions&poolId=${poolId}`)\n    }\n    onClose()\n  }\n\n  return (\n    <Modal isOpen={true} autoFocus={false} returnFocusOnClose={false} onClose={onClose} isCentered>\n      <ModalOverlay />\n      <ModalContent w=\"400px\">\n        <ModalHeader>\n          <HStack justify=\"space-between\" w=\"100%\">\n            <Text fontSize=\"16px\" fontWeight=\"500\" color=\"text_caption\">\n              Open position successful\n            </Text>\n            <Button onClick={onClose} variant=\"unstyled\" p=\"0\" minW=\"unset\" minH=\"unset\" w=\"20px\" h=\"20px\">\n              <Icon xlinkHref=\"#icon-icon_close\" />\n            </Button>\n          </HStack>\n        </ModalHeader>\n\n        <ModalBody>\n          <VStack gap=\"36px\">\n            <VStack\n              gap=\"16px\"\n              bg=\"center / contain no-repeat url('/images/active-sui.gif') \"\n              w=\"240px\"\n              h=\"240px\"\n              justify=\"center\"\n              border=\"1px solid\"\n              borderColor=\"border\"\n              borderRadius=\"16px\"\n            >\n              <CoinPairImage\n                coinAIconUrl={tokenA?.logo_url}\n                coinBIconUrl={tokenB?.logo_url}\n                coinACoinType={tokenA?.coin_type}\n                coinBCoinType={tokenB?.coin_type}\n                w=\"48px\"\n                h=\"48px\"\n              />\n              <Text fontSize=\"20px\" fontWeight=\"500\" color=\"text_caption\" lineHeight=\"28px\">\n                {textEllipses(tokenA?.symbol, 10)} - {textEllipses(tokenB?.symbol, 10)}\n              </Text>\n\n              <Block w=\"unset\" p=\"4px 8px\" borderRadius=\"12px\">\n                <HStack>\n                  <Text fontSize=\"12px\" color=\"primary\" lineHeight=\"1\" fontWeight=\"500\">\n                    {fee}\n                  </Text>\n                  <Divider orientation=\"vertical\" h=\"10px\" />\n                  <Text fontSize=\"12px\" color=\"primary\">\n                    {binStep} bps\n                  </Text>\n                </HStack>\n              </Block>\n            </VStack>\n            <VStack w=\"100%\" justify=\"center\" borderRadius=\"8px\" border=\"1px solid\" borderColor=\"border\" bg=\"input_bg\" p=\"16px 8px\">\n              <Text color=\"text_caption\" wordBreak=\"break-all\">\n                {isDirect !== isReverse ? formatPrice(minPriceData?.price) : formatPrice(maxPriceData?.reversePrice)} -&nbsp;\n                {isDirect !== isReverse ? formatPrice(maxPriceData?.price) : formatPrice(minPriceData?.reversePrice)}\n              </Text>\n              <HStack>\n                <HStack gap=\"0\">\n                  <Text color=\"primary_gray\">{textEllipses(isDirect ? tokenB?.symbol : tokenA?.symbol, 10)}</Text>\n                  <Text color=\"primary_gray\">&nbsp;per&nbsp;</Text>\n                  <Text color=\"primary_gray\">{textEllipses(isDirect ? tokenA?.symbol : tokenB?.symbol, 10)}</Text>\n                </HStack>\n                <Icon\n                  xlinkHref=\"#icon-icon_swap1\"\n                  w=\"16px\"\n                  h=\"16px\"\n                  onClick={(e: any) => {\n                    cancelBubble(e)\n                    setIsDirect(!isDirect)\n                  }}\n                />\n              </HStack>\n            </VStack>\n          </VStack>\n        </ModalBody>\n\n        <ModalFooter p=\"20px 0 0\">\n          <Button flex=\"1\" onClick={onViewDetail} h=\"52px\" borderRadius=\"12px\" fontSize=\"16px\" fontWeight=\"500\">\n            View Detail\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  )\n}\n\nexport default NFTModal\n","import useDlmmLiquidityStore from '@/store/dlmm'\nimport useAddDlmmLiquidityStore from '@/store/dlmm/addDlmmLiquidity'\nimport { CetusTooltip } from '@cetus/design'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { Icon } from '@cetus/ui-kit'\nimport { Box, FormControl, FormLabel, Switch, Text } from '@chakra-ui/react'\n\nfunction AutoFillSwitch({ disabled = false }: { disabled?: boolean }) {\n  const { isAutoFill, setIsAutoFill } = useDlmmLiquidityStore()\n  const { fromAmount, toAmount, setByAmountIn } = useAddDlmmLiquidityStore()\n  const { isApp } = useWindowWidth()\n  const onChange = () => {\n    if (fromAmount !== '' && toAmount === '') {\n      setByAmountIn(true)\n    }\n    if (fromAmount === '' && toAmount !== '') {\n      setByAmountIn(false)\n    }\n    setIsAutoFill(!isAutoFill)\n  }\n  return (\n    <Box cursor=\"pointer\">\n      {isApp ? (\n        <FormControl display=\"flex\" alignItems=\"center\">\n          <FormLabel\n            htmlFor=\"auto-fill\"\n            mb=\"0\"\n            fontSize={{ base: '12px', lg: '14px' }}\n            fontWeight=\"500\"\n            color={disabled ? 'text_paragraph' : isAutoFill ? 'text_highlight' : 'text_caption'}\n          >\n            <CetusTooltip\n              maxW=\"320px\"\n              tooltip={\n                <Text fontSize=\"12px\" lineHeight=\"20px\">\n                  <Text fontSize=\"12px\" as=\"span\" color=\"text_caption\">\n                    ON:\n                  </Text>{' '}\n                  Enter one token amount, the other is calculated automatically.\n                  <br />\n                  <Text fontSize=\"12px\" as=\"span\" color=\"text_caption\">\n                    OFF:\n                  </Text>{' '}\n                  Enter custom amounts for both tokens manually.\n                  <Box h=\"8px\" />\n                  <Box\n                    as=\"div\"\n                    lineHeight=\"20px\"\n                    cursor=\"pointer\"\n                    _hover={{ svg: { fill: 'text_caption' } }}\n                    onClick={() => window.open('https://cetus-1.gitbook.io/cetus-docs/dlmm/dynamic-fee/fee-structure#composition-fee')}\n                  >\n                    A composition fee may be applied during DLMM liquidity provision if the deposited token ratio into a bin differs from the bin’s\n                    current ratio. <Icon xlinkHref=\"#icon-icon_link1\" display=\"inline-block\" fontSize=\"16px\" verticalAlign=\"middle\" />\n                  </Box>\n                </Text>\n              }\n            >\n              Auto Fill\n            </CetusTooltip>\n          </FormLabel>\n\n          <Switch id=\"auto-fill\" isDisabled={disabled} isChecked={isAutoFill} onChange={onChange} />\n        </FormControl>\n      ) : (\n        <CetusTooltip\n          maxW=\"400px\"\n          tooltip={\n            <Text fontSize=\"12px\" lineHeight=\"20px\">\n              <Text fontSize=\"12px\" as=\"span\" color=\"text_caption\">\n                ON:\n              </Text>{' '}\n              Enter one token amount, the other is calculated automatically.\n              <br />\n              <Text fontSize=\"12px\" as=\"span\" color=\"text_caption\">\n                OFF:\n              </Text>{' '}\n              Enter custom amounts for both tokens manually.\n              <Box h=\"8px\" />\n              <Box\n                as=\"div\"\n                lineHeight=\"20px\"\n                cursor=\"pointer\"\n                _hover={{ svg: { fill: 'text_caption' } }}\n                onClick={() => window.open('https://cetus-1.gitbook.io/cetus-docs/dlmm/dynamic-fee/fee-structure#composition-fee')}\n              >\n                A composition fee may be applied during DLMM liquidity provision if the deposited token ratio into a bin differs from the bin’s\n                current ratio. <Icon xlinkHref=\"#icon-icon_link1\" display=\"inline-block\" fontSize=\"16px\" verticalAlign=\"middle\" />\n              </Box>\n            </Text>\n          }\n        >\n          <FormControl display=\"flex\" alignItems=\"center\">\n            <FormLabel\n              htmlFor=\"auto-fill\"\n              mb=\"0\"\n              fontSize={{ base: '12px', lg: '14px' }}\n              fontWeight=\"500\"\n              color={disabled ? 'text_paragraph' : isAutoFill ? 'text_highlight' : 'text_caption'}\n            >\n              Auto Fill\n            </FormLabel>\n\n            <Switch id=\"auto-fill\" isDisabled={disabled} isChecked={isAutoFill} onChange={onChange} />\n          </FormControl>\n        </CetusTooltip>\n      )}\n    </Box>\n  )\n}\n\nexport default AutoFillSwitch\n","import { MaxBinRangeDisplayNum } from '@/config/dlmm'\nimport useDlmmLiquidityStore from '@/store/dlmm'\nimport useDlmmPositionStore from '@/store/dlmm-position'\nimport useAddDlmmLiquidityStore from '@/store/dlmm/addDlmmLiquidity'\nimport { ChartBinItem, CurrentBinChartData, MaxBinRangeChartData } from '@/types/dlmm'\nimport { DLMMPoolApiInfo } from '@/types/pool'\nimport { formatBinList, formatPriceFromBin, getRelatedDisplayChartPrice } from '@/utils/dlmm'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport { Token } from '@cetus/types'\nimport { bnToAmount, d, removeComma } from '@cetus/utils'\nimport { fromDecimalsAmount } from '@cetusprotocol/common-sdk'\nimport { BinAmount, BinUtils, DlmmPool } from '@cetusprotocol/dlmm-sdk'\nimport { useDeepCompareEffect } from 'ahooks'\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react'\nimport useCreatePriceBin from './useCreatePriceBin'\nimport useDlmmGetAllBinWithPool from './useDlmmGetAllBinWithPool'\n\nexport const getMaxBinRangeData = ({\n  activeBin,\n  allBins,\n  binStep,\n  baseToken,\n  quoteToken,\n  direct = true,\n  maxBin,\n  minBin\n}: {\n  activeBin: number\n  allBins: Record<string, ChartBinItem>\n  binStep: number\n  baseToken: Token\n  quoteToken: Token\n  maxBin: number\n  minBin: number\n  direct?: boolean\n}) => {\n  const minBinNum = minBin == maxBin ? minBin - 1 : minBin\n  const maxBinNum = minBin == maxBin ? maxBin + 1 : maxBin\n\n  if (Number(maxBinNum) - Number(minBinNum) >= MaxBinRangeDisplayNum) return\n  const createBinItem = (binId: number): ChartBinItem => {\n    const item = allBins?.[String(binId)]\n    const price = removeComma(formatPriceFromBin(binId, binStep, baseToken?.decimals, quoteToken?.decimals))\n    const liquidity = item?.liquidity && d(item?.liquidity).gt('0') ? d(item?.liquidity).div(Math.pow(10, 10)).toNumber() : 0\n    return {\n      amount_a: item?.amount_a || '0',\n      amount_b: item?.amount_b || '0',\n      bin_id: binId,\n      liquidity: liquidity as any,\n      price: direct ? price : d(1).div(price).toString(),\n      price_per_lamport: item?.price_per_lamport || '',\n      baseSymbol: baseToken?.symbol,\n      quoteSymbol: quoteToken?.symbol,\n      baseLogo: baseToken?.logo_url,\n      quoteLogo: quoteToken?.logo_url,\n      baseAmount: bnToAmount(item?.amount_a, baseToken?.decimals),\n      quoteAmount: bnToAmount(item?.amount_b, quoteToken?.decimals)\n    }\n  }\n\n  let max = 0\n  const combinedList: ChartBinItem[] = []\n  for (let i = Number(minBinNum); i <= Number(maxBinNum); i++) {\n    const binItem = createBinItem(i)\n    combinedList.push(binItem)\n    max = binItem?.liquidity ? Math.max(max, Number(binItem.liquidity)) : max\n  }\n  const sortList = combinedList.sort((a, b) => Number(a.price) - Number(b.price))\n\n  return {\n    list: sortList,\n    max\n  }\n}\n\nfunction useDlmmAddLiquidityChart(direct?: boolean) {\n  // const dlmmSdk = useSdk('dlmm')\n  const { getBinInfosByAutoFill, getBinInfosByBothAmount } = useCreatePriceBin()\n  const { addLiquidityInfo, setMinPriceData, setMaxPriceData, minPriceData, maxPriceData, chartRefreshTrigger, preCalcParams } =\n    useAddDlmmLiquidityStore()\n  const { dlmmContractPoolInfo, dlmmApiPoolInfo, isAutoFill } = useDlmmLiquidityStore()\n  const poolAllBinObj = useRef<Record<string, ChartBinItem>>({})\n  const [maxBinRangeData, setMaxBinRangeData] = useState<MaxBinRangeChartData>()\n  const [maxBinLoading, setMaxBinLoading] = useState<boolean>(true)\n  const [currentLiquidityBins, setCurrentLiquidityBins] = useState<CurrentBinChartData>()\n  const { getBinsInfoByPool } = useDlmmGetAllBinWithPool()\n  const { dlmmPosBaseListGroupByPool, dlmmPosLiquidityData } = useDlmmPositionStore()\n  const [rangeChangeType, setRangeChangeType] = useState<any>()\n\n  const { getTokenPrice } = useTokenPrice()\n\n  const tokenAPriceInfo = getTokenPrice(dlmmApiPoolInfo?.tokenA?.coin_type)\n  const tokenBPriceInfo = getTokenPrice(dlmmApiPoolInfo?.tokenB?.coin_type)\n\n  // 其他仓位的bin信息\n  const [otherPosBinObj, setOtherPosBinObj] = useState<Record<string, BinAmount>>({})\n\n  const toLargeRange = useMemo(() => {\n    if (minPriceData?.binId !== undefined && maxPriceData?.binId !== undefined) {\n      return d(minPriceData?.binId).minus(maxPriceData?.binId).abs().gte(MaxBinRangeDisplayNum)\n    }\n    return false\n  }, [minPriceData?.binId, maxPriceData?.binId])\n\n  useDeepCompareEffect(() => {\n    if (dlmmApiPoolInfo?.poolId && dlmmPosBaseListGroupByPool && dlmmPosLiquidityData) {\n      const otherPosBinList = dlmmPosBaseListGroupByPool[dlmmApiPoolInfo.poolId]\n      const newOtherPosBinObj: Record<string, BinAmount> = {}\n      otherPosBinList?.list?.forEach(item => {\n        const liquidityData = dlmmPosLiquidityData[item.id]\n        if (liquidityData) {\n          liquidityData.binInfos.bins.forEach(bin => {\n            const binInfo = newOtherPosBinObj[bin.bin_id.toString()]\n            const amountA = fromDecimalsAmount(bin.amount_a, dlmmApiPoolInfo!.tokenA!.decimals)\n            const amountB = fromDecimalsAmount(bin.amount_b, dlmmApiPoolInfo!.tokenB!.decimals)\n            if (binInfo) {\n              binInfo.amount_a = d(binInfo.amount_a).add(amountA).toString()\n              binInfo.amount_b = d(binInfo.amount_b).add(amountB).toString()\n            } else {\n              newOtherPosBinObj[bin.bin_id.toString()] = {\n                amount_a: amountA.toString(),\n                amount_b: amountB.toString(),\n                bin_id: bin.bin_id,\n                price_per_lamport: bin.price_per_lamport,\n                liquidity: bin.liquidity\n              }\n            }\n          })\n        }\n      })\n\n      setOtherPosBinObj({ ...newOtherPosBinObj })\n    }\n  }, [dlmmPosBaseListGroupByPool, dlmmApiPoolInfo?.pool_id, dlmmPosLiquidityData])\n\n  useDeepCompareEffect(() => {\n    if (toLargeRange || (addLiquidityInfo?.bins?.length && addLiquidityInfo?.bins?.length > MaxBinRangeDisplayNum)) {\n      setCurrentLiquidityBins({\n        ...currentLiquidityBins,\n        toLarge: true\n      } as any)\n      return\n    }\n\n    if (addLiquidityInfo && addLiquidityInfo?.bins?.length > 0 && dlmmApiPoolInfo?.tokenA && dlmmApiPoolInfo?.tokenB) {\n      const res = formatBinList(\n        addLiquidityInfo.bins,\n\n        dlmmApiPoolInfo?.tokenA,\n        dlmmApiPoolInfo?.tokenB,\n        direct,\n        dlmmContractPoolInfo?.activeId,\n        dlmmContractPoolInfo?.bin_step\n      )\n      setCurrentLiquidityBins(res)\n    } else {\n      setCurrentLiquidityBins(undefined)\n    }\n  }, [addLiquidityInfo, dlmmApiPoolInfo?.poolId, direct, dlmmContractPoolInfo?.activeId, toLargeRange])\n\n  const fetchPoolAllBinObj = (dlmmContractPoolInfo: DlmmPool, dlmmApiPoolInfo: DLMMPoolApiInfo) => {\n    if (dlmmContractPoolInfo?.bin_manager?.bin_manager_handle && dlmmContractPoolInfo?.id && dlmmContractPoolInfo?.id === dlmmApiPoolInfo?.poolId) {\n      setMaxBinLoading(true)\n      getBinsInfoByPool(\n        {\n          pool_id: dlmmContractPoolInfo!.id,\n          coin_type_a: dlmmContractPoolInfo!.coin_type_a,\n          coin_type_b: dlmmContractPoolInfo!.coin_type_b\n        },\n        dlmmApiPoolInfo!.tokenA!.decimals,\n        dlmmApiPoolInfo!.tokenB!.decimals\n      )\n        .then(res => {\n          poolAllBinObj.current = res.allBinObj\n          console.log('🚀 ~ getPoolAllBinObj poolAllBinObj', poolAllBinObj.current)\n        })\n        .finally(() => {\n          setMaxBinLoading(false)\n        })\n        .catch(error => {\n          console.log('🚀 ~ getPoolAllBinObj ~ error:', error)\n        })\n    }\n  }\n\n  const getPoolAllBinObj = useCallback(() => {\n    if (\n      dlmmApiPoolInfo &&\n      dlmmContractPoolInfo?.bin_manager?.bin_manager_handle &&\n      dlmmContractPoolInfo?.id &&\n      dlmmContractPoolInfo?.id === dlmmApiPoolInfo?.poolId\n    ) {\n      fetchPoolAllBinObj(dlmmContractPoolInfo, dlmmApiPoolInfo)\n    }\n  }, [dlmmContractPoolInfo?.id, dlmmApiPoolInfo?.poolId])\n\n  useEffect(() => {\n    if (dlmmContractPoolInfo?.bin_manager?.bin_manager_handle && dlmmContractPoolInfo?.id && dlmmContractPoolInfo?.id === dlmmApiPoolInfo?.poolId) {\n      getPoolAllBinObj()\n    }\n  }, [dlmmContractPoolInfo?.activeId, dlmmApiPoolInfo?.poolId])\n\n  useEffect(() => {\n    // if (maxPriceData?.binId !== undefined && minPriceData?.binId !== undefined && !isEmptyObj(poolAllBinObj.current)) {\n    if (maxPriceData?.binId !== undefined && minPriceData?.binId !== undefined) {\n      if (maxPriceData?.triggerFrom === 'init' || minPriceData?.triggerFrom === 'init') {\n        toSetMaxBinRangeData(minPriceData?.binId, maxPriceData?.binId)\n      }\n\n      if (maxPriceData?.triggerFrom === 'input' || minPriceData?.triggerFrom === 'input') {\n        const minIndex = maxBinRangeData?.list?.findIndex(item => item.bin_id === minPriceData?.binId)\n        const maxIndex = maxBinRangeData?.list?.findIndex(item => item.bin_id === maxPriceData?.binId)\n        // if (!maxBinRangeData?.list?.length || (minIndex !== undefined && minIndex < 0) || (maxIndex !== undefined && maxIndex < 0)) {\n        //   toSetMaxBinRangeData(minPriceData?.binId, maxPriceData?.binId)\n        // }\n        if (minPriceData?.binId == maxPriceData?.binId) {\n          toSetMaxBinRangeData(minPriceData?.binId - 1, maxPriceData?.binId + 1)\n        } else if (maxPriceData?.binId - minPriceData?.binId == 1) {\n          toSetMaxBinRangeData(minPriceData?.binId - 1, maxPriceData?.binId)\n        } else {\n          toSetMaxBinRangeData(minPriceData?.binId, maxPriceData?.binId)\n        }\n      }\n    }\n  }, [maxPriceData?.binId, minPriceData?.binId, poolAllBinObj.current])\n\n  useEffect(() => {\n    if (\n      chartRefreshTrigger > 0 &&\n      dlmmApiPoolInfo &&\n      dlmmContractPoolInfo?.bin_manager?.bin_manager_handle &&\n      dlmmContractPoolInfo?.id &&\n      dlmmContractPoolInfo?.id === dlmmApiPoolInfo?.poolId\n    ) {\n      fetchPoolAllBinObj(dlmmContractPoolInfo, dlmmApiPoolInfo)\n    }\n  }, [chartRefreshTrigger])\n\n  const toSetMaxBinRangeData = useCallback(\n    (minBin: number, maxBin: number) => {\n      if (\n        dlmmApiPoolInfo?.tokenA &&\n        dlmmApiPoolInfo?.tokenB &&\n        dlmmContractPoolInfo?.active_id !== undefined &&\n        dlmmContractPoolInfo?.id &&\n        dlmmContractPoolInfo?.id === dlmmApiPoolInfo?.id\n        // !isEmptyObj(poolAllBinObj.current)\n      ) {\n        const list = getMaxBinRangeData({\n          activeBin: dlmmContractPoolInfo?.active_id,\n          allBins: poolAllBinObj.current,\n          binStep: dlmmContractPoolInfo?.bin_step,\n          baseToken: dlmmApiPoolInfo?.tokenA,\n          quoteToken: dlmmApiPoolInfo?.tokenB,\n          direct,\n          maxBin,\n          minBin\n        })\n\n        setMaxBinRangeData(list)\n      }\n    },\n    [dlmmContractPoolInfo?.id, dlmmApiPoolInfo?.id, dlmmContractPoolInfo?.active_id, poolAllBinObj.current, direct]\n  )\n\n  useEffect(() => {\n    if (maxPriceData?.binId !== undefined && minPriceData?.binId !== undefined) {\n      const minIndex = maxBinRangeData?.list?.findIndex(item => item.bin_id === minPriceData?.binId)\n      const maxIndex = maxBinRangeData?.list?.findIndex(item => item.bin_id === maxPriceData?.binId)\n\n      if ((minIndex !== undefined && minIndex < 0) || (maxIndex !== undefined && maxIndex < 0)) {\n        toSetMaxBinRangeData(minPriceData?.binId, maxPriceData?.binId)\n      } else {\n        const min = Math.min(maxBinRangeData?.list?.[0]?.bin_id, maxBinRangeData?.list?.[maxBinRangeData?.list?.length - 1]?.bin_id)\n        const max = Math.max(maxBinRangeData?.list?.[0]?.bin_id, maxBinRangeData?.list?.[maxBinRangeData?.list?.length - 1]?.bin_id)\n        toSetMaxBinRangeData(min, max)\n      }\n    }\n  }, [toSetMaxBinRangeData])\n\n  const handleRangeChange = (minBin: number, maxBin: number, isfromCurrentLiquidityChart?: boolean) => {\n    if (isfromCurrentLiquidityChart) {\n      setRangeChangeType('currentLiquidityChart')\n    } else {\n      setRangeChangeType('rangeChart')\n    }\n\n    const binStep = dlmmContractPoolInfo?.bin_step\n    const baseDecimal = dlmmApiPoolInfo?.tokenA?.decimals\n    const quoteDecimal = dlmmApiPoolInfo?.tokenB?.decimals\n    if (\n      binStep !== undefined &&\n      baseDecimal !== undefined &&\n      quoteDecimal !== undefined &&\n      minBin !== undefined &&\n      maxBin !== undefined &&\n      dlmmApiPoolInfo?.tokenA &&\n      dlmmApiPoolInfo?.tokenB\n    ) {\n      const minPrice = BinUtils.getPriceFromBinId(minBin, binStep, baseDecimal, quoteDecimal)\n      const [displayMinPrice, reverseMinPrice, displayReverseMinPrice] = getRelatedDisplayChartPrice(minPrice)\n      const maxPrice = BinUtils.getPriceFromBinId(maxBin, binStep, baseDecimal, quoteDecimal)\n      const [displayMaxPrice, reverseMaxPrice, displayReverseMaxPrice] = getRelatedDisplayChartPrice(maxPrice)\n\n      const _minPriceData = {\n        binId: minBin,\n        price: minPrice,\n        displayPrice: displayMinPrice,\n        reversePrice: reverseMinPrice,\n        displayReversePrice: displayReverseMinPrice,\n        tokenA: dlmmApiPoolInfo!.tokenA,\n        tokenB: dlmmApiPoolInfo!.tokenB,\n        type: 'lower' as const,\n        triggerFrom: isfromCurrentLiquidityChart ? 'currentLiquidityChart' : 'rangeChart',\n        actionSource: 'user'\n      }\n\n      const _maxPriceData = {\n        binId: maxBin,\n        price: maxPrice,\n        displayPrice: displayMaxPrice,\n        reversePrice: reverseMaxPrice,\n        displayReversePrice: displayReverseMaxPrice,\n        tokenA: dlmmApiPoolInfo!.tokenA,\n        tokenB: dlmmApiPoolInfo!.tokenB,\n        type: 'upper' as const,\n        triggerFrom: isfromCurrentLiquidityChart ? 'currentLiquidityChart' : 'rangeChart',\n        actionSource: 'user'\n      }\n\n      setMinPriceData(_minPriceData)\n\n      setMaxPriceData(_maxPriceData)\n\n      if (isfromCurrentLiquidityChart) {\n        if (maxBinRangeData?.list && maxBinRangeData?.list?.length > 0) {\n          const maxBinRangeDataLen = maxBinRangeData?.list?.length || 0\n          const beforeListMinBin = direct ? maxBinRangeData?.list[0]?.bin_id : maxBinRangeData?.list[maxBinRangeDataLen - 1]?.bin_id\n          const beforeListMaxBin = direct ? maxBinRangeData?.list[maxBinRangeDataLen - 1]?.bin_id : maxBinRangeData?.list[0]?.bin_id\n          if (minBin < beforeListMinBin || maxBin > beforeListMaxBin) {\n            toSetMaxBinRangeData(minBin, maxBin)\n          }\n        } else {\n          toSetMaxBinRangeData(minBin, maxBin)\n        }\n      }\n    }\n  }\n\n  const calcChartBinsData = useCallback(\n    async (lower: number, upper: number) => {\n      try {\n        let binInfos: any = null\n        if (preCalcParams) {\n          if (preCalcParams.autoFill && isAutoFill) {\n            binInfos = await getBinInfosByAutoFill({\n              ...preCalcParams.autoFill,\n              lower_bin_id: lower,\n              upper_bin_id: upper\n            })\n          }\n\n          if (preCalcParams.notAutoFill && !isAutoFill) {\n            binInfos = await getBinInfosByBothAmount({\n              ...preCalcParams.notAutoFill,\n              lower_bin_id: lower,\n              upper_bin_id: upper\n            })\n          }\n        }\n\n        if (binInfos?.bins?.length) {\n          const res = formatBinList(\n            binInfos.bins,\n            dlmmApiPoolInfo?.tokenA,\n            dlmmApiPoolInfo?.tokenB,\n            direct,\n            dlmmContractPoolInfo?.activeId,\n            dlmmContractPoolInfo?.bin_step\n          )\n          return res\n        }\n      } catch (error) {\n        console.log('🚀 ~ useDlmmAddLiquidityChart ~ error:', error)\n        return null\n      }\n    },\n    [preCalcParams]\n  )\n\n  return {\n    currentLiquidityBins,\n    activeId: dlmmContractPoolInfo?.activeId,\n    maxBinRangeData,\n    handleRangeChange,\n    minPriceData,\n    maxPriceData,\n    otherPosBinObj,\n    maxBinLoading,\n    tokenAPrice: tokenAPriceInfo?.price,\n    tokenBPrice: tokenBPriceInfo?.price,\n    calcChartBinsData\n  }\n}\n\nexport default useDlmmAddLiquidityChart\n","import useDlmmLiquidityStore from '@/store/dlmm'\nimport useAddDlmmLiquidityStore, { RangePriceType } from '@/store/dlmm/addDlmmLiquidity'\nimport { d, formatPrice, removeComma } from '@cetus/utils'\nimport { BinUtils } from '@cetusprotocol/dlmm-sdk'\nimport { useRef } from 'react'\nimport { PriceDataType } from '../create-pool/useCreateDLMMPool'\nimport useCreatePriceBin from './useCreatePriceBin'\nimport { adjustReferBinId, useMinMaxPriceData } from './useDlmmHelper'\n\nfunction useDlmmPriceRange(direct: boolean) {\n  const { handleActionBinPrice } = useCreatePriceBin()\n  const { currentBinStep, dlmmApiPoolInfo, dlmmContractPoolInfo, currentPrice } = useDlmmLiquidityStore()\n  const { minPriceData, maxPriceData, setMinPriceData, setMaxPriceData, fromToken, toToken, binIdRange } = useAddDlmmLiquidityStore()\n  const { formatMinMaxPriceData, buildPriceData } = useMinMaxPriceData(dlmmApiPoolInfo?.tokenA, dlmmApiPoolInfo?.tokenB, currentBinStep)\n\n  const getReverseType = (type: 'Add' | 'Sub') => {\n    if (type === 'Add') {\n      return 'Sub'\n    }\n    return 'Add'\n  }\n  const handlePriceAction = (type: 'Add' | 'Sub', price: PriceDataType) => {\n    const { bin_id, price: _price } = handleActionBinPrice(\n      price,\n      currentBinStep!,\n      dlmmApiPoolInfo?.tokenA?.decimals,\n      dlmmApiPoolInfo?.tokenB?.decimals,\n      type\n    )\n    const _binId = Math.min(Math.max(bin_id, binIdRange?.minBinId), binIdRange?.maxBinId)\n\n    if (price?.type === 'lower') {\n      const adjustMaxBinId = adjustReferBinId(binIdRange?.minBinId, binIdRange?.maxBinId, _binId, true, maxPriceData?.binId)\n      const minPriceData = buildPriceData(_binId, true)\n      if (minPriceData) {\n        setMinPriceData(minPriceData as RangePriceType)\n      }\n\n      if (adjustMaxBinId && adjustMaxBinId !== maxPriceData?.binId) {\n        const maxPriceData = buildPriceData(adjustMaxBinId, false)\n        if (maxPriceData) {\n          setMaxPriceData(maxPriceData as RangePriceType)\n        }\n      }\n    } else {\n      const maxPriceData = buildPriceData(_binId, false)\n      if (maxPriceData) {\n        setMaxPriceData(maxPriceData as RangePriceType)\n      }\n\n      const adjustMinBinId = adjustReferBinId(binIdRange?.minBinId, binIdRange?.maxBinId, _binId, false, minPriceData?.binId)\n      if (adjustMinBinId && adjustMinBinId !== minPriceData?.binId) {\n        const minPriceData = buildPriceData(adjustMinBinId, true)\n        if (minPriceData) {\n          setMinPriceData(minPriceData as RangePriceType)\n        }\n      }\n    }\n  }\n  const handleAddPrice = (price: PriceDataType) => {\n    handlePriceAction('Add', price)\n  }\n\n  const handleSubPrice = (price: PriceDataType) => {\n    handlePriceAction('Sub', price)\n  }\n\n  const minPriceRef = useRef<string>('')\n  const maxPriceRef = useRef<string>('')\n  // 失去焦点操作\n  const onPriceChange = (data: RangePriceType, value: string) => {\n    const tokenA = data.tokenA\n    const tokenB = data.tokenB\n    if (!tokenA || !tokenB || !dlmmContractPoolInfo?.binStep) return\n\n    let _binId\n    if (d(value).lte('0') || value === 'Infinity') {\n      const basePrice = direct ? currentPrice : d(1).div(currentPrice)?.toString()\n      if (d(value).lte('0')) {\n        const min_price = direct ? d(basePrice).mul(0.0001).toString() : d(basePrice).mul(1.9999).toString()\n        const lower_price_format = formatPrice(direct ? min_price : d(1).div(min_price).toString())\n        _binId = BinUtils?.getBinIdFromPrice(removeComma(lower_price_format), dlmmContractPoolInfo?.binStep, true, tokenA?.decimals, tokenB?.decimals)\n        console.log(lower_price_format, _binId, basePrice, min_price, currentPrice, 'lower_price_format')\n      } else {\n        const min_price = direct ? d(basePrice).mul(1.9999).toString() : d(basePrice).mul(0.0001).toString()\n        const lower_price_format = formatPrice(direct ? min_price : d(1).div(min_price).toString())\n        _binId = BinUtils?.getBinIdFromPrice(removeComma(lower_price_format), dlmmContractPoolInfo?.binStep, true, tokenA?.decimals, tokenB?.decimals)\n        console.log(lower_price_format, _binId, basePrice, min_price, currentPrice, 'lower_price_format')\n      }\n    } else {\n      _binId = BinUtils.getBinIdFromPrice(value, currentBinStep!, data?.type === 'lower', tokenA?.decimals, tokenB?.decimals)\n    }\n    _binId = Math.min(Math.max(_binId, binIdRange?.minBinId), binIdRange?.maxBinId)\n\n    const res: RangePriceType = buildPriceData(_binId, data?.type === 'lower') as RangePriceType\n    if (data?.type === 'lower') {\n      const adjustMaxBinId = adjustReferBinId(binIdRange?.minBinId, binIdRange?.maxBinId, _binId, true, maxPriceData?.binId)\n      if (res) {\n        setMinPriceData(res as RangePriceType)\n      }\n\n      if (adjustMaxBinId && adjustMaxBinId !== maxPriceData?.binId) {\n        const maxPriceData = buildPriceData(adjustMaxBinId, false)\n        if (maxPriceData) {\n          setMaxPriceData(maxPriceData as RangePriceType)\n        }\n      }\n    } else {\n      if (res) {\n        setMaxPriceData(res as RangePriceType)\n      }\n\n      const adjustMinBinId = adjustReferBinId(binIdRange?.minBinId, binIdRange?.maxBinId, _binId, false, minPriceData?.binId)\n      if (adjustMinBinId && adjustMinBinId !== minPriceData?.binId) {\n        const minPriceData = buildPriceData(adjustMinBinId, true)\n        if (minPriceData) {\n          setMinPriceData(minPriceData as RangePriceType)\n        }\n      }\n    }\n    return res\n  }\n\n  return { handleAddPrice, handleSubPrice, onPriceChange }\n}\n\nexport default useDlmmPriceRange\n","import { DLMM_MAX_BIN_NUMBER } from '@/constant/dlmm'\nimport { PriceDataType } from '@/hooks/create-pool/useCreateDLMMPool'\nimport useDlmmPriceRange from '@/hooks/dlmm/useDlmmPriceRange'\nimport useAddDlmmLiquidityStore from '@/store/dlmm/addDlmmLiquidity'\nimport { d } from '@cetus/utils'\nimport { Stack, StackProps } from '@chakra-ui/react'\nimport PriceInput from './PriceInput'\n\nexport default function ControlPriceRange({\n  perText,\n  direct,\n  lowerPrice,\n  upperPrice,\n  wrapStyle = {},\n  children\n}: {\n  perText: string\n  direct: boolean\n  lowerPrice: PriceDataType | null\n  upperPrice: PriceDataType | null\n  wrapStyle?: StackProps\n  children?: React.ReactNode\n}) {\n  const { handleAddPrice, handleSubPrice, onPriceChange } = useDlmmPriceRange(direct)\n  const { numBins } = useAddDlmmLiquidityStore()\n  return (\n    <Stack className=\"controlPriceRange\" flexDir={{ base: 'column', lg: 'row' }} w=\"100%\" gap={{ base: '8px', lg: '16px' }} {...wrapStyle}>\n      <PriceInput\n        title=\"Min Price\"\n        perText={perText}\n        data={lowerPrice}\n        onPriceChange={onPriceChange}\n        direct={direct}\n        loading={!lowerPrice}\n        handleAddPrice={handleAddPrice}\n        handleSubPrice={handleSubPrice}\n        subDisabled={d(numBins).gte(DLMM_MAX_BIN_NUMBER)}\n        addDisabled={false}\n      />\n      {children}\n      <PriceInput\n        title=\"Max Price\"\n        perText={perText}\n        data={upperPrice}\n        onPriceChange={onPriceChange}\n        direct={direct}\n        loading={!upperPrice}\n        handleAddPrice={handleAddPrice}\n        handleSubPrice={handleSubPrice}\n        subDisabled={false}\n        addDisabled={d(numBins).gte(DLMM_MAX_BIN_NUMBER)}\n      />\n    </Stack>\n  )\n}\n","import WithTooltipInfo from '@/components/common/WithTooltipInfo'\nimport { InputBox } from '@cetus/design'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { NumericFormatInput } from '@cetus/ui-kit'\nimport { Skeleton, VStack } from '@chakra-ui/react'\nimport { useSize } from 'ahooks'\n\ntype NumBinsProps = {\n  numBins: number | string\n  positionCount: number\n  onNumBinsChange: (event: string) => void\n  onNumBinsBlur: () => void\n  isLoading?: boolean\n}\n\nfunction NumBins({ numBins, positionCount, onNumBinsBlur, onNumBinsChange, isLoading }: NumBinsProps) {\n  const { isApp } = useWindowWidth()\n  const size = useSize(document?.querySelector('.controlPriceRange'))\n  const minH = size?.height ? `${isApp ? 60 : size.height}px` : '100%'\n\n  return (\n    <InputBox flex={{ base: '1', lg: '0 0 160px' }} minH={minH} h={minH} borderRadius=\"12px\" p=\"8px 12px 12px\">\n      <VStack w=\"100%\" h=\"100%\" justify=\"center\">\n        <WithTooltipInfo\n          label=\"Num Bins\"\n          tooltip=\"The number of bins in your position. A wider price range usually requires more bins. A position with more bins may consume higher gas during liquidity-related txns.\"\n          wrapStyle={{\n            width: 'auto',\n            flexDir: 'column',\n            align: 'center',\n            sx: {\n              'div > p:first-of-type': {\n                fontSize: '12px'\n              }\n            },\n            gap: '4px'\n          }}\n          w=\"320px\"\n          p=\"8px\"\n        >\n          {isLoading ? (\n            <Skeleton w=\"100px\" h=\"14px\" />\n          ) : (\n            <NumericFormatInput\n              value={numBins.toString()}\n              onChange={onNumBinsChange}\n              decimals={0}\n              onBlur={onNumBinsBlur}\n              style={{\n                width: 'calc(100% - 8px)',\n                background: 'none',\n                whiteSpace: 'nowrap',\n                overflow: 'hidden',\n                textOverflow: 'ellipsis',\n                opacity: 1,\n                outline: 'none',\n                color: 'var(--chakra-colors-text_caption)',\n                fontSize: '14px',\n                height: '14px',\n                lineHeight: '14px',\n                textAlign: 'center',\n                fontWeight: '500'\n              }}\n            />\n          )}\n        </WithTooltipInfo>\n\n        {/* <CetusTooltip\n          tooltip={\n            <Text fontSize=\"12px\" lineHeight=\"20px\">\n              Each position covers up to {MAX_BIN_PER_POSITION - 1} bins.\n            </Text>\n          }\n        >\n          <Text fontSize=\"12px\" color=\"primary_gray\" cursor=\"pointer\" textDecoration=\"underline dotted\" textUnderlineOffset=\"2px\">\n            {`${positionCount} ${positionCount > 1 ? 'Positions' : 'Position'}`}\n          </Text>\n        </CetusTooltip> */}\n      </VStack>\n    </InputBox>\n  )\n}\n\nexport default NumBins\n","import { adjustReferBinId, useMinMaxBinIdByAmount, useMinMaxPriceData } from '@/hooks/dlmm/useDlmmHelper'\nimport useDlmmLiquidityStore from '@/store/dlmm'\nimport useAddDlmmLiquidityStore, { RangePriceType } from '@/store/dlmm/addDlmmLiquidity'\nimport { d, removeComma } from '@cetus/utils'\nimport { BinUtils } from '@cetusprotocol/dlmm-sdk'\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react'\n\ntype NumBinsTypes = '19' | '49' | '79'\n\nfunction useQuickPriceRangeChange({ direct = false }: { direct: boolean }) {\n  const { dlmmContractPoolInfo, dlmmApiPoolInfo, currentPrice, isAutoFill } = useDlmmLiquidityStore()\n  const { setMaxPriceData, setMinPriceData, minPriceData, maxPriceData, fromToken, fromAmount, toAmount, binIdRange } = useAddDlmmLiquidityStore()\n  const [showMaxWarning, setShowMaxWarning] = useState(false)\n  const [showMinWarning, setShowMinWarning] = useState(false)\n  const { formatMinMaxBinId } = useMinMaxBinIdByAmount(isAutoFill, fromToken, dlmmApiPoolInfo?.tokenA, fromAmount, toAmount)\n  const { formatMinMaxPriceData, buildPriceData } = useMinMaxPriceData(\n    dlmmApiPoolInfo?.tokenA,\n    dlmmApiPoolInfo?.tokenB,\n    dlmmContractPoolInfo?.binStep\n  )\n\n  const handlePriceChange = useCallback(\n    (numBins: number) => {\n      if (dlmmContractPoolInfo?.activeId === undefined) return\n      const binRes = formatMinMaxBinId(Number(numBins), dlmmContractPoolInfo?.activeId)\n\n      if (binRes) {\n        const { minBinId, maxBinId } = binRes\n\n        const priceRes = formatMinMaxPriceData(minBinId, maxBinId)\n        if (priceRes) {\n          const { minPriceData, maxPriceData } = priceRes\n          setMinPriceData(minPriceData as RangePriceType)\n          setMaxPriceData(maxPriceData as RangePriceType)\n        }\n      }\n    },\n    [\n      dlmmContractPoolInfo?.binStep,\n      dlmmContractPoolInfo?.activeId,\n      fromToken?.address,\n      dlmmApiPoolInfo?.tokenA?.decimals,\n      fromAmount,\n      toAmount,\n      isAutoFill\n    ]\n  )\n\n  const [currentNumBins, setCurrentNumBins] = useState<NumBinsTypes | undefined>('49')\n\n  const handleChangeTab = (val: any) => {\n    setCurrentNumBins(val.label)\n    handlePriceChange(Number(val.label))\n  }\n\n  const [activeInput, setActiveInput] = useState<'min' | 'max' | undefined>(undefined)\n  const [minValue, setMinValue] = useState<string>('')\n  const [preMinValue, setPreMinValue] = useState<string>('')\n  const [maxValue, setMaxValue] = useState<string>('')\n  const [preMaxValue, setPreMaxValue] = useState<string>('')\n\n  useEffect(() => {\n    if (dlmmContractPoolInfo?.activeId !== undefined && minPriceData?.binId !== undefined && maxPriceData?.binId !== undefined) {\n      const minGap = dlmmContractPoolInfo?.activeId - minPriceData?.binId\n      const maxGap = maxPriceData?.binId - dlmmContractPoolInfo?.activeId\n      const numBinsTabs: NumBinsTypes[] = ['19', '49', '79']\n      const totalGap = minGap + maxGap + 1 + ''\n      if ((minGap === maxGap || minGap === 0 || maxGap === 0) && numBinsTabs.includes(totalGap as any)) {\n        setCurrentNumBins(totalGap as NumBinsTypes)\n      } else {\n        setCurrentNumBins(undefined)\n      }\n    }\n  }, [minPriceData?.binId, maxPriceData?.binId, dlmmContractPoolInfo?.activeId])\n\n  useEffect(() => {\n    if (minPriceData?.price !== undefined && maxPriceData?.price !== undefined && currentPrice) {\n      if (direct) {\n        const minPercent = d(removeComma(minPriceData?.price)).sub(currentPrice).div(currentPrice).mul(100).toNumber().toFixed(2)\n        const maxPercent = d(removeComma(maxPriceData?.price)).sub(currentPrice).div(currentPrice).mul(100).toNumber().toFixed(2)\n        setMinValue(minPercent)\n        setPreMinValue(minPercent)\n        setMaxValue(maxPercent)\n        setPreMaxValue(maxPercent)\n      } else {\n        const maxPercent = d(d(1).div(removeComma(minPriceData?.price)))\n          .sub(d(1).div(currentPrice))\n          .div(d(1).div(currentPrice))\n          .mul(100)\n          .toNumber()\n          .toFixed(2)\n        const minPercent = d(d(1).div(removeComma(maxPriceData?.price)))\n          .sub(d(1).div(currentPrice))\n          .div(d(1).div(currentPrice))\n          .mul(100)\n          .toNumber()\n          .toFixed(2)\n\n        setMinValue(minPercent)\n        setPreMinValue(minPercent)\n        setMaxValue(maxPercent)\n        setPreMaxValue(maxPercent)\n      }\n    }\n  }, [currentPrice, minPriceData?.price, maxPriceData?.price, direct])\n\n  const handleRangeChange = (value: string, type: 'min' | 'max') => {\n    console.log(value, preMaxValue, preMinValue, 'handleRangeChange, handleRangeChange')\n    if (\n      dlmmApiPoolInfo?.isReverse !== undefined &&\n      dlmmContractPoolInfo?.binStep !== undefined &&\n      dlmmApiPoolInfo?.tokenA &&\n      dlmmApiPoolInfo?.tokenB &&\n      preMinValue !== undefined &&\n      preMaxValue !== undefined\n    ) {\n      const tokenA = dlmmApiPoolInfo?.tokenA\n      const tokenB = dlmmApiPoolInfo?.tokenB\n      if (direct) {\n        if (type === 'min') {\n          let min_price\n          if (value?.startsWith('-')) {\n            min_price = d(currentPrice)\n              .sub(d(currentPrice).mul(value.replace('-', '')).div(100))\n              .toString()\n          } else {\n            min_price = d(currentPrice).add(d(currentPrice).mul(value).div(100)).toString()\n          }\n          let minBinId = BinUtils?.getBinIdFromPrice(min_price, dlmmContractPoolInfo?.binStep, false, tokenA?.decimals, tokenB?.decimals)\n          minBinId = Math.min(Math.max(minBinId, binIdRange?.minBinId), binIdRange?.maxBinId)\n\n          const adjustMaxBinId = adjustReferBinId(binIdRange?.minBinId, binIdRange?.maxBinId, minBinId, true, maxPriceData?.binId)\n          const minPriceData = buildPriceData(minBinId, true)\n          if (minPriceData) {\n            setMinPriceData(minPriceData as RangePriceType)\n          }\n\n          if (adjustMaxBinId && adjustMaxBinId !== maxPriceData?.binId) {\n            const maxPriceData = buildPriceData(adjustMaxBinId, false)\n            if (maxPriceData) {\n              setMaxPriceData(maxPriceData as RangePriceType)\n            }\n          }\n        } else {\n          let upper_price\n          if (value?.startsWith('-')) {\n            upper_price = d(currentPrice)\n              .sub(d(currentPrice).mul(value.replace('-', '')).div(100))\n              .toString()\n          } else {\n            upper_price = d(currentPrice).add(d(currentPrice).mul(value).div(100)).toString()\n          }\n          let maxBinId = BinUtils?.getBinIdFromPrice(upper_price, dlmmContractPoolInfo?.binStep, true, tokenA?.decimals, tokenB?.decimals)\n          maxBinId = Math.min(Math.max(maxBinId, binIdRange?.minBinId), binIdRange?.maxBinId)\n\n          const maxPriceData = buildPriceData(maxBinId, false)\n          if (maxPriceData) {\n            setMaxPriceData(maxPriceData as RangePriceType)\n          }\n\n          const adjustMinBinId = adjustReferBinId(binIdRange?.minBinId, binIdRange?.maxBinId, maxBinId, false, minPriceData?.binId)\n          if (adjustMinBinId && adjustMinBinId !== minPriceData?.binId) {\n            const minPriceData = buildPriceData(adjustMinBinId, true)\n            if (minPriceData) {\n              setMinPriceData(minPriceData as RangePriceType)\n            }\n          }\n        }\n      } else {\n        if (type === 'min') {\n          let maxBinId = 0\n          if (value === preMaxValue && minPriceData) {\n            maxBinId = minPriceData.binId\n          }\n\n          if (!maxBinId) {\n            let upper_price\n            if (value?.startsWith('-')) {\n              upper_price = d(1)\n                .div(d(d(1).div(currentPrice)).sub(d(1).div(currentPrice).mul(value.replace('-', '')).div(100)))\n                .toString()\n            } else {\n              upper_price = d(1)\n                .div(d(d(1).div(currentPrice)).add(d(1).div(currentPrice).mul(value).div(100)))\n                .toString()\n            }\n            maxBinId = BinUtils?.getBinIdFromPrice(upper_price, dlmmContractPoolInfo?.binStep, false, tokenA?.decimals, tokenB?.decimals)\n          }\n          maxBinId = Math.min(Math.max(maxBinId, binIdRange?.minBinId), binIdRange?.maxBinId)\n\n          const _maxPriceData = buildPriceData(maxBinId, false)\n          if (_maxPriceData) {\n            setMaxPriceData(_maxPriceData as RangePriceType)\n          }\n\n          const adjustMinBinId = adjustReferBinId(binIdRange?.minBinId, binIdRange?.maxBinId, maxBinId, false, minPriceData?.binId)\n          if (adjustMinBinId && adjustMinBinId !== minPriceData?.binId) {\n            const minPriceData = buildPriceData(adjustMinBinId, true)\n            if (minPriceData) {\n              setMinPriceData(minPriceData as RangePriceType)\n            }\n          }\n        } else {\n          let minBinId = 0\n          if (value === preMinValue && maxPriceData) {\n            minBinId = maxPriceData.binId\n          }\n\n          if (!minBinId) {\n            let min_price\n            if (value?.startsWith('-')) {\n              min_price = d(1)\n                .div(d(d(1).div(currentPrice)).sub(d(1).div(currentPrice).mul(value.replace('-', '')).div(100)))\n                .toString()\n            } else {\n              min_price = d(1)\n                .div(d(d(1).div(currentPrice)).add(d(1).div(currentPrice).mul(value).div(100)))\n                .toString()\n            }\n\n            minBinId = BinUtils?.getBinIdFromPrice(min_price, dlmmContractPoolInfo?.binStep, true, tokenA?.decimals, tokenB?.decimals)\n          }\n          minBinId = Math.min(Math.max(minBinId, binIdRange?.minBinId), binIdRange?.maxBinId)\n\n          const adjustMaxBinId = adjustReferBinId(binIdRange?.minBinId, binIdRange?.maxBinId, minBinId, true, maxPriceData?.binId)\n          const minPriceData = buildPriceData(minBinId, true)\n          if (minPriceData) {\n            setMinPriceData(minPriceData as RangePriceType)\n          }\n\n          if (adjustMaxBinId && adjustMaxBinId !== maxPriceData?.binId) {\n            const maxPriceData = buildPriceData(adjustMaxBinId, false)\n            if (maxPriceData) {\n              setMaxPriceData(maxPriceData as RangePriceType)\n            }\n          }\n        }\n      }\n    }\n  }\n\n  const isMinInput = useMemo(() => activeInput === 'min', [activeInput])\n  const isMaxInput = useMemo(() => activeInput === 'max', [activeInput])\n\n  const minInputRef = useRef(null)\n  const minCursorPos = useRef(0)\n  const maxInputRef = useRef(null)\n  const maxCursorPos = useRef(0)\n\n  const handleMinInput = e => {\n    minCursorPos.current = e.target.selectionStart\n  }\n  const handleMaxInput = e => {\n    maxCursorPos.current = e.target.selectionStart\n  }\n\n  // 恢复光标位置\n  useEffect(() => {\n    if (minInputRef.current) {\n      const adjustedPos = Math.min(minCursorPos.current, minValue.length)\n      minInputRef.current?.setSelectionRange(adjustedPos, adjustedPos)\n    }\n  }, [minValue])\n  // 恢复光标位置\n  useEffect(() => {\n    if (maxInputRef.current) {\n      const adjustedPos = Math.min(maxCursorPos.current, maxValue.length)\n      maxInputRef.current?.setSelectionRange(adjustedPos, adjustedPos)\n    }\n  }, [maxValue])\n\n  const onMinInputBlur = (value: string) => {\n    const number = value.replace(/[% ]/g, '')\n    setActiveInput(undefined)\n    console.log(preMinValue, 'test', number, number === '-', 'onMinInputChange')\n    if (number === '-') {\n      setMinValue(preMinValue)\n      return\n    }\n    if (number && number !== preMinValue) {\n      setPreMinValue(number)\n      handleRangeChange(number, 'min')\n    } else {\n      setMinValue(preMinValue)\n    }\n  }\n\n  useEffect(() => {\n    console.log(minValue, 'minValue')\n  }, [minValue])\n\n  const onMinInputChange = (stringValue: string, numberValue: number) => {\n    console.log(stringValue, numberValue, stringValue.startsWith('-') && d(stringValue.replace('-', '')).gt(99.99), 'onMinInputChange')\n    if (!stringValue) {\n      setMinValue('')\n    } else {\n      if (stringValue.split('').every(s => s === '-') && stringValue.length > 0) {\n        console.log(stringValue, 'onMinInputChange')\n        setMinValue('-')\n      } else if (stringValue === '-9007199254740991') {\n        setMinValue(preMinValue)\n      } else if (stringValue.startsWith('-') && d(stringValue.replace('-', '')).gt(99.99)) {\n        setMinValue('-99.99')\n        setShowMinWarning(true)\n      } else {\n        setShowMinWarning(false)\n        setMinValue(stringValue)\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (showMaxWarning) {\n      setTimeout(() => {\n        setShowMaxWarning(false)\n      }, 3000)\n    }\n  }, [showMaxWarning])\n\n  useEffect(() => {\n    if (showMinWarning) {\n      setTimeout(() => {\n        setShowMinWarning(false)\n      }, 3000)\n    }\n  }, [showMinWarning])\n\n  const onMaxInputBlur = (value: string) => {\n    setActiveInput(undefined)\n    const number = value.replace(/[% ]/g, '')\n    if (number === '-') {\n      setMaxValue(preMinValue)\n      return\n    }\n    console.log(number, preMaxValue, 'onMaxInputBlur')\n    if (number && number !== preMaxValue) {\n      setPreMaxValue(number)\n      handleRangeChange(number, 'max')\n    } else {\n      setMaxValue(preMaxValue)\n    }\n  }\n\n  const onMaxInputChange = (stringValue: string, numberValue: number) => {\n    if (!stringValue) {\n      setMaxValue('')\n    } else {\n      if (stringValue.split('').every(s => s === '-') && stringValue.length > 0) {\n        setMaxValue('-')\n      } else if (stringValue === '-9007199254740991') {\n        setMaxValue(preMaxValue)\n      } else if (stringValue.startsWith('-') && d(stringValue.replace('-', '')).gt(99.99)) {\n        setMaxValue('-99.99')\n        setShowMaxWarning(true)\n      } else {\n        setShowMaxWarning(false)\n        setMaxValue(stringValue)\n      }\n    }\n  }\n\n  return {\n    isMinInput,\n    minValue,\n    minInputRef,\n    onMinInputBlur,\n    onMinInputChange,\n    handleMinInput,\n    isMaxInput,\n    maxValue,\n    maxInputRef,\n    onMaxInputChange,\n    onMaxInputBlur,\n    handleMaxInput,\n    currentNumBins,\n    handleChangeTab,\n    setActiveInput,\n    showMaxWarning,\n    showMinWarning\n  }\n}\n\nexport default useQuickPriceRangeChange\n","import useQuickPriceRangeChange from '@/hooks/dlmm/useQuickPriceRangeChange'\nimport { Block, SelectTab } from '@cetus/design'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { addComma, removeComma } from '@cetus/utils'\nimport { d } from '@cetusprotocol/common-sdk'\nimport { HStack, NumberInput, NumberInputField, Stack, Text, Tooltip, VStack } from '@chakra-ui/react'\nimport { useSize } from 'ahooks'\nimport React, { useMemo } from 'react'\n\nconst quickTabs = [\n  {\n    label: '19',\n    value: '19'\n  },\n  {\n    label: '49',\n    value: '49'\n  },\n  {\n    label: '79',\n    value: '79'\n  }\n]\n\nfunction QuickPriceRange({ direct = false, children }: { direct: boolean; children?: React.ReactNode[] }) {\n  const {\n    isMinInput,\n    minValue,\n    minInputRef,\n    onMinInputBlur,\n    onMinInputChange,\n    handleMinInput,\n    isMaxInput,\n    maxValue,\n    maxInputRef,\n    onMaxInputChange,\n    onMaxInputBlur,\n    currentNumBins,\n    handleChangeTab,\n    setActiveInput,\n    showMaxWarning,\n    showMinWarning,\n    handleMaxInput\n  } = useQuickPriceRangeChange({ direct })\n  const { isApp } = useWindowWidth()\n  const size = useSize(document?.querySelector('.controlPriceRange'))\n  const appH = useMemo(() => {\n    return d(size?.height).sub(8).div(2).toNumber()\n  }, [size?.height])\n  return (\n    <Stack flexDir={{ base: 'column', lg: 'row' }} w=\"100%\" gap=\"8px\" h={{ base: 'auto', lg: '32px' }} justify=\"space-between\">\n      {isApp ? (\n        <>\n          <HStack>\n            {children?.[0]}\n            <VStack flex=\"0 0 100px\">\n              <Block\n                flex={{ base: `0 0 ${appH}px`, lg: '0 0 212px' }}\n                h=\"100%\"\n                border=\"1px solid\"\n                borderColor={isMinInput ? 'token_active_border' : 'border'}\n                boxShadow={isMinInput ? '0px 0px 8px 0px #0067AD' : ''}\n                display=\"flex\"\n                p=\"6px\"\n                borderRadius=\"12px\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n              >\n                <Tooltip\n                  label={\n                    <Text fontSize=\"12px\" lineHeight=\"20px\">\n                      Percentage Min: -99.99%\n                    </Text>\n                  }\n                  isOpen={showMinWarning}\n                  placement=\"top\"\n                >\n                  <NumberInput\n                    value={minValue}\n                    precision={2}\n                    // min={-99.99}\n                    inputMode=\"numeric\"\n                    clampValueOnBlur\n                    variant=\"unstyled\"\n                    format={value => (value ? addComma(value) + ' %' : '')}\n                    onFocus={() => {\n                      setActiveInput('min')\n                    }}\n                    onBlur={e => onMinInputBlur(removeComma(e.target.value))}\n                    onChange={(valueString, valueNumber) => onMinInputChange(removeComma(valueString), valueNumber)}\n                    color={isMinInput ? 'text_caption' : 'text_paragraph'}\n                    w=\"100%\"\n                  >\n                    <NumberInputField\n                      fontSize=\"14px\"\n                      color=\"text_caption\"\n                      paddingInlineStart=\"4px\"\n                      paddingInlineEnd=\"4px\"\n                      textAlign=\"center\"\n                      ref={minInputRef}\n                      onInput={handleMinInput}\n                      onKeyDown={handleMinInput}\n                      onMouseUp={handleMinInput}\n                    />\n                  </NumberInput>\n                </Tooltip>\n              </Block>\n              <Block\n                flex={{ base: `0 0 ${appH}px`, lg: '0 0 212px' }}\n                h=\"100%\"\n                border=\"1px solid\"\n                borderColor={isMaxInput ? 'token_active_border' : 'border'}\n                boxShadow={isMaxInput ? '0px 0px 6px 0px #0067AD' : ''}\n                display=\"flex\"\n                p=\"6px\"\n                borderRadius=\"12px\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n              >\n                <Tooltip\n                  label={\n                    <Text fontSize=\"12px\" lineHeight=\"20px\">\n                      Percentage Min: -99.99%\n                    </Text>\n                  }\n                  isOpen={showMaxWarning}\n                  placement=\"top\"\n                >\n                  <NumberInput\n                    value={maxValue}\n                    // min={-99.99}\n                    precision={2}\n                    variant=\"unstyled\"\n                    format={value => (value ? addComma(value) + ' %' : '')}\n                    clampValueOnBlur\n                    onFocus={() => {\n                      setActiveInput('max')\n                    }}\n                    onChange={(valueString, valueNumber) => onMaxInputChange(removeComma(valueString), valueNumber)}\n                    onBlur={e => onMaxInputBlur(removeComma(e.target.value))}\n                    color={isMaxInput ? 'text_caption' : 'text_paragraph'}\n                    w=\"100%\"\n                  >\n                    <NumberInputField\n                      fontSize=\"14px\"\n                      color=\"text_caption\"\n                      paddingInlineStart=\"4px\"\n                      paddingInlineEnd=\"4px\"\n                      textAlign=\"center\"\n                      ref={maxInputRef}\n                      onInput={handleMaxInput}\n                      onKeyDown={handleMaxInput}\n                      onMouseUp={handleMaxInput}\n                    />\n                  </NumberInput>\n                </Tooltip>\n              </Block>\n            </VStack>\n          </HStack>\n          {children?.[1]}\n        </>\n      ) : (\n        <>\n          <Block\n            flex={{ base: '0 0 32px', lg: '1' }}\n            h=\"100%\"\n            border=\"1px solid\"\n            borderColor={isMinInput ? 'token_active_border' : 'border'}\n            boxShadow={isMinInput ? '0px 0px 8px 0px #0067AD' : ''}\n            display=\"flex\"\n            p=\"6px\"\n            borderRadius=\"12px\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n          >\n            <Tooltip\n              label={\n                <Text fontSize=\"12px\" lineHeight=\"20px\">\n                  Percentage Min: -99.99%\n                </Text>\n              }\n              isOpen={showMinWarning}\n              placement=\"top\"\n            >\n              <NumberInput\n                value={minValue}\n                precision={2}\n                // min={-99.99}\n                inputMode=\"numeric\"\n                clampValueOnBlur\n                variant=\"unstyled\"\n                format={value => (value ? addComma(value) + ' %' : '')}\n                onFocus={() => {\n                  setActiveInput('min')\n                }}\n                onBlur={e => onMinInputBlur(removeComma(e.target.value))}\n                onChange={(valueString, valueNumber) => onMinInputChange(removeComma(valueString), valueNumber)}\n                color={isMinInput ? 'text_caption' : 'text_paragraph'}\n                w=\"100%\"\n              >\n                <NumberInputField\n                  fontSize=\"14px\"\n                  color=\"text_caption\"\n                  paddingInlineStart=\"4px\"\n                  paddingInlineEnd=\"4px\"\n                  textAlign=\"center\"\n                  ref={minInputRef}\n                  onInput={handleMinInput}\n                  onKeyDown={handleMinInput}\n                  onMouseUp={handleMinInput}\n                />\n              </NumberInput>\n            </Tooltip>\n          </Block>\n          <Block\n            flex={{ base: '0 0 32px', lg: '1' }}\n            h=\"100%\"\n            border=\"1px solid\"\n            borderColor={isMaxInput ? 'token_active_border' : 'border'}\n            boxShadow={isMaxInput ? '0px 0px 6px 0px #0067AD' : ''}\n            display=\"flex\"\n            p=\"6px\"\n            borderRadius=\"12px\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n          >\n            <Tooltip\n              label={\n                <Text fontSize=\"12px\" lineHeight=\"20px\">\n                  Percentage Min: -99.99%\n                </Text>\n              }\n              isOpen={showMaxWarning}\n              placement=\"top\"\n            >\n              <NumberInput\n                value={maxValue}\n                precision={2}\n                // min={-99.99}\n                variant=\"unstyled\"\n                format={value => (value ? addComma(value) + ' %' : '')}\n                clampValueOnBlur\n                onFocus={() => {\n                  setActiveInput('max')\n                }}\n                onChange={(valueString, valueNumber) => onMaxInputChange(removeComma(valueString), valueNumber)}\n                onBlur={e => onMaxInputBlur(removeComma(e.target.value))}\n                color={isMaxInput ? 'text_caption' : 'text_paragraph'}\n                w=\"100%\"\n              >\n                <NumberInputField\n                  fontSize=\"14px\"\n                  color=\"text_caption\"\n                  paddingInlineStart=\"4px\"\n                  paddingInlineEnd=\"4px\"\n                  textAlign=\"center\"\n                  ref={maxInputRef}\n                  onInput={handleMaxInput}\n                  onKeyDown={handleMaxInput}\n                  onMouseUp={handleMaxInput}\n                />\n              </NumberInput>\n            </Tooltip>\n          </Block>\n        </>\n      )}\n\n      <SelectTab<any, string>\n        tabList={quickTabs}\n        currentTab={currentNumBins}\n        handleChangeTab={handleChangeTab}\n        type=\"outlineTab\"\n        wrapStyle={{ flex: { base: '0 0 32px', lg: '0 0 160px' }, h: '32px', gap: 0, p: '3px', borderRadius: '12px' }}\n        itemStyle={{\n          flex: 1,\n          borderRadius: '8px'\n        }}\n      />\n    </Stack>\n  )\n}\n\nexport default QuickPriceRange\n","import BinRangeSelectChart from '@/components/chart/dlmmChart/BinRangeSelectChart'\nimport CurrentLiquidityChart from '@/components/chart/dlmmChart/CurrentLiquidityChart'\nimport useAddDlmmLiquidityStore from '@/store/dlmm/addDlmmLiquidity'\nimport { CurrentBinChartData, MaxBinRangeChartData } from '@/types/dlmm'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { BinAmount } from '@cetusprotocol/dlmm-sdk'\nimport { VStack } from '@chakra-ui/react'\nimport { useMemo } from 'react'\n\nconst width = 652\nfunction DlmmRangeChart({\n  direct,\n  currentLiquidityBins,\n  currentLiquidityBinsLoading,\n  activeId,\n  maxBinRangeData,\n  handleRangeChange,\n  isReverse,\n  otherPosBinObj,\n  maxBinLoading = false,\n  tokenAPrice,\n  tokenBPrice,\n  strategy,\n  chartBinsData\n}: {\n  direct: boolean\n  isReverse: boolean\n  currentLiquidityBins?: CurrentBinChartData\n  currentLiquidityBinsLoading?: boolean\n  maxBinRangeData?: MaxBinRangeChartData\n  maxBinLoading: boolean\n  handleRangeChange: (min: any, max: any) => void\n  activeId?: number\n  otherPosBinObj?: Record<string, BinAmount>\n  tokenAPrice?: any\n  tokenBPrice?: any\n  strategy?: any\n  chartBinsData?: any\n}) {\n  const { minPriceData, maxPriceData } = useAddDlmmLiquidityStore()\n\n  const { windowWidth } = useWindowWidth()\n\n  const width = useMemo(() => {\n    if (windowWidth < 810) {\n      return windowWidth - 60\n    }\n    return 652\n  }, [windowWidth])\n\n  return (\n    <VStack position=\"relative\" w=\"100%\" h=\"288px\" gap=\"8px\">\n      <CurrentLiquidityChart\n        data={currentLiquidityBins}\n        activeBin={Number(activeId)}\n        width={width}\n        height={162}\n        direct={direct}\n        isReverse={isReverse}\n        type=\"simulation\"\n        onChangeRange={handleRangeChange}\n        // isShowSlider={activeId !== undefined && maxBinRangeData?.list && maxBinRangeData?.list?.length > 0}\n        isShowSlider={!maxBinLoading || maxBinRangeData?.list?.length > 0}\n        tokenAPrice={tokenAPrice}\n        tokenBPrice={tokenBPrice}\n        strategy={strategy}\n        chartBinsData={chartBinsData}\n        dataLoading={currentLiquidityBinsLoading}\n      />\n      <BinRangeSelectChart\n        activeBin={Number(activeId)}\n        data={maxBinRangeData}\n        width={width}\n        height={76}\n        type=\"liquidity\"\n        onChangeRange={handleRangeChange}\n        minBinId={minPriceData?.binId}\n        maxBinId={maxPriceData?.binId}\n        currentLiquidityBins={currentLiquidityBins}\n        otherPosBinObj={otherPosBinObj}\n        isReverse={isReverse}\n        maxBinLoading={maxBinLoading}\n      />\n    </VStack>\n  )\n}\n\nexport default DlmmRangeChart\n","import FunnelPrice from '@/components/common/FunnelPrice'\nimport { Legend } from '@/components/pools/createPool/depositAmount/DLMMDepositAmount'\nimport { DLMM_MAX_BIN_NUMBER } from '@/constant/dlmm'\nimport { PriceDataType } from '@/hooks/create-pool/useCreateDLMMPool'\nimport useDlmmAddLiquidityChart from '@/hooks/dlmm/useDlmmAddLiquidityChart'\nimport { useMinMaxBinIdByAmount, useMinMaxPriceData } from '@/hooks/dlmm/useDlmmHelper'\nimport useGetDlmmContractPoolInfo from '@/hooks/dlmm/useGetDlmmContractPoolInfo'\nimport useInitDlmmPoolPriceRange from '@/hooks/dlmm/useInitDlmmPoolPriceRange'\nimport { usePriceImpact } from '@/hooks/swap/usePriceImpact'\nimport useDlmmLiquidityStore from '@/store/dlmm'\nimport useAddDlmmLiquidityStore, { RangePriceType } from '@/store/dlmm/addDlmmLiquidity'\nimport { getReversePrice } from '@/utils/pool'\nimport { ErrorTips, SelectTab } from '@cetus/design'\nimport { Tab } from '@cetus/design/src/components/common/SelectTab'\nimport useQueryParams from '@cetus/hooks/src/useQueryParams'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { Icon } from '@cetus/ui-kit'\nimport { addComma, d, formatPrice, isAvailableObject, textEllipses } from '@cetus/utils'\nimport { BinUtils } from '@cetusprotocol/dlmm-sdk'\nimport { Center, Divider, HStack, Skeleton, Text, VStack } from '@chakra-ui/react'\nimport { useMemo } from 'react'\nimport DivisionBlock from '../common/DivisionBlock'\nimport ControlPriceRange from './ControlPriceRange'\nimport NumBins from './NumBins'\nimport PriceRangeForDate from './PriceRangeForDate'\nimport QuickPriceRange from './QuickPriceRange'\nimport DlmmRangeChart from './RangeChart'\n\ntype SetPriceRangeProps = {\n  perText: string\n  direct: boolean\n  minPriceData: PriceDataType | null\n  maxPriceData: PriceDataType | null\n  rangeTabList: any[]\n  currentRangeTab?: string\n  onReverseClick: (item?: Tab) => void\n  preCalcLoading?: boolean\n}\nfunction SetPriceRange({\n  perText,\n  direct,\n  minPriceData,\n  maxPriceData,\n  rangeTabList,\n  currentRangeTab,\n  onReverseClick,\n  preCalcLoading\n}: SetPriceRangeProps) {\n  const { currentPrice, dlmmApiPoolInfo, dlmmContractPoolInfo, isAutoFill, strategy, reverseCurrentPrice } = useDlmmLiquidityStore()\n  const { numBins, positionCount, fromToken, binIdRange, setNumBins, setMaxPriceData, setMinPriceData, fromAmount, toAmount } =\n    useAddDlmmLiquidityStore()\n  const { getDlmmContractPoolInfo } = useGetDlmmContractPoolInfo()\n  const { handleInitPriceRange } = useInitDlmmPoolPriceRange()\n  const {\n    currentLiquidityBins,\n    activeId,\n    maxBinRangeData,\n    handleRangeChange,\n    otherPosBinObj,\n    maxBinLoading,\n    tokenAPrice,\n    tokenBPrice,\n    calcChartBinsData\n  } = useDlmmAddLiquidityChart(direct)\n  const { poolId } = useQueryParams()\n\n  const { formatMinMaxBinId } = useMinMaxBinIdByAmount(isAutoFill, fromToken, dlmmApiPoolInfo?.tokenA, fromAmount, toAmount)\n  const { formatMinMaxPriceData } = useMinMaxPriceData(dlmmApiPoolInfo?.tokenA, dlmmApiPoolInfo?.tokenB, dlmmContractPoolInfo?.binStep)\n\n  const handleReset = async () => {\n    const res = await getDlmmContractPoolInfo(poolId)\n    if (res && isAvailableObject(res) && dlmmApiPoolInfo && dlmmApiPoolInfo?.tokenA && dlmmApiPoolInfo?.tokenB) {\n      const _currentPrice = BinUtils?.getPriceFromBinId(\n        res?.active_id,\n        res?.bin_step,\n        dlmmApiPoolInfo?.tokenA?.decimals,\n        dlmmApiPoolInfo?.tokenB?.decimals\n      )\n\n      handleInitPriceRange(res, _currentPrice, true)\n    }\n  }\n  const handleNumBinsBlur = () => {\n    if (dlmmApiPoolInfo?.tokenA && dlmmApiPoolInfo?.tokenB && activeId !== undefined) {\n      const maxBinRange = binIdRange.maxBinId - binIdRange.minBinId + 1\n      if (numBins === '' && maxPriceData?.binId && minPriceData?.binId) {\n        setNumBins(Math.abs(maxPriceData?.binId - minPriceData?.binId) + 1)\n        return\n      }\n      let fixNumBins = Number(numBins)\n      if (fixNumBins > maxBinRange) {\n        fixNumBins = maxBinRange\n      }\n      const binRes = formatMinMaxBinId(Number(fixNumBins), activeId)\n\n      if (binRes) {\n        const { minBinId, maxBinId } = binRes\n        let _minBinId = Math.min(Math.max(minBinId, binIdRange?.minBinId), binIdRange?.maxBinId)\n        let _maxBinId = Math.min(Math.max(maxBinId, binIdRange?.minBinId), binIdRange?.maxBinId)\n\n        if (_maxBinId === binIdRange?.maxBinId && _minBinId < activeId && _maxBinId - _minBinId < fixNumBins) {\n          _minBinId = _maxBinId - fixNumBins + 1\n        }\n        if (_minBinId === binIdRange?.minBinId && _maxBinId > activeId && _maxBinId - _minBinId < fixNumBins) {\n          _maxBinId = _minBinId + fixNumBins - 1\n        }\n\n        const priceRes = formatMinMaxPriceData(_minBinId, _maxBinId)\n        if (priceRes) {\n          const { minPriceData, maxPriceData } = priceRes\n          setMinPriceData(minPriceData as RangePriceType)\n          setMaxPriceData(maxPriceData as RangePriceType)\n        }\n      }\n    }\n  }\n\n  const handleNumBinsChange = (input: string) => {\n    console.log(input, /^[1-9][0-9]*$/.test(input), input === '', 'handleNumBinsChange')\n    if (input === '--') {\n      setNumBins(input)\n      return\n    }\n    if (/^[1-9][0-9]*$/.test(input) || input === '') {\n      setNumBins(input)\n      return\n    }\n  }\n\n  const { priceImpactBasedOnMarket } = usePriceImpact(\n    direct ? dlmmApiPoolInfo?.tokenA : dlmmApiPoolInfo?.tokenB,\n    direct ? dlmmApiPoolInfo?.tokenB : dlmmApiPoolInfo?.tokenA,\n    '1',\n    direct ? currentPrice : currentPrice ? d(1).div(currentPrice).toString() : undefined,\n    true\n  )\n\n  const priceImpactBasedOnMarketDisplay = useMemo(() => {\n    if (priceImpactBasedOnMarket && d(priceImpactBasedOnMarket).abs().gte(30)) {\n      if (d(priceImpactBasedOnMarket).gte(30)) {\n        return `+${d(priceImpactBasedOnMarket).toFixed(0)}%`\n      }\n      return `${d(priceImpactBasedOnMarket).toFixed(0)}%`\n    }\n    return undefined\n  }, [priceImpactBasedOnMarket])\n\n  const { isApp } = useWindowWidth()\n\n  return (\n    <DivisionBlock\n      title={\n        isApp ? (\n          <Text lineHeight=\"20px\" fontSize=\"16px\" fontWeight=\"500\" color=\"text_caption\">\n            Set Price Range\n          </Text>\n        ) : (\n          <HStack h=\"20px\" gap=\"16px\">\n            <Text lineHeight=\"20px\" fontSize=\"16px\" fontWeight=\"500\" color=\"text_caption\">\n              Set Price Range\n            </Text>\n            <HStack\n              as=\"button\"\n              gap=\"2px\"\n              _hover={{ p: { color: 'text_caption' }, svg: { fill: 'text_caption' } }}\n              cursor=\"pointer\"\n              onClick={handleReset}\n            >\n              <Icon xlinkHref=\"#icon-reset\" fontSize=\"14px\" />\n              <Text fontSize=\"12px\">Reset</Text>\n            </HStack>\n          </HStack>\n        )\n      }\n      wrapStyle={{ w: '100%', gap: '20px', className: 'dlmm-tutorial-step-5', p: { base: '0px', lg: '10px 16px 16px' } }}\n    >\n      {isApp ? (\n        <HStack as=\"button\" gap=\"2px\" _hover={{ p: { color: 'text_caption' }, svg: { fill: 'text_caption' } }} cursor=\"pointer\" onClick={handleReset}>\n          <Icon xlinkHref=\"#icon-reset\" fontSize=\"14px\" />\n          <Text fontSize=\"12px\">Reset</Text>\n        </HStack>\n      ) : (\n        <HStack>\n          {!rangeTabList || !rangeTabList.length ? (\n            <Skeleton h=\"32px\" borderRadius=\"8px\" w=\"180px\" />\n          ) : (\n            <HStack gap=\"20px\">\n              <HStack gap=\"12px\">\n                <Legend symbol={textEllipses(dlmmApiPoolInfo?.displayTokenA?.symbol || '', 8)} color=\"dlmm_blue\" />\n                <Legend symbol={textEllipses(dlmmApiPoolInfo?.displayTokenB?.symbol || '', 8)} color=\"dlmm_green\" />\n              </HStack>\n              <SelectTab<any, any>\n                type=\"outlineTab\"\n                tabList={rangeTabList}\n                currentTab={currentRangeTab}\n                handleChangeTab={tab => onReverseClick(tab)}\n                wrapStyle={{\n                  h: '32px',\n                  p: '3px',\n                  border: '1px solid',\n                  borderColor: 'border',\n                  borderRadius: '8px',\n                  gap: '4px',\n                  zIndex: '99'\n                }}\n                itemStyle={{\n                  h: '24px',\n                  p: '4px 12px',\n                  borderRadius: '4px',\n                  gap: '4px'\n                }}\n              />\n            </HStack>\n          )}\n        </HStack>\n      )}\n      {isApp ? (\n        <VStack w=\"100%\" gap=\"16px\">\n          <SelectTab<any, any>\n            type=\"outlineTab\"\n            tabList={rangeTabList}\n            currentTab={currentRangeTab}\n            handleChangeTab={tab => onReverseClick(tab)}\n            wrapStyle={{\n              w: '100%',\n              h: '32px',\n              p: '3px',\n              border: '1px solid',\n              borderColor: 'border',\n              borderRadius: '8px',\n              gap: '4px',\n              zIndex: '99'\n            }}\n            itemStyle={{\n              flex: 1,\n              h: '24px',\n              p: '4px 12px',\n              borderRadius: '4px',\n              gap: '4px'\n            }}\n          />\n\n          <VStack w=\"100%\" align=\"flex-start\">\n            <HStack gap=\"12px\">\n              <Legend symbol={textEllipses(dlmmApiPoolInfo?.displayTokenA?.symbol || '', 8)} color=\"dlmm_blue\" />\n              <Legend symbol={textEllipses(dlmmApiPoolInfo?.displayTokenB?.symbol || '', 8)} color=\"dlmm_green\" />\n            </HStack>\n            <FunnelPrice\n              price={currentPrice ? formatPrice(direct ? currentPrice : getReversePrice(currentPrice)) : undefined}\n              perText={perText}\n              showIcon={false}\n            />\n\n            <DlmmRangeChart\n              direct={direct}\n              currentLiquidityBins={currentLiquidityBins}\n              currentLiquidityBinsLoading={preCalcLoading}\n              activeId={activeId}\n              maxBinRangeData={maxBinRangeData}\n              otherPosBinObj={otherPosBinObj}\n              handleRangeChange={handleRangeChange}\n              isReverse={dlmmApiPoolInfo?.isReverse || false}\n              maxBinLoading={maxBinLoading}\n              tokenAPrice={tokenAPrice}\n              tokenBPrice={tokenBPrice}\n              strategy={strategy}\n              chartBinsData={calcChartBinsData}\n            />\n          </VStack>\n\n          <VStack w=\"100%\" gap=\"8px\">\n            <QuickPriceRange direct={direct}>\n              <ControlPriceRange\n                perText={perText}\n                direct={direct}\n                lowerPrice={direct ? minPriceData : maxPriceData}\n                upperPrice={direct ? maxPriceData : minPriceData}\n                wrapStyle={{ gap: '8px' }}\n              />\n              <NumBins\n                isLoading={false}\n                numBins={numBins}\n                positionCount={positionCount}\n                onNumBinsBlur={handleNumBinsBlur}\n                onNumBinsChange={handleNumBinsChange}\n              />\n            </QuickPriceRange>\n          </VStack>\n          <Divider orientation=\"horizontal\" />\n          <PriceRangeForDate activeId={activeId} direct={direct} currentLiquidityBins={currentLiquidityBins} maxBinRangeData={maxBinRangeData} />\n\n          <VStack w=\"100%\" gap=\"16px\">\n            {minPriceData && maxPriceData && d(minPriceData?.binId).gt(maxPriceData?.binId) && (\n              <Center p=\"8px\" w=\"100%\" bg=\"primary_red_opacity.10\" borderRadius=\"8px\" mb=\"16px\">\n                <Text color=\"primary_red\" fontSize=\"12px\" h=\"16px\" fontWeight=\"400\">\n                  The Max price should be higher than or equal to the Min price\n                </Text>\n              </Center>\n            )}\n\n            {d(numBins).gt(DLMM_MAX_BIN_NUMBER) && (\n              <Center p=\"8px\" w=\"100%\" bg=\"primary_yellow_opacity.10\" borderRadius=\"8px\" mb=\"16px\">\n                <Text color=\"primary_yellow\" fontSize=\"12px\" lineHeight=\"16px\" fontWeight=\"400\">\n                  You have reached the maximum limit of {addComma(DLMM_MAX_BIN_NUMBER)} bins. Please adjust your price range to reduce the number of\n                  bins.\n                </Text>\n              </Center>\n            )}\n            <VStack w=\"100%\" mb=\"16px\">\n              <Text color=\"primary_gray\" fontSize=\"12px\" lineHeight=\"20px\">\n                The current price of a pool doesn't always reflect the fair market price. Please be cautious to set your price range and allocate\n                liquidity properly.\n              </Text>\n              {priceImpactBasedOnMarketDisplay && (\n                <ErrorTips\n                  tips={`The current pool price deviates largely from the real-time market price (${priceImpactBasedOnMarketDisplay}). Please be careful with your price range setting to avoid large impermanent loss.`}\n                  borderRadius=\"12px\"\n                  p=\"8px\"\n                  w=\"100%\"\n                  tipsFontSize=\"12px\"\n                />\n              )}\n            </VStack>\n\n            {/* <ErrorTips\n              tips={`The current pool price deviates largely from the real-time market price (${priceImpactBasedOnMarketDisplay}). Please be careful with your price range setting to avoid large impermanent loss.`}\n              borderRadius=\"12px\"\n              p=\"8px\"\n              w=\"100%\"\n              tipsFontSize=\"12px\"\n              mb=\"16px\"\n            /> */}\n          </VStack>\n        </VStack>\n      ) : (\n        <VStack w=\"100%\" gap=\"0px\">\n          <VStack w=\"100%\" gap=\"12px\">\n            <HStack w=\"100%\" justify=\"center\">\n              <FunnelPrice\n                price={currentPrice ? formatPrice(direct ? currentPrice : getReversePrice(currentPrice)) : undefined}\n                perText={perText}\n                showIcon={false}\n              />\n            </HStack>\n            <DlmmRangeChart\n              direct={direct}\n              currentLiquidityBins={currentLiquidityBins}\n              currentLiquidityBinsLoading={preCalcLoading}\n              activeId={activeId}\n              maxBinRangeData={maxBinRangeData}\n              otherPosBinObj={otherPosBinObj}\n              handleRangeChange={handleRangeChange}\n              isReverse={dlmmApiPoolInfo?.isReverse || false}\n              maxBinLoading={maxBinLoading}\n              tokenAPrice={tokenAPrice}\n              tokenBPrice={tokenBPrice}\n              strategy={strategy}\n              chartBinsData={calcChartBinsData}\n            />\n          </VStack>\n\n          <VStack w=\"100%\" gap=\"16px\">\n            <VStack w=\"100%\" gap=\"4px\">\n              <HStack w=\"100%\" h=\"fit-content\">\n                <ControlPriceRange\n                  perText={perText}\n                  direct={direct}\n                  lowerPrice={direct ? minPriceData : maxPriceData}\n                  upperPrice={direct ? maxPriceData : minPriceData}\n                  wrapStyle={{ gap: '8px' }}\n                />\n                <NumBins\n                  isLoading={false}\n                  numBins={numBins}\n                  positionCount={positionCount}\n                  onNumBinsBlur={handleNumBinsBlur}\n                  onNumBinsChange={handleNumBinsChange}\n                />\n              </HStack>\n              <QuickPriceRange direct={direct} />\n            </VStack>\n\n            {minPriceData && maxPriceData && d(minPriceData?.binId).gt(maxPriceData?.binId) && (\n              <Center p=\"8px\" w=\"100%\" bg=\"primary_red_opacity.10\" borderRadius=\"8px\">\n                <Text color=\"primary_red\" fontSize=\"12px\" h=\"16px\" fontWeight=\"400\">\n                  The Max price should be higher than or equal to the Min price\n                </Text>\n              </Center>\n            )}\n            {d(numBins).gt(DLMM_MAX_BIN_NUMBER) && (\n              <Center p=\"8px\" w=\"100%\" bg=\"primary_yellow_opacity.10\" borderRadius=\"8px\">\n                <Text color=\"primary_yellow\" fontSize=\"12px\" lineHeight=\"16px\" fontWeight=\"400\">\n                  You have reached the maximum limit of {addComma(DLMM_MAX_BIN_NUMBER)} bins. Please adjust your price range to reduce the number of\n                  bins.\n                </Text>\n              </Center>\n            )}\n            <VStack w=\"100%\">\n              <Text color=\"primary_gray\" fontSize=\"12px\" lineHeight=\"20px\">\n                The current price of a pool doesn't always reflect the fair market price. Please be cautious to set your price range and allocate\n                liquidity properly.\n              </Text>\n              {priceImpactBasedOnMarketDisplay && (\n                <ErrorTips\n                  tips={`The current pool price deviates largely from the real-time market price (${priceImpactBasedOnMarketDisplay}). Please be careful with your price range setting to avoid large impermanent loss.`}\n                  borderRadius=\"12px\"\n                  p=\"8px\"\n                  w=\"100%\"\n                  tipsFontSize=\"12px\"\n                />\n              )}\n            </VStack>\n\n            <Divider w=\"100%\" orientation=\"horizontal\" />\n\n            <PriceRangeForDate activeId={activeId} direct={direct} currentLiquidityBins={currentLiquidityBins} maxBinRangeData={maxBinRangeData} />\n          </VStack>\n        </VStack>\n      )}\n    </DivisionBlock>\n  )\n}\n\nexport default SetPriceRange\n","import Slippage from '@/components/common/Slippage'\nimport TotalAmount from '@/components/common/TotalAmount'\nimport useDlmmLiquidityStore from '@/store/dlmm'\nimport useAddDlmmLiquidityStore from '@/store/dlmm/addDlmmLiquidity'\nimport { Block, ErrorTips, TradeInputGroup } from '@cetus/design'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport { Box, Button, HStack, Text, VStack } from '@chakra-ui/react'\nimport AutoFillSwitch from '../AutoFillSwitch'\nimport SelectStrategy from '../SelectStrategy'\nimport SetPriceRange from '../SetPriceRange'\nimport { DLMMDepositProps } from './type'\n\nfunction H5Deposit({\n  btnText,\n  btnDisabled,\n  onReverseClick,\n  direct,\n  perText,\n  rangeTabList,\n  currentRangeTab,\n  handleAmountChange,\n  fromAmountValue,\n  toAmountValue,\n  fromBalanceInfo,\n  toBalanceInfo,\n  handleAdd,\n  submitLoading,\n  isReverse\n}: DLMMDepositProps<any>) {\n  const { dlmmApiPoolInfo } = useDlmmLiquidityStore()\n  const {\n    fromToken,\n    toToken,\n    fromAmount,\n    toAmount,\n    byAmountIn,\n    totalAmount,\n    fromTokenLock,\n    toTokenLock,\n    minPriceData,\n    maxPriceData,\n    positionCount,\n    numBins,\n    fromLoading,\n    toLoading,\n    preCalcError\n  } = useAddDlmmLiquidityStore()\n\n  const { getTokenAmountValue } = useTokenPrice()\n\n  return (\n    <VStack w=\"100%\">\n      <VStack w=\"100%\" borderRadius=\"12px\" border=\"1px solid\" borderColor=\"border\" bg=\"card_bg\" p=\"12px\" gap=\"16px\">\n        <HStack w=\"100%\" h=\"32px\" justify=\"space-between\">\n          <Text lineHeight=\"20px\" fontSize=\"16px\" fontWeight=\"500\" color=\"text_caption\">\n            Deposit Amounts\n          </Text>\n          <HStack>\n            <Block p=\"4px 4px 4px 8px\" borderRadius=\"8px\">\n              <AutoFillSwitch disabled={fromTokenLock || toTokenLock} />\n            </Block>\n            <Slippage slippageType=\"liquidity\" poolType=\"dlmm\" />\n          </HStack>\n        </HStack>\n        <Box w=\"100%\" position=\"relative\">\n          <TradeInputGroup\n            onClick={onReverseClick}\n            from={{\n              wrapStyle: { h: '108px' },\n              balance: fromBalanceInfo?.balanceFormat || '',\n              value: fromAmount,\n              amountValue: getTokenAmountValue(fromToken?.coin_type, fromAmount),\n              loading: false,\n              onChange: value => {\n                handleAmountChange(value, true, fromToken?.coin_type === dlmmApiPoolInfo?.coin_type_a)\n              },\n              selectable: false,\n              placeholder: '0.0',\n              token: fromToken,\n              remainBalanceAmount: 0.5,\n              onFocusChange: (focus: boolean) => {\n                if (focus && +(fromAmount + '') && !byAmountIn) {\n                  handleAmountChange(fromAmount + '', true, fromToken?.coin_type === dlmmApiPoolInfo?.coin_type_b)\n                }\n              },\n              lock: {\n                isLock: fromTokenLock && !toTokenLock,\n                text: 'The current price is outside your specified price range. Single-asset deposit only.'\n              },\n              balancePosition: 'bottom',\n              rightJustify: 'space-around'\n            }}\n            to={{\n              wrapStyle: { h: '108px' },\n              balance: toBalanceInfo?.balanceFormat || '',\n              value: toAmount,\n              amountValue: getTokenAmountValue(toToken?.coin_type, toAmount),\n              loading: false,\n              remainBalanceAmount: 0.5,\n              onFocusChange: (focus: boolean) => {\n                if (focus && +(toAmount + '') && byAmountIn) {\n                  handleAmountChange(toAmount + '', false, toToken?.coin_type === dlmmApiPoolInfo?.coin_type_a)\n                }\n              },\n              onChange: value => {\n                handleAmountChange(value, false, toToken?.coin_type === dlmmApiPoolInfo?.coin_type_b)\n              },\n              selectable: false,\n              placeholder: '0.0',\n              token: toToken,\n              lock: {\n                isLock: !fromTokenLock && toTokenLock,\n                text: 'The current price is outside your specified price range. Single-asset deposit only.'\n              },\n              balancePosition: 'bottom',\n              rightJustify: 'space-around'\n            }}\n            iconParams={{\n              xlinkHref: '#icon-icon_add',\n              svgFill: 'text_caption'\n            }}\n            lock={{\n              isLock: fromTokenLock && toTokenLock,\n              style: { h: '224px' }\n            }}\n          />\n        </Box>\n        <TotalAmount totalAmount={totalAmount} loading={false} valueStyle={{ h: '20px', lineHeight: '20px' }} />\n      </VStack>\n      <VStack w=\"100%\" borderRadius=\"12px\" border=\"1px solid\" borderColor=\"border\" bg=\"card_bg\" p=\"16px 12px 12px\" gap=\"16px\" align=\"flex-start\">\n        <Text lineHeight=\"20px\" fontSize=\"16px\" fontWeight=\"500\" color=\"text_caption\">\n          Select Strategy\n        </Text>\n        <SelectStrategy />\n      </VStack>\n      <VStack w=\"100%\" borderRadius=\"12px\" border=\"1px solid\" borderColor=\"border\" bg=\"card_bg\" p=\"12px\" gap=\"0px\">\n        <SetPriceRange\n          perText={perText}\n          direct={direct !== isReverse}\n          minPriceData={minPriceData}\n          maxPriceData={maxPriceData}\n          rangeTabList={rangeTabList}\n          currentRangeTab={currentRangeTab}\n          onReverseClick={onReverseClick}\n        />\n        <VStack w=\"100%\" gap=\"8px\" className=\"dlmm-tutorial-step-6\">\n          {!!dlmmApiPoolInfo?.id && !(fromTokenLock && toTokenLock) && (\n            <VStack gap=\"12px\" w=\"100%\" borderRadius=\"16px\">\n              {preCalcError && (\n                <ErrorTips\n                  tipsFontSize=\"12px\"\n                  tipsLineHeight=\"12px\"\n                  tips={'Amount too small to allocate across bins. Please increase the amount.'}\n                  type=\"warning\"\n                />\n              )}\n\n              <Button\n                w=\"100%\"\n                h=\"52px\"\n                margin=\"-1px -1px 5px\"\n                fontSize=\"18px\"\n                fontWeight=\"500\"\n                borderRadius=\"12px\"\n                isDisabled={btnDisabled}\n                isLoading={submitLoading}\n                onClick={handleAdd}\n              >\n                {btnText}\n              </Button>\n            </VStack>\n          )}\n        </VStack>\n      </VStack>\n    </VStack>\n  )\n}\n\nexport default H5Deposit\n","import TotalAmount from '@/components/common/TotalAmount'\nimport useDlmmLiquidityStore from '@/store/dlmm'\nimport useAddDlmmLiquidityStore from '@/store/dlmm/addDlmmLiquidity'\nimport { ErrorTips, TradeInputGroup } from '@cetus/design'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport { Box, Button, HStack, Text, VStack } from '@chakra-ui/react'\nimport AutoFillSwitch from '../AutoFillSwitch'\nimport SelectStrategy from '../SelectStrategy'\nimport SetPriceRange from '../SetPriceRange'\nimport { DLMMDepositProps } from './type'\n\nfunction PCDeposit({\n  btnText,\n  btnDisabled,\n  onReverseClick,\n  direct,\n  perText,\n  rangeTabList,\n  currentRangeTab,\n  handleAmountChange,\n  fromAmountValue,\n  toAmountValue,\n  fromBalanceInfo,\n  toBalanceInfo,\n  handleAdd,\n  submitLoading,\n  isReverse,\n  preCalcLoading\n}: DLMMDepositProps<any>) {\n  const { dlmmApiPoolInfo } = useDlmmLiquidityStore()\n  const {\n    fromToken,\n    toToken,\n    fromAmount,\n    toAmount,\n    byAmountIn,\n    totalAmount,\n    fromTokenLock,\n    toTokenLock,\n    minPriceData,\n    maxPriceData,\n    positionCount,\n    numBins,\n    fromLoading,\n    toLoading,\n    preCalcError\n  } = useAddDlmmLiquidityStore()\n\n  const { getTokenAmountValue } = useTokenPrice()\n\n  return (\n    <>\n      <HStack gap=\"16px\" align=\"flex-start\">\n        <VStack flex=\"1\" minW=\"588px\">\n          <SetPriceRange\n            perText={perText}\n            direct={direct !== isReverse}\n            minPriceData={minPriceData}\n            maxPriceData={maxPriceData}\n            rangeTabList={rangeTabList}\n            currentRangeTab={currentRangeTab}\n            onReverseClick={onReverseClick}\n            preCalcLoading={preCalcLoading}\n          />\n        </VStack>\n        <VStack gap=\"8px\" minW=\"420px\" maxW=\"460px\" w=\"460px\" p=\"18px 8px 16px\" bg=\"card_bg\" borderRadius=\"16px\" align=\"flex-start\">\n          <VStack className=\"dlmm-tutorial-step-4\" align=\"flex-start\" gap=\"16px\" p=\"0 8px\" w=\"100%\">\n            <Text lineHeight=\"20px\" fontSize=\"16px\" fontWeight=\"500\" color=\"text_caption\">\n              Select Strategy\n            </Text>\n            <SelectStrategy />\n          </VStack>\n\n          <VStack w=\"100%\">\n            <VStack gap=\"12px\" w=\"100%\" className=\"dlmm-tutorial-step-3\" p=\"0 8px 2px\">\n              <HStack w=\"100%\" h=\"32px\" justify=\"space-between\">\n                <Text lineHeight=\"20px\" fontSize=\"16px\" fontWeight=\"500\" color=\"text_caption\">\n                  Deposit Amounts\n                </Text>\n                <HStack>\n                  <AutoFillSwitch disabled={fromTokenLock || toTokenLock} />\n                </HStack>\n              </HStack>\n              <Box w=\"100%\" position=\"relative\">\n                <TradeInputGroup\n                  onClick={() => {\n                    onReverseClick(rangeTabList.find(tab => tab.key !== currentRangeTab))\n                  }}\n                  from={{\n                    wrapStyle: { h: '108px' },\n                    balance: fromBalanceInfo?.balanceFormat || '',\n                    value: fromAmount,\n                    amountValue: getTokenAmountValue(fromToken?.coin_type, fromAmount),\n                    loading: false,\n                    onChange: value => {\n                      handleAmountChange(value, true, fromToken?.coin_type === dlmmApiPoolInfo?.coin_type_a)\n                    },\n                    selectable: false,\n                    placeholder: '0.0',\n                    token: fromToken,\n                    remainBalanceAmount: 0.5,\n                    onFocusChange: (focus: boolean) => {\n                      if (focus && +(fromAmount + '') && !byAmountIn) {\n                        handleAmountChange(fromAmount + '', true, fromToken?.coin_type === dlmmApiPoolInfo?.coin_type_b)\n                      }\n                    },\n                    lock: {\n                      isLock: fromTokenLock && !toTokenLock,\n                      text: 'The current price is outside your specified price range. Single-asset deposit only.'\n                    },\n                    balancePosition: 'bottom',\n                    rightJustify: 'space-around'\n                  }}\n                  to={{\n                    wrapStyle: { h: '108px' },\n                    balance: toBalanceInfo?.balanceFormat || '',\n                    value: toAmount,\n                    amountValue: getTokenAmountValue(toToken?.coin_type, toAmount),\n                    loading: false,\n                    remainBalanceAmount: 0.5,\n                    onFocusChange: (focus: boolean) => {\n                      if (focus && +(toAmount + '') && byAmountIn) {\n                        handleAmountChange(toAmount + '', false, toToken?.coin_type === dlmmApiPoolInfo?.coin_type_a)\n                      }\n                    },\n                    onChange: value => {\n                      handleAmountChange(value, false, toToken?.coin_type === dlmmApiPoolInfo?.coin_type_b)\n                    },\n                    selectable: false,\n                    placeholder: '0.0',\n                    token: toToken,\n                    lock: {\n                      isLock: !fromTokenLock && toTokenLock,\n                      text: 'The current price is outside your specified price range. Single-asset deposit only.'\n                    },\n                    balancePosition: 'bottom',\n                    rightJustify: 'space-around'\n                  }}\n                  iconParams={{\n                    xlinkHref: '#icon-icon_add',\n                    svgFill: 'text_caption'\n                  }}\n                  lock={{\n                    isLock: fromTokenLock && toTokenLock,\n                    style: { h: '224px' }\n                  }}\n                />\n              </Box>\n            </VStack>\n            <VStack w=\"100%\" gap=\"8px\" className=\"dlmm-tutorial-step-6\" p=\"2px 8px 0px\">\n              {!!dlmmApiPoolInfo?.id && !(fromTokenLock && toTokenLock) && (\n                <VStack gap=\"12px\" w=\"100%\" borderRadius=\"16px\">\n                  {preCalcError && (\n                    <ErrorTips\n                      tipsFontSize=\"12px\"\n                      tipsLineHeight=\"12px\"\n                      tips={'Amount too small to allocate across bins. Please increase the amount.'}\n                      type=\"warning\"\n                    />\n                  )}\n                  <Button\n                    w=\"100%\"\n                    h=\"52px\"\n                    margin=\"-1px -1px 5px\"\n                    fontSize=\"18px\"\n                    fontWeight=\"500\"\n                    borderRadius=\"12px\"\n                    isDisabled={btnDisabled}\n                    isLoading={submitLoading || preCalcLoading}\n                    onClick={handleAdd}\n                  >\n                    {btnText}\n                  </Button>\n\n                  {fromToken && toToken && (\n                    <>\n                      {/* {positionCount > 1 && (\n                        <HTextLabelBox\n                          label={\n                            <HStack gap=\"4px\">\n                              <Text>Position</Text>\n                              <CetusTooltip\n                                tooltip={\n                                  <Text lineHeight=\"20px\" fontSize=\"12px\">\n                                    Each position covers up to 69 bins on Sui, multiple positions are needed to cover a larger range.\n                                  </Text>\n                                }\n                              >\n                                <Icon xlinkHref=\"#icon-icon_tips\" />\n                              </CetusTooltip>\n                            </HStack>\n                          }\n                          value={positionCount + ''}\n                          labelStyle={{\n                            fontSize: '14px'\n                          }}\n                          valueStyle={{\n                            fontSize: '14px'\n                          }}\n                        />\n                      )} */}\n\n                      <TotalAmount totalAmount={totalAmount} loading={preCalcLoading} valueStyle={{ h: '20px', lineHeight: '20px' }} />\n\n                      {/* {apiPoolInfo?.haveFarming && (\n                        <AutoStakePosition disabled={fromTokenLock || toTokenLock} checked={autoStakePosition} onChange={handleChangeAutoStake} />\n                      )} */}\n                    </>\n                  )}\n                </VStack>\n              )}\n\n              {/* {apiPoolInfo?.haveFarming && (\n                <AutoStakePosition disabled={fromTokenLock || toTokenLock} checked={autoStakePosition} onChange={handleChangeAutoStake} />\n              )} */}\n            </VStack>\n          </VStack>\n\n          <>\n            {/* {apiPoolInfo?.vaultCategory && (\n              <VaultBanner\n                displayTokenA={selectTokenA}\n                displayTokenB={selectTokenB}\n                feeDisplay={apiPoolInfo?.feeDisplay}\n                clmmPool={apiPoolInfo?.poolAddress}\n                vaultId={apiPoolInfo?.vaultId}\n                isReverse={apiPoolInfo?.isReverse}\n                category={apiPoolInfo?.vaultCategory}\n              />\n            )} */}\n          </>\n        </VStack>\n      </HStack>\n    </>\n  )\n}\n\nexport default PCDeposit\n","import AddLiquidityConfirmModal from '@/components/liquidity/dlmm/AddLiquidityConfirmModal'\nimport useAddDlmmLiquidity from '@/hooks/dlmm/useAddDlmmLiquidity'\nimport useAddDlmmLiquidityButton from '@/hooks/dlmm/useAddDlmmLiquidityButton'\nimport useDlmmDeposit from '@/hooks/dlmm/useDlmmDeposit'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { Token } from '@cetus/types'\nimport NFTModal from '../NFTModal'\nimport H5Deposit from './H5'\nimport PCDeposit from './PC'\n\nimport useDlmmLiquidityStore from '@/store/dlmm'\nimport useAddDlmmLiquidityStore from '@/store/dlmm/addDlmmLiquidity'\nimport useZapStore from '@/store/zap/index'\n\ninterface RangeTab {\n  label: string\n  key: string\n  imgInfo: {\n    src: string | undefined\n    w: string\n    h: string\n    borderRadius: string\n    fallbackSrc: string\n  }\n}\n\ninterface FeeTier {\n  title: string\n  feeDisplay: string\n  feeRate: string\n  poolAddress: string\n  tvl: unknown\n}\n\ninterface DLMMDepositProps<T extends RangeTab = RangeTab> {\n  rangeTabList: T[]\n  binStep?: number\n  baseFeeDisplay: string\n  getList: () => Promise<void>\n  getPrice: () => Promise<void>\n}\n\nfunction DLMMDeposit<T extends RangeTab, K extends FeeTier>({ rangeTabList, binStep, baseFeeDisplay, getList, getPrice }: DLMMDepositProps<T>) {\n  const { dlmmApiPoolInfo, dlmmContractPoolInfo } = useDlmmLiquidityStore()\n  const { fromToken, toToken, setFromToken, setToToken, fromLoading, toLoading, preCalcError } = useAddDlmmLiquidityStore()\n  const { zapAmount, currentZapToken } = useZapStore()\n  const { direct, perText, debouncedOnReverseClick, currentRangeTab } = useDlmmDeposit<T>({\n    rangeTabList\n  })\n  const {\n    handleAmountChange,\n    byAmountIn,\n    setByAmountIn,\n    fromAmount,\n    fromAmountValue,\n    setFromAmount,\n    toAmount,\n    toAmountValue,\n    setToAmount,\n    liquidityAmount,\n    fromBalanceInfo,\n    toBalanceInfo,\n    totalAmount,\n    fromTokenLock,\n    toTokenLock,\n    handleAdd,\n    confirmModalOpen,\n    setConfirmModalOpen,\n    nftOpen,\n    setNftOpen,\n    relatedPosId,\n    handleSubmit,\n    submitLoading,\n    positionCount,\n    isReverse,\n    preCalcLoading\n  } = useAddDlmmLiquidity(getList, direct)\n\n  const { btnText, btnDisabled } = useAddDlmmLiquidityButton()\n\n  const { isApp } = useWindowWidth()\n  const props = {\n    btnText,\n    btnDisabled,\n    onReverseClick: debouncedOnReverseClick,\n    direct,\n    perText,\n    rangeTabList,\n    currentRangeTab,\n    fromBalanceInfo,\n    toBalanceInfo,\n    fromAmountValue,\n    toAmountValue,\n    handleAmountChange,\n    handleAdd,\n    handleSubmit,\n    submitLoading,\n    preCalcLoading,\n    isReverse\n  }\n  // const { stepMap, showPoolTutorial, onTutorialExit, onTutorialNext, onTutorialPrevious, dlmmTutorialStep } = useTutorial()\n  return (\n    <>\n      {isApp ? <H5Deposit {...props} /> : <PCDeposit {...props} />}\n      {confirmModalOpen && (\n        <AddLiquidityConfirmModal\n          onClose={() => setConfirmModalOpen(false)}\n          data={{ baseFeeDisplay: baseFeeDisplay as any }}\n          onSubmit={handleSubmit}\n          isReverse={isReverse}\n          isDirect={direct}\n        />\n      )}\n\n      {nftOpen && relatedPosId && dlmmApiPoolInfo?.poolId && (\n        <NFTModal\n          onClose={() => setNftOpen(false)}\n          tokenA={dlmmApiPoolInfo.displayTokenA as Token}\n          tokenB={dlmmApiPoolInfo.displayTokenB as Token}\n          poolId={dlmmApiPoolInfo?.poolId}\n          posId={relatedPosId}\n          fee={dlmmApiPoolInfo?.feeDisplay as string}\n          binStep={dlmmContractPoolInfo?.binStep}\n          isReverse={isReverse}\n          direct={direct}\n          positionCount={positionCount}\n        />\n      )}\n      {/* {showPoolTutorial && (\n        <Tour\n          isOpen={showPoolTutorial}\n          step={stepMap[dlmmTutorialStep]}\n          onExit={onTutorialExit}\n          onNext={onTutorialNext}\n          onPrev={onTutorialPrevious}\n        />\n      )} */}\n    </>\n  )\n}\n\nexport default DLMMDeposit\n","import useDlmmLiquidityStore from '@/store/dlmm'\nimport useDlmmPositionStore from '@/store/dlmm-position'\nimport { useRpcListener } from '@cetus/hooks'\nimport useQueryParams from '@cetus/hooks/src/useQueryParams'\nimport { useAccountStore } from '@cetus/stores'\nimport { useEffect, useMemo, useState } from 'react'\nimport usePositionList, { RpcNodeError } from '../position/usePositionList'\n\nfunction useMyDlmmPositions() {\n  const { dlmmPosBaseListLoading, dlmmPosBaseListGroupByPool } = useDlmmPositionStore()\n  const { manualRefresh } = useDlmmLiquidityStore()\n  const { currentAccount, onWalletModal } = useAccountStore()\n  const { getPositionBaseList, getPosRelatedData } = usePositionList()\n  const [rpcNodeErrorStr, setRpcNodeErrorStr] = useState('')\n  const { poolId } = useQueryParams()\n  /**\n   * 获取个人所有仓位列表\n   * Get the list of all personal positions\n   * @param walletAddress string 钱包地址 Wallet address\n   */\n  const handleGetPositionList = async (walletAddress: string, poolId: string) => {\n    try {\n      const res = await getPositionBaseList(walletAddress, { clmmPool: poolId, fetchType: 'dlmm' })\n      if (typeof res === 'string') {\n        setRpcNodeErrorStr(res)\n      }\n    } catch (error) {\n      if (error instanceof RpcNodeError) {\n        setRpcNodeErrorStr(error.message)\n      }\n    }\n  }\n\n  /**\n   * 初始化请求个人所有仓位列表\n   * Initialize request personal position list\n   */\n  useEffect(() => {\n    if (currentAccount?.address && poolId) {\n      handleGetPositionList(currentAccount?.address, poolId)\n    }\n  }, [currentAccount?.address, poolId])\n\n  /**\n   * 手动刷新，重新请求个人所有仓位列表\n   * Manually refresh and request personal position list\n   */\n  useEffect(() => {\n    if (manualRefresh && currentAccount?.address && poolId) {\n      handleGetPositionList(currentAccount?.address, poolId)\n    }\n  }, [manualRefresh])\n\n  /**\n   * 监听rpc节点切换，重新请求个人仓位列表\n   * Listen for rpc node switching and request personal position list\n   */\n  useRpcListener({\n    onRpcChange: () => {\n      if (currentAccount?.address) {\n        handleGetPositionList(currentAccount?.address, poolId)\n      }\n    }\n  })\n  /**\n   * 获取当前池子的个人仓位列表\n   * Get the personal position list of the current pool\n   */\n  const data = useMemo(() => {\n    if (poolId) {\n      const res = dlmmPosBaseListGroupByPool[poolId.toLowerCase() || '']\n      if (res) {\n        return res?.list\n      }\n      return []\n    }\n    return []\n  }, [poolId, JSON.stringify(dlmmPosBaseListGroupByPool)])\n\n  return {\n    data,\n    rpcNodeErrorStr,\n    dlmmPosBaseListLoading,\n    currentAccount,\n    onWalletModal\n  }\n}\n\nexport default useMyDlmmPositions\n","import DLMMPositionItem from '@/components/position/dlmm/list/DLMMPositionItem'\nimport useMyDlmmPositions from '@/hooks/dlmm/useMyDlmmPositions'\nimport useDlmmLiquidityStore from '@/store/dlmm'\nimport { Block } from '@cetus/design'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { NoData } from '@cetus/ui-kit'\nimport { Button, VStack } from '@chakra-ui/react'\nimport { useNavigate } from 'react-router-dom'\n\nfunction MyPositions({ priceDirect }: { priceDirect?: boolean }) {\n  const navigate = useNavigate()\n  const { dlmmApiPoolInfo } = useDlmmLiquidityStore()\n  const { currentAccount, dlmmPosBaseListLoading, data, rpcNodeErrorStr, onWalletModal } = useMyDlmmPositions()\n  const { isApp } = useWindowWidth()\n  return (\n    <VStack minW={{ base: '100%', lg: '1024px' }}>\n      {!currentAccount?.address ? (\n        <NoData type=\"nowallet\" onboard={() => onWalletModal(true)} />\n      ) : data && data?.length > 0 ? (\n        <Block p={{ base: '12px', lg: '16px' }} borderRadius=\"16px\">\n          <DLMMPositionItem poolInfo={{ list: data }} priceDirect={priceDirect} />\n        </Block>\n      ) : rpcNodeErrorStr ? (\n        <NoData type=\"nodata\" text={rpcNodeErrorStr} />\n      ) : (\n        <NoData\n          type=\"nodata\"\n          text=\"You don't have positions for this pool\"\n          children={\n            <Button\n              borderRadius=\"8px\"\n              mt=\"8px\"\n              fontWeight=\"500\"\n              w=\"120px\"\n              h=\"28px\"\n              fontSize=\"12px\"\n              onClick={() => navigate(`/dlmm?tab=deposit&poolId=${dlmmApiPoolInfo?.poolId}`)}\n            >\n              Create Position\n            </Button>\n          }\n        />\n      )}\n    </VStack>\n  )\n}\n\nexport default MyPositions\n","import AprTooltip from '@/components/common/aprTooltip'\nimport { DLMMPoolApiInfo } from '@/types/pool'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { formatPrice } from '@cetus/utils'\nimport { Box, HStack, Stack, Text } from '@chakra-ui/react'\nimport { useMemo } from 'react'\nimport StatsInfo from './StatsInfo'\n\ntype DLMMPoolsStatsProps = {\n  apiPoolInfo: DLMMPoolApiInfo\n  apiPoolInfoLoading: boolean\n  tvlLoading: boolean\n  totalTvl: string\n}\n\nfunction PoolsStats({ apiPoolInfo, apiPoolInfoLoading, tvlLoading, totalTvl }: DLMMPoolsStatsProps) {\n  const cursorStyle = useMemo(() => {\n    if (apiPoolInfo?.haveFarming || (apiPoolInfo?.miningAprList && apiPoolInfo?.miningAprList.length > 0)) {\n      return 'help'\n    }\n    return 'text'\n  }, [apiPoolInfo])\n  const { isApp } = useWindowWidth()\n  return (\n    <Stack flexDir={{ base: 'column', lg: 'row' }} gap={{ base: '20px', lg: '28px' }}>\n      <StatsInfo\n        label=\"Pool APR\"\n        value={\n          <AprTooltip poolInfo={apiPoolInfo} placement={isApp ? 'bottom-end' : 'bottom'}>\n            <HStack justify=\"flex-end\" align=\"flex-end\" gap=\"4px\" lineHeight=\"14px\" h=\"14px\">\n              <Text\n                as=\"span\"\n                fontSize=\"14px\"\n                color={cursorStyle == 'help' ? 'primary' : 'text_caption'}\n                fontWeight=\"500\"\n                cursor={cursorStyle}\n                // textUnderlineOffset=\"2px\"\n                // textDecoration={cursorStyle == 'help' ? 'underline dotted' : 'none'}\n                pos=\"relative\"\n              >\n                {apiPoolInfo?.feeAndMiningAprDisplay !== '' ? apiPoolInfo?.feeAndMiningAprDisplay : '--'}\n                {cursorStyle == 'help' && <Box w=\"100%\" borderBottom=\"1px dotted\" borderColor=\"primary\" pos=\"absolute\" bottom=\"-1px\" />}\n              </Text>\n\n              {apiPoolInfo?.haveFarming && (\n                <Text fontSize=\"12px\" lineHeight=\"12px\" h=\"12px\" color=\"primary\" fontWeight=\"500\">\n                  +{apiPoolInfo?.farmingAprDisplay}\n                </Text>\n              )}\n            </HStack>\n          </AprTooltip>\n        }\n      />\n      <StatsInfo\n        label=\"TVL\"\n        value={apiPoolInfo?.tvl && apiPoolInfo?.tvl !== '--' ? `$${formatPrice(apiPoolInfo?.tvl, 2)}` : '--'}\n        loading={!apiPoolInfo || !apiPoolInfo?.tvl}\n      />\n      <StatsInfo label=\"Volume (24H)\" value={apiPoolInfo?.volume24Display || '--'} loading={!apiPoolInfo || !apiPoolInfo?.volume24Display} />\n      <StatsInfo label=\"Fees (24H)\" value={apiPoolInfo?.fees24Display || '--'} loading={!apiPoolInfo || !apiPoolInfo?.fees24Display} />\n    </Stack>\n  )\n}\n\nexport default PoolsStats\n","import { Box, Button, Modal, ModalBody, ModalCloseButton, ModalContent, ModalFooter, ModalOverlay, Text, VStack } from '@chakra-ui/react'\n\ninterface SelectTokenAnddFeeConfirmProps {\n  title: string\n  subTitle?: string\n  btnText: string\n  isOpen: boolean\n  onClose: () => void\n  onConfirm: () => void\n}\n\nfunction SelectTokenAnddFeeConfirm({ title, subTitle, btnText, isOpen, onClose, onConfirm }: SelectTokenAnddFeeConfirmProps) {\n  return (\n    <Modal autoFocus={false} returnFocusOnClose={false} isOpen={isOpen} onClose={onClose} isCentered>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalCloseButton />\n        <ModalBody p=\"20px 16px\">\n          <VStack>\n            <Box w=\"140px\" h=\"140px\" bg=\"center / contain no-repeat url('/images/img_pool@2x.png')\" />\n            <Text h=\"20px\" lineHeight=\"20px\" fontSize=\"14px\" color=\"text_caption\" fontWeight=\"500\">\n              {title}\n            </Text>\n            {subTitle && <Text fontSize=\"14px\">{subTitle}</Text>}\n          </VStack>\n        </ModalBody>\n\n        <ModalFooter p=\"0 16px 16px\">\n          <Button\n            w=\"100%\"\n            h=\"40px\"\n            borderRadius=\"12px\"\n            colorScheme=\"blue\"\n            fontSize=\"16px\"\n            fontWeight=\"500\"\n            onClick={() => {\n              onClose()\n              onConfirm()\n            }}\n          >\n            {btnText}\n          </Button>\n        </ModalFooter>\n      </ModalContent>\n    </Modal>\n  )\n}\n\nexport default SelectTokenAnddFeeConfirm\n","/**\n * 流动性交互Hook\n * Liquidity Interaction Hook\n */\nimport useDlmmLiquidityStore from '@/store/dlmm'\nimport useDlmmPositionStore from '@/store/dlmm-position'\nimport useAddDlmmLiquidityStore from '@/store/dlmm/addDlmmLiquidity'\nimport useCreatePoolStore from '@/store/pool/useCreatePool'\nimport useDlmmPoolsStore from '@/store/pool/useDlmmPoolStore'\nimport useSwapWidgetStore from '@/store/swap-widget/swapWidget'\nimport useSwapWidgetConfigStore from '@/store/swap-widget/swapWidgetConfig'\nimport { Tab } from '@cetus/design/src/components/common/SelectTab'\nimport useQueryParams from '@cetus/hooks/src/useQueryParams'\nimport { useGetToken } from '@cetus/hooks/src/useToken'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport { useAccountStore } from '@cetus/stores'\nimport useWebConfigStore from '@cetus/stores/src/useWebConfigStore'\nimport { CoinType, Token } from '@cetus/types'\nimport envConfigs from '@cetus/types/src/config/envConfigs'\nimport { cancelBubble } from '@cetus/utils'\nimport { extractStructTagFromType } from '@cetusprotocol/common-sdk'\nimport { useCallback, useEffect, useLayoutEffect, useMemo, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport useFavoriteDlmmPool from '../pool/useFavoriteDlmmPool'\n\n/**\n * 标签页枚举\n * Tab enumeration\n */\nexport enum TabsEnum {\n  deposit = 'Provide Liquidity',\n  positions = 'My Positions',\n  analytics = 'Analytics'\n}\n\n/**\n * 默认标签页列表\n * Default tab list\n */\nconst defaultTabList: { label: TabsEnum; key: keyof typeof TabsEnum }[] = [\n  {\n    label: TabsEnum.deposit,\n    key: 'deposit'\n  },\n  {\n    label: TabsEnum.positions,\n    key: 'positions'\n  },\n  {\n    label: TabsEnum.analytics,\n    key: 'analytics'\n  }\n]\n\n/**\n * 流动性交互Hook\n * @param apiPoolInfo - 池子API信息 / Pool API information\n */\nfunction useDlmmLiquidityInteraction() {\n  // 获取URL参数和导航函数\n  // Get URL parameters and navigation function\n  const { tab, poolId } = useQueryParams()\n  const navigate = useNavigate()\n  const { dlmmApiPoolInfo, setDlmmApiPoolInfo, dlmmApiPoolInfoLoading, netError } = useDlmmLiquidityStore()\n  // 状态管理\n  // State management\n  const [baseFee, setBaseFee] = useState<any>()\n  const [tabList, setTabList] = useState<Tab[]>(defaultTabList)\n  const [currentTab, setCurrentTab] = useState<keyof typeof TabsEnum>(defaultTabList?.find(item => item.key === tab)?.key || defaultTabList[0].key)\n  const [selectedTokenA, setSelectedTokenA] = useState<Token>()\n  const [selectedTokenB, setSelectedTokenB] = useState<Token>()\n\n  // Store hooks\n  const { dlmmPosBaseListGroupByPool } = useDlmmPositionStore()\n  const { addFavorites, removeFavorites } = useFavoriteDlmmPool()\n  const { dlmmPoolFavoriteIds } = useDlmmPoolsStore()\n  const { fromToken, toToken } = useAddDlmmLiquidityStore()\n\n  // Token price hook\n  const { fetchTokenPrices } = useTokenPrice()\n  const { currentAccount } = useAccountStore()\n\n  const { setFromCoin, setToCoin } = useSwapWidgetStore()\n  const { setIsOpen } = useSwapWidgetConfigStore()\n  const { setPoolType, setCurrentStep } = useCreatePoolStore()\n\n  const { isSwapWidgetDisplay } = useWebConfigStore()\n  /**\n   * 跳转到swap token页面，PC打开小组件，H5跳转页面\n   * Jump to swap token page, PC opens widget, H5 jumps page\n   */\n  const onJump2Swap = () => {\n    if (isSwapWidgetDisplay) {\n      setIsOpen(true)\n    } else {\n      navigate(`/swap/${dlmmApiPoolInfo?.coin_type_a}/${dlmmApiPoolInfo?.coin_type_b}`)\n    }\n  }\n\n  const onJumpAddIncentive = () => {\n    navigate(`/incentive?poolAddress=${dlmmApiPoolInfo?.poolAddress}`)\n  }\n\n  /**\n   * 切换小组件token与当前池子相同\n   */\n  useEffect(() => {\n    if (fromToken && toToken) {\n      setFromCoin(fromToken)\n      setToCoin(toToken)\n    }\n    return () => {\n      setFromCoin(envConfigs.clmm_swap.from_coin)\n      setToCoin(envConfigs.clmm_swap.to_coin)\n    }\n  }, [fromToken, toToken])\n\n  /**\n   * 计算当前池子的仓位数量\n   * Calculate the number of positions for current pool\n   */\n  const positionNum = useMemo(() => {\n    if (poolId && poolId !== 'undefined') {\n      const res = dlmmPosBaseListGroupByPool[poolId.toLowerCase() || '']\n      if (res && res?.list) {\n        return res?.list.length > 0 ? res?.list.length : undefined\n      }\n      return undefined\n    }\n    return undefined\n  }, [JSON.stringify(dlmmPosBaseListGroupByPool), poolId])\n\n  /**\n   * 更新标签页列表中的仓位数量\n   * Update position numbers in tab list\n   */\n  useEffect(() => {\n    setTabList(\n      defaultTabList?.map(tab => ({\n        ...tab,\n        num: tab.label === TabsEnum.positions && currentAccount?.address ? positionNum : undefined\n      }))\n    )\n  }, [positionNum, currentAccount?.address])\n\n  /**\n   * 同步URL参数中的标签页\n   * Synchronize tab from URL parameters\n   */\n  useLayoutEffect(() => {\n    if (tab && tab !== currentTab) {\n      setCurrentTab(tab as keyof typeof TabsEnum)\n    }\n  }, [tab])\n\n  /**\n   * 判断当前池子是否被收藏\n   * Check if current pool is favorited\n   */\n  const isFavoritePool = useMemo(() => {\n    return dlmmPoolFavoriteIds?.includes(poolId || '')\n  }, [JSON.stringify(dlmmPoolFavoriteIds), poolId])\n\n  /**\n   * 处理收藏/取消收藏\n   * Handle favorite/unfavorite\n   */\n  const onChangeFavorites = (e: any) => {\n    cancelBubble(e)\n    if (poolId) {\n      // 如果当前池子已经被收藏，则移除收藏\n      isFavoritePool ? removeFavorites(poolId) : addFavorites(poolId)\n    }\n  }\n\n  const favoriteStyle = useMemo(() => {\n    return isFavoritePool\n      ? {\n          tooltip: 'Remove from Watchlist',\n          xlinkHref: '#icon-icon_star_sel',\n          svgFill: 'primary_blue',\n          svgHover: 'primary'\n        }\n      : {\n          tooltip: 'Add to Watchlist',\n          xlinkHref: '#icon-icon_star',\n          svgFill: 'text_paragraph',\n          svgHover: 'text_caption'\n        }\n  }, [isFavoritePool])\n\n  /**\n   * 同步选中的代币\n   * Synchronize selected tokens\n   */\n\n  useEffect(() => {\n    if (dlmmApiPoolInfo?.displayTokenA && dlmmApiPoolInfo?.displayTokenB) {\n      console.log('dlmmApiPoolInfo?.displayTokenA: ', dlmmApiPoolInfo)\n      if (dlmmApiPoolInfo?.displayTokenA?.coin_type !== 'undefined') {\n        setSelectedTokenA(dlmmApiPoolInfo?.displayTokenA)\n      }\n      if (dlmmApiPoolInfo?.displayTokenB?.coin_type !== 'undefined') {\n        setSelectedTokenB(dlmmApiPoolInfo?.displayTokenB)\n      }\n    }\n    if (dlmmApiPoolInfo?.displayTokenA?.coin_type && dlmmApiPoolInfo?.displayTokenB?.coin_type) {\n      fetchTokenInfo([dlmmApiPoolInfo?.displayTokenA?.coin_type, dlmmApiPoolInfo?.displayTokenB?.coin_type]).then(res => {\n        console.log('dlmmApiPoolInfo?.displayTokenA res: ', res)\n        if (res && res?.size > 0) {\n          setSelectedTokenA(res?.get(dlmmApiPoolInfo?.displayTokenA?.coin_type))\n          setSelectedTokenB(res?.get(dlmmApiPoolInfo?.displayTokenB?.coin_type))\n        }\n      })\n    }\n  }, [dlmmApiPoolInfo?.displayTokenA?.coin_type, dlmmApiPoolInfo?.displayTokenB?.coin_type])\n\n  /**\n   * 确认创建池子\n   * Confirm pool creation\n   */\n\n  const onConfirm = () => {\n    setCurrentStep(2)\n    setPoolType('dlmm')\n    navigate(\n      `/create-pool/${dlmmApiPoolInfo?.displayTokenA?.coin_type}/${dlmmApiPoolInfo?.displayTokenB?.coin_type}/${baseFee?.binStep}?baseFactor=${baseFee?.baseFactor}`\n    )\n  }\n\n  // 刷新市场价格\n  const refreshMarketPrice = () => {\n    const list = []\n    if (fromToken) {\n      list.push(fromToken.coin_type)\n    }\n\n    if (toToken) {\n      list.push(toToken.coin_type)\n    }\n\n    if (list.length > 0) {\n      fetchTokenPrices(Array.from(new Set(list.filter(item => item && item !== 'undefined'))))\n    }\n  }\n  /**\n   * 当fromToken或toToken变化时，刷新市场价格\n   * When fromToken or toToken changes, refresh market price\n   */\n  useEffect(() => {\n    refreshMarketPrice()\n  }, [fromToken?.coin_type, toToken?.coin_type])\n\n  const { fetchTokenInfo } = useGetToken()\n\n  /**\n   * 切换代币\n   * Switch tokens\n   */\n  const handleSelectToken = useCallback(\n    async (token: Token, self_selected?: Token, other_selected?: Token, self_address?: string, other_address?: string, isDisplayA?: boolean) => {\n      const key = Object.keys(TabsEnum).find(tab => tab === currentTab)\n      const coinTypeList = [self_address, other_address].filter(Boolean)\n\n      const tokenMap = await fetchTokenInfo<CoinType[]>(coinTypeList as CoinType[])\n      if (other_selected?.coin_type || tokenMap?.get((other_address || '') as CoinType)?.coin_type) {\n        if (\n          extractStructTagFromType(token?.coin_type).full_address ===\n          extractStructTagFromType(other_selected?.coin_type || tokenMap?.get((other_address || '') as CoinType)?.coin_type || '').full_address\n        ) {\n          setSelectedTokenA(selectedTokenB)\n          setSelectedTokenB(selectedTokenA)\n        } else if (\n          extractStructTagFromType(token?.coin_type).full_address ===\n          extractStructTagFromType(self_selected?.coin_type || tokenMap?.get((self_address || '') as CoinType)?.coin_type || '').full_address\n        ) {\n          return\n        } else {\n          if (isDisplayA) {\n            navigate(\n              `/dlmm?tab=${key}&from=${token?.coin_type}&to=${other_selected?.coin_type || tokenMap?.get((other_address || '') as CoinType)?.coin_type}`\n            )\n          } else {\n            navigate(\n              `/dlmm?tab=${key}&from=${other_selected?.coin_type || tokenMap?.get((other_address || '') as CoinType)?.coin_type}&to=${token?.coin_type}`\n            )\n          }\n          setDlmmApiPoolInfo(null)\n        }\n      } else {\n        if (isDisplayA) {\n          navigate(`/dlmm?tab=${key}&from=${token?.coin_type}`)\n        } else {\n          navigate(`/dlmm?tab=${key}&to=${token?.coin_type}`)\n        }\n        setDlmmApiPoolInfo(null)\n      }\n    },\n    [selectedTokenA, selectedTokenB, currentTab]\n  )\n\n  /**\n   * 获取SelectToken组件的props\n   * Get props for SelectToken component\n   * @param address\n   * @param token\n   * @returns SelectTokenProps\n   */\n  const getSelectTokenProps = useCallback(\n    async (address?: string, token?: Token) => {\n      const tokenInfo = await fetchTokenInfo<CoinType>((address || '') as CoinType)\n      return {\n        value: token ? token : address ? tokenInfo : undefined,\n        isWhiteSelect: false,\n        whiteTokenList: undefined,\n        disabled: netError,\n        tokenStyle: { p: 0, border: 'none' },\n        tokenSize: '32px',\n        symbolStyle: { fontSize: '20px', fontWeight: '500' },\n        wrapStyle: { h: '32px', border: 'none', p: '0', bg: 'background' },\n        loading: !token && dlmmApiPoolInfoLoading\n      }\n    },\n    [netError, dlmmApiPoolInfoLoading]\n  )\n\n  return {\n    currentTab,\n    setCurrentTab,\n    tabList,\n    favoriteStyle,\n    onChangeFavorites,\n    selectedTokenA,\n    selectedTokenB,\n    setSelectedTokenA,\n    setSelectedTokenB,\n    onConfirm,\n    refreshMarketPrice,\n    onJump2Swap,\n    onJumpAddIncentive,\n    handleSelectToken,\n    getSelectTokenProps,\n    baseFee,\n    setBaseFee\n  }\n}\n\nexport default useDlmmLiquidityInteraction\n","import useDlmmLiquidityStore from '@/store/dlmm'\nimport useAddDlmmLiquidityStore from '@/store/dlmm/addDlmmLiquidity'\nimport { useAccountBalance, useInterval } from '@cetus/hooks'\nimport useQueryParams from '@cetus/hooks/src/useQueryParams'\nimport { useGetToken } from '@cetus/hooks/src/useToken'\nimport { useSdk } from '@cetus/sdk-factory'\nimport { useAccountStore } from '@cetus/stores'\nimport { isAvailableObject, textEllipses } from '@cetus/utils'\nimport { useEffect, useMemo } from 'react'\nimport useQuoteWhiteTokenList from '../create-pool/useQuoteWhiteTokenList'\nimport useGetDlmmContractPoolInfo from './useGetDlmmContractPoolInfo'\nimport useGetDlmmPoolRelatedData from './useGetDlmmPoolRelatedData'\nimport useDlmmLiquidityInteraction from './useLiquidityInteraction'\n\nfunction useDlmmLiquidity() {\n  const { currentAccount } = useAccountStore()\n  const { fetchAccountBalance } = useAccountBalance()\n  const {\n    dlmmApiPoolInfo,\n    dlmmContractPoolInfo,\n    setActiveBin,\n    currentBinStep,\n    setCurrentBinStep,\n    manualRefresh,\n    setCurrentPrice,\n    setManualRefresh,\n    resetLiquidity\n  } = useDlmmLiquidityStore()\n  const { fromToken, toToken, setFromToken, setToToken, resetAddLiquidity, setChartRefreshTrigger } = useAddDlmmLiquidityStore()\n  const {\n    currentTab,\n    setCurrentTab,\n    tabList,\n    favoriteStyle,\n    onChangeFavorites,\n    selectedTokenA,\n    selectedTokenB,\n    setSelectedTokenA,\n    setSelectedTokenB,\n    onConfirm,\n    refreshMarketPrice,\n    onJump2Swap,\n    onJumpAddIncentive,\n    handleSelectToken,\n    getSelectTokenProps,\n    baseFee,\n    setBaseFee\n  } = useDlmmLiquidityInteraction()\n  const dlmmSdk = useSdk('dlmm')\n  const { poolId } = useQueryParams()\n\n  const { quoteWhiteTokenList } = useQuoteWhiteTokenList()\n  const { getTokenInfo } = useGetToken()\n  const { getCurrentPrice, getList, relatedPoolList, baseFeeList, currentBaseFee, fetchPriceRange } = useGetDlmmPoolRelatedData()\n\n  const { getDlmmContractPoolInfo } = useGetDlmmContractPoolInfo()\n\n  // 设置代币 Set tokens\n  useEffect(() => {\n    if (isAvailableObject(dlmmApiPoolInfo) && isAvailableObject(dlmmContractPoolInfo)) {\n      setFromToken(dlmmApiPoolInfo?.displayTokenA)\n      setToToken(dlmmApiPoolInfo?.displayTokenB)\n      fetchPriceRange(dlmmApiPoolInfo?.poolId, dlmmContractPoolInfo!.binStep, dlmmApiPoolInfo!.tokenA, dlmmApiPoolInfo!.tokenB)\n    }\n  }, [dlmmApiPoolInfo?.poolId, dlmmContractPoolInfo?.binStep])\n\n  useEffect(() => {\n    setCurrentBinStep(dlmmContractPoolInfo?.binStep)\n  }, [dlmmContractPoolInfo?.binStep])\n\n  const onBinStepChange = (item: any) => {\n    setCurrentBinStep(item?.binStep)\n  }\n  /**\n   * 获取当前池子的token兑换价格\n   * Get the token exchange price of the current pool\n   */\n  const handleGetPrice = async () => {\n    if (poolId && dlmmApiPoolInfo && poolId === dlmmApiPoolInfo?.poolAddress) {\n      const _contractPoolInfo = await getDlmmContractPoolInfo(poolId)\n      if (_contractPoolInfo) {\n        getCurrentPrice({ ..._contractPoolInfo, dlmmApiPoolInfo })\n      }\n    }\n  }\n\n  /**\n   * 每5秒获取一次合约当前价格\n   * 只有在有效的poolId时才启动定时器\n   */\n  const { startTimer, stopTimer } = useInterval({\n    interval: 5 * 1000,\n    callback: () => {\n      handleGetPrice()\n    }\n  })\n\n  // 根据poolId状态控制定时器\n  useEffect(() => {\n    if (poolId && poolId !== 'undefined' && dlmmApiPoolInfo?.poolAddress) {\n      startTimer()\n    } else {\n      stopTimer()\n    }\n\n    return () => stopTimer()\n  }, [poolId, dlmmApiPoolInfo?.poolAddress, startTimer, stopTimer])\n\n  const handleRefreshPrice = () => {\n    refreshMarketPrice?.()\n    handleGetPrice?.()\n  }\n\n  /**\n   * 刷新按钮事件\n   * Refresh button event\n   * @param isManual 是否手动刷新\n   */\n  const handleRefresh = async (isManual?: boolean) => {\n    console.log('🚀 ~ handleRefresh ~ handleRefresh000:', isManual, manualRefresh)\n    if (isManual) {\n      setManualRefresh(true)\n      handleRefreshPrice()\n    }\n    if (poolId && poolId !== 'undefined') {\n      await getList({ poolId })\n    }\n    if (currentAccount?.address) {\n      await fetchAccountBalance()\n    }\n    setChartRefreshTrigger()\n    handleRefreshActiveBin()\n    setTimeout(() => {\n      setManualRefresh(false)\n    }, 1000)\n  }\n\n  useEffect(() => {\n    if (dlmmContractPoolInfo) {\n      handleRefreshActiveBin()\n    }\n  }, [dlmmContractPoolInfo?.activeId, dlmmContractPoolInfo?.id])\n\n  const handleRefreshActiveBin = async () => {\n    if (dlmmContractPoolInfo) {\n      const { bin_manager } = dlmmContractPoolInfo\n      const { activeId, binStep } = dlmmContractPoolInfo\n      dlmmSdk?.Pool.getBinInfo(bin_manager.bin_manager_handle, activeId, binStep).then(res => {\n        setActiveBin(res)\n      })\n    }\n  }\n\n  /**\n   * 生成当前池子deposit的token切换tab列表\n   * Generate the token switch tab list for the current pool deposit\n   */\n  const rangeTabList = useMemo(() => {\n    if (isAvailableObject(dlmmApiPoolInfo?.displayTokenA) && isAvailableObject(dlmmApiPoolInfo?.displayTokenB)) {\n      return [dlmmApiPoolInfo?.displayTokenA, dlmmApiPoolInfo?.displayTokenB]?.filter(Boolean).map(item => ({\n        label: textEllipses(item?.symbol, 8),\n        key: item?.coinType,\n        isToken: true,\n        imgInfo: {\n          src: item?.logo_url,\n          w: '16px',\n          h: '16px',\n          coinType: item ? item?.coinType : '',\n          showTagWidth: '8px',\n          showTagHeight: '8px'\n        }\n      }))\n    } else {\n      return []\n    }\n  }, [dlmmApiPoolInfo])\n\n  /**\n   * 初始化，获取账户余额，离开页面销毁数据\n   * Initialize, get account balance, destroy data when leaving the page\n   */\n  useEffect(() => {\n    if (currentAccount?.address) {\n      fetchAccountBalance()\n    }\n    return () => {\n      resetLiquidity()\n      resetAddLiquidity()\n    }\n  }, [])\n\n  /**\n   * 切换池子，重置数据\n   * Switch pools, reset data\n   */\n  useEffect(() => {\n    /**\n     * 保证地址栏的poolId和接口请求到的池子数据poolId相同时再进行操作\n     * Ensure that the poolId in the address bar and the poolId obtained from the interface are the same before performing operations\n     */\n    if (poolId && dlmmApiPoolInfo?.poolId !== poolId) {\n      // handleResetRange()\n      resetAddLiquidity()\n      resetLiquidity()\n      // resetDeposit()\n    }\n\n    if (poolId && poolId === dlmmApiPoolInfo?.poolId) {\n      handleGetPrice()\n    }\n  }, [poolId, dlmmApiPoolInfo?.poolId])\n\n  return {\n    rangeTabList,\n    dlmmApiPoolInfo,\n    selectedTokenA,\n    selectedTokenB,\n    setCurrentBinStep,\n    currentBinStep,\n    currentTab,\n    setCurrentTab,\n    tabList,\n    favoriteStyle,\n    onChangeFavorites,\n    setSelectedTokenA,\n    setSelectedTokenB,\n    onConfirm,\n    refreshMarketPrice,\n    onJump2Swap,\n    onJumpAddIncentive,\n    handleSelectToken,\n    getSelectTokenProps,\n    quoteWhiteTokenList,\n    onBinStepChange,\n    baseFeeList,\n    currentBaseFee,\n    baseFee,\n    setBaseFee,\n    handleRefresh,\n    handleGetPrice\n  }\n}\n\nexport default useDlmmLiquidity\n","import useDlmmLiquidityStore from '@/store/dlmm'\nimport useTvlInfoStore from '@/store/dlmm/dlmmTvl'\nimport useQueryParams from '@cetus/hooks/src/useQueryParams'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport { d } from '@cetus/utils'\nimport { fromDecimalsAmount } from '@cetusprotocol/common-sdk'\nimport { useEffect } from 'react'\n\nfunction useGetDlmmTvlInfo() {\n  const {\n    tokenAAmount,\n    setTokenAAmount,\n    tokenBAmount,\n    setTokenBAmount,\n    tokenAAmountUSD,\n    setTokenAAmountUSD,\n    tokenBAmountUSD,\n    setTokenBAmountUSD,\n    totalAmountUSD,\n    setTotalAmountUSD,\n    resetTvlInfo,\n    tvlLoading,\n    setTvlLoading\n  } = useTvlInfoStore()\n  const { dlmmApiPoolInfo, dlmmContractPoolInfo } = useDlmmLiquidityStore()\n\n  const { getTokenAmountValue, fetchTokenPrices, priceLoading } = useTokenPrice()\n\n  const { poolId } = useQueryParams()\n\n  const handleRefresh = async () => {\n    setTvlLoading(true)\n    try {\n      const coinTypeList: string[] = []\n      if (dlmmApiPoolInfo?.tokenA?.coin_type) {\n        coinTypeList.push(dlmmApiPoolInfo?.tokenA?.coin_type)\n      }\n      if (dlmmApiPoolInfo?.tokenB?.coin_type) {\n        coinTypeList.push(dlmmApiPoolInfo?.tokenB?.coin_type)\n      }\n      if (coinTypeList.length > 0) {\n        fetchTokenPrices(coinTypeList)\n      }\n    } catch (error) {\n      console.log('🚀 ~ PoolInfo ~ handleRefresh:', error)\n    } finally {\n      setTvlLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    resetTvlInfo()\n  }, [poolId])\n\n  useEffect(() => {\n    return () => {\n      resetTvlInfo()\n    }\n  }, [])\n\n  useEffect(() => {\n    handleRefresh()\n  }, [dlmmApiPoolInfo?.tvl, dlmmApiPoolInfo?.tokenA?.coin_type, dlmmApiPoolInfo?.tokenB?.coin_type])\n\n  useEffect(() => {\n    if (dlmmContractPoolInfo?.balanceA) {\n      setTokenAAmount(\n        d(dlmmContractPoolInfo?.balanceA)\n          .sub(dlmmContractPoolInfo?.protocolFeeA || '0')\n          .toString()\n      )\n    }\n  }, [dlmmContractPoolInfo?.balanceA, dlmmContractPoolInfo?.protocolFeeA, poolId])\n\n  useEffect(() => {\n    if (dlmmContractPoolInfo?.balanceB) {\n      setTokenBAmount(\n        d(dlmmContractPoolInfo?.balanceB)\n          .sub(dlmmContractPoolInfo?.protocolFeeB || '0')\n          .toString()\n      )\n    }\n  }, [dlmmContractPoolInfo?.balanceB, dlmmContractPoolInfo?.protocolFeeB, poolId])\n\n  useEffect(() => {\n    if (tokenAAmount && dlmmApiPoolInfo?.tokenA?.decimals && !Number.isNaN(Number(dlmmApiPoolInfo?.tokenA.decimals))) {\n      setTokenAAmountUSD(getTokenAmountValue(dlmmApiPoolInfo?.tokenA.coin_type, fromDecimalsAmount(tokenAAmount, dlmmApiPoolInfo?.tokenA.decimals)))\n    }\n  }, [tokenAAmount, priceLoading])\n\n  useEffect(() => {\n    if (tokenBAmount && dlmmApiPoolInfo?.tokenB?.decimals && !Number.isNaN(Number(dlmmApiPoolInfo?.tokenB.decimals))) {\n      setTokenBAmountUSD(getTokenAmountValue(dlmmApiPoolInfo?.tokenB.coin_type, fromDecimalsAmount(tokenBAmount, dlmmApiPoolInfo?.tokenB.decimals)))\n    }\n  }, [tokenBAmount, priceLoading])\n\n  useEffect(() => {\n    if ((tokenAAmountUSD || tokenBAmountUSD) && tokenAAmountUSD !== '--' && tokenBAmountUSD !== '--') {\n      setTotalAmountUSD(\n        d(tokenAAmountUSD || 0)\n          .plus(tokenBAmountUSD || 0)\n          .toString()\n      )\n    } else {\n      setTotalAmountUSD('--')\n    }\n  }, [tokenAAmountUSD, tokenBAmountUSD])\n  return {\n    tokenAAmount,\n    tokenBAmount,\n    tokenAAmountUSD,\n    tokenBAmountUSD,\n    totalAmountUSD,\n    setTotalAmountUSD,\n    tvlLoading\n  }\n}\n\nexport default useGetDlmmTvlInfo\n","import Slippage from '@/components/common/Slippage'\nimport PoolsAnalytics from '@/components/liquidity/dlmm/analytics/PoolsAnalytics'\nimport DLMMDeposit from '@/components/liquidity/dlmm/deposit'\nimport MyPositions from '@/components/liquidity/dlmm/MyPositions'\nimport PoolsStats from '@/components/liquidity/dlmm/PoolsStats'\nimport SelectTokenAnddFeeConfirm from '@/components/liquidity/dlmm/SelectTokenAndFeeConfirm'\nimport { SelectToken } from '@/components/selectPool/SelectToken'\nimport useDlmmLiquidity from '@/hooks/dlmm/useDlmmLiquidity'\nimport useGetDlmmTvlInfo from '@/hooks/dlmm/useGetDlmmTvlInfo'\nimport useMyDlmmPositions from '@/hooks/dlmm/useMyDlmmPositions'\nimport useGlobalStore from '@/store/common/global'\nimport useDlmmLiquidityStore from '@/store/dlmm'\nimport useAddDlmmLiquidityStore from '@/store/dlmm/addDlmmLiquidity'\nimport { isTrustedToken } from '@/utils'\nimport { CetusTooltip, CurrentPrice, FeeSelectBlock, SelectTab } from '@cetus/design'\nimport { baseFeeStepConfig } from '@cetus/design/src/components/common/feeSelect/config'\nimport { DlmmSelectFeeType } from '@cetus/design/src/components/common/feeSelect/type'\nimport WarningTokenTipsModal from '@cetus/design/src/components/common/WarningTokenTipModal'\nimport useQueryParams from '@cetus/hooks/src/useQueryParams'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { useSdk } from '@cetus/sdk-factory'\nimport { Token } from '@cetus/types'\nimport envConfigs from '@cetus/types/src/config/envConfigs'\nimport { BackButton, Icon, NoData, RefreshButton } from '@cetus/ui-kit'\nimport { removeComma } from '@cetus/utils'\nimport { fixCoinType } from '@cetusprotocol/common-sdk'\nimport { Box, Button, Center, HStack, Spinner, Stack, Text, useDisclosure, VStack } from '@chakra-ui/react'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { TabsEnum } from '../hooks/clmm/useLiquidityInteraction'\n\nfunction Dlmm() {\n  const navigate = useNavigate()\n  const { poolId, from, to } = useQueryParams()\n\n  const { dlmmApiPoolInfoLoading, currentPrice, reverseCurrentPrice, dlmmContractPoolInfo } = useDlmmLiquidityStore()\n\n  const {\n    dlmmApiPoolInfo,\n    selectedTokenA,\n    selectedTokenB,\n    setCurrentBinStep,\n    currentBinStep,\n    currentTab,\n    setCurrentTab,\n    tabList,\n    favoriteStyle,\n    onChangeFavorites,\n    setSelectedTokenA,\n    setSelectedTokenB,\n    onConfirm,\n    refreshMarketPrice,\n    onJump2Swap,\n    onJumpAddIncentive,\n    handleSelectToken,\n    getSelectTokenProps,\n    rangeTabList,\n    quoteWhiteTokenList,\n    onBinStepChange,\n    baseFeeList,\n    currentBaseFee,\n    baseFee,\n    setBaseFee,\n    handleRefresh,\n    handleGetPrice\n  } = useDlmmLiquidity()\n  // 获取个人所有仓位列表, 用于计算流动性占比\n  useMyDlmmPositions()\n\n  // console.log('0926##🚀 dlmmApiPoolInfo:', {\n  //   dlmmApiPoolInfo,\n  //   dlmmApiPoolInfoLoading,\n  //   poolId\n  // })\n\n  const { isApp } = useWindowWidth()\n  const dlmmSdk = useSdk('dlmm')\n  const { isOpen, onOpen, onClose } = useDisclosure()\n  const { setFromAmount, setToAmount } = useAddDlmmLiquidityStore()\n\n  const { totalAmountUSD: totalTvl, tvlLoading } = useGetDlmmTvlInfo()\n  const showContent = poolId && dlmmApiPoolInfo?.tokenA && dlmmApiPoolInfo?.tokenB\n  const { tooltip, xlinkHref, svgFill, svgHover } = favoriteStyle\n\n  const [selectTokenAProps, setSelectTokenAProps] = useState<any>({})\n  const [selectTokenBProps, setSelectTokenBProps] = useState<any>({})\n  const [priceDirect, setPriceDirect] = useState(true)\n  const fetchSelectTokenProps = useCallback(async () => {\n    try {\n      const tokenAProps = await getSelectTokenProps(from, selectedTokenA)\n      const tokenBProps = await getSelectTokenProps(to, selectedTokenB)\n      setSelectTokenAProps(tokenAProps)\n      setSelectTokenBProps(tokenBProps)\n    } catch (error) {\n      console.log(error, 'fetchSelectTokenProps')\n    }\n  }, [from, to, selectedTokenA, selectedTokenB, getSelectTokenProps])\n  useEffect(() => {\n    fetchSelectTokenProps()\n  }, [fetchSelectTokenProps])\n\n  useEffect(() => {\n    setFromAmount('')\n    setToAmount('')\n  }, [currentTab])\n\n  const onFeeChange = useCallback(\n    async (value: DlmmSelectFeeType) => {\n      if (value?.poolAddress) {\n        navigate(`/dlmm?poolId=${value?.poolAddress}`)\n      } else {\n        if (selectedTokenA?.coin_type && selectedTokenB?.coin_type) {\n          try {\n            const address = await dlmmSdk?.Pool?.getPoolAddress(\n              fixCoinType(selectedTokenA?.coin_type, true),\n              fixCoinType(selectedTokenB?.coin_type, true),\n              value?.binStep,\n              value?.baseFactor as number\n            )\n            console.log(\n              address,\n              fixCoinType(selectedTokenA?.coin_type, true),\n              fixCoinType(selectedTokenB?.coin_type, true),\n              selectedTokenA,\n              selectedTokenB,\n              'onFeeChange'\n            )\n            if (address) {\n              navigate(`/dlmm?poolId=${address}`)\n            } else {\n              setBaseFee(value)\n              onOpen()\n            }\n          } catch (error) {\n            setBaseFee(value)\n            onOpen()\n          }\n        } else {\n          setBaseFee(value)\n          onOpen()\n        }\n      }\n    },\n    [selectedTokenA, selectedTokenB]\n  )\n  const { backUrl } = useGlobalStore()\n  return (\n    <>\n      <Box w=\"100%\" mt=\"20px\">\n        <HStack w=\"100%\" minW={{ base: '100%', lg: '1024px' }} justify=\"space-between\">\n          <BackButton text=\"Pools\" onClick={() => (backUrl ? navigate(backUrl) : navigate('/pools?tab=dlmm_pools'))} />\n          {showContent && (\n            <HStack gap=\"8px\">\n              <CetusTooltip placement=\"top\" tooltip={tooltip} fontSize=\"12px\">\n                <Button\n                  variant=\"outline\"\n                  w=\"32px\"\n                  h=\"32px\"\n                  lineHeight=\"32px\"\n                  onClick={onChangeFavorites}\n                  p=\"0 6px\"\n                  borderRadius=\"8px\"\n                  color=\"text_paragraph\"\n                  bg=\"background\"\n                  display=\"flex\"\n                  justifyContent=\"center\"\n                  gap=\"4px\"\n                  sx={{\n                    _hover: {\n                      color: 'text_caption',\n                      svg: {\n                        fill: svgHover\n                      }\n                    }\n                  }}\n                >\n                  <Icon xlinkHref={xlinkHref} svgFill={svgFill} svgHover={svgHover} fontSize=\"18px\" />\n                </Button>\n              </CetusTooltip>\n              <CetusTooltip placement=\"top\" tooltip=\"Trade\" fontSize=\"12px\">\n                <Button\n                  variant=\"outline\"\n                  bg=\"background\"\n                  h=\"32px\"\n                  w=\"32px\"\n                  onClick={onJump2Swap}\n                  borderRadius=\"8px\"\n                  p=\"0 6px\"\n                  color=\"text_paragraph\"\n                  display=\"flex\"\n                  justifyContent=\"center\"\n                  gap=\"4px\"\n                  sx={{\n                    _hover: {\n                      color: 'text_caption',\n                      svg: {\n                        fill: 'text_caption'\n                      }\n                    }\n                  }}\n                >\n                  <Icon xlinkHref=\"#icon-icon_swap1\" fontSize=\"16px\" />\n                </Button>\n              </CetusTooltip>\n              {envConfigs.show_incentive_page && (\n                <CetusTooltip placement=\"top\" tooltip=\"Add Incentive\" fontSize=\"12px\">\n                  <Button\n                    variant=\"outline\"\n                    bg=\"background\"\n                    h=\"32px\"\n                    w=\"32px\"\n                    onClick={onJumpAddIncentive}\n                    borderRadius=\"8px\"\n                    p=\"0 6px\"\n                    color=\"text_paragraph\"\n                    display=\"flex\"\n                    justifyContent=\"center\"\n                    gap=\"4px\"\n                    sx={{\n                      _hover: {\n                        color: 'text_caption',\n                        svg: {\n                          fill: 'text_caption'\n                        }\n                      }\n                    }}\n                  >\n                    <Icon xlinkHref=\"#icon-icon_rewards\" fontSize=\"16px\" />\n                  </Button>\n                </CetusTooltip>\n              )}\n              <CetusTooltip placement=\"top\" tooltip=\"Refresh\" fontSize=\"12px\">\n                <Box>\n                  <RefreshButton\n                    key={poolId}\n                    handleRefresh={handleRefresh}\n                    isAutoRefresh\n                    refreshInterval={30}\n                    innerStyle={{ bg: 'background' }}\n                    w=\"32px\"\n                    h=\"32px\"\n                    borderRadius=\"8px\"\n                    bg=\"background\"\n                  />\n                </Box>\n              </CetusTooltip>\n            </HStack>\n          )}\n        </HStack>\n        <Stack\n          flexDir={{ base: 'column', lg: 'row' }}\n          w=\"100%\"\n          minW={{ base: '100%', lg: '1024px' }}\n          justify=\"space-between\"\n          mt=\"20px\"\n          gap={{ base: '20px', lg: '8px' }}\n        >\n          <Stack flexDir={{ base: 'column', lg: 'row' }} gap={{ base: '20px', lg: '12px' }} align={{ base: 'flex-start', lg: 'center' }}>\n            <HStack gap=\"12px\">\n              <SelectToken\n                onChange={token => {\n                  handleSelectToken(token, selectedTokenA, selectedTokenB, from, to, true)\n                }}\n                {...selectTokenAProps}\n              />\n              <SelectToken\n                onChange={token => {\n                  handleSelectToken(token, selectedTokenB, selectedTokenA, to, from, false)\n                }}\n                {...selectTokenBProps}\n              />\n            </HStack>\n            <FeeSelectBlock<'dlmm'>\n              poolType=\"dlmm\"\n              value={\n                currentBaseFee\n                  ? { ...currentBaseFee, binStep: dlmmContractPoolInfo?.binStep || baseFeeStepConfig[currentBaseFee.fee || ''] }\n                  : undefined\n              }\n              loading={!currentBaseFee}\n              onChange={item => onFeeChange(item)}\n              options={baseFeeList}\n            />\n          </Stack>\n          {showContent && (\n            <PoolsStats apiPoolInfo={dlmmApiPoolInfo} totalTvl={totalTvl} apiPoolInfoLoading={dlmmApiPoolInfoLoading} tvlLoading={tvlLoading} />\n          )}\n        </Stack>\n        {showContent ? (\n          <>\n            <Stack\n              w=\"100%\"\n              flexDir={{ base: 'column', lg: 'row' }}\n              justify={{ base: 'center', lg: 'space-between' }}\n              align={{ base: 'flex-start', lg: 'center' }}\n              minW={{ base: '100%', lg: '1024px' }}\n            >\n              <SelectTab<any, any>\n                type=\"borderTab\"\n                tabList={tabList}\n                currentTab={currentTab}\n                handleChangeTab={item => {\n                  const key = Object.keys(TabsEnum).find(tab => TabsEnum[tab as keyof typeof TabsEnum] === item.label)\n                  if (poolId) {\n                    navigate(`/dlmm?tab=${key}&poolId=${poolId}`)\n                  }\n                  setCurrentTab(key as keyof typeof TabsEnum)\n                }}\n                wrapStyle={{\n                  w: { base: '100%', lg: 'auto' },\n                  justify: { base: 'space-between', lg: 'flex-start' },\n                  p: { base: '0 12px', lg: '0' },\n                  bg: { base: 'bg_secondary', lg: 'transparent' },\n                  h: isApp ? '60px' : '58px',\n                  gap: { base: '8px', lg: '45px' },\n                  border: { base: '1px solid', lg: 'none' },\n                  borderColor: { base: 'border', lg: 'transparent' },\n                  borderRadius: { base: '16px', lg: 'unset' },\n                  mt: { base: '20px', lg: '12px' }\n                }}\n                itemStyle={{\n                  fontSize: isApp ? '14px' : '16px',\n                  fontWeight: '500'\n                }}\n              />\n              <HStack>\n                {currentTab !== 'deposit' && dlmmApiPoolInfo && (\n                  <Stack\n                    w={isApp ? '100%' : 'auto'}\n                    mt={{ base: '4px', lg: '12px' }}\n                    gap=\"12px\"\n                    flexDir={{ base: 'column', lg: 'row' }}\n                    justify={{ base: 'center', lg: 'space-between' }}\n                    align={{ base: 'flex-start', lg: 'center' }}\n                  >\n                    <Text>Current Price</Text>\n                    <CurrentPrice\n                      noCenter={isApp ? true : false}\n                      fromToken={dlmmApiPoolInfo?.displayTokenA}\n                      toToken={dlmmApiPoolInfo?.displayTokenB}\n                      fromValue=\"1\"\n                      toValue={removeComma(dlmmApiPoolInfo?.isReverse ? reverseCurrentPrice : currentPrice).toString()}\n                      color=\"text_caption\"\n                      wrapStyle={isApp ? { w: '100%' } : {}}\n                      pageDirect={priceDirect}\n                      handlePageToggleDirect={() => setPriceDirect(!priceDirect)}\n                    />\n                  </Stack>\n                )}\n                {currentTab === 'deposit' && !isApp && (\n                  <Box mt={{ base: '4px', lg: '12px' }}>\n                    <Slippage slippageType=\"liquidity\" poolType=\"dlmm\" />\n                  </Box>\n                )}\n              </HStack>\n            </Stack>\n\n            <Box h={{ base: '12px', lg: '8px' }} />\n            {currentTab === 'deposit' && (\n              <DLMMDeposit\n                rangeTabList={rangeTabList as any}\n                getList={() => handleRefresh(true)}\n                getPrice={handleGetPrice}\n                binStep={dlmmContractPoolInfo?.binStep}\n                baseFeeDisplay={dlmmApiPoolInfo?.feeDisplay}\n              />\n            )}\n            {currentTab === 'positions' && <MyPositions priceDirect={priceDirect} />}\n            {currentTab === 'analytics' && <PoolsAnalytics priceDirect={priceDirect} />}\n          </>\n        ) : (\n          <Box mt=\"20px\">\n            {!dlmmApiPoolInfo && dlmmApiPoolInfoLoading ? (\n              <Center w=\"100%\" h=\"480px\" background=\"bg_secondary\" borderRadius=\"12px\" border=\"1px solid\" borderColor=\"border\">\n                <Spinner />\n              </Center>\n            ) : (\n              <NoData type=\"custom\" imgUrl=\"/images/img_pool@2x.png\" h=\"480px\">\n                <VStack>\n                  {selectedTokenA && selectedTokenB ? (\n                    isTrustedToken(selectedTokenA, quoteWhiteTokenList) || isTrustedToken(selectedTokenB, quoteWhiteTokenList) ? (\n                      <>\n                        <Text h=\"20px\" lineHeight=\"20px\" fontSize=\"14px\" color=\"text_caption\" fontWeight=\"500\">\n                          This Pool has not been initialized\n                        </Text>\n                        <Text fontSize=\"14px\">Do you want to initialize it?</Text>\n                        <Button\n                          mt=\"12px\"\n                          w=\"120px\"\n                          h=\"32px\"\n                          borderRadius=\"8px\"\n                          colorScheme=\"blue\"\n                          fontSize=\"14px\"\n                          fontWeight=\"500\"\n                          onClick={() => {\n                            onClose()\n                            onConfirm()\n                          }}\n                        >\n                          Initialized Pool\n                        </Button>\n                      </>\n                    ) : (\n                      <Text h=\"20px\" lineHeight=\"20px\" fontSize=\"14px\" color=\"text_caption\">\n                        No Liquidity Data\n                      </Text>\n                    )\n                  ) : (\n                    <Text h=\"20px\" lineHeight=\"20px\" fontSize=\"14px\" color=\"text_caption\">\n                      Select the token you want to provide liquidity for.\n                    </Text>\n                  )}\n                </VStack>\n              </NoData>\n            )}\n          </Box>\n        )}\n      </Box>\n      {/* Token 警告弹窗 */}\n      {selectedTokenA && selectedTokenB && (\n        <WarningTokenTipsModal\n          tokensInfo={[selectedTokenA, selectedTokenB]}\n          waringModalCancel={(tokenInfo: Token[]) => {\n            navigate('/pools?tab=dlmm_pools')\n          }}\n        />\n      )}\n      <SelectTokenAnddFeeConfirm\n        title=\"This Pool has not been initialized\"\n        subTitle=\"Do you want to initialize it?\"\n        btnText=\"Initialized Pool\"\n        isOpen={isOpen}\n        onClose={onClose}\n        onConfirm={onConfirm}\n      />\n    </>\n  )\n}\n\nexport default Dlmm\n"],"names":["useDlmmTransactionHistory","dlmmSdk","useSdk","fetchByApi","useFetch","params","res","TransactionsHistory","error","poolId","paginationArgs","_a","APP_ENV","useDlmmRecentTransactions","getTransactionsHistoryBySDK","isLoading","setIsLoading","useState","list","setList","currentPage","setCurrentPage","nextCursor","setNextCursor","hasNextPage","setHasNextPage","dlmmApiPoolInfo","manualRefresh","setManualRefresh","useDlmmLiquidityStore","useQueryParams","useEffect","fetchData","result","_data","item","_parsedJson","_firstToken","fixCoinType","_b","_secondToken","_c","_d","p","EventEnums","_e","_f","bnToAmount","pre","useDebounceEffect","iconMap","Event","type","HStack","jsx","Icon","Text","Amounts","items","isReverse","isApp","useWindowWidth","VStack","AmountItem","jsxs","SingleCoinImage","addComma","textEllipses","getColumns","getExplorerUrl","tx","AddressUnderline","block_time","getTimeDifferenceString","RecentTransactions","useExplorer","onCurrentPageChange","NoData","H5MapTable","_","index","Table","Center","Button","Spinner","DateTabsEnum","DateTypeEnum","useBinsTrade","direct","currentDateType","setCurrentDateType","binsTradeData","setBinsTradeData","dlmmContractPoolInfo","chartLoading","setChartLoading","hoverData","setHoverData","getHoverTime","time","useChartTime","fetchBinsTradeData","useFetchBinsTradeData","useLayoutEffect","getBinsTradeData","tradeData","price","BinUtils","displayPrice","d","formatPriceUseInDlmmAxis","a","b","handleDateTabChange","dateTypes","value","BinsTradingVolumeChart","data","onChangeValue","noXAxis","maxBinsLength","hoverValue","setHoverValue","hoverPrice","setHoverPrice","currentPriceBin","setCurrentPriceBin","handleMouseMove","e","binId","formatNumber","handleMouseLeave","showData","useMemo","currentPriceIndex","half","startIndex","endIndex","leftGap","rightGap","maxValue","ResponsiveContainer","BarChart","XAxis","CustomizedXAxisTick","YAxis","Tooltip","EmptyTooltip","formatNumberWithLtMinPrecision","removeComma","CustomizedCursor","Bar","CustomBar","entry","Cell","x","y","width","height","payload","v","BinsTradingVolume","priceDirect","currentDateTypeLabel","setMaxBinsLength","handleAdd","newLength","handleSub","Heading","ActionButton","SelectTab","Box","store","set","get","useTvlInfoStore","create","getRatio","PoolInfo","fromToken","toToken","useAddDlmmLiquidityStore","tokenAAmount","tokenBAmount","tokenAAmountUSD","tokenBAmountUSD","totalAmountUSD","tvlLoading","tokenARatio","tokenBRatio","usePoolInfo","maxFee","MAX_FEE_RATE","FEE_PRECISION","variableFee","_variableFee","FeeUtils","dynamicFee","_dynamicFee","maxFeeRate","Grid","InfoItem","AddressCopyLink","CetusTooltip","Skeleton","Progress","TokenCard","useDlmmPoolLiquidityDistribution","currentBinStep","currentPrice","isInitialized","useSdkStore","maxBinRangeData","setMaxBinRangeData","getBinsInfoByPool","useDlmmGetAllBinWithPool","poolAllBinObj","setPoolAllBinObj","getTokenPrice","useTokenPrice","tokenAPriceInfo","tokenBPriceInfo","useDeepCompareEffect","isEmptyObj","getMaxBinRangeData","activeBin","allBinsLength","useGetDlmmPoolRelatedData","setCurrentPrice","quoteWhiteTokenList","useQuoteWhiteTokenList","getList","relatedPoolList","useGetDlmmRelatedPools","getTokenInfo","useGetToken","setPriceRangeMap","useDlmmDepositStore","fetchPriceRange","binStep","tokenA","tokenB","DLMMPoolsIdRangePath","rangesWithDateTypeMap","min","max","getCurrentPrice","poolInfo","decimalsA","decimalsB","tokenAInfo","tokenBInfo","_price","getPerText","useCallback","baseFeeList","getBaseFeeList","dlmmDefaultFeeOptions","title","l","isTrustedToken","currentBaseFee","_currentFeeTier","PoolLiquidityDistribution","reverseCurrentPrice","tokenAPrice","tokenBPrice","windowWidth","toValue","formatPrice","Fragment","Legend","FunnelPrice","CurrentLiquidityChart","PoolsAnalytics","Stack","AnalyticsCharts","RecentTransaction","DLMMAddLiquidityConfirmModal","props","onClose","onSubmit","baseFeeDisplay","isDirect","fromAmount","toAmount","byAmountIn","totalAmount","fromTokenLock","toTokenLock","minPriceData","maxPriceData","positionCount","setIsChecked","useNotifiStore","setDirect","perText","onOk","debounce","notifiStatus","isActive","Modal","ModalOverlay","ModalContent","ModalHeader","ModalCloseButton","ModalBody","CoinPairImage","_g","_h","PoolTag","TradeConfirmAmountInfo","PositionStatus","PriceItem","Divider","TotalAmount","DLMM_MAX_BIN_NUMBER","useInitDlmmPoolPriceRange","getDefaultBinPriceAndId","useCreatePriceBin","setMaxPriceData","setMinPriceData","initPriceRange","lower_bin_id","upper_bin_id","isUserChange","lower_price","upper_price","displayUpperPrice","reverseUpperPrice","displayReverseUpperPrice","getRelatedDisplayChartPrice","displayLowerPrice","reverseLowerPrice","displayReverseLowerPrice","forceRefresh","_binStep","decimalA","decimalB","activeId","useAddDlmmLiquidity","submitLoading","setSubmitLoading","preCalcLoading","setPreCalcLoading","isAutoFill","setIsAutoFill","setCurrentBinStep","strategy","batchSignAndExecuteTransaction","getTransactionStatus","transactionSuccess","useTransaction","dlmmMevProtect","maxCapForGas","transactionMode","customGasPrice","liquiditySlippage","useGlobalStore","transactionConfirmation","useTransactionModal","setBinInfos","useDlmmPosDetailStore","preCalcUuidRef","useRef","setFromAmount","fromAmountValue","setFromAmountValue","setToAmount","toAmountValue","setToAmountValue","setByAmountIn","isTokenA","setIsTokenA","setFromToken","setToToken","setTotalAmount","setFromTokenLock","setToTokenLock","setTokenMaxA","setTokenMaxB","tokenMaxA","tokenMaxB","liquidityAmount","setLiquidityAmount","confirmModalOpen","setConfirmModalOpen","nftOpen","setNftOpen","relatedPosId","setRelatedPosId","addLiquidityInfo","setAddLiquidityInfo","setPreCalcError","setPositionCount","setNumBins","numBins","setBinIdRange","resetAddLiquidity","getNumBins","handleInitPriceRange","minBinId","maxBinId","defaultBinIds","useNotifiSubscription","isChecked","handleAmountChange","_byAmountIn","_isTokenA","handleAutoFillPreAdd","handleNotAutoFillPreAdd","useDlmmPreCalc","onDlmmNotAutoFillPreCalc","coinAmountA","amountToBN","coinAmountB","isInputAmountA","isInputAmountB","lowerBinId","upperBinId","isDefaultBinIds","defaultBinsNum","uuid","v4","totalValue","binInfos","onDlmmAutoFillPreCalc","amount","fixAmountA","displayCoinAmountA","displayCoinAmountB","isAvailableObject","count","num","fromBalanceInfo","useGetTokenBalance","toBalanceInfo","currentAccount","onWalletModal","useAccountStore","resetInputAmount","fetchAccountBalance","useAccountBalance","handleSubmit","TrackDataParams","toastInfo","txs","bins","totalBatches","i","batchBinInfo","getBatchBinInfo","addOption","bin_infos","trackData","status","balanceChanges","otherParams","description","formatDescription","info","isPartialSuccess","amountAF","amountBF","getBalanceChanges","response","posId","farmsPosId","parsePositionIdFromEvent","minId","maxId","useAddDlmmLiquidityButton","preCalcError","submitBtnInfo","btnInfo","useDLMMDeposit","rangeTabList","setFromLoading","setToLoading","currentRangeTab","setCurrentRangeTab","coinType","debouncedOnReverseClick","useDebounceFunction","NFTModal","fee","poolType","navigate","useNavigate","setIsDirect","onViewDetail","Block","cancelBubble","ModalFooter","AutoFillSwitch","disabled","onChange","FormControl","FormLabel","Switch","allBins","baseToken","quoteToken","maxBin","minBin","minBinNum","maxBinNum","MaxBinRangeDisplayNum","createBinItem","formatPriceFromBin","liquidity","combinedList","binItem","useDlmmAddLiquidityChart","getBinInfosByAutoFill","getBinInfosByBothAmount","chartRefreshTrigger","preCalcParams","maxBinLoading","setMaxBinLoading","currentLiquidityBins","setCurrentLiquidityBins","dlmmPosBaseListGroupByPool","dlmmPosLiquidityData","useDlmmPositionStore","rangeChangeType","setRangeChangeType","otherPosBinObj","setOtherPosBinObj","toLargeRange","otherPosBinList","newOtherPosBinObj","liquidityData","bin","binInfo","amountA","fromDecimalsAmount","amountB","formatBinList","fetchPoolAllBinObj","getPoolAllBinObj","toSetMaxBinRangeData","minIndex","maxIndex","_i","_l","_k","_j","handleRangeChange","isfromCurrentLiquidityChart","baseDecimal","quoteDecimal","minPrice","displayMinPrice","reverseMinPrice","displayReverseMinPrice","maxPrice","displayMaxPrice","reverseMaxPrice","displayReverseMaxPrice","_minPriceData","_maxPriceData","maxBinRangeDataLen","beforeListMinBin","beforeListMaxBin","calcChartBinsData","lower","upper","useDlmmPriceRange","handleActionBinPrice","binIdRange","buildPriceData","useMinMaxPriceData","handlePriceAction","bin_id","_binId","adjustMaxBinId","adjustReferBinId","adjustMinBinId","handleAddPrice","handleSubPrice","basePrice","min_price","lower_price_format","ControlPriceRange","lowerPrice","upperPrice","wrapStyle","children","onPriceChange","PriceInput","NumBins","onNumBinsBlur","onNumBinsChange","size","useSize","minH","InputBox","WithTooltipInfo","NumericFormatInput","useQuickPriceRangeChange","showMaxWarning","setShowMaxWarning","showMinWarning","setShowMinWarning","formatMinMaxBinId","useMinMaxBinIdByAmount","formatMinMaxPriceData","handlePriceChange","binRes","priceRes","currentNumBins","setCurrentNumBins","handleChangeTab","val","activeInput","setActiveInput","minValue","setMinValue","preMinValue","setPreMinValue","setMaxValue","preMaxValue","setPreMaxValue","minGap","maxGap","numBinsTabs","totalGap","minPercent","maxPercent","isMinInput","isMaxInput","minInputRef","minCursorPos","maxInputRef","maxCursorPos","handleMinInput","handleMaxInput","adjustedPos","onMinInputBlur","number","onMinInputChange","stringValue","numberValue","s","quickTabs","QuickPriceRange","onMaxInputChange","onMaxInputBlur","appH","NumberInput","valueString","valueNumber","NumberInputField","DlmmRangeChart","currentLiquidityBinsLoading","chartBinsData","BinRangeSelectChart","SetPriceRange","onReverseClick","getDlmmContractPoolInfo","useGetDlmmContractPoolInfo","handleReset","_currentPrice","handleNumBinsBlur","maxBinRange","fixNumBins","_minBinId","_maxBinId","handleNumBinsChange","input","priceImpactBasedOnMarket","usePriceImpact","priceImpactBasedOnMarketDisplay","DivisionBlock","tab","getReversePrice","PriceRangeForDate","ErrorTips","H5Deposit","btnText","btnDisabled","fromLoading","toLoading","getTokenAmountValue","Slippage","TradeInputGroup","focus","SelectStrategy","PCDeposit","DLMMDeposit","getPrice","zapAmount","currentZapToken","useZapStore","useDlmmDeposit","AddLiquidityConfirmModal","useMyDlmmPositions","dlmmPosBaseListLoading","getPositionBaseList","usePositionList","rpcNodeErrorStr","setRpcNodeErrorStr","handleGetPositionList","walletAddress","RpcNodeError","useRpcListener","MyPositions","DLMMPositionItem","PoolsStats","apiPoolInfo","apiPoolInfoLoading","totalTvl","cursorStyle","StatsInfo","AprTooltip","SelectTokenAnddFeeConfirm","subTitle","isOpen","onConfirm","TabsEnum","defaultTabList","useDlmmLiquidityInteraction","setDlmmApiPoolInfo","dlmmApiPoolInfoLoading","netError","baseFee","setBaseFee","tabList","setTabList","currentTab","setCurrentTab","selectedTokenA","setSelectedTokenA","selectedTokenB","setSelectedTokenB","addFavorites","removeFavorites","useFavoriteDlmmPool","dlmmPoolFavoriteIds","useDlmmPoolsStore","fetchTokenPrices","setFromCoin","setToCoin","useSwapWidgetStore","setIsOpen","useSwapWidgetConfigStore","setPoolType","setCurrentStep","useCreatePoolStore","isSwapWidgetDisplay","useWebConfigStore","onJump2Swap","onJumpAddIncentive","envConfigs","positionNum","isFavoritePool","onChangeFavorites","favoriteStyle","fetchTokenInfo","refreshMarketPrice","handleSelectToken","token","self_selected","other_selected","self_address","other_address","isDisplayA","key","coinTypeList","tokenMap","extractStructTagFromType","getSelectTokenProps","address","tokenInfo","useDlmmLiquidity","setActiveBin","resetLiquidity","setChartRefreshTrigger","onBinStepChange","handleGetPrice","_contractPoolInfo","startTimer","stopTimer","useInterval","handleRefreshPrice","handleRefresh","isManual","handleRefreshActiveBin","bin_manager","useGetDlmmTvlInfo","setTokenAAmount","setTokenBAmount","setTokenAAmountUSD","setTokenBAmountUSD","setTotalAmountUSD","resetTvlInfo","setTvlLoading","priceLoading","Dlmm","from","to","onOpen","useDisclosure","showContent","tooltip","xlinkHref","svgFill","svgHover","selectTokenAProps","setSelectTokenAProps","selectTokenBProps","setSelectTokenBProps","setPriceDirect","fetchSelectTokenProps","tokenAProps","tokenBProps","onFeeChange","backUrl","BackButton","RefreshButton","SelectToken","FeeSelectBlock","baseFeeStepConfig","CurrentPrice","WarningTokenTipsModal"],"mappings":"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"}