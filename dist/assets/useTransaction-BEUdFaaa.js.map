{"version":3,"file":"useTransaction-BEUdFaaa.js","sources":["../../../utils/src/error.ts","../../src/store/common/useBatchAuthStore.ts","../../../../node_modules/.pnpm/shio-fast-sdk@0.0.6_typescript@5.9.3/node_modules/shio-fast-sdk/dist/esm/src/index.js","../../../hooks/src/resolveCoinBalance.ts","../../../hooks/src/useFastModeTransaction.ts","../../../hooks/src/useMsafeTransaction.ts","../../../../node_modules/.pnpm/shio-sdk@1.0.9/node_modules/shio-sdk/dist/index.js","../../src/hooks/common/useTransaction.tsx"],"sourcesContent":["/**\n * 用户拒绝\n * @param error\n * @returns\n */\nexport function isUserRejectedError(error: any) {\n  try {\n    return error && (error.includes('user') || error.includes('User')) && error.includes('reject')\n  } catch (error1) {\n    return false\n  }\n}\n\n/**\n * 创建池子存在错误\n * @param error\n * @returns\n */\nexport function isCreatePoolExistError(error: any) {\n  const errorString = String(error)\n  if (errorString.indexOf('Some(\"create_pool_internal\")') > -1 && errorString.indexOf(` }, 1`) > -1) {\n    return true\n  }\n  return false\n}\n\nexport function isPriceSlippageError(error: any) {\n  const errorString = String(error)\n  if (\n    errorString.indexOf('withdraw_with_proof') > -1 ||\n    errorString.indexOf('check_coin_threshold') > -1 ||\n    errorString.indexOf('Identifier(\"balance\")') > -1 ||\n    errorString.indexOf('validate_active_id_slippage') > -1 ||\n    errorString.indexOf('err_amount_out_slippage_check_failed') > -1\n  ) {\n    return true\n  }\n\n  if (\n    errorString.indexOf('remove_liquidity') > -1 &&\n    (errorString.indexOf('in command 1') > -1 ||\n      errorString.indexOf('in command 2') > -1 ||\n      errorString.indexOf('in command 4') > -1 ||\n      errorString.indexOf('in command 5') > -1)\n  ) {\n    return true\n  }\n\n  if (\n    errorString.indexOf('repay_add_liquidity') > -1 &&\n    (errorString.indexOf('in command 1') > -1 ||\n      errorString.indexOf('in command 2') > -1 ||\n      errorString.indexOf('in command 3') > -1 ||\n      errorString.indexOf('in command 4') > -1 ||\n      errorString.indexOf('in command 5') > -1)\n  ) {\n    return true\n  }\n  if (\n    errorString.indexOf('add_liquidity_by_strategy_slippage_exceed') > -1 &&\n    (errorString.indexOf('in command 1') > -1 ||\n      errorString.indexOf('in command 2') > -1 ||\n      errorString.indexOf('in command 3') > -1 ||\n      errorString.indexOf('in command 4') > -1 ||\n      errorString.indexOf('in command 5') > -1)\n  ) {\n    return true\n  }\n  return false\n}\n\nexport function isNotFindTxHashError(error: any) {\n  const errorString = String(error)\n  if (errorString.includes('Could not find the referenced transaction')) {\n    return true\n  }\n  return false\n}\n\nexport function isTRPCClientError(error: any) {\n  const errorString = String(error)\n  if (errorString.includes('TRPCClientError:')) {\n    return true\n  }\n  return false\n}\n\nexport function isSuiHTTPStatusError(error: any) {\n  const status = error.status\n  const errorString = String(error)\n\n  if ([429, 503, 502, 400].includes(status) || errorString.includes('Could not find the referenced object')) {\n    return true\n  }\n  return false\n}\n\nexport function isMaxCapError(error: any) {\n  const errorString = String(error)\n  if (errorString.includes('Max cap reached.')) {\n    return true\n  }\n  return false\n}\n\nexport function isSuiMaxCapError(error: any) {\n  const errorString = String(error)\n  if (errorString.includes('Gas fee exceeds')) {\n    return true\n  }\n  return false\n}\n\nexport function isFastModeServiceError(error: any) {\n  const errorString = String(error)\n  if (errorString.includes('Fast Mode service error')) {\n    return true\n  }\n  return false\n}\n\nexport function isNotSupportMsafe(error: any) {\n  const errorString = String(error)\n  if (errorString.includes('The current operation does not support msafe wallet')) {\n    return true\n  }\n  return false\n}\n\nexport function isVaultHardCapError(error: any) {\n  const errorString = String(error)\n  if (errorString.indexOf('hard_cap_reached') > -1) {\n    return true\n  }\n  return false\n}\n\nexport function isRfqExpiredError(error: any) {\n  const errorString = String(error)\n  if (errorString.indexOf('Some(\"err_expired\") }, 6') > -1) {\n    return true\n  }\n  return false\n}\n\nexport function isBalanceNotEnoughError(error: any) {\n  const errorString = String(error)\n  //  Balance of gas object 47821067 is lower than the needed amount: 1925879736\n  if (errorString.includes('Balance of gas') && errorString.includes('is lower than')) {\n    return true\n  }\n\n  if (errorString.includes('InsufficientGas')) {\n    return true\n  }\n\n  // error: 'InsufficientCoinBalance in command 1', errorString: 'Transaction failed'}\n  // if (errorString.includes('InsufficientCoinBalance')) {\n  //   return true\n  // }\n  return false\n}\n\ntype ErrorMatcher = (error: any) => boolean\ntype ErrorMessage = string | ((error: any) => string)\n\nconst errorMap: { matcher: ErrorMatcher; message: ErrorMessage }[] = [\n  { matcher: isUserRejectedError, message: 'User rejected the request' },\n  { matcher: isBalanceNotEnoughError, message: 'Insufficient gas for this transaction.' },\n  {\n    matcher: isNotFindTxHashError,\n    message: 'Oops. Failed to sync data from your txid. Please check your txn status from explorer or from your wallet.'\n  },\n  {\n    matcher: isSuiHTTPStatusError,\n    message: 'RPC loading failed. Try resubmission or check your network. You can also switch an RPC in settings to try again.'\n  },\n  {\n    matcher: isMaxCapError,\n    message: 'Max cap reached. This is to prevent your txn from overpaying. You can choose to edit your gas max cap in settings if needed.'\n  },\n  {\n    matcher: isSuiMaxCapError,\n    message: 'Gas fee exceeds the maximum gas budget on Sui.'\n  },\n  { matcher: isFastModeServiceError, message: 'Fast Mode service error, please switch to the Default Transaction Mode or try again later.' },\n  { matcher: isNotSupportMsafe, message: 'The current operation does not support msafe wallet.' },\n  {\n    matcher: (error: any) => String(error).includes('Transaction validator signing failed'),\n    message: 'Oops. Failed to pull your txid. Please check your txn status from explorer or from your wallet.'\n  },\n  { matcher: isPriceSlippageError, message: 'Exceeded price slippage' },\n  { matcher: isCreatePoolExistError, message: 'Pool already exists' },\n  { matcher: isVaultHardCapError, message: 'Deposit Exceeds Cap' },\n  { matcher: isTRPCClientError, message: (error: any) => String(error).split(':')[1] },\n  { matcher: isRfqExpiredError, message: 'RFQ offer expired' }\n]\n\nexport function handleErrorMessages(error: any): string {\n  for (const { matcher, message } of errorMap) {\n    if (matcher(error)) {\n      return typeof message === 'function' ? message(error) : message\n    }\n  }\n\n  return 'Transaction failed'\n}\n","import { BatchAuthOptions } from '@cetus/types'\nimport { create, StateCreator } from 'zustand'\n\nconst testData: BatchAuthOptions = {\n  title: 'Claim Yield',\n  status: 'pending',\n  steps: [\n    {\n      index: 1,\n      status: 'success',\n      isActiveStep: false,\n      tx: '0x1234567890'\n    },\n    {\n      index: 2,\n      status: 'rejected',\n      isActiveStep: false,\n      error: 'user rejected'\n    },\n    {\n      index: 3,\n      status: 'success',\n      isActiveStep: false,\n      tx: '0x1234567890'\n    }\n  ]\n}\n\ninterface BatchAuthState {\n  batchAuthOptions?: BatchAuthOptions\n  setBatchAuthOptions: (value?: BatchAuthOptions) => void\n\n  showBatchAuthModal: boolean\n  setShowBatchAuthModal: (value: boolean) => void\n}\n\nconst store: StateCreator<BatchAuthState> = (set, get) => ({\n  batchAuthOptions: undefined,\n  setBatchAuthOptions: (value?: BatchAuthOptions) => {\n    set(() => ({\n      batchAuthOptions: value\n    }))\n  },\n  showBatchAuthModal: false,\n  setShowBatchAuthModal: (value: boolean) => {\n    set(() => ({\n      showBatchAuthModal: value\n    }))\n  }\n})\n\nconst useBatchAuthStore = create(store)\nexport default useBatchAuthStore\n","import { bcs } from '@mysten/bcs';\nconst suiPackageId = \"0x2\";\nconst suiCoinType = \"0x2::sui::SUI\";\nexport const ShioFastRpcUrl = \"https://rpc.getshio.com/fast\";\nexport const ShioPackageId = \"0x1889977f0fb56ae730e7bda8e8e32859ce78874458c74910d36121a81a615123\";\nexport const ShioGlobalStateObjects = [\n    {\n        objectId: \"0xc32ce42eac951759666cbc993646b72387ec2708a2917c2c6fb7d21f00108c18\",\n        version: 72869622,\n    },\n    {\n        objectId: \"0x0289acae0edcdf1fe3aedc2e886bc23064d41c359e0179a18152a64d1c1c2b3e\",\n        version: 327637282,\n    },\n    {\n        objectId: \"0x03132160e8c2c45208abf3ccf165e82edcc42fee2e614afe54582f9740a808b8\",\n        version: 327637282,\n    },\n    {\n        objectId: \"0x072ae7307459e535379f422995a0d10132f12a3450298f8cf0cc07bd164f9999\",\n        version: 327637282,\n    },\n    {\n        objectId: \"0x1c1a96a2f4a34ea09ab15b8ff98f4b6b4338ce89f4158eb7d3eb2cd4dcbd6d86\",\n        version: 327637282,\n    },\n    {\n        objectId: \"0x20d76f37ad9f2421a9e6afaf3bb204250b1c2241c50e8a955e86a1a48767d06f\",\n        version: 327637282,\n    },\n    {\n        objectId: \"0x213ed368233cc7480fcb6336e70c5ae7ee106b2317ba02ccb5d0478e45bcc046\",\n        version: 327637282,\n    },\n    {\n        objectId: \"0x22ce1e80937354eba5549fed2937dc6e2b24026d03505bb51a3e4a64aa4142f6\",\n        version: 327637282,\n    },\n    {\n        objectId: \"0x26188cb7ce5ae633279f440f66081cb65cc585e428de18e194f8843e866f799f\",\n        version: 327637282,\n    },\n    {\n        objectId: \"0x38642f01422480128388d3e2948d3dc1b2680f9914077edb6bd3451ae1c5bcf0\",\n        version: 327637282,\n    },\n    {\n        objectId: \"0x3dd85b6424aea1cae9eff6e55456ca783e056226325f1362106eca8b3ed04ca0\",\n        version: 327637282,\n    },\n    {\n        objectId: \"0x42f8adc490542369d9c3b95e9f6eb70b2583102900feb7e103072ed49ba7fc3d\",\n        version: 327637282,\n    },\n    {\n        objectId: \"0x46b8158c82fa6bda7230d31a127d934c7295a0042083b4900f3096e9191f6f3f\",\n        version: 327637282,\n    },\n    {\n        objectId: \"0x6ebac88a8c3f7a4a9fb05ea49d188a1fe8520ae59ee736e0473004d3033512a4\",\n        version: 327637282,\n    },\n    {\n        objectId: \"0x6f55ad6cb40cfc124c11b11c19be0a80237b104acd955e7b52ccb7bf9046fe33\",\n        version: 327637282,\n    },\n    {\n        objectId: \"0x71aafb8bac986e82e5f78846bf3b36c2a82505585625207324140227a27ff279\",\n        version: 327637282,\n    },\n    {\n        objectId: \"0x7fe9b08680d4179de5672f213b863525b21f10604ca161538075e9338d1d2324\",\n        version: 327637282,\n    },\n    {\n        objectId: \"0x81538ef2909a3e0dd3d7f38bcbee191509bae4e8666272938ced295672e2ee8d\",\n        version: 327637282,\n    },\n    {\n        objectId: \"0x828eb6b3354ad68a23dd792313a16a0d888b7ea4fdb884bb22bd569f8e61319e\",\n        version: 327637282,\n    },\n    {\n        objectId: \"0x9705a332b8c1650dd7fe687ef9f9a9638afb51c30c0b34db150d60b920bc07eb\",\n        version: 327637282,\n    },\n    {\n        objectId: \"0x9918f73797a9390e9888b55454f2b31bc01de1a4634acab08f80641c4248e8a5\",\n        version: 327637282,\n    },\n    {\n        objectId: \"0x9cd4c08bdf2e132ec2cc77b0f03be60a94951e046d8e82ed5494f44e609edd2f\",\n        version: 327637282,\n    },\n    {\n        objectId: \"0xac8ce2033571140509788337c8a1f3aa8941a320ecd7047acda310d39cad9e03\",\n        version: 327637282,\n    },\n    {\n        objectId: \"0xbcd4527035265461a9a7b4f1e57c63ea7a6bdf0dc223c66033c218d880f928b1\",\n        version: 327637282,\n    },\n    {\n        objectId: \"0xbfdb691b8cc0b3c3a3b7a654f6682f3e53b164d9ee00b9582cdb4d0a353440a9\",\n        version: 327637282,\n    },\n    {\n        objectId: \"0xc2559d5c52ae04837ddf943a8c2cd53a5a0b512cee615d30d3abe25aa339465e\",\n        version: 327637282,\n    },\n    {\n        objectId: \"0xc56db634d02511e66d7ca1254312b71c60d64dc44bf67ea46b922c52d8aebba6\",\n        version: 327637282,\n    },\n    {\n        objectId: \"0xc84545cbff1b36b874ab2b69d11a3d108f23562e87550588c0bda335b27101e0\",\n        version: 327637282,\n    },\n    {\n        objectId: \"0xcc141659b5885043f9bfcfe470064819ab9ac667953bcedd1000e0652e90ee76\",\n        version: 327637282,\n    },\n    {\n        objectId: \"0xef6bf4952968d25d3e79f7e4db1dc38f2e9d99d61ad38f3829acb4100fe6383a\",\n        version: 327637282,\n    },\n    {\n        objectId: \"0xf2ed8d00ef829de5c4a3c5adf2d6b0f41f7fec005fb9c88e5616b98173b2fd66\",\n        version: 327637282,\n    },\n    {\n        objectId: \"0xfce73f3c32c3f56ddb924a04cabd44dd870b72954bbe7c3d7767c3b8c25c4326\",\n        version: 327637282,\n    }\n];\nexport async function EstimateFee(options) {\n    const client = options.client;\n    const txKindBytes = await options.transaction.build({\n        client: client,\n        onlyTransactionKind: true,\n    });\n    let sender = options.sender ?? options.transaction.getData().sender;\n    if (!sender) {\n        throw new Error(\"Sender need to be either set in options or in transaction data\");\n    }\n    const estimatedFee = await client.call(\"shio_estimateFastModeFee\", [\n        sender,\n        options.transaction.getData().gasData.price,\n        Buffer.from(txKindBytes).toString('base64')\n    ]);\n    return estimatedFee;\n}\nexport function PickShioGlobalStateObject() {\n    return ShioGlobalStateObjects[Math.floor(Math.random() * ShioGlobalStateObjects.length)];\n}\nexport async function FastGasFeePlugin(transactionData, options, next) {\n    if (!options.client) {\n        throw new Error(\"Client is not set\");\n    }\n    if (!transactionData.sender) {\n        throw new Error(\"Sender is not set\");\n    }\n    const client = options.client;\n    const txKindBytes = transactionData.build({\n        onlyTransactionKind: true,\n    });\n    const estimatedFee = await client.call(\"shio_estimateFastModeFee\", [\n        transactionData.sender,\n        Buffer.from(txKindBytes, 'binary').toString('base64')\n    ]);\n    console.log('shio_estimateFastModeFee', estimatedFee);\n    transactionData.gasData.price = estimatedFee.gasPrice;\n    transactionData.gasData.budget = estimatedFee.gasBudget;\n    // Pick a random global state object.\n    const randomGlobalStateObject = PickShioGlobalStateObject();\n    const shioTipAmountInputIdx = transactionData.inputs.length;\n    transactionData.inputs.push({\n        $kind: \"Pure\",\n        Pure: {\n            // Use 8 bytes little endian to represent the tip amount.\n            bytes: bcs.u64().serialize(estimatedFee.tipAmount).toBytes(),\n        }\n    });\n    const shioObjInputIdx = transactionData.inputs.length;\n    transactionData.inputs.push({\n        $kind: \"Object\",\n        Object: {\n            $kind: \"SharedObject\",\n            SharedObject: {\n                objectId: randomGlobalStateObject.objectId,\n                initialSharedVersion: randomGlobalStateObject.version,\n                mutable: true,\n            }\n        }\n    });\n    // Add tip commands.\n    let splitCoinsCommandIdx = transactionData.commands.length;\n    transactionData.commands.push({\n        $kind: \"SplitCoins\",\n        SplitCoins: {\n            coin: {\n                $kind: \"GasCoin\",\n                GasCoin: true,\n            },\n            amounts: [{\n                    $kind: \"Input\",\n                    Input: shioTipAmountInputIdx,\n                }],\n        }\n    });\n    let intoBalanceCommandIdx = transactionData.commands.length;\n    transactionData.commands.push({\n        $kind: \"MoveCall\",\n        MoveCall: {\n            package: suiPackageId,\n            module: \"coin\",\n            function: \"into_balance\",\n            typeArguments: [suiCoinType],\n            arguments: [\n                {\n                    $kind: \"NestedResult\",\n                    NestedResult: [splitCoinsCommandIdx, 0],\n                }\n            ]\n        }\n    });\n    transactionData.commands.push({\n        $kind: \"MoveCall\",\n        MoveCall: {\n            package: ShioPackageId,\n            module: \"auctioneer\",\n            function: \"submit_bid\",\n            typeArguments: [],\n            arguments: [\n                {\n                    $kind: \"Input\",\n                    Input: shioObjInputIdx,\n                },\n                {\n                    $kind: \"Input\",\n                    Input: shioTipAmountInputIdx,\n                },\n                {\n                    $kind: \"Result\",\n                    Result: intoBalanceCommandIdx,\n                },\n            ]\n        }\n    });\n    console.log(transactionData);\n    await next();\n}\n// Make sure FastGasFeePlugin is TransactionPlugin.\nconst _p = FastGasFeePlugin;\nexport async function ExecuteTransactionBlock(client, txAndSig, options) {\n    return await client.executeTransactionBlock({\n        transactionBlock: txAndSig.bytes,\n        signature: txAndSig.signature,\n        options,\n    });\n}\nexport async function ExecuteBundle(client, txAndSig) {\n    var args = [];\n    for (const elem of txAndSig) {\n        args.push({\n            txData: elem.bytes,\n            signatures: [elem.signature],\n        });\n    }\n    await client.call(\"shio_executeBundle\", args);\n    return true;\n}\nexport async function AppendCoinToTip(tx, coin, tipAmount) {\n    let tipBalance = tx.moveCall({\n        package: \"0x2\",\n        module: \"coin\",\n        function: \"into_balance\",\n        typeArguments: [suiCoinType],\n        arguments: [coin],\n    });\n    return AppendBalanceToTip(tx, tipBalance, tipAmount);\n}\nexport async function AppendBalanceToTip(tx, balance, tipAmount) {\n    let globalStateObject = PickShioGlobalStateObject();\n    tx.moveCall({\n        package: ShioPackageId,\n        module: \"auctioneer\",\n        function: \"submit_bid\",\n        arguments: [\n            tx.sharedObjectRef({\n                objectId: globalStateObject.objectId,\n                mutable: true,\n                initialSharedVersion: globalStateObject.version,\n            }),\n            tx.pure.u64(tipAmount),\n            balance,\n        ],\n    });\n}\n","import { bcs } from '@mysten/sui/bcs'\nimport { CoinStruct, SuiClient } from '@mysten/sui/client'\nimport { Argument, BuildTransactionOptions, Commands, Inputs, TransactionDataBuilder } from '@mysten/sui/transactions'\nimport { bigint, object, parse, string } from 'valibot'\n\nexport const COIN_WITH_BALANCE = 'CoinWithBalance'\n\nconst CoinWithBalanceData = object({\n  type: string(),\n  balance: bigint()\n})\n\nexport async function resolveCoinBalance(transactionData: TransactionDataBuilder, buildOptions: BuildTransactionOptions, next: () => Promise<void>) {\n  const coinTypes = new Set<string>()\n  const totalByType = new Map<string, bigint>()\n\n  if (!transactionData.sender) {\n    throw new Error('Sender must be set to resolve CoinWithBalance')\n  }\n\n  for (const command of transactionData.commands) {\n    if (command.$kind === '$Intent' && command.$Intent.name === COIN_WITH_BALANCE) {\n      const { type, balance } = parse(CoinWithBalanceData, command.$Intent.data)\n\n      if (type !== 'gas' && balance > 0n) {\n        coinTypes.add(type)\n      }\n\n      totalByType.set(type, (totalByType.get(type) ?? 0n) + balance)\n    }\n  }\n  const usedIds = new Set<string>()\n\n  for (const input of transactionData.inputs) {\n    if (input.Object?.ImmOrOwnedObject) {\n      usedIds.add(input.Object.ImmOrOwnedObject.objectId)\n    }\n    if (input.UnresolvedObject?.objectId) {\n      usedIds.add(input.UnresolvedObject.objectId)\n    }\n  }\n\n  const coinsByType = new Map<string, CoinStruct[]>()\n  const client = buildOptions.client!\n  await Promise.all(\n    [...coinTypes].map(async coinType => {\n      coinsByType.set(\n        coinType,\n        await getCoinsOfType({\n          coinType,\n          balance: totalByType.get(coinType)!,\n          client,\n          owner: transactionData.sender!,\n          usedIds\n        })\n      )\n    })\n  )\n\n  const mergedCoins = new Map<string, Argument>()\n\n  mergedCoins.set('gas', { $kind: 'GasCoin', GasCoin: true })\n\n  for (const [index, transaction] of transactionData.commands.entries()) {\n    if (transaction.$kind !== '$Intent' || transaction.$Intent.name !== COIN_WITH_BALANCE) {\n      continue\n    }\n\n    const { type, balance } = transaction.$Intent.data as {\n      type: string\n      balance: bigint\n    }\n\n    if (balance === 0n && type !== 'gas') {\n      transactionData.replaceCommand(index, Commands.MoveCall({ target: '0x2::coin::zero', typeArguments: [type] }))\n      continue\n    }\n\n    const commands = []\n\n    if (!mergedCoins.has(type)) {\n      const [first, ...rest] = coinsByType.get(type)!.map(coin =>\n        transactionData.addInput(\n          'object',\n          Inputs.ObjectRef({\n            objectId: coin.coinObjectId,\n            digest: coin.digest,\n            version: coin.version\n          })\n        )\n      )\n\n      if (rest.length > 0) {\n        commands.push(Commands.MergeCoins(first, rest))\n      }\n\n      mergedCoins.set(type, first)\n    }\n\n    commands.push(Commands.SplitCoins(mergedCoins.get(type)!, [transactionData.addInput('pure', Inputs.Pure(bcs.u64().serialize(balance)))]))\n\n    transactionData.replaceCommand(index, commands)\n\n    transactionData.mapArguments(arg => {\n      if (arg.$kind === 'Result' && arg.Result === index) {\n        return {\n          $kind: 'NestedResult',\n          NestedResult: [index + commands.length - 1, 0]\n        }\n      }\n\n      return arg\n    })\n  }\n\n  return next()\n}\n\nasync function getCoinsOfType({\n  coinType,\n  balance,\n  client,\n  owner,\n  usedIds\n}: {\n  coinType: string\n  balance: bigint\n  client: SuiClient\n  owner: string\n  usedIds: Set<string>\n}): Promise<CoinStruct[]> {\n  let remainingBalance = balance\n  const coins: CoinStruct[] = []\n\n  return loadMoreCoins()\n\n  async function loadMoreCoins(cursor: string | null = null): Promise<CoinStruct[]> {\n    const { data, hasNextPage, nextCursor } = await client.getCoins({ owner, coinType, cursor })\n\n    const sortedCoins = data.sort((a, b) => Number(BigInt(b.balance) - BigInt(a.balance)))\n\n    for (const coin of sortedCoins) {\n      if (usedIds.has(coin.coinObjectId)) {\n        continue\n      }\n\n      const coinBalance = BigInt(coin.balance)\n\n      coins.push(coin)\n      remainingBalance -= coinBalance\n\n      if (remainingBalance <= 0) {\n        return coins\n      }\n    }\n\n    if (hasNextPage) {\n      return loadMoreCoins(nextCursor)\n    }\n\n    throw new Error(`Not enough coins of type ${coinType} to satisfy requested balance`)\n  }\n}\n","import { useAccountStore } from '@cetus/stores'\nimport { d } from '@cetus/utils'\nimport { SuiClient } from '@mysten/sui/client'\nimport { Transaction } from '@mysten/sui/transactions'\nimport { normalizeSuiAddress } from '@mysten/sui/utils'\nimport { useSdk } from 'packages/sdk-factory/src'\nimport { AppendCoinToTip, EstimateFee, ExecuteTransactionBlock, ShioFastRpcUrl } from 'shio-fast-sdk'\nimport { COIN_WITH_BALANCE, resolveCoinBalance } from './resolveCoinBalance'\nimport { useSigner } from './useSigner'\n\nexport default function useFastModeTransaction() {\n  const { signTransactionBlock, executeTransactionBlock, signAndExecuteTransactionBlock } = useSigner()\n  const { currentAccount } = useAccountStore()\n  const clmm = useSdk('clmm')\n\n  const getFastModeTx = async (tx: any, maxCapForGas: string, customGasPrice: string) => {\n    console.log('🚀🚀🚀 ~ useFastModeTransaction.ts:12 ~ getFastModeTx ~ getFastModeTx:', getFastModeTx)\n    let result\n    let startExecuteTime\n    let transactionBlockBytes\n    try {\n      const client = new SuiClient({ url: ShioFastRpcUrl })\n      const clmmClient = clmm!.FullClient\n\n      tx.setSender(currentAccount?.address)\n      tx.setGasPrice(Number(customGasPrice))\n\n      const ntx = Transaction.from(tx)\n      ntx.addIntentResolver(COIN_WITH_BALANCE, resolveCoinBalance)\n\n      const uesFastEstimateGas = true\n\n      let gasBudget = 0\n      let tipAmount = 0\n      if (uesFastEstimateGas) {\n        const estimatedFee = await EstimateFee({\n          transaction: ntx,\n          client\n        })\n        gasBudget = estimatedFee.gasBudget\n        tipAmount = estimatedFee.tipAmount\n      } else {\n        const devResult = await clmmClient.devInspectTransactionBlock({\n          transactionBlock: tx,\n          sender: currentAccount?.address ?? normalizeSuiAddress('0x0')\n        })\n        const { gasUsed } = devResult.effects\n        const { computationCost, storageCost, storageRebate, nonRefundableStorageFee } = gasUsed\n        const actualGasUsed = Number(d(computationCost).add(storageCost).sub(storageRebate).toFixed(0))\n        console.log('🚀 ~ getFastModeTx ~ gasUsed:', {\n          gasUsed,\n          actualGasUsed\n        })\n        gasBudget = Number(d(actualGasUsed).mul(2.5).toFixed(0))\n        tipAmount = gasBudget\n      }\n\n      const maxCapForGasAmount = d(maxCapForGas).mul(Math.pow(10, 9)).toString()\n      if (d(gasBudget).gt(maxCapForGasAmount)) {\n        throw Error('Max cap reached. This is to prevent your txn from overpaying. You can choose to edit your gas max cap in settings if needed.')\n      }\n\n      tx.setGasBudget(gasBudget)\n\n      const tipCoins = tx.splitCoins(tx.gas, [tipAmount])\n      console.log('🚀 ~ getFastModeTx ~ tx:', {\n        tx,\n        tipAmount,\n        gasBudget\n      })\n      AppendCoinToTip(tx, tipCoins[0], tipAmount)\n\n      const builtTx = await tx.build({\n        client: clmmClient\n      })\n\n      // const signTx = await signTransactionBlock(tx)\n      const signTx = await signTransactionBlock(builtTx)\n\n      console.log('🚀 ~ file: useTransaction.tsx:94 ~ useTransaction ~ signTx:', signTx)\n\n      const { bytes, signature } = signTx\n\n      transactionBlockBytes = bytes\n\n      console.log('🚀 ~ getFastModeTx ~ signTx:', signTx)\n\n      startExecuteTime = new Date().getTime()\n      // Execute the transaction with Fast Mode.\n      // const result = await ExecuteTransactionBlock(client, signature, {\n      result = await ExecuteTransactionBlock(client, signTx, {\n        showEffects: true,\n        showEvents: true\n      })\n      console.log('🚀 ~ getFastModeTx ~ result:', result)\n      // return result\n    } catch (error) {\n      console.log('🚀 ~ getFastModeTx ~ error:', error)\n      console.log('🚀 ~ getFastModeTx ~ String(error).includes(Failed to fetch):', String(error).includes('Failed to fetch'))\n      if (String(error).includes('Failed to fetch')) {\n        throw Error('Fast Mode service error')\n      }\n      throw error\n    }\n\n    // try {\n    //   await ExecuteBundle(client, [signTx])\n    // } catch (error) {\n    //   console.log('🚀 ~ getFastModeTx ~ error:', error)\n    // }\n\n    return {\n      result,\n      startExecuteTime,\n      transactionBlockBytes\n    }\n  }\n\n  return {\n    getFastModeTx\n  }\n}\n","import { useCurrentAccount, useCurrentWallet } from '@mysten/dapp-kit'\nimport { useMemo } from 'react'\n\nexport default function useMsafeTransaction() {\n  const wallet = useCurrentWallet()\n  const account = useCurrentAccount()\n\n  const signAndExecuteTransactionBlock = useMemo(() => {\n    if (!wallet.currentWallet) {\n      return null\n    }\n    const feature = wallet.currentWallet.features['sui:signAndExecuteTransactionBlock']\n    if (!feature) {\n      return null\n    }\n    return feature.signAndExecuteTransactionBlock\n  }, [wallet])\n\n  const getMsafeRes = async (txb: any, msafeParams: any) => {\n    if (!account || !signAndExecuteTransactionBlock) {\n      throw new Error('No account information')\n    }\n\n    txb.setSender(account?.address)\n    const res = await signAndExecuteTransactionBlock({\n      transactionBlock: txb,\n      account,\n      chain: account?.chains[0],\n      action: msafeParams?.action,\n      txbParams: msafeParams?.txbParams\n    })\n\n    return res\n  }\n\n  return {\n    getMsafeRes\n  }\n}\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.executeAuction = executeAuction;\nconst axios_1 = __importDefault(require(\"axios\"));\nconst RPC_URL = 'https://rpc.getshio.com';\nconst DEFAULT_MAX_DELAY = 500; // 500ms\nconst AUCTION_DELAY = 300; // 300ms\n/**\n * Notify Shio to execute an auction with the given transaction bytes.\n *\n * Should an auction be conducted successfully, A Soft Bundle (SIP-19) containing the user\n * transaction along with successful bids will be submitted on behalf of the user.\n * All this happens behind the scenes, and by the time executeTransactionBlock call is made to the dApp’s\n * Wallet SDK, the user transaction would have already been sequenced and executed, in which case,\n * the previous execution result will be returned immediately, making the whole process transparent.\n *\n * @param encodedTxData Base64-encoded string of the transaction bytes (represents TransactionData).\n * @param encodedSig Base64-encoded string of the signature bytes (represents Signature).\n *                   Can be an array of signatures if the transaction has multiple signers.\n * @returns A promise that resolves when a sufficient delay has passed, or an error occurs.\n *          The caller must await this promise to ensure the auction has completed.\n */\nfunction executeAuction(encodedTxData, encodedSig, maxDelayMs = DEFAULT_MAX_DELAY) {\n    const payload = {\n        jsonrpc: '2.0',\n        method: 'shio_executeAuction',\n        params: [encodedTxData, encodedSig],\n        id: 1\n    };\n    return new Promise((resolve, reject) => {\n        // Unconditionally resolve after a delay, regardless of the response.\n        setTimeout(resolve, maxDelayMs);\n        axios_1.default\n            .post(RPC_URL, payload, {\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            timeout: maxDelayMs,\n        })\n            .then((resp) => {\n            // The response is not important, we just need to wait for the auction to complete.\n            console.log('Shio executeAuction response:', resp.data);\n            setTimeout(resolve, AUCTION_DELAY);\n        })\n            .catch(reject);\n    });\n}\nexports.default = { executeAuction };\n","import useBatchAuthStore from '@/store/common/useBatchAuthStore'\nimport { useGlobalToast } from '@cetus/design'\nimport useExplorer from '@cetus/hooks/src/useExplorer'\nimport useFastModeTransaction from '@cetus/hooks/src/useFastModeTransaction'\nimport useMsafeTransaction from '@cetus/hooks/src/useMsafeTransaction'\nimport { useSigner } from '@cetus/hooks/src/useSigner'\nimport useTrack from '@cetus/hooks/src/useTrack'\nimport useTransactionModal from '@cetus/hooks/src/useTransactionModal'\nimport { useSdk } from '@cetus/sdk-factory'\nimport { useAccountStore } from '@cetus/stores'\nimport { BatchAuthOptions, CommonTypeInfo, ToastType, TransactionOption } from '@cetus/types/src/common-types'\nimport { trackShioEvent } from '@cetus/utils'\nimport { base64ToUint8Array, parseOwnerBalanceChanges, sleepTime } from '@cetus/utils/src/common'\nimport { handleErrorMessages } from '@cetus/utils/src/error'\nimport { MSafeWallet } from '@msafe/sui-wallet'\nimport { useCurrentWallet } from '@mysten/dapp-kit'\nimport { SuiTransactionBlockResponse } from '@mysten/sui/client'\nimport { Transaction, TransactionDataBuilder } from '@mysten/sui/transactions'\nimport { executeAuction } from 'shio-sdk'\n\nexport default function useTransaction() {\n  const { signTransactionBlock, executeTransactionBlock, signAndExecuteTransactionBlock } = useSigner()\n  const { currentAccount } = useAccountStore()\n  const clmmSdk = useSdk('clmm')\n  const { transactionConfirmation, transactionSubmitted, transactionSuccess, transactionRejected, closeTransactionModal } = useTransactionModal()\n  const { submittedTsToast, failedTsToast, successTsToast, closeToast } = useGlobalToast()\n  const { getExplorerUrl } = useExplorer()\n  const { getFastModeTx } = useFastModeTransaction()\n  const { getMsafeRes } = useMsafeTransaction()\n  const { trackShio, toTrackSwap, toTrackTransactionError, toTrackDlmmTransaction } = useTrack()\n  const { setShowBatchAuthModal, setBatchAuthOptions } = useBatchAuthStore()\n  const { currentWallet } = useCurrentWallet()\n\n  const MAX_RETRIES = 5\n  const RETRY_DELAY = 2000\n\n  async function getTransactionStatus(digest: string, attempt = 1): Promise<any> {\n    console.log(`useTransaction: 🔍 getTransactionStatus - Attempt ${attempt}`)\n\n    try {\n      let response\n      try {\n        response = await clmmSdk!.FullClient.getTransactionBlock({\n          digest,\n          options: {\n            showEvents: true,\n            showEffects: true,\n            showBalanceChanges: true,\n            showInput: true,\n            showRawInput: true,\n            showObjectChanges: true\n          }\n        })\n      } catch (error) {\n        response = await clmmSdk!.FullClient.getTransactionBlock({\n          digest,\n          options: {\n            showEvents: true,\n            showEffects: true\n          }\n        })\n      }\n\n      console.log('useTransaction: ✅ Transaction status response:', response)\n\n      if (response) {\n        return response\n      }\n      throw new Error('Empty response')\n    } catch (error) {\n      console.error(`useTransaction: ❌ Attempt ${attempt} failed:`, error)\n\n      if (attempt >= MAX_RETRIES) {\n        console.error('useTransaction: 💥 Max retries reached, giving up')\n        throw new Error('Failed to fetch transaction status after maximum retries.')\n      }\n\n      console.log(`useTransaction: ⏳ Waiting ${RETRY_DELAY}ms before retry...`)\n      // 延迟后继续下一次轮询\n      await sleepTime(RETRY_DELAY)\n      return getTransactionStatus(digest, attempt + 1)\n    }\n  }\n\n  type BuildTransactionCallback = (options?: any) => Promise<Transaction>\n\n  // 单个交易执行逻辑\n  const executeSingleTransaction = async (\n    transaction: Transaction,\n    index: number,\n    options: {\n      useDevInspect: boolean\n      useMev: boolean\n      txAction: string\n      useFastMode: boolean\n      maxCapForGas: string\n      customGasPrice: string\n      msafeParams?: any\n    }\n  ) => {\n    console.log(`useTransaction: ⚡ executeSingleTransaction - TX ${index}`, transaction)\n    const { useDevInspect, useMev, txAction, useFastMode, maxCapForGas, customGasPrice, msafeParams } = options\n    console.log('useTransaction: Options:', {\n      useDevInspect,\n      useMev,\n      txAction,\n      useFastMode,\n      maxCapForGas,\n      customGasPrice,\n      hasMsafeParams: !!msafeParams\n    })\n\n    try {\n      let transactionResponse\n      let transactionBlockBytes\n      let startExecuteTime\n\n      if (useFastMode && maxCapForGas && customGasPrice) {\n        // Fast mode模式\n        const res = await getFastModeTx(transaction, maxCapForGas, customGasPrice)\n        transactionResponse = res.result\n        transactionBlockBytes = res.transactionBlockBytes\n        startExecuteTime = res.startExecuteTime\n\n        const isSuccess = transactionResponse?.effects?.status?.status === 'success'\n        let digest = transactionResponse?.digest\n        if (!digest && transactionBlockBytes) {\n          const uint8ArrayData = base64ToUint8Array(transactionBlockBytes)\n          digest = TransactionDataBuilder.getDigestFromBytes(uint8ArrayData)\n          transactionResponse.digest = digest\n        }\n\n        return {\n          success: isSuccess,\n          response: transactionResponse,\n          index,\n          digest: transactionResponse?.digest || '',\n          transactionBlockBytes,\n          startExecuteTime,\n          error: null\n        }\n      } else if (MSafeWallet?.inMSafeWallet()) {\n        if (msafeParams) {\n          transactionResponse = await getMsafeRes(transaction, msafeParams)\n          const isSuccess = transactionResponse?.effects?.status?.status === 'success'\n          let digest = transactionResponse?.digest\n          if (!digest && transactionBlockBytes) {\n            const uint8ArrayData = base64ToUint8Array(transactionBlockBytes)\n            digest = TransactionDataBuilder.getDigestFromBytes(uint8ArrayData)\n            transactionResponse.digest = digest\n          }\n          return {\n            success: isSuccess,\n            response: transactionResponse,\n            index,\n            digest: digest || '',\n            transactionBlockBytes,\n            startExecuteTime: null,\n            error: isSuccess ? null : transactionResponse?.effects?.status?.error || 'Transaction failed'\n          }\n        } else {\n          throw new Error('The current operation does not support msafe wallet')\n        }\n      } else {\n        // Default模式\n        if (txAction === 'signTransactionBlock') {\n          const signTx = await signTransactionBlock(transaction)\n          startExecuteTime = new Date().getTime()\n          const { bytes, signature } = signTx\n          transactionBlockBytes = signTx.bytes\n\n          if (useMev) {\n            console.log('💰 MEV execution...')\n            try {\n              const shioRes = await executeAuction(bytes, signature, 500)\n            } catch (error) {\n              console.log('⚠️ MEV execution failed:', error)\n            }\n          }\n\n          transactionResponse = await executeTransactionBlock(bytes, signature, useDevInspect)\n        } else {\n          transactionResponse = await signAndExecuteTransactionBlock(transaction, useDevInspect)\n        }\n      }\n\n      // 检查交易是否成功\n      const isSuccess = transactionResponse?.effects?.status?.status === 'success'\n      let digest = transactionResponse?.digest\n      if (!digest && transactionBlockBytes) {\n        const uint8ArrayData = base64ToUint8Array(transactionBlockBytes)\n        digest = TransactionDataBuilder.getDigestFromBytes(uint8ArrayData)\n        transactionResponse.digest = digest\n      }\n\n      const result = {\n        success: isSuccess,\n        response: transactionResponse,\n        index,\n        digest,\n        transactionBlockBytes,\n        startExecuteTime,\n        error: isSuccess ? null : transactionResponse?.effects?.status?.error || 'Transaction failed'\n      }\n\n      console.log(isSuccess ? 'useTransaction: ✅ Transaction successful' : 'useTransaction: ❌ Transaction failed', result)\n      return result\n    } catch (error: any) {\n      console.error(`useTransaction: Transaction ${index} execution failed:`, error)\n      const result = {\n        success: false,\n        response: null,\n        index,\n        digest: null,\n        transactionBlockBytes: null,\n        startExecuteTime: null,\n        error: error?.message || String(error)\n      }\n      return result\n    }\n  }\n\n  const signAndExecuteTransaction = async (\n    tx: Transaction | BuildTransactionCallback,\n    toastType: ToastType,\n    {\n      useDevInspect = false,\n      useMev = false,\n      txAction = 'signTransactionBlock',\n      showSuccessModal = true,\n      useFastMode = false,\n      maxCapForGas = '',\n      customGasPrice = '',\n      msafeParams,\n      otherParams,\n      trackData\n    }: TransactionOption = {}\n  ) => {\n    const res = await batchSignAndExecuteTransaction([tx] as Transaction[] | BuildTransactionCallback[], toastType, {\n      useDevInspect,\n      useMev,\n      txAction,\n      showSuccessModal,\n      useFastMode,\n      maxCapForGas,\n      customGasPrice,\n      msafeParams,\n      otherParams,\n      trackData\n    })\n    console.log('useTransaction: 🚀 ~ batchSignAndExecuteTransaction ~ res:', res)\n\n    if (res && res.successResults && res.successResults.length > 0) {\n      return res.successResults[0].response\n    }\n    return undefined\n  }\n\n  const batchSignAndExecuteTransaction = async (\n    txs: Transaction[] | BuildTransactionCallback[],\n    toastType: ToastType,\n    {\n      useDevInspect = false,\n      useMev = false,\n      txAction = 'signTransactionBlock',\n      showSuccessModal = true,\n      useFastMode = false,\n      maxCapForGas = '',\n      customGasPrice = '',\n      msafeParams,\n      otherParams,\n      trackData\n    }: TransactionOption = {}\n  ) => {\n    console.log('useTransaction: Options:', {\n      useDevInspect,\n      useMev,\n      txAction,\n      txsCount: txs.length,\n      useFastMode,\n      maxCapForGas,\n      customGasPrice,\n      msafeParams: !!msafeParams\n    })\n\n    const txConfirmToastId = toastType.transactionId || new Date().getTime().toString()\n    toastType.transactionId = txConfirmToastId\n\n    const isBatchAuth = txs.length > 1\n    const requestId = toastType.requestId\n    let batchAuthOptions: BatchAuthOptions | undefined\n\n    // 显示 钱包确认中 弹窗\n    if (isBatchAuth) {\n      setShowBatchAuthModal(true)\n      batchAuthOptions = {\n        requestId,\n        title: toastType.getShowInfo?.('confirmation')?.modalDescriptionText || '',\n        status: 'pending',\n        steps: txs.map((tx, index) => ({\n          index: index + 1,\n          status: 'confirmation',\n          isActiveStep: index === 0\n        }))\n      }\n      setBatchAuthOptions(batchAuthOptions)\n    } else {\n      transactionConfirmation(toastType)\n    }\n\n    const isSwap = msafeParams?.action === 'AggregatorSwap'\n\n    // dlmm操作最终改为1000bins一个仓位后，除了批量收割奖励不会触发多次approve，当前暂不收集多次approve情况\n    let trackErrorString = ''\n    let trackTxHash = ''\n\n    try {\n      // 解析交易数组\n      const transactions: Transaction[] = []\n      for (const tx of txs) {\n        if (typeof tx === 'function') {\n          const resolvedTx = await tx()\n          transactions.push(resolvedTx)\n        } else {\n          transactions.push(tx)\n        }\n      }\n\n      // 设置发送者\n      transactions.forEach(transaction => {\n        transaction.setSender(currentAccount?.address as string)\n      })\n\n      // 执行所有交易\n      const results = []\n      let activeIndex = 0\n      for (const tx of transactions) {\n        const res = await executeSingleTransaction(tx, activeIndex, {\n          useDevInspect,\n          useMev,\n          txAction,\n          useFastMode,\n          maxCapForGas,\n          customGasPrice,\n          msafeParams\n        })\n\n        console.log('useTransaction executeSingleTransaction: ', res)\n\n        if (isBatchAuth && batchAuthOptions) {\n          batchAuthOptions.steps[activeIndex].status = res.success ? 'success' : res.digest ? 'submitted' : 'rejected'\n          batchAuthOptions.steps[activeIndex].tx = res.digest || ''\n          batchAuthOptions.steps[activeIndex].error = res.error ? handleErrorMessages(res.error) : ''\n          batchAuthOptions.steps.forEach((step, index) => {\n            step.isActiveStep = index === activeIndex + 1\n          })\n          setBatchAuthOptions(batchAuthOptions)\n        }\n        activeIndex++\n        results.push(res)\n      }\n\n      // 处理 Promise.allSettled 的结果\n      console.log('useTransaction: Processing execution results...', results)\n\n      // 分析结果\n      let successResults = results.filter(r => r.success)\n      // 对应response 不为空的，需要继续轮询判断状态\n      const pendingResults = results.filter(r => !r.success && r.response && r.digest)\n      // 直接失败的，例如用户拒绝\n      let failedResults = results.filter(r => !r.success && !r.response)\n\n      console.log('useTransaction: Initial classification:', {\n        total: results.length,\n        successful: successResults.length,\n        pending: pendingResults.length,\n        failed: failedResults.length\n      })\n\n      // 用户在钱包点击了授权按钮后，显示进度弹窗\n      toastType.tx = successResults.length > 0 ? successResults[0].digest || '' : ''\n      if (isBatchAuth && batchAuthOptions) {\n        batchAuthOptions.status = failedResults.length === txs.length ? 'failed' : 'success'\n        setBatchAuthOptions(batchAuthOptions)\n      } else {\n        transactionSubmitted(toastType)\n        if (!toastType.isSwapWidget) {\n          submittedTsToast(toastType)\n        }\n      }\n\n      // 关闭进度弹窗\n      closeToast(txConfirmToastId)\n\n      // 处理待确认的交易\n      if (pendingResults.length > 0) {\n        for (const pendingResult of pendingResults) {\n          try {\n            let digest = pendingResult.digest as string\n            const statusResult = await getTransactionStatus(digest, 0)\n\n            if (statusResult?.effects?.status?.status === 'success') {\n              // 交易成功，移动到成功列表\n              successResults.push({\n                ...pendingResult,\n                success: true,\n                response: statusResult\n              })\n              console.log(`useTransaction: TX ${pendingResult.index} confirmed successful`)\n\n              if (isBatchAuth && batchAuthOptions) {\n                batchAuthOptions.steps[pendingResult.index].status = 'success'\n                batchAuthOptions.steps[pendingResult.index].tx = statusResult.digest || ''\n                batchAuthOptions.steps[pendingResult.index].error = ''\n                setBatchAuthOptions(batchAuthOptions)\n              }\n            } else {\n              // 交易失败，移动到失败列表\n              failedResults.push({\n                ...pendingResult,\n                error: statusResult?.effects?.status?.error || 'Transaction failed after status check'\n              })\n              console.log(`useTransaction: TX ${pendingResult.index} confirmed failed:`, statusResult?.effects?.status?.error)\n              if (isBatchAuth && batchAuthOptions) {\n                batchAuthOptions.steps[pendingResult.index].status = 'rejected'\n                batchAuthOptions.steps[pendingResult.index].tx = statusResult.digest || ''\n                batchAuthOptions.steps[pendingResult.index].error = handleErrorMessages(statusResult?.effects?.status?.error)\n                setBatchAuthOptions(batchAuthOptions)\n              }\n            }\n          } catch (error: any) {\n            // 状态检查失败，标记为失败\n            failedResults.push({\n              ...pendingResult,\n              error: error?.message || String(error) || 'Status check failed'\n            })\n            console.error(`useTransaction: Status check failed for TX ${pendingResult.index}:`, error)\n            if (isBatchAuth && batchAuthOptions) {\n              batchAuthOptions.steps[pendingResult.index].status = 'rejected'\n              batchAuthOptions.steps[pendingResult.index].tx = pendingResult.digest || ''\n              batchAuthOptions.steps[pendingResult.index].error = handleErrorMessages(error)\n              setBatchAuthOptions(batchAuthOptions)\n            }\n          }\n        }\n      }\n\n      // 重新计算最终结果\n      const finalSuccessCount = successResults.length\n      const totalCount = results.length\n\n      console.log('useTransaction: Final statistics:', {\n        total: totalCount,\n        successful: successResults,\n        failed: failedResults\n      })\n\n      if (finalSuccessCount === totalCount || finalSuccessCount > 0) {\n        const isPartialSuccess = failedResults.length > 0\n        // 如果是多个 则取第一个的startExecuteTime和timestampMs\n        let startExecuteTime = successResults.length > 0 ? successResults[0].startExecuteTime : 0\n        let timestampMs = successResults.length > 0 ? successResults[0].response?.timestampMs : 0\n\n        if (startExecuteTime && timestampMs) {\n          const endExecuteTime = new Date().getTime()\n          const endTime = timestampMs && Number(timestampMs) > startExecuteTime ? Math.min(endExecuteTime, Number(timestampMs)) : endExecuteTime\n          const executeTime = endTime - startExecuteTime\n\n          if (executeTime < 1000) {\n            toastType.executeTime = executeTime\n          }\n        }\n        const res = successResults[0].response as SuiTransactionBlockResponse\n        const balanceChanges = parseOwnerBalanceChanges(res, currentAccount?.address, false)\n\n        if (toastType.getShowInfo) {\n          const info = toastType.getShowInfo(isPartialSuccess ? 'rejected' : 'success', balanceChanges, res, {\n            successResults,\n            failedResults\n          })\n          toastType.getShowInfo = (_: any) => {\n            return info\n          }\n        }\n\n        if (showSuccessModal) {\n          if (isBatchAuth && batchAuthOptions) {\n            batchAuthOptions.status = 'success'\n            setBatchAuthOptions(batchAuthOptions)\n            setShowBatchAuthModal(true)\n          } else {\n            if (isPartialSuccess) {\n              transactionRejected(toastType)\n            } else {\n              transactionSuccess(toastType)\n            }\n          }\n        } else {\n          closeTransactionModal()\n        }\n\n        if (!toastType.isSwapWidget) {\n          toastType.transactionId = undefined\n          successTsToast(toastType)\n        }\n\n        // 配合shio打点\n        if (msafeParams) {\n          try {\n            trackShioEvent(msafeParams.action, useFastMode || useMev, res.digest)\n          } catch (e) {\n            console.error('useTransaction: Shio tracking failed:', e)\n          }\n        }\n        // 谷歌打点\n        if (isSwap) {\n          toTrackSwap({ ...otherParams, useMev, useFastMode }, '', res.digest)\n        }\n\n        console.log('useTransaction: Returning success results:', {\n          successCount: successResults.length,\n          failedCount: failedResults.length\n        })\n\n        if (finalSuccessCount === totalCount && finalSuccessCount === 1) {\n          trackTxHash = successResults[0]?.digest || successResults[0].response?.digest || ''\n        }\n        return {\n          successResults,\n          failedResults\n        }\n      } else {\n        // 全部失败\n        const lastError = failedResults[0]\n        console.log('useTransaction: All transactions failed, last error:', failedResults)\n        const errorString = handleError(toastType, lastError.error, batchAuthOptions ? false : true)\n        trackErrorString = errorString === 'Transaction failed' ? String(lastError.error) : errorString\n\n        if (isBatchAuth && batchAuthOptions) {\n          batchAuthOptions.status = 'failed'\n          setBatchAuthOptions(batchAuthOptions)\n          setShowBatchAuthModal(true)\n        }\n\n        // 谷歌打点\n        if (isSwap) {\n          toTrackSwap(\n            {\n              ...otherParams,\n              useMev,\n              useFastMode\n            },\n            errorString,\n            lastError?.digest as any\n          )\n        }\n      }\n    } catch (error: any) {\n      console.error('useTransaction: Batch transaction execution trackData:', trackData)\n\n      if (txConfirmToastId) {\n        closeToast(txConfirmToastId)\n      }\n\n      const errorString = handleError(toastType, error)\n      trackErrorString = errorString === 'Transaction failed' ? String(error) : errorString\n\n      // 谷歌打点\n      if (isSwap) {\n        toTrackSwap({ ...otherParams, useMev, useFastMode }, errorString, '')\n      } else if (trackData && trackData?.actionType !== 'dlmm') {\n        toTrackTransactionError({ params: { ...trackData }, account: currentAccount?.address, error: String(error) })\n      } else if (msafeParams) {\n        const paramsJson = JSON.stringify(msafeParams.txbParams)\n        toTrackTransactionError({\n          paramsJson,\n          account: currentAccount?.address,\n          txAction: msafeParams.action,\n          error: errorString\n        })\n      }\n    } finally {\n      if (\n        trackData?.actionType === 'dlmm' &&\n        !(trackErrorString?.includes('reject') && (trackErrorString?.includes('user') || trackErrorString?.includes('User')))\n      ) {\n        // if (trackData?.actionType === 'dlmm') {\n        const { actionType, ...rest } = trackData\n        const dlmmTrackData = {\n          ...rest,\n          walletAddress: currentAccount?.address as string,\n          walletName: currentWallet?.name as string\n        }\n\n        if (!!trackErrorString) {\n          dlmmTrackData['error'] = trackErrorString\n          dlmmTrackData['isError'] = true\n        } else {\n          dlmmTrackData['isError'] = false\n        }\n\n        if (trackTxHash) {\n          dlmmTrackData['txHash'] = trackTxHash\n        }\n        toTrackDlmmTransaction(dlmmTrackData)\n      }\n    }\n\n    return undefined\n  }\n\n  const handleError = (toastType: ToastType, error: any, showModal = true) => {\n    const errorString = handleErrorMessages(error)\n\n    console.error('useTransaction: ❌ Error details:', { error, errorString })\n\n    if (toastType.getShowInfo) {\n      const info = toastType.getShowInfo('rejected')\n\n      toastType.getShowInfo = (_: any) => {\n        info.toastDescriptionContent = errorString\n        info.modalDescriptionText = errorString\n        return info\n      }\n      if (showModal) {\n        transactionRejected(toastType)\n      }\n      if (!toastType.isSwapWidget) {\n        failedTsToast(toastType)\n      }\n    } else {\n      toastType.getShowInfo = (_: any) => {\n        const info: CommonTypeInfo = {}\n        info.toastDescriptionContent = errorString\n        info.modalDescriptionText = errorString\n        return info\n      }\n      if (showModal) {\n        transactionRejected(toastType)\n      }\n      if (!toastType.isSwapWidget) {\n        failedTsToast(toastType)\n      }\n    }\n\n    console.log('useTransaction: Error handling completed')\n    return errorString\n  }\n\n  return {\n    signAndExecuteTransaction,\n    batchSignAndExecuteTransaction,\n    transactionSuccess,\n    getTransactionStatus,\n    transactionConfirmation,\n    transactionRejected,\n    handleError\n  }\n}\n"],"names":["isUserRejectedError","error","isCreatePoolExistError","errorString","isPriceSlippageError","isNotFindTxHashError","isTRPCClientError","isSuiHTTPStatusError","status","isMaxCapError","isSuiMaxCapError","isFastModeServiceError","isNotSupportMsafe","isVaultHardCapError","isRfqExpiredError","isBalanceNotEnoughError","errorMap","handleErrorMessages","matcher","message","store","set","get","value","useBatchAuthStore","create","suiCoinType","ShioFastRpcUrl","ShioPackageId","ShioGlobalStateObjects","EstimateFee","options","client","txKindBytes","sender","Buffer","PickShioGlobalStateObject","ExecuteTransactionBlock","txAndSig","AppendCoinToTip","tx","coin","tipAmount","tipBalance","AppendBalanceToTip","balance","globalStateObject","COIN_WITH_BALANCE","CoinWithBalanceData","object","string","bigint","resolveCoinBalance","transactionData","buildOptions","next","coinTypes","totalByType","command","type","parse","usedIds","input","_a","_b","coinsByType","coinType","getCoinsOfType","mergedCoins","index","transaction","Commands","commands","first","rest","Inputs","bcs","arg","owner","remainingBalance","coins","loadMoreCoins","cursor","data","hasNextPage","nextCursor","sortedCoins","a","b","coinBalance","useFastModeTransaction","signTransactionBlock","useSigner","currentAccount","useAccountStore","clmm","useSdk","getFastModeTx","maxCapForGas","customGasPrice","result","startExecuteTime","transactionBlockBytes","SuiClient","clmmClient","ntx","Transaction","uesFastEstimateGas","gasBudget","estimatedFee","maxCapForGasAmount","d","tipCoins","builtTx","signTx","bytes","signature","useMsafeTransaction","wallet","useCurrentWallet","account","useCurrentAccount","signAndExecuteTransactionBlock","useMemo","feature","txb","msafeParams","__importDefault","this","mod","dist","executeAuction_1","executeAuction","axios_1","require$$0","RPC_URL","DEFAULT_MAX_DELAY","AUCTION_DELAY","encodedTxData","encodedSig","maxDelayMs","payload","resolve","reject","resp","useTransaction","executeTransactionBlock","clmmSdk","transactionConfirmation","transactionSubmitted","transactionSuccess","transactionRejected","closeTransactionModal","useTransactionModal","submittedTsToast","failedTsToast","successTsToast","closeToast","useGlobalToast","useExplorer","getMsafeRes","toTrackSwap","toTrackTransactionError","toTrackDlmmTransaction","useTrack","setShowBatchAuthModal","setBatchAuthOptions","currentWallet","MAX_RETRIES","RETRY_DELAY","getTransactionStatus","digest","attempt","response","sleepTime","executeSingleTransaction","useDevInspect","useMev","txAction","useFastMode","transactionResponse","res","isSuccess","uint8ArrayData","base64ToUint8Array","TransactionDataBuilder","MSafeWallet","_e","_d","_g","_f","shioRes","_i","_h","_k","_j","signAndExecuteTransaction","toastType","showSuccessModal","otherParams","trackData","batchSignAndExecuteTransaction","txs","txConfirmToastId","isBatchAuth","requestId","batchAuthOptions","isSwap","trackErrorString","trackTxHash","transactions","resolvedTx","results","activeIndex","step","successResults","r","pendingResults","failedResults","pendingResult","statusResult","_c","finalSuccessCount","totalCount","isPartialSuccess","timestampMs","endExecuteTime","executeTime","balanceChanges","parseOwnerBalanceChanges","info","_","trackShioEvent","e","_l","_m","lastError","handleError","paramsJson","actionType","dlmmTrackData","showModal"],"mappings":"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EAAoB,CACtD,SAAW,CAAE,QAAAiB,EAAS,QAAAC,CAAA,IAAaH,GACjC,GAAIE,EAAQjB,CAAK,EACf,OAAO,OAAOkB,GAAY,WAAaA,EAAQlB,CAAK,EAAIkB,EAI5D,MAAO,oBACT,CC1KA,MAAMC,GAAsC,CAACC,EAAKC,KAAS,CACzD,iBAAkB,OAClB,oBAAsBC,GAA6B,CACjDF,EAAI,KAAO,CACT,iBAAkBE,CAAA,EAClB,CACJ,EACA,mBAAoB,GACpB,sBAAwBA,GAAmB,CACzCF,EAAI,KAAO,CACT,mBAAoBE,CAAA,EACpB,CACJ,CACF,GAEMC,GAAoBC,GAAOL,EAAK,ECjDhCM,GAAc,gBACPC,GAAiB,+BACjBC,GAAgB,qEAChBC,GAAyB,CAClC,CACI,SAAU,qEACV,QAAS,QACjB,EACI,CACI,SAAU,qEACV,QAAS,SACjB,EACI,CACI,SAAU,qEACV,QAAS,SACjB,EACI,CACI,SAAU,qEACV,QAAS,SACjB,EACI,CACI,SAAU,qEACV,QAAS,SACjB,EACI,CACI,SAAU,qEACV,QAAS,SACjB,EACI,CACI,SAAU,qEACV,QAAS,SACjB,EACI,CACI,SAAU,qEACV,QAAS,SACjB,EACI,CACI,SAAU,qEACV,QAAS,SACjB,EACI,CACI,SAAU,qEACV,QAAS,SACjB,EACI,CACI,SAAU,qEACV,QAAS,SACjB,EACI,CACI,SAAU,qEACV,QAAS,SACjB,EACI,CACI,SAAU,qEACV,QAAS,SACjB,EACI,CACI,SAAU,qEACV,QAAS,SACjB,EACI,CACI,SAAU,qEACV,QAAS,SACjB,EACI,CACI,SAAU,qEACV,QAAS,SACjB,EACI,CACI,SAAU,qEACV,QAAS,SACjB,EACI,CACI,SAAU,qEACV,QAAS,SACjB,EACI,CACI,SAAU,qEACV,QAAS,SACjB,EACI,CACI,SAAU,qEACV,QAAS,SACjB,EACI,CACI,SAAU,qEACV,QAAS,SACjB,EACI,CACI,SAAU,qEACV,QAAS,SACjB,EACI,CACI,SAAU,qEACV,QAAS,SACjB,EACI,CACI,SAAU,qEACV,QAAS,SACjB,EACI,CACI,SAAU,qE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","x_google_ignoreList":[2,6]}