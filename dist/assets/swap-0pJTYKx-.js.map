{"version":3,"file":"swap-0pJTYKx-.js","sources":["../../src/store/swap/swap.ts"],"sourcesContent":["import { QuoteMode, SwapRfqData, SwapRouterData } from '@/types/swap'\nimport { Token } from '@cetus/types'\nimport { StateCreator, create } from 'zustand'\n\nexport interface SwapConfigState {\n  fromCoin: Token | undefined\n  toCoin: Token | undefined\n  setFromCoin: (value: Token | undefined) => void\n  setToCoin: (value: Token | undefined) => void\n\n  byAmountIn: boolean\n  setByAmountIn: (byAmountIn: boolean) => void\n\n  fromAmount: string\n  toAmount: string\n  setFromAmount: (amount: string) => void\n  setToAmount: (amount: string) => void\n\n  findRouterLoading: boolean\n  setFindRouterLoading: (loading: boolean) => void\n\n  rfqData?: SwapRfqData\n  routerData?: SwapRouterData\n  setRouterData: (data?: SwapRouterData) => void\n  setRfqData: (data?: SwapRfqData) => void\n\n  userSelectQuoteMode: QuoteMode\n  setUserSelectQuoteMode: (mode: QuoteMode) => void\n}\n\nconst store: StateCreator<SwapConfigState> = (set, get) => ({\n  userSelectQuoteMode: 'router',\n  byAmountIn: true,\n  findRouterLoading: false,\n  fromAmount: '',\n  toAmount: '',\n  fromCoin: undefined,\n  toCoin: undefined,\n  routerData: undefined,\n  rfqData: undefined,\n  setFromCoin: (value: Token | undefined) => {\n    set(() => ({\n      fromCoin: value\n    }))\n  },\n  setToCoin: (value: Token | undefined) => {\n    set(() => ({\n      toCoin: value\n    }))\n  },\n\n  setFromAmount: (amount: string) => {\n    set(() => ({\n      fromAmount: amount\n    }))\n  },\n  setToAmount: (amount: string) => {\n    set(() => ({\n      toAmount: amount\n    }))\n  },\n  setFindRouterLoading: (loading: boolean) => {\n    set(() => ({\n      findRouterLoading: loading\n    }))\n  },\n  setByAmountIn: (byAmountIn: boolean) => {\n    set(() => ({\n      byAmountIn\n    }))\n  },\n  setUserSelectQuoteMode: (mode: QuoteMode) => {\n    set(() => ({\n      userSelectQuoteMode: mode\n    }))\n  },\n  setRouterData: (data?: SwapRouterData) => {\n    set(() => ({\n      routerData: data\n    }))\n  },\n  setRfqData: (data?: SwapRfqData) => {\n    set(() => ({\n      rfqData: data\n    }))\n  }\n})\n\nconst useSwapStore = create(store)\nexport default useSwapStore\n"],"names":["store","set","get","value","amount","loading","byAmountIn","mode","data","useSwapStore","create"],"mappings":"wCA8BA,MAAMA,EAAuC,CAACC,EAAKC,KAAS,CAC1D,oBAAqB,SACrB,WAAY,GACZ,kBAAmB,GACnB,WAAY,GACZ,SAAU,GACV,SAAU,OACV,OAAQ,OACR,WAAY,OACZ,QAAS,OACT,YAAcC,GAA6B,CACzCF,EAAI,KAAO,CACT,SAAUE,CAAA,EACV,CACJ,EACA,UAAYA,GAA6B,CACvCF,EAAI,KAAO,CACT,OAAQE,CAAA,EACR,CACJ,EAEA,cAAgBC,GAAmB,CACjCH,EAAI,KAAO,CACT,WAAYG,CAAA,EACZ,CACJ,EACA,YAAcA,GAAmB,CAC/BH,EAAI,KAAO,CACT,SAAUG,CAAA,EACV,CACJ,EACA,qBAAuBC,GAAqB,CAC1CJ,EAAI,KAAO,CACT,kBAAmBI,CAAA,EACnB,CACJ,EACA,cAAgBC,GAAwB,CACtCL,EAAI,KAAO,CACT,WAAAK,CAAA,EACA,CACJ,EACA,uBAAyBC,GAAoB,CAC3CN,EAAI,KAAO,CACT,oBAAqBM,CAAA,EACrB,CACJ,EACA,cAAgBC,GAA0B,CACxCP,EAAI,KAAO,CACT,WAAYO,CAAA,EACZ,CACJ,EACA,WAAaA,GAAuB,CAClCP,EAAI,KAAO,CACT,QAASO,CAAA,EACT,CACJ,CACF,GAEMC,EAAeC,EAAOV,CAAK"}