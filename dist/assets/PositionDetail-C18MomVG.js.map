{"version":3,"file":"PositionDetail-C18MomVG.js","sources":["../../src/components/position/clmm/details/DetailHeaderInfo.tsx","../../src/hooks/position/usePosAddPage.ts","../../src/components/position/clmm/details/IncreaseBlock.tsx","../../src/components/position/clmm/details/ChartBlock.tsx","../../src/components/position/clmm/details/PositionChartInfo.tsx","../../src/pages/PositionDetail.tsx"],"sourcesContent":["import AprTooltip from '@/components/common/aprTooltip'\nimport CoinPairInfo from '@/components/common/CoinPairInfo'\nimport StatsInfo from '@/components/liquidity/clmm/StatsInfo'\nimport useGetTvlInfo from '@/hooks/clmm/useGetTvlInfo'\nimport usePosHelper from '@/hooks/position/usePosHelper'\nimport useGlobalStore from '@/store/common/global'\nimport usePositionStore from '@/store/position'\nimport usePositionDetailStore from '@/store/position/detail'\nimport { PosBaseInfo } from '@/types'\nimport { AddressCopyLink } from '@cetus/design'\nimport useExplorer from '@cetus/hooks/src/useExplorer'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { isAvailableObject, symbolDataDisplayProcessing } from '@cetus/utils'\nimport { Box, HStack, Skeleton, Text, VStack } from '@chakra-ui/react'\nimport { useMemo } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport StatusPosition from '../../common/StatusPosition'\nfunction DetailHeaderInfo() {\n  const { currentPosBaseInfo, posPoolsRelatedData, posPoolsOriginalData } = usePositionStore()\n  const { currentPosPoolInfo, curPosContractPoolInfo } = usePositionDetailStore()\n  const currentPosPoolsRelatedData = posPoolsRelatedData[currentPosBaseInfo?.posId as string]\n\n  const { getClmmPosName, getTokenALock, getTokenBLock } = usePosHelper()\n  const tokenName = useMemo(() => {\n    if (currentPosBaseInfo?.tokenName) {\n      return currentPosBaseInfo?.tokenName\n    } else {\n      const position_index = posPoolsOriginalData?.[currentPosBaseInfo?.clmmPool as string]?.index\n      return getClmmPosName(currentPosBaseInfo?.index as number, position_index)\n    }\n  }, [currentPosBaseInfo?.tokenName, currentPosBaseInfo?.index, currentPosBaseInfo?.clmmPool, posPoolsOriginalData])\n\n  const displayFee = currentPosPoolsRelatedData?.displayFee + '%'\n\n  const showTokenALock = useMemo(() => {\n    return getTokenALock(currentPosBaseInfo as PosBaseInfo, curPosContractPoolInfo?.current_sqrt_price)\n  }, [curPosContractPoolInfo?.current_tick_index, currentPosBaseInfo])\n\n  const showTokenBLock = useMemo(() => {\n    return getTokenBLock(currentPosBaseInfo as PosBaseInfo, curPosContractPoolInfo?.current_sqrt_price)\n  }, [curPosContractPoolInfo?.current_tick_index, currentPosBaseInfo])\n\n  const isActive = useMemo(() => {\n    return !showTokenALock && !showTokenBLock && currentPosPoolsRelatedData?.currentStatus === 'Active'\n  }, [showTokenALock, showTokenBLock, currentPosPoolsRelatedData?.currentStatus])\n\n  const { getExplorerUrl } = useExplorer()\n  const navigate = useNavigate()\n  const { setBackUrl } = useGlobalStore()\n  const { isApp } = useWindowWidth()\n  const { totalAmountUSD: totalTvl, tvlLoading } = useGetTvlInfo()\n\n  return (\n    <HStack gap=\"12px\" mb=\"8px\" w=\"100%\" justifyContent=\"space-between\" align=\"flex-end\" flexDirection={{ base: 'column', lg: 'row' }}>\n      {currentPosBaseInfo?.clmmPool ? (\n        <VStack w={{ base: '100%', lg: 'unset' }} align=\"flex-start\" gap=\"12px\">\n          <Box\n            mb=\"-12px\"\n            w={{ base: '100%', lg: 'unset' }}\n            onClick={e => {\n              setBackUrl(`/position-detail/${currentPosBaseInfo?.id}`)\n              navigate(`/liquidity?poolAddress=${currentPosBaseInfo?.clmmPool}`)\n            }}\n          >\n            <CoinPairInfo\n              poolInfo={{ feeDisplay: displayFee, poolAddress: currentPosBaseInfo?.clmmPool, ...currentPosBaseInfo }}\n              symbolEllipsesDecimals={10}\n              nameEllipsesDecimals={20}\n              symbolFontSize=\"20px\"\n              placement=\"bottom-start\"\n              versionBlockPosition=\"right\"\n              type=\"column\"\n              showPoolTypeTag\n              moreDetails\n            />\n          </Box>\n          <HStack w={{ base: '100%', lg: 'unset' }}>\n            <HStack gap=\"4px\" p=\"3px 8px\" borderRadius=\"8px\" bg=\"bg_secondary\">\n              {tokenName && (\n                <HStack>\n                  {/* Position */}\n                  <Text color=\"primary_gray\" fontSize=\"12px\">\n                    ID\n                  </Text>\n                  <Text color=\"primary_gray\" fontSize=\"12px\">\n                    {tokenName?.split('|')[1]} |\n                  </Text>\n                </HStack>\n              )}\n              <HStack>\n                {currentPosBaseInfo?.id && (\n                  <AddressCopyLink\n                    fontWeight=\"500\"\n                    showCopy={false}\n                    color=\"primary_gray\"\n                    address={currentPosBaseInfo?.id as string}\n                    showLink={false}\n                    onClickLink={() => {\n                      window.open(getExplorerUrl(currentPosBaseInfo?.id, 'nftAddress'), '_blank')\n                    }}\n                  />\n                )}\n              </HStack>\n            </HStack>\n            {currentPosPoolsRelatedData?.currentStatus !== undefined && (\n              <StatusPosition\n                isActive={isActive}\n                isLoading={!isAvailableObject(currentPosBaseInfo) || !isAvailableObject(posPoolsOriginalData?.[currentPosBaseInfo?.clmmPool || ''])}\n              />\n            )}\n          </HStack>\n        </VStack>\n      ) : (\n        <VStack w={{ base: '100%', lg: 'unset' }} gap=\"0px\" justify=\"flex-end\" align=\"flex-start\">\n          <Skeleton w=\"150px\" m=\"12px 0\" />\n          <Skeleton w=\"200px\" />\n        </VStack>\n      )}\n      <HStack w={{ base: '100%', lg: 'unset' }} gap={{ base: '12px', lg: '28px' }} flexDirection={{ base: 'column', lg: 'row' }}>\n        <StatsInfo\n          label=\"Pool APR\"\n          value={\n            <AprTooltip poolInfo={currentPosPoolInfo} placement={isApp ? 'bottom-end' : 'bottom'}>\n              <HStack justify=\"flex-end\" align=\"flex-end\" gap=\"4px\" lineHeight=\"14px\" h=\"14px\">\n                <Text\n                  as=\"span\"\n                  fontSize=\"14px\"\n                  color=\"text_caption\"\n                  fontWeight=\"500\"\n                  cursor={currentPosPoolInfo?.farmingAprDisplay || currentPosPoolInfo?.miningAprList?.length > 0 ? 'help' : 'text'}\n                >\n                  {currentPosPoolInfo?.feeAndMiningAprDisplay ? currentPosPoolInfo?.feeAndMiningAprDisplay : '--'}\n                </Text>\n                {currentPosPoolInfo?.haveFarming && currentPosPoolInfo?.farmingAprDisplay && currentPosPoolInfo?.farmingAprDisplay !== '--' && (\n                  <Text fontSize=\"12px\" lineHeight=\"12px\" h=\"12px\" color=\"primary\" fontWeight=\"500\">\n                    +{currentPosPoolInfo?.farmingAprDisplay}\n                  </Text>\n                )}\n              </HStack>\n            </AprTooltip>\n          }\n          loading={!currentPosPoolInfo?.poolAddress}\n        />\n        <StatsInfo label=\"TVL\" value={(symbolDataDisplayProcessing(totalTvl, '$', 2) as string) || ''} loading={tvlLoading} />\n        <StatsInfo label=\"Volume (24H)\" value={(currentPosPoolInfo?.volume24Display as string) || ''} loading={!currentPosPoolInfo?.poolAddress} />\n        <StatsInfo label=\"Fees (24H)\" value={(currentPosPoolInfo?.fees24Display as string) || ''} loading={!currentPosPoolInfo?.poolAddress} />\n      </HStack>\n    </HStack>\n  )\n}\nexport default DetailHeaderInfo\n","import useTransaction from '@/hooks/common/useTransaction'\nimport useZapSubmit from '@/hooks/zap/useZapSubmit'\nimport useGlobalStore from '@/store/common/global'\nimport usePositionStore from '@/store/position'\nimport usePositionDetailStore from '@/store/position/detail'\nimport useZapStore from '@/store/zap'\nimport { PosBaseInfo, PosReward } from '@/types'\nimport { formatDescription } from '@/utils'\nimport { useAccountBalance, useDebounceFunction } from '@cetus/hooks'\nimport { useGetTokenBalance } from '@cetus/hooks/src/useTokenBalance'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport useTransactionModal from '@cetus/hooks/src/useTransactionModal'\nimport { useAccountStore } from '@cetus/stores'\nimport { BalanceChanges, CommonTypeInfo, TransactionStatusType } from '@cetus/types'\nimport { amountToBN, bnToAmount, d, Decimal, formatNumberWithDown, getBalanceChanges, isAvailableObject, textEllipses } from '@cetus/utils'\nimport { useEffect, useMemo, useRef, useState } from 'react'\nimport { v4 } from 'uuid'\nimport useInsufficientBalanceToast from '../common/useInsufficientBalanceToast'\nimport useGetContractPoolInfo from '../pool/useGetContractPoolInfo'\nimport useCurrentPos from './useCurrentPos'\nimport usePosAdd from './usePosAdd'\nimport usePosHelper from './usePosHelper'\n\nexport default function usePosAddPage() {\n  const { currentPosBaseInfo, posPoolsOriginalData, posPoolsRelatedData, posRewardsData, posLiquidityData } = usePositionStore()\n  const currentPosRewardsData = posRewardsData[currentPosBaseInfo?.posId]\n  const { getTokenAmountValue } = useTokenPrice()\n  const { transactionConfirmation } = useTransactionModal()\n  const { preAdd, getAddTsPayload, getClmmCreateAddData, getFarmsCreateAddData } = usePosAdd()\n  const { getTokenALock, getTokenBLock } = usePosHelper()\n  const { getCurrentPosBaseInfo, getCurrentPosHistory } = useCurrentPos()\n  const {\n    setTokenAmountAfterA,\n    setTokenAmountAfterB,\n    currentPoolSqrtPrice,\n    isFixedDisplayTokenA,\n    setIsFixedDisplayTokenA,\n    curPosContractPoolInfo,\n    currentPosDetailTab,\n    isPosDetailRefresh,\n    useZapIn,\n    isAutoClaim\n  } = usePositionDetailStore()\n\n  const { getZapDepositToastInfo, getZapDepositTx, reCalculateZapData } = useZapSubmit()\n  const { preDepositeData, setZapAmount, setPreDepositeData } = useZapStore()\n\n  const [preAddLoading, setPreAddLoading] = useState(false)\n  const [tokenMaxA, setTokenMaxA] = useState('')\n  const [tokenMaxB, setTokenMaxB] = useState('')\n  const [tokenAmountA, setTokenAmountA] = useState('')\n  const [tokenAmountB, setTokenAmountB] = useState('')\n\n  const currentPosLiquidityData = useMemo(() => {\n    return posLiquidityData[currentPosBaseInfo?.posId as string]\n  }, [posLiquidityData, currentPosBaseInfo?.posId])\n\n  // 左侧after展示\n  const tokenABalance = formatNumberWithDown(currentPosLiquidityData?.displayCoinAmountA, undefined, true)\n  const tokenBBalance = formatNumberWithDown(currentPosLiquidityData?.displayCoinAmountB, undefined, true)\n  useEffect(() => {\n    if (+tokenAmountA || +tokenAmountB) {\n      const amountA = +tokenAmountA\n      const amountB = +tokenAmountB\n      setTokenAmountAfterA(d(amountA).plus(tokenABalance).toString())\n      setTokenAmountAfterB(d(amountB).plus(tokenBBalance).toString())\n    } else {\n      setTokenAmountAfterA('')\n      setTokenAmountAfterB('')\n    }\n  }, [tokenAmountA, tokenAmountB])\n\n  const displayTokenA = currentPosBaseInfo?.displayTokenA\n  const displayTokenB = currentPosBaseInfo?.displayTokenB\n\n  const { mevProtect, maxCapForGas, transactionMode, customGasPrice, slippage, zapSlippage } = useGlobalStore()\n  // 余额\n  const { balanceInfo: tokenABalanceInfo } = useGetTokenBalance(displayTokenA)\n  const { balanceInfo: tokenBBalanceInfo } = useGetTokenBalance(displayTokenB)\n\n  // 价值\n  const tokenAmountValueA = getTokenAmountValue(displayTokenA?.coin_type, tokenAmountA)\n  const tokenAmountValueB = getTokenAmountValue(displayTokenB?.coin_type, tokenAmountB)\n\n  const [uuid, setUuid] = useState<string>('')\n  const uuidRef = useRef<string>('')\n\n  useEffect(() => {\n    console.log('🚀 ~ usePosAddPage ~ uuid:', uuid)\n    uuidRef.current = uuid\n  }, [uuid])\n\n  const resetInputAmount = () => {\n    setTokenAmountA('')\n    setTokenAmountB('')\n    setPreAddLoading(false)\n    setUuid('')\n  }\n\n  const showTokenALock = useMemo(() => {\n    return getTokenALock(currentPosBaseInfo as PosBaseInfo, curPosContractPoolInfo?.current_sqrt_price)\n  }, [curPosContractPoolInfo?.current_tick_index, currentPosBaseInfo])\n\n  const showTokenBLock = useMemo(() => {\n    return getTokenBLock(currentPosBaseInfo as PosBaseInfo, curPosContractPoolInfo?.current_sqrt_price)\n  }, [curPosContractPoolInfo?.current_tick_index, currentPosBaseInfo])\n\n  const showDisplayTokenALock = !currentPosBaseInfo?.isReverse ? showTokenALock : showTokenBLock\n  const showDisplayTokenBLock = !currentPosBaseInfo?.isReverse ? showTokenBLock : showTokenALock\n\n  useEffect(() => {\n    resetInputAmount()\n  }, [showDisplayTokenALock, showDisplayTokenBLock])\n\n  // 预计算防抖\n  const debouncedPreAdd = useDebounceFunction((amount, is_fixed_displaytokenA, uuid) => {\n    if (currentPosDetailTab !== 'increase') {\n      return\n    }\n    const decimals = is_fixed_displaytokenA ? currentPosBaseInfo?.displayTokenA?.decimals : currentPosBaseInfo?.displayTokenB?.decimals\n    const amountBN = amountToBN(amount, decimals)\n    const tokenA = currentPosBaseInfo?.tokenA\n    const tokenB = currentPosBaseInfo?.tokenB\n    const lowerTick = currentPosBaseInfo?.lowerTick\n    const upperTick = currentPosBaseInfo?.upperTick\n    const isReverse = currentPosBaseInfo?.isReverse\n    // const curSqrtPrice = currentPosPoolsOriginalData.current_sqrt_price\n    const params = {\n      amount: amountBN,\n      tokenA,\n      tokenB,\n      isTokenA: isReverse ? !is_fixed_displaytokenA : is_fixed_displaytokenA,\n      lowerTick,\n      upperTick,\n      curSqrtPrice: currentPoolSqrtPrice,\n      isReverse,\n      roundUp: true\n    }\n    console.log('🚀 ~ debouncedPreAdd ~ params:', params)\n    const { displayCoinAmountA, displayCoinAmountB, tokenMaxA, tokenMaxB } = preAdd(params)\n    // console.log('🚀 ~ debouncedPreAdd:', coinAmountA, coinAmountB, params, is_fixed_displaytokenA, uuid)\n\n    if (uuidRef.current === uuid) {\n      setTokenMaxA(tokenMaxA)\n      setTokenMaxB(tokenMaxB)\n      if (is_fixed_displaytokenA) {\n        setTokenAmountB(displayCoinAmountB || '')\n      } else {\n        setTokenAmountA(displayCoinAmountA || '')\n      }\n    } else {\n      resetInputAmount()\n    }\n    setPreAddLoading(false)\n  }, 500)\n\n  // 重新计算 (刷新按钮价格更新时 交易失败时)\n  const reCalculateResult = () => {\n    if ((tokenAmountA || tokenAmountB) && isAvailableObject(currentPosBaseInfo)) {\n      console.log('🚀 ~ reCalculateResult ~ currentPosBaseInfo:', currentPosBaseInfo)\n      const amount = isFixedDisplayTokenA ? tokenAmountA : tokenAmountB\n      if (+amount) {\n        const uuid = v4()\n        setUuid(uuid)\n        debouncedPreAdd(amount, isFixedDisplayTokenA, uuid)\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (currentPosDetailTab == 'increase' && isPosDetailRefresh) {\n      reCalculateResult()\n    }\n  }, [isPosDetailRefresh])\n\n  /**\n   * 输入数量监听\n   * @param amount\n   */\n  const handleAmountChange = (amount: string, is_fixed_displaytokenA: boolean) => {\n    console.log('🚀 ~ handleAmountChange ~ amount:', !amount, +amount, amount)\n    if (!amount) {\n      resetInputAmount()\n      return\n    }\n    setIsFixedDisplayTokenA(is_fixed_displaytokenA)\n    if (is_fixed_displaytokenA) {\n      setTokenAmountA(amount)\n    } else {\n      setTokenAmountB(amount)\n    }\n\n    if (+amount) {\n      setPreAddLoading(true)\n      const uuid = v4()\n      setUuid(uuid)\n\n      console.log('🚀 ~ handleAmountChange ~ params:', amount)\n      debouncedPreAdd(amount, is_fixed_displaytokenA, uuid)\n    } else {\n      if (is_fixed_displaytokenA) {\n        setTokenAmountB('')\n      } else {\n        setTokenAmountA('')\n      }\n    }\n  }\n\n  const { currentAccount } = useAccountStore()\n  const btnStatusText = useMemo(() => {\n    const btnInfo: {\n      text?: string\n      disabled: boolean\n    } = {\n      text: 'Add More Liquidity',\n      disabled: false\n    }\n    if (!currentAccount?.address) {\n      btnInfo.text = 'Connect Wallet'\n      btnInfo.disabled = false\n      return btnInfo\n    }\n\n    // 判断输入\n    if (!+tokenAmountA && !+tokenAmountB) {\n      btnInfo.text = 'Enter an amount'\n      btnInfo.disabled = true\n      return btnInfo\n    }\n    //判断余额\n    if (!showDisplayTokenALock && tokenAmountA && d(tokenAmountA).gt(tokenABalanceInfo?.balanceFormat || 0)) {\n      btnInfo.disabled = true\n      btnInfo.text = `Insufficient ${textEllipses(displayTokenA?.symbol, 10)} Balance`\n      return btnInfo\n    }\n    //判断余额\n    if (!showDisplayTokenBLock && tokenAmountB && d(tokenAmountB).gt(tokenBBalanceInfo?.balanceFormat || 0)) {\n      btnInfo.disabled = true\n      btnInfo.text = `Insufficient ${textEllipses(displayTokenB?.symbol, 10)} Balance`\n      return btnInfo\n    }\n    if (!showTokenALock && !showTokenBLock && (!+tokenAmountA || !+tokenAmountB)) {\n      btnInfo.disabled = true\n      return btnInfo\n    }\n\n    if (currentPosBaseInfo?.posType == 'burn') {\n      btnInfo.disabled = true\n      return btnInfo\n    }\n\n    return btnInfo\n  }, [tokenAmountA, tokenAmountB, tokenABalanceInfo, tokenBBalanceInfo, currentAccount?.address])\n\n  const { signAndExecuteTransaction } = useTransaction()\n  const { getContractPoolInfo } = useGetContractPoolInfo()\n  const [isAddLoading, setIsAddLoading] = useState(false)\n  const { fetchAccountBalance } = useAccountBalance()\n  const { showInsufficientBalanceToast } = useInsufficientBalanceToast()\n  const toAdd = async () => {\n    setIsAddLoading(true)\n\n    let amount_a\n    let amount_b\n    try {\n      let tx\n      let msafeParams\n      let toastInfo\n\n      const rewarderCoinTypes = (currentPosRewardsData || [])?.reduce((arr: string[], item: PosReward) => {\n        if (d(item?.amount_owed).gt(0)) {\n          arr.push(item.coin_address)\n        }\n        return arr\n      }, [])\n      if (!useZapIn) {\n        const inputAmount = isFixedDisplayTokenA ? tokenAmountA : tokenAmountB\n        const tokenDecimals = isFixedDisplayTokenA ? displayTokenA!.decimals : displayTokenB!.decimals\n        const amount = d(inputAmount).mul(Decimal.pow(10, tokenDecimals)).toString()\n\n        const fixAmountA = currentPosBaseInfo?.isReverse ? !isFixedDisplayTokenA : isFixedDisplayTokenA\n\n        const lowerTick = currentPosBaseInfo?.lowerTick\n        const upperTick = currentPosBaseInfo?.upperTick\n        const currentTickIndex = curPosContractPoolInfo?.current_tick_index\n        if (currentTickIndex !== undefined && lowerTick !== undefined && upperTick !== undefined) {\n          if (currentTickIndex >= lowerTick && currentTickIndex <= upperTick) {\n            amount_a = fixAmountA ? amount : tokenMaxA\n            amount_b = fixAmountA ? tokenMaxB : amount\n          } else if (currentTickIndex > upperTick) {\n            amount_a = 0\n            amount_b = amount\n          } else if (currentTickIndex < lowerTick) {\n            amount_a = amount\n            amount_b = 0\n          }\n        }\n\n        console.log('🚀 ~ toAdd ~ lowerTick:', lowerTick, upperTick, currentTickIndex)\n\n        console.log('🚀 ~ toAdd ~ amount_a:', currentPosBaseInfo, amount_a, amount_b)\n\n        console.log('🚀 ~ toAdd ~ rewarderCoinTypes:', currentPosRewardsData, rewarderCoinTypes)\n\n        const params: any = {\n          poolAddress: currentPosBaseInfo?.clmmPool,\n          coinTypeA: currentPosBaseInfo?.coinTypeA,\n          coinTypeB: currentPosBaseInfo?.coinTypeB,\n          amountA: amount_a,\n          amountB: amount_b,\n          fixAmountA,\n          lowerTick: currentPosBaseInfo?.lowerTick,\n          upperTick: currentPosBaseInfo?.upperTick,\n          // currentSqrtPrice: currentPosPoolsRelatedData?.curSqrtPrice,\n          currentSqrtPrice: currentPoolSqrtPrice,\n          posType: currentPosBaseInfo?.posType,\n          rewarderCoinTypes,\n          posIndex: currentPosBaseInfo?.index,\n          posId: currentPosBaseInfo?.posType == 'farms' ? currentPosBaseInfo?.id : currentPosBaseInfo?.posId,\n          isAutoClaim\n        }\n        if (currentPosBaseInfo?.posType == 'farms') {\n          params['farmsPoolId'] = currentPosBaseInfo?.farmsPool\n        }\n\n        toastInfo = {\n          getShowInfo: (status: TransactionStatusType, balanceChanges?: Record<string, BalanceChanges>) => {\n            const description =\n              'Add ' +\n              [formatDescription(tokenAmountA, displayTokenA?.symbol), formatDescription(tokenAmountB, displayTokenB?.symbol)]\n                .filter(Boolean)\n                .join(' and ')\n\n            const info: CommonTypeInfo = {\n              modalDescriptionText: description,\n              toastTitleText: description\n            }\n\n            if (status === 'success') {\n              let amountAF = tokenAmountA\n              let amountBF = tokenAmountB\n\n              if (balanceChanges) {\n                amountAF = getBalanceChanges(balanceChanges, displayTokenA) || tokenAmountA\n                amountBF = getBalanceChanges(balanceChanges, displayTokenB) || tokenAmountB\n              }\n              const description =\n                'Add ' +\n                [formatDescription(amountAF, displayTokenA?.symbol), formatDescription(amountBF, displayTokenB?.symbol)].filter(Boolean).join(' and ')\n\n              info.toastDescriptionContent = description\n              info.modalDescriptionText = description\n              info.toastTitleText = 'Supplied Successful'\n            }\n\n            return info\n          }\n        }\n\n        transactionConfirmation(toastInfo)\n\n        console.log('🚀 ~ toAdd ~ params:', params)\n        const addPayload = await getAddTsPayload(params)\n        tx = addPayload?.tx\n        msafeParams = addPayload?.msafeParams\n      } else {\n        toastInfo = getZapDepositToastInfo()\n        transactionConfirmation(toastInfo)\n        tx = await getZapDepositTx(currentPosBaseInfo?.lowerTick, currentPosBaseInfo?.upperTick, currentPosBaseInfo?.posType == 'farms', {\n          pos_id: currentPosBaseInfo?.posType == 'farms' ? currentPosBaseInfo?.id : currentPosBaseInfo?.posId,\n          collect_fee: isAutoClaim,\n          collect_rewarder_types: isAutoClaim ? rewarderCoinTypes : []\n        })\n      }\n\n      const trackData = {\n        pool: currentPosBaseInfo?.clmmPool,\n        lower: currentPosBaseInfo?.lowerTick,\n        upper: currentPosBaseInfo?.upperTick,\n        coinTypeA: currentPosBaseInfo?.coinTypeA,\n        coinTypeB: currentPosBaseInfo?.coinTypeB,\n        amountA: amount_a,\n        amountB: amount_b,\n        currentSqrtPrice: currentPoolSqrtPrice,\n        slippage,\n        zapSlippage,\n        farmsPoolId: currentPosBaseInfo?.posType == 'farms' ? currentPosBaseInfo?.farmsPool : undefined,\n        txAction: useZapIn ? 'increaseLiquidity-zap' : 'increaseLiquidity'\n      }\n\n      const res = await signAndExecuteTransaction(tx, toastInfo, {\n        useMev: mevProtect,\n        useFastMode: transactionMode === 'Fast Mode',\n        maxCapForGas,\n        customGasPrice,\n        msafeParams,\n        trackData\n      })\n      console.log('🚀 ~ toClaim ~ res:', res)\n\n      if (res) {\n        // 重新拿数据\n        fetchAccountBalance()\n        resetInputAmount()\n        setZapAmount('')\n        getCurrentPosBaseInfo(currentAccount?.address as string, currentPosBaseInfo?.id as string, true)\n        // getCurrentPosHistory(currentPosBaseInfo?.id as string, currentPosBaseInfo?.posId as string)\n      } else {\n        if (currentPosBaseInfo) {\n          // 如果失败，大概率都是池子价格变化了，需要重新计算\n          getContractPoolInfo(currentPosBaseInfo?.clmmPool).then(res => {\n            console.log('🚀 ~ toClaim ~ res:', res)\n            if (useZapIn) {\n              reCalculateZapData()\n            } else {\n              reCalculateResult()\n            }\n          })\n        }\n      }\n      setIsAddLoading(false)\n    } catch (error: any) {\n      console.log('🚀 ~ toClaim ~ error:', error)\n      if (useZapIn) {\n        reCalculateZapData()\n      } else {\n        reCalculateResult()\n      }\n      showInsufficientBalanceToast(String(error))\n      setIsAddLoading(false)\n    }\n  }\n\n  // zapIn时候根据计算结果设置amountA,B,  主要为了左侧after相关展示\n  useEffect(() => {\n    if (currentPosDetailTab !== 'increase') return\n    if (useZapIn) {\n      if (preDepositeData?.amount_a || preDepositeData?.amount_b) {\n        const tokenA = currentPosBaseInfo?.tokenA\n        const tokenB = currentPosBaseInfo?.tokenB\n        const amountA = bnToAmount(preDepositeData?.amount_a, tokenA?.decimals)\n        const amountB = bnToAmount(preDepositeData?.amount_b, tokenB?.decimals)\n        setTokenAmountA(!currentPosBaseInfo?.isReverse ? amountA : amountB)\n        setTokenAmountB(!currentPosBaseInfo?.isReverse ? amountB : amountA)\n        return\n      }\n      setTokenAmountA('')\n      setTokenAmountB('')\n    }\n  }, [useZapIn, preDepositeData, currentPosBaseInfo?.isReverse])\n\n  useEffect(() => {\n    setTokenAmountA('')\n    setTokenAmountB('')\n    return () => {\n      setPreDepositeData(undefined)\n    }\n  }, [])\n\n  return {\n    tokenAmountA,\n    tokenAmountB,\n    reCalculateResult,\n    preAddLoading,\n    preAdd,\n    getAddTsPayload,\n    displayTokenA,\n    displayTokenB,\n    tokenABalanceInfo,\n    tokenBBalanceInfo,\n    tokenAmountValueA,\n    tokenAmountValueB,\n    handleAmountChange,\n    resetInputAmount,\n    btnStatusText,\n    toAdd,\n    isAddLoading,\n    showTokenALock,\n    showTokenBLock,\n    showDisplayTokenALock,\n    showDisplayTokenBLock,\n    getClmmCreateAddData,\n    getFarmsCreateAddData,\n    currentPoolSqrtPrice\n  }\n}\n","import ZapDeposite from '@/components/zap/ZapDeposite'\nimport ZapSubmiteInfo from '@/components/zap/ZapSubmiteInfo'\nimport useCurrentApiPool from '@/hooks/position/useCurrentApiPool'\nimport usePosAddPage from '@/hooks/position/usePosAddPage'\nimport usePositionStore from '@/store/position'\nimport usePositionDetailStore from '@/store/position/detail'\nimport { TradeInputGroup } from '@cetus/design'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport { useAccountStore } from '@cetus/stores'\nimport { formatCurrency } from '@cetus/utils'\nimport { d } from '@cetusprotocol/common-sdk'\nimport { Box, Button, HStack, Text, VStack } from '@chakra-ui/react'\nimport { useEffect } from 'react'\nimport { AutoClaimCheckBox } from '../../common/AutoClaimCheckBox'\nimport FarmsBlock from './FarmsBlock'\nimport TradeTitle from './TradeTitle'\n\nfunction IncreaseBlock() {\n  const { currentPosBaseInfo, posPoolsRelatedData, posApiPoolData } = usePositionStore()\n  const { currentAccount, onWalletModal } = useAccountStore()\n  const { isFixedDisplayTokenA, curPosContractPoolInfo, useZapIn, currentPosPoolInfo, isAutoClaim, setIsAutoClaim } = usePositionDetailStore()\n  const {\n    tokenAmountA,\n    tokenAmountB,\n    displayTokenA,\n    displayTokenB,\n    tokenABalanceInfo,\n    tokenBBalanceInfo,\n    tokenAmountValueA,\n    tokenAmountValueB,\n    handleAmountChange,\n    preAddLoading,\n    btnStatusText,\n    toAdd,\n    isAddLoading,\n    showDisplayTokenALock,\n    showDisplayTokenBLock,\n    resetInputAmount,\n    currentPoolSqrtPrice\n  } = usePosAddPage()\n\n  useEffect(() => {\n    return () => {\n      resetInputAmount()\n    }\n  }, [])\n\n  const { getTokenAmountValue } = useTokenPrice()\n  const amountValueA = getTokenAmountValue(displayTokenA?.coin_type, tokenAmountA, '--')\n  const amountValueB = getTokenAmountValue(displayTokenB?.coin_type, tokenAmountB, '--')\n  const totalAmount = amountValueA == '--' || amountValueB == '--' ? '--' : d(tokenAmountValueA).plus(tokenAmountValueB).toString()\n\n  const currentPosPoolsRelatedData = posPoolsRelatedData[currentPosBaseInfo?.posId]\n\n  const { currentApiPoolInfo } = useCurrentApiPool(currentPosBaseInfo, posApiPoolData)\n\n  return (\n    <VStack w=\"100%\" gap=\"16px\">\n      <VStack w=\"100%\" gap=\"16px\" p={{ base: '0 8px 16px', lg: '0 16px 16px' }} bg=\"card_bg\" borderRadius=\"0px 0px 16px 16px\">\n        <Box w=\"100%\" position=\"relative\">\n          {currentApiPoolInfo?.haveZap && currentPosBaseInfo?.posType !== 'burn' && !showDisplayTokenALock && !showDisplayTokenBLock && (\n            <TradeTitle action=\"Deposit\" resetInputAmount={resetInputAmount} />\n          )}\n          {useZapIn ? (\n            <ZapDeposite\n              action=\"Deposit\"\n              apiPoolInfo={currentApiPoolInfo}\n              currentSqrtPrice={currentPoolSqrtPrice}\n              lowerTick={currentPosBaseInfo?.lowerTick}\n              upperTick={currentPosBaseInfo?.upperTick}\n            />\n          ) : (\n            <>\n              <TradeInputGroup\n                from={{\n                  wrapStyle: {\n                    h: '108px',\n                    borderRadius: '12px'\n                  },\n                  balance: tokenABalanceInfo?.balanceFormat || '',\n                  value: tokenAmountA,\n                  amountValue: tokenAmountValueA,\n                  loading: !isFixedDisplayTokenA && preAddLoading,\n                  onChange: value => {\n                    handleAmountChange(value, true)\n                  },\n                  placeholder: '0.0',\n                  token: displayTokenA,\n                  lock: {\n                    isLock: currentPosBaseInfo && curPosContractPoolInfo && showDisplayTokenALock,\n                    style: {\n                      borderRadius: '12px'\n                    }\n                  },\n                  rightJustify: 'space-around'\n                }}\n                to={{\n                  wrapStyle: {\n                    h: '108px',\n                    borderRadius: '12px'\n                  },\n                  balance: tokenBBalanceInfo?.balanceFormat || '',\n                  value: tokenAmountB,\n                  amountValue: tokenAmountValueB,\n                  loading: isFixedDisplayTokenA && preAddLoading,\n                  onChange: value => {\n                    handleAmountChange(value, false)\n                  },\n                  placeholder: '0.0',\n                  token: displayTokenB,\n                  lock: {\n                    isLock: currentPosBaseInfo && curPosContractPoolInfo && showDisplayTokenBLock,\n                    style: {\n                      borderRadius: '12px'\n                    }\n                  },\n                  rightJustify: 'space-around'\n                }}\n                iconHover={false}\n                iconParams={\n                  showDisplayTokenALock || showDisplayTokenBLock\n                    ? undefined\n                    : {\n                        xlinkHref: '#icon-icon_add',\n                        svgFill: 'text_caption'\n                      }\n                }\n                lock={{\n                  isLock: !currentPosBaseInfo || !curPosContractPoolInfo || (currentPosBaseInfo && currentPosBaseInfo?.posType == 'burn'),\n                  text: currentPosBaseInfo && currentPosBaseInfo?.posType == 'burn' ? 'Your liquidity has been permanently locked' : undefined,\n                  style: {\n                    h: '224px',\n                    borderRadius: '12px'\n                  }\n                }}\n              />\n            </>\n          )}\n        </Box>\n\n        <AutoClaimCheckBox\n          checked={isAutoClaim}\n          onChange={() => {\n            setIsAutoClaim(!isAutoClaim)\n          }}\n        />\n\n        {useZapIn ? (\n          <ZapSubmiteInfo\n            action=\"Deposit\"\n            onClick={toAdd}\n            isPositionStyle={true}\n            hideDepositRatio={true}\n            otherLoading={isAddLoading}\n            isReverse={currentPosBaseInfo?.isReverse}\n          />\n        ) : (\n          <>\n            <Button\n              onClick={() => {\n                if (currentAccount) {\n                  toAdd()\n                } else {\n                  onWalletModal(true)\n                }\n              }}\n              isLoading={isAddLoading}\n              disabled={btnStatusText.disabled || isAddLoading || currentPosBaseInfo?.isFrozen}\n              w=\"100%\"\n              h=\"56px\"\n              fontSize=\"20px\"\n              fontWeight=\"500\"\n            >\n              {btnStatusText.text}\n            </Button>\n            {totalAmount && (\n              <HStack w=\"100%\" justify=\"space-between\">\n                <Text>Total Amount</Text>\n                <Text color=\"text_caption\">{formatCurrency(totalAmount, 2)}</Text>\n              </HStack>\n            )}\n          </>\n        )}\n      </VStack>\n      {currentPosBaseInfo?.posType !== 'burn' && <FarmsBlock haveFarming={currentPosPoolInfo?.haveFarming} />}\n      {/* {currentPosPoolsRelatedData && currentPosPoolsRelatedData?.minPrice !== '0' && currentPosPoolsRelatedData?.maxPrice !== '∞' && (\n        <RangeAlerts subscriptionSource=\"PositionDetail\" />\n      )} */}\n    </VStack>\n  )\n}\nexport default IncreaseBlock\n","import NoChartDataImg from '@/assets/images/no_chart_data@2x.png'\nimport LiquidityRangeChart from '@/components/liquidity/clmm/LiquidityRangeChart'\nimport useGetCurrentPrice from '@/hooks/clmm/useGetCurrentPrice'\nimport useGetTicksChartData from '@/hooks/clmm/useGetTicksChartData'\nimport useLiquidityStore from '@/store/clmm'\nimport usePriceRangeStore from '@/store/clmm/priceRange'\nimport usePositionStore from '@/store/position'\nimport usePositionDetailStore from '@/store/position/detail'\nimport { PoolApiInfo } from '@/types'\nimport { getReversePrice } from '@/utils/pool'\nimport { formatNumberWithDown } from '@cetus/utils'\nimport { d, TickMath, TickUtil } from '@cetusprotocol/common-sdk'\nimport { Box, Flex, Image } from '@chakra-ui/react'\nimport { useDeepCompareEffect } from 'ahooks'\nimport { useEffect, useMemo } from 'react'\n\nfunction ChartBlock({ direct, minPriceForDate, maxPriceForDate }: { direct: boolean; minPriceForDate: any; maxPriceForDate: any }) {\n  const { currentPosBaseInfo } = usePositionStore()\n  const { currentPosPoolInfo, curPosContractPoolInfo } = usePositionDetailStore()\n  const { setContractPoolInfo, setApiPoolInfo } = useLiquidityStore()\n  const { lowerTickData, upperTickData, setLowerTickData, setUpperTickData } = usePriceRangeStore()\n\n  useDeepCompareEffect(() => {\n    setApiPoolInfo(currentPosPoolInfo)\n  }, [currentPosPoolInfo])\n\n  const handleSetTickData = (tick: number, type: 'lower' | 'upper', poolApiInfo: PoolApiInfo) => {\n    const decimalsA = poolApiInfo?.tokenA?.decimals\n    const decimalsB = poolApiInfo?.tokenB?.decimals\n    let price\n\n    if (Math.abs(tick) == Math.abs(TickUtil.getMinIndex(Number(poolApiInfo.tickSpacing)))) {\n      price = type === 'lower' ? '0' : '∞'\n    } else {\n      price = TickMath.tickIndexToPrice(tick, decimalsA, decimalsB).toString()\n    }\n\n    const displayPrice = price === '∞' ? '∞' : formatNumberWithDown(price, 6)\n    const reversePrice = getReversePrice(price)\n    const displayReversePrice = reversePrice === '∞' ? '∞' : formatNumberWithDown(reversePrice, 6)\n\n    const data = {\n      id: type,\n      tokenA: poolApiInfo?.tokenA,\n      tokenB: poolApiInfo?.tokenB,\n      tick,\n      price,\n      displayPrice,\n      reversePrice,\n      displayReversePrice,\n      tickSpacing: poolApiInfo?.tickSpacing,\n      pool: poolApiInfo?.poolAddress\n    }\n\n    if (type === 'lower') {\n      setLowerTickData({ ...data })\n    } else {\n      setUpperTickData({ ...data })\n    }\n  }\n\n  const { getCurrentPrice } = useGetCurrentPrice()\n\n  useEffect(() => {\n    if (currentPosBaseInfo?.lowerTick && curPosContractPoolInfo?.current_sqrt_price && currentPosPoolInfo?.poolAddress) {\n      handleSetTickData(currentPosBaseInfo?.lowerTick, 'lower', { ...currentPosPoolInfo, tickSpacing: curPosContractPoolInfo.tickSpacing })\n      handleSetTickData(currentPosBaseInfo?.upperTick, 'upper', { ...currentPosPoolInfo, tickSpacing: curPosContractPoolInfo.tickSpacing })\n\n      getCurrentPrice(curPosContractPoolInfo?.current_sqrt_price, currentPosPoolInfo, curPosContractPoolInfo?.current_tick_index)\n      setContractPoolInfo(curPosContractPoolInfo)\n    }\n  }, [currentPosBaseInfo?.lowerTick, curPosContractPoolInfo?.current_sqrt_price, currentPosPoolInfo?.poolAddress])\n\n  const canDisplay = useMemo(() => {\n    return currentPosBaseInfo?.posId && lowerTickData?.pool && upperTickData?.pool\n  }, [lowerTickData?.pool, upperTickData?.pool, currentPosBaseInfo?.posId])\n  // console.log('🚀 ~ ChartBlock ~ currentPosBaseInfo?.isReverse:', currentPosBaseInfo?.isReverse)\n\n  const { isPosDetailRefresh } = usePositionDetailStore()\n  const { contractPoolInfo, apiPoolInfo } = useLiquidityStore()\n  const { getFormattedData } = useGetTicksChartData()\n\n  useEffect(() => {\n    if (isPosDetailRefresh) {\n      if (contractPoolInfo?.poolAddress && contractPoolInfo?.poolAddress === apiPoolInfo?.poolAddress) {\n        console.log('Test Depth Data###LiquidityRangeChart contractPoolInfo: ', contractPoolInfo)\n        console.log('Test Depth Data###LiquidityRangeChart apiPoolInfo1: ', apiPoolInfo)\n        console.log('Test Depth Data###LiquidityRangeChart contractPoolInfo?.poolAddress: ', contractPoolInfo?.poolAddress)\n        getFormattedData({\n          poolAddress: contractPoolInfo?.poolAddress,\n          tokenA: apiPoolInfo?.tokenA,\n          tokenB: apiPoolInfo?.tokenB,\n          tickSpacing: contractPoolInfo?.tickSpacing,\n          currentTickIndex: contractPoolInfo?.current_tick_index,\n          liquidity: contractPoolInfo?.liquidity,\n          // feeRate: contractPoolInfo?.fee_rate\n          feeRate: d(apiPoolInfo?.feeRate).mul(100).toString() || contractPoolInfo?.fee_rate\n        })\n      }\n    }\n  }, [isPosDetailRefresh, contractPoolInfo?.poolAddress, apiPoolInfo?.poolAddress])\n\n  return (\n    <Box className=\"chart-block\" w=\"260px\" h=\"104px\" mb=\"8px\" overflow=\"hidden\">\n      {canDisplay ? (\n        // <LiquidityRangeChart\n        //   isFrom=\"position\"\n        //   handleClickRefresh={() => {}}\n        //   minPriceData={!currentPosBaseInfo?.isReverse ? lowerTickData : upperTickData}\n        //   maxPriceData={!currentPosBaseInfo?.isReverse ? upperTickData : lowerTickData}\n        //   direct={!currentPosBaseInfo?.isReverse}\n        //   readonly={true}\n        // />\n        <LiquidityRangeChart\n          isFrom=\"position\"\n          handleClickRefresh={() => {}}\n          // direct={!currentPosBaseInfo?.isReverse}\n          direct={direct}\n          minPriceData={direct ? lowerTickData : upperTickData}\n          maxPriceData={direct ? upperTickData : lowerTickData}\n          dashedMarkerLine={[minPriceForDate, maxPriceForDate]}\n          readonly={true}\n        />\n      ) : (\n        <Flex justify=\"center\" align=\"center\">\n          <Image src={NoChartDataImg} w=\"100px\" h=\"100px\" />\n        </Flex>\n      )}\n    </Box>\n  )\n}\nexport default ChartBlock\n","import WithTooltipInfo from '@/components/common/WithTooltipInfo'\nimport usePosHelper from '@/hooks/position/usePosHelper'\nimport usePositionStore from '@/store/position'\nimport { PosBaseInfo, showNewVersionApr } from '@/types'\nimport { SelectTab } from '@cetus/design'\nimport { Tab } from '@cetus/design/src/components/common/SelectTab'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport { Token } from '@cetus/types'\nimport { formatNumber, formatPrice, isAvailableObject, textEllipses } from '@cetus/utils'\nimport { d, TickMath } from '@cetusprotocol/common-sdk'\nimport { Center, Divider, HStack, Skeleton, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useMemo, useState } from 'react'\nimport PositionCurrentPrice from '../../common/PositionCurrentPrice'\nimport ChartBlock from './ChartBlock'\n\nfunction PositionChartInfo({ positionApr, isAprLoading }: { positionApr: any; isAprLoading: boolean }) {\n  const { currentPosBaseInfo, posPoolsRelatedData, posPoolsOriginalData, poolRangeObj, posApiPoolData, posLiquidityData } = usePositionStore()\n  const posPoolInfo = posApiPoolData[currentPosBaseInfo?.clmmPool as string]\n  const currentPosPoolsRelatedData = posPoolsRelatedData[currentPosBaseInfo?.posId as string]\n\n  const leverage = useMemo(() => {\n    console.log('🚀 ~ leverage ~ currentPosPoolsRelatedData:', currentPosPoolsRelatedData)\n    const minPrice = currentPosPoolsRelatedData?.minPriceOrigin\n    const maxPrice = currentPosPoolsRelatedData?.maxPriceOrigin\n    if (minPrice !== '0' && maxPrice !== '∞') {\n      return formatNumber(1 / (1 - Number((minPrice / maxPrice) ** 0.25)), 2) + 'x'\n    } else {\n      return '1x'\n    }\n  }, [currentPosPoolsRelatedData?.minPriceOrigin, currentPosPoolsRelatedData?.maxPriceOrigin])\n\n  const rangeTabList = useMemo(() => {\n    if (currentPosBaseInfo) {\n      return [currentPosBaseInfo?.displayTokenA, currentPosBaseInfo?.displayTokenB]?.filter(Boolean).map(item => ({\n        label: item?.symbol,\n        key: item?.coin_type,\n        isToken: true,\n        imgInfo: {\n          src: item?.logo_url,\n          w: '16px',\n          h: '16px',\n          coinType: item ? item?.coin_type : '',\n          showTagWidth: '8px',\n          showTagHeight: '8px'\n        }\n      }))\n    } else {\n      return []\n    }\n  }, [currentPosBaseInfo?.displayTokenA?.symbol, currentPosBaseInfo?.displayTokenB?.symbol])\n  const [currentRangeTab, setCurrentRangeTab] = useState<string>()\n\n  // 初始化当前选中coin标签 Initialize current coin tab\n  useEffect(() => {\n    if (currentPosBaseInfo) {\n      const coinType = currentPosBaseInfo?.displayTokenA?.coin_type\n      setCurrentRangeTab(coinType)\n    }\n  }, [currentPosBaseInfo?.clmmPool])\n\n  // 计算方向 Calculate direction\n  const direct = useMemo(() => {\n    return currentRangeTab === currentPosBaseInfo?.tokenA?.coin_type\n  }, [currentRangeTab, currentPosBaseInfo?.tokenA?.coin_type])\n\n  const [isChangeDirect, setIsChangeDirect] = useState<undefined | boolean>(undefined)\n  // 处理tab反转点击 Handle tab reverse click\n  const onReverseClick = (item?: Tab) => {\n    setIsChangeDirect(isChangeDirect == undefined ? false : !isChangeDirect)\n    if (item && item?.coin_type) {\n      setCurrentRangeTab(item?.coin_type)\n    } else {\n      setCurrentRangeTab(rangeTabList?.find(tab => tab.key !== currentRangeTab)?.key)\n    }\n  }\n  // 计算价格显示文本 Calculate price display text\n  const perText = useMemo(() => {\n    if (!currentPosBaseInfo?.tokenA || !currentPosBaseInfo?.tokenB) return ''\n    return direct\n      ? `${textEllipses(currentPosBaseInfo?.tokenB?.symbol, 10)} per ${textEllipses(currentPosBaseInfo?.tokenA?.symbol, 10)}`\n      : `${textEllipses(currentPosBaseInfo?.tokenA?.symbol, 10)} per ${textEllipses(currentPosBaseInfo?.tokenB?.symbol, 10)}`\n  }, [direct, currentPosBaseInfo?.tokenA as Token, currentPosBaseInfo?.tokenB as Token])\n\n  const [tab, setTab] = useState({ type: '30D', key: 'month' })\n  const [minPriceForDate, setMinPriceForDate] = useState('')\n  const [maxPriceForDate, setMaxPriceForDate] = useState('')\n  useEffect(() => {\n    let _min = ''\n    let _max = ''\n    if (isAvailableObject(poolRangeObj) && isAvailableObject(currentPosBaseInfo) && isAvailableObject(tab)) {\n      const rangArr = poolRangeObj[currentPosBaseInfo?.clmmPool as string]?.ranges\n      console.log('🚀🚀🚀 ~ PositionChartInfo.tsx:94 ~ useEffect ~ rangArr:', rangArr)\n      if (!rangArr) return\n      const rangesWithDateTypeMap = Object.fromEntries(\n        rangArr?.map((item: any) => [\n          item?.dateType,\n          [\n            TickMath.tickIndexToPrice(\n              item?.lower,\n              currentPosBaseInfo?.tokenA!.decimals as number,\n              currentPosBaseInfo?.tokenB!.decimals as number\n            ).toString(),\n            TickMath.tickIndexToPrice(\n              item?.upper,\n              currentPosBaseInfo?.tokenA!.decimals as number,\n              currentPosBaseInfo?.tokenB!.decimals as number\n            ).toString()\n          ]\n        ])\n      )\n      const lowest = (rangesWithDateTypeMap as any)[tab?.key]?.[0]\n      const lowValue = direct ? lowest : d(1).div(lowest).toString()\n      const highest = (rangesWithDateTypeMap as any)[tab?.key]?.[1]\n      const highValue = direct ? highest : d(1).div(highest).toString()\n      _min = formatPrice(lowValue, 6)\n      _max = formatPrice(highValue, 6)\n    } else {\n      _min = '-'\n      _max = '-'\n    }\n    setMinPriceForDate(_min)\n    setMaxPriceForDate(_max)\n  }, [direct, tab.key, poolRangeObj, currentPosBaseInfo])\n\n  const ranges = useMemo(() => {\n    if (isAvailableObject(currentPosPoolsRelatedData) && isAvailableObject(posPoolInfo) && isAvailableObject(poolRangeObj)) {\n      const currentRangeObj = poolRangeObj[currentPosBaseInfo?.clmmPool as string]\n      if (currentRangeObj) {\n        const ranges = currentRangeObj?.ranges.reduce((acc: any, item: any) => {\n          acc[item.dateType] = item\n          return acc\n        }, {})\n        return ranges\n      }\n    }\n  }, [currentPosPoolsRelatedData, posPoolInfo, currentPosBaseInfo, tab?.key, poolRangeObj])\n  // const isActive = currentPosPoolsRelatedData?.currentStatus == 'Active'\n  const { getPosIsActive } = usePosHelper()\n  const isActive = useMemo(() => {\n    return getPosIsActive(currentPosBaseInfo as PosBaseInfo, posPoolsOriginalData?.[currentPosBaseInfo?.clmmPool || '']?.current_sqrt_price)\n  }, [currentPosBaseInfo, posPoolsOriginalData])\n\n  const { getTokenAmountValue } = useTokenPrice()\n  const currentPosLiquidity = posLiquidityData[currentPosBaseInfo?.posId as string]\n  const amountValueA = getTokenAmountValue(currentPosBaseInfo?.displayTokenA?.coin_type, currentPosLiquidity?.displayCoinAmountA)\n  const amountValueB = getTokenAmountValue(currentPosBaseInfo?.displayTokenB?.coin_type, currentPosLiquidity?.displayCoinAmountB)\n  const currentPosTvl = useMemo(() => {\n    return d(amountValueA).plus(amountValueB).toString()\n  }, [amountValueA, amountValueB])\n\n  return (\n    <VStack w=\"100%\" align=\"flex-start\" p={{ base: '12px 8px', lg: '20px' }} bg=\"bg_secondary\" borderRadius=\"16px\">\n      <HStack w=\"100%\" justify=\"space-between\">\n        <Text color=\"text_caption\" fontSize=\"16px\">\n          Price range\n        </Text>\n        {rangeTabList?.length > 0 && (\n          <SelectTab<any, any>\n            type=\"outlineTab\"\n            tabList={rangeTabList}\n            currentTab={currentRangeTab}\n            handleChangeTab={tab => onReverseClick(tab)}\n            wrapStyle={{\n              h: '32px',\n              p: '3px',\n              border: '1px solid',\n              borderColor: 'border',\n              borderRadius: '8px',\n              gap: '4px',\n              zIndex: '99'\n            }}\n            itemStyle={{\n              h: '24px',\n              p: '4px 8px',\n              borderRadius: '4px',\n              gap: '4px'\n            }}\n          />\n        )}\n      </HStack>\n      <HStack\n        gap={{ base: '20px', lg: '40px' }}\n        w=\"100%\"\n        align=\"flex-end\"\n        justify=\"space-between\"\n        p=\"8px 0\"\n        flexDirection={{ base: 'column', lg: 'row' }}\n      >\n        <VStack w={{ base: '100%', lg: 'unset' }} align=\"center\" justify=\"center\" pb=\"2px\">\n          <ChartBlock direct={direct} minPriceForDate={minPriceForDate} maxPriceForDate={maxPriceForDate} />\n          <HStack>\n            <Center borderRadius=\"4px\" border=\"1px solid\" borderColor=\"border\" w=\"20px\" h=\"20px\" color=\"text_caption\">\n              <Divider w=\"14px\" border=\"1px dashed\" />\n            </Center>\n            <Text color=\"primary_gray\" fontSize=\"12px\">\n              {tab?.type} Price Range\n            </Text>\n          </HStack>\n          <Text color=\"text_caption\" textAlign=\"center\" fontSize=\"12px\" lineHeight=\"12px\">\n            {direct ? minPriceForDate : maxPriceForDate}&nbsp;-&nbsp;\n            {direct ? maxPriceForDate : minPriceForDate}\n          </Text>\n        </VStack>\n        <VStack w={{ base: '100%', lg: 'calc(100% - 220px)' }} gap={{ base: '16px', lg: '20px' }}>\n          <HStack mt=\"8px\" align={{ base: 'center', lg: 'flex-start' }}>\n            <Text color=\"primary_gray\">Current Price</Text>\n            <PositionCurrentPrice\n              posId={currentPosBaseInfo?.posId || ''}\n              displayTokenA={currentPosBaseInfo?.displayTokenA}\n              displayTokenB={currentPosBaseInfo?.displayTokenB}\n              isChangeDirect={isChangeDirect}\n              handleDirect={onReverseClick}\n              haveChangeIcon={false}\n            />\n          </HStack>\n          <HStack w=\"100%\" bg=\"card_bg\" borderRadius=\"12px\" p=\"16px 20px\" justify=\"space-between\">\n            <VStack w=\"50%\">\n              <Text color=\"primary_gray\" fontSize=\"12px\">\n                Min Price\n              </Text>\n              <Skeleton isLoaded={!!currentPosPoolsRelatedData?.minPrice && !!currentPosPoolsRelatedData?.minPriceResever}>\n                <Text color=\"text_caption\" whiteSpace=\"nowrap\">\n                  {isChangeDirect || isChangeDirect == undefined\n                    ? `${currentPosPoolsRelatedData?.minPrice} `\n                    : `${currentPosPoolsRelatedData?.minPriceResever}`}\n                </Text>\n              </Skeleton>\n              <Text color=\"primary_gray\" fontSize=\"12px\">\n                {perText}\n              </Text>\n            </VStack>\n            <VStack w=\"50%\">\n              <Text color=\"primary_gray\" fontSize=\"12px\">\n                Max Price\n              </Text>\n              <Skeleton isLoaded={!!currentPosPoolsRelatedData?.maxPrice && !!currentPosPoolsRelatedData?.maxPriceResever}>\n                <Text color=\"text_caption\" whiteSpace=\"nowrap\">\n                  {isChangeDirect || isChangeDirect == undefined\n                    ? ` ${currentPosPoolsRelatedData?.maxPrice}`\n                    : `${currentPosPoolsRelatedData?.maxPriceResever}`}\n                </Text>\n              </Skeleton>\n              <Text color=\"primary_gray\" fontSize=\"12px\">\n                {perText}\n              </Text>\n            </VStack>\n          </HStack>\n          <HStack w=\"100%\" flexDirection={{ base: 'column', lg: 'row' }} justify=\"space-between\">\n            {/* {showNewVersionApr && (\n              <EstimatedApr\n                tab={tab}\n                showFarmingApr={false}\n                setTab={setTab}\n                ranges={ranges}\n                currentPosPoolsRelatedData={currentPosPoolsRelatedData}\n                posPoolInfo={posPoolInfo}\n                isActive={isActive}\n                flexDirection=\"row\"\n                isFarms={currentPosBaseInfo?.posType == 'farms'}\n                currentPosTvl={currentPosTvl}\n                isPosition={true}\n              />\n            )} */}\n            {showNewVersionApr && (\n              <WithTooltipInfo\n                label=\"APR\"\n                tooltip=\"APR based on the daily yield accrued by this position. Past performance is not indicative of future results. Calculations are an estimate and only for reference.\"\n                wrapStyle={{\n                  flexDir: { base: 'row', lg: 'column' },\n                  align: { base: 'center', lg: 'flex-start' },\n                  width: { base: '100%', lg: 'unset' },\n                  gap: '2px'\n                }}\n              >\n                <Skeleton isLoaded={!!currentPosPoolsRelatedData} h=\"14px\">\n                  <Text color=\"primary\">{positionApr ?? '--'}</Text>\n                </Skeleton>\n              </WithTooltipInfo>\n            )}\n\n            <WithTooltipInfo\n              label=\"Leverage\"\n              tooltip=\"This parameter indicates the concentration rate of your liquidity relative to a full range position.\"\n              wrapStyle={\n                showNewVersionApr\n                  ? {\n                      flexDir: { base: 'row', lg: 'column' },\n                      align: { base: 'center', lg: 'flex-end' },\n                      width: { base: '100%', lg: 'unset' },\n                      gap: '2px'\n                    }\n                  : {\n                      flexDir: { base: 'row', lg: 'column' },\n                      align: { base: 'center', lg: 'center' },\n                      justify: { base: 'space-between', lg: 'center' },\n                      mt: '-4px',\n                      width: { base: '100%', lg: '100%' },\n                      gap: '8px'\n                    }\n              }\n            >\n              <Skeleton isLoaded={!!leverage && !!currentPosPoolsRelatedData}>\n                <Text color=\"primary\">{leverage}</Text>\n              </Skeleton>\n            </WithTooltipInfo>\n          </HStack>\n        </VStack>\n      </HStack>\n    </VStack>\n  )\n}\nexport default PositionChartInfo\n","import Slippage from '@/components/common/Slippage'\nimport DetailHeaderInfo from '@/components/position/clmm/details/DetailHeaderInfo'\nimport { DetailStatsInfo } from '@/components/position/clmm/details/DetailStatsInfo'\nimport IncreaseBlock from '@/components/position/clmm/details/IncreaseBlock'\nimport PositionChartInfo from '@/components/position/clmm/details/PositionChartInfo'\nimport RemoveBlock from '@/components/position/clmm/details/RemoveBlock'\nimport useGetPoolList from '@/hooks/pool/useGetPoolList'\nimport useCurrentPos from '@/hooks/position/useCurrentPos'\nimport useGetClmmPositionDailyEarning from '@/hooks/position/useGetClmmPositionDailyEarning'\nimport useGetPosLiquiditys from '@/hooks/position/useGetPosLiquiditys'\nimport useGetPosPools from '@/hooks/position/useGetPosPools'\nimport useGlobalStore from '@/store/common/global'\nimport usePositionStore from '@/store/position'\nimport usePositionDetailStore from '@/store/position/detail'\nimport useSwapWidgetStore from '@/store/swap-widget/swapWidget'\nimport { PosBaseInfo } from '@/types'\nimport { SelectTab } from '@cetus/design'\nimport { useAccountBalance, useRpcListener } from '@cetus/hooks'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { useAccountStore } from '@cetus/stores'\nimport envConfigs from '@cetus/types/src/config/envConfigs'\nimport { BackButton, RefreshButton } from '@cetus/ui-kit'\nimport { d, isAvailableObject } from '@cetus/utils'\nimport { Button, HStack, VStack } from '@chakra-ui/react'\nimport { useEffect, useMemo, useState } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\n\nfunction PositionDetail() {\n  const navigate = useNavigate()\n  const { fetchAccountBalance } = useAccountBalance()\n  const { currentAccount } = useAccountStore()\n  const { position_nft_id, posTab } = useParams()\n  const { getCurrentPosBaseInfo, getCurrentPosHistory, getCurrentPosByPosId, getPoolLiquiditySnapshot } = useCurrentPos()\n  const {\n    curPosContractPoolInfo,\n    currentPosDetailTab,\n    currentPosPoolInfo,\n    setCurrentPosDetailTab,\n    setCurrentPosPoolInfo,\n    setCurrentPoolSqrtPrice,\n    setCurPosContractPoolInfo,\n    setIsPosDetailRefresh,\n    setUseZapIn\n  } = usePositionDetailStore()\n  const { posPoolsRelatedData, currentPosBaseInfo, setCurrentPosBaseInfo, farmsPosRewardsData, posRewardsData, posLiquidityData } = usePositionStore()\n  const feeDisplay = (posPoolsRelatedData[currentPosBaseInfo?.posId as string]?.displayFee || '--') + '%'\n  const tabList = [\n    {\n      label: 'Increase',\n      value: 'increase'\n    },\n    {\n      label: 'Remove',\n      value: 'remove'\n    }\n  ]\n\n  const getPosData = (isForceRefresh: boolean = false) => {\n    if (currentAccount?.address && position_nft_id) {\n      getCurrentPosBaseInfo(currentAccount?.address, position_nft_id, isForceRefresh)\n    }\n  }\n  useEffect(() => {\n    console.log('🚀 ~ PositionDetail ~ position_nft_id:', position_nft_id)\n    getPosData()\n  }, [currentAccount?.address, position_nft_id])\n\n  const getHistory = async (id: string, posId: string) => {\n    if (id) {\n      await getCurrentPosHistory(id, posId)\n    }\n  }\n  useEffect(() => {\n    console.log('🚀 ~ PositionHistory ~ currentPosBaseInfo?.id:', currentPosBaseInfo?.id)\n    // getHistory(currentPosBaseInfo?.id as string, currentPosBaseInfo?.posId as string)\n  }, [currentPosBaseInfo?.id])\n\n  const { fetchTokenPrices } = useTokenPrice()\n\n  // 刷新页面时重新查token价格\n  const posFarmsData = farmsPosRewardsData[currentPosBaseInfo?.id as string]\n  const currentPosRewardsData = posRewardsData[currentPosBaseInfo?.posId as string]\n  const getTokensPrice = () => {\n    const coinAddresses = currentPosRewardsData?.map((item: any) => item?.coin_address) || []\n    const rewarderTypes = posFarmsData?.map((item: any) => item?.rewarder_type) || []\n    const additionalTokens = [currentPosBaseInfo?.tokenA?.coin_type, currentPosBaseInfo?.tokenB?.coin_type].filter(Boolean)\n    const uniqueTokens = Array.from(new Set([...coinAddresses, ...additionalTokens, ...rewarderTypes]))\n    fetchTokenPrices(uniqueTokens)\n  }\n  useEffect(() => {\n    getTokensPrice()\n  }, [currentPosBaseInfo?.posId, currentPosRewardsData?.length, posFarmsData?.length])\n\n  // 接口查询池子信息 FarmsBlock展示apr 以及添加和移除时的奖励coin_types\n  const { getPoolList } = useGetPoolList()\n  const getPosPoolPoolData = async () => {\n    if (!currentPosBaseInfo?.clmmPool) return\n    const poolDataList: any = await getPoolList({ pool: currentPosBaseInfo?.clmmPool, display_all_pools: true })\n    console.log('🚀 ~ getPoolData ~ poolInfo:', currentPosBaseInfo, poolDataList)\n    if (poolDataList) {\n      return setCurrentPosPoolInfo(poolDataList?.list[0])\n    }\n  }\n\n  // 20s轮询current_sqrt_price 防止提交交易时报错\n  // const { getContractPoolInfo } = useGetContractPoolInfo()\n  const { getPosPoolsOriginalObj, getPosPoolsRelatedData } = useGetPosPools()\n  const { getPosLiquidityData } = useGetPosLiquiditys()\n\n  const handleGetPrice = async () => {\n    if (currentPosBaseInfo?.clmmPool) {\n      const posInfo: any = await getCurrentPosByPosId(currentAccount?.address, position_nft_id as string)\n      if (isAvailableObject(posInfo) && posInfo) {\n        const contractPoolInfo = await getPosPoolsOriginalObj([posInfo as PosBaseInfo])\n        if (isAvailableObject(contractPoolInfo)) {\n          console.log('🚀 ~ handleGetPrice ~ contractPoolInfo:', posInfo, contractPoolInfo)\n          // const contractPoolInfo = await getContractPoolInfo(currentPosBaseInfo?.clmmPool)\n          getPosPoolsRelatedData([posInfo], contractPoolInfo)\n          const info = contractPoolInfo[posInfo?.clmmPool]\n\n          console.log('🚀 ~ handleGetPrice ~ [currentPosBaseInfo?.clmmPool]:', info, curPosContractPoolInfo)\n          if (info?.current_sqrt_price !== curPosContractPoolInfo?.current_sqrt_price) {\n            getPosLiquidityData([posInfo], contractPoolInfo)\n          }\n          setCurrentPoolSqrtPrice(info?.current_sqrt_price)\n          setCurPosContractPoolInfo(info)\n        }\n      }\n    }\n  }\n\n  const { setFromCoin, setToCoin, fromCoin, toCoin } = useSwapWidgetStore()\n  useEffect(() => {\n    getPosPoolPoolData()\n    handleGetPrice()\n    let priceInterval: any\n    if (currentPosBaseInfo?.clmmPool) {\n      priceInterval = setInterval(() => {\n        handleGetPrice()\n      }, 20000)\n    }\n    /**\n     * 切换小组件token与当前池子相同\n     */\n    if (currentPosBaseInfo?.displayTokenA && currentPosBaseInfo?.displayTokenB) {\n      setFromCoin(currentPosBaseInfo?.displayTokenA)\n      setToCoin(currentPosBaseInfo?.displayTokenB)\n    }\n    console.log('🚀🚀🚀 ~ PositionDetail.tsx:159 ~ useEffect ~ currentPosBaseInfo:', currentPosBaseInfo)\n\n    return () => {\n      clearInterval(priceInterval) // 清除 priceInterval\n      setFromCoin(envConfigs.clmm_swap.from_coin)\n      setToCoin(envConfigs.clmm_swap.to_coin)\n    }\n  }, [currentPosBaseInfo?.clmmPool])\n\n  useEffect(() => {\n    if (!posTab || posTab == 'increase') {\n      setCurrentPosDetailTab('increase')\n    }\n    if (currentAccount?.address) {\n      fetchAccountBalance()\n    }\n    return () => {\n      setCurPosContractPoolInfo(null)\n      setCurrentPosBaseInfo(null)\n      setCurrentPosPoolInfo(null)\n      setUseZapIn(false)\n    }\n  }, [])\n\n  const currentPosPoolsRelatedData = useMemo(() => {\n    return posPoolsRelatedData[currentPosBaseInfo?.posId]\n  }, [posPoolsRelatedData, currentPosBaseInfo?.posId])\n\n  const isActive = useMemo(() => {\n    return currentPosPoolsRelatedData?.currentStatus == 'Active'\n  }, [currentPosPoolsRelatedData])\n\n  const isInActive = useMemo(() => {\n    return currentPosPoolsRelatedData?.currentStatus == 'Inactive'\n  }, [currentPosPoolsRelatedData])\n\n  const hasStatus = useMemo(() => {\n    return currentPosPoolsRelatedData?.currentStatus !== undefined\n  }, [currentPosPoolsRelatedData])\n  // 仓位已经单边应该取消zap模式\n  useEffect(() => {\n    if (!isActive) {\n      setUseZapIn(false)\n    }\n  }, [isActive])\n\n  useRpcListener({\n    onRpcChange: () => {\n      getPosData(true)\n      handleGetPrice()\n      if (currentAccount?.address) {\n        fetchAccountBalance()\n      }\n    }\n  })\n  const { isApp } = useWindowWidth()\n\n  const handleConsoleSnapLog = () => {\n    if (currentPosBaseInfo?.posId) {\n      getPoolLiquiditySnapshot(currentPosBaseInfo)\n    }\n  }\n  const { setBackUrl } = useGlobalStore()\n\n  const handleBack = () => {\n    if (window.history.length > 1) {\n      navigate(-1)\n    } else {\n      navigate('/pools?tab=positions')\n    }\n  }\n\n  const { getTokenAmountValue } = useTokenPrice()\n  const currentPosLiquidity = posLiquidityData[currentPosBaseInfo?.posId as string]\n  const amountValueA = getTokenAmountValue(currentPosBaseInfo?.displayTokenA?.coin_type, currentPosLiquidity?.displayCoinAmountA)\n  const amountValueB = getTokenAmountValue(currentPosBaseInfo?.displayTokenB?.coin_type, currentPosLiquidity?.displayCoinAmountB)\n  const currentPosTvl = useMemo(() => {\n    return d(amountValueA).plus(amountValueB).toString()\n  }, [amountValueA, amountValueB])\n\n  const [positionApr, setPositionApr] = useState<any>(null)\n  const [dailyEarnUSDDisplay, setDailyEarnUSDDisplay] = useState<any>(null)\n  const [originResult, setOriginResult] = useState<any>(null)\n  const { getClmmPositionDailyEarning } = useGetClmmPositionDailyEarning()\n  const [getDailyEarning, setGetDailyEarning] = useState(true)\n  const handleGetPositionApr = async () => {\n    setGetDailyEarning(true)\n    try {\n      const res = await getClmmPositionDailyEarning(currentPosBaseInfo?.posId, currentPosTvl)\n      if (res) {\n        const { aprDisplay, dailyEarnUSDDisplay, originResult } = res\n        console.log('🚀🚀🚀 ~ PositionChartInfo.tsx:155 ~ handleGetPositionApr ~ originResult:', originResult)\n        setPositionApr(aprDisplay)\n        setDailyEarnUSDDisplay(dailyEarnUSDDisplay)\n        setOriginResult(originResult)\n      }\n      setGetDailyEarning(false)\n    } catch (error) {\n      setGetDailyEarning(false)\n    }\n  }\n\n  useEffect(() => {\n    if (currentPosBaseInfo?.posId) {\n      if (d(currentPosTvl).gt(0)) {\n        handleGetPositionApr()\n      } else {\n        setGetDailyEarning(false)\n      }\n    }\n  }, [currentPosBaseInfo?.posId, currentPosTvl])\n\n  // useInterval({\n  //   interval: 5 * 1000,\n  //   callback: () => {\n  //     handleGetPositionApr()\n  //   }\n  // })\n\n  const handleRefresh = () => {\n    console.log('🚀 ~ handleRefresh ~ handleRefresh:')\n    setIsPosDetailRefresh(true)\n    getPosData(true)\n    getPosPoolPoolData()\n    getTokensPrice()\n    fetchAccountBalance()\n    handleGetPrice()\n    handleGetPositionApr()\n    setTimeout(() => {\n      setIsPosDetailRefresh(false)\n    }, 1000)\n    // getHistory(currentPosBaseInfo?.id as string, currentPosBaseInfo?.posId as string)\n  }\n\n  return (\n    <VStack gap=\"12px\" w=\"100%\" pt=\"20px\" align=\"flex-start\">\n      <HStack w=\"100%\" justifyContent=\"space-between\" flexDirection={{ base: 'column-reverse', lg: 'row' }}>\n        <HStack w={{ base: '100%', lg: 'unset' }} justifyContent=\"space-between\">\n          <BackButton\n            onClick={() => {\n              handleBack()\n            }}\n          />\n          {/* toDo: 后面删除掉 */}\n          {envConfigs?.env === 'testnet' && !!currentPosBaseInfo?.vestData && (\n            <Button h=\"32px\" borderRadius=\"8px\" onClick={handleConsoleSnapLog}>\n              Print snapshot\n            </Button>\n          )}\n          {isApp && (\n            <HStack>\n              <SlippageRefreshMEV />\n              <RefreshButton handleRefresh={handleRefresh} isAutoRefresh refreshInterval={5} w=\"28px\" h=\"28px\" innerStyle={{ bg: 'none' }} />\n            </HStack>\n          )}\n        </HStack>\n        <HStack w={{ base: '100%', lg: 'unset' }}>\n          {!currentPosBaseInfo?.isFrozen ? (\n            <Button\n              w={{ base: '100%', lg: 'unset' }}\n              bg=\"bg_secondary\"\n              fontSize=\"14px\"\n              p=\"0 16px\"\n              h=\"32px\"\n              borderRadius=\"8px\"\n              fontWeight=\"500\"\n              variant=\"outline\"\n              onClick={e => {\n                setBackUrl(`/position-detail/${currentPosBaseInfo?.id}`)\n                navigate(`/clmm?poolAddress=${currentPosBaseInfo?.clmmPool}`)\n              }}\n            >\n              Create a new position\n            </Button>\n          ) : null}\n\n          {!isApp && (\n            <RefreshButton handleRefresh={handleRefresh} isAutoRefresh refreshInterval={5} w=\"32px\" h=\"32px\" innerStyle={{ bg: 'bg_secondary' }} />\n          )}\n        </HStack>\n      </HStack>\n      <DetailHeaderInfo />\n      <HStack w=\"100%\" align=\"flex-start\" gap={{ base: '12px', lg: '16px' }} flexDirection={{ base: 'column-reverse', lg: 'row' }}>\n        <VStack w={{ base: '100%', lg: '60%' }} gap={{ base: '12px', lg: '16px' }} key={`${currentPosBaseInfo?.posId}-posInfo`}>\n          <PositionChartInfo positionApr={isInActive ? '0%' : hasStatus ? positionApr : null} isAprLoading={getDailyEarning} />\n          <DetailStatsInfo dailyEarnUSDDisplay={isInActive ? '$0' : hasStatus ? dailyEarnUSDDisplay : null} originResult={originResult} />\n          {/* <PositionHistory /> */}\n        </VStack>\n        <VStack w={{ base: '100%', lg: '40%' }} gap=\"0\">\n          <HStack w=\"100%\" p=\"0 16px 12px\" bg=\"card_bg\" borderRadius=\"16px 16px 0 0 \">\n            <SelectTab\n              type=\"borderTab\"\n              bg=\"none\"\n              wrapStyle={{\n                w: '100%',\n                h: '60px',\n                border: 'none',\n                bg: 'none'\n              }}\n              itemStyle={{\n                w: { base: '50%', lg: 'unset' },\n                fontSize: '16px',\n                mr: '28px'\n              }}\n              tabList={tabList}\n              currentTab={currentPosDetailTab == 'increase' ? 'Increase' : 'Remove'}\n              handleChangeTab={(item: any) => {\n                setCurrentPosDetailTab(item?.value)\n              }}\n            />\n            {!isApp && <SlippageRefreshMEV />}\n          </HStack>\n          {currentPosDetailTab == 'increase' && <IncreaseBlock />}\n          {currentPosDetailTab == 'remove' && <RemoveBlock />}\n        </VStack>\n      </HStack>\n    </VStack>\n  )\n}\nconst SlippageRefreshMEV = () => {\n  return (\n    <HStack>\n      <Slippage slippageType=\"liquidity\" poolType=\"clmm\" />\n      {/* <MEVProtect /> */}\n    </HStack>\n  )\n}\nexport default PositionDetail\n"],"names":["DetailHeaderInfo","currentPosBaseInfo","posPoolsRelatedData","posPoolsOriginalData","usePositionStore","currentPosPoolInfo","curPosContractPoolInfo","usePositionDetailStore","currentPosPoolsRelatedData","getClmmPosName","getTokenALock","getTokenBLock","usePosHelper","tokenName","useMemo","position_index","_a","displayFee","showTokenALock","showTokenBLock","isActive","getExplorerUrl","useExplorer","navigate","useNavigate","setBackUrl","useGlobalStore","isApp","useWindowWidth","totalTvl","tvlLoading","useGetTvlInfo","HStack","jsxs","VStack","jsx","Box","e","CoinPairInfo","Text","AddressCopyLink","StatusPosition","isAvailableObject","Skeleton","StatsInfo","AprTooltip","symbolDataDisplayProcessing","usePosAddPage","posRewardsData","posLiquidityData","currentPosRewardsData","getTokenAmountValue","useTokenPrice","transactionConfirmation","useTransactionModal","preAdd","getAddTsPayload","getClmmCreateAddData","getFarmsCreateAddData","usePosAdd","getCurrentPosBaseInfo","useCurrentPos","setTokenAmountAfterA","setTokenAmountAfterB","currentPoolSqrtPrice","isFixedDisplayTokenA","setIsFixedDisplayTokenA","currentPosDetailTab","isPosDetailRefresh","useZapIn","isAutoClaim","getZapDepositToastInfo","getZapDepositTx","reCalculateZapData","useZapSubmit","preDepositeData","setZapAmount","setPreDepositeData","useZapStore","preAddLoading","setPreAddLoading","useState","tokenMaxA","setTokenMaxA","tokenMaxB","setTokenMaxB","tokenAmountA","setTokenAmountA","tokenAmountB","setTokenAmountB","currentPosLiquidityData","tokenABalance","formatNumberWithDown","tokenBBalance","useEffect","amountA","amountB","d","displayTokenA","displayTokenB","mevProtect","maxCapForGas","transactionMode","customGasPrice","slippage","zapSlippage","tokenABalanceInfo","useGetTokenBalance","tokenBBalanceInfo","tokenAmountValueA","tokenAmountValueB","uuid","setUuid","uuidRef","useRef","resetInputAmount","showDisplayTokenALock","showDisplayTokenBLock","debouncedPreAdd","useDebounceFunction","amount","is_fixed_displaytokenA","decimals","_b","amountBN","amountToBN","tokenA","tokenB","lowerTick","upperTick","isReverse","params","displayCoinAmountA","displayCoinAmountB","reCalculateResult","v4","handleAmountChange","currentAccount","useAccountStore","btnStatusText","btnInfo","textEllipses","signAndExecuteTransaction","useTransaction","getContractPoolInfo","useGetContractPoolInfo","isAddLoading","setIsAddLoading","fetchAccountBalance","useAccountBalance","showInsufficientBalanceToast","useInsufficientBalanceToast","toAdd","amount_a","amount_b","tx","msafeParams","toastInfo","rewarderCoinTypes","arr","item","inputAmount","tokenDecimals","Decimal","fixAmountA","currentTickIndex","status","balanceChanges","description","formatDescription","info","amountAF","amountBF","getBalanceChanges","addPayload","trackData","res","error","bnToAmount","IncreaseBlock","posApiPoolData","onWalletModal","setIsAutoClaim","amountValueA","amountValueB","totalAmount","currentApiPoolInfo","useCurrentApiPool","TradeTitle","ZapDeposite","Fragment","TradeInputGroup","value","AutoClaimCheckBox","ZapSubmiteInfo","Button","formatCurrency","FarmsBlock","ChartBlock","direct","minPriceForDate","maxPriceForDate","setContractPoolInfo","setApiPoolInfo","useLiquidityStore","lowerTickData","upperTickData","setLowerTickData","setUpperTickData","usePriceRangeStore","useDeepCompareEffect","handleSetTickData","tick","type","poolApiInfo","decimalsA","decimalsB","price","TickUtil","TickMath","displayPrice","reversePrice","getReversePrice","displayReversePrice","data","getCurrentPrice","useGetCurrentPrice","canDisplay","contractPoolInfo","apiPoolInfo","getFormattedData","useGetTicksChartData","LiquidityRangeChart","Flex","Image","NoChartDataImg","PositionChartInfo","positionApr","isAprLoading","poolRangeObj","posPoolInfo","leverage","minPrice","maxPrice","formatNumber","rangeTabList","currentRangeTab","setCurrentRangeTab","coinType","_c","isChangeDirect","setIsChangeDirect","onReverseClick","tab","perText","_d","setTab","setMinPriceForDate","setMaxPriceForDate","_min","_max","rangArr","rangesWithDateTypeMap","lowest","lowValue","highest","highValue","formatPrice","currentRangeObj","acc","getPosIsActive","currentPosLiquidity","_e","SelectTab","Center","Divider","PositionCurrentPrice","WithTooltipInfo","PositionDetail","position_nft_id","posTab","useParams","getCurrentPosByPosId","getPoolLiquiditySnapshot","setCurrentPosDetailTab","setCurrentPosPoolInfo","setCurrentPoolSqrtPrice","setCurPosContractPoolInfo","setIsPosDetailRefresh","setUseZapIn","setCurrentPosBaseInfo","farmsPosRewardsData","tabList","getPosData","isForceRefresh","fetchTokenPrices","posFarmsData","getTokensPrice","coinAddresses","rewarderTypes","additionalTokens","uniqueTokens","getPoolList","useGetPoolList","getPosPoolPoolData","poolDataList","getPosPoolsOriginalObj","getPosPoolsRelatedData","useGetPosPools","getPosLiquidityData","useGetPosLiquiditys","handleGetPrice","posInfo","setFromCoin","setToCoin","fromCoin","toCoin","useSwapWidgetStore","priceInterval","envConfigs","isInActive","hasStatus","useRpcListener","handleConsoleSnapLog","handleBack","currentPosTvl","setPositionApr","dailyEarnUSDDisplay","setDailyEarnUSDDisplay","originResult","setOriginResult","getClmmPositionDailyEarning","useGetClmmPositionDailyEarning","getDailyEarning","setGetDailyEarning","handleGetPositionApr","aprDisplay","handleRefresh","BackButton","SlippageRefreshMEV","RefreshButton","DetailStatsInfo","RemoveBlock","Slippage"],"mappings":"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"}