{"version":3,"file":"useNotifiSubscription-Cfyz7d-D.js","sources":["../../../cetus-design/src/hook/useNotifi/useNotifiHelper.ts","../../src/hooks/notifi/useNotifiSubscription.ts"],"sourcesContent":["import useNotifiStore from '@cetus/stores/src/notifi'\nimport { d } from '@cetus/utils'\nimport { useGetOwnerVeNFT } from '../../../../web/src/hooks/xcetus/useXCetusHelper'\nimport { useGlobalToast } from '../../hooks'\n\nexport function useNotifiHelper() {\n  const { fetchOwnerVeNFT } = useGetOwnerVeNFT()\n  const { showCommonToast } = useGlobalToast()\n  const { notifiSources } = useNotifiStore()\n\n  const { setNotifiSubscriptionLoading } = useNotifiStore()\n\n  // 订阅验证逻辑\n  const createNotifiSubscriptionVerify = async () => {\n    try {\n      const xCetusVenftInfo = await fetchOwnerVeNFT()\n      if (xCetusVenftInfo?.xcetus_balance) {\n        const balance = d(xCetusVenftInfo.xcetus_balance).div(Math.pow(10, 9))\n        if (balance.lessThan(1000)) {\n          showCommonToast('Price alerts are currently open to users who hold 1000+ xCETUS.', 'rejected')\n          return false\n        }\n      } else {\n        showCommonToast('Unable to fetch xCetus information.', 'rejected')\n        return false\n      }\n\n      if (notifiSources.length >= 5) {\n        showCommonToast('Price alerts can only be enabled for up to 5 positions for an account at the same time.', 'rejected')\n        return false\n      }\n\n      return true\n    } catch (error) {\n      console.error('🚀 ~ createNotifiSubscriptionVerify ~ error:', error)\n      setNotifiSubscriptionLoading(false)\n      showCommonToast('An error occurred while verifying the subscription.', 'rejected')\n      return false\n    }\n  }\n\n  // 获取指定位置的通知状态\n  const getPositionNotifiStatus = (posId: string, posIndex: string) => {\n    console.log('🚀🚀🚀 ~ useNotifiHelper.ts:46 ~ getPositionNotifiStatus ~ notifiSources:', notifiSources)\n    try {\n      const currentSource = notifiSources.find(source => {\n        const { pool_address, position_index } = source\n        return pool_address === posId && position_index === posIndex\n      })\n\n      return {\n        isSubscription: Boolean(currentSource),\n        alertID: currentSource?.alertID || ''\n      }\n    } catch (error) {\n      console.error('🚀 ~ getPositionNotifiStatus ~ error:', error)\n      return { isSubscription: false, alertID: '' }\n    }\n  }\n\n  return { createNotifiSubscriptionVerify, getPositionNotifiStatus }\n}\n","import useNotifiAlert from '@cetus/design/src/hook/useNotifi/useNotifiAlerts'\nimport { useNotifiHelper } from '@cetus/design/src/hook/useNotifi/useNotifiHelper'\nimport { useAccountStore } from '@cetus/stores'\nimport useNotifiStore from '@cetus/stores/src/notifi'\nimport useCurrentPos from '../position/useCurrentPos'\n\ntype NotifiSubscriptionParams = {\n  subscriptionSource: string\n  position?: string\n  pool?: string\n  posIndex?: string\n  events?: any\n}\nexport default function useNotifiSubscription() {\n  const { getCurrentPosByPosId } = useCurrentPos()\n  const { currentAccount } = useAccountStore()\n  const { createNotifiAlert, getNotifiAlerts, deleteNotifiAlerts } = useNotifiAlert()\n  const { setIsChecked, setNotifiSubscriptionLoading, notifiClient } = useNotifiStore()\n  const { createNotifiSubscriptionVerify, getPositionNotifiStatus } = useNotifiHelper()\n\n  const notifiSubscription = async (notifiSubscriptionParams: NotifiSubscriptionParams) => {\n    setNotifiSubscriptionLoading(true)\n    const canSubscription = await createNotifiSubscriptionVerify()\n    if (!canSubscription) {\n      setIsChecked(false)\n      return false\n    }\n\n    const { subscriptionSource, position, posIndex, events } = notifiSubscriptionParams\n    console.log('🚀🚀🚀 ~ useNotifiSubscription.ts:30 ~ notifiSubscription ~ notifiSubscriptionParams:', notifiSubscriptionParams)\n    try {\n      if (subscriptionSource == 'PositionDetail') {\n        sendNotifiSubscription(String(position), String(posIndex))\n      } else {\n        const currentEvent = events.filter(event => event.type.indexOf('OpenPositionEvent') > -1)[0]\n        const stakeFarmingEvent = events.filter(event => event.type.indexOf('DepositEvent') > -1)[0]\n        const { position, pool } = currentEvent.parsedJson\n        const posId = stakeFarmingEvent ? stakeFarmingEvent.parsedJson.wrapped_position_id : currentEvent.parsedJson.position\n        const currentPosInfo = await getCurrentPosByPosId(currentAccount?.address, posId)\n        if (currentPosInfo) {\n          console.log('🚀🚀🚀 ~ file: useNotifiSubscription.ts:36 ~ notifiSubscription ~ currentPosInfo.index:', currentPosInfo.index)\n          sendNotifiSubscription(position, String(currentPosInfo.index))\n        }\n      }\n    } catch (error) {\n      setNotifiSubscriptionLoading(false)\n      console.log('🚀🚀🚀 ~ file: useNotifiSubscription.ts:45 ~ notifiSubscription ~ error:', error)\n    }\n  }\n\n  const sendNotifiSubscription = async (position: string, posIndex: string) => {\n    createNotifiAlert(position, posIndex)\n  }\n\n  const notifiUnSubscription = async (posId: string, clmmPool: string, posIndex: string) => {\n    console.log('🚀🚀🚀 ~ useNotifiSubscription.ts:57 ~ notifiUnSubscription ~ posId:', posId)\n    console.log('🚀🚀🚀 ~ useNotifiSubscription.ts:58 ~ notifiUnSubscription ~ posIndex:', posIndex)\n    const { alertID } = getPositionNotifiStatus(posId, String(posIndex))\n    console.log('🚀🚀🚀 ~ useNotifiSubscription.ts:59 ~ notifiUnSubscription ~ alertID:', alertID)\n    if (alertID) {\n      deleteNotifiAlerts(alertID)\n    }\n  }\n\n  const getNotifiPositionTransfer = (posBaseList, notifiClient, notifiSources) => {\n    if (notifiClient && notifiClient.userState && notifiClient.userState.status == 'authenticated') {\n      console.log('🚀🚀🚀 ~ useNotifiSubscription.ts:62 ~ getNotifiPositionTransfer ~ notifiSources:', notifiSources)\n      for (let j = 0; j < notifiSources.length; j++) {\n        const { pool_address, position_index } = notifiSources[j]\n        let flag = false\n        let pos\n        for (let k = 0; k < posBaseList.length; k++) {\n          const { posId, index } = posBaseList[k]\n          if (pool_address == posId && Number(index) == Number(position_index)) {\n            flag = true\n          }\n          pos = {\n            pool_address,\n            position_index,\n            clmmPool: posBaseList[k].clmmPool\n          }\n        }\n\n        if (!flag) {\n          notifiUnSubscription(pos?.pool_address, pos?.clmmPool, pos?.position_index)\n        }\n      }\n    }\n    console.log('🚀🚀🚀 ~ useNotifiSubscription.ts:60 ~ getNotifiPositionTransfer ~ notifiSources:', notifiSources)\n    console.log('🚀🚀🚀 ~ useNotifiSubscription.ts:60 ~ getNotifiPositionTransfer ~ posBaseList:', posBaseList)\n    console.log('🚀🚀🚀 ~ useNotifiSubscription.ts:60 ~ getNotifiPositionTransfer ~ notifiClient:', notifiClient.us)\n  }\n\n  return { notifiSubscription, notifiUnSubscription, getNotifiPositionTransfer }\n}\n"],"names":["useNotifiHelper","fetchOwnerVeNFT","useGetOwnerVeNFT","showCommonToast","useGlobalToast","notifiSources","useNotifiStore","setNotifiSubscriptionLoading","xCetusVenftInfo","d","error","posId","posIndex","currentSource","source","pool_address","position_index","useNotifiSubscription","getCurrentPosByPosId","useCurrentPos","currentAccount","useAccountStore","createNotifiAlert","deleteNotifiAlerts","useNotifiAlert","setIsChecked","notifiClient","createNotifiSubscriptionVerify","getPositionNotifiStatus","notifiSubscription","notifiSubscriptionParams","subscriptionSource","position","events","sendNotifiSubscription","currentEvent","event","stakeFarmingEvent","pool","currentPosInfo","notifiUnSubscription","clmmPool","alertID","posBaseList","j","flag","pos","k","index"],"mappings":"2QAKO,SAASA,GAAkB,CAChC,KAAM,CAAE,gBAAAC,CAAA,EAAoBC,EAAA,EACtB,CAAE,gBAAAC,CAAA,EAAoBC,EAAA,EACtB,CAAE,cAAAC,CAAA,EAAkBC,EAAA,EAEpB,CAAE,6BAAAC,CAAA,EAAiCD,EAAA,EAkDzC,MAAO,CAAE,+BA/C8B,SAAY,CACjD,GAAI,CACF,MAAME,EAAkB,MAAMP,EAAA,EAC9B,GAAIO,GAAA,MAAAA,EAAiB,gBAEnB,GADgBC,EAAED,EAAgB,cAAc,EAAE,IAAI,KAAK,IAAI,GAAI,CAAC,CAAC,EACzD,SAAS,GAAI,EACvB,OAAAL,EAAgB,kEAAmE,UAAU,EACtF,OAGT,QAAAA,EAAgB,sCAAuC,UAAU,EAC1D,GAGT,OAAIE,EAAc,QAAU,GAC1BF,EAAgB,0FAA2F,UAAU,EAC9G,IAGF,EACT,OAASO,EAAO,CACd,eAAQ,MAAM,+CAAgDA,CAAK,EACnEH,EAA6B,EAAK,EAClCJ,EAAgB,sDAAuD,UAAU,EAC1E,EACT,CACF,EAqByC,wBAlBT,CAACQ,EAAeC,IAAqB,CACnE,QAAQ,IAAI,4EAA6EP,CAAa,EACtG,GAAI,CACF,MAAMQ,EAAgBR,EAAc,KAAKS,GAAU,CACjD,KAAM,CAAE,aAAAC,EAAc,eAAAC,CAAA,EAAmBF,EACzC,OAAOC,IAAiBJ,GAASK,IAAmBJ,CACtD,CAAC,EAED,MAAO,CACL,eAAgB,EAAQC,EACxB,SAASA,GAAA,YAAAA,EAAe,UAAW,EAAA,CAEvC,OAASH,EAAO,CACd,eAAQ,MAAM,wCAAyCA,CAAK,EACrD,CAAE,eAAgB,GAAO,QAAS,EAAA,CAC3C,CACF,CAEyC,CAC3C,CChDA,SAAwBO,GAAwB,CAC9C,KAAM,CAAE,qBAAAC,CAAA,EAAyBC,EAAA,EAC3B,CAAE,eAAAC,CAAA,EAAmBC,EAAA,EACrB,CAAE,kBAAAC,EAAoC,mBAAAC,CAAA,EAAuBC,EAAA,EAC7D,CAAE,aAAAC,EAAc,6BAAAlB,EAA8B,aAAAmB,CAAA,EAAiBpB,EAAA,EAC/D,CAAE,+BAAAqB,EAAgC,wBAAAC,CAAA,EAA4B5B,EAAA,EAE9D6B,EAAqB,MAAOC,GAAuD,CAGvF,GAFAvB,EAA6B,EAAI,EAE7B,CADoB,MAAMoB,EAAA,EAE5B,OAAAF,EAAa,EAAK,EACX,GAGT,KAAM,CAAE,mBAAAM,EAAoB,SAAAC,EAAU,SAAApB,EAAU,OAAAqB,GAAWH,EAC3D,QAAQ,IAAI,wFAAyFA,CAAwB,EAC7H,GAAI,CACF,GAAIC,GAAsB,iBACxBG,EAAuB,OAAOF,CAAQ,EAAG,OAAOpB,CAAQ,CAAC,MACpD,CACL,MAAMuB,EAAeF,EAAO,OAAOG,GAASA,EAAM,KAAK,QAAQ,mBAAmB,EAAI,EAAE,EAAE,CAAC,EACrFC,EAAoBJ,EAAO,OAAOG,GAASA,EAAM,KAAK,QAAQ,cAAc,EAAI,EAAE,EAAE,CAAC,EACrF,CAAE,SAAAJ,EAAU,KAAAM,CAAA,EAASH,EAAa,WAClCxB,EAAQ0B,EAAoBA,EAAkB,WAAW,oBAAsBF,EAAa,WAAW,SACvGI,EAAiB,MAAMrB,EAAqBE,GAAA,YAAAA,EAAgB,QAAST,CAAK,EAC5E4B,IACF,QAAQ,IAAI,0FAA2FA,EAAe,KAAK,EAC3HL,EAAuBF,EAAU,OAAOO,EAAe,KAAK,CAAC,EAEjE,CACF,OAAS7B,EAAO,CACdH,EAA6B,EAAK,EAClC,QAAQ,IAAI,2EAA4EG,CAAK,CAC/F,CACF,EAEMwB,EAAyB,MAAOF,EAAkBpB,IAAqB,CAC3EU,EAAkBU,EAAUpB,CAAQ,CACtC,EAEM4B,EAAuB,MAAO7B,EAAe8B,EAAkB7B,IAAqB,CACxF,QAAQ,IAAI,uEAAwED,CAAK,EACzF,QAAQ,IAAI,0EAA2EC,CAAQ,EAC/F,KAAM,CAAE,QAAA8B,CAAA,EAAYd,EAAwBjB,EAAO,OAAOC,CAAQ,CAAC,EACnE,QAAQ,IAAI,yEAA0E8B,CAAO,EACzFA,GACFnB,EAAmBmB,CAAO,CAE9B,EA+BA,MAAO,CAAE,mBAAAb,EAAoB,qBAAAW,EAAsB,0BA7BjB,CAACG,EAAajB,EAAcrB,IAAkB,CAC9E,GAAIqB,GAAgBA,EAAa,WAAaA,EAAa,UAAU,QAAU,gBAAiB,CAC9F,QAAQ,IAAI,oFAAqFrB,CAAa,EAC9G,QAASuC,EAAI,EAAGA,EAAIvC,EAAc,OAAQuC,IAAK,CAC7C,KAAM,CAAE,aAAA7B,EAAc,eAAAC,GAAmBX,EAAcuC,CAAC,EACxD,IAAIC,EAAO,GACPC,EACJ,QAASC,EAAI,EAAGA,EAAIJ,EAAY,OAAQI,IAAK,CAC3C,KAAM,CAAE,MAAApC,EAAO,MAAAqC,GAAUL,EAAYI,CAAC,EAClChC,GAAgBJ,GAAS,OAAOqC,CAAK,GAAK,OAAOhC,CAAc,IACjE6B,EAAO,IAETC,EAAM,CACJ,aAAA/B,EACA,eAAAC,EACA,SAAU2B,EAAYI,CAAC,EAAE,QAAA,CAE7B,CAEKF,GACHL,EAAqBM,GAAA,YAAAA,EAAK,aAAcA,GAAA,YAAAA,EAAK,SAAUA,GAAA,YAAAA,EAAK,cAAc,CAE9E,CACF,CACA,QAAQ,IAAI,oFAAqFzC,CAAa,EAC9G,QAAQ,IAAI,kFAAmFsC,CAAW,EAC1G,QAAQ,IAAI,mFAAoFjB,EAAa,EAAE,CACjH,CAEmD,CACrD"}