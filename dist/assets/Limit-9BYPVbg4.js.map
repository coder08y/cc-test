{"version":3,"file":"Limit-9BYPVbg4.js","sources":["../../src/components/limit/HistoryTableItem.tsx","../../src/components/limit/HistoryTableList.tsx","../../src/store/limit/useLimitAction.ts","../../src/hooks/common/useGetPairPrice.ts","../../src/hooks/limit/useRefreshCoinMarketPrice.ts","../../src/hooks/limit/useLimitAddAction.ts","../../src/components/limit/ConfirmModal.tsx","../../src/components/limit/CustomExpiryModal.tsx","../../src/components/limit/LimitExpires.tsx","../../src/components/limit/LimitPrice.tsx","../../src/components/limit/LimitAction.tsx","../../src/components/limit/OrderTableItem.tsx","../../src/components/limit/OrderTableList.tsx","../../src/pages/Limit.tsx"],"sourcesContent":["import { LimitOrderInfo } from '@/types/limit'\nimport { Td, Tr } from '@chakra-ui/react'\nimport React, { useState } from 'react'\nimport { CoinInfoBlock } from './OrderItemBlock/CoinInfoBlock'\nimport { ExpiryBlock } from './OrderItemBlock/ExpiryBlock'\nimport { FilledSizeBlock } from './OrderItemBlock/FilledSizeBlock'\nimport { LimitExpendBlock } from './OrderItemBlock/LimitExpendBlock'\nimport { PriceBlock } from './OrderItemBlock/PriceBlock'\nimport { StatusBlock } from './OrderItemBlock/StatusBlock'\n\ntype HistoryTableItemProps = {\n  historyInfo: LimitOrderInfo\n}\n\nexport function HistoryTableItem({ historyInfo }: HistoryTableItemProps) {\n  const [openExpendItemObj, setOpenExpendItemObj] = useState<Record<string, boolean>>({})\n  return (\n    <React.Fragment key={historyInfo?.order_id}>\n      <Tr\n        cursor=\"pointer\"\n        onClick={() => {\n          if (openExpendItemObj[historyInfo?.order_id]) {\n            openExpendItemObj[historyInfo?.order_id] = false\n          } else {\n            openExpendItemObj[historyInfo?.order_id] = true\n          }\n          setOpenExpendItemObj({ ...openExpendItemObj })\n        }}\n        sx={{\n          td: {\n            pb: openExpendItemObj[historyInfo?.order_id] ? '20px !important' : '16px !important'\n          }\n        }}\n      >\n        <Td w=\"30%\">\n          <CoinInfoBlock info={historyInfo} />\n        </Td>\n        <Td w=\"20%\" textAlign=\"right\">\n          <PriceBlock info={historyInfo} />\n        </Td>\n        <Td textAlign=\"right\">\n          <ExpiryBlock info={historyInfo} />\n        </Td>\n        <Td textAlign=\"right\">\n          <FilledSizeBlock info={historyInfo} />\n        </Td>\n\n        <Td textAlign=\"right\">\n          <StatusBlock historyInfo={historyInfo} openExpendItemObj={openExpendItemObj} />\n        </Td>\n      </Tr>\n\n      {!openExpendItemObj[historyInfo?.order_id] && <Tr h=\"16px\" />}\n\n      <Tr\n        position=\"relative\"\n        top=\"-20px\"\n        left=\"0px\"\n        sx={{\n          td: {\n            p: '0 !important',\n            bg: 'transparent !important',\n            border: 'none !important',\n            _first: {\n              borderRadius: ' 16px !important'\n            },\n            _last: {\n              borderRadius: '0 0 16px 0 !important'\n            }\n          },\n          _hover: {\n            bg: 'transparent !important',\n            td: {\n              bg: 'transparent !important'\n            }\n          }\n        }}\n      >\n        {openExpendItemObj[historyInfo?.order_id] && (\n          <Td colSpan={5}>\n            <LimitExpendBlock historyInfo={historyInfo} />\n          </Td>\n        )}\n      </Tr>\n    </React.Fragment>\n  )\n}\n","import { LimitOrderInfo } from '@/types/limit'\nimport { useAccountStore } from '@cetus/stores'\nimport { NoData, Pagination } from '@cetus/ui-kit'\nimport { Center, Table, Tbody, Td, Th, Thead, Tr } from '@chakra-ui/react'\nimport React, { useEffect, useState } from 'react'\nimport { SkipViewPc } from '../farms/FarmsTable'\nimport { HistoryTableItem } from './HistoryTableItem'\n\ntype HistoryTableListProps = {\n  historyOrderList: LimitOrderInfo[]\n  historyOrderLoading: boolean\n}\n\nexport function HistoryTableList(props: HistoryTableListProps) {\n  const { historyOrderList, historyOrderLoading } = props\n  console.log('🚀 ~ HistoryTableList ~ historyOrderList:', historyOrderList)\n  const { currentAccount, onWalletModal } = useAccountStore()\n  const pageSize = 10\n  const [paginationList, setPaginationList] = useState<LimitOrderInfo[]>([])\n  const [total, setTotal] = useState(0)\n  const [currentPage, setCurrentPage] = useState(1)\n  useEffect(() => {\n    if (historyOrderList?.length > 0) {\n      setTotal(historyOrderList?.length)\n      const start = (currentPage - 1) * pageSize\n      const end = start + pageSize\n      setPaginationList(historyOrderList.slice(start, end))\n    }\n  }, [currentPage, historyOrderList])\n  return (\n    <Table variant=\"simple_list\" w=\"100%\" sx={{ td: { h: '66px !important' } }}>\n      <Thead>\n        <Tr>\n          <Th>Order Info</Th>\n          <Th textAlign=\"right\">Limit Price</Th>\n          <Th textAlign=\"right\">Expiry</Th>\n          <Th textAlign=\"right\">Filled Size</Th>\n          <Th textAlign=\"right\">Status</Th>\n        </Tr>\n      </Thead>\n      <Tbody>\n        {!currentAccount?.address ? (\n          <Tr\n            sx={{\n              td: {\n                bg: 'none !important',\n                p: '0 !important',\n                border: 'none !important'\n              }\n            }}\n          >\n            <Td colSpan={5} w=\"100%\">\n              <NoData\n                type=\"nowallet\"\n                onboard={() => {\n                  onWalletModal(true)\n                }}\n              />\n            </Td>\n          </Tr>\n        ) : historyOrderLoading ? (\n          <SkipViewPc itemList={[1, 2, 3]} skeletonNum={5} rowStyle={{ h: '66px' }} />\n        ) : historyOrderList.length === 0 ? (\n          <Tr\n            sx={{\n              td: {\n                bg: 'none !important',\n                p: '0 !important',\n                border: 'none !important'\n              }\n            }}\n          >\n            <Td colSpan={5} w=\"100%\">\n              <NoData type=\"nodata\" text=\"You don't have any order history.\" />\n            </Td>\n          </Tr>\n        ) : (\n          <React.Fragment>\n            {paginationList.map((historyInfo: any) => {\n              return <HistoryTableItem key={historyInfo.order_id} historyInfo={historyInfo} />\n            })}\n            {!historyOrderLoading && historyOrderList?.length > pageSize && (\n              <Td colSpan={5} w=\"100%\" pt=\"0px !important\">\n                <Center w=\"100%\">\n                  <Pagination total={total} size={pageSize} currentPage={currentPage} onChange={setCurrentPage} />\n                </Center>\n              </Td>\n            )}\n          </React.Fragment>\n        )}\n      </Tbody>\n    </Table>\n  )\n}\n","import { Token } from '@cetus/types/src/common-types'\nimport { StateCreator, create } from 'zustand'\n\ninterface LimitActionState {\n  // 支付coin\n  payCoin?: Token | undefined\n  // 目标coin\n  targetCoin?: Token | undefined\n  // 周期\n  //展示的计价coin\n  quoteToken?: Token | undefined\n  expiresIn?: string\n  customExpiresVal?: any\n  refreshPriceLoading?: boolean\n  setPayCoin: (coin: Token | undefined) => void\n  setTargetCoin: (coin: Token | undefined) => void\n  setQuoteToken: (coin: Token | undefined) => void\n  setExpiresIn: (expiresIn: string) => void\n  setCustomExpiresVal: (customExpiresVal: any) => void\n  setRefreshPriceLoading: (refreshPriceLoading: boolean) => void\n}\n\nconst store: StateCreator<LimitActionState> = (set, get) => ({\n  quoteToken: undefined,\n  payCoin: undefined,\n  targetCoin: undefined,\n  setPayCoin: (coin: Token | undefined) => {\n    set(() => ({\n      payCoin: coin\n    }))\n  },\n  setTargetCoin: (coin: Token | undefined) => {\n    set(() => ({\n      targetCoin: coin\n    }))\n  },\n  setQuoteToken: (coin: Token | undefined) => {\n    set(() => ({\n      quoteToken: coin\n    }))\n  },\n  expiresIn: '7 Days',\n  setExpiresIn: (expiresIn: string) => {\n    set(() => ({\n      expiresIn\n    }))\n  },\n  customExpiresVal: null,\n  setCustomExpiresVal: (customExpiresVal: any) => {\n    set(() => ({\n      customExpiresVal\n    }))\n  },\n  refreshPriceLoading: false,\n  setRefreshPriceLoading: (refreshPriceLoading: boolean) => {\n    set(() => ({\n      refreshPriceLoading\n    }))\n  }\n})\n\nconst useLimitActionStore = create(store)\nexport default useLimitActionStore\n","import useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport { d } from '@cetusprotocol/common-sdk'\nimport { useMemo } from 'react'\n// 从市场价  计算交易对的价格\nexport function useGetPairPrice(baseCoinType?: string, quoteCoinType?: string) {\n  const { getTokenPrice } = useTokenPrice()\n\n  const basePrice = getTokenPrice(baseCoinType)\n  const quotePrice = getTokenPrice(quoteCoinType)\n\n  const priceInfo = useMemo(() => {\n    if (basePrice && quotePrice) {\n      const price = d(basePrice.price).div(quotePrice.price).toString()\n      const displayPrice = price.toString()\n      return {\n        price,\n        displayPrice\n      }\n    }\n    return undefined\n  }, [basePrice, quotePrice])\n\n  const getPrice = (baseCoinType?: string, quoteCoinType?: string) => {\n    const basePrice = getTokenPrice(baseCoinType)\n    const quotePrice = getTokenPrice(quoteCoinType)\n    if (basePrice && quotePrice) {\n      const price = d(basePrice.price).div(quotePrice.price).toString()\n      return price\n    }\n  }\n\n  return {\n    price: priceInfo?.price,\n    displayPrice: priceInfo?.displayPrice,\n    getPrice\n  }\n}\n","import useLimitActionStore from '@/store/limit/useLimitAction'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\n\n// 刷新token的市场价格\nexport default function useRefreshCoinMarketPrice() {\n  const { payCoin, targetCoin, setRefreshPriceLoading } = useLimitActionStore()\n  const { fetchTokenPrices } = useTokenPrice()\n  const refreshCoinMarketPrice = () => {\n    const list = []\n    if (payCoin) {\n      list.push(payCoin.coin_type)\n    }\n\n    if (targetCoin) {\n      list.push(targetCoin.coin_type)\n    }\n\n    if (list.length > 0) {\n      setRefreshPriceLoading(true)\n      fetchTokenPrices(list).finally(() => {\n        setRefreshPriceLoading(false)\n      })\n    }\n  }\n  return { refreshCoinMarketPrice }\n}\n","import { AggregatorDexMap } from '@/config/aggregator'\nimport useTransaction from '@/hooks/common/useTransaction'\nimport useLimitActionStore from '@/store/limit/useLimitAction'\nimport useProStore from '@/store/pro'\nimport { AggregatorServerErrorCode, SwapRouterData } from '@/types'\nimport { useAccountBalance } from '@cetus/hooks'\nimport { useGetToken } from '@cetus/hooks/src/useToken'\nimport { useGetTokenBalance } from '@cetus/hooks/src/useTokenBalance'\nimport useTokenPrice from '@cetus/hooks/src/useTokenPrice'\nimport { useSdk } from '@cetus/sdk-factory'\nimport { useAccountStore } from '@cetus/stores'\nimport useTokenStore from '@cetus/stores/src/token'\nimport { BalanceChanges, CommonTypeInfo, ToastType, Token, TransactionStatusType } from '@cetus/types'\nimport envConfigs from '@cetus/types/src/config/envConfigs'\nimport { d, formatNumber } from '@cetus/utils'\nimport { fixCoinType, toDecimalsAmount } from '@cetusprotocol/common-sdk'\nimport { PlaceLimitOrderParams } from '@cetusprotocol/limit-sdk'\nimport { useEffect, useMemo, useRef, useState } from 'react'\nimport { useNavigate, useParams } from 'react-router-dom'\nimport { useGetPairPrice } from '../common/useGetPairPrice'\nimport useInsufficientBalanceToast from '../common/useInsufficientBalanceToast'\nimport { useFindBestRouting } from '../swap/useFindBestRouting'\nimport useGetMyLimitOrder from './useGetMyLimitOrder'\nimport useRefreshCoinMarketPrice from './useRefreshCoinMarketPrice'\n\nexport default function useLimitAddAction() {\n  const { refreshCoinMarketPrice } = useRefreshCoinMarketPrice()\n  const { fetchAccountBalance } = useAccountBalance()\n  const { fetchMyLimitOrder } = useGetMyLimitOrder()\n  const { signAndExecuteTransaction } = useTransaction()\n  const limitSdk = useSdk('limit')\n  const { findBestRouters } = useFindBestRouting()\n  const { fetchTokenPrices, getTokenAmountValue } = useTokenPrice()\n  const navigate = useNavigate()\n  const { pay, target } = useParams()\n  const { getTokenListInfo } = useGetToken()\n  const { fetchTokenInfo } = useGetToken()\n  const { setCurrentProTab, currentProTab } = useProStore()\n\n  const {\n    payCoin,\n    targetCoin,\n    quoteToken,\n    expiresIn,\n    setPayCoin,\n    setTargetCoin,\n    setQuoteToken,\n    customExpiresVal,\n    setExpiresIn,\n    // 计算市场价loading\n    setRefreshPriceLoading\n  } = useLimitActionStore()\n\n  // 支付数量\n  const [payAmount, setPayAmount] = useState<string>('')\n  // 目标数量\n  const [targetAmount, setTargetAmount] = useState<string>('')\n  // 固定输入方向\n  const [fixPayCoin, setFixPayCoin] = useState<boolean>(true)\n\n  // 是否使用市场价格\n  const [useMarketPrice, setUseMarketPrice] = useState<boolean>(true)\n\n  // 当前输入的价格\n  const [inputPrice, setInputPrice] = useState<string>('')\n\n  // 市场价格\n  const { displayPrice: marketPrice } = useGetPairPrice(\n    quoteToken?.coin_type === payCoin?.coin_type ? targetCoin?.coin_type : payCoin?.coin_type,\n    quoteToken?.coin_type\n  )\n\n  // 余额\n  const { balanceInfo: payBalanceInfo } = useGetTokenBalance(payCoin)\n  const { balanceInfo: targetBalanceInfo } = useGetTokenBalance(targetCoin)\n\n  // 价值\n  const payAmountValue = getTokenAmountValue(payCoin?.coin_type, payAmount)\n  const targetAmountValue = getTokenAmountValue(targetCoin?.coin_type, targetAmount)\n\n  const [uuid, setUuid] = useState<string>('')\n  const uuidRef = useRef(uuid)\n\n  useEffect(() => {\n    uuidRef.current = uuid\n  }, [uuid])\n\n  const [routerData, setRouterData] = useState<SwapRouterData | undefined>(undefined)\n\n  // 价差\n  const [priceImpact, setPriceImpact] = useState<string>('')\n\n  const payAmountRef = useRef<string>(payAmount)\n  const targetAmountRef = useRef<string>(targetAmount)\n\n  useEffect(() => {\n    payAmountRef.current = payAmount\n  }, [payAmount])\n\n  useEffect(() => {\n    targetAmountRef.current = targetAmount\n  }, [targetAmount])\n\n  // 处理导航Token\n  useEffect(() => {\n    const fetTokenInfo = async () => {\n      console.log('0630🚀 ~ fetTokenInfo ~ pay:', pay)\n      console.log('0630🚀 ~ fetTokenInfo ~ target:', target)\n      if ((!pay || pay === 'undefined') && (!target || target === 'undefined')) {\n        setPayCoin(envConfigs.clmm_swap.from_coin)\n        setTargetCoin(envConfigs.clmm_swap.to_coin)\n        return\n      }\n\n      if (pay && pay !== 'undefined') {\n        fetchTokenInfo<string>(pay)\n          .then((token: Token | undefined) => {\n            if (!token) {\n              navigate(`/limit/${payCoin?.coin_type}/${targetCoin?.coin_type}`)\n            } else {\n              if (token?.coin_type !== payCoin?.coin_type) {\n                setPayCoin(token)\n              }\n            }\n          })\n          .catch(() => {\n            navigate(`/limit/${payCoin?.coin_type}/${targetCoin?.coin_type}`)\n          })\n      } else {\n        setPayCoin(undefined)\n      }\n\n      if (target && target !== 'undefined') {\n        fetchTokenInfo<string>(target)\n          .then((token: Token | undefined) => {\n            if (!token) {\n              navigate(`/limit/${payCoin?.coin_type}/${targetCoin?.coin_type}`)\n            } else {\n              if (token?.coin_type !== targetCoin?.coin_type) {\n                setTargetCoin(token)\n              }\n            }\n          })\n          .catch(() => {\n            navigate(`/limit/${payCoin?.coin_type}/${targetCoin?.coin_type}`)\n          })\n      } else {\n        setTargetCoin(undefined)\n      }\n    }\n\n    fetTokenInfo()\n  }, [pay, target])\n\n  // 销毁时清空token的值\n  useEffect(() => {\n    return () => {\n      setPayCoin(undefined)\n      setQuoteToken(undefined)\n      setTargetCoin(undefined)\n    }\n  }, [])\n\n  // 监听token 变更 计算市场价  和   路由路径\n  useEffect(() => {\n    setRouterData(undefined)\n    refreshCoinMarketPrice()\n    findAvailableRouter()\n\n    // 设置默认的baseToken\n    if (payCoin && targetCoin) {\n      const payCoinRank = payCoin.extensions ? payCoin.extensions['rank'] || '0' : '0'\n      const targetCoinRank = targetCoin.extensions ? targetCoin.extensions['rank'] || '0' : '0'\n      console.log('🚀 ~ useEffect ~ payCoinRank:', payCoin, targetCoin)\n      if (d(payCoinRank).gte(targetCoinRank)) {\n        setQuoteToken({ ...payCoin })\n      } else {\n        setQuoteToken({ ...targetCoin })\n      }\n    }\n  }, [payCoin?.coin_type, targetCoin?.coin_type])\n\n  // 判断该交易对，是否存在可用路由\n  const findAvailableRouter = async () => {\n    if (payCoin && targetCoin) {\n      const newUuid = `${payCoin.coin_type}_${targetCoin.coin_type}`\n      setUuid(newUuid)\n      const providersKeys = Object.entries(AggregatorDexMap).map(([key, value]) => value.id)\n      const result = await findBestRouters({\n        fromToken: payCoin,\n        toToken: targetCoin,\n        amount: toDecimalsAmount(1, payCoin.decimals),\n        providersKeys: providersKeys as string[],\n        by_amount_in: true,\n        uuid: newUuid\n      })\n\n      if (newUuid === uuidRef.current) {\n        setRouterData(result)\n      }\n    }\n  }\n\n  // 市场价格变化，更新价格输入框\n  useEffect(() => {\n    if (useMarketPrice) {\n      setInputPrice(marketPrice || '')\n    } else {\n      calculatePriceImpact()\n    }\n  }, [marketPrice])\n\n  // quote 变化 重新计算价格\n  useEffect(() => {\n    if (quoteToken && !useMarketPrice && +inputPrice) {\n      setInputPrice(formatNumber(d(1).div(inputPrice).toFixed(quoteToken.decimals)).toString())\n    }\n  }, [quoteToken?.coin_type])\n\n  // 监听 输入价格  更新输入框内容\n  useEffect(() => {\n    handleAmountChange(fixPayCoin ? payAmount : targetAmount, fixPayCoin)\n    calculatePriceImpact()\n  }, [inputPrice])\n\n  const [priceImpactInfo, setPriceImpactInfo] = useState({ tooltip: '', color: '', text: '', bg: '' })\n  const [priceImpactInfoLoading, setPriceImpactInfoLoading] = useState(false)\n  // 计算价差\n  const calculatePriceImpact = () => {\n    if (!useMarketPrice && marketPrice && inputPrice) {\n      setPriceImpactInfoLoading(true)\n      const impact = d(inputPrice).sub(marketPrice).div(marketPrice).mul(100).toFixed(2)\n      setPriceImpact(impact)\n\n      const isGtZero = d(impact).gt(0)\n      const ratioAbs = isGtZero ? impact : impact.split('-')[1]\n      const impactInfo: any = { tooltip: '', color: '', text: '', bg: '' }\n      impactInfo['tooltip'] = `Limit order price is ${ratioAbs}% ${isGtZero ? 'higher' : 'lower'} than the market.`\n      if (quoteToken?.coin_type?.toLowerCase() == targetCoin?.coin_type?.toLowerCase()) {\n        if (Number(inputPrice) > Number(marketPrice)) {\n          impactInfo['text'] = ''\n          impactInfo['color'] = '#68FFD8'\n        } else if (Number(marketPrice) > Number(inputPrice)) {\n          impactInfo['text'] = `Your limit order price is ${ratioAbs}% ${\n            isGtZero ? 'higher' : 'lower'\n          } than market. You are selling at a much ${isGtZero ? 'higher' : 'lower'} rate. We recommend you to use`\n          impactInfo['color'] = '#ffb62d'\n          impactInfo['bg'] = 'rgba(255,202,104,0.1)'\n        }\n      } else {\n        if (Number(inputPrice) > Number(marketPrice)) {\n          impactInfo['text'] = `Your limit order price is ${ratioAbs}% ${\n            isGtZero ? 'higher' : 'lower'\n          } than market. You are buying at a much ${isGtZero ? 'higher' : 'lower'} rate. We recommend you to use`\n          impactInfo['color'] = '#ffb62d'\n          impactInfo['bg'] = 'rgba(255,202,104,0.1)'\n        } else if (Number(marketPrice) > Number(inputPrice)) {\n          impactInfo['text'] = ''\n          impactInfo['color'] = '#68FFD8'\n        }\n      }\n      setPriceImpactInfo(impactInfo)\n      setPriceImpactInfoLoading(false)\n      return\n    }\n    setPriceImpact('')\n  }\n\n  // 点击市场价格\n  const handleMarketPriceClick = (isUse: boolean = true) => {\n    console.log('🚀 ~ handleMarketPriceClick ~ marketPrice:', marketPrice)\n    setUseMarketPrice(isUse)\n    if (isUse) {\n      setInputPrice(marketPrice || '')\n      refreshCoinMarketPrice()\n    }\n  }\n  // 处理数量输入\n  const handleAmountChange = (amount: string, fixPayCoin: boolean) => {\n    setFixPayCoin(fixPayCoin)\n    if (fixPayCoin) {\n      setPayAmount(amount)\n    } else {\n      setTargetAmount(amount)\n    }\n    if (quoteToken && payCoin && targetCoin && +inputPrice && +amount) {\n      if (fixPayCoin) {\n        if (quoteToken.coin_type === payCoin.coin_type) {\n          setTargetAmount(d(amount).div(inputPrice).toString().toString())\n        } else {\n          setTargetAmount(d(amount).mul(inputPrice).toString().toString())\n        }\n        return\n      } else {\n        if (quoteToken.coin_type === targetCoin.coin_type) {\n          setPayAmount(d(amount).div(inputPrice).toString().toString())\n        } else {\n          setPayAmount(d(amount).mul(inputPrice).toString().toString())\n        }\n        return\n      }\n    }\n\n    if (fixPayCoin) {\n      setTargetAmount('')\n    } else {\n      setPayAmount('')\n    }\n  }\n\n  // 处理token选择\n  const handleSelectToken = (token: Token, isPay: boolean) => {\n    resetInputAmount()\n    setFixPayCoin(isPay)\n    setUseMarketPrice(true)\n    if (isPay) {\n      // 如果选择token 和 对象token重复，  则交换顺序\n      if (fixCoinType(token?.coin_type) === fixCoinType(targetCoin!.coin_type)) {\n        navigate(`/limit/${token?.coin_type}/${payCoin?.coin_type}`)\n        setCurrentProTab(currentProTab === 'Buy' ? 'Sell' : 'Buy')\n      } else {\n        navigate(`/limit/${token?.coin_type}/${targetCoin?.coin_type}`)\n      }\n    } else {\n      if (fixCoinType(token?.coin_type) === fixCoinType(payCoin!.coin_type)) {\n        navigate(`/limit/${targetCoin?.coin_type}/${token?.coin_type}`)\n        setCurrentProTab(currentProTab === 'Buy' ? 'Sell' : 'Buy')\n      } else {\n        navigate(`/limit/${payCoin?.coin_type}/${token?.coin_type}`)\n      }\n    }\n  }\n\n  const { getPrice } = useGetPairPrice()\n\n  const onReverseClick = (isClickToggle?: boolean) => {\n    const price = getPrice(targetCoin?.coin_type, payCoin?.coin_type)\n    setInputPrice(price || '')\n    if ((payCoin?.coin_type && fixCoinType(payCoin?.coin_type || '') === fixCoinType(pay || '')) || (payCoin?.coin_type && !pay)) {\n      navigate(`/limit/${targetCoin?.coin_type}/${payCoin?.coin_type}`)\n    } else if (\n      (payCoin?.coin_type && payCoin?.coin_type !== 'undefined' && (!targetCoin?.coin_type || targetCoin?.coin_type == 'undefined')) ||\n      (targetCoin?.coin_type && targetCoin?.coin_type !== 'undefined' && (!payCoin?.coin_type || payCoin?.coin_type == 'undefined'))\n    ) {\n      console.log('useLimitAddAction 🚀 ~ onReverseClick ~ targetCoin?.coin_type:', targetCoin?.coin_type)\n      console.log('useLimitAddAction 🚀 ~ onReverseClick ~ payCoin?.coin_type:', payCoin?.coin_type)\n\n      navigate(`/limit/${targetCoin?.coin_type}/${payCoin?.coin_type}`)\n    }\n    if (isClickToggle) {\n      setCurrentProTab(currentProTab === 'Buy' ? 'Sell' : 'Buy', 'toggleBtn')\n    }\n  }\n\n  // 清空输入\n  const resetInputAmount = () => {\n    setPayAmount('')\n    setTargetAmount('')\n  }\n\n  useEffect(() => {\n    return () => {\n      setExpiresIn('7 Days')\n    }\n  }, [])\n\n  const [submitOrderLoading, setSubmitOrderLoading] = useState<boolean>(false)\n  const getExpiresTime = (time: string) => {\n    switch (time) {\n      case '5 Minutes':\n        return 300000\n      case '10 Minutes':\n        return 600000\n      case '30 Minutes':\n        return 1800000\n      case '1 Hour':\n        return 3600000\n      case '1 Day':\n        return 86400000\n      case '3 Days':\n        return 259200000\n      case '7 Days':\n        return 604800000\n      case '1 Month':\n        return 2592000000\n      default:\n        return 0\n    }\n  }\n  const { showInsufficientBalanceToast } = useInsufficientBalanceToast()\n  const { transactionConfirmation } = useTransaction()\n  const clmmSdk = useSdk('clmm')\n  const { addToken } = useTokenStore()\n  // 提交现价单\n  const handleSubmitOrder = async () => {\n    // 构建 交易提示\n    const toastInfo: ToastType = {\n      getShowInfo: (status: TransactionStatusType, balanceChanges?: Record<string, BalanceChanges>) => {\n        const description = `Creating order`\n\n        const info: CommonTypeInfo = {\n          modalDescriptionText: description,\n          toastTitleText: description\n        }\n\n        if (status === 'success') {\n          info.toastDescriptionContent = ''\n          info.modalDescriptionText = 'Created order successfully'\n          info.toastTitleText = 'Created order successfully'\n        }\n        if (status === 'rejected') {\n          info.toastTitleText = 'Create order'\n        }\n\n        return info\n      }\n    }\n    transactionConfirmation(toastInfo)\n    const expired_ts = Date.parse(new Date().toString()) + (getExpiresTime(expiresIn!) || customExpiresVal)\n    console.log(' ~ handleSubmitOrder ~ expired_ts:', expired_ts)\n    setSubmitOrderLoading(true)\n    const coinsInfo = await clmmSdk!.CetusConfig.getTokenListByCoinTypes([payCoin!.coin_type, targetCoin!.coin_type])\n    const payCoinLocalDecimals = payCoin!.decimals\n    const targetCoinLocalDecimals = targetCoin!.decimals\n    const payCoinChainDecimals = coinsInfo[payCoin!.coin_type]!.decimals\n    const targetCoinChainDecimals = coinsInfo[targetCoin!.coin_type]!.decimals\n\n    if (payCoin && payCoinLocalDecimals !== payCoinChainDecimals) {\n      addToken({ ...payCoin, decimals: payCoinChainDecimals })\n    }\n    if (targetCoin && targetCoinLocalDecimals !== targetCoinChainDecimals) {\n      addToken({ ...targetCoin, decimals: targetCoinChainDecimals })\n    }\n    let price\n\n    if (quoteToken?.coin_type === targetCoin?.coin_type) {\n      price = inputPrice\n    } else {\n      // price = d(1).div(inputPrice).toFixed(targetCoinChainDecimals)\n      price = d(1).div(inputPrice).toString()\n    }\n\n    try {\n      const params: PlaceLimitOrderParams = {\n        pay_coin_type: payCoin!.coin_type,\n        target_coin_type: targetCoin!.coin_type,\n        expired_ts,\n        target_decimal: targetCoinChainDecimals,\n        pay_decimal: payCoinChainDecimals,\n        price: Number(price),\n        pay_coin_amount: String(toDecimalsAmount(payAmount, payCoinChainDecimals)) as any\n      }\n\n      const txb = await limitSdk!.LimitOrder.placeLimitOrder(params)\n\n      const res = await signAndExecuteTransaction(txb, toastInfo)\n      setSubmitOrderLoading(false)\n\n      if (res) {\n        // 刷新余额\n        fetchAccountBalance()\n        // 刷新订单\n        fetchMyLimitOrder()\n        resetInputAmount()\n      }\n    } catch (error) {\n      showInsufficientBalanceToast(String(error))\n      setSubmitOrderLoading(false)\n    }\n  }\n  const { currentAccount } = useAccountStore()\n\n  const minOrderAmount = useMemo(() => {\n    const amountUsd = getTokenAmountValue(payCoin?.coin_type, payAmount)\n    if (Number(amountUsd) == 0 && Number(payAmount) > 0) {\n      return false\n    } else {\n      if (Number(amountUsd) < 5) {\n        return true\n      }\n    }\n    return false\n  }, [payCoin, payAmount])\n\n  const buttonTextStatus = useMemo(() => {\n    const btnInfo: {\n      text?: string\n      disabled: boolean\n    } = {\n      text: 'Place Limit Order',\n      disabled: false\n    }\n    if (!currentAccount?.address) {\n      btnInfo.disabled = false\n      btnInfo.text = 'Connect Wallet'\n      return btnInfo\n    }\n    if (!payCoin || !targetCoin) {\n      btnInfo.disabled = true\n      btnInfo.text = ' Select a token'\n      return btnInfo\n    }\n    if (!Number(payAmount) || !Number(targetAmount)) {\n      btnInfo.disabled = true\n      btnInfo.text = 'Enter an amount'\n      return btnInfo\n    }\n    if (minOrderAmount) {\n      btnInfo.disabled = true\n      btnInfo.text = 'Order size should be higher than $5'\n      return btnInfo\n    }\n    if (Number(payAmount) > Number(payBalanceInfo?.balanceFormat) || !payBalanceInfo?.balanceFormat) {\n      btnInfo.disabled = true\n      btnInfo.text = `Insufficient ${payCoin?.symbol} balance`\n      return btnInfo\n    }\n    if (routerData && routerData.errorCode) {\n      if (routerData.errorCode === AggregatorServerErrorCode.NoRouter || routerData.errorCode === AggregatorServerErrorCode.HoneyPot) {\n        btnInfo.text = 'No Available Route'\n        btnInfo.disabled = true\n        return btnInfo\n      }\n    }\n    console.log('🚀 ~ buttonTextStatus ~ priceImpact:', 12, priceImpactInfo.color, priceImpactInfo, priceImpact)\n    if (priceImpactInfo.color.toLowerCase() == '#ffb62d' && (Number(priceImpact) < -10 || Number(priceImpact) > 10)) {\n      btnInfo.disabled = true\n      return btnInfo\n    }\n    return btnInfo\n  }, [\n    currentAccount?.address,\n    payCoin,\n    targetCoin,\n    routerData,\n    payAmount,\n    targetAmount,\n    minOrderAmount,\n    payBalanceInfo,\n    JSON.stringify(priceImpactInfo),\n    priceImpact\n  ])\n\n  return {\n    priceImpactInfoLoading,\n    priceImpactInfo,\n    fixPayCoin,\n    onReverseClick,\n    handleSelectToken,\n    marketPrice,\n    payCoin,\n    targetCoin,\n    handleAmountChange,\n    payAmount,\n    targetAmount,\n    payBalanceInfo,\n    targetBalanceInfo,\n    payAmountValue,\n    targetAmountValue,\n    useMarketPrice,\n    handleMarketPriceClick,\n    inputPrice,\n    setInputPrice,\n    priceImpact,\n    quoteToken,\n    setQuoteToken,\n    handleSubmitOrder,\n    submitOrderLoading,\n    buttonTextStatus\n  }\n}\n","import { Block, TradeConfirmAmountInfo } from '@cetus/design'\nimport { d, formatNumber } from '@cetus/utils'\nimport {\n  Button,\n  Heading,\n  HStack,\n  Modal,\n  ModalBody,\n  ModalCloseButton,\n  ModalContent,\n  ModalHeader,\n  ModalOverlay,\n  Skeleton,\n  Text,\n  VStack\n} from '@chakra-ui/react'\nimport { useMemo } from 'react'\nimport { PriceBlock } from './OrderItemBlock/PriceBlock'\n\ninterface ConfirmModalProps {\n  isOpen: boolean\n  onClose: () => void\n  handleSubmitOrder: () => void\n  confirmData: any\n  submitOrderLoading: boolean\n}\n\nconst ConfirmModal = ({ confirmData, isOpen, onClose, handleSubmitOrder, submitOrderLoading }: ConfirmModalProps) => {\n  const { payAmount, targetAmount, payCoin, targetCoin, inputPrice, expiresIn, quoteToken } = confirmData\n\n  const price = useMemo(() => {\n    console.log('🚀 ~ price ~ inputPrice:', inputPrice)\n    if (inputPrice) {\n      return quoteToken?.coin_type?.toLowerCase() == targetCoin?.coin_type?.toLowerCase() ? inputPrice : d(1).div(inputPrice).toString()\n    }\n    return ''\n  }, [quoteToken, targetCoin, inputPrice])\n\n  const reseverPrice = useMemo(() => {\n    if (inputPrice) {\n      return quoteToken?.coin_type?.toLowerCase() == targetCoin?.coin_type?.toLowerCase() ? d(1).div(inputPrice).toString() : inputPrice\n    }\n    return ''\n  }, [quoteToken, targetCoin, inputPrice])\n\n  return (\n    <Modal autoFocus={false} returnFocusOnClose={false} isOpen={isOpen} onClose={onClose} isCentered>\n      <ModalOverlay />\n      <ModalContent>\n        <ModalHeader>\n          <Heading fontWeight=\"500\" fontSize=\"16px\">\n            Review your order\n          </Heading>\n        </ModalHeader>\n        <ModalCloseButton />\n        <ModalBody textAlign=\"center\" p=\"0px\">\n          <VStack w=\"100%\" gap=\"16px\" p=\"16px\">\n            <TradeConfirmAmountInfo\n              coinA={{\n                amount: formatNumber(payAmount, payCoin?.decimals).toString() || '0',\n                ...payCoin\n              }}\n              iconParams={{\n                xlinkHref: '#icon-a-icon_trade',\n                svgFill: 'text_caption',\n                fontSize: '12px'\n              }}\n              coinB={{\n                amount: formatNumber(targetAmount, targetCoin?.decimals).toString() || '0',\n                ...targetCoin\n              }}\n            />\n            <HStack w=\"100%\" justify=\"space-between\">\n              <Text>Price</Text>\n              <Skeleton isLoaded={!!inputPrice}>\n                <PriceBlock info={{ pay_coin: payCoin, target_coin: targetCoin, price, reseverPrice }} />\n              </Skeleton>\n            </HStack>\n            <HStack w=\"100%\" justify=\"space-between\">\n              <Text>Expires in</Text>\n              <Text color=\"text_caption\">{expiresIn}</Text>\n            </HStack>\n            <Block borderRadius=\"12px\" p=\"8px\">\n              <Text lineHeight=\"20px\" textAlign=\"left\" fontSize=\"12px\">\n                You will receive exactly what you have specified if your order is fully filled in the end.\n              </Text>\n            </Block>\n            <Block borderRadius=\"12px\" p=\"8px\">\n              <Text lineHeight=\"20px\" textAlign=\"left\" fontSize=\"12px\">\n                Please note that your order may not be filled immediately after the price is triggered, depending on pending sequence and liquidity\n                depth.\n              </Text>\n            </Block>\n            <Button\n              onClick={() => {\n                handleSubmitOrder()\n                onClose()\n              }}\n              isDisabled={submitOrderLoading}\n              w=\"calc(100% + 32px)\"\n              mb=\"-30px\"\n              h=\"52px\"\n              fontWeight=\"500\"\n            >\n              Place Order\n            </Button>\n          </VStack>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  )\n}\n\nexport default ConfirmModal\n","import useLimitActionStore from '@/store/limit/useLimitAction'\nimport { InputBox } from '@cetus/design'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { Button, HStack, Input, Modal, ModalBody, ModalCloseButton, ModalContent, ModalHeader, ModalOverlay, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useMemo, useState } from 'react'\n\ninterface CustomExpiryModalProps {\n  isOpen: boolean\n  onClose: () => void\n}\n\nconst CustomExpiryModal = ({ isOpen, onClose }: CustomExpiryModalProps) => {\n  const { isApp } = useWindowWidth()\n  const { setCustomExpiresVal, setExpiresIn } = useLimitActionStore()\n  const [hourVal, setHourVal] = useState('')\n  const [minuteVal, setMinuteVal] = useState('')\n  const handleInputHourChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value.replace(/[^\\d]/g, '') // 去掉非数字字符\n    setHourVal(value)\n  }\n  const handleInputMinuteChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const value = event.target.value.replace(/[^\\d]/g, '') // 去掉非数字字符\n    setMinuteVal(value)\n  }\n  const [timeInfo, setTimeInfo] = useState({})\n  const calculateTime = (hours: string, minutes: string) => {\n    const totalMinutes = Number(hours ? hours : 0) * 60 + Number(minutes || 0)\n    const d = Math.floor(totalMinutes / (60 * 24))\n    const h = Math.floor((totalMinutes % (60 * 24)) / 60)\n    const m = totalMinutes % 60\n\n    let result = ''\n    if (d > 0) {\n      result += d + 'd '\n    }\n    if (h > 0) {\n      result += h + 'h '\n    }\n    if (m > 0) {\n      result += m + 'm '\n    }\n    setTimeInfo({\n      timeText: result.trim() || '0 m',\n      time: totalMinutes * 60 * 1000\n    })\n  }\n  useEffect(() => {\n    calculateTime(hourVal, minuteVal)\n  }, [hourVal, minuteVal])\n  const btnDisabled = useMemo(() => {\n    if (!hourVal && !minuteVal) {\n      return true\n    }\n    if (Number(hourVal) == 0 && !minuteVal) {\n      return true\n    }\n    if (Number(minuteVal) == 0 && !hourVal) {\n      return true\n    }\n    if (Number(hourVal) == 0 && Number(minuteVal) == 0) {\n      return true\n    }\n    return false\n  }, [hourVal, minuteVal])\n  const clickSetPeriod = () => {\n    setExpiresIn(timeInfo?.timeText)\n    setCustomExpiresVal(timeInfo?.time)\n    onClose()\n  }\n\n  return (\n    <Modal autoFocus={false} returnFocusOnClose={false} isOpen={isOpen} onClose={onClose} isCentered>\n      <ModalOverlay />\n      <ModalContent maxW=\"1200px\" w={isApp ? 'calc(100vw - 32px)' : '440px'}>\n        <ModalHeader mr=\"-10px\">\n          <HStack w=\"100%\" gap=\"24px\" justify=\"space-between\" align=\"center\">\n            <Text fontSize=\"16px\" fontWeight=\"500\" color=\"text_caption\">\n              Custom Expiry Period\n            </Text>\n            <HStack gap=\"0\" align=\"center\">\n              <ModalCloseButton mt=\"0\" position=\"static\" />\n            </HStack>\n          </HStack>\n        </ModalHeader>\n\n        <ModalBody p={{ base: '8px 16px', lg: '16px' }} pt=\"0 !important\">\n          <VStack w=\"100%\">\n            <InputBox>\n              <HStack>\n                <Input\n                  value={hourVal}\n                  onChange={handleInputHourChange}\n                  placeholder=\"0.0\"\n                  style={{\n                    width: 'calc(100% - 8px)',\n                    background: 'none',\n                    whiteSpace: 'nowrap',\n                    opacity: 1,\n                    outline: 'none',\n                    color: 'var(--chakra-colors-text_caption)',\n                    fontSize: '20px',\n                    touchAction: 'manipulation',\n                    transition: 'all 0.3s'\n                  }}\n                />\n                <Text>Hours</Text>\n              </HStack>\n            </InputBox>\n            <InputBox>\n              <HStack>\n                <Input\n                  value={minuteVal}\n                  onChange={handleInputMinuteChange}\n                  placeholder=\"0.0\"\n                  style={{\n                    width: 'calc(100% - 8px)',\n                    background: 'none',\n                    whiteSpace: 'nowrap',\n                    opacity: 1,\n                    outline: 'none',\n                    color: 'var(--chakra-colors-text_caption)',\n                    fontSize: '20px',\n                    touchAction: 'manipulation',\n                    transition: 'all 0.3s'\n                  }}\n                />\n                <Text>Minutes</Text>\n              </HStack>\n            </InputBox>\n            <Button onClick={clickSetPeriod} isDisabled={btnDisabled} w=\"calc(100% + 32px)\" mb=\"-30px\" mt=\"12px\" h=\"52px\" fontWeight=\"500\">\n              Set Period\n            </Button>\n          </VStack>\n        </ModalBody>\n      </ModalContent>\n    </Modal>\n  )\n}\n\nexport default CustomExpiryModal\n","import useLimitActionStore from '@/store/limit/useLimitAction'\nimport { CetusTooltip, InputBox } from '@cetus/design'\nimport { Icon } from '@cetus/ui-kit'\nimport { HStack, Text, VStack } from '@chakra-ui/react'\nimport { useState } from 'react'\nimport MenuDropBlock from '../common/MenuDropBlock'\nimport CustomExpiryModal from './CustomExpiryModal'\n\ntype LimitExpiresProps = object\n\nexport function LimitExpires(props: LimitExpiresProps) {\n  const { expiresIn, setExpiresIn } = useLimitActionStore()\n  const [isOpenExpiryModal, setIsOpenExpiryModal] = useState(false)\n  const expiresList = ['5 Minutes', '10 Minutes', '30 Minutes', '1 Hour', '1 Day', '3 Days', '7 Days', '1 Month', 'Custom']\n  return (\n    <InputBox w=\"156px\" borderRadius=\"16px\">\n      <VStack\n        w=\"100%\"\n        h=\"100%\"\n        gap=\"20px\"\n        alignItems=\"start\"\n        justify=\"space-between\"\n        sx={{\n          button: {\n            w: '100%',\n            h: '23px',\n            '>span': {\n              '>div': {\n                display: 'flex',\n                justifyContent: 'space-between',\n                p: {\n                  fontSize: '16px'\n                }\n              }\n            }\n          }\n        }}\n      >\n        <CetusTooltip\n          placement=\"top\"\n          tooltip={\n            <Text fontSize=\"12px\" lineHeight=\"20px\" maxW=\"280px\">\n              No extra cancellation fee will be charged for order expiry or cancellation. Gas will be consumed upon manual cancellation.\n            </Text>\n          }\n        >\n          <HStack gap=\"4px\">\n            <Text fontSize=\"13px\" fontWeight=\"500\">\n              Expires in\n            </Text>\n            <Icon xlinkHref=\"#icon-icon_tips\" />\n          </HStack>\n        </CetusTooltip>\n        <MenuDropBlock\n          label={expiresIn || ''}\n          list={expiresList}\n          onListItemClick={item => {\n            if (item == 'Custom') {\n              setIsOpenExpiryModal(true)\n            } else {\n              setExpiresIn(item)\n            }\n          }}\n        />\n      </VStack>\n      {isOpenExpiryModal && <CustomExpiryModal isOpen={isOpenExpiryModal} onClose={() => setIsOpenExpiryModal(false)} />}\n    </InputBox>\n  )\n}\n","import useLimitActionStore from '@/store/limit/useLimitAction'\nimport { isDecimalWithZeros } from '@/utils'\nimport { CetusTooltip, InputBox } from '@cetus/design'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { Icon, NumericFormatInput } from '@cetus/ui-kit'\nimport { d, formatNumberWithDown, formatPercentage, textEllipses } from '@cetus/utils'\nimport { Button, HStack, Spinner, Text, VStack } from '@chakra-ui/react'\n\ntype LimitPriceProps = {\n  inputPrice?: string\n  priceImpact?: string\n  marketPrice?: string\n  priceImpactInfo?: any\n  priceImpactInfoLoading?: boolean\n  handleMarketPriceClick: (isUse: boolean) => void\n  setInputPrice: (price: string) => void\n}\n\nexport function LimitPrice(props: LimitPriceProps) {\n  const { isApp } = useWindowWidth()\n  const { marketPrice, priceImpactInfo, priceImpactInfoLoading, priceImpact, inputPrice, handleMarketPriceClick, setInputPrice } = props\n  const { payCoin, targetCoin, quoteToken, refreshPriceLoading, setQuoteToken } = useLimitActionStore()\n  return (\n    <InputBox w=\"calc(100% - 156px)\">\n      <VStack w=\"100%\" gap=\"20px\">\n        <HStack w=\"100%\" justifyContent=\"space-between\" h=\"23px\">\n          <HStack>\n            <Text fontSize=\"13px\" fontWeight=\"500\">\n              {!targetCoin || !payCoin\n                ? '-- at rate'\n                : quoteToken?.coin_type === payCoin?.coin_type\n                  ? `Buy ${textEllipses(targetCoin?.symbol, 10)} at rate`\n                  : `Sell ${textEllipses(payCoin?.symbol, 10)} at rate`}\n            </Text>\n\n            {Number(priceImpact) !== 0 &&\n              !refreshPriceLoading &&\n              (priceImpactInfoLoading ? (\n                <Spinner size=\"sm\" />\n              ) : (\n                <CetusTooltip\n                  placement=\"top\"\n                  tooltip={\n                    <Text fontSize=\"12px\" lineHeight=\"20px\" maxW=\"220px\">\n                      {priceImpactInfo.tooltip}\n                    </Text>\n                  }\n                >\n                  <Text color={priceImpactInfo.color}>\n                    {d(priceImpact).gt(0) ? '+' : ''}\n                    {Number(priceImpact) > 10000 ? '>10000%' : formatPercentage(priceImpact)}\n                  </Text>\n                </CetusTooltip>\n              ))}\n          </HStack>\n          {payCoin && targetCoin && (marketPrice || refreshPriceLoading) && (\n            <Button\n              isLoading={refreshPriceLoading}\n              loadingText=\"Market\"\n              minW=\"58px\"\n              h=\"22px\"\n              pl=\"4px\"\n              pr=\"4px\"\n              color=\"primary_gray\"\n              borderRadius=\"4px\"\n              variant=\"outline\"\n              fontWeight=\"500\"\n              fontSize=\"12px\"\n              onClick={() => handleMarketPriceClick(true)}\n            >\n              Market\n            </Button>\n          )}\n        </HStack>\n\n        <HStack w=\"100%\" justifyContent=\"space-between\">\n          <NumericFormatInput\n            value={\n              inputPrice ? (isDecimalWithZeros(inputPrice) && Number(inputPrice) > 0 ? formatNumberWithDown(inputPrice).toString() : inputPrice) : ''\n            }\n            onChange={(value: string) => {\n              console.log('🚀 ~ useEffect ~ useMarketPrice:', inputPrice, value)\n              handleMarketPriceClick(false)\n              setInputPrice(value)\n            }}\n            decimals={18}\n            placeholder=\"0.0\"\n            style={{\n              width: 'calc(100% - 8px)',\n              background: 'none',\n              whiteSpace: 'nowrap',\n              opacity: 1,\n              outline: 'none',\n              color: 'var(--chakra-colors-text_caption)',\n              fontSize: '20px',\n              touchAction: 'manipulation',\n              transition: 'all 0.3s'\n            }}\n          />\n\n          {targetCoin && payCoin && (\n            <HStack gap=\"4px\">\n              <Text textColor=\"text_caption\">{quoteToken?.symbol}</Text>\n              <Icon\n                xlinkHref=\"#icon-icon_swap1\"\n                onClick={() => {\n                  if (targetCoin && payCoin) {\n                    if (quoteToken?.coin_type === payCoin?.coin_type) {\n                      setQuoteToken(targetCoin)\n                    } else {\n                      setQuoteToken(payCoin)\n                    }\n                  }\n                }}\n              />\n            </HStack>\n          )}\n        </HStack>\n      </VStack>\n    </InputBox>\n  )\n}\n","import useLimitAddAction from '@/hooks/limit/useLimitAddAction'\nimport useLimitActionStore from '@/store/limit/useLimitAction'\nimport useProStore from '@/store/pro'\nimport { TradeInputGroup } from '@cetus/design'\nimport WarningTokenTipsModal from '@cetus/design/src/components/common/WarningTokenTipModal'\nimport { useAccountStore } from '@cetus/stores'\nimport { Token } from '@cetus/types'\nimport { fixCoinType } from '@cetusprotocol/common-sdk'\nimport { Button, HStack, Text, VStack } from '@chakra-ui/react'\nimport { useEffect, useMemo, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { ChartOrderIcon } from '../common/ChartOrderIcon'\nimport { TradeTab } from '../common/TradeTab'\nimport { TradeTabs } from '../swap'\nimport ConfirmModal from './ConfirmModal'\nimport { LimitExpires } from './LimitExpires'\nimport { LimitPrice } from './LimitPrice'\n\nexport function LimitAction() {\n  const { expiresIn } = useLimitActionStore()\n  const {\n    buttonTextStatus,\n    payBalanceInfo,\n    targetBalanceInfo,\n    payAmountValue,\n    targetAmountValue,\n    payAmount,\n    targetAmount,\n    payCoin,\n    targetCoin,\n    marketPrice,\n    handleAmountChange,\n    handleMarketPriceClick,\n    handleSelectToken,\n    inputPrice,\n    setInputPrice,\n    priceImpact,\n    quoteToken,\n    handleSubmitOrder,\n    submitOrderLoading,\n    onReverseClick,\n    priceImpactInfoLoading,\n    priceImpactInfo\n  } = useLimitAddAction()\n  const confirmData = useMemo(() => {\n    return { payAmount, targetAmount, payCoin, targetCoin, inputPrice, expiresIn, quoteToken }\n  }, [payAmount, targetAmount, payCoin, targetCoin, inputPrice, expiresIn, quoteToken])\n\n  const { onWalletModal } = useAccountStore()\n  const [tradeIcon, setTradeIcon] = useState<string>('#icon-a-icon_trade')\n  const toggleTradeIcon = (hovered: boolean) => setTradeIcon(hovered ? '#icon-icon_swap1' : '#icon-a-icon_trade')\n  const [isOpenConfirmModal, setIsOpenConfirmModal] = useState(false)\n  const navigate = useNavigate()\n\n  const warningTokenList = useMemo(() => {\n    const list: Token[] = []\n    if (payCoin) {\n      list.push(payCoin)\n    }\n\n    if (targetCoin) {\n      list.push(targetCoin)\n    }\n\n    return list\n  }, [payCoin, targetCoin])\n  const { showTokenInfo, isProMode, currentProTab, currentProTabUpdateWith } = useProStore()\n  useEffect(() => {\n    if (currentProTabUpdateWith === 'toggleBtn' || !currentProTabUpdateWith) return\n    console.log('🚀 ~ useEffect LimitAction0619 ~ showTokenInfo?.coin_type:', showTokenInfo?.coin_type)\n    console.log('🚀 ~ useEffect LimitAction0619 ~ targetCoin?.coin_type:', targetCoin?.coin_type)\n    console.log('🚀 ~ useEffect LimitAction0619 ~ payCoin?.coin_type:', payCoin?.coin_type)\n    console.log('🚀 ~ useEffect LimitAction0619 ~ currentProTab:', currentProTab)\n    if (showTokenInfo?.coin_type && targetCoin?.coin_type && payCoin?.coin_type) {\n      if (\n        (currentProTab == 'Buy' && fixCoinType(showTokenInfo?.coin_type) !== fixCoinType(targetCoin?.coin_type)) ||\n        (currentProTab == 'Sell' && fixCoinType(showTokenInfo?.coin_type) !== fixCoinType(payCoin?.coin_type))\n      ) {\n        onReverseClick()\n      }\n    } else if (showTokenInfo?.coin_type && targetCoin?.coin_type && !payCoin?.coin_type) {\n      onReverseClick()\n    } else if (showTokenInfo?.coin_type && !targetCoin?.coin_type && payCoin?.coin_type) {\n      onReverseClick()\n    }\n  }, [currentProTab])\n  return (\n    <VStack w={{ base: '100%', lg: isProMode ? '380px' : '470px' }} gap=\"8px\" mb=\"8px\">\n      <HStack w=\"100%\" justifyContent=\"space-between\" mb=\"8px\">\n        <TradeTab currTradeTab={TradeTabs.Limit} />\n        {!isProMode && <ChartOrderIcon />}\n      </HStack>\n      <TradeInputGroup\n        onClick={() => onReverseClick(true)}\n        from={{\n          title: 'You Pay',\n          balance: payBalanceInfo?.balanceFormat || '',\n          value: payAmount,\n          amountValue: payAmountValue,\n          onChange: value => {\n            handleAmountChange(value, true)\n          },\n          selectable: true,\n          placeholder: '0.0',\n          token: payCoin,\n          onTokenChange: (token: any) => {\n            handleSelectToken(token, true)\n          }\n        }}\n        to={{\n          title: 'You Receive',\n          balance: targetBalanceInfo?.balanceFormat || '',\n          value: targetAmount,\n          amountValue: targetAmountValue,\n          onTokenChange: (token: any) => {\n            handleSelectToken(token, false)\n          },\n          onChange: value => {\n            handleAmountChange(value, false)\n          },\n          selectable: true,\n          placeholder: '0.0',\n          token: targetCoin,\n          half: false,\n          max: false\n        }}\n        iconParams={{\n          xlinkHref: tradeIcon,\n          svgFill: 'text_caption',\n          transform: tradeIcon === '#icon-a-icon_trade' ? '' : 'rotate(90deg)',\n          fontSize: tradeIcon === '#icon-a-icon_trade' ? '12px' : '16px',\n          onMouseEnter: () => toggleTradeIcon(true),\n          onMouseLeave: () => toggleTradeIcon(false)\n        }}\n      />\n\n      <HStack\n        w=\"100%\"\n        justifyContent=\"space-between\"\n        alignItems=\"stretch\"\n        gap=\"8px\"\n        flexDirection={{ base: 'column', lg: 'row' }}\n        sx={{\n          '>div': {\n            w: {\n              base: '100% !important'\n            }\n          }\n        }}\n      >\n        <LimitPrice\n          marketPrice={marketPrice}\n          priceImpactInfoLoading={priceImpactInfoLoading}\n          priceImpactInfo={priceImpactInfo}\n          priceImpact={priceImpact}\n          inputPrice={inputPrice}\n          setInputPrice={setInputPrice}\n          handleMarketPriceClick={handleMarketPriceClick}\n        />\n        <LimitExpires />\n      </HStack>\n      {priceImpactInfo?.text && marketPrice && Number(priceImpact) !== 0 && inputPrice && (\n        <Text color={priceImpactInfo?.color} lineHeight=\"20px\" bg={priceImpactInfo?.bg} p=\"12px\" borderRadius=\"8px\">\n          {priceImpactInfo?.text}&nbsp;\n          <Text\n            color={priceImpactInfo?.color}\n            textDecoration=\"underline\"\n            as=\"span\"\n            cursor=\"pointer\"\n            onClick={() => navigate(`/swap/${payCoin?.coin_type}/${targetCoin?.coin_type}`)}\n          >\n            Cetus Swap\n          </Text>\n          &nbsp;instead.\n        </Text>\n      )}\n      <Button\n        isDisabled={buttonTextStatus?.disabled || submitOrderLoading}\n        isLoading={submitOrderLoading}\n        mt=\"-1px\"\n        w=\"100%\"\n        borderRadius=\"12px\"\n        h=\"52px\"\n        fontSize=\"18px\"\n        fontWeight=\"500\"\n        variant={isProMode ? `solid-${currentProTab?.toLocaleLowerCase()}` : 'solid'}\n        // variant=\"solid\"\n        onClick={buttonTextStatus?.text == 'Connect Wallet' ? () => onWalletModal(true) : () => setIsOpenConfirmModal(true)}\n      >\n        {isProMode && buttonTextStatus?.text == 'Place Limit Order' ? currentProTab : buttonTextStatus?.text}\n      </Button>\n      {isOpenConfirmModal && (\n        <ConfirmModal\n          confirmData={confirmData}\n          isOpen={isOpenConfirmModal}\n          onClose={() => setIsOpenConfirmModal(false)}\n          handleSubmitOrder={handleSubmitOrder}\n          submitOrderLoading={submitOrderLoading}\n        />\n      )}\n      {(payCoin || targetCoin) && (\n        <WarningTokenTipsModal\n          addToken\n          tokensInfo={warningTokenList}\n          waringModalCancel={(tokenInfo: Token[]) => {\n            tokenInfo.forEach(coin => {\n              const hasFind = coin.coin_type === payCoin?.coin_type || coin.coin_type === targetCoin?.coin_type\n              if (hasFind) {\n                handleSelectToken(undefined, coin.coin_type === payCoin?.coin_type)\n              }\n            })\n          }}\n        />\n      )}\n    </VStack>\n  )\n}\n","import { LimitOrderInfo } from '@/types/limit'\nimport { Td, Tr } from '@chakra-ui/react'\nimport React from 'react'\nimport { CoinInfoBlock } from './OrderItemBlock/CoinInfoBlock'\nimport { ExpiryBlock } from './OrderItemBlock/ExpiryBlock'\nimport { FilledSizeBlock } from './OrderItemBlock/FilledSizeBlock'\nimport { OrderActionBlock } from './OrderItemBlock/OrderActionBlock'\nimport { PriceBlock } from './OrderItemBlock/PriceBlock'\n\ntype OrderTableItemProps = {\n  orderInfo: LimitOrderInfo\n}\n\nexport function OrderTableItem({ orderInfo }: OrderTableItemProps) {\n  return (\n    <React.Fragment key={orderInfo?.order_id}>\n      <Tr\n        cursor=\"pointer\"\n        sx={{\n          td: {\n            pb: '16px !important'\n          }\n        }}\n      >\n        <Td w=\"30%\">\n          <CoinInfoBlock info={orderInfo} />\n        </Td>\n        <Td w=\"20%\" textAlign=\"right\">\n          <PriceBlock info={orderInfo} />\n        </Td>\n        <Td textAlign=\"right\">\n          <FilledSizeBlock info={orderInfo} />\n        </Td>\n        <Td textAlign=\"right\">\n          <ExpiryBlock info={orderInfo} />\n        </Td>\n\n        <Td textAlign=\"right\">\n          <OrderActionBlock orderInfo={orderInfo} />\n        </Td>\n      </Tr>\n      <Tr h=\"16px\" />\n    </React.Fragment>\n  )\n}\n","import useLimitListStore from '@/store/limit/useLimitList'\nimport { LimitOrderInfo } from '@/types/limit'\nimport { useAccountStore } from '@cetus/stores'\nimport { NoData, Pagination } from '@cetus/ui-kit'\nimport { Center, Table, Tbody, Td, Th, Thead, Tr } from '@chakra-ui/react'\nimport React, { useEffect, useState } from 'react'\nimport { SkipViewPc } from '../farms/FarmsTable'\nimport { OrderTableItem } from './OrderTableItem'\n\nexport function OrderTableList() {\n  const { currentAccount, onWalletModal } = useAccountStore()\n  const { myOrderList, orderListLoading } = useLimitListStore()\n  const pageSize = 10\n  const [paginationList, setPaginationList] = useState<LimitOrderInfo[]>([])\n  const [total, setTotal] = useState(0)\n  const [currentPage, setCurrentPage] = useState(1)\n  useEffect(() => {\n    if (myOrderList?.length > 0) {\n      setTotal(myOrderList?.length)\n      const start = (currentPage - 1) * pageSize\n      const end = start + pageSize\n      setPaginationList(myOrderList.slice(start, end))\n    }\n  }, [currentPage, myOrderList])\n  return (\n    <Table variant=\"simple_list\" w=\"100%\" sx={{ td: { h: '60px !important' } }}>\n      <Thead>\n        <Tr>\n          <Th>Order Info</Th>\n          <Th textAlign=\"right\">Price</Th>\n          <Th textAlign=\"right\">Filled Size</Th>\n          <Th textAlign=\"right\">Expiry</Th>\n          <Th textAlign=\"right\">Action</Th>\n        </Tr>\n      </Thead>\n      <Tbody>\n        {!currentAccount?.address ? (\n          <Tr\n            sx={{\n              td: {\n                bg: 'none !important',\n                p: '0 !important',\n                border: 'none !important'\n              },\n              _hover: {\n                bg: 'none !important',\n                border: 'none !important'\n              }\n            }}\n          >\n            <Td colSpan={5} w=\"100%\">\n              <NoData\n                type=\"nowallet\"\n                onboard={() => {\n                  onWalletModal(true)\n                }}\n                borderRadius=\"16px\"\n              />\n            </Td>\n          </Tr>\n        ) : orderListLoading ? (\n          <SkipViewPc itemList={[1, 2, 3]} skeletonNum={5} rowStyle={{ h: '66px' }} />\n        ) : myOrderList.length === 0 ? (\n          <Tr\n            sx={{\n              td: {\n                bg: 'none !important',\n                p: '0 !important',\n                border: 'none !important'\n              },\n              _hover: {\n                bg: 'none !important',\n                border: 'none !important'\n              }\n            }}\n          >\n            <Td colSpan={5} w=\"100%\">\n              <NoData type=\"nodata\" text=\"You don't have any open orders yet.\" borderRadius=\"16px\" />\n            </Td>\n          </Tr>\n        ) : (\n          <React.Fragment>\n            {paginationList.map((orderInfo: any) => {\n              return <OrderTableItem key={orderInfo.order_id} orderInfo={orderInfo} />\n            })}\n            {!orderListLoading && myOrderList?.length > pageSize && (\n              <Td colSpan={5} w=\"100%\" pt=\"0px !important\">\n                <Center w=\"100%\">\n                  <Pagination total={total} size={pageSize} currentPage={currentPage} onChange={setCurrentPage} />\n                </Center>\n              </Td>\n            )}\n          </React.Fragment>\n        )}\n      </Tbody>\n    </Table>\n  )\n}\n","import ProChart from '@/components/chart/ProChart'\nimport ProModeAndChart from '@/components/common/proModeAndChart'\nimport { HistoryCard } from '@/components/limit/HistoryCard'\nimport { HistoryTableList } from '@/components/limit/HistoryTableList'\nimport { LimitAction } from '@/components/limit/LimitAction'\nimport { LimitPriceChart } from '@/components/limit/LimitPriceChart'\nimport { OrdersCard } from '@/components/limit/OrdersCard'\nimport { OrderTableList } from '@/components/limit/OrderTableList'\nimport useGetLimitOrderHistory from '@/hooks/limit/useGetLimitOrderHistory'\nimport useGetMyLimitOrder from '@/hooks/limit/useGetMyLimitOrder'\nimport useLimitCancelAction from '@/hooks/limit/useLimitCancelAction'\nimport useRefreshCoinMarketPrice from '@/hooks/limit/useRefreshCoinMarketPrice'\nimport useGlobalStore from '@/store/common/global'\nimport useLimitActionStore from '@/store/limit/useLimitAction'\nimport useLimitListStore from '@/store/limit/useLimitList'\nimport useProStore from '@/store/pro'\nimport SelectTab, { Tab } from '@cetus/design/src/components/common/SelectTab'\nimport { useAccountBalance, useInterval, useRpcListener } from '@cetus/hooks'\nimport useWindowWidth from '@cetus/hooks/src/useWindowWidth'\nimport { useAccountStore } from '@cetus/stores'\nimport { RefreshButton } from '@cetus/ui-kit'\nimport { fixCoinType } from '@cetusprotocol/common-sdk'\nimport { Box, Button, HStack, VStack } from '@chakra-ui/react'\nimport { Suspense, useEffect, useMemo, useState } from 'react'\nimport { useNavigate } from 'react-router-dom'\n\nenum LimitTabType {\n  OpenOrders = 'Open Orders',\n  OrderHistory = 'Order History'\n}\n\nfunction Limit() {\n  const { currentAccount } = useAccountStore()\n  const { getLimitOrderHistory, historyOrderList, historyOrderLoading } = useGetLimitOrderHistory()\n  const { fetchMyLimitOrder } = useGetMyLimitOrder()\n  const { setMyOrderList, myOrderList, orderListLoading } = useLimitListStore()\n  const { payCoin, targetCoin, setTargetCoin, setPayCoin } = useLimitActionStore()\n  const { fetchAccountBalance } = useAccountBalance()\n  useEffect(() => {\n    if (currentAccount?.address) {\n      fetchAccountBalance()\n    }\n  }, [])\n  const { isShowTradeChart, isShowTradeOrders } = useGlobalStore()\n\n  const [pageHistoryList, setPageHistoryList] = useState<any>([])\n  const [currTab, setCurrTab] = useState<Tab<object>>({\n    label: LimitTabType.OpenOrders\n  })\n\n  const tabList = useMemo(() => {\n    console.log('🚀 ~ Limit ~ myOrderList:', myOrderList)\n\n    const list: Tab<object>[] = []\n\n    list.push({\n      label: LimitTabType.OpenOrders,\n      num: currTab.label === LimitTabType.OpenOrders && myOrderList.length > 0 && !orderListLoading ? myOrderList.length.toString() : undefined\n    })\n\n    list.push({\n      label: LimitTabType.OrderHistory,\n      num:\n        currTab.label === LimitTabType.OrderHistory && pageHistoryList.length > 0 && !historyOrderLoading\n          ? pageHistoryList.length.toString()\n          : undefined\n    })\n    return list\n  }, [currTab.label, myOrderList, pageHistoryList, historyOrderLoading, orderListLoading])\n\n  useEffect(() => {\n    getOrderList(true)\n  }, [currTab.label, currentAccount, isShowTradeOrders])\n\n  useRpcListener({\n    onRpcChange: () => {\n      getOrderList(true)\n      if (currentAccount?.address) {\n        fetchAccountBalance()\n      }\n    }\n  })\n\n  const getOrderList = (isLoading?: boolean) => {\n    if (!isShowTradeOrders) return\n    setRefreshCount(0)\n    console.log('🚀  ~ currentAccount:', currTab.label === LimitTabType.OpenOrders, currentAccount?.address)\n    if (currentAccount?.address) {\n      if (currTab.label === LimitTabType.OpenOrders) {\n        fetchMyLimitOrder(currentAccount.address, isLoading)\n      } else {\n        console.log('🚀 ~  ~ currentAccount:', currentAccount)\n        getLimitOrderHistory(currentAccount.address, isLoading)\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (currentAccount?.address && historyOrderList?.length > 0) {\n      setPageHistoryList(historyOrderList)\n    } else {\n      setPageHistoryList([])\n    }\n  }, [historyOrderList, currentAccount?.address])\n\n  useEffect(() => {\n    if (!currentAccount?.address) {\n      setMyOrderList([])\n    }\n  }, [currentAccount?.address])\n\n  const handleChangeTab = (tab: Tab<object>) => {\n    setCurrTab(tab)\n  }\n  const { windowWidth, isApp } = useWindowWidth()\n\n  const { refreshCoinMarketPrice } = useRefreshCoinMarketPrice()\n  const [refreshCount, setRefreshCount] = useState<number>(0)\n\n  // 移动端使用更长的刷新间隔\n  const refreshInterval = isApp ? 2000 : 1000\n  const maxRefreshCount = isApp ? 10 : 20\n\n  useInterval({\n    interval: refreshInterval,\n    callback: () => {\n      setRefreshCount(refreshCount + 1)\n      if (refreshCount >= maxRefreshCount) {\n        setRefreshCount(0)\n        // 每20秒 刷新一次  市场价格\n        refreshCoinMarketPrice()\n        if (currentAccount?.address) {\n          fetchAccountBalance()\n        }\n        getOrderList(false)\n      }\n    }\n  })\n\n  const [isChangeDirect, setIsChangeDirect] = useState(false)\n  const { isProMode, currentProTab, showTokenInfo, setShowTokenInfo, setAnotherTokenInfo, coinBvPriceUnit, setIsCoinSelect } = useProStore()\n  const handleToggleDirect = () => {\n    setIsChangeDirect(!isChangeDirect)\n    if (showTokenInfo && fixCoinType(showTokenInfo?.coin_type) == fixCoinType(payCoin?.coin_type || '')) {\n      setShowTokenInfo(targetCoin)\n      setAnotherTokenInfo(payCoin)\n    } else {\n      setShowTokenInfo(payCoin)\n      setAnotherTokenInfo(targetCoin)\n    }\n  }\n  const navigate = useNavigate()\n  const onCoinSelect = (item: any) => {\n    setIsCoinSelect(true)\n    setShowTokenInfo(item)\n    if (currentProTab == 'Buy') {\n      if (item?.coin_type == payCoin?.coin_type) {\n        setIsChangeDirect(!isChangeDirect)\n        setAnotherTokenInfo(targetCoin)\n        navigate(`/limit/${targetCoin?.coin_type}/${item?.coin_type}`)\n      } else if (item?.coin_type === targetCoin?.coin_type) {\n        setAnotherTokenInfo(payCoin)\n      } else {\n        navigate(`/limit/${payCoin?.coin_type}/${item?.coin_type}`)\n        setAnotherTokenInfo(payCoin)\n      }\n    } else {\n      if (item?.coin_type == targetCoin?.coin_type) {\n        setIsChangeDirect(!isChangeDirect)\n        setAnotherTokenInfo(payCoin)\n        navigate(`/limit/${item?.coin_type}/${targetCoin?.coin_type}`)\n      } else if (item?.coin_type === payCoin?.coin_type) {\n        setAnotherTokenInfo(targetCoin)\n      } else {\n        navigate(`/limit/${item?.coin_type}/${targetCoin?.coin_type}`)\n        setAnotherTokenInfo(targetCoin)\n      }\n    }\n  }\n\n  useEffect(() => {\n    return () => {\n      setIsCoinSelect(false)\n    }\n  }, [])\n  return (\n    <VStack\n      mt={windowWidth && windowWidth < 1024 ? '0px' : isProMode ? '0px' : '42px'}\n      w=\"100%\"\n      gap=\"0px\"\n      className={isProMode || isApp || isShowTradeChart || isShowTradeOrders ? '' : 'bg_img'}\n    >\n      <HStack w=\"100%\" justifyContent=\"center\" alignItems=\"start\" gap=\"0px\" flexDirection={{ base: 'column-reverse', lg: 'row' }}>\n        {/* pc chart and orders */}\n        {(isProMode || isShowTradeChart) && (\n          <ProModeAndChart\n            onCoinSelect={(item: any) => onCoinSelect(item)}\n            isChangeDirect={isChangeDirect}\n            handleToggleDirect={handleToggleDirect}\n            tokenA={payCoin}\n            tokenB={targetCoin}\n          />\n        )}\n\n        {/* pc orders(no chart) */}\n        {!isProMode && !isShowTradeChart && isShowTradeOrders && (\n          <HStack pr=\"20px\" gap=\"8px\" w={{ base: '100%', lg: 'calc(100% - 470px)' }}>\n            <VStack w=\"100%\">\n              <OrderAndHistoryTab\n                tabList={tabList}\n                currTab={currTab}\n                myOrderList={myOrderList}\n                handleChangeTab={handleChangeTab}\n                handleGetOrderList={getOrderList}\n              />\n              {currTab.label === LimitTabType.OpenOrders && <OrdersCard />}\n              {currTab.label === LimitTabType.OrderHistory && (\n                <HistoryCard historyOrderList={pageHistoryList} historyOrderLoading={historyOrderLoading} />\n              )}\n            </VStack>\n          </HStack>\n        )}\n\n        {/* input交易框 */}\n        <LimitAction />\n\n        {/* h5chart */}\n        {isApp && (isShowTradeChart || isProMode) ? (\n          isProMode ? (\n            <ProChart\n              onCoinSelect={(item: any) => onCoinSelect(item)}\n              handleToggleDirect={handleToggleDirect}\n              token={showTokenInfo}\n              tokenPriceUnit={coinBvPriceUnit}\n            />\n          ) : (\n            <VStack w=\"100%\">\n              <Suspense fallback={<div />}>\n                <LimitPriceChart baseToken={payCoin} quoteToken={targetCoin} />\n              </Suspense>\n            </VStack>\n          )\n        ) : null}\n      </HStack>\n\n      {/* pc orders(have chart) */}\n      {isShowTradeOrders && isShowTradeChart && (\n        <VStack w=\"100%\" gap=\"0\" align=\"flex-start\" mt={{ base: '8px', lg: '0px' }}>\n          <OrderAndHistoryTab\n            handleGetOrderList={() => getOrderList(true)}\n            tabList={tabList}\n            currTab={currTab}\n            myOrderList={myOrderList}\n            handleChangeTab={handleChangeTab}\n          />\n          {isApp && <Box h=\"16px\" />}\n          {currTab.label === LimitTabType.OpenOrders && (isApp ? <OrdersCard /> : <OrderTableList />)}\n          {currTab.label === LimitTabType.OrderHistory &&\n            (isApp ? (\n              <HistoryCard historyOrderList={pageHistoryList} historyOrderLoading={historyOrderLoading} />\n            ) : (\n              <HistoryTableList historyOrderList={pageHistoryList} historyOrderLoading={historyOrderLoading} />\n            ))}\n        </VStack>\n      )}\n    </VStack>\n  )\n}\n\nconst OrderAndHistoryTab = ({\n  tabList,\n  currTab,\n  myOrderList,\n  handleChangeTab,\n  handleGetOrderList\n}: {\n  tabList: any\n  currTab: any\n  myOrderList: any\n  handleGetOrderList: () => void\n  handleChangeTab: (tab: Tab<object>) => void\n}) => {\n  const { handleCancelOrder, cancelOrderLoading } = useLimitCancelAction()\n  const { isApp } = useWindowWidth()\n  const isShowCancelAllBtn = currTab.label === LimitTabType.OpenOrders && myOrderList.length > 1\n  return (\n    <HStack\n      w=\"100%\"\n      justifyContent=\"space-between\"\n      flexDirection={{ base: currTab.label === LimitTabType.OpenOrders && myOrderList.length > 1 ? 'column' : 'row', lg: 'row' }}\n      gap={{ base: '16px', lg: '8px' }}\n    >\n      <HStack\n        w={{\n          base: '100%',\n          lg: '395px'\n        }}\n        justifyContent=\"space-between\"\n      >\n        <SelectTab\n          type=\"borderTab\"\n          wrapStyle={{\n            w: '100%',\n            h: '52px',\n            gap: '32px',\n            bg: 'none',\n            border: 'none',\n            mb: { base: '0px', lg: '8px' }\n          }}\n          itemStyle={{\n            fontSize: '16px'\n          }}\n          tabList={tabList}\n          currentTab={currTab.label}\n          handleChangeTab={handleChangeTab}\n        />\n        {isApp && <RefreshButton handleRefresh={handleGetOrderList} w=\"28px\" h=\"28px\" innerStyle={{ bg: 'none' }} />}\n      </HStack>\n      {(!isApp || isShowCancelAllBtn) && (\n        <HStack gap=\"8px\" w={{ base: '100%', lg: 'unset' }}>\n          {isShowCancelAllBtn && (\n            <Button\n              onClick={() => {\n                handleCancelOrder(myOrderList)\n              }}\n              isDisabled={cancelOrderLoading}\n              isLoading={cancelOrderLoading}\n              h=\"28px\"\n              minH=\"unset\"\n              borderRadius=\"8px\"\n              fontSize=\"14px\"\n              variant=\"outline\"\n              color=\"primary_gray\"\n              w={{ base: '100%', lg: '92px' }}\n              mb={{ base: '0px', lg: '0' }}\n              _hover={{\n                color: 'text_caption'\n              }}\n            >\n              Cancel All\n            </Button>\n          )}\n          {!isApp && <RefreshButton handleRefresh={handleGetOrderList} w=\"28px\" h=\"28px\" innerStyle={{ bg: 'none' }} />}\n        </HStack>\n      )}\n    </HStack>\n  )\n}\n\nexport default Limit\n"],"names":["HistoryTableItem","historyInfo","openExpendItemObj","setOpenExpendItemObj","useState","jsxs","React","Tr","jsx","Td","CoinInfoBlock","PriceBlock","ExpiryBlock","FilledSizeBlock","StatusBlock","LimitExpendBlock","HistoryTableList","props","historyOrderList","historyOrderLoading","currentAccount","onWalletModal","useAccountStore","pageSize","paginationList","setPaginationList","total","setTotal","currentPage","setCurrentPage","useEffect","start","end","Table","Thead","Th","Tbody","SkipViewPc","NoData","Center","Pagination","store","set","get","coin","expiresIn","customExpiresVal","refreshPriceLoading","useLimitActionStore","create","useGetPairPrice","baseCoinType","quoteCoinType","getTokenPrice","useTokenPrice","basePrice","quotePrice","priceInfo","useMemo","price","d","displayPrice","getPrice","useRefreshCoinMarketPrice","payCoin","targetCoin","setRefreshPriceLoading","fetchTokenPrices","list","useLimitAddAction","refreshCoinMarketPrice","fetchAccountBalance","useAccountBalance","fetchMyLimitOrder","useGetMyLimitOrder","signAndExecuteTransaction","useTransaction","limitSdk","useSdk","findBestRouters","useFindBestRouting","getTokenAmountValue","navigate","useNavigate","pay","target","useParams","useGetToken","fetchTokenInfo","setCurrentProTab","currentProTab","useProStore","quoteToken","setPayCoin","setTargetCoin","setQuoteToken","setExpiresIn","payAmount","setPayAmount","targetAmount","setTargetAmount","fixPayCoin","setFixPayCoin","useMarketPrice","setUseMarketPrice","inputPrice","setInputPrice","marketPrice","payBalanceInfo","useGetTokenBalance","targetBalanceInfo","payAmountValue","targetAmountValue","uuid","setUuid","uuidRef","useRef","routerData","setRouterData","priceImpact","setPriceImpact","payAmountRef","targetAmountRef","envConfigs","token","findAvailableRouter","payCoinRank","targetCoinRank","newUuid","providersKeys","AggregatorDexMap","key","value","result","toDecimalsAmount","calculatePriceImpact","formatNumber","handleAmountChange","priceImpactInfo","setPriceImpactInfo","priceImpactInfoLoading","setPriceImpactInfoLoading","impact","isGtZero","ratioAbs","impactInfo","_a","_b","handleMarketPriceClick","isUse","amount","handleSelectToken","isPay","resetInputAmount","fixCoinType","onReverseClick","isClickToggle","submitOrderLoading","setSubmitOrderLoading","getExpiresTime","time","showInsufficientBalanceToast","useInsufficientBalanceToast","transactionConfirmation","clmmSdk","addToken","useTokenStore","handleSubmitOrder","toastInfo","status","balanceChanges","description","info","expired_ts","coinsInfo","payCoinLocalDecimals","targetCoinLocalDecimals","payCoinChainDecimals","targetCoinChainDecimals","params","txb","res","error","minOrderAmount","amountUsd","buttonTextStatus","btnInfo","AggregatorServerErrorCode","ConfirmModal","confirmData","isOpen","onClose","reseverPrice","Modal","ModalOverlay","ModalContent","ModalHeader","Heading","ModalCloseButton","ModalBody","VStack","TradeConfirmAmountInfo","HStack","Text","Skeleton","Block","Button","CustomExpiryModal","isApp","useWindowWidth","setCustomExpiresVal","hourVal","setHourVal","minuteVal","setMinuteVal","handleInputHourChange","event","handleInputMinuteChange","timeInfo","setTimeInfo","calculateTime","hours","minutes","totalMinutes","h","m","btnDisabled","clickSetPeriod","InputBox","Input","LimitExpires","isOpenExpiryModal","setIsOpenExpiryModal","expiresList","CetusTooltip","Icon","MenuDropBlock","item","LimitPrice","textEllipses","Spinner","formatPercentage","NumericFormatInput","isDecimalWithZeros","formatNumberWithDown","LimitAction","tradeIcon","setTradeIcon","toggleTradeIcon","hovered","isOpenConfirmModal","setIsOpenConfirmModal","warningTokenList","showTokenInfo","isProMode","currentProTabUpdateWith","TradeTab","TradeTabs","ChartOrderIcon","TradeInputGroup","WarningTokenTipsModal","tokenInfo","OrderTableItem","orderInfo","OrderActionBlock","OrderTableList","myOrderList","orderListLoading","useLimitListStore","Limit","getLimitOrderHistory","useGetLimitOrderHistory","setMyOrderList","isShowTradeChart","isShowTradeOrders","useGlobalStore","pageHistoryList","setPageHistoryList","currTab","setCurrTab","tabList","getOrderList","useRpcListener","isLoading","setRefreshCount","handleChangeTab","tab","windowWidth","refreshCount","refreshInterval","maxRefreshCount","useInterval","isChangeDirect","setIsChangeDirect","setShowTokenInfo","setAnotherTokenInfo","coinBvPriceUnit","setIsCoinSelect","handleToggleDirect","onCoinSelect","ProModeAndChart","OrderAndHistoryTab","OrdersCard","HistoryCard","ProChart","Suspense","LimitPriceChart","Box","handleGetOrderList","handleCancelOrder","cancelOrderLoading","useLimitCancelAction","isShowCancelAllBtn","SelectTab","RefreshButton"],"mappings":"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"}