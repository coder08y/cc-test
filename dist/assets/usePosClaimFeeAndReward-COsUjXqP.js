import{f as q,d as w,g as O,r as v,bq as G,Q as I,Z as U,br as H}from"./index-BpSfzecM.js";import{d as D,B as R}from"./cross-DJ28FxNa.js";import{M as E}from"./msafe-BzcjPV-e.js";import{s as j}from"./dlmm-DdxfaipV.js";import{u as k}from"./LiquidityValueBlock-CJnPKpci.js";function M(){const f=q("burn"),S=o=>{const{posId:c,clmmPool:u,coinTypeA:s,coinTypeB:_}=o,d={pos_id:c,pool_id:u,coin_type_a:s,coin_type_b:_};return f.Burn.createBurnPayload(d)},e=o=>{const{poolAddress:c,posId:u,coinTypeA:s,coinTypeB:_,account:d,rewarderCoinTypes:r}=o,l=f.Burn.createCollectFeesPayload([{pool_id:c,pos_id:u,coin_type_a:s,coin_type_b:_,account:d}]);return f.Burn.createCollectRewardsPayload([{pool_id:c,pos_id:u,coin_type_a:s,coin_type_b:_,rewarder_coin_types:r,account:d}],l)},m=o=>{var r,l;console.log("ðŸš€ðŸš€ðŸš€ ~ file: usePositionList.ts:71 ~ getCoinAmountFromLiquidity ~ params:",o);const c=O.tickIndexToSqrtPriceX64(o.lowerTick),u=O.tickIndexToSqrtPriceX64(o.upperTick),s=v.getCoinAmountFromLiquidity(new D.BN(o.liquidity),new D.BN(o.currentSqrtPrice),c,u,o.roundUp),_=G(s.coin_amount_a.toString(),(r=o.defaultCoinA)==null?void 0:r.decimals),d=G(s.coin_amount_b.toString(),(l=o.defaultCoinB)==null?void 0:l.decimals);return{coinAAmount:_,coinBAmount:d}};return{getBurnTxPayload:S,getBurnClaimTxPayload:e,getBurnPositionAmountByPool:async(o,c)=>{const{poolAddress:u}=o,s=await f.Burn.getPoolBurnPositionList(u)||[];console.log("ðŸš€ðŸš€ðŸš€ ~ file: useBurn.ts:92 ~ getBurnPositionAmountByPool ~ positionList:",s);let _=w(0),d=w(0);for(let r=0;r<(s==null?void 0:s.length);r++){const l=s[r],{tick_lower_index:B,tick_upper_index:T,liquidity:P}=l,g=o==null?void 0:o.tokenA,n=o==null?void 0:o.tokenB,{coinAAmount:y,coinBAmount:A}=m({lowerTick:B,upperTick:T,currentSqrtPrice:c,roundUp:!1,liquidity:P,defaultCoinA:g,defaultCoinB:n});_=w(_).add(w(y)),d=w(d).add(w(A))}return{totalA:_.toString(),totalB:d.toString()}}}}function z(){const{getTokenAmountValue:f}=I(),S=(o,c,u,s,_,d)=>{if(!(o!=null&&o.length))return{total:"0",rewardAndFeeList:[]};let r=w(0),l=w(0);const B=[],T=o.filter(n=>n.posType==="dlmm"),P=o.filter(n=>n.posType!=="dlmm");P&&P.map(n=>{const y=c[n==null?void 0:n.posId],A=u[n==null?void 0:n.posId]||[],p=s?s[n==null?void 0:n.id]:[],x=A.concat(p);console.log(p,s,n,o,"posFarmsData");let h=w(0);const t=[];if(y){const a=e(n==null?void 0:n.displayTokenA,y==null?void 0:y.displayFeeOwedA),b=e(n==null?void 0:n.displayTokenB,y==null?void 0:y.displayFeeOwedB);a&&(t.push(a),h=m(h,a.amountUSD)),b&&(t.push(b),h=m(h,b.amountUSD))}x.forEach(a=>{var b;if(Number(a==null?void 0:a.display_amount_owed)>0){const C=e(a==null?void 0:a.token,a==null?void 0:a.display_amount_owed,(b=a==null?void 0:a.token)==null?void 0:b.coin_type);C&&(t.push(C),h=m(h,C.amountUSD))}}),B.push(...t),l=l.plus(h);const i=w(h.toFixed(2));return r=r.plus(i),{...n,totalUsd:h.toString()}}),T&&T.forEach(n=>{let y=w(0);const A=[],p=_==null?void 0:_[n.id],h=(d==null?void 0:d[n.id])||[];if(p){const i=e(n==null?void 0:n.displayTokenA,p==null?void 0:p.displayFeeOwedA),a=e(n==null?void 0:n.displayTokenB,p==null?void 0:p.displayFeeOwedB);i&&(A.push(i),y=m(y,i.amountUSD)),a&&(A.push(a),y=m(y,a.amountUSD))}h.forEach(i=>{var a;if(Number(i==null?void 0:i.display_amount_owed)>0){const b=e(i==null?void 0:i.token,i==null?void 0:i.display_amount_owed,(a=i==null?void 0:i.token)==null?void 0:a.coin_type);b&&(A.push(b),y=m(y,b.amountUSD))}}),B.push(...A),l=l.plus(y);const t=w(y.toFixed(2));return r=r.plus(t),{...n,totalUsd:y.toString()}});const g=F(B);return console.log("ðŸš€ ~ calculatePendingYield ~  total,:",g,l.toString(),r.toString()),{total:(g==null?void 0:g.length)>0&&l.eq(0)?"--":r.eq(0)?l.toString():r.toFixed(2),rewardAndFeeList:g}},e=(o,c,u)=>{if(!o||!c)return null;const s=u||o.coin_type;if(!s)return null;const _=f(s,c);return{coin_address:U(s,!1),amount:c,amountUSD:w(c).gt(0)&&w(_).lte(0)?"--":_,token:o}},m=(o,c)=>!c||c==="--"?o:o.plus(c),F=o=>{const c={};return o.forEach(u=>{var r,l;const{coin_address:s,amount:_,amountUSD:d}=u;c[s]||(c[s]={...u,amount:"0",amountUSD:"0"}),d=="--"?c[s].amountUSD="--":c[s].amountUSD=c[s].amountUSD=="--"?"--":w((r=c[s])==null?void 0:r.amountUSD).plus(d||0).toString(),c[s].amount=w((l=c[s])==null?void 0:l.amount).plus(_||0).toString()}),Object.values(c).filter(u=>Number(u.amount)>0).sort((u,s)=>w(s.amountUSD=="--"?0:s.amountUSD).minus(u.amountUSD=="--"?0:u.amountUSD).toNumber())};return{calculatePendingYield:S}}function Y(){const f=q("dlmm");return{collectRewardPayload:(m,F)=>{const o=m.map(u=>{const{dlmmPool:s,positionId:_,rewardCoins:d,coinTypeA:r,coinTypeB:l}=u;return{pool_id:s,position_id:_,reward_coins:d,coin_type_a:r,coin_type_b:l}});return f==null?void 0:f.Position.collectRewardPayload(o,F)},collectRewardAndFeePayload:(m,F)=>{const o=m.map(u=>{const{dlmmPool:s,positionId:_,rewardCoins:d,coinTypeA:r,coinTypeB:l}=u;return{pool_id:s,position_id:_,reward_coins:d,coin_type_a:r,coin_type_b:l}});return f.Position.collectRewardAndFeePayload(o,F)}}}const L=f=>f.startsWith("0x")?f.slice(2):f;function J(f){const S=[];for(const e of f){const m={objectId:(e==null?void 0:e.objectId)||(e==null?void 0:e.object_id),index:e==null?void 0:e.index,sqrtPrice:(e==null?void 0:e.sqrtPrice)||(e==null?void 0:e.sqrt_price),liquidityNet:(e==null?void 0:e.liquidityNet)||(e==null?void 0:e.liquidity_net),liquidityGross:(e==null?void 0:e.liquidityGross)||(e==null?void 0:e.liquidity_gross),feeGrowthOutsideA:(e==null?void 0:e.feeGrowthOutsideA)||(e==null?void 0:e.fee_growth_outside_a),feeGrowthOutsideB:(e==null?void 0:e.feeGrowthOutsideB)||(e==null?void 0:e.fee_growth_outside_b),rewardersGrowthOutside:(e==null?void 0:e.rewardersGrowthOutside)||(e==null?void 0:e.rewarders_growth_outside)},F={objectId:m.objectId,index:Number(H(BigInt(m.index)).toString()),sqrtPrice:m.sqrtPrice,liquidityNet:new R(BigInt.asIntN(128,BigInt(BigInt(m.liquidityNet.toString()))).toString()),liquidityGross:m.liquidityGross,feeGrowthOutsideA:m.feeGrowthOutsideA,feeGrowthOutsideB:m.feeGrowthOutsideB,rewardersGrowthOutside:[new R(m.rewardersGrowthOutside[0]),new R(m.rewardersGrowthOutside[1]),new R(m.rewardersGrowthOutside[2])]};S.push(F)}return S}function K(){const f=q("clmm"),S=q("dlmm"),e=q("farms"),m=q("burn"),{getBurnClaimTxPayload:F}=M(),{getHarvestFarmsTxPayload:o}=k(),{collectRewardAndFeePayload:c}=Y(),u=async d=>{const{posType:r,id:l,clmmPool:B,coinTypeA:T,coinTypeB:P,rewarderCoinTypes:g,account:n,dlmmPool:y}=d;let A,p;if(r==="clmm"){const x={pool_id:B,pos_id:l,rewarder_coin_types:g,coin_type_a:T,coin_type_b:P,collect_fee:!0};A=await f.Rewarder.collectRewarderPayload(x),p={action:E.ClaimFeeAndMining,txbParams:x}}else if(r==="farms"){const x={coin_type_a:T,coin_type_b:P,clmm_pool_id:B,position_nft_id:l,clmm_rewarder_types:g,collect_fee:!0};A=await e.Farms.claimFeeAndClmmReward(x),p={action:"FarmingClaimFeeAndReward",txbParams:x}}else if(r==="burn")A=F({poolAddress:B,posId:l,coinTypeA:T,coinTypeB:P,account:n,rewarderCoinTypes:g});else if(r==="dlmm"){const x={pool_id:y,pos_id:l,rewarder_coin_types:g,coin_type_a:T,coin_type_b:P};A=c([{dlmmPool:y,positionId:l,rewardCoins:g,coinTypeA:T,coinTypeB:P}]),p={action:"DlmmClaimFeeAndReward",txbParams:x}}return{tx:A,msafeParams:p}};return{getPosClaimFeeAndRewardAndFarmsTxPayload:async d=>{console.log("ðŸš€ ~ usePosClaimFeeAndReward ~ params:",d);const{id:r,farmsPool:l}=d;let B;const{tx:T,msafeParams:P}=await u(d);if(B=T,l){const{tx:g,msafeParams:n}=await o(l,r,B);return{tx:g,msafeParams:n}}return console.log("ðŸš€ ~ getPosClaimFeeAndRewardAndFarmsTxPayload ~ { tx, msafeParams }:",{tx:T,msafeParams:P}),{tx:T,msafeParams:P}},getPosClaimFeeAndRewardTxPayload:u,getBatchHarvestFeeAndRewardsTxPayload:async(d,r,l)=>{console.log("ðŸš€ ~ getBatchHarvestFeeAndRewardsTxPayload ~ posBaseList:",d,r,l);const B=[],T=[],P=[],g=d.filter(t=>t.posType!=="dlmm").map(t=>t),n=d.filter(t=>t.posType==="dlmm").map(t=>t),y=j(n,1800),A=[];y.forEach(t=>{const i=[];t.forEach(a=>{var C;const b=((C=r[a.id])==null?void 0:C.map(N=>U(N.coin_address,!0)))||[];i.push({pool_id:a.dlmmPool,position_id:a.id,reward_coins:b,coin_type_a:a.coinTypeA,coin_type_b:a.coinTypeB})}),A.push(i)}),g.forEach(t=>{var a;const i=((a=r[t.posId])==null?void 0:a.map(b=>U(b.coin_address,!0)))||[];t.posType=="clmm"?B.push({pool_id:t.clmmPool,pos_id:t.id,collect_fee:!0,rewarder_coin_types:i,coin_type_a:L(t.coinTypeA),coin_type_b:L(t.coinTypeB)}):t.posType=="farms"?(console.log("ðŸš€ ~ getBatchHarvestFeeAndRewardsTxPayload ~ clmm rewarderCoinTypes:",{position:t,posRewardsData:r}),T.push({pool_id:t.farmsPool||"",position_nft_id:t.id,clmm_pool_id:t.clmmPool,collect_fee:!0,collect_farms_rewarder:!0,clmm_rewarder_types:[],coin_type_a:t.coinTypeA,coin_type_b:t.coinTypeB})):P.push({pos_id:(t==null?void 0:t.id)||"",pool_id:t.clmmPool,coin_type_a:t.coinTypeA,coin_type_b:t.coinTypeB,rewarder_coin_types:i,account:l})});let p=await e.Farms.batchHarvestAndClmmFeePayload(T,B);const x=[];for(let t=0;t<P.length;t++){const i=P[t];(i==null?void 0:i.rewarder_coin_types.length)>0&&x.push(i)}p=m.Burn.createCollectFeesPayload(P,p),p=m.Burn.createCollectRewardsPayload(x,p),console.log("ðŸš€ ~ getBatchHarvestFeeAndRewardsTxPayload ~ batchDlmmPosOptionList:",A);const h=[p];return A.forEach((t,i)=>{if(i===0)p=S.Position.collectRewardAndFeePayload(t,p);else{const a=S.Position.collectRewardAndFeePayload(t);h.push(a)}}),{txs:h}}}}export{K as a,Y as b,M as c,J as g,z as u};
