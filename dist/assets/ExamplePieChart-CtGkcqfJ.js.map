{"version":3,"file":"ExamplePieChart-CtGkcqfJ.js","sources":["../../src/components/common/aprTooltip/ExamplePieChart.tsx"],"sourcesContent":["import { Box, HStack, Text, VStack } from '@chakra-ui/react'\nimport { useCallback } from 'react'\nimport { Cell, Legend, Pie, PieChart } from 'recharts'\n\nconst ExamplePieChart = ({ originData }: { originData: any }) => {\n  const renderLegend = useCallback(\n    (props: any) => {\n      const { payload } = props\n      return (\n        <VStack w=\"calc(100% - 72px)\" align=\"flex-start\" justify=\"center\" gap=\"12px\">\n          {payload.map((entry, index) => (\n            <HStack w=\"100%\" key={`item-${index}`} gap=\"0px\">\n              {/* 图例颜色 */}\n              <Box\n                style={{\n                  width: '12px',\n                  height: '12px',\n                  minWidth: '12px',\n                  minHeight: '12px',\n                  backgroundColor: entry.color,\n                  marginRight: '8px',\n                  borderRadius: '50%'\n                }}\n              />\n              {/* 名称和数值 */}\n              <HStack w=\"100%\" justify=\"space-between\">\n                <Text fontSize=\"12px\" whiteSpace=\"nowrap\">\n                  {entry.value}\n                </Text>\n                <Text fontSize=\"12px\" color=\"text_caption\" textAlign=\"right\">\n                  {originData?.[index]?.displayValue}\n                </Text>\n              </HStack>\n            </HStack>\n          ))}\n        </VStack>\n      )\n    },\n    [originData]\n  )\n\n  return (\n    <PieChart width={320} height={originData.length <= 3 ? 70 : 70 + (originData?.length - 3) * 25}>\n      <Pie\n        data={originData}\n        cx=\"10%\"\n        cy=\"50%\"\n        innerRadius={20} // 设置内半径，创建空心效果\n        outerRadius={32}\n        fill=\"#8884d8\"\n        dataKey=\"value\"\n        strokeWidth={0}\n        isAnimationActive={false}\n      >\n        {originData.map((entry, index) => (\n          <Cell key={`cell-${index}`} fill={entry?.color} />\n        ))}\n      </Pie>\n      <Legend\n        content={renderLegend}\n        layout=\"horizontal\" // Set layout to horizontal\n        align=\"center\" // Align the Legend to the center\n        verticalAlign=\"middle\"\n        wrapperStyle={{ left: '80px' }}\n      />\n    </PieChart>\n  )\n}\n\nexport default ExamplePieChart\n"],"names":["ExamplePieChart","originData","renderLegend","useCallback","props","payload","jsx","VStack","entry","index","jsxs","HStack","Box","Text","_a","PieChart","Pie","Cell","Legend"],"mappings":"2PAIA,MAAMA,EAAkB,CAAC,CAAE,WAAAC,KAAsC,CAC/D,MAAMC,EAAeC,EAAAA,YAClBC,GAAe,CACd,KAAM,CAAE,QAAAC,GAAYD,EACpB,OACEE,MAACC,GAAO,EAAE,oBAAoB,MAAM,aAAa,QAAQ,SAAS,IAAI,OACnE,WAAQ,IAAI,CAACC,EAAOC,IAAA,OACnBC,OAAAA,EAAAA,KAACC,GAAO,EAAE,OAA6B,IAAI,MAEzC,SAAA,CAAAL,EAAAA,IAACM,EAAA,CACC,MAAO,CACL,MAAO,OACP,OAAQ,OACR,SAAU,OACV,UAAW,OACX,gBAAiBJ,EAAM,MACvB,YAAa,MACb,aAAc,KAAA,CAChB,CAAA,EAGFE,EAAAA,KAACC,EAAA,CAAO,EAAE,OAAO,QAAQ,gBACvB,SAAA,CAAAL,MAACO,GAAK,SAAS,OAAO,WAAW,SAC9B,WAAM,MACT,EACAP,EAAAA,IAACO,EAAA,CAAK,SAAS,OAAO,MAAM,eAAe,UAAU,QAClD,UAAAC,EAAAb,GAAA,YAAAA,EAAaQ,KAAb,YAAAK,EAAqB,YAAA,CACxB,CAAA,CAAA,CACF,CAAA,CAAA,EArBoB,QAAQL,CAAK,EAsBnC,EACD,CAAA,CACH,CAEJ,EACA,CAACR,CAAU,CAAA,EAGb,OACES,EAAAA,KAACK,EAAA,CAAS,MAAO,IAAK,OAAQd,EAAW,QAAU,EAAI,GAAK,KAAMA,GAAA,YAAAA,EAAY,QAAS,GAAK,GAC1F,SAAA,CAAAK,EAAAA,IAACU,EAAA,CACC,KAAMf,EACN,GAAG,MACH,GAAG,MACH,YAAa,GACb,YAAa,GACb,KAAK,UACL,QAAQ,QACR,YAAa,EACb,kBAAmB,GAElB,SAAAA,EAAW,IAAI,CAACO,EAAOC,IACtBH,EAAAA,IAACW,EAAA,CAA2B,KAAMT,GAAA,YAAAA,EAAO,KAAA,EAA9B,QAAQC,CAAK,EAAwB,CACjD,CAAA,CAAA,EAEHH,EAAAA,IAACY,EAAA,CACC,QAAShB,EACT,OAAO,aACP,MAAM,SACN,cAAc,SACd,aAAc,CAAE,KAAM,MAAA,CAAO,CAAA,CAC/B,EACF,CAEJ"}